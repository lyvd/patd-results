{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism-dev/call.go"
                },
                "region": {
                  "startLine": 18,
                  "endLine": 18,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tcategory string\n\trepo     string\n\tparallel int\n\ttimeout  int\n}\n\nfunc runDevCall(cmd *cobra.Command, args *devCallArgs) error {\n",
                    "rendered": {
                      "text": "\tcategory string\n\trepo     string\n\tparallel int\n\ttimeout  int\n}\n\nfunc runDevCall(cmd *cobra.Command, args *devCallArgs) error {\n",
                      "markdown": "`\tcategory string\n\trepo     string\n\tparallel int\n\ttimeout  int\n}\n\nfunc runDevCall(cmd *cobra.Command, args *devCallArgs) error {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism-dev/gitignore.go"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 34,
                  "endLine": 188,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\tp := fromSplit(cwd)\n\tfor !exists(p + \"/.git\") {\n\t\tif len(cwd) == 1 {\n\t\t\treturn \"\", errors.New(\"not in a git repository\")\n\t\t}\n\t\tcwd = cwd[:len(cwd)-1]\n\t\tp = fromSplit(cwd)\n",
                    "rendered": {
                      "text": "\tp := fromSplit(cwd)\n\tfor !exists(p + \"/.git\") {\n\t\tif len(cwd) == 1 {\n\t\t\treturn \"\", errors.New(\"not in a git repository\")\n\t\t}\n\t\tcwd = cwd[:len(cwd)-1]\n\t\tp = fromSplit(cwd)\n",
                      "markdown": "`\tp := fromSplit(cwd)\n\tfor !exists(p + \"/.git\") {\n\t\tif len(cwd) == 1 {\n\t\t\treturn \"\", errors.New(\"not in a git repository\")\n\t\t}\n\t\tcwd = cwd[:len(cwd)-1]\n\t\tp = fromSplit(cwd)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism-dev/find.go"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 3,
                  "endLine": 96,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\t\t\t\treturn nil\n\t\t\t\t}\n\t\t\t\tcli.Print(\"Editing\", path)\n\t\t\t\tcmd := exec.Command(args.editor, path)\n\t\t\t\tcmd.Stdout = os.Stdout\n\t\t\t\tcmd.Stderr = os.Stderr\n\t\t\t\tcmd.Stdin = os.Stdin\n",
                    "rendered": {
                      "text": "\t\t\t\t\treturn nil\n\t\t\t\t}\n\t\t\t\tcli.Print(\"Editing\", path)\n\t\t\t\tcmd := exec.Command(args.editor, path)\n\t\t\t\tcmd.Stdout = os.Stdout\n\t\t\t\tcmd.Stderr = os.Stderr\n\t\t\t\tcmd.Stdin = os.Stdin\n",
                      "markdown": "`\t\t\t\t\treturn nil\n\t\t\t\t}\n\t\t\t\tcli.Print(\"Editing\", path)\n\t\t\t\tcmd := exec.Command(args.editor, path)\n\t\t\t\tcmd.Stdout = os.Stdout\n\t\t\t\tcmd.Stderr = os.Stderr\n\t\t\t\tcmd.Stdin = os.Stdin\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism-dev/README.md"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 67,
                  "endLine": 87,
                  "endColumn": 73,
                  "snippet": {
                    "text": "To replace the version of the \"base64\" crate in every `Cargo.toml` file:\n\n```shell\nextism-dev find --filename 'Cargo.toml' 'base64 = \".*\"' --replace 'base64 = \"1.0.0\"'\n```\n\n",
                    "rendered": {
                      "text": "To replace the version of the \"base64\" crate in every `Cargo.toml` file:\n\n```shell\nextism-dev find --filename 'Cargo.toml' 'base64 = \".*\"' --replace 'base64 = \"1.0.0\"'\n```\n\n",
                      "markdown": "`To replace the version of the \"base64\" crate in every `Cargo.toml` file:\n\n```shell\nextism-dev find --filename 'Cargo.toml' 'base64 = \".*\"' --replace 'base64 = \"1.0.0\"'\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism-dev/README.md"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 41,
                  "endLine": 87,
                  "endColumn": 47,
                  "snippet": {
                    "text": "To replace the version of the \"base64\" crate in every `Cargo.toml` file:\n\n```shell\nextism-dev find --filename 'Cargo.toml' 'base64 = \".*\"' --replace 'base64 = \"1.0.0\"'\n```\n\n",
                    "rendered": {
                      "text": "To replace the version of the \"base64\" crate in every `Cargo.toml` file:\n\n```shell\nextism-dev find --filename 'Cargo.toml' 'base64 = \".*\"' --replace 'base64 = \"1.0.0\"'\n```\n\n",
                      "markdown": "`To replace the version of the \"base64\" crate in every `Cargo.toml` file:\n\n```shell\nextism-dev find --filename 'Cargo.toml' 'base64 = \".*\"' --replace 'base64 = \"1.0.0\"'\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism-dev/README.md"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 31,
                  "endLine": 84,
                  "endColumn": 37,
                  "snippet": {
                    "text": "extism-dev find --repo 'extism/extism' base64\n```\n\nTo replace the version of the \"base64\" crate in every `Cargo.toml` file:\n\n```shell\nextism-dev find --filename 'Cargo.toml' 'base64 = \".*\"' --replace 'base64 = \"1.0.0\"'\n",
                    "rendered": {
                      "text": "extism-dev find --repo 'extism/extism' base64\n```\n\nTo replace the version of the \"base64\" crate in every `Cargo.toml` file:\n\n```shell\nextism-dev find --filename 'Cargo.toml' 'base64 = \".*\"' --replace 'base64 = \"1.0.0\"'\n",
                      "markdown": "`extism-dev find --repo 'extism/extism' base64\n```\n\nTo replace the version of the \"base64\" crate in every `Cargo.toml` file:\n\n```shell\nextism-dev find --filename 'Cargo.toml' 'base64 = \".*\"' --replace 'base64 = \"1.0.0\"'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism-dev/README.md"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 39,
                  "endLine": 81,
                  "endColumn": 45,
                  "snippet": {
                    "text": "Search for files that contain `base64` in `extism/extism`:\n\n```shell\nextism-dev find --repo 'extism/extism' base64\n```\n\nTo replace the version of the \"base64\" crate in every `Cargo.toml` file:\n",
                    "rendered": {
                      "text": "Search for files that contain `base64` in `extism/extism`:\n\n```shell\nextism-dev find --repo 'extism/extism' base64\n```\n\nTo replace the version of the \"base64\" crate in every `Cargo.toml` file:\n",
                      "markdown": "`Search for files that contain `base64` in `extism/extism`:\n\n```shell\nextism-dev find --repo 'extism/extism' base64\n```\n\nTo replace the version of the \"base64\" crate in every `Cargo.toml` file:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism-dev/README.md"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 31,
                  "endLine": 78,
                  "endColumn": 37,
                  "snippet": {
                    "text": "extism-dev find base64\n```\n\nSearch for files that contain `base64` in `extism/extism`:\n\n```shell\nextism-dev find --repo 'extism/extism' base64\n",
                    "rendered": {
                      "text": "extism-dev find base64\n```\n\nSearch for files that contain `base64` in `extism/extism`:\n\n```shell\nextism-dev find --repo 'extism/extism' base64\n",
                      "markdown": "`extism-dev find base64\n```\n\nSearch for files that contain `base64` in `extism/extism`:\n\n```shell\nextism-dev find --repo 'extism/extism' base64\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism-dev/README.md"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 16,
                  "endLine": 75,
                  "endColumn": 22,
                  "snippet": {
                    "text": "Search for files that contain `base64`:\n\n```shell\nextism-dev find base64\n```\n\nSearch for files that contain `base64` in `extism/extism`:\n",
                    "rendered": {
                      "text": "Search for files that contain `base64`:\n\n```shell\nextism-dev find base64\n```\n\nSearch for files that contain `base64` in `extism/extism`:\n",
                      "markdown": "`Search for files that contain `base64`:\n\n```shell\nextism-dev find base64\n```\n\nSearch for files that contain `base64` in `extism/extism`:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism-dev/README.md"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 31,
                  "endLine": 72,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\n`extism-dev find` can be used to search all the repos at once and do regex-based text substitution.\n\nSearch for files that contain `base64`:\n\n```shell\nextism-dev find base64\n",
                    "rendered": {
                      "text": "\n`extism-dev find` can be used to search all the repos at once and do regex-based text substitution.\n\nSearch for files that contain `base64`:\n\n```shell\nextism-dev find base64\n",
                      "markdown": "`\n`extism-dev find` can be used to search all the repos at once and do regex-based text substitution.\n\nSearch for files that contain `base64`:\n\n```shell\nextism-dev find base64\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism-dev/README.md"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 53,
                  "endLine": 70,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\n### Find\n\n`extism-dev find` can be used to search all the repos at once and do regex-based text substitution.\n\nSearch for files that contain `base64`:\n\n",
                    "rendered": {
                      "text": "\n### Find\n\n`extism-dev find` can be used to search all the repos at once and do regex-based text substitution.\n\nSearch for files that contain `base64`:\n\n",
                      "markdown": "`\n### Find\n\n`extism-dev find` can be used to search all the repos at once and do regex-based text substitution.\n\nSearch for files that contain `base64`:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism-dev/README.md"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 10,
                  "endLine": 87,
                  "endColumn": 16,
                  "snippet": {
                    "text": "To replace the version of the \"base64\" crate in every `Cargo.toml` file:\n\n```shell\nextism-dev find --filename 'Cargo.toml' 'base64 = \".*\"' --replace 'base64 = \"1.0.0\"'\n```\n\n",
                    "rendered": {
                      "text": "To replace the version of the \"base64\" crate in every `Cargo.toml` file:\n\n```shell\nextism-dev find --filename 'Cargo.toml' 'base64 = \".*\"' --replace 'base64 = \"1.0.0\"'\n```\n\n",
                      "markdown": "`To replace the version of the \"base64\" crate in every `Cargo.toml` file:\n\n```shell\nextism-dev find --filename 'Cargo.toml' 'base64 = \".*\"' --replace 'base64 = \"1.0.0\"'\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism-dev/README.md"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 38,
                  "endLine": 82,
                  "snippet": {
                    "text": "Search for files that contain `base64` in `extism/extism`:\n\n```shell\nextism-dev find --repo 'extism/extism' base64\n```\n\nTo replace the version of the \"base64\" crate in every `Cargo.toml` file:\n\n",
                    "rendered": {
                      "text": "Search for files that contain `base64` in `extism/extism`:\n\n```shell\nextism-dev find --repo 'extism/extism' base64\n```\n\nTo replace the version of the \"base64\" crate in every `Cargo.toml` file:\n\n",
                      "markdown": "`Search for files that contain `base64` in `extism/extism`:\n\n```shell\nextism-dev find --repo 'extism/extism' base64\n```\n\nTo replace the version of the \"base64\" crate in every `Cargo.toml` file:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism-dev/README.md"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 10,
                  "endLine": 81,
                  "endColumn": 16,
                  "snippet": {
                    "text": "Search for files that contain `base64` in `extism/extism`:\n\n```shell\nextism-dev find --repo 'extism/extism' base64\n```\n\nTo replace the version of the \"base64\" crate in every `Cargo.toml` file:\n",
                    "rendered": {
                      "text": "Search for files that contain `base64` in `extism/extism`:\n\n```shell\nextism-dev find --repo 'extism/extism' base64\n```\n\nTo replace the version of the \"base64\" crate in every `Cargo.toml` file:\n",
                      "markdown": "`Search for files that contain `base64` in `extism/extism`:\n\n```shell\nextism-dev find --repo 'extism/extism' base64\n```\n\nTo replace the version of the \"base64\" crate in every `Cargo.toml` file:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism-dev/README.md"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 10,
                  "endLine": 75,
                  "endColumn": 16,
                  "snippet": {
                    "text": "Search for files that contain `base64`:\n\n```shell\nextism-dev find base64\n```\n\nSearch for files that contain `base64` in `extism/extism`:\n",
                    "rendered": {
                      "text": "Search for files that contain `base64`:\n\n```shell\nextism-dev find base64\n```\n\nSearch for files that contain `base64` in `extism/extism`:\n",
                      "markdown": "`Search for files that contain `base64`:\n\n```shell\nextism-dev find base64\n```\n\nSearch for files that contain `base64` in `extism/extism`:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism-dev/README.md"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 3,
                  "endLine": 69,
                  "snippet": {
                    "text": "- `EXTISM_DEV_REPO_CATEGORY` - the category of the target repo\n- `$EXTISM_DEV_ROOT/.bin` is also added to the `$PATH` while executing commands\n\n### Find\n\n`extism-dev find` can be used to search all the repos at once and do regex-based text substitution.\n\nSearch for files that contain `base64`:\n",
                    "rendered": {
                      "text": "- `EXTISM_DEV_REPO_CATEGORY` - the category of the target repo\n- `$EXTISM_DEV_ROOT/.bin` is also added to the `$PATH` while executing commands\n\n### Find\n\n`extism-dev find` can be used to search all the repos at once and do regex-based text substitution.\n\nSearch for files that contain `base64`:\n",
                      "markdown": "`- `EXTISM_DEV_REPO_CATEGORY` - the category of the target repo\n- `$EXTISM_DEV_ROOT/.bin` is also added to the `$PATH` while executing commands\n\n### Find\n\n`extism-dev find` can be used to search all the repos at once and do regex-based text substitution.\n\nSearch for files that contain `base64`:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism-dev/README.md"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 1,
                  "endLine": 9,
                  "snippet": {
                    "text": "## Dependencies\n\n- go\n- git\n\n## Installation\n\n```shell\n",
                    "rendered": {
                      "text": "## Dependencies\n\n- go\n- git\n\n## Installation\n\n```shell\n",
                      "markdown": "`## Dependencies\n\n- go\n- git\n\n## Installation\n\n```shell\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism/main_test.go"
                },
                "region": {
                  "startLine": 38,
                  "endLine": 38,
                  "endColumn": 5,
                  "snippet": {
                    "text": "}\n\nfunc TestInstall(t *testing.T) {\n\tcmd := rootCmd()\n\tif err := exec.Command(\"rm\", \"-rf\", \"tmp\").Run(); err != nil {\n\t\tt.Error(err)\n\t}\n",
                    "rendered": {
                      "text": "}\n\nfunc TestInstall(t *testing.T) {\n\tcmd := rootCmd()\n\tif err := exec.Command(\"rm\", \"-rf\", \"tmp\").Run(); err != nil {\n\t\tt.Error(err)\n\t}\n",
                      "markdown": "`}\n\nfunc TestInstall(t *testing.T) {\n\tcmd := rootCmd()\n\tif err := exec.Command(\"rm\", \"-rf\", \"tmp\").Run(); err != nil {\n\t\tt.Error(err)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism/main_test.go"
                },
                "region": {
                  "startLine": 29,
                  "endLine": 29,
                  "endColumn": 5,
                  "snippet": {
                    "text": "}\n\nfunc TestCallBadName(t *testing.T) {\n\tcmd := rootCmd()\n\tcmd.SetArgs([]string{\"call\", \"../test/code.wasm\", \"something\"})\n\terr := cmd.Execute()\n\tif err == nil {\n",
                    "rendered": {
                      "text": "}\n\nfunc TestCallBadName(t *testing.T) {\n\tcmd := rootCmd()\n\tcmd.SetArgs([]string{\"call\", \"../test/code.wasm\", \"something\"})\n\terr := cmd.Execute()\n\tif err == nil {\n",
                      "markdown": "`}\n\nfunc TestCallBadName(t *testing.T) {\n\tcmd := rootCmd()\n\tcmd.SetArgs([]string{\"call\", \"../test/code.wasm\", \"something\"})\n\terr := cmd.Execute()\n\tif err == nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism/main_test.go"
                },
                "region": {
                  "startLine": 20,
                  "endLine": 20,
                  "endColumn": 5,
                  "snippet": {
                    "text": "}\n\nfunc TestCall(t *testing.T) {\n\tcmd := rootCmd()\n\tcmd.SetArgs([]string{\"call\", \"../test/code.wasm\", \"count_vowels\", \"-i\", \"aaa\"})\n\terr := cmd.Execute()\n\tif err != nil {\n",
                    "rendered": {
                      "text": "}\n\nfunc TestCall(t *testing.T) {\n\tcmd := rootCmd()\n\tcmd.SetArgs([]string{\"call\", \"../test/code.wasm\", \"count_vowels\", \"-i\", \"aaa\"})\n\terr := cmd.Execute()\n\tif err != nil {\n",
                      "markdown": "`}\n\nfunc TestCall(t *testing.T) {\n\tcmd := rootCmd()\n\tcmd.SetArgs([]string{\"call\", \"../test/code.wasm\", \"count_vowels\", \"-i\", \"aaa\"})\n\terr := cmd.Execute()\n\tif err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism/main_test.go"
                },
                "region": {
                  "startLine": 11,
                  "endLine": 11,
                  "endColumn": 5,
                  "snippet": {
                    "text": ")\n\nfunc TestLibVersions(t *testing.T) {\n\tcmd := rootCmd()\n\tcmd.SetArgs([]string{\"lib\", \"versions\"})\n\terr := cmd.Execute()\n\tif err != nil {\n",
                    "rendered": {
                      "text": ")\n\nfunc TestLibVersions(t *testing.T) {\n\tcmd := rootCmd()\n\tcmd.SetArgs([]string{\"lib\", \"versions\"})\n\terr := cmd.Execute()\n\tif err != nil {\n",
                      "markdown": "`)\n\nfunc TestLibVersions(t *testing.T) {\n\tcmd := rootCmd()\n\tcmd.SetArgs([]string{\"lib\", \"versions\"})\n\terr := cmd.Execute()\n\tif err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/cleanup-update-branches.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n#\n# usage: `./scripts/cleanup-update-branches.sh`\n\nset -e\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n#\n# usage: `./scripts/cleanup-update-branches.sh`\n\nset -e\n",
                      "markdown": "`#!/usr/bin/env bash\n#\n# usage: `./scripts/cleanup-update-branches.sh`\n\nset -e\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/cleanup-update-branches.sh"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 1,
                  "endLine": 14,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\ngit branch -r --format \"%(refname:short)\" | grep -o 'update-deps-.*' | while read -r branch ; do\n  echo \"Removing remote branch: $branch\"\n  git push origin --delete \"$branch\"\ndone\n\n\n",
                    "rendered": {
                      "text": "\ngit branch -r --format \"%(refname:short)\" | grep -o 'update-deps-.*' | while read -r branch ; do\n  echo \"Removing remote branch: $branch\"\n  git push origin --delete \"$branch\"\ndone\n\n\n",
                      "markdown": "`\ngit branch -r --format \"%(refname:short)\" | grep -o 'update-deps-.*' | while read -r branch ; do\n  echo \"Removing remote branch: $branch\"\n  git push origin --delete \"$branch\"\ndone\n\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/cleanup-update-branches.sh"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 43,
                  "endLine": 12,
                  "endColumn": 49,
                  "snippet": {
                    "text": "  git branch -D \"$branch\"\ndone\n\ngit branch -r --format \"%(refname:short)\" | grep -o 'update-deps-.*' | while read -r branch ; do\n  echo \"Removing remote branch: $branch\"\n  git push origin --delete \"$branch\"\ndone\n",
                    "rendered": {
                      "text": "  git branch -D \"$branch\"\ndone\n\ngit branch -r --format \"%(refname:short)\" | grep -o 'update-deps-.*' | while read -r branch ; do\n  echo \"Removing remote branch: $branch\"\n  git push origin --delete \"$branch\"\ndone\n",
                      "markdown": "`  git branch -D \"$branch\"\ndone\n\ngit branch -r --format \"%(refname:short)\" | grep -o 'update-deps-.*' | while read -r branch ; do\n  echo \"Removing remote branch: $branch\"\n  git push origin --delete \"$branch\"\ndone\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/cleanup-update-branches.sh"
                },
                "region": {
                  "startLine": 11,
                  "endLine": 12,
                  "endColumn": 4,
                  "snippet": {
                    "text": "  echo \"Removing local branch: $branch\"\n  git branch -D \"$branch\"\ndone\n\ngit branch -r --format \"%(refname:short)\" | grep -o 'update-deps-.*' | while read -r branch ; do\n  echo \"Removing remote branch: $branch\"\n  git push origin --delete \"$branch\"\ndone\n",
                    "rendered": {
                      "text": "  echo \"Removing local branch: $branch\"\n  git branch -D \"$branch\"\ndone\n\ngit branch -r --format \"%(refname:short)\" | grep -o 'update-deps-.*' | while read -r branch ; do\n  echo \"Removing remote branch: $branch\"\n  git push origin --delete \"$branch\"\ndone\n",
                      "markdown": "`  echo \"Removing local branch: $branch\"\n  git branch -D \"$branch\"\ndone\n\ngit branch -r --format \"%(refname:short)\" | grep -o 'update-deps-.*' | while read -r branch ; do\n  echo \"Removing remote branch: $branch\"\n  git push origin --delete \"$branch\"\ndone\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/cleanup-update-branches.sh"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 1,
                  "endLine": 9,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\ngit branch -l \"update-deps-*\" --format \"%(refname:short)\"| while read -r branch ; do \n  echo \"Removing local branch: $branch\"\n  git branch -D \"$branch\"\ndone\n\ngit branch -r --format \"%(refname:short)\" | grep -o 'update-deps-.*' | while read -r branch ; do\n",
                    "rendered": {
                      "text": "\ngit branch -l \"update-deps-*\" --format \"%(refname:short)\"| while read -r branch ; do \n  echo \"Removing local branch: $branch\"\n  git branch -D \"$branch\"\ndone\n\ngit branch -r --format \"%(refname:short)\" | grep -o 'update-deps-.*' | while read -r branch ; do\n",
                      "markdown": "`\ngit branch -l \"update-deps-*\" --format \"%(refname:short)\"| while read -r branch ; do \n  echo \"Removing local branch: $branch\"\n  git branch -D \"$branch\"\ndone\n\ngit branch -r --format \"%(refname:short)\" | grep -o 'update-deps-.*' | while read -r branch ; do\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/cleanup-update-branches.sh"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 7,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# usage: `./scripts/cleanup-update-branches.sh`\n\nset -e\n\ngit branch -l \"update-deps-*\" --format \"%(refname:short)\"| while read -r branch ; do \n  echo \"Removing local branch: $branch\"\n  git branch -D \"$branch\"\ndone\n",
                    "rendered": {
                      "text": "# usage: `./scripts/cleanup-update-branches.sh`\n\nset -e\n\ngit branch -l \"update-deps-*\" --format \"%(refname:short)\"| while read -r branch ; do \n  echo \"Removing local branch: $branch\"\n  git branch -D \"$branch\"\ndone\n",
                      "markdown": "`# usage: `./scripts/cleanup-update-branches.sh`\n\nset -e\n\ngit branch -l \"update-deps-*\" --format \"%(refname:short)\"| while read -r branch ; do \n  echo \"Removing local branch: $branch\"\n  git branch -D \"$branch\"\ndone\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/cleanup-update-branches.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n#\n# usage: `./scripts/cleanup-update-branches.sh`\n\nset -e\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n#\n# usage: `./scripts/cleanup-update-branches.sh`\n\nset -e\n",
                      "markdown": "`#!/usr/bin/env bash\n#\n# usage: `./scripts/cleanup-update-branches.sh`\n\nset -e\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/Dockerfile"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 11,
                  "endLine": 3,
                  "snippet": {
                    "text": "FROM ubuntu as build\nRUN apt-get update\nRUN apt-get install -y curl git\nRUN curl https://get.extism.org/cli | sh -s -- -y -o /\nRUN /extism -h # smoke test the binary is installed here\n\n",
                    "rendered": {
                      "text": "FROM ubuntu as build\nRUN apt-get update\nRUN apt-get install -y curl git\nRUN curl https://get.extism.org/cli | sh -s -- -y -o /\nRUN /extism -h # smoke test the binary is installed here\n\n",
                      "markdown": "`FROM ubuntu as build\nRUN apt-get update\nRUN apt-get install -y curl git\nRUN curl https://get.extism.org/cli | sh -s -- -y -o /\nRUN /extism -h # smoke test the binary is installed here\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/Dockerfile"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 3,
                  "endLine": 4,
                  "endColumn": 9,
                  "snippet": {
                    "text": "FROM ubuntu as build\nRUN apt-get update\nRUN apt-get install -y curl git\nRUN curl https://get.extism.org/cli | sh -s -- -y -o /\nRUN /extism -h # smoke test the binary is installed here\n\nFROM scratch\n",
                    "rendered": {
                      "text": "FROM ubuntu as build\nRUN apt-get update\nRUN apt-get install -y curl git\nRUN curl https://get.extism.org/cli | sh -s -- -y -o /\nRUN /extism -h # smoke test the binary is installed here\n\nFROM scratch\n",
                      "markdown": "`FROM ubuntu as build\nRUN apt-get update\nRUN apt-get install -y curl git\nRUN curl https://get.extism.org/cli | sh -s -- -y -o /\nRUN /extism -h # smoke test the binary is installed here\n\nFROM scratch\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/Dockerfile"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 22,
                  "endLine": 3,
                  "endColumn": 28,
                  "snippet": {
                    "text": "FROM ubuntu as build\nRUN apt-get update\nRUN apt-get install -y curl git\nRUN curl https://get.extism.org/cli | sh -s -- -y -o /\nRUN /extism -h # smoke test the binary is installed here\n\n",
                    "rendered": {
                      "text": "FROM ubuntu as build\nRUN apt-get update\nRUN apt-get install -y curl git\nRUN curl https://get.extism.org/cli | sh -s -- -y -o /\nRUN /extism -h # smoke test the binary is installed here\n\n",
                      "markdown": "`FROM ubuntu as build\nRUN apt-get update\nRUN apt-get install -y curl git\nRUN curl https://get.extism.org/cli | sh -s -- -y -o /\nRUN /extism -h # smoke test the binary is installed here\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/Dockerfile"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 3,
                  "endLine": 3,
                  "endColumn": 12,
                  "snippet": {
                    "text": "FROM ubuntu as build\nRUN apt-get update\nRUN apt-get install -y curl git\nRUN curl https://get.extism.org/cli | sh -s -- -y -o /\nRUN /extism -h # smoke test the binary is installed here\n\n",
                    "rendered": {
                      "text": "FROM ubuntu as build\nRUN apt-get update\nRUN apt-get install -y curl git\nRUN curl https://get.extism.org/cli | sh -s -- -y -o /\nRUN /extism -h # smoke test the binary is installed here\n\n",
                      "markdown": "`FROM ubuntu as build\nRUN apt-get update\nRUN apt-get install -y curl git\nRUN curl https://get.extism.org/cli | sh -s -- -y -o /\nRUN /extism -h # smoke test the binary is installed here\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/Dockerfile"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 3,
                  "endLine": 2,
                  "endColumn": 12,
                  "snippet": {
                    "text": "FROM ubuntu as build\nRUN apt-get update\nRUN apt-get install -y curl git\nRUN curl https://get.extism.org/cli | sh -s -- -y -o /\nRUN /extism -h # smoke test the binary is installed here\n",
                    "rendered": {
                      "text": "FROM ubuntu as build\nRUN apt-get update\nRUN apt-get install -y curl git\nRUN curl https://get.extism.org/cli | sh -s -- -y -o /\nRUN /extism -h # smoke test the binary is installed here\n",
                      "markdown": "`FROM ubuntu as build\nRUN apt-get update\nRUN apt-get install -y curl git\nRUN curl https://get.extism.org/cli | sh -s -- -y -o /\nRUN /extism -h # smoke test the binary is installed here\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000104"
          },
          "message": {
            "text": "Backdoor: Curl Bashing",
            "id": "BD000104"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/Dockerfile"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 4,
                  "endLine": 4,
                  "endColumn": 40,
                  "snippet": {
                    "text": "FROM ubuntu as build\nRUN apt-get update\nRUN apt-get install -y curl git\nRUN curl https://get.extism.org/cli | sh -s -- -y -o /\nRUN /extism -h # smoke test the binary is installed here\n\nFROM scratch\n",
                    "rendered": {
                      "text": "FROM ubuntu as build\nRUN apt-get update\nRUN apt-get install -y curl git\nRUN curl https://get.extism.org/cli | sh -s -- -y -o /\nRUN /extism -h # smoke test the binary is installed here\n\nFROM scratch\n",
                      "markdown": "`FROM ubuntu as build\nRUN apt-get update\nRUN apt-get install -y curl git\nRUN curl https://get.extism.org/cli | sh -s -- -y -o /\nRUN /extism -h # smoke test the binary is installed here\n\nFROM scratch\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/call.go"
                },
                "region": {
                  "startLine": 317,
                  "startColumn": 7,
                  "endLine": 318,
                  "snippet": {
                    "text": "\tflags.StringVar(&call.logLevel, \"log-level\", \"\", \"Set log level: trace, debug, warn, info, error\")\n\tflags.StringArrayVar(&call.link, \"link\", []string{}, \"Additional modules to link\")\n\tcmd.MarkFlagsMutuallyExclusive(\"input\", \"stdin\")\n\treturn cmd\n}\n",
                    "rendered": {
                      "text": "\tflags.StringVar(&call.logLevel, \"log-level\", \"\", \"Set log level: trace, debug, warn, info, error\")\n\tflags.StringArrayVar(&call.link, \"link\", []string{}, \"Additional modules to link\")\n\tcmd.MarkFlagsMutuallyExclusive(\"input\", \"stdin\")\n\treturn cmd\n}\n",
                      "markdown": "`\tflags.StringVar(&call.logLevel, \"log-level\", \"\", \"Set log level: trace, debug, warn, info, error\")\n\tflags.StringArrayVar(&call.link, \"link\", []string{}, \"Additional modules to link\")\n\tcmd.MarkFlagsMutuallyExclusive(\"input\", \"stdin\")\n\treturn cmd\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/call.go"
                },
                "region": {
                  "startLine": 292,
                  "endLine": 292,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nfunc CallCmd() *cobra.Command {\n\tcall := &callArgs{}\n\tcmd :=\n\t\t&cobra.Command{\n\t\t\tUse:          \"call [flags] wasm_file function\",\n\t\t\tShort:        \"Call a plugin function\",\n",
                    "rendered": {
                      "text": "\nfunc CallCmd() *cobra.Command {\n\tcall := &callArgs{}\n\tcmd :=\n\t\t&cobra.Command{\n\t\t\tUse:          \"call [flags] wasm_file function\",\n\t\t\tShort:        \"Call a plugin function\",\n",
                      "markdown": "`\nfunc CallCmd() *cobra.Command {\n\tcall := &callArgs{}\n\tcmd :=\n\t\t&cobra.Command{\n\t\t\tUse:          \"call [flags] wasm_file function\",\n\t\t\tShort:        \"Call a plugin function\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/call.go"
                },
                "region": {
                  "startLine": 26,
                  "endLine": 26,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tlogLevel           string\n\tallowedPaths       []string\n\tallowedHosts       []string\n\ttimeout            uint64\n\tmemoryMaxPages     int\n\tmemoryHttpMaxBytes int\n\tmemoryVarMaxBytes  int\n",
                    "rendered": {
                      "text": "\tlogLevel           string\n\tallowedPaths       []string\n\tallowedHosts       []string\n\ttimeout            uint64\n\tmemoryMaxPages     int\n\tmemoryHttpMaxBytes int\n\tmemoryVarMaxBytes  int\n",
                      "markdown": "`\tlogLevel           string\n\tallowedPaths       []string\n\tallowedHosts       []string\n\ttimeout            uint64\n\tmemoryMaxPages     int\n\tmemoryHttpMaxBytes int\n\tmemoryVarMaxBytes  int\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/update-deps.sh"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 35,
                  "endLine": 19,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\necho \"Update complete\"\necho \"If gh is installed, a pull-request can be opened with the following command\"\necho \"gh pr create --title \\\"chore: update dependencies\\\" --fill\"\n",
                    "rendered": {
                      "text": "\necho \"Update complete\"\necho \"If gh is installed, a pull-request can be opened with the following command\"\necho \"gh pr create --title \\\"chore: update dependencies\\\" --fill\"\n",
                      "markdown": "`\necho \"Update complete\"\necho \"If gh is installed, a pull-request can be opened with the following command\"\necho \"gh pr create --title \\\"chore: update dependencies\\\" --fill\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/update-deps.sh"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 22,
                  "endLine": 14,
                  "endColumn": 30,
                  "snippet": {
                    "text": "go mod tidy\n\n# push to new branch, get HEAD hash\ngit commit -am \"chore: update cli deps\"\ngit push origin \"$BRANCH\"\n\necho \"Update complete\"\n",
                    "rendered": {
                      "text": "go mod tidy\n\n# push to new branch, get HEAD hash\ngit commit -am \"chore: update cli deps\"\ngit push origin \"$BRANCH\"\n\necho \"Update complete\"\n",
                      "markdown": "`go mod tidy\n\n# push to new branch, get HEAD hash\ngit commit -am \"chore: update cli deps\"\ngit push origin \"$BRANCH\"\n\necho \"Update complete\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/update-deps.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n#\n# usage: `./scripts/update-deps.sh`\n\nset -eu\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n#\n# usage: `./scripts/update-deps.sh`\n\nset -eu\n",
                      "markdown": "`#!/usr/bin/env bash\n#\n# usage: `./scripts/update-deps.sh`\n\nset -eu\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/update-deps.sh"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 39,
                  "endLine": 15,
                  "endColumn": 4,
                  "snippet": {
                    "text": "go mod tidy\n\n# push to new branch, get HEAD hash\ngit commit -am \"chore: update cli deps\"\ngit push origin \"$BRANCH\"\n\necho \"Update complete\"\necho \"If gh is installed, a pull-request can be opened with the following command\"\n",
                    "rendered": {
                      "text": "go mod tidy\n\n# push to new branch, get HEAD hash\ngit commit -am \"chore: update cli deps\"\ngit push origin \"$BRANCH\"\n\necho \"Update complete\"\necho \"If gh is installed, a pull-request can be opened with the following command\"\n",
                      "markdown": "`go mod tidy\n\n# push to new branch, get HEAD hash\ngit commit -am \"chore: update cli deps\"\ngit push origin \"$BRANCH\"\n\necho \"Update complete\"\necho \"If gh is installed, a pull-request can be opened with the following command\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/update-deps.sh"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 35,
                  "endLine": 14,
                  "endColumn": 4,
                  "snippet": {
                    "text": "go get -u\ngo mod tidy\n\n# push to new branch, get HEAD hash\ngit commit -am \"chore: update cli deps\"\ngit push origin \"$BRANCH\"\n\necho \"Update complete\"\n",
                    "rendered": {
                      "text": "go get -u\ngo mod tidy\n\n# push to new branch, get HEAD hash\ngit commit -am \"chore: update cli deps\"\ngit push origin \"$BRANCH\"\n\necho \"Update complete\"\n",
                      "markdown": "`go get -u\ngo mod tidy\n\n# push to new branch, get HEAD hash\ngit commit -am \"chore: update cli deps\"\ngit push origin \"$BRANCH\"\n\necho \"Update complete\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/update-deps.sh"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 25,
                  "endLine": 13,
                  "endColumn": 31,
                  "snippet": {
                    "text": "go get -u\ngo mod tidy\n\n# push to new branch, get HEAD hash\ngit commit -am \"chore: update cli deps\"\ngit push origin \"$BRANCH\"\n\n",
                    "rendered": {
                      "text": "go get -u\ngo mod tidy\n\n# push to new branch, get HEAD hash\ngit commit -am \"chore: update cli deps\"\ngit push origin \"$BRANCH\"\n\n",
                      "markdown": "`go get -u\ngo mod tidy\n\n# push to new branch, get HEAD hash\ngit commit -am \"chore: update cli deps\"\ngit push origin \"$BRANCH\"\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/update-deps.sh"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 17,
                  "endLine": 9,
                  "endColumn": 4,
                  "snippet": {
                    "text": "set -eu\n\nBRANCH=\"update-deps-$(date +%s)\"\ngit checkout main\ngit checkout -b \"$BRANCH\"\ngo get -u\ngo mod tidy\n\n",
                    "rendered": {
                      "text": "set -eu\n\nBRANCH=\"update-deps-$(date +%s)\"\ngit checkout main\ngit checkout -b \"$BRANCH\"\ngo get -u\ngo mod tidy\n\n",
                      "markdown": "`set -eu\n\nBRANCH=\"update-deps-$(date +%s)\"\ngit checkout main\ngit checkout -b \"$BRANCH\"\ngo get -u\ngo mod tidy\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/update-deps.sh"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 32,
                  "endLine": 8,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nset -eu\n\nBRANCH=\"update-deps-$(date +%s)\"\ngit checkout main\ngit checkout -b \"$BRANCH\"\ngo get -u\ngo mod tidy\n",
                    "rendered": {
                      "text": "\nset -eu\n\nBRANCH=\"update-deps-$(date +%s)\"\ngit checkout main\ngit checkout -b \"$BRANCH\"\ngo get -u\ngo mod tidy\n",
                      "markdown": "`\nset -eu\n\nBRANCH=\"update-deps-$(date +%s)\"\ngit checkout main\ngit checkout -b \"$BRANCH\"\ngo get -u\ngo mod tidy\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/update-deps.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n#\n# usage: `./scripts/update-deps.sh`\n\nset -eu\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n#\n# usage: `./scripts/update-deps.sh`\n\nset -eu\n",
                      "markdown": "`#!/usr/bin/env bash\n#\n# usage: `./scripts/update-deps.sh`\n\nset -eu\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/README.md"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 65,
                  "endLine": 106,
                  "endColumn": 69,
                  "snippet": {
                    "text": "### Install libextism\n\nTo install the latest version of `libextism` to `/usr/local` on macOS and Linux\nand `.` on Windows, this will overwrite any existing installation at the same\npath:\n\n```shell\n",
                    "rendered": {
                      "text": "### Install libextism\n\nTo install the latest version of `libextism` to `/usr/local` on macOS and Linux\nand `.` on Windows, this will overwrite any existing installation at the same\npath:\n\n```shell\n",
                      "markdown": "`### Install libextism\n\nTo install the latest version of `libextism` to `/usr/local` on macOS and Linux\nand `.` on Windows, this will overwrite any existing installation at the same\npath:\n\n```shell\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/README.md"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 15,
                  "endLine": 130,
                  "endColumn": 20,
                  "snippet": {
                    "text": "To uninstall the shared object and header installed in `/usr/local`:\n\n```shell\nsudo PATH=$PATH env extism lib uninstall\n```\n\nOr from another prefix:\n",
                    "rendered": {
                      "text": "To uninstall the shared object and header installed in `/usr/local`:\n\n```shell\nsudo PATH=$PATH env extism lib uninstall\n```\n\nOr from another prefix:\n",
                      "markdown": "`To uninstall the shared object and header installed in `/usr/local`:\n\n```shell\nsudo PATH=$PATH env extism lib uninstall\n```\n\nOr from another prefix:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/README.md"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 48,
                  "endLine": 123,
                  "snippet": {
                    "text": "To install the latest build from github:\n\n```shell\nsudo PATH=$PATH env extism lib install --version git\n```\n\n### Uninstall libextism\n\n",
                    "rendered": {
                      "text": "To install the latest build from github:\n\n```shell\nsudo PATH=$PATH env extism lib install --version git\n```\n\n### Uninstall libextism\n\n",
                      "markdown": "`To install the latest build from github:\n\n```shell\nsudo PATH=$PATH env extism lib install --version git\n```\n\n### Uninstall libextism\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/README.md"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 15,
                  "endLine": 122,
                  "endColumn": 20,
                  "snippet": {
                    "text": "To install the latest build from github:\n\n```shell\nsudo PATH=$PATH env extism lib install --version git\n```\n\n### Uninstall libextism\n",
                    "rendered": {
                      "text": "To install the latest build from github:\n\n```shell\nsudo PATH=$PATH env extism lib install --version git\n```\n\n### Uninstall libextism\n",
                      "markdown": "`To install the latest build from github:\n\n```shell\nsudo PATH=$PATH env extism lib install --version git\n```\n\n### Uninstall libextism\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/README.md"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 15,
                  "endLine": 110,
                  "endColumn": 20,
                  "snippet": {
                    "text": "path:\n\n```shell\nsudo PATH=$PATH env extism lib install\n```\n\nTo install to `$HOME/.local`:\n",
                    "rendered": {
                      "text": "path:\n\n```shell\nsudo PATH=$PATH env extism lib install\n```\n\nTo install to `$HOME/.local`:\n",
                      "markdown": "`path:\n\n```shell\nsudo PATH=$PATH env extism lib install\n```\n\nTo install to `$HOME/.local`:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/README.md"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 8,
                  "endLine": 17,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nSee the help output for more options:\n\n```shell\ncurl https://get.extism.org/cli | sh -s -- -h\n```\n\n### From source:\n",
                    "rendered": {
                      "text": "\nSee the help output for more options:\n\n```shell\ncurl https://get.extism.org/cli | sh -s -- -h\n```\n\n### From source:\n",
                      "markdown": "`\nSee the help output for more options:\n\n```shell\ncurl https://get.extism.org/cli | sh -s -- -h\n```\n\n### From source:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/README.md"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 8,
                  "endLine": 11,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n### Using curl/sh:\n\n```shell\ncurl https://get.extism.org/cli | sh\n```\n\nSee the help output for more options:\n",
                    "rendered": {
                      "text": "\n### Using curl/sh:\n\n```shell\ncurl https://get.extism.org/cli | sh\n```\n\nSee the help output for more options:\n",
                      "markdown": "`\n### Using curl/sh:\n\n```shell\ncurl https://get.extism.org/cli | sh\n```\n\nSee the help output for more options:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000104"
          },
          "message": {
            "text": "Backdoor: Curl Bashing",
            "id": "BD000104"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/README.md"
                },
                "region": {
                  "startLine": 17,
                  "endLine": 17,
                  "endColumn": 36,
                  "snippet": {
                    "text": "See the help output for more options:\n\n```shell\ncurl https://get.extism.org/cli | sh -s -- -h\n```\n\n### From source:\n",
                    "rendered": {
                      "text": "See the help output for more options:\n\n```shell\ncurl https://get.extism.org/cli | sh -s -- -h\n```\n\n### From source:\n",
                      "markdown": "`See the help output for more options:\n\n```shell\ncurl https://get.extism.org/cli | sh -s -- -h\n```\n\n### From source:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000104"
          },
          "message": {
            "text": "Backdoor: Curl Bashing",
            "id": "BD000104"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/README.md"
                },
                "region": {
                  "startLine": 11,
                  "endLine": 11,
                  "endColumn": 36,
                  "snippet": {
                    "text": "### Using curl/sh:\n\n```shell\ncurl https://get.extism.org/cli | sh\n```\n\nSee the help output for more options:\n",
                    "rendered": {
                      "text": "### Using curl/sh:\n\n```shell\ncurl https://get.extism.org/cli | sh\n```\n\nSee the help output for more options:\n",
                      "markdown": "`### Using curl/sh:\n\n```shell\ncurl https://get.extism.org/cli | sh\n```\n\nSee the help output for more options:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism-dev/dev_test.go"
                },
                "region": {
                  "startLine": 18,
                  "endLine": 18,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t\tt.Error(err)\n\t}\n\n\tcmd = rootCmd()\n\tcmd.SetArgs([]string{\"list\", \"--root\", \"test-data\"})\n\terr = cmd.Execute()\n\tif err != nil {\n",
                    "rendered": {
                      "text": "\t\tt.Error(err)\n\t}\n\n\tcmd = rootCmd()\n\tcmd.SetArgs([]string{\"list\", \"--root\", \"test-data\"})\n\terr = cmd.Execute()\n\tif err != nil {\n",
                      "markdown": "`\t\tt.Error(err)\n\t}\n\n\tcmd = rootCmd()\n\tcmd.SetArgs([]string{\"list\", \"--root\", \"test-data\"})\n\terr = cmd.Execute()\n\tif err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism-dev/dev_test.go"
                },
                "region": {
                  "startLine": 11,
                  "endLine": 11,
                  "endColumn": 5,
                  "snippet": {
                    "text": ")\n\nfunc TestInit(t *testing.T) {\n\tcmd := rootCmd()\n\tcmd.SetArgs([]string{\"init\", \"--root\", \"test-data\", \"--local\"})\n\terr := cmd.Execute()\n\tif err != nil {\n",
                    "rendered": {
                      "text": ")\n\nfunc TestInit(t *testing.T) {\n\tcmd := rootCmd()\n\tcmd.SetArgs([]string{\"init\", \"--root\", \"test-data\", \"--local\"})\n\terr := cmd.Execute()\n\tif err != nil {\n",
                      "markdown": "`)\n\nfunc TestInit(t *testing.T) {\n\tcmd := rootCmd()\n\tcmd.SetArgs([]string{\"init\", \"--root\", \"test-data\", \"--local\"})\n\terr := cmd.Execute()\n\tif err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism-dev/repo.go"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 21,
                  "endLine": 48,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n\tcli.Log(\"Running git clone\", repo.Url, full)\n\tif err := exec.Command(\"git\", \"clone\", repo.Url, full).Run(); err != nil {\n\t\tcli.Print(\"Warning: git clone\", repo.Url, \"failed:\", err)\n\t}\n\n\treturn false\n",
                    "rendered": {
                      "text": "\n\tcli.Log(\"Running git clone\", repo.Url, full)\n\tif err := exec.Command(\"git\", \"clone\", repo.Url, full).Run(); err != nil {\n\t\tcli.Print(\"Warning: git clone\", repo.Url, \"failed:\", err)\n\t}\n\n\treturn false\n",
                      "markdown": "`\n\tcli.Log(\"Running git clone\", repo.Url, full)\n\tif err := exec.Command(\"git\", \"clone\", repo.Url, full).Run(); err != nil {\n\t\tcli.Print(\"Warning: git clone\", repo.Url, \"failed:\", err)\n\t}\n\n\treturn false\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism-dev/repo.go"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 17,
                  "endLine": 46,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\treturn true\n\t}\n\n\tcli.Log(\"Running git clone\", repo.Url, full)\n\tif err := exec.Command(\"git\", \"clone\", repo.Url, full).Run(); err != nil {\n\t\tcli.Print(\"Warning: git clone\", repo.Url, \"failed:\", err)\n\t}\n",
                    "rendered": {
                      "text": "\t\treturn true\n\t}\n\n\tcli.Log(\"Running git clone\", repo.Url, full)\n\tif err := exec.Command(\"git\", \"clone\", repo.Url, full).Run(); err != nil {\n\t\tcli.Print(\"Warning: git clone\", repo.Url, \"failed:\", err)\n\t}\n",
                      "markdown": "`\t\treturn true\n\t}\n\n\tcli.Log(\"Running git clone\", repo.Url, full)\n\tif err := exec.Command(\"git\", \"clone\", repo.Url, full).Run(); err != nil {\n\t\tcli.Print(\"Warning: git clone\", repo.Url, \"failed:\", err)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism-dev/update.go"
                },
                "region": {
                  "startLine": 167,
                  "startColumn": 18,
                  "endLine": 167,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\tif args.all || args.wasm {\n\t\t\tif p, ok := sources[fname]; ok && name != p.path {\n\t\t\t\tcli.Print(\"Updating\", name)\n\t\t\t\tdata, err := p.Get()\n\t\t\t\tif err != nil {\n\t\t\t\t\tcli.Print(\"Error reading file\", err)\n\t\t\t\t\treturn err\n",
                    "rendered": {
                      "text": "\t\tif args.all || args.wasm {\n\t\t\tif p, ok := sources[fname]; ok && name != p.path {\n\t\t\t\tcli.Print(\"Updating\", name)\n\t\t\t\tdata, err := p.Get()\n\t\t\t\tif err != nil {\n\t\t\t\t\tcli.Print(\"Error reading file\", err)\n\t\t\t\t\treturn err\n",
                      "markdown": "`\t\tif args.all || args.wasm {\n\t\t\tif p, ok := sources[fname]; ok && name != p.path {\n\t\t\t\tcli.Print(\"Updating\", name)\n\t\t\t\tdata, err := p.Get()\n\t\t\t\tif err != nil {\n\t\t\t\t\tcli.Print(\"Error reading file\", err)\n\t\t\t\t\treturn err\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism-dev/update.go"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 21,
                  "endLine": 150,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\t\tif fname == \"extism-runtime.wasm\" && name != kernelPath {\n\t\t\t\tcli.Print(\"Updating\", name)\n\t\t\t\tif !args.dryRun {\n\t\t\t\t\tk, err := kernel.Get()\n\t\t\t\t\tif err != nil {\n\t\t\t\t\t\tcli.Log(\"Unable to load kernel\", err)\n\t\t\t\t\t\treturn err\n",
                    "rendered": {
                      "text": "\t\t\tif fname == \"extism-runtime.wasm\" && name != kernelPath {\n\t\t\t\tcli.Print(\"Updating\", name)\n\t\t\t\tif !args.dryRun {\n\t\t\t\t\tk, err := kernel.Get()\n\t\t\t\t\tif err != nil {\n\t\t\t\t\t\tcli.Log(\"Unable to load kernel\", err)\n\t\t\t\t\t\treturn err\n",
                      "markdown": "`\t\t\tif fname == \"extism-runtime.wasm\" && name != kernelPath {\n\t\t\t\tcli.Print(\"Updating\", name)\n\t\t\t\tif !args.dryRun {\n\t\t\t\t\tk, err := kernel.Get()\n\t\t\t\t\tif err != nil {\n\t\t\t\t\t\tcli.Log(\"Unable to load kernel\", err)\n\t\t\t\t\t\treturn err\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism-dev/update.go"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 4,
                  "endLine": 163,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t}\n\t\t}\n\n\t\t// Update test wasm modules\n\t\tif args.all || args.wasm {\n\t\t\tif p, ok := sources[fname]; ok && name != p.path {\n\t\t\t\tcli.Print(\"Updating\", name)\n",
                    "rendered": {
                      "text": "\t\t\t}\n\t\t}\n\n\t\t// Update test wasm modules\n\t\tif args.all || args.wasm {\n\t\t\tif p, ok := sources[fname]; ok && name != p.path {\n\t\t\t\tcli.Print(\"Updating\", name)\n",
                      "markdown": "`\t\t\t}\n\t\t}\n\n\t\t// Update test wasm modules\n\t\tif args.all || args.wasm {\n\t\t\tif p, ok := sources[fname]; ok && name != p.path {\n\t\t\t\tcli.Print(\"Updating\", name)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism-dev/update.go"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 4,
                  "endLine": 145,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\tsearch.Iter(func(name string) error {\n\t\tfname := filepath.Base(name)\n\n\t\t// Update kernel\n\t\tif args.all || args.kernel {\n\t\t\tif fname == \"extism-runtime.wasm\" && name != kernelPath {\n\t\t\t\tcli.Print(\"Updating\", name)\n",
                    "rendered": {
                      "text": "\tsearch.Iter(func(name string) error {\n\t\tfname := filepath.Base(name)\n\n\t\t// Update kernel\n\t\tif args.all || args.kernel {\n\t\t\tif fname == \"extism-runtime.wasm\" && name != kernelPath {\n\t\t\t\tcli.Print(\"Updating\", name)\n",
                      "markdown": "`\tsearch.Iter(func(name string) error {\n\t\tfname := filepath.Base(name)\n\n\t\t// Update kernel\n\t\tif args.all || args.kernel {\n\t\t\tif fname == \"extism-runtime.wasm\" && name != kernelPath {\n\t\t\t\tcli.Print(\"Updating\", name)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism-dev/update.go"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 1,
                  "endLine": 82,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\t\treturn err\n\t\t}\n\n\t\tcmd = exec.Command(\"make\")\n\t\tcmd.Dir = args.Path(\"extism\", \"c-pdk\")\n\t\tcli.Print(\"Building plugins in extism/c-pdk\")\n\t\toutput, err = cmd.CombinedOutput()\n",
                    "rendered": {
                      "text": "\t\t\treturn err\n\t\t}\n\n\t\tcmd = exec.Command(\"make\")\n\t\tcmd.Dir = args.Path(\"extism\", \"c-pdk\")\n\t\tcli.Print(\"Building plugins in extism/c-pdk\")\n\t\toutput, err = cmd.CombinedOutput()\n",
                      "markdown": "`\t\t\treturn err\n\t\t}\n\n\t\tcmd = exec.Command(\"make\")\n\t\tcmd.Dir = args.Path(\"extism\", \"c-pdk\")\n\t\tcli.Print(\"Building plugins in extism/c-pdk\")\n\t\toutput, err = cmd.CombinedOutput()\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism-dev/update.go"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 1,
                  "endLine": 72,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t}\n\n\tif (args.all || args.wasm) && args.build {\n\t\tcmd := exec.Command(\"make\")\n\t\tcmd.Dir = args.Path(\"extism\", \"plugins\")\n\t\tcli.Print(\"Building plugins in extism/plugins\")\n\t\toutput, err := cmd.CombinedOutput()\n",
                    "rendered": {
                      "text": "\t}\n\n\tif (args.all || args.wasm) && args.build {\n\t\tcmd := exec.Command(\"make\")\n\t\tcmd.Dir = args.Path(\"extism\", \"plugins\")\n\t\tcli.Print(\"Building plugins in extism/plugins\")\n\t\toutput, err := cmd.CombinedOutput()\n",
                      "markdown": "`\t}\n\n\tif (args.all || args.wasm) && args.build {\n\t\tcmd := exec.Command(\"make\")\n\t\tcmd.Dir = args.Path(\"extism\", \"plugins\")\n\t\tcli.Print(\"Building plugins in extism/plugins\")\n\t\toutput, err := cmd.CombinedOutput()\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism-dev/update.go"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 1,
                  "endLine": 60,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tkernel := wasmSource{path: kernelPath}\n\n\tif (args.all || args.kernel) && args.build {\n\t\tcmd := exec.Command(\"bash\", \"build.sh\")\n\t\tcmd.Dir = args.Path(\"extism\", \"extism\", \"kernel\")\n\t\tcli.Print(\"Building extism-runtime.wasm\")\n\t\toutput, err := cmd.CombinedOutput()\n",
                    "rendered": {
                      "text": "\tkernel := wasmSource{path: kernelPath}\n\n\tif (args.all || args.kernel) && args.build {\n\t\tcmd := exec.Command(\"bash\", \"build.sh\")\n\t\tcmd.Dir = args.Path(\"extism\", \"extism\", \"kernel\")\n\t\tcli.Print(\"Building extism-runtime.wasm\")\n\t\toutput, err := cmd.CombinedOutput()\n",
                      "markdown": "`\tkernel := wasmSource{path: kernelPath}\n\n\tif (args.all || args.kernel) && args.build {\n\t\tcmd := exec.Command(\"bash\", \"build.sh\")\n\t\tcmd.Dir = args.Path(\"extism\", \"extism\", \"kernel\")\n\t\tcli.Print(\"Building extism-runtime.wasm\")\n\t\toutput, err := cmd.CombinedOutput()\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism-dev/main.go"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 7,
                  "endLine": 31,
                  "snippet": {
                    "text": "\tif err := SetupDevCmd(cmd); err != nil {\n\t\tpanic(err)\n\t}\n\treturn cmd\n}\n\nfunc main() {\n\terr := rootCmd().Execute()\n",
                    "rendered": {
                      "text": "\tif err := SetupDevCmd(cmd); err != nil {\n\t\tpanic(err)\n\t}\n\treturn cmd\n}\n\nfunc main() {\n\terr := rootCmd().Execute()\n",
                      "markdown": "`\tif err := SetupDevCmd(cmd); err != nil {\n\t\tpanic(err)\n\t}\n\treturn cmd\n}\n\nfunc main() {\n\terr := rootCmd().Execute()\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism-dev/main.go"
                },
                "region": {
                  "startLine": 19,
                  "endLine": 19,
                  "endColumn": 5,
                  "snippet": {
                    "text": "`\n\nfunc rootCmd() *cobra.Command {\n\tcmd := &cobra.Command{\n\t\tUse:     \"extism-dev\",\n\t\tVersion: \"0.0.0\",\n\t\tLong:    banner,\n",
                    "rendered": {
                      "text": "`\n\nfunc rootCmd() *cobra.Command {\n\tcmd := &cobra.Command{\n\t\tUse:     \"extism-dev\",\n\t\tVersion: \"0.0.0\",\n\t\tLong:    banner,\n",
                      "markdown": "``\n\nfunc rootCmd() *cobra.Command {\n\tcmd := &cobra.Command{\n\t\tUse:     \"extism-dev\",\n\t\tVersion: \"0.0.0\",\n\t\tLong:    banner,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism-dev/exec.go"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 7,
                  "endLine": 59,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\t\t\tcmd.Env = append(cmd.Env, \"EXTISM_DEV_RUNTIME=\"+args.Path(\"extism\", \"extism\"))\n\t\t\tcmd.Env = append(cmd.Env, \"EXTISM_DEV_REPO_URL=\"+repo.Url)\n\t\t\tcmd.Env = append(cmd.Env, \"EXTISM_DEV_REPO_CATEGORY\"+repo.Category)\n\t\t\tcmd.Env = append(cmd.Env, \"PATH=\"+os.Getenv(\"PATH\")+\":\"+args.Path(\".bin\"))\n\t\t\tif err := cmd.Run(); err != nil {\n\t\t\t\tcli.Print(\"Error: command failed in\", p)\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\tcmd.Env = append(cmd.Env, \"EXTISM_DEV_RUNTIME=\"+args.Path(\"extism\", \"extism\"))\n\t\t\tcmd.Env = append(cmd.Env, \"EXTISM_DEV_REPO_URL=\"+repo.Url)\n\t\t\tcmd.Env = append(cmd.Env, \"EXTISM_DEV_REPO_CATEGORY\"+repo.Category)\n\t\t\tcmd.Env = append(cmd.Env, \"PATH=\"+os.Getenv(\"PATH\")+\":\"+args.Path(\".bin\"))\n\t\t\tif err := cmd.Run(); err != nil {\n\t\t\t\tcli.Print(\"Error: command failed in\", p)\n\t\t\t}\n",
                      "markdown": "`\t\t\tcmd.Env = append(cmd.Env, \"EXTISM_DEV_RUNTIME=\"+args.Path(\"extism\", \"extism\"))\n\t\t\tcmd.Env = append(cmd.Env, \"EXTISM_DEV_REPO_URL=\"+repo.Url)\n\t\t\tcmd.Env = append(cmd.Env, \"EXTISM_DEV_REPO_CATEGORY\"+repo.Category)\n\t\t\tcmd.Env = append(cmd.Env, \"PATH=\"+os.Getenv(\"PATH\")+\":\"+args.Path(\".bin\"))\n\t\t\tif err := cmd.Run(); err != nil {\n\t\t\t\tcli.Print(\"Error: command failed in\", p)\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism-dev/exec.go"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 2,
                  "endLine": 50,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\t\t}\n\t\t\t\tcli.Print(p)\n\t\t\t}\n\t\t\tcmd := exec.Command(args.args[0], args.args[1:]...)\n\t\t\tcmd.Dir = p\n\t\t\tcmd.Stdout = os.Stdout\n\t\t\tcmd.Stderr = os.Stderr\n",
                    "rendered": {
                      "text": "\t\t\t\t}\n\t\t\t\tcli.Print(p)\n\t\t\t}\n\t\t\tcmd := exec.Command(args.args[0], args.args[1:]...)\n\t\t\tcmd.Dir = p\n\t\t\tcmd.Stdout = os.Stdout\n\t\t\tcmd.Stderr = os.Stderr\n",
                      "markdown": "`\t\t\t\t}\n\t\t\t\tcli.Print(p)\n\t\t\t}\n\t\t\tcmd := exec.Command(args.args[0], args.args[1:]...)\n\t\t\tcmd.Dir = p\n\t\t\tcmd.Stdout = os.Stdout\n\t\t\tcmd.Stderr = os.Stderr\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/generate.go"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 17,
                  "endLine": 68,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t}\n\tvar templates []pdkTemplate\n\tdata := templatesData\n\tres, err := http.Get(\"https://raw.githubusercontent.com/extism/cli/main/pdk-templates.json\")\n\tif err == nil && res.StatusCode == 200 {\n\t\tt, err := io.ReadAll(res.Body)\n\t\tif err == nil {\n",
                    "rendered": {
                      "text": "\t}\n\tvar templates []pdkTemplate\n\tdata := templatesData\n\tres, err := http.Get(\"https://raw.githubusercontent.com/extism/cli/main/pdk-templates.json\")\n\tif err == nil && res.StatusCode == 200 {\n\t\tt, err := io.ReadAll(res.Body)\n\t\tif err == nil {\n",
                      "markdown": "`\t}\n\tvar templates []pdkTemplate\n\tdata := templatesData\n\tres, err := http.Get(\"https://raw.githubusercontent.com/extism/cli/main/pdk-templates.json\")\n\tif err == nil && res.StatusCode == 200 {\n\t\tt, err := io.ReadAll(res.Body)\n\t\tif err == nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/generate.go"
                },
                "region": {
                  "startLine": 252,
                  "startColumn": 10,
                  "endLine": 253,
                  "snippet": {
                    "text": "\n\tvar cmd tea.Cmd\n\tm.list, cmd = m.list.Update(msg)\n\treturn m, cmd\n}\n\nfunc (m *model) View() string {\n\tif m.choice != \"\" {\n",
                    "rendered": {
                      "text": "\n\tvar cmd tea.Cmd\n\tm.list, cmd = m.list.Update(msg)\n\treturn m, cmd\n}\n\nfunc (m *model) View() string {\n\tif m.choice != \"\" {\n",
                      "markdown": "`\n\tvar cmd tea.Cmd\n\tm.list, cmd = m.list.Update(msg)\n\treturn m, cmd\n}\n\nfunc (m *model) View() string {\n\tif m.choice != \"\" {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/generate.go"
                },
                "region": {
                  "startLine": 251,
                  "startColumn": 8,
                  "endLine": 251,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\t}\n\n\tvar cmd tea.Cmd\n\tm.list, cmd = m.list.Update(msg)\n\treturn m, cmd\n}\n\n",
                    "rendered": {
                      "text": "\t}\n\n\tvar cmd tea.Cmd\n\tm.list, cmd = m.list.Update(msg)\n\treturn m, cmd\n}\n\n",
                      "markdown": "`\t}\n\n\tvar cmd tea.Cmd\n\tm.list, cmd = m.list.Update(msg)\n\treturn m, cmd\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/generate.go"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 4,
                  "endLine": 250,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t}\n\t}\n\n\tvar cmd tea.Cmd\n\tm.list, cmd = m.list.Update(msg)\n\treturn m, cmd\n}\n",
                    "rendered": {
                      "text": "\t\t}\n\t}\n\n\tvar cmd tea.Cmd\n\tm.list, cmd = m.list.Update(msg)\n\treturn m, cmd\n}\n",
                      "markdown": "`\t\t}\n\t}\n\n\tvar cmd tea.Cmd\n\tm.list, cmd = m.list.Update(msg)\n\treturn m, cmd\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/generate.go"
                },
                "region": {
                  "startLine": 116,
                  "endLine": 116,
                  "endColumn": 5,
                  "snippet": {
                    "text": "}\n\nfunc runCmdInDir(dir, name string, args ...string) error {\n\tcmd := exec.Command(name, args...)\n\tcmd.Stdout = os.Stdout\n\tcmd.Stderr = os.Stderr\n\tif dir != \"\" {\n",
                    "rendered": {
                      "text": "}\n\nfunc runCmdInDir(dir, name string, args ...string) error {\n\tcmd := exec.Command(name, args...)\n\tcmd.Stdout = os.Stdout\n\tcmd.Stderr = os.Stderr\n\tif dir != \"\" {\n",
                      "markdown": "`}\n\nfunc runCmdInDir(dir, name string, args ...string) error {\n\tcmd := exec.Command(name, args...)\n\tcmd.Stdout = os.Stdout\n\tcmd.Stderr = os.Stderr\n\tif dir != \"\" {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/generate.go"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 7,
                  "endLine": 60,
                  "snippet": {
                    "text": "\tflags.StringVarP(&dir, \"output\", \"o\", \".\", \"The path to an output directory where resource scaffolding will be generated\")\n\tflags.StringVarP(&tag, \"tag\", \"t\", \"main\", \"A tag to clone from the template repository\")\n\n\treturn cmd\n}\n\nfunc generatePlugin(lang string, dir, tag string) error {\n\tif _, err := exec.LookPath(\"git\"); err != nil {\n",
                    "rendered": {
                      "text": "\tflags.StringVarP(&dir, \"output\", \"o\", \".\", \"The path to an output directory where resource scaffolding will be generated\")\n\tflags.StringVarP(&tag, \"tag\", \"t\", \"main\", \"A tag to clone from the template repository\")\n\n\treturn cmd\n}\n\nfunc generatePlugin(lang string, dir, tag string) error {\n\tif _, err := exec.LookPath(\"git\"); err != nil {\n",
                      "markdown": "`\tflags.StringVarP(&dir, \"output\", \"o\", \".\", \"The path to an output directory where resource scaffolding will be generated\")\n\tflags.StringVarP(&tag, \"tag\", \"t\", \"main\", \"A tag to clone from the template repository\")\n\n\treturn cmd\n}\n\nfunc generatePlugin(lang string, dir, tag string) error {\n\tif _, err := exec.LookPath(\"git\"); err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/generate.go"
                },
                "region": {
                  "startLine": 31,
                  "endLine": 31,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nfunc GenerateCmd() *cobra.Command {\n\tvar lang, dir, tag string\n\tcmd :=\n\t\t&cobra.Command{\n\t\t\tUse:          \"generate [resource]\",\n\t\t\tAliases:      []string{\"gen\"},\n",
                    "rendered": {
                      "text": "\nfunc GenerateCmd() *cobra.Command {\n\tvar lang, dir, tag string\n\tcmd :=\n\t\t&cobra.Command{\n\t\t\tUse:          \"generate [resource]\",\n\t\t\tAliases:      []string{\"gen\"},\n",
                      "markdown": "`\nfunc GenerateCmd() *cobra.Command {\n\tvar lang, dir, tag string\n\tcmd :=\n\t\t&cobra.Command{\n\t\t\tUse:          \"generate [resource]\",\n\t\t\tAliases:      []string{\"gen\"},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/generate.go"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 12,
                  "endLine": 174,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n\t}\n\tif fi.IsDir() {\n\t\t// found a git repository\n\t\treturn true\n\t}\n\n",
                    "rendered": {
                      "text": "\n\t}\n\tif fi.IsDir() {\n\t\t// found a git repository\n\t\treturn true\n\t}\n\n",
                      "markdown": "`\n\t}\n\tif fi.IsDir() {\n\t\t// found a git repository\n\t\treturn true\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/generate.go"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 25,
                  "endLine": 131,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t}\n\n\t// recursively check that parents are not a git repository, create an orphan branch & commit, cleanup\n\t// otherwise, remove the git repository and assume this should be a plain directory within the parent\n\tabsDir, err := filepath.Abs(dir)\n\tif err != nil {\n\t\treturn err\n",
                    "rendered": {
                      "text": "\t}\n\n\t// recursively check that parents are not a git repository, create an orphan branch & commit, cleanup\n\t// otherwise, remove the git repository and assume this should be a plain directory within the parent\n\tabsDir, err := filepath.Abs(dir)\n\tif err != nil {\n\t\treturn err\n",
                      "markdown": "`\t}\n\n\t// recursively check that parents are not a git repository, create an orphan branch & commit, cleanup\n\t// otherwise, remove the git repository and assume this should be a plain directory within the parent\n\tabsDir, err := filepath.Abs(dir)\n\tif err != nil {\n\t\treturn err\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/generate.go"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 44,
                  "endLine": 130,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\t\treturn err\n\t}\n\n\t// recursively check that parents are not a git repository, create an orphan branch & commit, cleanup\n\t// otherwise, remove the git repository and assume this should be a plain directory within the parent\n\tabsDir, err := filepath.Abs(dir)\n\tif err != nil {\n",
                    "rendered": {
                      "text": "\t\treturn err\n\t}\n\n\t// recursively check that parents are not a git repository, create an orphan branch & commit, cleanup\n\t// otherwise, remove the git repository and assume this should be a plain directory within the parent\n\tabsDir, err := filepath.Abs(dir)\n\tif err != nil {\n",
                      "markdown": "`\t\treturn err\n\t}\n\n\t// recursively check that parents are not a git repository, create an orphan branch & commit, cleanup\n\t// otherwise, remove the git repository and assume this should be a plain directory within the parent\n\tabsDir, err := filepath.Abs(dir)\n\tif err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/extism-dev/dev.go"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 64,
                  "endLine": 108,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\n\tdevCall.Flags().StringVarP(&execArgs.category, \"category\", \"c\", \"\", \"Category: sdk, pdk, plugin, runtime or other\")\n\tdevCall.Flags().StringVarP(&execArgs.repo, \"repo\", \"r\", \"\", \"Regex filter used on the repo name\")\n\tdevCall.Flags().IntVar(&callArgs.timeout, \"timeout\", 0, \"Plugin timeout in milliseconds\")\n\tdevCall.Flags().IntVarP(&callArgs.parallel, \"parallel\", \"p\", 1, \"Number of commands to execute in parallel\")\n\tdev.AddCommand(devCall)\n\n",
                    "rendered": {
                      "text": "\n\tdevCall.Flags().StringVarP(&execArgs.category, \"category\", \"c\", \"\", \"Category: sdk, pdk, plugin, runtime or other\")\n\tdevCall.Flags().StringVarP(&execArgs.repo, \"repo\", \"r\", \"\", \"Regex filter used on the repo name\")\n\tdevCall.Flags().IntVar(&callArgs.timeout, \"timeout\", 0, \"Plugin timeout in milliseconds\")\n\tdevCall.Flags().IntVarP(&callArgs.parallel, \"parallel\", \"p\", 1, \"Number of commands to execute in parallel\")\n\tdev.AddCommand(devCall)\n\n",
                      "markdown": "`\n\tdevCall.Flags().StringVarP(&execArgs.category, \"category\", \"c\", \"\", \"Category: sdk, pdk, plugin, runtime or other\")\n\tdevCall.Flags().StringVarP(&execArgs.repo, \"repo\", \"r\", \"\", \"Regex filter used on the repo name\")\n\tdevCall.Flags().IntVar(&callArgs.timeout, \"timeout\", 0, \"Plugin timeout in milliseconds\")\n\tdevCall.Flags().IntVarP(&callArgs.parallel, \"parallel\", \"p\", 1, \"Number of commands to execute in parallel\")\n\tdev.AddCommand(devCall)\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.github/actions/extism-cli/action.yml"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 12,
                  "endLine": 47,
                  "snippet": {
                    "text": "        go build -o extism .\n\n    - name: Install extism executable\n      shell: bash\n      run: |\n        ${{ inputs.sudo }} mv .extism-cli/extism/extism ${{ inputs.install_path }}\n",
                    "rendered": {
                      "text": "        go build -o extism .\n\n    - name: Install extism executable\n      shell: bash\n      run: |\n        ${{ inputs.sudo }} mv .extism-cli/extism/extism ${{ inputs.install_path }}\n",
                      "markdown": "`        go build -o extism .\n\n    - name: Install extism executable\n      shell: bash\n      run: |\n        ${{ inputs.sudo }} mv .extism-cli/extism/extism ${{ inputs.install_path }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.github/actions/extism-cli/action.yml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 12,
                  "endLine": 41,
                  "snippet": {
                    "text": "\n    - name: Build\n      if: steps.cache-extism-cli.outputs.cache-hit != 'true'\n      shell: bash\n      run: |\n        cd .extism-cli/extism\n        go build -o extism .\n\n",
                    "rendered": {
                      "text": "\n    - name: Build\n      if: steps.cache-extism-cli.outputs.cache-hit != 'true'\n      shell: bash\n      run: |\n        cd .extism-cli/extism\n        go build -o extism .\n\n",
                      "markdown": "`\n    - name: Build\n      if: steps.cache-extism-cli.outputs.cache-hit != 'true'\n      shell: bash\n      run: |\n        cd .extism-cli/extism\n        go build -o extism .\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.github/actions/extism-cli/action.yml"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 26,
                  "endLine": 48,
                  "endColumn": 30,
                  "snippet": {
                    "text": "    - name: Install extism executable\n      shell: bash\n      run: |\n        ${{ inputs.sudo }} mv .extism-cli/extism/extism ${{ inputs.install_path }}\n",
                    "rendered": {
                      "text": "    - name: Install extism executable\n      shell: bash\n      run: |\n        ${{ inputs.sudo }} mv .extism-cli/extism/extism ${{ inputs.install_path }}\n",
                      "markdown": "`    - name: Install extism executable\n      shell: bash\n      run: |\n        ${{ inputs.sudo }} mv .extism-cli/extism/extism ${{ inputs.install_path }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.github/actions/extism-cli/action.yml"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 12,
                  "endLine": 47,
                  "snippet": {
                    "text": "        go build -o extism .\n\n    - name: Install extism executable\n      shell: bash\n      run: |\n        ${{ inputs.sudo }} mv .extism-cli/extism/extism ${{ inputs.install_path }}\n",
                    "rendered": {
                      "text": "        go build -o extism .\n\n    - name: Install extism executable\n      shell: bash\n      run: |\n        ${{ inputs.sudo }} mv .extism-cli/extism/extism ${{ inputs.install_path }}\n",
                      "markdown": "`        go build -o extism .\n\n    - name: Install extism executable\n      shell: bash\n      run: |\n        ${{ inputs.sudo }} mv .extism-cli/extism/extism ${{ inputs.install_path }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.github/actions/extism-cli/action.yml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 12,
                  "endLine": 41,
                  "snippet": {
                    "text": "\n    - name: Build\n      if: steps.cache-extism-cli.outputs.cache-hit != 'true'\n      shell: bash\n      run: |\n        cd .extism-cli/extism\n        go build -o extism .\n\n",
                    "rendered": {
                      "text": "\n    - name: Build\n      if: steps.cache-extism-cli.outputs.cache-hit != 'true'\n      shell: bash\n      run: |\n        cd .extism-cli/extism\n        go build -o extism .\n\n",
                      "markdown": "`\n    - name: Build\n      if: steps.cache-extism-cli.outputs.cache-hit != 'true'\n      shell: bash\n      run: |\n        cd .extism-cli/extism\n        go build -o extism .\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 7,
                  "endLine": 25,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    steps:\n    - uses: actions/checkout@v4\n    - run: |\n        bash ./scripts/set-version.sh \"${{ github.event.release.tag_name }}\"\n    - uses: wangyoucao577/go-release-action@v1\n      with:\n        github_token: ${{ secrets.GITHUB_TOKEN }}\n",
                    "rendered": {
                      "text": "    steps:\n    - uses: actions/checkout@v4\n    - run: |\n        bash ./scripts/set-version.sh \"${{ github.event.release.tag_name }}\"\n    - uses: wangyoucao577/go-release-action@v1\n      with:\n        github_token: ${{ secrets.GITHUB_TOKEN }}\n",
                      "markdown": "`    steps:\n    - uses: actions/checkout@v4\n    - run: |\n        bash ./scripts/set-version.sh \"${{ github.event.release.tag_name }}\"\n    - uses: wangyoucao577/go-release-action@v1\n      with:\n        github_token: ${{ secrets.GITHUB_TOKEN }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 7,
                  "endLine": 25,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    steps:\n    - uses: actions/checkout@v4\n    - run: |\n        bash ./scripts/set-version.sh \"${{ github.event.release.tag_name }}\"\n    - uses: wangyoucao577/go-release-action@v1\n      with:\n        github_token: ${{ secrets.GITHUB_TOKEN }}\n",
                    "rendered": {
                      "text": "    steps:\n    - uses: actions/checkout@v4\n    - run: |\n        bash ./scripts/set-version.sh \"${{ github.event.release.tag_name }}\"\n    - uses: wangyoucao577/go-release-action@v1\n      with:\n        github_token: ${{ secrets.GITHUB_TOKEN }}\n",
                      "markdown": "`    steps:\n    - uses: actions/checkout@v4\n    - run: |\n        bash ./scripts/set-version.sh \"${{ github.event.release.tag_name }}\"\n    - uses: wangyoucao577/go-release-action@v1\n      with:\n        github_token: ${{ secrets.GITHUB_TOKEN }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/.github/workflows/purge.yml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 9,
                  "endLine": 15,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    name: Purge get.extism.org cache\n    steps:\n      - run: |\n          curl \\\n            -X POST \\\n            -H  \"Authorization: Bearer ${{ secrets.CF_API_TOKEN }}\" \\\n            -d '{\"files\": [\"https://get.extism.org/cli\"]}' \\\n",
                    "rendered": {
                      "text": "    name: Purge get.extism.org cache\n    steps:\n      - run: |\n          curl \\\n            -X POST \\\n            -H  \"Authorization: Bearer ${{ secrets.CF_API_TOKEN }}\" \\\n            -d '{\"files\": [\"https://get.extism.org/cli\"]}' \\\n",
                      "markdown": "`    name: Purge get.extism.org cache\n    steps:\n      - run: |\n          curl \\\n            -X POST \\\n            -H  \"Authorization: Bearer ${{ secrets.CF_API_TOKEN }}\" \\\n            -d '{\"files\": [\"https://get.extism.org/cli\"]}' \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/update-go-sdk.sh"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 22,
                  "endLine": 12,
                  "endColumn": 30,
                  "snippet": {
                    "text": "go mod tidy\n\n# Create commit and push\ngit commit -am \"chore: update go-sdk\"\n",
                    "rendered": {
                      "text": "go mod tidy\n\n# Create commit and push\ngit commit -am \"chore: update go-sdk\"\n",
                      "markdown": "`go mod tidy\n\n# Create commit and push\ngit commit -am \"chore: update go-sdk\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/update-go-sdk.sh"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 1,
                  "endLine": 7,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\nVERSION=${1-main}\n\n# update cli\ngo get -u \"github.com/extism/go-sdk@$VERSION\"\ngo mod tidy\n\n",
                    "rendered": {
                      "text": "\nVERSION=${1-main}\n\n# update cli\ngo get -u \"github.com/extism/go-sdk@$VERSION\"\ngo mod tidy\n\n",
                      "markdown": "`\nVERSION=${1-main}\n\n# update cli\ngo get -u \"github.com/extism/go-sdk@$VERSION\"\ngo mod tidy\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/update-go-sdk.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n#\n# usage: `./scripts/update-go-sdk.sh`\n\nVERSION=${1-main}\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n#\n# usage: `./scripts/update-go-sdk.sh`\n\nVERSION=${1-main}\n",
                      "markdown": "`#!/usr/bin/env bash\n#\n# usage: `./scripts/update-go-sdk.sh`\n\nVERSION=${1-main}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/update-go-sdk.sh"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 24,
                  "endLine": 12,
                  "endColumn": 4,
                  "snippet": {
                    "text": "go get -u \"github.com/extism/go-sdk@$VERSION\"\ngo mod tidy\n\n# Create commit and push\ngit commit -am \"chore: update go-sdk\"\n",
                    "rendered": {
                      "text": "go get -u \"github.com/extism/go-sdk@$VERSION\"\ngo mod tidy\n\n# Create commit and push\ngit commit -am \"chore: update go-sdk\"\n",
                      "markdown": "`go get -u \"github.com/extism/go-sdk@$VERSION\"\ngo mod tidy\n\n# Create commit and push\ngit commit -am \"chore: update go-sdk\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/update-go-sdk.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n#\n# usage: `./scripts/update-go-sdk.sh`\n\nVERSION=${1-main}\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n#\n# usage: `./scripts/update-go-sdk.sh`\n\nVERSION=${1-main}\n",
                      "markdown": "`#!/usr/bin/env bash\n#\n# usage: `./scripts/update-go-sdk.sh`\n\nVERSION=${1-main}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000703"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Username)",
            "id": "BD000703"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/get-extism.sh"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 8,
                  "endLine": 90,
                  "endColumn": 14,
                  "snippet": {
                    "text": "done\n\n\n_user=$(whoami)\nif [ \"$_user\" = \"root\" ]; then\n  _sudo=\"\"\nelse\n",
                    "rendered": {
                      "text": "done\n\n\n_user=$(whoami)\nif [ \"$_user\" = \"root\" ]; then\n  _sudo=\"\"\nelse\n",
                      "markdown": "`done\n\n\n_user=$(whoami)\nif [ \"$_user\" = \"root\" ]; then\n  _sudo=\"\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/get-extism.sh"
                },
                "region": {
                  "startLine": 179,
                  "startColumn": 3,
                  "endLine": 179,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    go_install_exe\n    exit 0\n  else\n    curl -L -s \"$download_url/$version/extism-$version-$os-$arch.tar.gz\" | untar\n  fi\n  print \"extism executable installed to $out_prefix/extism\"\nelse\n",
                    "rendered": {
                      "text": "    go_install_exe\n    exit 0\n  else\n    curl -L -s \"$download_url/$version/extism-$version-$os-$arch.tar.gz\" | untar\n  fi\n  print \"extism executable installed to $out_prefix/extism\"\nelse\n",
                      "markdown": "`    go_install_exe\n    exit 0\n  else\n    curl -L -s \"$download_url/$version/extism-$version-$os-$arch.tar.gz\" | untar\n  fi\n  print \"extism executable installed to $out_prefix/extism\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/get-extism.sh"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 13,
                  "endLine": 147,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\nif [ \"$use_go\" = \"y\" ]; then\n  version=\"latest\" \n  go_bin=$(go env GOBIN)\n  if [ \"$go_bin\" = \"\" ]; then\n    go_bin=\"$HOME/go/bin\"\n  fi\n",
                    "rendered": {
                      "text": "\nif [ \"$use_go\" = \"y\" ]; then\n  version=\"latest\" \n  go_bin=$(go env GOBIN)\n  if [ \"$go_bin\" = \"\" ]; then\n    go_bin=\"$HOME/go/bin\"\n  fi\n",
                      "markdown": "`\nif [ \"$use_go\" = \"y\" ]; then\n  version=\"latest\" \n  go_bin=$(go env GOBIN)\n  if [ \"$go_bin\" = \"\" ]; then\n    go_bin=\"$HOME/go/bin\"\n  fi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/get-extism.sh"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 8,
                  "endLine": 43,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\ngo_install_exe() {\n  print \"Copying executable to $out_prefix/extism\"\n  $_sudo cp $go_bin/extism $out_prefix/extism\n}\n\nprint() {\n",
                    "rendered": {
                      "text": "\ngo_install_exe() {\n  print \"Copying executable to $out_prefix/extism\"\n  $_sudo cp $go_bin/extism $out_prefix/extism\n}\n\nprint() {\n",
                      "markdown": "`\ngo_install_exe() {\n  print \"Copying executable to $out_prefix/extism\"\n  $_sudo cp $go_bin/extism $out_prefix/extism\n}\n\nprint() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/get-extism.sh"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 8,
                  "endLine": 38,
                  "endColumn": 15,
                  "snippet": {
                    "text": "untar() {\n  print \"Extracting release to $out_prefix/extism\"\n  $_sudo sh -c \"tar -xzO extism > \\\"$out_prefix/extism\\\"\"\n  $_sudo chmod +x \"$out_prefix/extism\"\n}\n\ngo_install_exe() {\n",
                    "rendered": {
                      "text": "untar() {\n  print \"Extracting release to $out_prefix/extism\"\n  $_sudo sh -c \"tar -xzO extism > \\\"$out_prefix/extism\\\"\"\n  $_sudo chmod +x \"$out_prefix/extism\"\n}\n\ngo_install_exe() {\n",
                      "markdown": "`untar() {\n  print \"Extracting release to $out_prefix/extism\"\n  $_sudo sh -c \"tar -xzO extism > \\\"$out_prefix/extism\\\"\"\n  $_sudo chmod +x \"$out_prefix/extism\"\n}\n\ngo_install_exe() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/get-extism.sh"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 60,
                  "endLine": 32,
                  "endColumn": 65,
                  "snippet": {
                    "text": "}\n\nlatest_tag() {\n  curl -s $latest_url | grep tag_name | awk '{ print $2 }' | sed 's/[\",]//g'\n}\n\nuntar() {\n",
                    "rendered": {
                      "text": "}\n\nlatest_tag() {\n  curl -s $latest_url | grep tag_name | awk '{ print $2 }' | sed 's/[\",]//g'\n}\n\nuntar() {\n",
                      "markdown": "`}\n\nlatest_tag() {\n  curl -s $latest_url | grep tag_name | awk '{ print $2 }' | sed 's/[\",]//g'\n}\n\nuntar() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/get-extism.sh"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 39,
                  "endLine": 32,
                  "endColumn": 44,
                  "snippet": {
                    "text": "}\n\nlatest_tag() {\n  curl -s $latest_url | grep tag_name | awk '{ print $2 }' | sed 's/[\",]//g'\n}\n\nuntar() {\n",
                    "rendered": {
                      "text": "}\n\nlatest_tag() {\n  curl -s $latest_url | grep tag_name | awk '{ print $2 }' | sed 's/[\",]//g'\n}\n\nuntar() {\n",
                      "markdown": "`}\n\nlatest_tag() {\n  curl -s $latest_url | grep tag_name | awk '{ print $2 }' | sed 's/[\",]//g'\n}\n\nuntar() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/get-extism.sh"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 23,
                  "endLine": 32,
                  "endColumn": 29,
                  "snippet": {
                    "text": "}\n\nlatest_tag() {\n  curl -s $latest_url | grep tag_name | awk '{ print $2 }' | sed 's/[\",]//g'\n}\n\nuntar() {\n",
                    "rendered": {
                      "text": "}\n\nlatest_tag() {\n  curl -s $latest_url | grep tag_name | awk '{ print $2 }' | sed 's/[\",]//g'\n}\n\nuntar() {\n",
                      "markdown": "`}\n\nlatest_tag() {\n  curl -s $latest_url | grep tag_name | awk '{ print $2 }' | sed 's/[\",]//g'\n}\n\nuntar() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/get-extism.sh"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 1,
                  "endLine": 32,
                  "endColumn": 7,
                  "snippet": {
                    "text": "}\n\nlatest_tag() {\n  curl -s $latest_url | grep tag_name | awk '{ print $2 }' | sed 's/[\",]//g'\n}\n\nuntar() {\n",
                    "rendered": {
                      "text": "}\n\nlatest_tag() {\n  curl -s $latest_url | grep tag_name | awk '{ print $2 }' | sed 's/[\",]//g'\n}\n\nuntar() {\n",
                      "markdown": "`}\n\nlatest_tag() {\n  curl -s $latest_url | grep tag_name | awk '{ print $2 }' | sed 's/[\",]//g'\n}\n\nuntar() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/get-extism.sh"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 25,
                  "endLine": 18,
                  "endColumn": 33,
                  "snippet": {
                    "text": "arch=$(uname -m)\n\nusage() {\n  echo \"get-extism.sh - A script to help fetch the Extism CLI\"\n  echo \"\"\n  echo \"Flags\"\n  echo \"-----\"\n",
                    "rendered": {
                      "text": "arch=$(uname -m)\n\nusage() {\n  echo \"get-extism.sh - A script to help fetch the Extism CLI\"\n  echo \"\"\n  echo \"Flags\"\n  echo \"-----\"\n",
                      "markdown": "`arch=$(uname -m)\n\nusage() {\n  echo \"get-extism.sh - A script to help fetch the Extism CLI\"\n  echo \"\"\n  echo \"Flags\"\n  echo \"-----\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/get-extism.sh"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 15,
                  "endLine": 14,
                  "endColumn": 20,
                  "snippet": {
                    "text": "version=\"\"\n\n# Determine default arch/os\nos=$(uname -s | awk '{print tolower($0)}')\narch=$(uname -m)\n\nusage() {\n",
                    "rendered": {
                      "text": "version=\"\"\n\n# Determine default arch/os\nos=$(uname -s | awk '{print tolower($0)}')\narch=$(uname -m)\n\nusage() {\n",
                      "markdown": "`version=\"\"\n\n# Determine default arch/os\nos=$(uname -s | awk '{print tolower($0)}')\narch=$(uname -m)\n\nusage() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/release.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n#\n# usage: `./scripts/release.sh`\n\nset -eu\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n#\n# usage: `./scripts/release.sh`\n\nset -eu\n",
                      "markdown": "`#!/usr/bin/env bash\n#\n# usage: `./scripts/release.sh`\n\nset -eu\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/release.sh"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 14,
                  "endLine": 10,
                  "endColumn": 4,
                  "snippet": {
                    "text": "version=$(echo -n \"$1\" | sed 's/v//g')\nTAG=\"v$version\"\n\ngit tag \"$TAG\"\ngit push origin \"$TAG\"\ngh release create \"$TAG\" --generate-notes\n",
                    "rendered": {
                      "text": "version=$(echo -n \"$1\" | sed 's/v//g')\nTAG=\"v$version\"\n\ngit tag \"$TAG\"\ngit push origin \"$TAG\"\ngh release create \"$TAG\" --generate-notes\n",
                      "markdown": "`version=$(echo -n \"$1\" | sed 's/v//g')\nTAG=\"v$version\"\n\ngit tag \"$TAG\"\ngit push origin \"$TAG\"\ngh release create \"$TAG\" --generate-notes\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/release.sh"
                },
                "region": {
                  "startLine": 8,
                  "endLine": 9,
                  "endColumn": 4,
                  "snippet": {
                    "text": "set -eu\nversion=$(echo -n \"$1\" | sed 's/v//g')\nTAG=\"v$version\"\n\ngit tag \"$TAG\"\ngit push origin \"$TAG\"\ngh release create \"$TAG\" --generate-notes\n",
                    "rendered": {
                      "text": "set -eu\nversion=$(echo -n \"$1\" | sed 's/v//g')\nTAG=\"v$version\"\n\ngit tag \"$TAG\"\ngit push origin \"$TAG\"\ngh release create \"$TAG\" --generate-notes\n",
                      "markdown": "`set -eu\nversion=$(echo -n \"$1\" | sed 's/v//g')\nTAG=\"v$version\"\n\ngit tag \"$TAG\"\ngit push origin \"$TAG\"\ngh release create \"$TAG\" --generate-notes\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/release.sh"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 24,
                  "endLine": 6,
                  "endColumn": 29,
                  "snippet": {
                    "text": "# usage: `./scripts/release.sh`\n\nset -eu\nversion=$(echo -n \"$1\" | sed 's/v//g')\nTAG=\"v$version\"\n\ngit tag \"$TAG\"\n",
                    "rendered": {
                      "text": "# usage: `./scripts/release.sh`\n\nset -eu\nversion=$(echo -n \"$1\" | sed 's/v//g')\nTAG=\"v$version\"\n\ngit tag \"$TAG\"\n",
                      "markdown": "`# usage: `./scripts/release.sh`\n\nset -eu\nversion=$(echo -n \"$1\" | sed 's/v//g')\nTAG=\"v$version\"\n\ngit tag \"$TAG\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/release.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n#\n# usage: `./scripts/release.sh`\n\nset -eu\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n#\n# usage: `./scripts/release.sh`\n\nset -eu\n",
                      "markdown": "`#!/usr/bin/env bash\n#\n# usage: `./scripts/release.sh`\n\nset -eu\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/set-version.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n#\n# usage: ./scripts/set-version 0.0.0\n\nset -eu\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n#\n# usage: ./scripts/set-version 0.0.0\n\nset -eu\n",
                      "markdown": "`#!/usr/bin/env bash\n#\n# usage: ./scripts/set-version 0.0.0\n\nset -eu\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/set-version.sh"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 24,
                  "endLine": 6,
                  "endColumn": 29,
                  "snippet": {
                    "text": "# usage: ./scripts/set-version 0.0.0\n\nset -eu\nversion=$(echo -n \"$1\" | sed 's/v//g')\necho -n \"$version\" > extism/VERSION\n",
                    "rendered": {
                      "text": "# usage: ./scripts/set-version 0.0.0\n\nset -eu\nversion=$(echo -n \"$1\" | sed 's/v//g')\necho -n \"$version\" > extism/VERSION\n",
                      "markdown": "`# usage: ./scripts/set-version 0.0.0\n\nset -eu\nversion=$(echo -n \"$1\" | sed 's/v//g')\necho -n \"$version\" > extism/VERSION\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/scripts/set-version.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n#\n# usage: ./scripts/set-version 0.0.0\n\nset -eu\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n#\n# usage: ./scripts/set-version 0.0.0\n\nset -eu\n",
                      "markdown": "`#!/usr/bin/env bash\n#\n# usage: ./scripts/set-version 0.0.0\n\nset -eu\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/lib.go"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 19,
                  "endLine": 170,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\t\tPrint(\"Installing\", rel.GetTagName(), \"to\", installArgs.prefix)\n\t\t\turl := asset.GetBrowserDownloadURL()\n\t\t\tPrint(\"Fetching\", url)\n\t\t\tres, err := http.Get(url)\n\t\t\tif err != nil {\n\t\t\t\treturn err\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\tPrint(\"Installing\", rel.GetTagName(), \"to\", installArgs.prefix)\n\t\t\turl := asset.GetBrowserDownloadURL()\n\t\t\tPrint(\"Fetching\", url)\n\t\t\tres, err := http.Get(url)\n\t\t\tif err != nil {\n\t\t\t\treturn err\n\t\t\t}\n",
                      "markdown": "`\t\t\tPrint(\"Installing\", rel.GetTagName(), \"to\", installArgs.prefix)\n\t\t\turl := asset.GetBrowserDownloadURL()\n\t\t\tPrint(\"Fetching\", url)\n\t\t\tres, err := http.Get(url)\n\t\t\tif err != nil {\n\t\t\t\treturn err\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/lib.go"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 22,
                  "endLine": 50,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\tLog(\"Fetching releases from Github\")\n\tclient := github.NewClient(nil)\n\tif GithubToken != \"\" {\n\t\tclient = client.WithAuthToken(GithubToken)\n\t}\n\treleases, _, err = client.Repositories.ListReleases(ctx, \"extism\", \"extism\", nil)\n\tif err != nil {\n",
                    "rendered": {
                      "text": "\tLog(\"Fetching releases from Github\")\n\tclient := github.NewClient(nil)\n\tif GithubToken != \"\" {\n\t\tclient = client.WithAuthToken(GithubToken)\n\t}\n\treleases, _, err = client.Repositories.ListReleases(ctx, \"extism\", \"extism\", nil)\n\tif err != nil {\n",
                      "markdown": "`\tLog(\"Fetching releases from Github\")\n\tclient := github.NewClient(nil)\n\tif GithubToken != \"\" {\n\t\tclient = client.WithAuthToken(GithubToken)\n\t}\n\treleases, _, err = client.Repositories.ListReleases(ctx, \"extism\", \"extism\", nil)\n\tif err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/lib.go"
                },
                "region": {
                  "startLine": 406,
                  "startColumn": 95,
                  "endLine": 406,
                  "endColumn": 100,
                  "snippet": {
                    "text": "e:          \"install\",\n\t\tShort:        \"Install libextism\",\n\t\tSilenceUsage: true,\n\t\tRunE:         RunArgs(runLibInstall, installArgs),\n\t}\n\tlibInstall.Flags().StringVar(&installArgs.version, \"version\", \"\",\n\t\t\"Install a specified Extism version, `git` or `latest` can be used to specify the latest from git and no version will default to the most recent release\")\n\tlibInstall.Flags().StringVar(&installArgs.os, \"os\", runtime.GOOS, \"The target OS: linux, darwin, windows\")\n\tlibInstall.Flags().StringVar(&installArgs.arch, \"arch\", runtime.GOARCH, \"The target architecture: x86_64, aarch64\")\n\tlibInstall.Flags(",
                    "rendered": {
                      "text": "e:          \"install\",\n\t\tShort:        \"Install libextism\",\n\t\tSilenceUsage: true,\n\t\tRunE:         RunArgs(runLibInstall, installArgs),\n\t}\n\tlibInstall.Flags().StringVar(&installArgs.version, \"version\", \"\",\n\t\t\"Install a specified Extism version, `git` or `latest` can be used to specify the latest from git and no version will default to the most recent release\")\n\tlibInstall.Flags().StringVar(&installArgs.os, \"os\", runtime.GOOS, \"The target OS: linux, darwin, windows\")\n\tlibInstall.Flags().StringVar(&installArgs.arch, \"arch\", runtime.GOARCH, \"The target architecture: x86_64, aarch64\")\n\tlibInstall.Flags(",
                      "markdown": "`e:          \"install\",\n\t\tShort:        \"Install libextism\",\n\t\tSilenceUsage: true,\n\t\tRunE:         RunArgs(runLibInstall, installArgs),\n\t}\n\tlibInstall.Flags().StringVar(&installArgs.version, \"version\", \"\",\n\t\t\"Install a specified Extism version, `git` or `latest` can be used to specify the latest from git and no version will default to the most recent release\")\n\tlibInstall.Flags().StringVar(&installArgs.os, \"os\", runtime.GOOS, \"The target OS: linux, darwin, windows\")\n\tlibInstall.Flags().StringVar(&installArgs.arch, \"arch\", runtime.GOARCH, \"The target architecture: x86_64, aarch64\")\n\tlibInstall.Flags(`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/lib.go"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 15,
                  "endLine": 182,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t\t\treturn err\n\t\t\t}\n\n\t\t\tLog(\"Reading tar file\")\n\t\t\ttarReader := tar.NewReader(r)\n\n\t\t\tfor {\n",
                    "rendered": {
                      "text": "\t\t\t\treturn err\n\t\t\t}\n\n\t\t\tLog(\"Reading tar file\")\n\t\t\ttarReader := tar.NewReader(r)\n\n\t\t\tfor {\n",
                      "markdown": "`\t\t\t\treturn err\n\t\t\t}\n\n\t\t\tLog(\"Reading tar file\")\n\t\t\ttarReader := tar.NewReader(r)\n\n\t\t\tfor {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/extism.zip/lib.go"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 34,
                  "endLine": 91,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\t\t}\n\t}\n\n\treturn nil, errors.New(\"unable to find release \" + tag)\n}\n\nfunc assetPrefix(os, arch, libc string) (string, error) {\n",
                    "rendered": {
                      "text": "\t\t}\n\t}\n\n\treturn nil, errors.New(\"unable to find release \" + tag)\n}\n\nfunc assetPrefix(os, arch, libc string) (string, error) {\n",
                      "markdown": "`\t\t}\n\t}\n\n\treturn nil, errors.New(\"unable to find release \" + tag)\n}\n\nfunc assetPrefix(os, arch, libc string) (string, error) {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}