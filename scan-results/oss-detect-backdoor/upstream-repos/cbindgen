{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/tests/expectations/documentation.pyx"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 29,
                  "endLine": 27,
                  "endColumn": 33,
                  "snippet": {
                    "text": "  # Attention:\n  #\n  #    Rust is going to trim all leading `/` symbols. If you want to use them as a\n  #    marker you need to add at least a single whitespace inbetween the tripple\n  #    slash doc-comment marker and the rest.\n  #\n  void root();\n",
                    "rendered": {
                      "text": "  # Attention:\n  #\n  #    Rust is going to trim all leading `/` symbols. If you want to use them as a\n  #    marker you need to add at least a single whitespace inbetween the tripple\n  #    slash doc-comment marker and the rest.\n  #\n  void root();\n",
                      "markdown": "`  # Attention:\n  #\n  #    Rust is going to trim all leading `/` symbols. If you want to use them as a\n  #    marker you need to add at least a single whitespace inbetween the tripple\n  #    slash doc-comment marker and the rest.\n  #\n  void root();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/tests/expectations/documentation.pyx"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 7,
                  "endLine": 14,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n  # The root of all evil.\n  #\n  # But at least it contains some more documentation as someone would expect\n  # from a simple test case like this.\n  #\n  # # Hint\n",
                    "rendered": {
                      "text": "\n  # The root of all evil.\n  #\n  # But at least it contains some more documentation as someone would expect\n  # from a simple test case like this.\n  #\n  # # Hint\n",
                      "markdown": "`\n  # The root of all evil.\n  #\n  # But at least it contains some more documentation as someone would expect\n  # from a simple test case like this.\n  #\n  # # Hint\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/tests/expectations/documentation.pyx"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 69,
                  "endLine": 15,
                  "snippet": {
                    "text": "\n  # The root of all evil.\n  #\n  # But at least it contains some more documentation as someone would expect\n  # from a simple test case like this.\n  #\n  # # Hint\n  #\n",
                    "rendered": {
                      "text": "\n  # The root of all evil.\n  #\n  # But at least it contains some more documentation as someone would expect\n  # from a simple test case like this.\n  #\n  # # Hint\n  #\n",
                      "markdown": "`\n  # The root of all evil.\n  #\n  # But at least it contains some more documentation as someone would expect\n  # from a simple test case like this.\n  #\n  # # Hint\n  #\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/tests/depfile/cbindgen_test.cmake"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 30,
                  "endLine": 11,
                  "endColumn": 34,
                  "snippet": {
                    "text": "set(CBINDGEN_PATH \"${CBINDGEN_PATH}\" CACHE INTERNAL \"\")\n\nfunction(add_cbindgen_command custom_target_name header_destination)\n    # Place the depfile always at the same location, so the outer test framework can locate the file easily\n    set(depfile_destination     \"${CMAKE_BINARY_DIR}/depfile.d\")\n    add_custom_command(\n        OUTPUT\n",
                    "rendered": {
                      "text": "set(CBINDGEN_PATH \"${CBINDGEN_PATH}\" CACHE INTERNAL \"\")\n\nfunction(add_cbindgen_command custom_target_name header_destination)\n    # Place the depfile always at the same location, so the outer test framework can locate the file easily\n    set(depfile_destination     \"${CMAKE_BINARY_DIR}/depfile.d\")\n    add_custom_command(\n        OUTPUT\n",
                      "markdown": "`set(CBINDGEN_PATH \"${CBINDGEN_PATH}\" CACHE INTERNAL \"\")\n\nfunction(add_cbindgen_command custom_target_name header_destination)\n    # Place the depfile always at the same location, so the outer test framework can locate the file easily\n    set(depfile_destination     \"${CMAKE_BINARY_DIR}/depfile.d\")\n    add_custom_command(\n        OUTPUT\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/tests/rust/documentation_attr.rs"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 46,
                  "endLine": 2,
                  "endColumn": 50,
                  "snippet": {
                    "text": "#[doc=\"With doc attr, each attr contribute to one line of document\"]\n#[doc=\"like this one with a new line character at its end\"]\n#[doc=\"and this one as well. So they are in the same paragraph\"]\n#[doc=\"\"]\n#[doc=\"Line ends with one new line\\nshould not break\"]\n",
                    "rendered": {
                      "text": "#[doc=\"With doc attr, each attr contribute to one line of document\"]\n#[doc=\"like this one with a new line character at its end\"]\n#[doc=\"and this one as well. So they are in the same paragraph\"]\n#[doc=\"\"]\n#[doc=\"Line ends with one new line\\nshould not break\"]\n",
                      "markdown": "`#[doc=\"With doc attr, each attr contribute to one line of document\"]\n#[doc=\"like this one with a new line character at its end\"]\n#[doc=\"and this one as well. So they are in the same paragraph\"]\n#[doc=\"\"]\n#[doc=\"Line ends with one new line\\nshould not break\"]\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/language_backend/cython.rs"
                },
                "region": {
                  "startLine": 396,
                  "startColumn": 45,
                  "endLine": 396,
                  "endColumn": 50,
                  "snippet": {
                    "text": "                // In C++, same order as defined is required.\n                let ordered_fields = out.bindings().struct_field_names(path);\n                for ordered_key in ordered_fields.iter() {\n                    if let Some(lit) = fields.get(ordered_key) {\n                        if !is_first_field {\n                            write!(out, \", \");\n                        } else {\n",
                    "rendered": {
                      "text": "                // In C++, same order as defined is required.\n                let ordered_fields = out.bindings().struct_field_names(path);\n                for ordered_key in ordered_fields.iter() {\n                    if let Some(lit) = fields.get(ordered_key) {\n                        if !is_first_field {\n                            write!(out, \", \");\n                        } else {\n",
                      "markdown": "`                // In C++, same order as defined is required.\n                let ordered_fields = out.bindings().struct_field_names(path);\n                for ordered_key in ordered_fields.iter() {\n                    if let Some(lit) = fields.get(ordered_key) {\n                        if !is_first_field {\n                            write!(out, \", \");\n                        } else {\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/ir/item.rs"
                },
                "region": {
                  "startLine": 213,
                  "startColumn": 23,
                  "endLine": 213,
                  "endColumn": 28,
                  "snippet": {
                    "text": "    where\n        F: FnMut(&T),\n    {\n        match self.data.get(path) {\n            Some(ItemValue::Cfg(items)) => {\n                for item in items {\n                    callback(item);\n",
                    "rendered": {
                      "text": "    where\n        F: FnMut(&T),\n    {\n        match self.data.get(path) {\n            Some(ItemValue::Cfg(items)) => {\n                for item in items {\n                    callback(item);\n",
                      "markdown": "`    where\n        F: FnMut(&T),\n    {\n        match self.data.get(path) {\n            Some(ItemValue::Cfg(items)) => {\n                for item in items {\n                    callback(item);\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/ir/item.rs"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 29,
                  "endLine": 158,
                  "endColumn": 34,
                  "snippet": {
                    "text": "    }\n\n    pub fn get_items(&self, path: &Path) -> Option<Vec<ItemContainer>> {\n        Some(match *self.data.get(path)? {\n            ItemValue::Cfg(ref items) => items.iter().map(|x| x.container()).collect(),\n            ItemValue::Single(ref item) => vec![item.container()],\n        })\n",
                    "rendered": {
                      "text": "    }\n\n    pub fn get_items(&self, path: &Path) -> Option<Vec<ItemContainer>> {\n        Some(match *self.data.get(path)? {\n            ItemValue::Cfg(ref items) => items.iter().map(|x| x.container()).collect(),\n            ItemValue::Single(ref item) => vec![item.container()],\n        })\n",
                      "markdown": "`    }\n\n    pub fn get_items(&self, path: &Path) -> Option<Vec<ItemContainer>> {\n        Some(match *self.data.get(path)? {\n            ItemValue::Cfg(ref items) => items.iter().map(|x| x.container()).collect(),\n            ItemValue::Single(ref item) => vec![item.container()],\n        })\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/config.rs"
                },
                "region": {
                  "startLine": 372,
                  "startColumn": 39,
                  "endLine": 372,
                  "endColumn": 44,
                  "snippet": {
                    "text": "    }\n\n    pub(crate) fn rename(&self, item_name: &mut String) {\n        if let Some(name) = self.rename.get(item_name) {\n            item_name.clone_from(name);\n            if self.renaming_overrides_prefixing {\n                return;\n",
                    "rendered": {
                      "text": "    }\n\n    pub(crate) fn rename(&self, item_name: &mut String) {\n        if let Some(name) = self.rename.get(item_name) {\n            item_name.clone_from(name);\n            if self.renaming_overrides_prefixing {\n                return;\n",
                      "markdown": "`    }\n\n    pub(crate) fn rename(&self, item_name: &mut String) {\n        if let Some(name) = self.rename.get(item_name) {\n            item_name.clone_from(name);\n            if self.renaming_overrides_prefixing {\n                return;\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/config.rs"
                },
                "region": {
                  "startLine": 368,
                  "startColumn": 17,
                  "endLine": 368,
                  "endColumn": 22,
                  "snippet": {
                    "text": "    }\n\n    pub(crate) fn post_body(&self, path: &Path) -> Option<&str> {\n        self.body.get(path.name()).map(|s| s.trim_matches('\\n'))\n    }\n\n    pub(crate) fn rename(&self, item_name: &mut String) {\n",
                    "rendered": {
                      "text": "    }\n\n    pub(crate) fn post_body(&self, path: &Path) -> Option<&str> {\n        self.body.get(path.name()).map(|s| s.trim_matches('\\n'))\n    }\n\n    pub(crate) fn rename(&self, item_name: &mut String) {\n",
                      "markdown": "`    }\n\n    pub(crate) fn post_body(&self, path: &Path) -> Option<&str> {\n        self.body.get(path.name()).map(|s| s.trim_matches('\\n'))\n    }\n\n    pub(crate) fn rename(&self, item_name: &mut String) {\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/config.rs"
                },
                "region": {
                  "startLine": 364,
                  "startColumn": 21,
                  "endLine": 364,
                  "endColumn": 26,
                  "snippet": {
                    "text": "    }\n\n    pub(crate) fn pre_body(&self, path: &Path) -> Option<&str> {\n        self.pre_body.get(path.name()).map(|s| s.trim_matches('\\n'))\n    }\n\n    pub(crate) fn post_body(&self, path: &Path) -> Option<&str> {\n",
                    "rendered": {
                      "text": "    }\n\n    pub(crate) fn pre_body(&self, path: &Path) -> Option<&str> {\n        self.pre_body.get(path.name()).map(|s| s.trim_matches('\\n'))\n    }\n\n    pub(crate) fn post_body(&self, path: &Path) -> Option<&str> {\n",
                      "markdown": "`    }\n\n    pub(crate) fn pre_body(&self, path: &Path) -> Option<&str> {\n        self.pre_body.get(path.name()).map(|s| s.trim_matches('\\n'))\n    }\n\n    pub(crate) fn post_body(&self, path: &Path) -> Option<&str> {\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/config.rs"
                },
                "region": {
                  "startLine": 312,
                  "startColumn": 49,
                  "endLine": 312,
                  "endColumn": 55,
                  "snippet": {
                    "text": "        Ok(match &*s.to_lowercase() {\n            \"name\" => Name,\n            \"none\" => None,\n            _ => return Err(format!(\"Unrecognized sort option: '{}'.\", s)),\n        })\n    }\n}\n",
                    "rendered": {
                      "text": "        Ok(match &*s.to_lowercase() {\n            \"name\" => Name,\n            \"none\" => None,\n            _ => return Err(format!(\"Unrecognized sort option: '{}'.\", s)),\n        })\n    }\n}\n",
                      "markdown": "`        Ok(match &*s.to_lowercase() {\n            \"name\" => Name,\n            \"none\" => None,\n            _ => return Err(format!(\"Unrecognized sort option: '{}'.\", s)),\n        })\n    }\n}\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/config.rs"
                },
                "region": {
                  "startLine": 297,
                  "startColumn": 28,
                  "endLine": 297,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\ndeserialize_enum_str!(ItemType);\n\n/// Type which specifies the sort order of functions\n#[derive(Debug, Clone, Copy, PartialEq, Eq)]\npub enum SortKey {\n    Name,\n",
                    "rendered": {
                      "text": "\ndeserialize_enum_str!(ItemType);\n\n/// Type which specifies the sort order of functions\n#[derive(Debug, Clone, Copy, PartialEq, Eq)]\npub enum SortKey {\n    Name,\n",
                      "markdown": "`\ndeserialize_enum_str!(ItemType);\n\n/// Type which specifies the sort order of functions\n#[derive(Debug, Clone, Copy, PartialEq, Eq)]\npub enum SortKey {\n    Name,\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/parser.rs"
                },
                "region": {
                  "startLine": 258,
                  "startColumn": 61,
                  "endLine": 258,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\n                vacant_entry.insert(i.items).clone()\n            }\n            Entry::Occupied(occupied_entry) => occupied_entry.get().clone(),\n        };\n\n        // Compute module directory according to Rust 2018 rules\n",
                    "rendered": {
                      "text": "\n                vacant_entry.insert(i.items).clone()\n            }\n            Entry::Occupied(occupied_entry) => occupied_entry.get().clone(),\n        };\n\n        // Compute module directory according to Rust 2018 rules\n",
                      "markdown": "`\n                vacant_entry.insert(i.items).clone()\n            }\n            Entry::Occupied(occupied_entry) => occupied_entry.get().clone(),\n        };\n\n        // Compute module directory according to Rust 2018 rules\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/parser.rs"
                },
                "region": {
                  "startLine": 221,
                  "startColumn": 37,
                  "endLine": 221,
                  "endColumn": 42,
                  "snippet": {
                    "text": "                self.cache_expanded_crate.insert(pkg.name.clone(), i.items);\n            }\n\n            self.cache_expanded_crate.get(&pkg.name).unwrap().clone()\n        };\n\n        self.process_mod(\n",
                    "rendered": {
                      "text": "                self.cache_expanded_crate.insert(pkg.name.clone(), i.items);\n            }\n\n            self.cache_expanded_crate.get(&pkg.name).unwrap().clone()\n        };\n\n        self.process_mod(\n",
                      "markdown": "`                self.cache_expanded_crate.insert(pkg.name.clone(), i.items);\n            }\n\n            self.cache_expanded_crate.get(&pkg.name).unwrap().clone()\n        };\n\n        self.process_mod(\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/parser.rs"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 39,
                  "endLine": 154,
                  "endColumn": 47,
                  "snippet": {
                    "text": "        debug!(\"Parsing crate {}\", pkg.name);\n        self.parsed_crates.insert(pkg.name.clone());\n\n        // Check if we should use cargo expand for this crate\n        if self.config.parse.expand.crates.contains(&pkg.name) {\n            self.parse_expand_crate(pkg)?;\n        } else {\n",
                    "rendered": {
                      "text": "        debug!(\"Parsing crate {}\", pkg.name);\n        self.parsed_crates.insert(pkg.name.clone());\n\n        // Check if we should use cargo expand for this crate\n        if self.config.parse.expand.crates.contains(&pkg.name) {\n            self.parse_expand_crate(pkg)?;\n        } else {\n",
                      "markdown": "`        debug!(\"Parsing crate {}\", pkg.name);\n        self.parsed_crates.insert(pkg.name.clone());\n\n        // Check if we should use cargo expand for this crate\n        if self.config.parse.expand.crates.contains(&pkg.name) {\n            self.parse_expand_crate(pkg)?;\n        } else {\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/parser.rs"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 46,
                  "endLine": 120,
                  "snippet": {
                    "text": "            return false;\n        }\n\n        // Skip any whitelist or blacklist for expand\n        if self\n            .config\n            .parse\n            .expand\n",
                    "rendered": {
                      "text": "            return false;\n        }\n\n        // Skip any whitelist or blacklist for expand\n        if self\n            .config\n            .parse\n            .expand\n",
                      "markdown": "`            return false;\n        }\n\n        // Skip any whitelist or blacklist for expand\n        if self\n            .config\n            .parse\n            .expand\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/parser.rs"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 46,
                  "endLine": 64,
                  "endColumn": 50,
                  "snippet": {
                    "text": "    Ok(context.out)\n}\n\n/// Recursively parses a rust library starting at the root crate's directory.\n///\n/// Inside a crate, `mod` and `extern crate` declarations are followed\n/// and parsed. To find an external crate, the parser uses the `cargo metadata`\n",
                    "rendered": {
                      "text": "    Ok(context.out)\n}\n\n/// Recursively parses a rust library starting at the root crate's directory.\n///\n/// Inside a crate, `mod` and `extern crate` declarations are followed\n/// and parsed. To find an external crate, the parser uses the `cargo metadata`\n",
                      "markdown": "`    Ok(context.out)\n}\n\n/// Recursively parses a rust library starting at the root crate's directory.\n///\n/// Inside a crate, `mod` and `extern crate` declarations are followed\n/// and parsed. To find an external crate, the parser uses the `cargo metadata`\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/parser.rs"
                },
                "region": {
                  "startLine": 787,
                  "startColumn": 29,
                  "endLine": 787,
                  "endColumn": 35,
                  "snippet": {
                    "text": "            Some(p) => p,\n            None => {\n                warn!(\n                    \"Couldn't find path for {:?}, skipping associated constants\",\n                    ty\n                );\n                return;\n",
                    "rendered": {
                      "text": "            Some(p) => p,\n            None => {\n                warn!(\n                    \"Couldn't find path for {:?}, skipping associated constants\",\n                    ty\n                );\n                return;\n",
                      "markdown": "`            Some(p) => p,\n            None => {\n                warn!(\n                    \"Couldn't find path for {:?}, skipping associated constants\",\n                    ty\n                );\n                return;\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/parser.rs"
                },
                "region": {
                  "startLine": 397,
                  "startColumn": 55,
                  "endLine": 397,
                  "endColumn": 61,
                  "snippet": {
                    "text": "                }\n            } else {\n                warn!(\n                    \"Parsing expanded crate `{}`: can't find mod {}`.\",\n                    pkg.name, next_mod_name\n                );\n            }\n",
                    "rendered": {
                      "text": "                }\n            } else {\n                warn!(\n                    \"Parsing expanded crate `{}`: can't find mod {}`.\",\n                    pkg.name, next_mod_name\n                );\n            }\n",
                      "markdown": "`                }\n            } else {\n                warn!(\n                    \"Parsing expanded crate `{}`: can't find mod {}`.\",\n                    pkg.name, next_mod_name\n                );\n            }\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/parser.rs"
                },
                "region": {
                  "startLine": 390,
                  "startColumn": 54,
                  "endLine": 390,
                  "endColumn": 60,
                  "snippet": {
                    "text": "                    // just elicit a warning\n                    if !path_attr_found {\n                        warn!(\n                            \"Parsing crate `{}`: can't find mod {}`.\",\n                            pkg.name, next_mod_name\n                        );\n                    }\n",
                    "rendered": {
                      "text": "                    // just elicit a warning\n                    if !path_attr_found {\n                        warn!(\n                            \"Parsing crate `{}`: can't find mod {}`.\",\n                            pkg.name, next_mod_name\n                        );\n                    }\n",
                      "markdown": "`                    // just elicit a warning\n                    if !path_attr_found {\n                        warn!(\n                            \"Parsing crate `{}`: can't find mod {}`.\",\n                            pkg.name, next_mod_name\n                        );\n                    }\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/parser.rs"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 50,
                  "endLine": 168,
                  "endColumn": 56,
                  "snippet": {
                    "text": "                None => {\n                    // This should be an error, but is common enough to just elicit a warning\n                    warn!(\n                        \"Parsing crate `{}`: can't find lib.rs with `cargo metadata`. \\\n                        The crate may be available only on a particular platform, \\\n                        so consider setting `fetch_all_dependencies` in your cbindgen configuration.\",\n                        pkg.name\n",
                    "rendered": {
                      "text": "                None => {\n                    // This should be an error, but is common enough to just elicit a warning\n                    warn!(\n                        \"Parsing crate `{}`: can't find lib.rs with `cargo metadata`. \\\n                        The crate may be available only on a particular platform, \\\n                        so consider setting `fetch_all_dependencies` in your cbindgen configuration.\",\n                        pkg.name\n",
                      "markdown": "`                None => {\n                    // This should be an error, but is common enough to just elicit a warning\n                    warn!(\n                        \"Parsing crate `{}`: can't find lib.rs with `cargo metadata`. \\\n                        The crate may be available only on a particular platform, \\\n                        so consider setting `fetch_all_dependencies` in your cbindgen configuration.\",\n                        pkg.name\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/parser.rs"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 39,
                  "endLine": 154,
                  "endColumn": 47,
                  "snippet": {
                    "text": "        debug!(\"Parsing crate {}\", pkg.name);\n        self.parsed_crates.insert(pkg.name.clone());\n\n        // Check if we should use cargo expand for this crate\n        if self.config.parse.expand.crates.contains(&pkg.name) {\n            self.parse_expand_crate(pkg)?;\n        } else {\n",
                    "rendered": {
                      "text": "        debug!(\"Parsing crate {}\", pkg.name);\n        self.parsed_crates.insert(pkg.name.clone());\n\n        // Check if we should use cargo expand for this crate\n        if self.config.parse.expand.crates.contains(&pkg.name) {\n            self.parse_expand_crate(pkg)?;\n        } else {\n",
                      "markdown": "`        debug!(\"Parsing crate {}\", pkg.name);\n        self.parsed_crates.insert(pkg.name.clone());\n\n        // Check if we should use cargo expand for this crate\n        if self.config.parse.expand.crates.contains(&pkg.name) {\n            self.parse_expand_crate(pkg)?;\n        } else {\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/parser.rs"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 46,
                  "endLine": 120,
                  "snippet": {
                    "text": "            return false;\n        }\n\n        // Skip any whitelist or blacklist for expand\n        if self\n            .config\n            .parse\n            .expand\n",
                    "rendered": {
                      "text": "            return false;\n        }\n\n        // Skip any whitelist or blacklist for expand\n        if self\n            .config\n            .parse\n            .expand\n",
                      "markdown": "`            return false;\n        }\n\n        // Skip any whitelist or blacklist for expand\n        if self\n            .config\n            .parse\n            .expand\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/parser.rs"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 14,
                  "endLine": 68,
                  "endColumn": 20,
                  "snippet": {
                    "text": "///\n/// Inside a crate, `mod` and `extern crate` declarations are followed\n/// and parsed. To find an external crate, the parser uses the `cargo metadata`\n/// command to find the location of dependencies.\npub(crate) fn parse_lib(lib: Cargo, config: &Config) -> ParseResult {\n    let mut context = Parser {\n        binding_crate_name: lib.binding_crate_name().to_owned(),\n",
                    "rendered": {
                      "text": "///\n/// Inside a crate, `mod` and `extern crate` declarations are followed\n/// and parsed. To find an external crate, the parser uses the `cargo metadata`\n/// command to find the location of dependencies.\npub(crate) fn parse_lib(lib: Cargo, config: &Config) -> ParseResult {\n    let mut context = Parser {\n        binding_crate_name: lib.binding_crate_name().to_owned(),\n",
                      "markdown": "`///\n/// Inside a crate, `mod` and `extern crate` declarations are followed\n/// and parsed. To find an external crate, the parser uses the `cargo metadata`\n/// command to find the location of dependencies.\npub(crate) fn parse_lib(lib: Cargo, config: &Config) -> ParseResult {\n    let mut context = Parser {\n        binding_crate_name: lib.binding_crate_name().to_owned(),\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/parser.rs"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 18,
                  "endLine": 67,
                  "endColumn": 24,
                  "snippet": {
                    "text": "/// Recursively parses a rust library starting at the root crate's directory.\n///\n/// Inside a crate, `mod` and `extern crate` declarations are followed\n/// and parsed. To find an external crate, the parser uses the `cargo metadata`\n/// command to find the location of dependencies.\npub(crate) fn parse_lib(lib: Cargo, config: &Config) -> ParseResult {\n    let mut context = Parser {\n",
                    "rendered": {
                      "text": "/// Recursively parses a rust library starting at the root crate's directory.\n///\n/// Inside a crate, `mod` and `extern crate` declarations are followed\n/// and parsed. To find an external crate, the parser uses the `cargo metadata`\n/// command to find the location of dependencies.\npub(crate) fn parse_lib(lib: Cargo, config: &Config) -> ParseResult {\n    let mut context = Parser {\n",
                      "markdown": "`/// Recursively parses a rust library starting at the root crate's directory.\n///\n/// Inside a crate, `mod` and `extern crate` declarations are followed\n/// and parsed. To find an external crate, the parser uses the `cargo metadata`\n/// command to find the location of dependencies.\npub(crate) fn parse_lib(lib: Cargo, config: &Config) -> ParseResult {\n    let mut context = Parser {\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/internals.md"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 410,
                  "endLine": 22,
                  "endColumn": 418,
                  "snippet": {
                    "text": " `Cargo.toml`, `Cargo.lock`, and `cargo metadata`. Then `parser::parse_lib` will parse each crate, following `extern crate` items when `ParseConfig::parse_deps` is enabled and the crate is not in the whitelist or blacklist of crates. In addition `bindgen::Parser` may use `cargo expand` on a crate to expand macro definitions.\n\nOnce the `syn` nodes are collected by either method, they are given to `bindgen::Parse` which will perform *Loading* by creating a `ir::Item` for each `syn` node as appropriate.\n\n`bindgen::Builder` will then convert the resulting `bindgen::Parse`'s into a `bindgen::Library` which",
                    "rendered": {
                      "text": " `Cargo.toml`, `Cargo.lock`, and `cargo metadata`. Then `parser::parse_lib` will parse each crate, following `extern crate` items when `ParseConfig::parse_deps` is enabled and the crate is not in the whitelist or blacklist of crates. In addition `bindgen::Parser` may use `cargo expand` on a crate to expand macro definitions.\n\nOnce the `syn` nodes are collected by either method, they are given to `bindgen::Parse` which will perform *Loading* by creating a `ir::Item` for each `syn` node as appropriate.\n\n`bindgen::Builder` will then convert the resulting `bindgen::Parse`'s into a `bindgen::Library` which",
                      "markdown": "` `Cargo.toml`, `Cargo.lock`, and `cargo metadata`. Then `parser::parse_lib` will parse each crate, following `extern crate` items when `ParseConfig::parse_deps` is enabled and the crate is not in the whitelist or blacklist of crates. In addition `bindgen::Parser` may use `cargo expand` on a crate to expand macro definitions.\n\nOnce the `syn` nodes are collected by either method, they are given to `bindgen::Parse` which will perform *Loading* by creating a `ir::Item` for each `syn` node as appropriate.\n\n`bindgen::Builder` will then convert the resulting `bindgen::Parse`'s into a `bindgen::Library` which`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/internals.md"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 156,
                  "endLine": 24,
                  "endColumn": 162,
                  "snippet": {
                    "text": "e is not in the whitelist or blacklist of crates. In addition `bindgen::Parser` may use `cargo expand` on a crate to expand macro definitions.\n\nOnce the `syn` nodes are collected by either method, they are given to `bindgen::Parse` which will perform *Loading* by creating a `ir::Item` for each `syn` node as appropriate.\n\n`bindgen::Builder` will then convert the resulting `bindgen::Parse`'s into a `bindgen::Library` which is the driver of all of the *Transformation* passes.\n\n// TODO - Talk more about passes\n\nThen finally the `bindgen::Library` will create a `bindgen::Bindings` which contains the `ir:",
                    "rendered": {
                      "text": "e is not in the whitelist or blacklist of crates. In addition `bindgen::Parser` may use `cargo expand` on a crate to expand macro definitions.\n\nOnce the `syn` nodes are collected by either method, they are given to `bindgen::Parse` which will perform *Loading* by creating a `ir::Item` for each `syn` node as appropriate.\n\n`bindgen::Builder` will then convert the resulting `bindgen::Parse`'s into a `bindgen::Library` which is the driver of all of the *Transformation* passes.\n\n// TODO - Talk more about passes\n\nThen finally the `bindgen::Library` will create a `bindgen::Bindings` which contains the `ir:",
                      "markdown": "`e is not in the whitelist or blacklist of crates. In addition `bindgen::Parser` may use `cargo expand` on a crate to expand macro definitions.\n\nOnce the `syn` nodes are collected by either method, they are given to `bindgen::Parse` which will perform *Loading* by creating a `ir::Item` for each `syn` node as appropriate.\n\n`bindgen::Builder` will then convert the resulting `bindgen::Parse`'s into a `bindgen::Library` which is the driver of all of the *Transformation* passes.\n\n// TODO - Talk more about passes\n\nThen finally the `bindgen::Library` will create a `bindgen::Bindings` which contains the `ir:`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/internals.md"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 410,
                  "endLine": 22,
                  "endColumn": 418,
                  "snippet": {
                    "text": " `Cargo.toml`, `Cargo.lock`, and `cargo metadata`. Then `parser::parse_lib` will parse each crate, following `extern crate` items when `ParseConfig::parse_deps` is enabled and the crate is not in the whitelist or blacklist of crates. In addition `bindgen::Parser` may use `cargo expand` on a crate to expand macro definitions.\n\nOnce the `syn` nodes are collected by either method, they are given to `bindgen::Parse` which will perform *Loading* by creating a `ir::Item` for each `syn` node as appropriate.\n\n`bindgen::Builder` will then convert the resulting `bindgen::Parse`'s into a `bindgen::Library` which",
                    "rendered": {
                      "text": " `Cargo.toml`, `Cargo.lock`, and `cargo metadata`. Then `parser::parse_lib` will parse each crate, following `extern crate` items when `ParseConfig::parse_deps` is enabled and the crate is not in the whitelist or blacklist of crates. In addition `bindgen::Parser` may use `cargo expand` on a crate to expand macro definitions.\n\nOnce the `syn` nodes are collected by either method, they are given to `bindgen::Parse` which will perform *Loading* by creating a `ir::Item` for each `syn` node as appropriate.\n\n`bindgen::Builder` will then convert the resulting `bindgen::Parse`'s into a `bindgen::Library` which",
                      "markdown": "` `Cargo.toml`, `Cargo.lock`, and `cargo metadata`. Then `parser::parse_lib` will parse each crate, following `extern crate` items when `ParseConfig::parse_deps` is enabled and the crate is not in the whitelist or blacklist of crates. In addition `bindgen::Parser` may use `cargo expand` on a crate to expand macro definitions.\n\nOnce the `syn` nodes are collected by either method, they are given to `bindgen::Parse` which will perform *Loading* by creating a `ir::Item` for each `syn` node as appropriate.\n\n`bindgen::Builder` will then convert the resulting `bindgen::Parse`'s into a `bindgen::Library` which`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/language_backend/clike.rs"
                },
                "region": {
                  "startLine": 907,
                  "startColumn": 45,
                  "endLine": 907,
                  "endColumn": 50,
                  "snippet": {
                    "text": "                // In C++, same order as defined is required.\n                let ordered_fields = out.bindings().struct_field_names(path);\n                for ordered_key in ordered_fields.iter() {\n                    if let Some(lit) = fields.get(ordered_key) {\n                        if !is_first_field {\n                            write!(out, \", \");\n                        }\n",
                    "rendered": {
                      "text": "                // In C++, same order as defined is required.\n                let ordered_fields = out.bindings().struct_field_names(path);\n                for ordered_key in ordered_fields.iter() {\n                    if let Some(lit) = fields.get(ordered_key) {\n                        if !is_first_field {\n                            write!(out, \", \");\n                        }\n",
                      "markdown": "`                // In C++, same order as defined is required.\n                let ordered_fields = out.bindings().struct_field_names(path);\n                for ordered_key in ordered_fields.iter() {\n                    if let Some(lit) = fields.get(ordered_key) {\n                        if !is_first_field {\n                            write!(out, \", \");\n                        }\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/docs.md"
                },
                "region": {
                  "startLine": 1073,
                  "startColumn": 12,
                  "endLine": 1073,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n[parse.expand]\n# A list of crate names that should be run through `cargo expand` before\n# parsing to expand any macros. Note that if a crate is named here, it\n# will always be parsed, even if the blacklist/whitelist says it shouldn't be.\n#\n# default: []\n",
                    "rendered": {
                      "text": "\n[parse.expand]\n# A list of crate names that should be run through `cargo expand` before\n# parsing to expand any macros. Note that if a crate is named here, it\n# will always be parsed, even if the blacklist/whitelist says it shouldn't be.\n#\n# default: []\n",
                      "markdown": "`\n[parse.expand]\n# A list of crate names that should be run through `cargo expand` before\n# parsing to expand any macros. Note that if a crate is named here, it\n# will always be parsed, even if the blacklist/whitelist says it shouldn't be.\n#\n# default: []\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/docs.md"
                },
                "region": {
                  "startLine": 438,
                  "startColumn": 25,
                  "endLine": 438,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# An optional string of text to output at the end of the generated file\n# default: doesn't emit anything\ntrailer = \"/* Text to put at the end of the generated file */\"\n\n# An optional name to use as an include guard\n# default: doesn't emit an include guard\n",
                    "rendered": {
                      "text": "\n# An optional string of text to output at the end of the generated file\n# default: doesn't emit anything\ntrailer = \"/* Text to put at the end of the generated file */\"\n\n# An optional name to use as an include guard\n# default: doesn't emit an include guard\n",
                      "markdown": "`\n# An optional string of text to output at the end of the generated file\n# default: doesn't emit anything\ntrailer = \"/* Text to put at the end of the generated file */\"\n\n# An optional name to use as an include guard\n# default: doesn't emit an include guard\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/docs.md"
                },
                "region": {
                  "startLine": 436,
                  "startColumn": 38,
                  "endLine": 436,
                  "endColumn": 42,
                  "snippet": {
                    "text": "# default: doesn't emit anything\nheader = \"/* Text to put at the beginning of the generated file. Probably a license. */\"\n\n# An optional string of text to output at the end of the generated file\n# default: doesn't emit anything\ntrailer = \"/* Text to put at the end of the generated file */\"\n\n",
                    "rendered": {
                      "text": "# default: doesn't emit anything\nheader = \"/* Text to put at the beginning of the generated file. Probably a license. */\"\n\n# An optional string of text to output at the end of the generated file\n# default: doesn't emit anything\ntrailer = \"/* Text to put at the end of the generated file */\"\n\n",
                      "markdown": "`# default: doesn't emit anything\nheader = \"/* Text to put at the beginning of the generated file. Probably a license. */\"\n\n# An optional string of text to output at the end of the generated file\n# default: doesn't emit anything\ntrailer = \"/* Text to put at the end of the generated file */\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/docs.md"
                },
                "region": {
                  "startLine": 434,
                  "startColumn": 24,
                  "endLine": 434,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# An optional string of text to output at the beginning of the generated file\n# default: doesn't emit anything\nheader = \"/* Text to put at the beginning of the generated file. Probably a license. */\"\n\n# An optional string of text to output at the end of the generated file\n# default: doesn't emit anything\n",
                    "rendered": {
                      "text": "\n# An optional string of text to output at the beginning of the generated file\n# default: doesn't emit anything\nheader = \"/* Text to put at the beginning of the generated file. Probably a license. */\"\n\n# An optional string of text to output at the end of the generated file\n# default: doesn't emit anything\n",
                      "markdown": "`\n# An optional string of text to output at the beginning of the generated file\n# default: doesn't emit anything\nheader = \"/* Text to put at the beginning of the generated file. Probably a license. */\"\n\n# An optional string of text to output at the end of the generated file\n# default: doesn't emit anything\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/docs.md"
                },
                "region": {
                  "startLine": 432,
                  "startColumn": 38,
                  "endLine": 432,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\n# Options for wrapping the contents of the header:\n\n# An optional string of text to output at the beginning of the generated file\n# default: doesn't emit anything\nheader = \"/* Text to put at the beginning of the generated file. Probably a license. */\"\n\n",
                    "rendered": {
                      "text": "\n# Options for wrapping the contents of the header:\n\n# An optional string of text to output at the beginning of the generated file\n# default: doesn't emit anything\nheader = \"/* Text to put at the beginning of the generated file. Probably a license. */\"\n\n",
                      "markdown": "`\n# Options for wrapping the contents of the header:\n\n# An optional string of text to output at the beginning of the generated file\n# default: doesn't emit anything\nheader = \"/* Text to put at the beginning of the generated file. Probably a license. */\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/docs.md"
                },
                "region": {
                  "startLine": 287,
                  "startColumn": 140,
                  "endLine": 287,
                  "endColumn": 144,
                  "snippet": {
                    "text": "it. This is useful for a) suppressing \"Can't find\" errors and b) emitting `struct my_struct` for types in a different header (rather than a bare `my_struct`).\n\nThere is no equivalent config for this annotation - by comparison, the export exclude config will cause cbindgen to not be aware of the item at all.\n\nNote that cbindgen will still traverse `no-export` structs that are `repr(C)` to emit types present in the fields. You will need to manually exclude those types in your config if desired.\n\n```\n/// cbindgen:no-export\n#[repr(C)]\npub struct Foo { .. }; // This won't be emitted by cbindgen in the ",
                    "rendered": {
                      "text": "it. This is useful for a) suppressing \"Can't find\" errors and b) emitting `struct my_struct` for types in a different header (rather than a bare `my_struct`).\n\nThere is no equivalent config for this annotation - by comparison, the export exclude config will cause cbindgen to not be aware of the item at all.\n\nNote that cbindgen will still traverse `no-export` structs that are `repr(C)` to emit types present in the fields. You will need to manually exclude those types in your config if desired.\n\n```\n/// cbindgen:no-export\n#[repr(C)]\npub struct Foo { .. }; // This won't be emitted by cbindgen in the ",
                      "markdown": "`it. This is useful for a) suppressing \"Can't find\" errors and b) emitting `struct my_struct` for types in a different header (rather than a bare `my_struct`).\n\nThere is no equivalent config for this annotation - by comparison, the export exclude config will cause cbindgen to not be aware of the item at all.\n\nNote that cbindgen will still traverse `no-export` structs that are `repr(C)` to emit types present in the fields. You will need to manually exclude those types in your config if desired.\n\n```\n/// cbindgen:no-export\n#[repr(C)]\npub struct Foo { .. }; // This won't be emitted by cbindgen in the `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/docs.md"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 113,
                  "endLine": 163,
                  "endColumn": 117,
                  "snippet": {
                    "text": "\nDon't use the `[u64; 0]` trick to over-align a struct, we don't support this.\n\ncbindgen contains the following hardcoded mappings (again completely ignoring namespacing, literally just looking at the name of the type):\n\n\n\n",
                    "rendered": {
                      "text": "\nDon't use the `[u64; 0]` trick to over-align a struct, we don't support this.\n\ncbindgen contains the following hardcoded mappings (again completely ignoring namespacing, literally just looking at the name of the type):\n\n\n\n",
                      "markdown": "`\nDon't use the `[u64; 0]` trick to over-align a struct, we don't support this.\n\ncbindgen contains the following hardcoded mappings (again completely ignoring namespacing, literally just looking at the name of the type):\n\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/docs.md"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 144,
                  "endLine": 157,
                  "endColumn": 148,
                  "snippet": {
                    "text": "ned symbol.\n\ncbindgen sadly cannot ever support anonymous tuples `(A, B, ...)`, as there is no way to guarantee their layout. You must use a tuple struct.\n\ncbindgen also cannot support wide pointers like `&dyn Trait` or `&[T]`, as their layout and ABI is not guaranteed. In the case of slices you can at least decompose them into a pointer and length, and reconstruct them with `slice::from_raw_parts`.\n\nIf cbindgen determines that a type is zero-sized, it will erase all references to that type (so fields of that type simply won't be emitted). This won't work if that type appears as a function argumen",
                    "rendered": {
                      "text": "ned symbol.\n\ncbindgen sadly cannot ever support anonymous tuples `(A, B, ...)`, as there is no way to guarantee their layout. You must use a tuple struct.\n\ncbindgen also cannot support wide pointers like `&dyn Trait` or `&[T]`, as their layout and ABI is not guaranteed. In the case of slices you can at least decompose them into a pointer and length, and reconstruct them with `slice::from_raw_parts`.\n\nIf cbindgen determines that a type is zero-sized, it will erase all references to that type (so fields of that type simply won't be emitted). This won't work if that type appears as a function argumen",
                      "markdown": "`ned symbol.\n\ncbindgen sadly cannot ever support anonymous tuples `(A, B, ...)`, as there is no way to guarantee their layout. You must use a tuple struct.\n\ncbindgen also cannot support wide pointers like `&dyn Trait` or `&[T]`, as their layout and ABI is not guaranteed. In the case of slices you can at least decompose them into a pointer and length, and reconstruct them with `slice::from_raw_parts`.\n\nIf cbindgen determines that a type is zero-sized, it will erase all references to that type (so fields of that type simply won't be emitted). This won't work if that type appears as a function argumen`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/docs.md"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 22,
                  "endLine": 26,
                  "endColumn": 30,
                  "snippet": {
                    "text": "cargo install --force cbindgen\n```\n\n(--force just makes it update to the latest cbindgen if it's already installed)\n\nTo use cbindgen you need two things:\n\n",
                    "rendered": {
                      "text": "cargo install --force cbindgen\n```\n\n(--force just makes it update to the latest cbindgen if it's already installed)\n\nTo use cbindgen you need two things:\n\n",
                      "markdown": "`cargo install --force cbindgen\n```\n\n(--force just makes it update to the latest cbindgen if it's already installed)\n\nTo use cbindgen you need two things:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/docs.md"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 306,
                  "endLine": 10,
                  "endColumn": 314,
                  "snippet": {
                    "text": "isn't really much practical difference, because cbindgen is a simple rust library with no interesting dependencies. Using it as a program means people building your software will need it installed. Using it in your library means people may have to build cbindgen more frequently (e.g. every time they update their rust compiler).\n\nIt's worth noting that the development of cbindgen has been largely adhoc, as features have been added to support the usecases of the maintainers. This means cbindgen may randomly fail to support some particular situation simply because no one has put in the effort to handle i",
                    "rendered": {
                      "text": "isn't really much practical difference, because cbindgen is a simple rust library with no interesting dependencies. Using it as a program means people building your software will need it installed. Using it in your library means people may have to build cbindgen more frequently (e.g. every time they update their rust compiler).\n\nIt's worth noting that the development of cbindgen has been largely adhoc, as features have been added to support the usecases of the maintainers. This means cbindgen may randomly fail to support some particular situation simply because no one has put in the effort to handle i",
                      "markdown": "`isn't really much practical difference, because cbindgen is a simple rust library with no interesting dependencies. Using it as a program means people building your software will need it installed. Using it in your library means people may have to build cbindgen more frequently (e.g. every time they update their rust compiler).\n\nIt's worth noting that the development of cbindgen has been largely adhoc, as features have been added to support the usecases of the maintainers. This means cbindgen may randomly fail to support some particular situation simply because no one has put in the effort to handle i`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/docs.md"
                },
                "region": {
                  "startLine": 1111,
                  "startColumn": 25,
                  "endLine": 1111,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n[cython]\n\n# Header specified in the top level `cdef extern from header:` declaration.\n#\n# default: *\nheader = '\"my_header.h\"'\n",
                    "rendered": {
                      "text": "\n[cython]\n\n# Header specified in the top level `cdef extern from header:` declaration.\n#\n# default: *\nheader = '\"my_header.h\"'\n",
                      "markdown": "`\n[cython]\n\n# Header specified in the top level `cdef extern from header:` declaration.\n#\n# default: *\nheader = '\"my_header.h\"'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/docs.md"
                },
                "region": {
                  "startLine": 1073,
                  "startColumn": 12,
                  "endLine": 1073,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n[parse.expand]\n# A list of crate names that should be run through `cargo expand` before\n# parsing to expand any macros. Note that if a crate is named here, it\n# will always be parsed, even if the blacklist/whitelist says it shouldn't be.\n#\n# default: []\n",
                    "rendered": {
                      "text": "\n[parse.expand]\n# A list of crate names that should be run through `cargo expand` before\n# parsing to expand any macros. Note that if a crate is named here, it\n# will always be parsed, even if the blacklist/whitelist says it shouldn't be.\n#\n# default: []\n",
                      "markdown": "`\n[parse.expand]\n# A list of crate names that should be run through `cargo expand` before\n# parsing to expand any macros. Note that if a crate is named here, it\n# will always be parsed, even if the blacklist/whitelist says it shouldn't be.\n#\n# default: []\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/docs.md"
                },
                "region": {
                  "startLine": 1023,
                  "startColumn": 9,
                  "endLine": 1023,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n# This rule specifies the order in which constants will be sorted.\n#\n# \"Name\": sort by the name of the constant\n# \"None\": keep order in which the constants have been parsed\n#\n# default: \"None\"\n",
                    "rendered": {
                      "text": "\n# This rule specifies the order in which constants will be sorted.\n#\n# \"Name\": sort by the name of the constant\n# \"None\": keep order in which the constants have been parsed\n#\n# default: \"None\"\n",
                      "markdown": "`\n# This rule specifies the order in which constants will be sorted.\n#\n# \"Name\": sort by the name of the constant\n# \"None\": keep order in which the constants have been parsed\n#\n# default: \"None\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/docs.md"
                },
                "region": {
                  "startLine": 770,
                  "startColumn": 9,
                  "endLine": 770,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n# This rule specifies the order in which functions will be sorted.\n#\n# \"Name\": sort by the name of the function\n# \"None\": keep order in which the functions have been parsed\n#\n# default: \"None\"\n",
                    "rendered": {
                      "text": "\n# This rule specifies the order in which functions will be sorted.\n#\n# \"Name\": sort by the name of the function\n# \"None\": keep order in which the functions have been parsed\n#\n# default: \"None\"\n",
                      "markdown": "`\n# This rule specifies the order in which functions will be sorted.\n#\n# \"Name\": sort by the name of the function\n# \"None\": keep order in which the functions have been parsed\n#\n# default: \"None\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/docs.md"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 84,
                  "endLine": 130,
                  "endColumn": 90,
                  "snippet": {
                    "text": "\n# Supported Types\n\nMost things in Rust don't have a guaranteed layout by default. In most cases this is nice because it enables layout to be optimized in the majority of cases where type layout isn't that interesting. However this is problematic for our purposes. Thankfully Rust lets us opt into guaranteed layouts with the `repr` attribute.\n\nYou can learn about all of the different repr attributes [by reading Rust's reference][reference], but here's a quick summary:\n\n",
                    "rendered": {
                      "text": "\n# Supported Types\n\nMost things in Rust don't have a guaranteed layout by default. In most cases this is nice because it enables layout to be optimized in the majority of cases where type layout isn't that interesting. However this is problematic for our purposes. Thankfully Rust lets us opt into guaranteed layouts with the `repr` attribute.\n\nYou can learn about all of the different repr attributes [by reading Rust's reference][reference], but here's a quick summary:\n\n",
                      "markdown": "`\n# Supported Types\n\nMost things in Rust don't have a guaranteed layout by default. In most cases this is nice because it enables layout to be optimized in the majority of cases where type layout isn't that interesting. However this is problematic for our purposes. Thankfully Rust lets us opt into guaranteed layouts with the `repr` attribute.\n\nYou can learn about all of the different repr attributes [by reading Rust's reference][reference], but here's a quick summary:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/docs.md"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 18,
                  "endLine": 122,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\n🚧 🏗\n\nIt would be really nice to have some curated and clean examples, but we don't have those yet.\n\n[The README has some useful links though](README.md#examples).\n\n",
                    "rendered": {
                      "text": "\n🚧 🏗\n\nIt would be really nice to have some curated and clean examples, but we don't have those yet.\n\n[The README has some useful links though](README.md#examples).\n\n",
                      "markdown": "`\n🚧 🏗\n\nIt would be really nice to have some curated and clean examples, but we don't have those yet.\n\n[The README has some useful links though](README.md#examples).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/docs.md"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 261,
                  "endLine": 109,
                  "endColumn": 267,
                  "snippet": {
                    "text": "globals\")\n* `pub const` (\"constants\")\n\nand generates a header declaring those items. But to declare those items, it needs to also be able to describe the layout and ABI of the types that appear in their signatures. So it will also spider through your crate (and optionally its dependencies) to try to find the definitions of every type used in your public API.\n\n> 🚨 NOTE: A major limitation of cbindgen is that it does not understand Rust's module system or namespacing. This means that if cbindgen sees that it needs the definition for `MyType` and there exists two things in your project with the type n",
                    "rendered": {
                      "text": "globals\")\n* `pub const` (\"constants\")\n\nand generates a header declaring those items. But to declare those items, it needs to also be able to describe the layout and ABI of the types that appear in their signatures. So it will also spider through your crate (and optionally its dependencies) to try to find the definitions of every type used in your public API.\n\n> 🚨 NOTE: A major limitation of cbindgen is that it does not understand Rust's module system or namespacing. This means that if cbindgen sees that it needs the definition for `MyType` and there exists two things in your project with the type n",
                      "markdown": "`globals\")\n* `pub const` (\"constants\")\n\nand generates a header declaring those items. But to declare those items, it needs to also be able to describe the layout and ABI of the types that appear in their signatures. So it will also spider through your crate (and optionally its dependencies) to try to find the definitions of every type used in your public API.\n\n> 🚨 NOTE: A major limitation of cbindgen is that it does not understand Rust's module system or namespacing. This means that if cbindgen sees that it needs the definition for `MyType` and there exists two things in your project with the type n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/docs.md"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 33,
                  "endLine": 95,
                  "endColumn": 41,
                  "snippet": {
                    "text": "cbindgen = \"0.24.0\"\n```\n\nIf you'd like to use a `build.rs` script with a `cbindgen.toml`, consider using [`cbindgen::generate()`](https://docs.rs/cbindgen/*/cbindgen/fn.generate.html) instead.\n\n\n\n",
                    "rendered": {
                      "text": "cbindgen = \"0.24.0\"\n```\n\nIf you'd like to use a `build.rs` script with a `cbindgen.toml`, consider using [`cbindgen::generate()`](https://docs.rs/cbindgen/*/cbindgen/fn.generate.html) instead.\n\n\n\n",
                      "markdown": "`cbindgen = \"0.24.0\"\n```\n\nIf you'd like to use a `build.rs` script with a `cbindgen.toml`, consider using [`cbindgen::generate()`](https://docs.rs/cbindgen/*/cbindgen/fn.generate.html) instead.\n\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/docs.md"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 296,
                  "endLine": 10,
                  "endColumn": 302,
                  "snippet": {
                    "text": "s).\nThere isn't really much practical difference, because cbindgen is a simple rust library with no interesting dependencies. Using it as a program means people building your software will need it installed. Using it in your library means people may have to build cbindgen more frequently (e.g. every time they update their rust compiler).\n\nIt's worth noting that the development of cbindgen has been largely adhoc, as features have been added to support the usecases of the maintainers. This means cbindgen may randomly fail to support some particular situation simply because no one has put in the effort",
                    "rendered": {
                      "text": "s).\nThere isn't really much practical difference, because cbindgen is a simple rust library with no interesting dependencies. Using it as a program means people building your software will need it installed. Using it in your library means people may have to build cbindgen more frequently (e.g. every time they update their rust compiler).\n\nIt's worth noting that the development of cbindgen has been largely adhoc, as features have been added to support the usecases of the maintainers. This means cbindgen may randomly fail to support some particular situation simply because no one has put in the effort",
                      "markdown": "`s).\nThere isn't really much practical difference, because cbindgen is a simple rust library with no interesting dependencies. Using it as a program means people building your software will need it installed. Using it in your library means people may have to build cbindgen more frequently (e.g. every time they update their rust compiler).\n\nIt's worth noting that the development of cbindgen has been largely adhoc, as features have been added to support the usecases of the maintainers. This means cbindgen may randomly fail to support some particular situation simply because no one has put in the effort`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/docs.md"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 161,
                  "endLine": 7,
                  "endColumn": 167,
                  "snippet": {
                    "text": "ed closely with the developers of Rust to ensure that the headers we generate reflect actual guarantees about Rust's type layout and ABI.\n\nC++ headers are nice because we can use operator overloads, constructors, enum classes, and templates to make the API more ergonomic and Rust-like. C headers are nice because you can be more confident that whoever you're interoperating with can handle them. With cbindgen *you don't need to choose*! You can just tell it to emit both from the same Rust library.\n\nThere are two ways to use cbindgen: as a standalone program, or as a library (presumably in your build.r",
                    "rendered": {
                      "text": "ed closely with the developers of Rust to ensure that the headers we generate reflect actual guarantees about Rust's type layout and ABI.\n\nC++ headers are nice because we can use operator overloads, constructors, enum classes, and templates to make the API more ergonomic and Rust-like. C headers are nice because you can be more confident that whoever you're interoperating with can handle them. With cbindgen *you don't need to choose*! You can just tell it to emit both from the same Rust library.\n\nThere are two ways to use cbindgen: as a standalone program, or as a library (presumably in your build.r",
                      "markdown": "`ed closely with the developers of Rust to ensure that the headers we generate reflect actual guarantees about Rust's type layout and ABI.\n\nC++ headers are nice because we can use operator overloads, constructors, enum classes, and templates to make the API more ergonomic and Rust-like. C headers are nice because you can be more confident that whoever you're interoperating with can handle them. With cbindgen *you don't need to choose*! You can just tell it to emit both from the same Rust library.\n\nThere are two ways to use cbindgen: as a standalone program, or as a library (presumably in your build.r`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/docs.md"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 15,
                  "endLine": 7,
                  "endColumn": 21,
                  "snippet": {
                    "text": " much more likely to be error-prone than machine-generated headers that are based on your actual Rust code. The cbindgen developers have also worked closely with the developers of Rust to ensure that the headers we generate reflect actual guarantees about Rust's type layout and ABI.\n\nC++ headers are nice because we can use operator overloads, constructors, enum classes, and templates to make the API more ergonomic and Rust-like. C headers are nice because you can be more confident that whoever you're interoperating with can handle them. With cbindgen *you don't need to choose*! You can just tell it ",
                    "rendered": {
                      "text": " much more likely to be error-prone than machine-generated headers that are based on your actual Rust code. The cbindgen developers have also worked closely with the developers of Rust to ensure that the headers we generate reflect actual guarantees about Rust's type layout and ABI.\n\nC++ headers are nice because we can use operator overloads, constructors, enum classes, and templates to make the API more ergonomic and Rust-like. C headers are nice because you can be more confident that whoever you're interoperating with can handle them. With cbindgen *you don't need to choose*! You can just tell it ",
                      "markdown": "` much more likely to be error-prone than machine-generated headers that are based on your actual Rust code. The cbindgen developers have also worked closely with the developers of Rust to ensure that the headers we generate reflect actual guarantees about Rust's type layout and ABI.\n\nC++ headers are nice because we can use operator overloads, constructors, enum classes, and templates to make the API more ergonomic and Rust-like. C headers are nice because you can be more confident that whoever you're interoperating with can handle them. With cbindgen *you don't need to choose*! You can just tell it `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/tests/expectations/documentation_attr.pyx"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 42,
                  "endLine": 10,
                  "endColumn": 46,
                  "snippet": {
                    "text": "cdef extern from *:\n\n  #With doc attr, each attr contribute to one line of document\n  #like this one with a new line character at its end\n  #and this one as well. So they are in the same paragraph\n  #\n  #Line ends with one new line should not break\n",
                    "rendered": {
                      "text": "cdef extern from *:\n\n  #With doc attr, each attr contribute to one line of document\n  #like this one with a new line character at its end\n  #and this one as well. So they are in the same paragraph\n  #\n  #Line ends with one new line should not break\n",
                      "markdown": "`cdef extern from *:\n\n  #With doc attr, each attr contribute to one line of document\n  #like this one with a new line character at its end\n  #and this one as well. So they are in the same paragraph\n  #\n  #Line ends with one new line should not break\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/tests/profile.rs"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 9,
                  "endLine": 47,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n    Command::new(cbindgen_path)\n        .current_dir(expand_dep_test_dir)\n        .env(\"CARGO_EXPAND_TARGET_DIR\", tmp_dir.path())\n        .args(extra_args)\n        .output()\n        .expect(\"build should succeed\");\n",
                    "rendered": {
                      "text": "\n    Command::new(cbindgen_path)\n        .current_dir(expand_dep_test_dir)\n        .env(\"CARGO_EXPAND_TARGET_DIR\", tmp_dir.path())\n        .args(extra_args)\n        .output()\n        .expect(\"build should succeed\");\n",
                      "markdown": "`\n    Command::new(cbindgen_path)\n        .current_dir(expand_dep_test_dir)\n        .env(\"CARGO_EXPAND_TARGET_DIR\", tmp_dir.path())\n        .args(extra_args)\n        .output()\n        .expect(\"build should succeed\");\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/tests/profile.rs"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 9,
                  "endLine": 20,
                  "endColumn": 42,
                  "snippet": {
                    "text": "        .tempdir()\n        .expect(\"Creating tmp dir failed\");\n\n    std::env::set_var(\"CARGO_EXPAND_TARGET_DIR\", tmp_dir.path());\n    let builder = Builder::new()\n        .with_config(Config::from_file(expand_dep_test_dir.join(\"cbindgen.toml\")).unwrap())\n        .with_crate(expand_dep_test_dir);\n",
                    "rendered": {
                      "text": "        .tempdir()\n        .expect(\"Creating tmp dir failed\");\n\n    std::env::set_var(\"CARGO_EXPAND_TARGET_DIR\", tmp_dir.path());\n    let builder = Builder::new()\n        .with_config(Config::from_file(expand_dep_test_dir.join(\"cbindgen.toml\")).unwrap())\n        .with_crate(expand_dep_test_dir);\n",
                      "markdown": "`        .tempdir()\n        .expect(\"Creating tmp dir failed\");\n\n    std::env::set_var(\"CARGO_EXPAND_TARGET_DIR\", tmp_dir.path());\n    let builder = Builder::new()\n        .with_config(Config::from_file(expand_dep_test_dir.join(\"cbindgen.toml\")).unwrap())\n        .with_crate(expand_dep_test_dir);\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/cargo/cargo.rs"
                },
                "region": {
                  "startLine": 230,
                  "startColumn": 12,
                  "endLine": 230,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n        self.metadata\n            .packages\n            .get(package)\n            .and_then(|meta_package| {\n                for target in &meta_package.targets {\n                    if target.kind.contains(&kind_lib)\n",
                    "rendered": {
                      "text": "\n        self.metadata\n            .packages\n            .get(package)\n            .and_then(|meta_package| {\n                for target in &meta_package.targets {\n                    if target.kind.contains(&kind_lib)\n",
                      "markdown": "`\n        self.metadata\n            .packages\n            .get(package)\n            .and_then(|meta_package| {\n                for target in &meta_package.targets {\n                    if target.kind.contains(&kind_lib)\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/cargo/cargo.rs"
                },
                "region": {
                  "startLine": 212,
                  "startColumn": 12,
                  "endLine": 212,
                  "endColumn": 17,
                  "snippet": {
                    "text": "    pub(crate) fn find_crate_dir(&self, package: &PackageRef) -> Option<PathBuf> {\n        self.metadata\n            .packages\n            .get(package)\n            .and_then(|meta_package| {\n                Path::new(&meta_package.manifest_path)\n                    .parent()\n",
                    "rendered": {
                      "text": "    pub(crate) fn find_crate_dir(&self, package: &PackageRef) -> Option<PathBuf> {\n        self.metadata\n            .packages\n            .get(package)\n            .and_then(|meta_package| {\n                Path::new(&meta_package.manifest_path)\n                    .parent()\n",
                      "markdown": "`    pub(crate) fn find_crate_dir(&self, package: &PackageRef) -> Option<PathBuf> {\n        self.metadata\n            .packages\n            .get(package)\n            .and_then(|meta_package| {\n                Path::new(&meta_package.manifest_path)\n                    .parent()\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/cargo/cargo.rs"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 70,
                  "endLine": 170,
                  "endColumn": 75,
                  "snippet": {
                    "text": "                    .metadata\n                    .packages\n                    .get(package)\n                    .and_then(|meta_package| meta_package.dependencies.get(dep_name))\n                    .and_then(Cfg::load_metadata);\n\n                let package_ref = PackageRef {\n",
                    "rendered": {
                      "text": "                    .metadata\n                    .packages\n                    .get(package)\n                    .and_then(|meta_package| meta_package.dependencies.get(dep_name))\n                    .and_then(Cfg::load_metadata);\n\n                let package_ref = PackageRef {\n",
                      "markdown": "`                    .metadata\n                    .packages\n                    .get(package)\n                    .and_then(|meta_package| meta_package.dependencies.get(dep_name))\n                    .and_then(Cfg::load_metadata);\n\n                let package_ref = PackageRef {\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/cargo/cargo.rs"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 20,
                  "endLine": 169,
                  "endColumn": 25,
                  "snippet": {
                    "text": "                let cfg = self\n                    .metadata\n                    .packages\n                    .get(package)\n                    .and_then(|meta_package| meta_package.dependencies.get(dep_name))\n                    .and_then(Cfg::load_metadata);\n\n",
                    "rendered": {
                      "text": "                let cfg = self\n                    .metadata\n                    .packages\n                    .get(package)\n                    .and_then(|meta_package| meta_package.dependencies.get(dep_name))\n                    .and_then(Cfg::load_metadata);\n\n",
                      "markdown": "`                let cfg = self\n                    .metadata\n                    .packages\n                    .get(package)\n                    .and_then(|meta_package| meta_package.dependencies.get(dep_name))\n                    .and_then(Cfg::load_metadata);\n\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/cargo/cargo.rs"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 20,
                  "endLine": 20,
                  "endColumn": 25,
                  "snippet": {
                    "text": "fn parse_dep_string(dep_string: &str) -> (&str, Option<&str>) {\n    let split: Vec<&str> = dep_string.split_whitespace().collect();\n\n    (split[0], split.get(1).cloned())\n}\n\n/// A collection of metadata for a library from cargo.\n",
                    "rendered": {
                      "text": "fn parse_dep_string(dep_string: &str) -> (&str, Option<&str>) {\n    let split: Vec<&str> = dep_string.split_whitespace().collect();\n\n    (split[0], split.get(1).cloned())\n}\n\n/// A collection of metadata for a library from cargo.\n",
                      "markdown": "`fn parse_dep_string(dep_string: &str) -> (&str, Option<&str>) {\n    let split: Vec<&str> = dep_string.split_whitespace().collect();\n\n    (split[0], split.get(1).cloned())\n}\n\n/// A collection of metadata for a library from cargo.\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/cargo/cargo.rs"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 25,
                  "endLine": 165,
                  "endColumn": 31,
                  "snippet": {
                    "text": "                    }\n                });\n\n                // Try to find the cfgs in the Cargo.toml\n                let cfg = self\n                    .metadata\n                    .packages\n",
                    "rendered": {
                      "text": "                    }\n                });\n\n                // Try to find the cfgs in the Cargo.toml\n                let cfg = self\n                    .metadata\n                    .packages\n",
                      "markdown": "`                    }\n                });\n\n                // Try to find the cfgs in the Cargo.toml\n                let cfg = self\n                    .metadata\n                    .packages\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/cargo/cargo.rs"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 49,
                  "endLine": 145,
                  "endColumn": 55,
                  "snippet": {
                    "text": "            .map(|dep| {\n                let (dep_name, dep_version) = parse_dep_string(dep);\n\n                // If a version was not specified find the only package with the name of the dependency\n                let dep_version = dep_version.or_else(|| {\n                    let mut versions = self.metadata.packages.iter().filter_map(|package| {\n                        if package.name_and_version.name != dep_name {\n",
                    "rendered": {
                      "text": "            .map(|dep| {\n                let (dep_name, dep_version) = parse_dep_string(dep);\n\n                // If a version was not specified find the only package with the name of the dependency\n                let dep_version = dep_version.or_else(|| {\n                    let mut versions = self.metadata.packages.iter().filter_map(|package| {\n                        if package.name_and_version.name != dep_name {\n",
                      "markdown": "`            .map(|dep| {\n                let (dep_name, dep_version) = parse_dep_string(dep);\n\n                // If a version was not specified find the only package with the name of the dependency\n                let dep_version = dep_version.or_else(|| {\n                    let mut versions = self.metadata.packages.iter().filter_map(|package| {\n                        if package.name_and_version.name != dep_name {\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/cargo/cargo.rs"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 10,
                  "endLine": 107,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\n        let mut dependencies = None;\n\n        // Find the dependencies listing in the lockfile\n        if let Some(ref root) = lock.root {\n            // If the version is not on the lockfile then it shouldn't be\n            // ambiguous.\n",
                    "rendered": {
                      "text": "\n        let mut dependencies = None;\n\n        // Find the dependencies listing in the lockfile\n        if let Some(ref root) = lock.root {\n            // If the version is not on the lockfile then it shouldn't be\n            // ambiguous.\n",
                      "markdown": "`\n        let mut dependencies = None;\n\n        // Find the dependencies listing in the lockfile\n        if let Some(ref root) = lock.root {\n            // If the version is not on the lockfile then it shouldn't be\n            // ambiguous.\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/cargo/cargo.rs"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 26,
                  "endLine": 93,
                  "endColumn": 32,
                  "snippet": {
                    "text": "        match self.find_pkg_to_generate_bindings_ref(&self.binding_crate_name) {\n            Some(pkg_ref) => pkg_ref,\n            None => panic!(\n                \"Unable to find {} for {:?}\",\n                self.binding_crate_name, self.manifest_path\n            ),\n        }\n",
                    "rendered": {
                      "text": "        match self.find_pkg_to_generate_bindings_ref(&self.binding_crate_name) {\n            Some(pkg_ref) => pkg_ref,\n            None => panic!(\n                \"Unable to find {} for {:?}\",\n                self.binding_crate_name, self.manifest_path\n            ),\n        }\n",
                      "markdown": "`        match self.find_pkg_to_generate_bindings_ref(&self.binding_crate_name) {\n            Some(pkg_ref) => pkg_ref,\n            None => panic!(\n                \"Unable to find {} for {:?}\",\n                self.binding_crate_name, self.manifest_path\n            ),\n        }\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/cargo/cargo_metadata.rs"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 29,
                  "endLine": 181,
                  "endColumn": 45,
                  "snippet": {
                    "text": "impl Eq for Dependency {}\n\nfn discover_target(manifest_path: &Path) -> Option<String> {\n    if let Ok(target) = std::env::var(\"TARGET\") {\n        return Some(target);\n    }\n\n",
                    "rendered": {
                      "text": "impl Eq for Dependency {}\n\nfn discover_target(manifest_path: &Path) -> Option<String> {\n    if let Ok(target) = std::env::var(\"TARGET\") {\n        return Some(target);\n    }\n\n",
                      "markdown": "`impl Eq for Dependency {}\n\nfn discover_target(manifest_path: &Path) -> Option<String> {\n    if let Ok(target) = std::env::var(\"TARGET\") {\n        return Some(target);\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/cargo/cargo_metadata.rs"
                },
                "region": {
                  "startLine": 234,
                  "startColumn": 19,
                  "endLine": 234,
                  "endColumn": 24,
                  "snippet": {
                    "text": "            };\n\n            let cargo = env::var(\"CARGO\").unwrap_or_else(|_| String::from(\"cargo\"));\n            let mut cmd = Command::new(cargo);\n            cmd.arg(\"metadata\");\n            cmd.arg(\"--all-features\");\n            cmd.arg(\"--format-version\").arg(\"1\");\n",
                    "rendered": {
                      "text": "            };\n\n            let cargo = env::var(\"CARGO\").unwrap_or_else(|_| String::from(\"cargo\"));\n            let mut cmd = Command::new(cargo);\n            cmd.arg(\"metadata\");\n            cmd.arg(\"--all-features\");\n            cmd.arg(\"--format-version\").arg(\"1\");\n",
                      "markdown": "`            };\n\n            let cargo = env::var(\"CARGO\").unwrap_or_else(|_| String::from(\"cargo\"));\n            let mut cmd = Command::new(cargo);\n            cmd.arg(\"metadata\");\n            cmd.arg(\"--all-features\");\n            cmd.arg(\"--format-version\").arg(\"1\");\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/cargo/cargo_expand.rs"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 12,
                  "endLine": 86,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        // locking the default target directory. In this case we need to use another directory,\n        // else we would end up in a deadlock. If Cargo is running `OUT_DIR` will be set, so we\n        // can use a directory relative to that.\n        cmd.env(\"CARGO_TARGET_DIR\", PathBuf::from(path).join(\"expanded\"));\n    }\n\n    // Set this variable so that we don't call it recursively if we expand a crate that is using\n",
                    "rendered": {
                      "text": "        // locking the default target directory. In this case we need to use another directory,\n        // else we would end up in a deadlock. If Cargo is running `OUT_DIR` will be set, so we\n        // can use a directory relative to that.\n        cmd.env(\"CARGO_TARGET_DIR\", PathBuf::from(path).join(\"expanded\"));\n    }\n\n    // Set this variable so that we don't call it recursively if we expand a crate that is using\n",
                      "markdown": "`        // locking the default target directory. In this case we need to use another directory,\n        // else we would end up in a deadlock. If Cargo is running `OUT_DIR` will be set, so we\n        // can use a directory relative to that.\n        cmd.env(\"CARGO_TARGET_DIR\", PathBuf::from(path).join(\"expanded\"));\n    }\n\n    // Set this variable so that we don't call it recursively if we expand a crate that is using\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/cargo/cargo_expand.rs"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 12,
                  "endLine": 80,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        _temp_dir = Some(Builder::new().prefix(\"cbindgen-expand\").tempdir()?);\n        cmd.env(\"CARGO_TARGET_DIR\", _temp_dir.unwrap().path());\n    } else if let Ok(ref path) = env::var(\"CARGO_EXPAND_TARGET_DIR\") {\n        cmd.env(\"CARGO_TARGET_DIR\", path);\n    } else if let Ok(ref path) = env::var(\"OUT_DIR\") {\n        // When cbindgen was started programatically from a build.rs file, Cargo is running and\n        // locking the default target directory. In this case we need to use another directory,\n",
                    "rendered": {
                      "text": "        _temp_dir = Some(Builder::new().prefix(\"cbindgen-expand\").tempdir()?);\n        cmd.env(\"CARGO_TARGET_DIR\", _temp_dir.unwrap().path());\n    } else if let Ok(ref path) = env::var(\"CARGO_EXPAND_TARGET_DIR\") {\n        cmd.env(\"CARGO_TARGET_DIR\", path);\n    } else if let Ok(ref path) = env::var(\"OUT_DIR\") {\n        // When cbindgen was started programatically from a build.rs file, Cargo is running and\n        // locking the default target directory. In this case we need to use another directory,\n",
                      "markdown": "`        _temp_dir = Some(Builder::new().prefix(\"cbindgen-expand\").tempdir()?);\n        cmd.env(\"CARGO_TARGET_DIR\", _temp_dir.unwrap().path());\n    } else if let Ok(ref path) = env::var(\"CARGO_EXPAND_TARGET_DIR\") {\n        cmd.env(\"CARGO_TARGET_DIR\", path);\n    } else if let Ok(ref path) = env::var(\"OUT_DIR\") {\n        // When cbindgen was started programatically from a build.rs file, Cargo is running and\n        // locking the default target directory. In this case we need to use another directory,\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/cargo/cargo_expand.rs"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 33,
                  "endLine": 79,
                  "endColumn": 62,
                  "snippet": {
                    "text": "    if use_tempdir {\n        _temp_dir = Some(Builder::new().prefix(\"cbindgen-expand\").tempdir()?);\n        cmd.env(\"CARGO_TARGET_DIR\", _temp_dir.unwrap().path());\n    } else if let Ok(ref path) = env::var(\"CARGO_EXPAND_TARGET_DIR\") {\n        cmd.env(\"CARGO_TARGET_DIR\", path);\n    } else if let Ok(ref path) = env::var(\"OUT_DIR\") {\n        // When cbindgen was started programatically from a build.rs file, Cargo is running and\n",
                    "rendered": {
                      "text": "    if use_tempdir {\n        _temp_dir = Some(Builder::new().prefix(\"cbindgen-expand\").tempdir()?);\n        cmd.env(\"CARGO_TARGET_DIR\", _temp_dir.unwrap().path());\n    } else if let Ok(ref path) = env::var(\"CARGO_EXPAND_TARGET_DIR\") {\n        cmd.env(\"CARGO_TARGET_DIR\", path);\n    } else if let Ok(ref path) = env::var(\"OUT_DIR\") {\n        // When cbindgen was started programatically from a build.rs file, Cargo is running and\n",
                      "markdown": "`    if use_tempdir {\n        _temp_dir = Some(Builder::new().prefix(\"cbindgen-expand\").tempdir()?);\n        cmd.env(\"CARGO_TARGET_DIR\", _temp_dir.unwrap().path());\n    } else if let Ok(ref path) = env::var(\"CARGO_EXPAND_TARGET_DIR\") {\n        cmd.env(\"CARGO_TARGET_DIR\", path);\n    } else if let Ok(ref path) = env::var(\"OUT_DIR\") {\n        // When cbindgen was started programatically from a build.rs file, Cargo is running and\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/cargo/cargo_expand.rs"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 12,
                  "endLine": 78,
                  "endColumn": 29,
                  "snippet": {
                    "text": "    let mut _temp_dir = None; // drop guard\n    if use_tempdir {\n        _temp_dir = Some(Builder::new().prefix(\"cbindgen-expand\").tempdir()?);\n        cmd.env(\"CARGO_TARGET_DIR\", _temp_dir.unwrap().path());\n    } else if let Ok(ref path) = env::var(\"CARGO_EXPAND_TARGET_DIR\") {\n        cmd.env(\"CARGO_TARGET_DIR\", path);\n    } else if let Ok(ref path) = env::var(\"OUT_DIR\") {\n",
                    "rendered": {
                      "text": "    let mut _temp_dir = None; // drop guard\n    if use_tempdir {\n        _temp_dir = Some(Builder::new().prefix(\"cbindgen-expand\").tempdir()?);\n        cmd.env(\"CARGO_TARGET_DIR\", _temp_dir.unwrap().path());\n    } else if let Ok(ref path) = env::var(\"CARGO_EXPAND_TARGET_DIR\") {\n        cmd.env(\"CARGO_TARGET_DIR\", path);\n    } else if let Ok(ref path) = env::var(\"OUT_DIR\") {\n",
                      "markdown": "`    let mut _temp_dir = None; // drop guard\n    if use_tempdir {\n        _temp_dir = Some(Builder::new().prefix(\"cbindgen-expand\").tempdir()?);\n        cmd.env(\"CARGO_TARGET_DIR\", _temp_dir.unwrap().path());\n    } else if let Ok(ref path) = env::var(\"CARGO_EXPAND_TARGET_DIR\") {\n        cmd.env(\"CARGO_TARGET_DIR\", path);\n    } else if let Ok(ref path) = env::var(\"OUT_DIR\") {\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/cargo/cargo_expand.rs"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 11,
                  "endLine": 73,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    profile: Profile,\n) -> Result<String, Error> {\n    let cargo = env::var(\"CARGO\").unwrap_or_else(|_| String::from(\"cargo\"));\n    let mut cmd = Command::new(cargo);\n\n    let mut _temp_dir = None; // drop guard\n    if use_tempdir {\n",
                    "rendered": {
                      "text": "    profile: Profile,\n) -> Result<String, Error> {\n    let cargo = env::var(\"CARGO\").unwrap_or_else(|_| String::from(\"cargo\"));\n    let mut cmd = Command::new(cargo);\n\n    let mut _temp_dir = None; // drop guard\n    if use_tempdir {\n",
                      "markdown": "`    profile: Profile,\n) -> Result<String, Error> {\n    let cargo = env::var(\"CARGO\").unwrap_or_else(|_| String::from(\"cargo\"));\n    let mut cmd = Command::new(cargo);\n\n    let mut _temp_dir = None; // drop guard\n    if use_tempdir {\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/cargo/cargo_expand.rs"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 16,
                  "endLine": 59,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    }\n}\n\n/// Use rustc to expand and pretty print the crate into a single file,\n/// removing any macros in the process.\n#[allow(clippy::too_many_arguments)]\npub fn expand(\n",
                    "rendered": {
                      "text": "    }\n}\n\n/// Use rustc to expand and pretty print the crate into a single file,\n/// removing any macros in the process.\n#[allow(clippy::too_many_arguments)]\npub fn expand(\n",
                      "markdown": "`    }\n}\n\n/// Use rustc to expand and pretty print the crate into a single file,\n/// removing any macros in the process.\n#[allow(clippy::too_many_arguments)]\npub fn expand(\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/cargo/cargo_expand.rs"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 16,
                  "endLine": 59,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    }\n}\n\n/// Use rustc to expand and pretty print the crate into a single file,\n/// removing any macros in the process.\n#[allow(clippy::too_many_arguments)]\npub fn expand(\n",
                    "rendered": {
                      "text": "    }\n}\n\n/// Use rustc to expand and pretty print the crate into a single file,\n/// removing any macros in the process.\n#[allow(clippy::too_many_arguments)]\npub fn expand(\n",
                      "markdown": "`    }\n}\n\n/// Use rustc to expand and pretty print the crate into a single file,\n/// removing any macros in the process.\n#[allow(clippy::too_many_arguments)]\npub fn expand(\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/ir/generic_path.rs"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 20,
                  "endLine": 124,
                  "endColumn": 25,
                  "snippet": {
                    "text": "            .map(|(i, param)| {\n                // Fall back to the GenericParam default if no GenericArgument is available.\n                let arg = arguments\n                    .get(i)\n                    .or(param.default.as_ref())\n                    .unwrap_or_else(|| {\n                        panic!(\n",
                    "rendered": {
                      "text": "            .map(|(i, param)| {\n                // Fall back to the GenericParam default if no GenericArgument is available.\n                let arg = arguments\n                    .get(i)\n                    .or(param.default.as_ref())\n                    .unwrap_or_else(|| {\n                        panic!(\n",
                      "markdown": "`            .map(|(i, param)| {\n                // Fall back to the GenericParam default if no GenericArgument is available.\n                let arg = arguments\n                    .get(i)\n                    .or(param.default.as_ref())\n                    .unwrap_or_else(|| {\n                        panic!(\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/ir/function.rs"
                },
                "region": {
                  "startLine": 218,
                  "startColumn": 49,
                  "endLine": 218,
                  "endColumn": 54,
                  "snippet": {
                    "text": "                    Some(ref name) => name,\n                    None => continue,\n                };\n                arg.array_length = ptrs_as_arrays.get(name).cloned();\n            }\n        }\n    }\n",
                    "rendered": {
                      "text": "                    Some(ref name) => name,\n                    None => continue,\n                };\n                arg.array_length = ptrs_as_arrays.get(name).cloned();\n            }\n        }\n    }\n",
                      "markdown": "`                    Some(ref name) => name,\n                    None => continue,\n                };\n                arg.array_length = ptrs_as_arrays.get(name).cloned();\n            }\n        }\n    }\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/bitflags.rs"
                },
                "region": {
                  "startLine": 176,
                  "startColumn": 13,
                  "endLine": 176,
                  "endColumn": 19,
                  "snippet": {
                    "text": "        //     }\n        // }\n        // ```\n        match node {\n            syn::Expr::MethodCall(syn::ExprMethodCall {\n                attrs,\n                receiver,\n",
                    "rendered": {
                      "text": "        //     }\n        // }\n        // ```\n        match node {\n            syn::Expr::MethodCall(syn::ExprMethodCall {\n                attrs,\n                receiver,\n",
                      "markdown": "`        //     }\n        // }\n        // ```\n        match node {\n            syn::Expr::MethodCall(syn::ExprMethodCall {\n                attrs,\n                receiver,\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/library.rs"
                },
                "region": {
                  "startLine": 152,
                  "startColumn": 20,
                  "endLine": 152,
                  "endColumn": 26,
                  "snippet": {
                    "text": "    }\n\n    pub fn get_items(&self, p: &Path) -> Option<Vec<ItemContainer>> {\n        macro_rules! find {\n            ($field:ident, $kind:ident) => {\n                if self.config.export.should_generate(ItemType::$kind) {\n                    if let Some(x) = self.$field.get_items(p) {\n",
                    "rendered": {
                      "text": "    }\n\n    pub fn get_items(&self, p: &Path) -> Option<Vec<ItemContainer>> {\n        macro_rules! find {\n            ($field:ident, $kind:ident) => {\n                if self.config.export.should_generate(ItemType::$kind) {\n                    if let Some(x) = self.$field.get_items(p) {\n",
                      "markdown": "`    }\n\n    pub fn get_items(&self, p: &Path) -> Option<Vec<ItemContainer>> {\n        macro_rules! find {\n            ($field:ident, $kind:ident) => {\n                if self.config.export.should_generate(ItemType::$kind) {\n                    if let Some(x) = self.$field.get_items(p) {\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/declarationtyperesolver.rs"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 19,
                  "endLine": 55,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    }\n\n    pub fn type_for(&self, path: &Path) -> Option<DeclarationType> {\n        *self.types.get(path)?\n    }\n}\n",
                    "rendered": {
                      "text": "    }\n\n    pub fn type_for(&self, path: &Path) -> Option<DeclarationType> {\n        *self.types.get(path)?\n    }\n}\n",
                      "markdown": "`    }\n\n    pub fn type_for(&self, path: &Path) -> Option<DeclarationType> {\n        *self.types.get(path)?\n    }\n}\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.github/workflows/deploy.yml"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 19,
                  "endLine": 45,
                  "endColumn": 23,
                  "snippet": {
                    "text": "        echo \"version=$VERSION\" >> \"$GITHUB_OUTPUT\"\n        # Steps to extract the last release notes from CHANGES:\n        #   1. Remove the first three lines\n        #   2. Stop at the next heading level\n        #   3. Remove the last line\n        #   4. Deindent the bullet points to avoid a markdown code block\n        tail -n +3 CHANGES | sed '/^##/q' |\n",
                    "rendered": {
                      "text": "        echo \"version=$VERSION\" >> \"$GITHUB_OUTPUT\"\n        # Steps to extract the last release notes from CHANGES:\n        #   1. Remove the first three lines\n        #   2. Stop at the next heading level\n        #   3. Remove the last line\n        #   4. Deindent the bullet points to avoid a markdown code block\n        tail -n +3 CHANGES | sed '/^##/q' |\n",
                      "markdown": "`        echo \"version=$VERSION\" >> \"$GITHUB_OUTPUT\"\n        # Steps to extract the last release notes from CHANGES:\n        #   1. Remove the first three lines\n        #   2. Stop at the next heading level\n        #   3. Remove the last line\n        #   4. Deindent the bullet points to avoid a markdown code block\n        tail -n +3 CHANGES | sed '/^##/q' |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.github/workflows/deploy.yml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 19,
                  "endLine": 49,
                  "endColumn": 24,
                  "snippet": {
                    "text": "        #   3. Remove the last line\n        #   4. Deindent the bullet points to avoid a markdown code block\n        tail -n +3 CHANGES | sed '/^##/q' |\n        sed '$ d' | awk '{$1=$1};1' > CHANGES.txt\n\n    - name: Create a release\n      run: |\n",
                    "rendered": {
                      "text": "        #   3. Remove the last line\n        #   4. Deindent the bullet points to avoid a markdown code block\n        tail -n +3 CHANGES | sed '/^##/q' |\n        sed '$ d' | awk '{$1=$1};1' > CHANGES.txt\n\n    - name: Create a release\n      run: |\n",
                      "markdown": "`        #   3. Remove the last line\n        #   4. Deindent the bullet points to avoid a markdown code block\n        tail -n +3 CHANGES | sed '/^##/q' |\n        sed '$ d' | awk '{$1=$1};1' > CHANGES.txt\n\n    - name: Create a release\n      run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.github/workflows/deploy.yml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 7,
                  "endLine": 49,
                  "endColumn": 12,
                  "snippet": {
                    "text": "        #   3. Remove the last line\n        #   4. Deindent the bullet points to avoid a markdown code block\n        tail -n +3 CHANGES | sed '/^##/q' |\n        sed '$ d' | awk '{$1=$1};1' > CHANGES.txt\n\n    - name: Create a release\n      run: |\n",
                    "rendered": {
                      "text": "        #   3. Remove the last line\n        #   4. Deindent the bullet points to avoid a markdown code block\n        tail -n +3 CHANGES | sed '/^##/q' |\n        sed '$ d' | awk '{$1=$1};1' > CHANGES.txt\n\n    - name: Create a release\n      run: |\n",
                      "markdown": "`        #   3. Remove the last line\n        #   4. Deindent the bullet points to avoid a markdown code block\n        tail -n +3 CHANGES | sed '/^##/q' |\n        sed '$ d' | awk '{$1=$1};1' > CHANGES.txt\n\n    - name: Create a release\n      run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.github/workflows/deploy.yml"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 28,
                  "endLine": 48,
                  "endColumn": 33,
                  "snippet": {
                    "text": "        #   2. Stop at the next heading level\n        #   3. Remove the last line\n        #   4. Deindent the bullet points to avoid a markdown code block\n        tail -n +3 CHANGES | sed '/^##/q' |\n        sed '$ d' | awk '{$1=$1};1' > CHANGES.txt\n\n    - name: Create a release\n",
                    "rendered": {
                      "text": "        #   2. Stop at the next heading level\n        #   3. Remove the last line\n        #   4. Deindent the bullet points to avoid a markdown code block\n        tail -n +3 CHANGES | sed '/^##/q' |\n        sed '$ d' | awk '{$1=$1};1' > CHANGES.txt\n\n    - name: Create a release\n",
                      "markdown": "`        #   2. Stop at the next heading level\n        #   3. Remove the last line\n        #   4. Deindent the bullet points to avoid a markdown code block\n        tail -n +3 CHANGES | sed '/^##/q' |\n        sed '$ d' | awk '{$1=$1};1' > CHANGES.txt\n\n    - name: Create a release\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.github/workflows/deploy.yml"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 7,
                  "endLine": 48,
                  "endColumn": 13,
                  "snippet": {
                    "text": "        #   2. Stop at the next heading level\n        #   3. Remove the last line\n        #   4. Deindent the bullet points to avoid a markdown code block\n        tail -n +3 CHANGES | sed '/^##/q' |\n        sed '$ d' | awk '{$1=$1};1' > CHANGES.txt\n\n    - name: Create a release\n",
                    "rendered": {
                      "text": "        #   2. Stop at the next heading level\n        #   3. Remove the last line\n        #   4. Deindent the bullet points to avoid a markdown code block\n        tail -n +3 CHANGES | sed '/^##/q' |\n        sed '$ d' | awk '{$1=$1};1' > CHANGES.txt\n\n    - name: Create a release\n",
                      "markdown": "`        #   2. Stop at the next heading level\n        #   3. Remove the last line\n        #   4. Deindent the bullet points to avoid a markdown code block\n        tail -n +3 CHANGES | sed '/^##/q' |\n        sed '$ d' | awk '{$1=$1};1' > CHANGES.txt\n\n    - name: Create a release\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.github/workflows/deploy.yml"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 45,
                  "endLine": 41,
                  "endColumn": 50,
                  "snippet": {
                    "text": "    - name: Handle release data and files\n      id: tagName\n      run: |\n        VERSION=$(cargo pkgid | cut -d# -f2 | cut -d: -f2)\n        echo \"version=$VERSION\" >> \"$GITHUB_OUTPUT\"\n        # Steps to extract the last release notes from CHANGES:\n        #   1. Remove the first three lines\n",
                    "rendered": {
                      "text": "    - name: Handle release data and files\n      id: tagName\n      run: |\n        VERSION=$(cargo pkgid | cut -d# -f2 | cut -d: -f2)\n        echo \"version=$VERSION\" >> \"$GITHUB_OUTPUT\"\n        # Steps to extract the last release notes from CHANGES:\n        #   1. Remove the first three lines\n",
                      "markdown": "`    - name: Handle release data and files\n      id: tagName\n      run: |\n        VERSION=$(cargo pkgid | cut -d# -f2 | cut -d: -f2)\n        echo \"version=$VERSION\" >> \"$GITHUB_OUTPUT\"\n        # Steps to extract the last release notes from CHANGES:\n        #   1. Remove the first three lines\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.github/workflows/deploy.yml"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 31,
                  "endLine": 41,
                  "endColumn": 36,
                  "snippet": {
                    "text": "    - name: Handle release data and files\n      id: tagName\n      run: |\n        VERSION=$(cargo pkgid | cut -d# -f2 | cut -d: -f2)\n        echo \"version=$VERSION\" >> \"$GITHUB_OUTPUT\"\n        # Steps to extract the last release notes from CHANGES:\n        #   1. Remove the first three lines\n",
                    "rendered": {
                      "text": "    - name: Handle release data and files\n      id: tagName\n      run: |\n        VERSION=$(cargo pkgid | cut -d# -f2 | cut -d: -f2)\n        echo \"version=$VERSION\" >> \"$GITHUB_OUTPUT\"\n        # Steps to extract the last release notes from CHANGES:\n        #   1. Remove the first three lines\n",
                      "markdown": "`    - name: Handle release data and files\n      id: tagName\n      run: |\n        VERSION=$(cargo pkgid | cut -d# -f2 | cut -d: -f2)\n        echo \"version=$VERSION\" >> \"$GITHUB_OUTPUT\"\n        # Steps to extract the last release notes from CHANGES:\n        #   1. Remove the first three lines\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.github/workflows/cbindgen.yml"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 22,
                  "endLine": 89,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n    - name: Test minimal-versions\n      run: |\n        cargo +nightly update -Zminimal-versions\n        cargo +nightly test\n",
                    "rendered": {
                      "text": "\n    - name: Test minimal-versions\n      run: |\n        cargo +nightly update -Zminimal-versions\n        cargo +nightly test\n",
                      "markdown": "`\n    - name: Test minimal-versions\n      run: |\n        cargo +nightly update -Zminimal-versions\n        cargo +nightly test\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.github/workflows/cbindgen.yml"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 70,
                  "endLine": 76,
                  "endColumn": 75,
                  "snippet": {
                    "text": "        CBINDGEN_TEST_VERIFY: 1\n      run: |\n        cargo +stable package --verbose\n        (cd target/package/cbindgen-$(cargo +stable run -- --version | cut -d ' ' -f 2) && cargo +stable test --verbose)\n\n    - name: Install nightly Rust\n      uses: dtolnay/rust-toolchain@nightly\n",
                    "rendered": {
                      "text": "        CBINDGEN_TEST_VERIFY: 1\n      run: |\n        cargo +stable package --verbose\n        (cd target/package/cbindgen-$(cargo +stable run -- --version | cut -d ' ' -f 2) && cargo +stable test --verbose)\n\n    - name: Install nightly Rust\n      uses: dtolnay/rust-toolchain@nightly\n",
                      "markdown": "`        CBINDGEN_TEST_VERIFY: 1\n      run: |\n        cargo +stable package --verbose\n        (cd target/package/cbindgen-$(cargo +stable run -- --version | cut -d ' ' -f 2) && cargo +stable test --verbose)\n\n    - name: Install nightly Rust\n      uses: dtolnay/rust-toolchain@nightly\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.github/workflows/cbindgen.yml"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 7,
                  "endLine": 61,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    - name: Install Cython\n      run: |\n        python -m pip install --upgrade pip wheel\n        pip install Cython==3.0.2\n\n    - name: Build\n      run: |\n",
                    "rendered": {
                      "text": "    - name: Install Cython\n      run: |\n        python -m pip install --upgrade pip wheel\n        pip install Cython==3.0.2\n\n    - name: Build\n      run: |\n",
                      "markdown": "`    - name: Install Cython\n      run: |\n        python -m pip install --upgrade pip wheel\n        pip install Cython==3.0.2\n\n    - name: Build\n      run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.github/workflows/cbindgen.yml"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 39,
                  "endLine": 60,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\n    - name: Install Cython\n      run: |\n        python -m pip install --upgrade pip wheel\n        pip install Cython==3.0.2\n\n    - name: Build\n",
                    "rendered": {
                      "text": "\n    - name: Install Cython\n      run: |\n        python -m pip install --upgrade pip wheel\n        pip install Cython==3.0.2\n\n    - name: Build\n",
                      "markdown": "`\n    - name: Install Cython\n      run: |\n        python -m pip install --upgrade pip wheel\n        pip install Cython==3.0.2\n\n    - name: Build\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.github/workflows/cbindgen.yml"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 17,
                  "endLine": 60,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\n    - name: Install Cython\n      run: |\n        python -m pip install --upgrade pip wheel\n        pip install Cython==3.0.2\n\n    - name: Build\n",
                    "rendered": {
                      "text": "\n    - name: Install Cython\n      run: |\n        python -m pip install --upgrade pip wheel\n        pip install Cython==3.0.2\n\n    - name: Build\n",
                      "markdown": "`\n    - name: Install Cython\n      run: |\n        python -m pip install --upgrade pip wheel\n        pip install Cython==3.0.2\n\n    - name: Build\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.github/workflows/cbindgen.yml"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 21,
                  "endLine": 29,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n    - name: Run rustfmt\n      run: |\n        cargo +stable fmt --check\n\n    - name: Run clippy\n      run: |\n",
                    "rendered": {
                      "text": "\n    - name: Run rustfmt\n      run: |\n        cargo +stable fmt --check\n\n    - name: Run clippy\n      run: |\n",
                      "markdown": "`\n    - name: Run rustfmt\n      run: |\n        cargo +stable fmt --check\n\n    - name: Run clippy\n      run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/.gitattributes"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 25,
                  "endLine": 1,
                  "endColumn": 33,
                  "snippet": {
                    "text": "# Running test suite will update test expectations to use LF line endings,\n# so they need to be checked out using LF as well.\n* text=auto eol=lf\nlinestyle_crlf* -text\n",
                    "rendered": {
                      "text": "# Running test suite will update test expectations to use LF line endings,\n# so they need to be checked out using LF as well.\n* text=auto eol=lf\nlinestyle_crlf* -text\n",
                      "markdown": "`# Running test suite will update test expectations to use LF line endings,\n# so they need to be checked out using LF as well.\n* text=auto eol=lf\nlinestyle_crlf* -text\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/template.toml"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 27,
                  "endLine": 16,
                  "endColumn": 31,
                  "snippet": {
                    "text": "############## Options for Wrapping the Contents of the Header #################\n\n# header = \"/* Text to put at the beginning of the generated file. Probably a license. */\"\n# trailer = \"/* Text to put at the end of the generated file */\"\n# include_guard = \"my_bindings_h\"\n# pragma_once = true\n# autogen_warning = \"/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */\"\n",
                    "rendered": {
                      "text": "############## Options for Wrapping the Contents of the Header #################\n\n# header = \"/* Text to put at the beginning of the generated file. Probably a license. */\"\n# trailer = \"/* Text to put at the end of the generated file */\"\n# include_guard = \"my_bindings_h\"\n# pragma_once = true\n# autogen_warning = \"/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */\"\n",
                      "markdown": "`############## Options for Wrapping the Contents of the Header #################\n\n# header = \"/* Text to put at the beginning of the generated file. Probably a license. */\"\n# trailer = \"/* Text to put at the end of the generated file */\"\n# include_guard = \"my_bindings_h\"\n# pragma_once = true\n# autogen_warning = \"/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/template.toml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 26,
                  "endLine": 15,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n############## Options for Wrapping the Contents of the Header #################\n\n# header = \"/* Text to put at the beginning of the generated file. Probably a license. */\"\n# trailer = \"/* Text to put at the end of the generated file */\"\n# include_guard = \"my_bindings_h\"\n# pragma_once = true\n",
                    "rendered": {
                      "text": "\n############## Options for Wrapping the Contents of the Header #################\n\n# header = \"/* Text to put at the beginning of the generated file. Probably a license. */\"\n# trailer = \"/* Text to put at the end of the generated file */\"\n# include_guard = \"my_bindings_h\"\n# pragma_once = true\n",
                      "markdown": "`\n############## Options for Wrapping the Contents of the Header #################\n\n# header = \"/* Text to put at the beginning of the generated file. Probably a license. */\"\n# trailer = \"/* Text to put at the end of the generated file */\"\n# include_guard = \"my_bindings_h\"\n# pragma_once = true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/README.md"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 22,
                  "endLine": 50,
                  "endColumn": 30,
                  "snippet": {
                    "text": "cargo install --force cbindgen\n```\n\n(--force just makes it update to the latest cbindgen if it's already installed)\n\nOr with Homebrew, run\n\n",
                    "rendered": {
                      "text": "cargo install --force cbindgen\n```\n\n(--force just makes it update to the latest cbindgen if it's already installed)\n\nOr with Homebrew, run\n\n",
                      "markdown": "`cargo install --force cbindgen\n```\n\n(--force just makes it update to the latest cbindgen if it's already installed)\n\nOr with Homebrew, run\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/README.md"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 32,
                  "endLine": 32,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\nUsing it as a program means people building your software will need it\ninstalled. Using it in your library means people may have to build cbindgen more\nfrequently (e.g. every time they update their rust compiler).\n\nIt's worth noting that the development of cbindgen has been largely adhoc, as\nfeatures have been added to support the usecases of the maintainers. This means\n",
                    "rendered": {
                      "text": "\nUsing it as a program means people building your software will need it\ninstalled. Using it in your library means people may have to build cbindgen more\nfrequently (e.g. every time they update their rust compiler).\n\nIt's worth noting that the development of cbindgen has been largely adhoc, as\nfeatures have been added to support the usecases of the maintainers. This means\n",
                      "markdown": "`\nUsing it as a program means people building your software will need it\ninstalled. Using it in your library means people may have to build cbindgen more\nfrequently (e.g. every time they update their rust compiler).\n\nIt's worth noting that the development of cbindgen has been largely adhoc, as\nfeatures have been added to support the usecases of the maintainers. This means\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/README.md"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 12,
                  "endLine": 82,
                  "endColumn": 18,
                  "snippet": {
                    "text": "We don't currently have a nice tailored example application, but [the\ntests](tests/rust/) contain plenty of interesting examples of our features.\n\nYou may also find it interesting to browse the projects that are using cbindgen\nin production:\n\n* [milksnake](https://github.com/getsentry/milksnake)\n",
                    "rendered": {
                      "text": "We don't currently have a nice tailored example application, but [the\ntests](tests/rust/) contain plenty of interesting examples of our features.\n\nYou may also find it interesting to browse the projects that are using cbindgen\nin production:\n\n* [milksnake](https://github.com/getsentry/milksnake)\n",
                      "markdown": "`We don't currently have a nice tailored example application, but [the\ntests](tests/rust/) contain plenty of interesting examples of our features.\n\nYou may also find it interesting to browse the projects that are using cbindgen\nin production:\n\n* [milksnake](https://github.com/getsentry/milksnake)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/README.md"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 25,
                  "endLine": 79,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\n# Examples\n\nWe don't currently have a nice tailored example application, but [the\ntests](tests/rust/) contain plenty of interesting examples of our features.\n\nYou may also find it interesting to browse the projects that are using cbindgen\n",
                    "rendered": {
                      "text": "\n# Examples\n\nWe don't currently have a nice tailored example application, but [the\ntests](tests/rust/) contain plenty of interesting examples of our features.\n\nYou may also find it interesting to browse the projects that are using cbindgen\n",
                      "markdown": "`\n# Examples\n\nWe don't currently have a nice tailored example application, but [the\ntests](tests/rust/) contain plenty of interesting examples of our features.\n\nYou may also find it interesting to browse the projects that are using cbindgen\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/README.md"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 22,
                  "endLine": 32,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nUsing it as a program means people building your software will need it\ninstalled. Using it in your library means people may have to build cbindgen more\nfrequently (e.g. every time they update their rust compiler).\n\nIt's worth noting that the development of cbindgen has been largely adhoc, as\nfeatures have been added to support the usecases of the maintainers. This means\n",
                    "rendered": {
                      "text": "\nUsing it as a program means people building your software will need it\ninstalled. Using it in your library means people may have to build cbindgen more\nfrequently (e.g. every time they update their rust compiler).\n\nIt's worth noting that the development of cbindgen has been largely adhoc, as\nfeatures have been added to support the usecases of the maintainers. This means\n",
                      "markdown": "`\nUsing it as a program means people building your software will need it\ninstalled. Using it in your library means people may have to build cbindgen more\nfrequently (e.g. every time they update their rust compiler).\n\nIt's worth noting that the development of cbindgen has been largely adhoc, as\nfeatures have been added to support the usecases of the maintainers. This means\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/README.md"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 3,
                  "endLine": 22,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\nC++ headers are nice because we can use operator overloads, constructors, enum\nclasses, and templates to make the API more ergonomic and Rust-like. C headers\nare nice because you can be more confident that whoever you're interoperating\nwith can handle them. With cbindgen *you don't need to choose*! You can just\ntell it to emit both from the same Rust library.\n\n",
                    "rendered": {
                      "text": "\nC++ headers are nice because we can use operator overloads, constructors, enum\nclasses, and templates to make the API more ergonomic and Rust-like. C headers\nare nice because you can be more confident that whoever you're interoperating\nwith can handle them. With cbindgen *you don't need to choose*! You can just\ntell it to emit both from the same Rust library.\n\n",
                      "markdown": "`\nC++ headers are nice because we can use operator overloads, constructors, enum\nclasses, and templates to make the API more ergonomic and Rust-like. C headers\nare nice because you can be more confident that whoever you're interoperating\nwith can handle them. With cbindgen *you don't need to choose*! You can just\ntell it to emit both from the same Rust library.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/README.md"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 15,
                  "endLine": 20,
                  "endColumn": 21,
                  "snippet": {
                    "text": "closely with the developers of Rust to ensure that the headers we generate\nreflect actual guarantees about Rust's type layout and ABI.\n\nC++ headers are nice because we can use operator overloads, constructors, enum\nclasses, and templates to make the API more ergonomic and Rust-like. C headers\nare nice because you can be more confident that whoever you're interoperating\nwith can handle them. With cbindgen *you don't need to choose*! You can just\n",
                    "rendered": {
                      "text": "closely with the developers of Rust to ensure that the headers we generate\nreflect actual guarantees about Rust's type layout and ABI.\n\nC++ headers are nice because we can use operator overloads, constructors, enum\nclasses, and templates to make the API more ergonomic and Rust-like. C headers\nare nice because you can be more confident that whoever you're interoperating\nwith can handle them. With cbindgen *you don't need to choose*! You can just\n",
                      "markdown": "`closely with the developers of Rust to ensure that the headers we generate\nreflect actual guarantees about Rust's type layout and ABI.\n\nC++ headers are nice because we can use operator overloads, constructors, enum\nclasses, and templates to make the API more ergonomic and Rust-like. C headers\nare nice because you can be more confident that whoever you're interoperating\nwith can handle them. With cbindgen *you don't need to choose*! You can just\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/tests/rust/expand/cbindgen.toml"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 18,
                  "endLine": 3,
                  "endColumn": 7,
                  "snippet": {
                    "text": "[parse]\nparse_deps = false\nexpand = [\"expand\"]\n",
                    "rendered": {
                      "text": "[parse]\nparse_deps = false\nexpand = [\"expand\"]\n",
                      "markdown": "`[parse]\nparse_deps = false\nexpand = [\"expand\"]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/tests/rust/expand/cbindgen.toml"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 18,
                  "endLine": 3,
                  "endColumn": 7,
                  "snippet": {
                    "text": "[parse]\nparse_deps = false\nexpand = [\"expand\"]\n",
                    "rendered": {
                      "text": "[parse]\nparse_deps = false\nexpand = [\"expand\"]\n",
                      "markdown": "`[parse]\nparse_deps = false\nexpand = [\"expand\"]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/ir/ty.rs"
                },
                "region": {
                  "startLine": 839,
                  "startColumn": 31,
                  "endLine": 839,
                  "endColumn": 37,
                  "snippet": {
                    "text": "                    *generic_path = GenericPath::new(mangled_path.clone(), vec![]);\n                } else {\n                    warn!(\n                        \"Cannot find a mangling for generic path {:?}. This usually means that a \\\n                         type referenced by this generic was incompatible or not found.\",\n                        generic_path\n                    );\n",
                    "rendered": {
                      "text": "                    *generic_path = GenericPath::new(mangled_path.clone(), vec![]);\n                } else {\n                    warn!(\n                        \"Cannot find a mangling for generic path {:?}. This usually means that a \\\n                         type referenced by this generic was incompatible or not found.\",\n                        generic_path\n                    );\n",
                      "markdown": "`                    *generic_path = GenericPath::new(mangled_path.clone(), vec![]);\n                } else {\n                    warn!(\n                        \"Cannot find a mangling for generic path {:?}. This usually means that a \\\n                         type referenced by this generic was incompatible or not found.\",\n                        generic_path\n                    );\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/ir/ty.rs"
                },
                "region": {
                  "startLine": 716,
                  "startColumn": 34,
                  "endLine": 716,
                  "endColumn": 40,
                  "snippet": {
                    "text": "                        }\n                    } else {\n                        warn!(\n                            \"Can't find {}. This usually means that this type was incompatible or \\\n                             not found.\",\n                            path\n                        );\n",
                    "rendered": {
                      "text": "                        }\n                    } else {\n                        warn!(\n                            \"Can't find {}. This usually means that this type was incompatible or \\\n                             not found.\",\n                            path\n                        );\n",
                      "markdown": "`                        }\n                    } else {\n                        warn!(\n                            \"Can't find {}. This usually means that this type was incompatible or \\\n                             not found.\",\n                            path\n                        );\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/ir/annotation.rs"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 30,
                  "endLine": 197,
                  "endColumn": 35,
                  "snippet": {
                    "text": "    where\n        T: Default + FromStr,\n    {\n        match self.annotations.get(name) {\n            Some(AnnotationValue::Atom(x)) => Some(\n                x.as_ref()\n                    .map_or(T::default(), |y| y.parse::<T>().ok().unwrap()),\n",
                    "rendered": {
                      "text": "    where\n        T: Default + FromStr,\n    {\n        match self.annotations.get(name) {\n            Some(AnnotationValue::Atom(x)) => Some(\n                x.as_ref()\n                    .map_or(T::default(), |y| y.parse::<T>().ok().unwrap()),\n",
                      "markdown": "`    where\n        T: Default + FromStr,\n    {\n        match self.annotations.get(name) {\n            Some(AnnotationValue::Atom(x)) => Some(\n                x.as_ref()\n                    .map_or(T::default(), |y| y.parse::<T>().ok().unwrap()),\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/ir/annotation.rs"
                },
                "region": {
                  "startLine": 187,
                  "startColumn": 30,
                  "endLine": 187,
                  "endColumn": 35,
                  "snippet": {
                    "text": "        }\n    }\n    pub fn bool(&self, name: &str) -> Option<bool> {\n        match self.annotations.get(name) {\n            Some(AnnotationValue::Bool(x)) => Some(*x),\n            _ => None,\n        }\n",
                    "rendered": {
                      "text": "        }\n    }\n    pub fn bool(&self, name: &str) -> Option<bool> {\n        match self.annotations.get(name) {\n            Some(AnnotationValue::Bool(x)) => Some(*x),\n            _ => None,\n        }\n",
                      "markdown": "`        }\n    }\n    pub fn bool(&self, name: &str) -> Option<bool> {\n        match self.annotations.get(name) {\n            Some(AnnotationValue::Bool(x)) => Some(*x),\n            _ => None,\n        }\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/ir/annotation.rs"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 30,
                  "endLine": 181,
                  "endColumn": 35,
                  "snippet": {
                    "text": "        }\n    }\n    pub fn atom(&self, name: &str) -> Option<Option<String>> {\n        match self.annotations.get(name) {\n            Some(AnnotationValue::Atom(x)) => Some(x.clone()),\n            _ => None,\n        }\n",
                    "rendered": {
                      "text": "        }\n    }\n    pub fn atom(&self, name: &str) -> Option<Option<String>> {\n        match self.annotations.get(name) {\n            Some(AnnotationValue::Atom(x)) => Some(x.clone()),\n            _ => None,\n        }\n",
                      "markdown": "`        }\n    }\n    pub fn atom(&self, name: &str) -> Option<Option<String>> {\n        match self.annotations.get(name) {\n            Some(AnnotationValue::Atom(x)) => Some(x.clone()),\n            _ => None,\n        }\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/ir/annotation.rs"
                },
                "region": {
                  "startLine": 175,
                  "startColumn": 30,
                  "endLine": 175,
                  "endColumn": 35,
                  "snippet": {
                    "text": "    }\n\n    pub fn list(&self, name: &str) -> Option<Vec<String>> {\n        match self.annotations.get(name) {\n            Some(AnnotationValue::List(x)) => Some(x.clone()),\n            _ => None,\n        }\n",
                    "rendered": {
                      "text": "    }\n\n    pub fn list(&self, name: &str) -> Option<Vec<String>> {\n        match self.annotations.get(name) {\n            Some(AnnotationValue::List(x)) => Some(x.clone()),\n            _ => None,\n        }\n",
                      "markdown": "`    }\n\n    pub fn list(&self, name: &str) -> Option<Vec<String>> {\n        match self.annotations.get(name) {\n            Some(AnnotationValue::List(x)) => Some(x.clone()),\n            _ => None,\n        }\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/ir/annotation.rs"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 15,
                  "endLine": 116,
                  "endColumn": 19,
                  "snippet": {
                    "text": "        let deprecated = attrs.find_deprecated_note();\n        let mut annotations = HashMap::new();\n\n        // Look at each line for an annotation\n        for line in lines {\n            debug_assert!(line.starts_with(\"cbindgen:\"));\n\n",
                    "rendered": {
                      "text": "        let deprecated = attrs.find_deprecated_note();\n        let mut annotations = HashMap::new();\n\n        // Look at each line for an annotation\n        for line in lines {\n            debug_assert!(line.starts_with(\"cbindgen:\"));\n\n",
                      "markdown": "`        let deprecated = attrs.find_deprecated_note();\n        let mut annotations = HashMap::new();\n\n        // Look at each line for an annotation\n        for line in lines {\n            debug_assert!(line.starts_with(\"cbindgen:\"));\n\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/bindings.rs"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 33,
                  "endLine": 105,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\n    pub fn struct_field_names(&self, path: &BindgenPath) -> Rc<Vec<String>> {\n        let mut memos = self.struct_fileds_memo.borrow_mut();\n        if let Some(memo) = memos.get(path) {\n            return memo.clone();\n        }\n\n",
                    "rendered": {
                      "text": "\n    pub fn struct_field_names(&self, path: &BindgenPath) -> Rc<Vec<String>> {\n        let mut memos = self.struct_fileds_memo.borrow_mut();\n        if let Some(memo) = memos.get(path) {\n            return memo.clone();\n        }\n\n",
                      "markdown": "`\n    pub fn struct_field_names(&self, path: &BindgenPath) -> Rc<Vec<String>> {\n        let mut memos = self.struct_fileds_memo.borrow_mut();\n        if let Some(memo) = memos.get(path) {\n            return memo.clone();\n        }\n\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/bindgen/monomorph.rs"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 25,
                  "endLine": 125,
                  "endColumn": 30,
                  "snippet": {
                    "text": "    }\n\n    pub fn mangle_path(&self, path: &GenericPath) -> Option<&Path> {\n        self.replacements.get(path)\n    }\n\n    pub fn drain_opaques(&mut self) -> Vec<OpaqueItem> {\n",
                    "rendered": {
                      "text": "    }\n\n    pub fn mangle_path(&self, path: &GenericPath) -> Option<&Path> {\n        self.replacements.get(path)\n    }\n\n    pub fn drain_opaques(&mut self) -> Vec<OpaqueItem> {\n",
                      "markdown": "`    }\n\n    pub fn mangle_path(&self, path: &GenericPath) -> Option<&Path> {\n        self.replacements.get(path)\n    }\n\n    pub fn drain_opaques(&mut self) -> Vec<OpaqueItem> {\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/src/main.rs"
                },
                "region": {
                  "startLine": 295,
                  "startColumn": 41,
                  "endLine": 295,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                .num_args(1)\n                .required(false)\n                .value_parser(value_parser!(PathBuf))\n                .help(\"Generate a depfile at the given Path listing the source files \\\n                    cbindgen traversed when generating the bindings. Useful when \\\n                    integrating cbindgen into 3rd party build-systems. \\\n                    This option is ignored if `--out` is missing.\"\n",
                    "rendered": {
                      "text": "                .num_args(1)\n                .required(false)\n                .value_parser(value_parser!(PathBuf))\n                .help(\"Generate a depfile at the given Path listing the source files \\\n                    cbindgen traversed when generating the bindings. Useful when \\\n                    integrating cbindgen into 3rd party build-systems. \\\n                    This option is ignored if `--out` is missing.\"\n",
                      "markdown": "`                .num_args(1)\n                .required(false)\n                .value_parser(value_parser!(PathBuf))\n                .help(\"Generate a depfile at the given Path listing the source files \\\n                    cbindgen traversed when generating the bindings. Useful when \\\n                    integrating cbindgen into 3rd party build-systems. \\\n                    This option is ignored if `--out` is missing.\"\n`"
                    }
                  },
                  "sourceLanguage": "rust"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/contributing.md"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 99,
                  "endLine": 21,
                  "endColumn": 107,
                  "snippet": {
                    "text": "(`python -m pip install Cython`) for checking Cython bindings generated from tests (`.pyx` files).\nNote that the tests will be failed with Cython 3.x or later.\n\nPlease run `cargo test` before filing a pull request to be sure that all tests pass. This will also update the test expectations.\n\nRustfmt is also enforced by GitHub Actions. To format your code install `rustfmt-preview` using `rustup component add rustfmt-preview` and then `cargo fmt`. GitHub Actions runs with Rust nightly, so use `rustup run nightly -- cargo fmt` to guarantee consistent results.\n\n",
                    "rendered": {
                      "text": "(`python -m pip install Cython`) for checking Cython bindings generated from tests (`.pyx` files).\nNote that the tests will be failed with Cython 3.x or later.\n\nPlease run `cargo test` before filing a pull request to be sure that all tests pass. This will also update the test expectations.\n\nRustfmt is also enforced by GitHub Actions. To format your code install `rustfmt-preview` using `rustup component add rustfmt-preview` and then `cargo fmt`. GitHub Actions runs with Rust nightly, so use `rustup run nightly -- cargo fmt` to guarantee consistent results.\n\n",
                      "markdown": "`(`python -m pip install Cython`) for checking Cython bindings generated from tests (`.pyx` files).\nNote that the tests will be failed with Cython 3.x or later.\n\nPlease run `cargo test` before filing a pull request to be sure that all tests pass. This will also update the test expectations.\n\nRustfmt is also enforced by GitHub Actions. To format your code install `rustfmt-preview` using `rustup component add rustfmt-preview` and then `cargo fmt`. GitHub Actions runs with Rust nightly, so use `rustup run nightly -- cargo fmt` to guarantee consistent results.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/contributing.md"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 11,
                  "endLine": 18,
                  "endColumn": 16,
                  "snippet": {
                    "text": "ons](https://github.com/mozilla/cbindgen/actions). It automatically runs `cargo test` which runs `cbindgen` against a series of Rust files from `tests/rust/` and checks that the output compiles using `gcc` or `g++`.\n\nIn addition to a C/C++ compiler `cargo test` requires Python and Cython\n(`python -m pip install Cython`) for checking Cython bindings generated from tests (`.pyx` files).\nNote that the tests will be failed with Cython 3.x or later.\n\nPlease run `cargo test` before filing a pull request to be sure that all tests pass. This will also update the test expectations.\n\nRustfmt is also enforced",
                    "rendered": {
                      "text": "ons](https://github.com/mozilla/cbindgen/actions). It automatically runs `cargo test` which runs `cbindgen` against a series of Rust files from `tests/rust/` and checks that the output compiles using `gcc` or `g++`.\n\nIn addition to a C/C++ compiler `cargo test` requires Python and Cython\n(`python -m pip install Cython`) for checking Cython bindings generated from tests (`.pyx` files).\nNote that the tests will be failed with Cython 3.x or later.\n\nPlease run `cargo test` before filing a pull request to be sure that all tests pass. This will also update the test expectations.\n\nRustfmt is also enforced",
                      "markdown": "`ons](https://github.com/mozilla/cbindgen/actions). It automatically runs `cargo test` which runs `cbindgen` against a series of Rust files from `tests/rust/` and checks that the output compiles using `gcc` or `g++`.\n\nIn addition to a C/C++ compiler `cargo test` requires Python and Cython\n(`python -m pip install Cython`) for checking Cython bindings generated from tests (`.pyx` files).\nNote that the tests will be failed with Cython 3.x or later.\n\nPlease run `cargo test` before filing a pull request to be sure that all tests pass. This will also update the test expectations.\n\nRustfmt is also enforced`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 571,
                  "startColumn": 11,
                  "endLine": 571,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"yansi\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09041cd90cf85f7f8b2df60c646f853b7f535ce68f85244eb6731cf89fa498ec\"\n",
                    "rendered": {
                      "text": "name = \"yansi\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09041cd90cf85f7f8b2df60c646f853b7f535ce68f85244eb6731cf89fa498ec\"\n",
                      "markdown": "`name = \"yansi\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09041cd90cf85f7f8b2df60c646f853b7f535ce68f85244eb6731cf89fa498ec\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 562,
                  "startColumn": 11,
                  "endLine": 562,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"winnow\"\nversion = \"0.6.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68a9bda4691f099d435ad181000724da8e5899daa10713c2d432552b9ccd3a6f\"\ndependencies = [\n \"memchr\",\n]\n",
                    "rendered": {
                      "text": "name = \"winnow\"\nversion = \"0.6.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68a9bda4691f099d435ad181000724da8e5899daa10713c2d432552b9ccd3a6f\"\ndependencies = [\n \"memchr\",\n]\n",
                      "markdown": "`name = \"winnow\"\nversion = \"0.6.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68a9bda4691f099d435ad181000724da8e5899daa10713c2d432552b9ccd3a6f\"\ndependencies = [\n \"memchr\",\n]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 556,
                  "startColumn": 11,
                  "endLine": 556,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n\n[[package]]\nname = \"winnow\"\n",
                    "rendered": {
                      "text": "name = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n\n[[package]]\nname = \"winnow\"\n",
                      "markdown": "`name = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n\n[[package]]\nname = \"winnow\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 550,
                  "startColumn": 11,
                  "endLine": 550,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\n",
                    "rendered": {
                      "text": "name = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\n",
                      "markdown": "`name = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 544,
                  "startColumn": 11,
                  "endLine": 544,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\n",
                    "rendered": {
                      "text": "name = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\n",
                      "markdown": "`name = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 538,
                  "startColumn": 11,
                  "endLine": 538,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\n",
                    "rendered": {
                      "text": "name = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\n",
                      "markdown": "`name = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 532,
                  "startColumn": 11,
                  "endLine": 532,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\n",
                    "rendered": {
                      "text": "name = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\n",
                      "markdown": "`name = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 526,
                  "startColumn": 11,
                  "endLine": 526,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\n",
                    "rendered": {
                      "text": "name = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\n",
                      "markdown": "`name = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 520,
                  "startColumn": 11,
                  "endLine": 520,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\n",
                    "rendered": {
                      "text": "name = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\n",
                      "markdown": "`name = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 514,
                  "startColumn": 11,
                  "endLine": 514,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\n",
                    "rendered": {
                      "text": "name = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\n",
                      "markdown": "`name = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 498,
                  "startColumn": 11,
                  "endLine": 498,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm\",\n \"windows_aarch64_msvc\",\n",
                    "rendered": {
                      "text": "name = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm\",\n \"windows_aarch64_msvc\",\n",
                      "markdown": "`name = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm\",\n \"windows_aarch64_msvc\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 489,
                  "startColumn": 11,
                  "endLine": 489,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"windows-sys\"\nversion = \"0.59.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b\"\ndependencies = [\n \"windows-targets\",\n]\n",
                    "rendered": {
                      "text": "name = \"windows-sys\"\nversion = \"0.59.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b\"\ndependencies = [\n \"windows-targets\",\n]\n",
                      "markdown": "`name = \"windows-sys\"\nversion = \"0.59.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b\"\ndependencies = [\n \"windows-targets\",\n]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 480,
                  "startColumn": 11,
                  "endLine": 480,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets\",\n]\n",
                    "rendered": {
                      "text": "name = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets\",\n]\n",
                      "markdown": "`name = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets\",\n]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 474,
                  "startColumn": 11,
                  "endLine": 474,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"utf8parse\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06abde3611657adf66d383f00b093d7faecc7fa57071cce2578660c9f1010821\"\n\n[[package]]\nname = \"windows-sys\"\n",
                    "rendered": {
                      "text": "name = \"utf8parse\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06abde3611657adf66d383f00b093d7faecc7fa57071cce2578660c9f1010821\"\n\n[[package]]\nname = \"windows-sys\"\n",
                      "markdown": "`name = \"utf8parse\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06abde3611657adf66d383f00b093d7faecc7fa57071cce2578660c9f1010821\"\n\n[[package]]\nname = \"windows-sys\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 468,
                  "startColumn": 11,
                  "endLine": 468,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"unicode-ident\"\nversion = \"1.0.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3354b9ac3fae1ff6755cb6db53683adb661634f67557942dea4facebec0fee4b\"\n\n[[package]]\nname = \"utf8parse\"\n",
                    "rendered": {
                      "text": "name = \"unicode-ident\"\nversion = \"1.0.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3354b9ac3fae1ff6755cb6db53683adb661634f67557942dea4facebec0fee4b\"\n\n[[package]]\nname = \"utf8parse\"\n",
                      "markdown": "`name = \"unicode-ident\"\nversion = \"1.0.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3354b9ac3fae1ff6755cb6db53683adb661634f67557942dea4facebec0fee4b\"\n\n[[package]]\nname = \"utf8parse\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 455,
                  "startColumn": 11,
                  "endLine": 455,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"toml_edit\"\nversion = \"0.22.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"583c44c02ad26b0c3f3066fe629275e50627026c51ac2e595cca4c230ce1ce1d\"\ndependencies = [\n \"indexmap\",\n \"serde\",\n",
                    "rendered": {
                      "text": "name = \"toml_edit\"\nversion = \"0.22.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"583c44c02ad26b0c3f3066fe629275e50627026c51ac2e595cca4c230ce1ce1d\"\ndependencies = [\n \"indexmap\",\n \"serde\",\n",
                      "markdown": "`name = \"toml_edit\"\nversion = \"0.22.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"583c44c02ad26b0c3f3066fe629275e50627026c51ac2e595cca4c230ce1ce1d\"\ndependencies = [\n \"indexmap\",\n \"serde\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 446,
                  "startColumn": 11,
                  "endLine": 446,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"toml_datetime\"\nversion = \"0.6.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0dd7358ecb8fc2f8d014bf86f6f638ce72ba252a2c3a2572f2a795f1d23efb41\"\ndependencies = [\n \"serde\",\n]\n",
                    "rendered": {
                      "text": "name = \"toml_datetime\"\nversion = \"0.6.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0dd7358ecb8fc2f8d014bf86f6f638ce72ba252a2c3a2572f2a795f1d23efb41\"\ndependencies = [\n \"serde\",\n]\n",
                      "markdown": "`name = \"toml_datetime\"\nversion = \"0.6.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0dd7358ecb8fc2f8d014bf86f6f638ce72ba252a2c3a2572f2a795f1d23efb41\"\ndependencies = [\n \"serde\",\n]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 434,
                  "startColumn": 11,
                  "endLine": 434,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"toml\"\nversion = \"0.8.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1ed1f98e3fdc28d6d910e6737ae6ab1a93bf1985935a1193e68f93eeb68d24e\"\ndependencies = [\n \"serde\",\n \"serde_spanned\",\n",
                    "rendered": {
                      "text": "name = \"toml\"\nversion = \"0.8.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1ed1f98e3fdc28d6d910e6737ae6ab1a93bf1985935a1193e68f93eeb68d24e\"\ndependencies = [\n \"serde\",\n \"serde_spanned\",\n",
                      "markdown": "`name = \"toml\"\nversion = \"0.8.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1ed1f98e3fdc28d6d910e6737ae6ab1a93bf1985935a1193e68f93eeb68d24e\"\ndependencies = [\n \"serde\",\n \"serde_spanned\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 421,
                  "startColumn": 11,
                  "endLine": 421,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"tempfile\"\nversion = \"3.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"04cbcdd0c794ebb0d4cf35e88edd2f7d2c4c3e9a5a6dab322839b321c6a87a64\"\ndependencies = [\n \"cfg-if\",\n \"fastrand\",\n",
                    "rendered": {
                      "text": "name = \"tempfile\"\nversion = \"3.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"04cbcdd0c794ebb0d4cf35e88edd2f7d2c4c3e9a5a6dab322839b321c6a87a64\"\ndependencies = [\n \"cfg-if\",\n \"fastrand\",\n",
                      "markdown": "`name = \"tempfile\"\nversion = \"3.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"04cbcdd0c794ebb0d4cf35e88edd2f7d2c4c3e9a5a6dab322839b321c6a87a64\"\ndependencies = [\n \"cfg-if\",\n \"fastrand\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 410,
                  "startColumn": 11,
                  "endLine": 410,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"syn\"\nversion = \"2.0.72\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc4b9b9bf2add8093d3f2c0204471e951b2285580335de42f9d2534f3ae7a8af\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n",
                    "rendered": {
                      "text": "name = \"syn\"\nversion = \"2.0.72\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc4b9b9bf2add8093d3f2c0204471e951b2285580335de42f9d2534f3ae7a8af\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n",
                      "markdown": "`name = \"syn\"\nversion = \"2.0.72\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc4b9b9bf2add8093d3f2c0204471e951b2285580335de42f9d2534f3ae7a8af\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 404,
                  "startColumn": 11,
                  "endLine": 404,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"strsim\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7da8b5736845d9f2fcb837ea5d9e2628564b3b043a70948a3f0b778838c5fb4f\"\n\n[[package]]\nname = \"syn\"\n",
                    "rendered": {
                      "text": "name = \"strsim\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7da8b5736845d9f2fcb837ea5d9e2628564b3b043a70948a3f0b778838c5fb4f\"\n\n[[package]]\nname = \"syn\"\n",
                      "markdown": "`name = \"strsim\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7da8b5736845d9f2fcb837ea5d9e2628564b3b043a70948a3f0b778838c5fb4f\"\n\n[[package]]\nname = \"syn\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 398,
                  "startColumn": 11,
                  "endLine": 398,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"smallvec\"\nversion = \"1.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67\"\n\n[[package]]\nname = \"strsim\"\n",
                    "rendered": {
                      "text": "name = \"smallvec\"\nversion = \"1.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67\"\n\n[[package]]\nname = \"strsim\"\n",
                      "markdown": "`name = \"smallvec\"\nversion = \"1.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67\"\n\n[[package]]\nname = \"strsim\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 387,
                  "startColumn": 11,
                  "endLine": 387,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"serial_test_derive\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"91d129178576168c589c9ec973feedf7d3126c01ac2bf08795109aa35b69fb8f\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n",
                    "rendered": {
                      "text": "name = \"serial_test_derive\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"91d129178576168c589c9ec973feedf7d3126c01ac2bf08795109aa35b69fb8f\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n",
                      "markdown": "`name = \"serial_test_derive\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"91d129178576168c589c9ec973feedf7d3126c01ac2bf08795109aa35b69fb8f\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 375,
                  "startColumn": 11,
                  "endLine": 375,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"serial_test\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0e56dd856803e253c8f298af3f4d7eb0ae5e23a737252cd90bb4f3b435033b2d\"\ndependencies = [\n \"dashmap\",\n \"lazy_static\",\n",
                    "rendered": {
                      "text": "name = \"serial_test\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0e56dd856803e253c8f298af3f4d7eb0ae5e23a737252cd90bb4f3b435033b2d\"\ndependencies = [\n \"dashmap\",\n \"lazy_static\",\n",
                      "markdown": "`name = \"serial_test\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0e56dd856803e253c8f298af3f4d7eb0ae5e23a737252cd90bb4f3b435033b2d\"\ndependencies = [\n \"dashmap\",\n \"lazy_static\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 366,
                  "startColumn": 11,
                  "endLine": 366,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"serde_spanned\"\nversion = \"0.6.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eb5b1b31579f3811bf615c144393417496f152e12ac8b7663bf664f4a815306d\"\ndependencies = [\n \"serde\",\n]\n",
                    "rendered": {
                      "text": "name = \"serde_spanned\"\nversion = \"0.6.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eb5b1b31579f3811bf615c144393417496f152e12ac8b7663bf664f4a815306d\"\ndependencies = [\n \"serde\",\n]\n",
                      "markdown": "`name = \"serde_spanned\"\nversion = \"0.6.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eb5b1b31579f3811bf615c144393417496f152e12ac8b7663bf664f4a815306d\"\ndependencies = [\n \"serde\",\n]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 354,
                  "startColumn": 11,
                  "endLine": 354,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"serde_json\"\nversion = \"1.0.122\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"784b6203951c57ff748476b126ccb5e8e2959a5c19e5c617ab1956be3dbc68da\"\ndependencies = [\n \"itoa\",\n \"memchr\",\n",
                    "rendered": {
                      "text": "name = \"serde_json\"\nversion = \"1.0.122\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"784b6203951c57ff748476b126ccb5e8e2959a5c19e5c617ab1956be3dbc68da\"\ndependencies = [\n \"itoa\",\n \"memchr\",\n",
                      "markdown": "`name = \"serde_json\"\nversion = \"1.0.122\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"784b6203951c57ff748476b126ccb5e8e2959a5c19e5c617ab1956be3dbc68da\"\ndependencies = [\n \"itoa\",\n \"memchr\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 343,
                  "startColumn": 11,
                  "endLine": 343,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"serde_derive\"\nversion = \"1.0.205\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"692d6f5ac90220161d6774db30c662202721e64aed9058d2c394f451261420c1\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n",
                    "rendered": {
                      "text": "name = \"serde_derive\"\nversion = \"1.0.205\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"692d6f5ac90220161d6774db30c662202721e64aed9058d2c394f451261420c1\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n",
                      "markdown": "`name = \"serde_derive\"\nversion = \"1.0.205\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"692d6f5ac90220161d6774db30c662202721e64aed9058d2c394f451261420c1\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 334,
                  "startColumn": 11,
                  "endLine": 334,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"serde\"\nversion = \"1.0.205\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e33aedb1a7135da52b7c21791455563facbbcc43d0f0f66165b42c21b3dfb150\"\ndependencies = [\n \"serde_derive\",\n]\n",
                    "rendered": {
                      "text": "name = \"serde\"\nversion = \"1.0.205\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e33aedb1a7135da52b7c21791455563facbbcc43d0f0f66165b42c21b3dfb150\"\ndependencies = [\n \"serde_derive\",\n]\n",
                      "markdown": "`name = \"serde\"\nversion = \"1.0.205\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e33aedb1a7135da52b7c21791455563facbbcc43d0f0f66165b42c21b3dfb150\"\ndependencies = [\n \"serde_derive\",\n]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 328,
                  "startColumn": 11,
                  "endLine": 328,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"scopeguard\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49\"\n\n[[package]]\nname = \"serde\"\n",
                    "rendered": {
                      "text": "name = \"scopeguard\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49\"\n\n[[package]]\nname = \"serde\"\n",
                      "markdown": "`name = \"scopeguard\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49\"\n\n[[package]]\nname = \"serde\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 322,
                  "startColumn": 11,
                  "endLine": 322,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"ryu\"\nversion = \"1.0.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f\"\n\n[[package]]\nname = \"scopeguard\"\n",
                    "rendered": {
                      "text": "name = \"ryu\"\nversion = \"1.0.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f\"\n\n[[package]]\nname = \"scopeguard\"\n",
                      "markdown": "`name = \"ryu\"\nversion = \"1.0.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f\"\n\n[[package]]\nname = \"scopeguard\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 309,
                  "startColumn": 11,
                  "endLine": 309,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"rustix\"\nversion = \"0.38.34\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"70dc5ec042f7a43c4a73241207cecc9873a06d45debb38b329f8541d85c2730f\"\ndependencies = [\n \"bitflags\",\n \"errno\",\n",
                    "rendered": {
                      "text": "name = \"rustix\"\nversion = \"0.38.34\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"70dc5ec042f7a43c4a73241207cecc9873a06d45debb38b329f8541d85c2730f\"\ndependencies = [\n \"bitflags\",\n \"errno\",\n",
                      "markdown": "`name = \"rustix\"\nversion = \"0.38.34\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"70dc5ec042f7a43c4a73241207cecc9873a06d45debb38b329f8541d85c2730f\"\ndependencies = [\n \"bitflags\",\n \"errno\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 300,
                  "startColumn": 11,
                  "endLine": 300,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"redox_syscall\"\nversion = \"0.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2a908a6e00f1fdd0dfd9c0eb08ce85126f6d8bbda50017e74bc4a4b7d4a926a4\"\ndependencies = [\n \"bitflags\",\n]\n",
                    "rendered": {
                      "text": "name = \"redox_syscall\"\nversion = \"0.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2a908a6e00f1fdd0dfd9c0eb08ce85126f6d8bbda50017e74bc4a4b7d4a926a4\"\ndependencies = [\n \"bitflags\",\n]\n",
                      "markdown": "`name = \"redox_syscall\"\nversion = \"0.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2a908a6e00f1fdd0dfd9c0eb08ce85126f6d8bbda50017e74bc4a4b7d4a926a4\"\ndependencies = [\n \"bitflags\",\n]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 291,
                  "startColumn": 11,
                  "endLine": 291,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"quote\"\nversion = \"1.0.36\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fa76aaf39101c457836aec0ce2316dbdc3ab723cdda1c6bd4e6ad4208acaca7\"\ndependencies = [\n \"proc-macro2\",\n]\n",
                    "rendered": {
                      "text": "name = \"quote\"\nversion = \"1.0.36\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fa76aaf39101c457836aec0ce2316dbdc3ab723cdda1c6bd4e6ad4208acaca7\"\ndependencies = [\n \"proc-macro2\",\n]\n",
                      "markdown": "`name = \"quote\"\nversion = \"1.0.36\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fa76aaf39101c457836aec0ce2316dbdc3ab723cdda1c6bd4e6ad4208acaca7\"\ndependencies = [\n \"proc-macro2\",\n]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 282,
                  "startColumn": 11,
                  "endLine": 282,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"proc-macro2\"\nversion = \"1.0.86\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5e719e8df665df0d1c8fbfd238015744736151d4445ec0836b8e628aae103b77\"\ndependencies = [\n \"unicode-ident\",\n]\n",
                    "rendered": {
                      "text": "name = \"proc-macro2\"\nversion = \"1.0.86\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5e719e8df665df0d1c8fbfd238015744736151d4445ec0836b8e628aae103b77\"\ndependencies = [\n \"unicode-ident\",\n]\n",
                      "markdown": "`name = \"proc-macro2\"\nversion = \"1.0.86\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5e719e8df665df0d1c8fbfd238015744736151d4445ec0836b8e628aae103b77\"\ndependencies = [\n \"unicode-ident\",\n]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 272,
                  "startColumn": 11,
                  "endLine": 272,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"pretty_assertions\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"af7cee1a6c8a5b9208b3cb1061f10c0cb689087b3d8ce85fb9d2dd7a29b6ba66\"\ndependencies = [\n \"diff\",\n \"yansi\",\n",
                    "rendered": {
                      "text": "name = \"pretty_assertions\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"af7cee1a6c8a5b9208b3cb1061f10c0cb689087b3d8ce85fb9d2dd7a29b6ba66\"\ndependencies = [\n \"diff\",\n \"yansi\",\n",
                      "markdown": "`name = \"pretty_assertions\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"af7cee1a6c8a5b9208b3cb1061f10c0cb689087b3d8ce85fb9d2dd7a29b6ba66\"\ndependencies = [\n \"diff\",\n \"yansi\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 259,
                  "startColumn": 11,
                  "endLine": 259,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"parking_lot_core\"\nversion = \"0.9.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e401f977ab385c9e4e3ab30627d6f26d00e2c73eef317493c4ec6d468726cf8\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n",
                    "rendered": {
                      "text": "name = \"parking_lot_core\"\nversion = \"0.9.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e401f977ab385c9e4e3ab30627d6f26d00e2c73eef317493c4ec6d468726cf8\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n",
                      "markdown": "`name = \"parking_lot_core\"\nversion = \"0.9.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e401f977ab385c9e4e3ab30627d6f26d00e2c73eef317493c4ec6d468726cf8\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 249,
                  "startColumn": 11,
                  "endLine": 249,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"parking_lot\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1bf18183cf54e8d6059647fc3063646a1801cf30896933ec2311622cc4b9a27\"\ndependencies = [\n \"lock_api\",\n \"parking_lot_core\",\n",
                    "rendered": {
                      "text": "name = \"parking_lot\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1bf18183cf54e8d6059647fc3063646a1801cf30896933ec2311622cc4b9a27\"\ndependencies = [\n \"lock_api\",\n \"parking_lot_core\",\n",
                      "markdown": "`name = \"parking_lot\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1bf18183cf54e8d6059647fc3063646a1801cf30896933ec2311622cc4b9a27\"\ndependencies = [\n \"lock_api\",\n \"parking_lot_core\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 243,
                  "startColumn": 11,
                  "endLine": 243,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"once_cell\"\nversion = \"1.19.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3fdb12b2476b595f9358c5161aa467c2438859caa136dec86c26fdd2efe17b92\"\n\n[[package]]\nname = \"parking_lot\"\n",
                    "rendered": {
                      "text": "name = \"once_cell\"\nversion = \"1.19.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3fdb12b2476b595f9358c5161aa467c2438859caa136dec86c26fdd2efe17b92\"\n\n[[package]]\nname = \"parking_lot\"\n",
                      "markdown": "`name = \"once_cell\"\nversion = \"1.19.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3fdb12b2476b595f9358c5161aa467c2438859caa136dec86c26fdd2efe17b92\"\n\n[[package]]\nname = \"parking_lot\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 237,
                  "startColumn": 11,
                  "endLine": 237,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"memchr\"\nversion = \"2.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3\"\n\n[[package]]\nname = \"once_cell\"\n",
                    "rendered": {
                      "text": "name = \"memchr\"\nversion = \"2.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3\"\n\n[[package]]\nname = \"once_cell\"\n",
                      "markdown": "`name = \"memchr\"\nversion = \"2.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3\"\n\n[[package]]\nname = \"once_cell\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 231,
                  "startColumn": 11,
                  "endLine": 231,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"log\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24\"\n\n[[package]]\nname = \"memchr\"\n",
                    "rendered": {
                      "text": "name = \"log\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24\"\n\n[[package]]\nname = \"memchr\"\n",
                      "markdown": "`name = \"log\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24\"\n\n[[package]]\nname = \"memchr\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 221,
                  "startColumn": 11,
                  "endLine": 221,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"lock_api\"\nversion = \"0.4.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07af8b9cdd281b7915f413fa73f29ebd5d55d0d3f0155584dade1ff18cea1b17\"\ndependencies = [\n \"autocfg\",\n \"scopeguard\",\n",
                    "rendered": {
                      "text": "name = \"lock_api\"\nversion = \"0.4.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07af8b9cdd281b7915f413fa73f29ebd5d55d0d3f0155584dade1ff18cea1b17\"\ndependencies = [\n \"autocfg\",\n \"scopeguard\",\n",
                      "markdown": "`name = \"lock_api\"\nversion = \"0.4.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07af8b9cdd281b7915f413fa73f29ebd5d55d0d3f0155584dade1ff18cea1b17\"\ndependencies = [\n \"autocfg\",\n \"scopeguard\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 215,
                  "startColumn": 11,
                  "endLine": 215,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"linux-raw-sys\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78b3ae25bc7c8c38cec158d1f2757ee79e9b3740fbc7ccf0e59e4b08d793fa89\"\n\n[[package]]\nname = \"lock_api\"\n",
                    "rendered": {
                      "text": "name = \"linux-raw-sys\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78b3ae25bc7c8c38cec158d1f2757ee79e9b3740fbc7ccf0e59e4b08d793fa89\"\n\n[[package]]\nname = \"lock_api\"\n",
                      "markdown": "`name = \"linux-raw-sys\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78b3ae25bc7c8c38cec158d1f2757ee79e9b3740fbc7ccf0e59e4b08d793fa89\"\n\n[[package]]\nname = \"lock_api\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 209,
                  "startColumn": 11,
                  "endLine": 209,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"libc\"\nversion = \"0.2.155\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"97b3888a4aecf77e811145cadf6eef5901f4782c53886191b2f693f24761847c\"\n\n[[package]]\nname = \"linux-raw-sys\"\n",
                    "rendered": {
                      "text": "name = \"libc\"\nversion = \"0.2.155\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"97b3888a4aecf77e811145cadf6eef5901f4782c53886191b2f693f24761847c\"\n\n[[package]]\nname = \"linux-raw-sys\"\n",
                      "markdown": "`name = \"libc\"\nversion = \"0.2.155\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"97b3888a4aecf77e811145cadf6eef5901f4782c53886191b2f693f24761847c\"\n\n[[package]]\nname = \"linux-raw-sys\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 203,
                  "startColumn": 11,
                  "endLine": 203,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"lazy_static\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbd2bcb4c963f2ddae06a2efc7e9f3591312473c50c6685e1f298068316e66fe\"\n\n[[package]]\nname = \"libc\"\n",
                    "rendered": {
                      "text": "name = \"lazy_static\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbd2bcb4c963f2ddae06a2efc7e9f3591312473c50c6685e1f298068316e66fe\"\n\n[[package]]\nname = \"libc\"\n",
                      "markdown": "`name = \"lazy_static\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbd2bcb4c963f2ddae06a2efc7e9f3591312473c50c6685e1f298068316e66fe\"\n\n[[package]]\nname = \"libc\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 11,
                  "endLine": 197,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"itoa\"\nversion = \"1.0.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49f1f14873335454500d59611f1cf4a4b0f786f9ac11f4312a78e4cf2566695b\"\n\n[[package]]\nname = \"lazy_static\"\n",
                    "rendered": {
                      "text": "name = \"itoa\"\nversion = \"1.0.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49f1f14873335454500d59611f1cf4a4b0f786f9ac11f4312a78e4cf2566695b\"\n\n[[package]]\nname = \"lazy_static\"\n",
                      "markdown": "`name = \"itoa\"\nversion = \"1.0.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49f1f14873335454500d59611f1cf4a4b0f786f9ac11f4312a78e4cf2566695b\"\n\n[[package]]\nname = \"lazy_static\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 11,
                  "endLine": 191,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"is_terminal_polyfill\"\nversion = \"1.70.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7943c866cc5cd64cbc25b2e01621d07fa8eb2a1a23160ee81ce38704e97b8ecf\"\n\n[[package]]\nname = \"itoa\"\n",
                    "rendered": {
                      "text": "name = \"is_terminal_polyfill\"\nversion = \"1.70.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7943c866cc5cd64cbc25b2e01621d07fa8eb2a1a23160ee81ce38704e97b8ecf\"\n\n[[package]]\nname = \"itoa\"\n",
                      "markdown": "`name = \"is_terminal_polyfill\"\nversion = \"1.70.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7943c866cc5cd64cbc25b2e01621d07fa8eb2a1a23160ee81ce38704e97b8ecf\"\n\n[[package]]\nname = \"itoa\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 11,
                  "endLine": 181,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"indexmap\"\nversion = \"2.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"de3fc2e30ba82dd1b3911c8de1ffc143c74a914a14e99514d7637e3099df5ea0\"\ndependencies = [\n \"equivalent\",\n \"hashbrown\",\n",
                    "rendered": {
                      "text": "name = \"indexmap\"\nversion = \"2.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"de3fc2e30ba82dd1b3911c8de1ffc143c74a914a14e99514d7637e3099df5ea0\"\ndependencies = [\n \"equivalent\",\n \"hashbrown\",\n",
                      "markdown": "`name = \"indexmap\"\nversion = \"2.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"de3fc2e30ba82dd1b3911c8de1ffc143c74a914a14e99514d7637e3099df5ea0\"\ndependencies = [\n \"equivalent\",\n \"hashbrown\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 175,
                  "startColumn": 11,
                  "endLine": 175,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"heck\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8\"\n\n[[package]]\nname = \"indexmap\"\n",
                    "rendered": {
                      "text": "name = \"heck\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8\"\n\n[[package]]\nname = \"indexmap\"\n",
                      "markdown": "`name = \"heck\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8\"\n\n[[package]]\nname = \"indexmap\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 11,
                  "endLine": 169,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"hashbrown\"\nversion = \"0.14.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5274423e17b7c9fc20b6e7e208532f9b19825d82dfd615708b70edd83df41f1\"\n\n[[package]]\nname = \"heck\"\n",
                    "rendered": {
                      "text": "name = \"hashbrown\"\nversion = \"0.14.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5274423e17b7c9fc20b6e7e208532f9b19825d82dfd615708b70edd83df41f1\"\n\n[[package]]\nname = \"heck\"\n",
                      "markdown": "`name = \"hashbrown\"\nversion = \"0.14.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5274423e17b7c9fc20b6e7e208532f9b19825d82dfd615708b70edd83df41f1\"\n\n[[package]]\nname = \"heck\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 11,
                  "endLine": 163,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"fastrand\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9fc0510504f03c51ada170672ac806f1f105a88aa97a5281117e1ddc3368e51a\"\n\n[[package]]\nname = \"hashbrown\"\n",
                    "rendered": {
                      "text": "name = \"fastrand\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9fc0510504f03c51ada170672ac806f1f105a88aa97a5281117e1ddc3368e51a\"\n\n[[package]]\nname = \"hashbrown\"\n",
                      "markdown": "`name = \"fastrand\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9fc0510504f03c51ada170672ac806f1f105a88aa97a5281117e1ddc3368e51a\"\n\n[[package]]\nname = \"hashbrown\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 11,
                  "endLine": 153,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"errno\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"534c5cf6194dfab3db3242765c03bbe257cf92f22b38f6bc0c58d59108a820ba\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n",
                    "rendered": {
                      "text": "name = \"errno\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"534c5cf6194dfab3db3242765c03bbe257cf92f22b38f6bc0c58d59108a820ba\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n",
                      "markdown": "`name = \"errno\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"534c5cf6194dfab3db3242765c03bbe257cf92f22b38f6bc0c58d59108a820ba\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 11,
                  "endLine": 147,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"errno\"\n",
                    "rendered": {
                      "text": "name = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"errno\"\n",
                      "markdown": "`name = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"errno\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 11,
                  "endLine": 141,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"diff\"\nversion = \"0.1.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"56254986775e3233ffa9c4d7d3faaf6d36a2c09d30b20687e9f88bc8bafc16c8\"\n\n[[package]]\nname = \"equivalent\"\n",
                    "rendered": {
                      "text": "name = \"diff\"\nversion = \"0.1.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"56254986775e3233ffa9c4d7d3faaf6d36a2c09d30b20687e9f88bc8bafc16c8\"\n\n[[package]]\nname = \"equivalent\"\n",
                      "markdown": "`name = \"diff\"\nversion = \"0.1.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"56254986775e3233ffa9c4d7d3faaf6d36a2c09d30b20687e9f88bc8bafc16c8\"\n\n[[package]]\nname = \"equivalent\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 11,
                  "endLine": 128,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"dashmap\"\nversion = \"5.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"978747c1d849a7d2ee5e8adc0159961c48fb7e5db2f06af6723b80123bb53856\"\ndependencies = [\n \"cfg-if\",\n \"hashbrown\",\n",
                    "rendered": {
                      "text": "name = \"dashmap\"\nversion = \"5.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"978747c1d849a7d2ee5e8adc0159961c48fb7e5db2f06af6723b80123bb53856\"\ndependencies = [\n \"cfg-if\",\n \"hashbrown\",\n",
                      "markdown": "`name = \"dashmap\"\nversion = \"5.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"978747c1d849a7d2ee5e8adc0159961c48fb7e5db2f06af6723b80123bb53856\"\ndependencies = [\n \"cfg-if\",\n \"hashbrown\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"colorchoice\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d3fd119d74b830634cea2a0f58bbd0d54540518a14397557951e79340abc28c0\"\n\n[[package]]\nname = \"dashmap\"\n",
                    "rendered": {
                      "text": "name = \"colorchoice\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d3fd119d74b830634cea2a0f58bbd0d54540518a14397557951e79340abc28c0\"\n\n[[package]]\nname = \"dashmap\"\n",
                      "markdown": "`name = \"colorchoice\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d3fd119d74b830634cea2a0f58bbd0d54540518a14397557951e79340abc28c0\"\n\n[[package]]\nname = \"dashmap\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 11,
                  "endLine": 116,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"clap_lex\"\nversion = \"0.7.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1462739cb27611015575c0c11df5df7601141071f07518d56fcc1be504cbec97\"\n\n[[package]]\nname = \"colorchoice\"\n",
                    "rendered": {
                      "text": "name = \"clap_lex\"\nversion = \"0.7.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1462739cb27611015575c0c11df5df7601141071f07518d56fcc1be504cbec97\"\n\n[[package]]\nname = \"colorchoice\"\n",
                      "markdown": "`name = \"clap_lex\"\nversion = \"0.7.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1462739cb27611015575c0c11df5df7601141071f07518d56fcc1be504cbec97\"\n\n[[package]]\nname = \"colorchoice\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 11,
                  "endLine": 104,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"clap_builder\"\nversion = \"4.5.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"216aec2b177652e3846684cbfe25c9964d18ec45234f0f5da5157b207ed1aab6\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n",
                    "rendered": {
                      "text": "name = \"clap_builder\"\nversion = \"4.5.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"216aec2b177652e3846684cbfe25c9964d18ec45234f0f5da5157b207ed1aab6\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n",
                      "markdown": "`name = \"clap_builder\"\nversion = \"4.5.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"216aec2b177652e3846684cbfe25c9964d18ec45234f0f5da5157b207ed1aab6\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 11,
                  "endLine": 95,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"clap\"\nversion = \"4.5.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"11d8838454fda655dafd3accb2b6e2bea645b9e4078abe84a22ceb947235c5cc\"\ndependencies = [\n \"clap_builder\",\n]\n",
                    "rendered": {
                      "text": "name = \"clap\"\nversion = \"4.5.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"11d8838454fda655dafd3accb2b6e2bea645b9e4078abe84a22ceb947235c5cc\"\ndependencies = [\n \"clap_builder\",\n]\n",
                      "markdown": "`name = \"clap\"\nversion = \"4.5.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"11d8838454fda655dafd3accb2b6e2bea645b9e4078abe84a22ceb947235c5cc\"\ndependencies = [\n \"clap_builder\",\n]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 11,
                  "endLine": 89,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"clap\"\n",
                    "rendered": {
                      "text": "name = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"clap\"\n",
                      "markdown": "`name = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"clap\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 11,
                  "endLine": 64,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"bitflags\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de\"\n\n[[package]]\nname = \"cbindgen\"\n",
                    "rendered": {
                      "text": "name = \"bitflags\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de\"\n\n[[package]]\nname = \"cbindgen\"\n",
                      "markdown": "`name = \"bitflags\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de\"\n\n[[package]]\nname = \"cbindgen\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 11,
                  "endLine": 58,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"autocfg\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0c4b4d0bd25bd0b74681c0ad21497610ce1b7c91b1022cd21c80c6fbdd9476b0\"\n\n[[package]]\nname = \"bitflags\"\n",
                    "rendered": {
                      "text": "name = \"autocfg\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0c4b4d0bd25bd0b74681c0ad21497610ce1b7c91b1022cd21c80c6fbdd9476b0\"\n\n[[package]]\nname = \"bitflags\"\n",
                      "markdown": "`name = \"autocfg\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0c4b4d0bd25bd0b74681c0ad21497610ce1b7c91b1022cd21c80c6fbdd9476b0\"\n\n[[package]]\nname = \"bitflags\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 11,
                  "endLine": 48,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"anstyle-wincon\"\nversion = \"3.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5bf74e1b6e971609db8ca7a9ce79fd5768ab6ae46441c572e46cf596f59e57f8\"\ndependencies = [\n \"anstyle\",\n \"windows-sys 0.52.0\",\n",
                    "rendered": {
                      "text": "name = \"anstyle-wincon\"\nversion = \"3.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5bf74e1b6e971609db8ca7a9ce79fd5768ab6ae46441c572e46cf596f59e57f8\"\ndependencies = [\n \"anstyle\",\n \"windows-sys 0.52.0\",\n",
                      "markdown": "`name = \"anstyle-wincon\"\nversion = \"3.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5bf74e1b6e971609db8ca7a9ce79fd5768ab6ae46441c572e46cf596f59e57f8\"\ndependencies = [\n \"anstyle\",\n \"windows-sys 0.52.0\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 11,
                  "endLine": 39,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"anstyle-query\"\nversion = \"1.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6d36fc52c7f6c869915e99412912f22093507da8d9e942ceaf66fe4b7c14422a\"\ndependencies = [\n \"windows-sys 0.52.0\",\n]\n",
                    "rendered": {
                      "text": "name = \"anstyle-query\"\nversion = \"1.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6d36fc52c7f6c869915e99412912f22093507da8d9e942ceaf66fe4b7c14422a\"\ndependencies = [\n \"windows-sys 0.52.0\",\n]\n",
                      "markdown": "`name = \"anstyle-query\"\nversion = \"1.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6d36fc52c7f6c869915e99412912f22093507da8d9e942ceaf66fe4b7c14422a\"\ndependencies = [\n \"windows-sys 0.52.0\",\n]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 11,
                  "endLine": 30,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"anstyle-parse\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eb47de1e80c2b463c735db5b217a0ddc39d612e7ac9e2e96a5aed1f57616c1cb\"\ndependencies = [\n \"utf8parse\",\n]\n",
                    "rendered": {
                      "text": "name = \"anstyle-parse\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eb47de1e80c2b463c735db5b217a0ddc39d612e7ac9e2e96a5aed1f57616c1cb\"\ndependencies = [\n \"utf8parse\",\n]\n",
                      "markdown": "`name = \"anstyle-parse\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eb47de1e80c2b463c735db5b217a0ddc39d612e7ac9e2e96a5aed1f57616c1cb\"\ndependencies = [\n \"utf8parse\",\n]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11,
                  "endLine": 24,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"anstyle\"\nversion = \"1.0.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bec1de6f59aedf83baf9ff929c98f2ad654b97c9510f4e70cf6f661d49fd5b1\"\n\n[[package]]\nname = \"anstyle-parse\"\n",
                    "rendered": {
                      "text": "name = \"anstyle\"\nversion = \"1.0.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bec1de6f59aedf83baf9ff929c98f2ad654b97c9510f4e70cf6f661d49fd5b1\"\n\n[[package]]\nname = \"anstyle-parse\"\n",
                      "markdown": "`name = \"anstyle\"\nversion = \"1.0.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bec1de6f59aedf83baf9ff929c98f2ad654b97c9510f4e70cf6f661d49fd5b1\"\n\n[[package]]\nname = \"anstyle-parse\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/Cargo.lock"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 11,
                  "endLine": 9,
                  "endColumn": 77,
                  "snippet": {
                    "text": "name = \"anstream\"\nversion = \"0.6.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64e15c1ab1f89faffbf04a634d5e1962e9074f2741eef6d97f3c4e322426d526\"\ndependencies = [\n \"anstyle\",\n \"anstyle-parse\",\n",
                    "rendered": {
                      "text": "name = \"anstream\"\nversion = \"0.6.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64e15c1ab1f89faffbf04a634d5e1962e9074f2741eef6d97f3c4e322426d526\"\ndependencies = [\n \"anstyle\",\n \"anstyle-parse\",\n",
                      "markdown": "`name = \"anstream\"\nversion = \"0.6.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64e15c1ab1f89faffbf04a634d5e1962e9074f2741eef6d97f3c4e322426d526\"\ndependencies = [\n \"anstyle\",\n \"anstyle-parse\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/CHANGES"
                },
                "region": {
                  "startLine": 344,
                  "startColumn": 9,
                  "endLine": 345,
                  "snippet": {
                    "text": "    * negative enum discriminants are now supported\n    * fix for prefixing and formatting variant names\n    * fix for snake_case formatter\n    * syn update\n    * doxygen style comments are now output by default\n    * VaList is now a recognized primitive type\n    * fix for comment processing\n    * constant is propagated into array types\n",
                    "rendered": {
                      "text": "    * negative enum discriminants are now supported\n    * fix for prefixing and formatting variant names\n    * fix for snake_case formatter\n    * syn update\n    * doxygen style comments are now output by default\n    * VaList is now a recognized primitive type\n    * fix for comment processing\n    * constant is propagated into array types\n",
                      "markdown": "`    * negative enum discriminants are now supported\n    * fix for prefixing and formatting variant names\n    * fix for snake_case formatter\n    * syn update\n    * doxygen style comments are now output by default\n    * VaList is now a recognized primitive type\n    * fix for comment processing\n    * constant is propagated into array types\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/CHANGES"
                },
                "region": {
                  "startLine": 270,
                  "startColumn": 12,
                  "endLine": 270,
                  "endColumn": 20,
                  "snippet": {
                    "text": "## 0.9.1\n\n     * Various improvements to comment output. https://github.com/mozilla/cbindgen/pull/370 / https://github.com/mozilla/cbindgen/pull/375.\n     * Fixed expand when ran from build.rs. https://github.com/mozilla/cbindgen/pull/371\n     * More debugging output for expansion. https://github.com/mozilla/cbindgen/pull/383\n     * New option to add a default private constructor in C++ tagged enums. https://github.com/mozilla/cbindgen/pull/377\n     * Syn and related dependencies updated to 1.0. https://github.com/mozilla/cbindgen/pull/379\n",
                    "rendered": {
                      "text": "## 0.9.1\n\n     * Various improvements to comment output. https://github.com/mozilla/cbindgen/pull/370 / https://github.com/mozilla/cbindgen/pull/375.\n     * Fixed expand when ran from build.rs. https://github.com/mozilla/cbindgen/pull/371\n     * More debugging output for expansion. https://github.com/mozilla/cbindgen/pull/383\n     * New option to add a default private constructor in C++ tagged enums. https://github.com/mozilla/cbindgen/pull/377\n     * Syn and related dependencies updated to 1.0. https://github.com/mozilla/cbindgen/pull/379\n",
                      "markdown": "`## 0.9.1\n\n     * Various improvements to comment output. https://github.com/mozilla/cbindgen/pull/370 / https://github.com/mozilla/cbindgen/pull/375.\n     * Fixed expand when ran from build.rs. https://github.com/mozilla/cbindgen/pull/371\n     * More debugging output for expansion. https://github.com/mozilla/cbindgen/pull/383\n     * New option to add a default private constructor in C++ tagged enums. https://github.com/mozilla/cbindgen/pull/377\n     * Syn and related dependencies updated to 1.0. https://github.com/mozilla/cbindgen/pull/379\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/CHANGES"
                },
                "region": {
                  "startLine": 195,
                  "startColumn": 18,
                  "endLine": 195,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\n## 0.14.0\n\n     * Minor tweak at how [export.exclude] is handled to allow excluding\n       generic instantiations in C mode. (#501)\n     * Documented cpp_compat option. (#496)\n     * Fixed a panic when parsing associated constants for a built-in type. (#494)\n",
                    "rendered": {
                      "text": "\n## 0.14.0\n\n     * Minor tweak at how [export.exclude] is handled to allow excluding\n       generic instantiations in C mode. (#501)\n     * Documented cpp_compat option. (#496)\n     * Fixed a panic when parsing associated constants for a built-in type. (#494)\n",
                      "markdown": "`\n## 0.14.0\n\n     * Minor tweak at how [export.exclude] is handled to allow excluding\n       generic instantiations in C mode. (#501)\n     * Documented cpp_compat option. (#496)\n     * Fixed a panic when parsing associated constants for a built-in type. (#494)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/CHANGES"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 6,
                  "endLine": 98,
                  "endColumn": 14,
                  "snippet": {
                    "text": "     * Add Builder::with_using_namespaces. (#688)\n     * Ignore PhantomPinned. (#695)\n     * Simplify Pin<T> to T. (#697)\n     * Update --pretty=expanded to -Zunpretty=expanded. (#706)\n\n## 0.19.0\n\n",
                    "rendered": {
                      "text": "     * Add Builder::with_using_namespaces. (#688)\n     * Ignore PhantomPinned. (#695)\n     * Simplify Pin<T> to T. (#697)\n     * Update --pretty=expanded to -Zunpretty=expanded. (#706)\n\n## 0.19.0\n\n",
                      "markdown": "`     * Add Builder::with_using_namespaces. (#688)\n     * Ignore PhantomPinned. (#695)\n     * Simplify Pin<T> to T. (#697)\n     * Update --pretty=expanded to -Zunpretty=expanded. (#706)\n\n## 0.19.0\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/CHANGES"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 7,
                  "endLine": 86,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n      * Update MSRV to 1.54.0\n      * Update clap to 3.1.\n      * Update heck to 0.4.0\n      * unraw identifiers\n      * Honor documentation_length in Cython.\n      * Add documentation_style to with short and full options\n",
                    "rendered": {
                      "text": "\n      * Update MSRV to 1.54.0\n      * Update clap to 3.1.\n      * Update heck to 0.4.0\n      * unraw identifiers\n      * Honor documentation_length in Cython.\n      * Add documentation_style to with short and full options\n",
                      "markdown": "`\n      * Update MSRV to 1.54.0\n      * Update clap to 3.1.\n      * Update heck to 0.4.0\n      * unraw identifiers\n      * Honor documentation_length in Cython.\n      * Add documentation_style to with short and full options\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/CHANGES"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 7,
                  "endLine": 85,
                  "endColumn": 15,
                  "snippet": {
                    "text": "## 0.21.0\n\n      * Update MSRV to 1.54.0\n      * Update clap to 3.1.\n      * Update heck to 0.4.0\n      * unraw identifiers\n      * Honor documentation_length in Cython.\n",
                    "rendered": {
                      "text": "## 0.21.0\n\n      * Update MSRV to 1.54.0\n      * Update clap to 3.1.\n      * Update heck to 0.4.0\n      * unraw identifiers\n      * Honor documentation_length in Cython.\n",
                      "markdown": "`## 0.21.0\n\n      * Update MSRV to 1.54.0\n      * Update clap to 3.1.\n      * Update heck to 0.4.0\n      * unraw identifiers\n      * Honor documentation_length in Cython.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/CHANGES"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 7,
                  "endLine": 84,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n## 0.21.0\n\n      * Update MSRV to 1.54.0\n      * Update clap to 3.1.\n      * Update heck to 0.4.0\n      * unraw identifiers\n",
                    "rendered": {
                      "text": "\n## 0.21.0\n\n      * Update MSRV to 1.54.0\n      * Update clap to 3.1.\n      * Update heck to 0.4.0\n      * unraw identifiers\n",
                      "markdown": "`\n## 0.21.0\n\n      * Update MSRV to 1.54.0\n      * Update clap to 3.1.\n      * Update heck to 0.4.0\n      * unraw identifiers\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/CHANGES"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 7,
                  "endLine": 80,
                  "endColumn": 15,
                  "snippet": {
                    "text": "      * enumeration: simplify standard types in variants (#749).\n      * Avoid generating and writing bindings when called recursively (#747).\n      * Cython: Omit per-variant tags in unions generated for Rust enums (#748).\n      * Update various dependencies.\n\n## 0.21.0\n\n",
                    "rendered": {
                      "text": "      * enumeration: simplify standard types in variants (#749).\n      * Avoid generating and writing bindings when called recursively (#747).\n      * Cython: Omit per-variant tags in unions generated for Rust enums (#748).\n      * Update various dependencies.\n\n## 0.21.0\n\n",
                      "markdown": "`      * enumeration: simplify standard types in variants (#749).\n      * Avoid generating and writing bindings when called recursively (#747).\n      * Cython: Omit per-variant tags in unions generated for Rust enums (#748).\n      * Update various dependencies.\n\n## 0.21.0\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/CHANGES"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 12,
                  "endLine": 42,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n## 0.24.4\n\n      * Move expand infinite recursion fix (#799)\n      * Add with_cpp_compat to the builder (#796)\n      * Handle never type in return position consistently (#780)\n      * Fix warnings (#816, #819)\n",
                    "rendered": {
                      "text": "\n## 0.24.4\n\n      * Move expand infinite recursion fix (#799)\n      * Add with_cpp_compat to the builder (#796)\n      * Handle never type in return position consistently (#780)\n      * Fix warnings (#816, #819)\n",
                      "markdown": "`\n## 0.24.4\n\n      * Move expand infinite recursion fix (#799)\n      * Add with_cpp_compat to the builder (#796)\n      * Handle never type in return position consistently (#780)\n      * Fix warnings (#816, #819)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/CHANGES"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 7,
                  "endLine": 32,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n## 0.24.6 (YANKED: depfile option was breaking, see #841)\n\n      * Update MSRV to 1.57\n      * Support variadic arguments (`...`) (#805)\n      * Add --depfile option (#820)\n\n",
                    "rendered": {
                      "text": "\n## 0.24.6 (YANKED: depfile option was breaking, see #841)\n\n      * Update MSRV to 1.57\n      * Support variadic arguments (`...`) (#805)\n      * Add --depfile option (#820)\n\n",
                      "markdown": "`\n## 0.24.6 (YANKED: depfile option was breaking, see #841)\n\n      * Update MSRV to 1.57\n      * Support variadic arguments (`...`) (#805)\n      * Add --depfile option (#820)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/CHANGES"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 7,
                  "endLine": 25,
                  "endColumn": 15,
                  "snippet": {
                    "text": "## 0.25.0\n\n      * Re-release of yanked 0.24.6 as a major release\n      * Update MSRV to 1.57\n      * Support variadic arguments (`...`) (#805)\n      * Add --depfile option (#820)\n      * Breaking changes: The `Config` struct now has a private member.\n",
                    "rendered": {
                      "text": "## 0.25.0\n\n      * Re-release of yanked 0.24.6 as a major release\n      * Update MSRV to 1.57\n      * Support variadic arguments (`...`) (#805)\n      * Add --depfile option (#820)\n      * Breaking changes: The `Config` struct now has a private member.\n",
                      "markdown": "`## 0.25.0\n\n      * Re-release of yanked 0.24.6 as a major release\n      * Update MSRV to 1.57\n      * Support variadic arguments (`...`) (#805)\n      * Add --depfile option (#820)\n      * Breaking changes: The `Config` struct now has a private member.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/CHANGES"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 7,
                  "endLine": 7,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n      * Revert: The `Config` struct now has a private member.\n      * Allow users to specify a crate version for bindings generation (#901).\n      * Update MSRV to 1.74 (#912, #987).\n      * Support #[deprecated] on enum variants (#933).\n      * Support integrating the package_version information in a header file comment (#939).\n      * Add a language backend (#942).\n",
                    "rendered": {
                      "text": "\n      * Revert: The `Config` struct now has a private member.\n      * Allow users to specify a crate version for bindings generation (#901).\n      * Update MSRV to 1.74 (#912, #987).\n      * Support #[deprecated] on enum variants (#933).\n      * Support integrating the package_version information in a header file comment (#939).\n      * Add a language backend (#942).\n",
                      "markdown": "`\n      * Revert: The `Config` struct now has a private member.\n      * Allow users to specify a crate version for bindings generation (#901).\n      * Update MSRV to 1.74 (#912, #987).\n      * Support #[deprecated] on enum variants (#933).\n      * Support integrating the package_version information in a header file comment (#939).\n      * Add a language backend (#942).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/CHANGES"
                },
                "region": {
                  "startLine": 270,
                  "startColumn": 12,
                  "endLine": 270,
                  "endColumn": 20,
                  "snippet": {
                    "text": "## 0.9.1\n\n     * Various improvements to comment output. https://github.com/mozilla/cbindgen/pull/370 / https://github.com/mozilla/cbindgen/pull/375.\n     * Fixed expand when ran from build.rs. https://github.com/mozilla/cbindgen/pull/371\n     * More debugging output for expansion. https://github.com/mozilla/cbindgen/pull/383\n     * New option to add a default private constructor in C++ tagged enums. https://github.com/mozilla/cbindgen/pull/377\n     * Syn and related dependencies updated to 1.0. https://github.com/mozilla/cbindgen/pull/379\n",
                    "rendered": {
                      "text": "## 0.9.1\n\n     * Various improvements to comment output. https://github.com/mozilla/cbindgen/pull/370 / https://github.com/mozilla/cbindgen/pull/375.\n     * Fixed expand when ran from build.rs. https://github.com/mozilla/cbindgen/pull/371\n     * More debugging output for expansion. https://github.com/mozilla/cbindgen/pull/383\n     * New option to add a default private constructor in C++ tagged enums. https://github.com/mozilla/cbindgen/pull/377\n     * Syn and related dependencies updated to 1.0. https://github.com/mozilla/cbindgen/pull/379\n",
                      "markdown": "`## 0.9.1\n\n     * Various improvements to comment output. https://github.com/mozilla/cbindgen/pull/370 / https://github.com/mozilla/cbindgen/pull/375.\n     * Fixed expand when ran from build.rs. https://github.com/mozilla/cbindgen/pull/371\n     * More debugging output for expansion. https://github.com/mozilla/cbindgen/pull/383\n     * New option to add a default private constructor in C++ tagged enums. https://github.com/mozilla/cbindgen/pull/377\n     * Syn and related dependencies updated to 1.0. https://github.com/mozilla/cbindgen/pull/379\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/CHANGES"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 14,
                  "endLine": 142,
                  "endColumn": 20,
                  "snippet": {
                    "text": "     * Large character constants have been fixed on Windows (#586)\n     * Constants are now generated for typedefs, etc (#589)\n     * The `sort_by` configuration option has been made to work for constants (#587)\n     * Default sort order is source order now (sort_by = \"None\"), and can be changed by the above option (#587)\n\n## 0.14.6\n\n",
                    "rendered": {
                      "text": "     * Large character constants have been fixed on Windows (#586)\n     * Constants are now generated for typedefs, etc (#589)\n     * The `sort_by` configuration option has been made to work for constants (#587)\n     * Default sort order is source order now (sort_by = \"None\"), and can be changed by the above option (#587)\n\n## 0.14.6\n\n",
                      "markdown": "`     * Large character constants have been fixed on Windows (#586)\n     * Constants are now generated for typedefs, etc (#589)\n     * The `sort_by` configuration option has been made to work for constants (#587)\n     * Default sort order is source order now (sort_by = \"None\"), and can be changed by the above option (#587)\n\n## 0.14.6\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/cbindgen.zip/CHANGES"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 12,
                  "endLine": 42,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n## 0.24.4\n\n      * Move expand infinite recursion fix (#799)\n      * Add with_cpp_compat to the builder (#796)\n      * Handle never type in return position consistently (#780)\n      * Fix warnings (#816, #819)\n",
                    "rendered": {
                      "text": "\n## 0.24.4\n\n      * Move expand infinite recursion fix (#799)\n      * Add with_cpp_compat to the builder (#796)\n      * Handle never type in return position consistently (#780)\n      * Fix warnings (#816, #819)\n",
                      "markdown": "`\n## 0.24.4\n\n      * Move expand infinite recursion fix (#799)\n      * Add with_cpp_compat to the builder (#796)\n      * Handle never type in return position consistently (#780)\n      * Fix warnings (#816, #819)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}