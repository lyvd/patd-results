{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-v3.5.scd"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 30,
                  "endLine": 38,
                  "endColumn": 34,
                  "snippet": {
                    "text": "Arrays and objects are represented with a sequence of numbered slots;\nthe value packed into their tag word is the offset at which this\nsequence starts. The first slot is always the total number of slots, so\nall arrays and objects contain at least one item.\n\nThe only real difference between arrays and objects in the wire encoding\nis that arrays are homogenous, whereas objects are heterogenous with a\n",
                    "rendered": {
                      "text": "Arrays and objects are represented with a sequence of numbered slots;\nthe value packed into their tag word is the offset at which this\nsequence starts. The first slot is always the total number of slots, so\nall arrays and objects contain at least one item.\n\nThe only real difference between arrays and objects in the wire encoding\nis that arrays are homogenous, whereas objects are heterogenous with a\n",
                      "markdown": "`Arrays and objects are represented with a sequence of numbered slots;\nthe value packed into their tag word is the offset at which this\nsequence starts. The first slot is always the total number of slots, so\nall arrays and objects contain at least one item.\n\nThe only real difference between arrays and objects in the wire encoding\nis that arrays are homogenous, whereas objects are heterogenous with a\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-v3.5.scd"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 50,
                  "endLine": 36,
                  "endColumn": 54,
                  "snippet": {
                    "text": "of that indirect value is packed into the low 28 bits of the tag word.\n\nArrays and objects are represented with a sequence of numbered slots;\nthe value packed into their tag word is the offset at which this\nsequence starts. The first slot is always the total number of slots, so\nall arrays and objects contain at least one item.\n\n",
                    "rendered": {
                      "text": "of that indirect value is packed into the low 28 bits of the tag word.\n\nArrays and objects are represented with a sequence of numbered slots;\nthe value packed into their tag word is the offset at which this\nsequence starts. The first slot is always the total number of slots, so\nall arrays and objects contain at least one item.\n\n",
                      "markdown": "`of that indirect value is packed into the low 28 bits of the tag word.\n\nArrays and objects are represented with a sequence of numbered slots;\nthe value packed into their tag word is the offset at which this\nsequence starts. The first slot is always the total number of slots, so\nall arrays and objects contain at least one item.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-v3.5.scd"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 46,
                  "endLine": 97,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\nThe SIG block contains a signature of the ADB block. Unlike the v2\nformat, the key used for the signature is not explicitly specified, so\nverifiers must try all trusted keys until they find one. Also unlike the\nv2 format, the only supported hash algorithm is SHA512, and the\nsignature scheme is implied by the signing key in use rather than being\nderived from the signature block.\n",
                    "rendered": {
                      "text": "\nThe SIG block contains a signature of the ADB block. Unlike the v2\nformat, the key used for the signature is not explicitly specified, so\nverifiers must try all trusted keys until they find one. Also unlike the\nv2 format, the only supported hash algorithm is SHA512, and the\nsignature scheme is implied by the signing key in use rather than being\nderived from the signature block.\n",
                      "markdown": "`\nThe SIG block contains a signature of the ADB block. Unlike the v2\nformat, the key used for the signature is not explicitly specified, so\nverifiers must try all trusted keys until they find one. Also unlike the\nv2 format, the only supported hash algorithm is SHA512, and the\nsignature scheme is implied by the signing key in use rather than being\nderived from the signature block.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/tests/version.data"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 33,
                  "endLine": 4,
                  "snippet": {
                    "text": "2.34 > 0.1.0_alpha\n23_foo > 4_beta\n1.0 < 1.0bc\t\t# invalid. do string sort\n0.1.0_alpha = 0.1.0_alpha\n0.1.0_alpha < 0.1.3_alpha\n0.1.3_alpha > 0.1.0_alpha\n0.1.0_alpha2 > 0.1.0_alpha\n",
                    "rendered": {
                      "text": "2.34 > 0.1.0_alpha\n23_foo > 4_beta\n1.0 < 1.0bc\t\t# invalid. do string sort\n0.1.0_alpha = 0.1.0_alpha\n0.1.0_alpha < 0.1.3_alpha\n0.1.3_alpha > 0.1.0_alpha\n0.1.0_alpha2 > 0.1.0_alpha\n",
                      "markdown": "`2.34 > 0.1.0_alpha\n23_foo > 4_beta\n1.0 < 1.0bc\t\t# invalid. do string sort\n0.1.0_alpha = 0.1.0_alpha\n0.1.0_alpha < 0.1.3_alpha\n0.1.3_alpha > 0.1.0_alpha\n0.1.0_alpha2 > 0.1.0_alpha\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/tests/test-basic.sh"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 64,
                  "endLine": 13,
                  "endColumn": 71,
                  "snippet": {
                    "text": "}\n\nt_case \"version\" && {\n\tsed 's/[[:blank:]]*#.*//g' < $SRC/version.data | tr '\\n' '\\0' | xargs -0 $APK vertest\n}\n\nt_end\n",
                    "rendered": {
                      "text": "}\n\nt_case \"version\" && {\n\tsed 's/[[:blank:]]*#.*//g' < $SRC/version.data | tr '\\n' '\\0' | xargs -0 $APK vertest\n}\n\nt_end\n",
                      "markdown": "`}\n\nt_case \"version\" && {\n\tsed 's/[[:blank:]]*#.*//g' < $SRC/version.data | tr '\\n' '\\0' | xargs -0 $APK vertest\n}\n\nt_end\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/tests/test-basic.sh"
                },
                "region": {
                  "startLine": 13,
                  "endLine": 13,
                  "endColumn": 5,
                  "snippet": {
                    "text": "}\n\nt_case \"version\" && {\n\tsed 's/[[:blank:]]*#.*//g' < $SRC/version.data | tr '\\n' '\\0' | xargs -0 $APK vertest\n}\n\nt_end\n",
                    "rendered": {
                      "text": "}\n\nt_case \"version\" && {\n\tsed 's/[[:blank:]]*#.*//g' < $SRC/version.data | tr '\\n' '\\0' | xargs -0 $APK vertest\n}\n\nt_end\n",
                      "markdown": "`}\n\nt_case \"version\" && {\n\tsed 's/[[:blank:]]*#.*//g' < $SRC/version.data | tr '\\n' '\\0' | xargs -0 $APK vertest\n}\n\nt_end\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/test/repo1/test-b/APKBUILD"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 27,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nbuild() {\n\tcd \"$builddir\"\n\tcat > $pkgname <<-EOF\n\t\t#!/bin/sh\n\t\techo \"hello from $pkgname-$pkgver\"\n\tEOF\n",
                    "rendered": {
                      "text": "\nbuild() {\n\tcd \"$builddir\"\n\tcat > $pkgname <<-EOF\n\t\t#!/bin/sh\n\t\techo \"hello from $pkgname-$pkgver\"\n\tEOF\n",
                      "markdown": "`\nbuild() {\n\tcd \"$builddir\"\n\tcat > $pkgname <<-EOF\n\t\t#!/bin/sh\n\t\techo \"hello from $pkgname-$pkgver\"\n\tEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/test/repo1/test-a/APKBUILD"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 27,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nbuild() {\n\tcd \"$builddir\"\n\tcat > $pkgname <<-EOF\n\t\t#!/bin/sh\n\t\techo \"hello from $pkgname-$pkgver\"\n\tEOF\n",
                    "rendered": {
                      "text": "\nbuild() {\n\tcd \"$builddir\"\n\tcat > $pkgname <<-EOF\n\t\t#!/bin/sh\n\t\techo \"hello from $pkgname-$pkgver\"\n\tEOF\n",
                      "markdown": "`\nbuild() {\n\tcd \"$builddir\"\n\tcat > $pkgname <<-EOF\n\t\t#!/bin/sh\n\t\techo \"hello from $pkgname-$pkgver\"\n\tEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/test/repo1/test-c/APKBUILD"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 27,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nbuild() {\n\tcd \"$builddir\"\n\tcat > $pkgname <<-EOF\n\t\t#!/bin/sh\n\t\techo \"hello from $pkgname-$pkgver\"\n\tEOF\n",
                    "rendered": {
                      "text": "\nbuild() {\n\tcd \"$builddir\"\n\tcat > $pkgname <<-EOF\n\t\t#!/bin/sh\n\t\techo \"hello from $pkgname-$pkgver\"\n\tEOF\n",
                      "markdown": "`\nbuild() {\n\tcd \"$builddir\"\n\tcat > $pkgname <<-EOF\n\t\t#!/bin/sh\n\t\techo \"hello from $pkgname-$pkgver\"\n\tEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/test/repo1/test-d/APKBUILD"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 27,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nbuild() {\n\tcd \"$builddir\"\n\tcat > $pkgname <<-EOF\n\t\t#!/bin/sh\n\t\techo \"hello from $pkgname-$pkgver\"\n\tEOF\n",
                    "rendered": {
                      "text": "\nbuild() {\n\tcd \"$builddir\"\n\tcat > $pkgname <<-EOF\n\t\t#!/bin/sh\n\t\techo \"hello from $pkgname-$pkgver\"\n\tEOF\n",
                      "markdown": "`\nbuild() {\n\tcd \"$builddir\"\n\tcat > $pkgname <<-EOF\n\t\t#!/bin/sh\n\t\techo \"hello from $pkgname-$pkgver\"\n\tEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/test/repo2/test-b/APKBUILD"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 27,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nbuild() {\n\tcd \"$builddir\"\n\tcat > $pkgname <<-EOF\n\t\t#!/bin/sh\n\t\techo \"hello from $pkgname-$pkgver\"\n\tEOF\n",
                    "rendered": {
                      "text": "\nbuild() {\n\tcd \"$builddir\"\n\tcat > $pkgname <<-EOF\n\t\t#!/bin/sh\n\t\techo \"hello from $pkgname-$pkgver\"\n\tEOF\n",
                      "markdown": "`\nbuild() {\n\tcd \"$builddir\"\n\tcat > $pkgname <<-EOF\n\t\t#!/bin/sh\n\t\techo \"hello from $pkgname-$pkgver\"\n\tEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/test/repo2/test-a/APKBUILD"
                },
                "region": {
                  "startLine": 23,
                  "endLine": 23,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nbuild() {\n\tcd \"$builddir\"\n\tcat > $pkgname <<-EOF\n\t\t#!/bin/sh\n\t\techo \"hello from $pkgname-$pkgver\"\n\tEOF\n",
                    "rendered": {
                      "text": "\nbuild() {\n\tcd \"$builddir\"\n\tcat > $pkgname <<-EOF\n\t\t#!/bin/sh\n\t\techo \"hello from $pkgname-$pkgver\"\n\tEOF\n",
                      "markdown": "`\nbuild() {\n\tcd \"$builddir\"\n\tcat > $pkgname <<-EOF\n\t\t#!/bin/sh\n\t\techo \"hello from $pkgname-$pkgver\"\n\tEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/test/test5.sh"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 25,
                  "endLine": 4,
                  "snippet": {
                    "text": "#!/bin/sh -e\n\n# desc: test post-install script\n\n$APK add --root $ROOT --initdb -U --repository $PWD/repo1 \\\n\t--repository $SYSREPO test-d\n\n",
                    "rendered": {
                      "text": "#!/bin/sh -e\n\n# desc: test post-install script\n\n$APK add --root $ROOT --initdb -U --repository $PWD/repo1 \\\n\t--repository $SYSREPO test-d\n\n",
                      "markdown": "`#!/bin/sh -e\n\n# desc: test post-install script\n\n$APK add --root $ROOT --initdb -U --repository $PWD/repo1 \\\n\t--repository $SYSREPO test-d\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/test/test7.sh"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 9,
                  "endLine": 17,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\t# re-install so we run the trigger again\n\t$APK fix --root $ROOT --repository $SYSREPO --reinstall  busybox\n\n\t# verify wget symlink is there\n\ttest -L \"$ROOT\"/usr/bin/wget\ndone\n\n",
                    "rendered": {
                      "text": "\t# re-install so we run the trigger again\n\t$APK fix --root $ROOT --repository $SYSREPO --reinstall  busybox\n\n\t# verify wget symlink is there\n\ttest -L \"$ROOT\"/usr/bin/wget\ndone\n\n",
                      "markdown": "`\t# re-install so we run the trigger again\n\t$APK fix --root $ROOT --repository $SYSREPO --reinstall  busybox\n\n\t# verify wget symlink is there\n\ttest -L \"$ROOT\"/usr/bin/wget\ndone\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/test/test7.sh"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 57,
                  "endLine": 16,
                  "snippet": {
                    "text": "\trm -f \"$ROOT\"/usr/bin/wget\n\n\t# re-install so we run the trigger again\n\t$APK fix --root $ROOT --repository $SYSREPO --reinstall  busybox\n\n\t# verify wget symlink is there\n\ttest -L \"$ROOT\"/usr/bin/wget\ndone\n",
                    "rendered": {
                      "text": "\trm -f \"$ROOT\"/usr/bin/wget\n\n\t# re-install so we run the trigger again\n\t$APK fix --root $ROOT --repository $SYSREPO --reinstall  busybox\n\n\t# verify wget symlink is there\n\ttest -L \"$ROOT\"/usr/bin/wget\ndone\n",
                      "markdown": "`\trm -f \"$ROOT\"/usr/bin/wget\n\n\t# re-install so we run the trigger again\n\t$APK fix --root $ROOT --repository $SYSREPO --reinstall  busybox\n\n\t# verify wget symlink is there\n\ttest -L \"$ROOT\"/usr/bin/wget\ndone\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/test/test7.sh"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 9,
                  "endLine": 11,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\t--repository $SYSREPO busybox\n\nfor i in 0 1 2 3; do\n\t# delete wget symlink\n\trm -f \"$ROOT\"/usr/bin/wget\n\n\t# re-install so we run the trigger again\n",
                    "rendered": {
                      "text": "\t--repository $SYSREPO busybox\n\nfor i in 0 1 2 3; do\n\t# delete wget symlink\n\trm -f \"$ROOT\"/usr/bin/wget\n\n\t# re-install so we run the trigger again\n",
                      "markdown": "`\t--repository $SYSREPO busybox\n\nfor i in 0 1 2 3; do\n\t# delete wget symlink\n\trm -f \"$ROOT\"/usr/bin/wget\n\n\t# re-install so we run the trigger again\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/test/test7.sh"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 22,
                  "endLine": 9,
                  "snippet": {
                    "text": "# we had a bug that caused apk fix --reinstall to segfault every second time\n\n$APK add --root $ROOT --initdb -U --repository $PWD/repo1 \\\n\t--repository $SYSREPO busybox\n\nfor i in 0 1 2 3; do\n\t# delete wget symlink\n\trm -f \"$ROOT\"/usr/bin/wget\n",
                    "rendered": {
                      "text": "# we had a bug that caused apk fix --reinstall to segfault every second time\n\n$APK add --root $ROOT --initdb -U --repository $PWD/repo1 \\\n\t--repository $SYSREPO busybox\n\nfor i in 0 1 2 3; do\n\t# delete wget symlink\n\trm -f \"$ROOT\"/usr/bin/wget\n",
                      "markdown": "`# we had a bug that caused apk fix --reinstall to segfault every second time\n\n$APK add --root $ROOT --initdb -U --repository $PWD/repo1 \\\n\t--repository $SYSREPO busybox\n\nfor i in 0 1 2 3; do\n\t# delete wget symlink\n\trm -f \"$ROOT\"/usr/bin/wget\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/test/test7.sh"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 71,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# desc: test triggers in busybox package\n\n# we had a bug that caused apk fix --reinstall to segfault every second time\n\n$APK add --root $ROOT --initdb -U --repository $PWD/repo1 \\\n\t--repository $SYSREPO busybox\n\n",
                    "rendered": {
                      "text": "\n# desc: test triggers in busybox package\n\n# we had a bug that caused apk fix --reinstall to segfault every second time\n\n$APK add --root $ROOT --initdb -U --repository $PWD/repo1 \\\n\t--repository $SYSREPO busybox\n\n",
                      "markdown": "`\n# desc: test triggers in busybox package\n\n# we had a bug that caused apk fix --reinstall to segfault every second time\n\n$APK add --root $ROOT --initdb -U --repository $PWD/repo1 \\\n\t--repository $SYSREPO busybox\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/test/test7.sh"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 24,
                  "endLine": 3,
                  "endColumn": 33,
                  "snippet": {
                    "text": "#!/bin/sh -e\n\n# desc: test triggers in busybox package\n\n# we had a bug that caused apk fix --reinstall to segfault every second time\n\n",
                    "rendered": {
                      "text": "#!/bin/sh -e\n\n# desc: test triggers in busybox package\n\n# we had a bug that caused apk fix --reinstall to segfault every second time\n\n",
                      "markdown": "`#!/bin/sh -e\n\n# desc: test triggers in busybox package\n\n# we had a bug that caused apk fix --reinstall to segfault every second time\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-repositories.5.scd"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 65,
                  "endLine": 35,
                  "snippet": {
                    "text": "\n# UPDATING INDICIES\n\n*apk*(8) fetches and stores the index for each package repository at\n*/var/cache/apk*. To fetch fresh indicies for all configured repositories, use\n*apk-update*(8).\n",
                    "rendered": {
                      "text": "\n# UPDATING INDICIES\n\n*apk*(8) fetches and stores the index for each package repository at\n*/var/cache/apk*. To fetch fresh indicies for all configured repositories, use\n*apk-update*(8).\n",
                      "markdown": "`\n# UPDATING INDICIES\n\n*apk*(8) fetches and stores the index for each package repository at\n*/var/cache/apk*. To fetch fresh indicies for all configured repositories, use\n*apk-update*(8).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-repositories.5.scd"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 21,
                  "endLine": 23,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\nEach repository must store an index at *$repository/$arch/APKINDEX.tar.gz*. See\n*apk-index*(8) for information about generating this file. The packages\nthemselves are stored at *$repository/$arch/$pkgname-$pkgver-r$pkgrel.apk*.\n\n*apk*(8) verifies that each of these files has a valid cryptographic signature\nunless explicitly told not to via the *--allow-untrusted* flag. See\n",
                    "rendered": {
                      "text": "\nEach repository must store an index at *$repository/$arch/APKINDEX.tar.gz*. See\n*apk-index*(8) for information about generating this file. The packages\nthemselves are stored at *$repository/$arch/$pkgname-$pkgver-r$pkgrel.apk*.\n\n*apk*(8) verifies that each of these files has a valid cryptographic signature\nunless explicitly told not to via the *--allow-untrusted* flag. See\n",
                      "markdown": "`\nEach repository must store an index at *$repository/$arch/APKINDEX.tar.gz*. See\n*apk-index*(8) for information about generating this file. The packages\nthemselves are stored at *$repository/$arch/$pkgname-$pkgver-r$pkgrel.apk*.\n\n*apk*(8) verifies that each of these files has a valid cryptographic signature\nunless explicitly told not to via the *--allow-untrusted* flag. See\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-repositories.5.scd"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 35,
                  "endLine": 21,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n# REPOSITORY LAYOUT\n\nEach repository must store an index at *$repository/$arch/APKINDEX.tar.gz*. See\n*apk-index*(8) for information about generating this file. The packages\nthemselves are stored at *$repository/$arch/$pkgname-$pkgver-r$pkgrel.apk*.\n\n",
                    "rendered": {
                      "text": "\n# REPOSITORY LAYOUT\n\nEach repository must store an index at *$repository/$arch/APKINDEX.tar.gz*. See\n*apk-index*(8) for information about generating this file. The packages\nthemselves are stored at *$repository/$arch/$pkgname-$pkgver-r$pkgrel.apk*.\n\n",
                      "markdown": "`\n# REPOSITORY LAYOUT\n\nEach repository must store an index at *$repository/$arch/APKINDEX.tar.gz*. See\n*apk-index*(8) for information about generating this file. The packages\nthemselves are stored at *$repository/$arch/$pkgname-$pkgver-r$pkgrel.apk*.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-update.8.scd"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 12,
                  "endLine": 5,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n# NAME\n\napk update - update repository indexes\n\n# SYNOPSIS\n\n",
                    "rendered": {
                      "text": "\n# NAME\n\napk update - update repository indexes\n\n# SYNOPSIS\n\n",
                      "markdown": "`\n# NAME\n\napk update - update repository indexes\n\n# SYNOPSIS\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-update.8.scd"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 3,
                  "endLine": 5,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n# NAME\n\napk update - update repository indexes\n\n# SYNOPSIS\n\n",
                    "rendered": {
                      "text": "\n# NAME\n\napk update - update repository indexes\n\n# SYNOPSIS\n\n",
                      "markdown": "`\n# NAME\n\napk update - update repository indexes\n\n# SYNOPSIS\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-update.8.scd"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 63,
                  "endLine": 15,
                  "endColumn": 69,
                  "snippet": {
                    "text": "\n*apk update* forces updating of the indexes from all configured package\nrepositories. This command is not needed in normal operation as all applets\nrequiring indexes will automatically refresh them after caching time expires.\n\nSee *apk-repositories*(5) for more information on configuring package\nrepositories.\n",
                    "rendered": {
                      "text": "\n*apk update* forces updating of the indexes from all configured package\nrepositories. This command is not needed in normal operation as all applets\nrequiring indexes will automatically refresh them after caching time expires.\n\nSee *apk-repositories*(5) for more information on configuring package\nrepositories.\n",
                      "markdown": "`\n*apk update* forces updating of the indexes from all configured package\nrepositories. This command is not needed in normal operation as all applets\nrequiring indexes will automatically refresh them after caching time expires.\n\nSee *apk-repositories*(5) for more information on configuring package\nrepositories.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-adbdump.8.scd"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 50,
                  "endLine": 27,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\n# BUGS\n\nYAML compliant quoting is not impemented correctly at this time.\n\n# SEE ALSO\n\n",
                    "rendered": {
                      "text": "\n# BUGS\n\nYAML compliant quoting is not impemented correctly at this time.\n\n# SEE ALSO\n\n",
                      "markdown": "`\n# BUGS\n\nYAML compliant quoting is not impemented correctly at this time.\n\n# SEE ALSO\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-mkndx.8.scd"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 55,
                  "endLine": 20,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\n*-d, --description* _TEXT_\n\tAdd a description to the index. Upstream, this is used to add version\n\tinformation based on the git commit SHA of aports HEAD at the time of\n\tindex generation.\n\n*--hash* _HASH_\n",
                    "rendered": {
                      "text": "\n*-d, --description* _TEXT_\n\tAdd a description to the index. Upstream, this is used to add version\n\tinformation based on the git commit SHA of aports HEAD at the time of\n\tindex generation.\n\n*--hash* _HASH_\n",
                      "markdown": "`\n*-d, --description* _TEXT_\n\tAdd a description to the index. Upstream, this is used to add version\n\tinformation based on the git commit SHA of aports HEAD at the time of\n\tindex generation.\n\n*--hash* _HASH_\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-mkndx.8.scd"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 62,
                  "endLine": 20,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\n*-d, --description* _TEXT_\n\tAdd a description to the index. Upstream, this is used to add version\n\tinformation based on the git commit SHA of aports HEAD at the time of\n\tindex generation.\n\n*--hash* _HASH_\n",
                    "rendered": {
                      "text": "\n*-d, --description* _TEXT_\n\tAdd a description to the index. Upstream, this is used to add version\n\tinformation based on the git commit SHA of aports HEAD at the time of\n\tindex generation.\n\n*--hash* _HASH_\n",
                      "markdown": "`\n*-d, --description* _TEXT_\n\tAdd a description to the index. Upstream, this is used to add version\n\tinformation based on the git commit SHA of aports HEAD at the time of\n\tindex generation.\n\n*--hash* _HASH_\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-mkndx.8.scd"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 50,
                  "endLine": 20,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\n*-d, --description* _TEXT_\n\tAdd a description to the index. Upstream, this is used to add version\n\tinformation based on the git commit SHA of aports HEAD at the time of\n\tindex generation.\n\n*--hash* _HASH_\n",
                    "rendered": {
                      "text": "\n*-d, --description* _TEXT_\n\tAdd a description to the index. Upstream, this is used to add version\n\tinformation based on the git commit SHA of aports HEAD at the time of\n\tindex generation.\n\n*--hash* _HASH_\n",
                      "markdown": "`\n*-d, --description* _TEXT_\n\tAdd a description to the index. Upstream, this is used to add version\n\tinformation based on the git commit SHA of aports HEAD at the time of\n\tindex generation.\n\n*--hash* _HASH_\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-mkndx.8.scd"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 25,
                  "endLine": 20,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n*-d, --description* _TEXT_\n\tAdd a description to the index. Upstream, this is used to add version\n\tinformation based on the git commit SHA of aports HEAD at the time of\n\tindex generation.\n\n*--hash* _HASH_\n",
                    "rendered": {
                      "text": "\n*-d, --description* _TEXT_\n\tAdd a description to the index. Upstream, this is used to add version\n\tinformation based on the git commit SHA of aports HEAD at the time of\n\tindex generation.\n\n*--hash* _HASH_\n",
                      "markdown": "`\n*-d, --description* _TEXT_\n\tAdd a description to the index. Upstream, this is used to add version\n\tinformation based on the git commit SHA of aports HEAD at the time of\n\tindex generation.\n\n*--hash* _HASH_\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk.8.scd"
                },
                "region": {
                  "startLine": 329,
                  "startColumn": 14,
                  "endLine": 329,
                  "endColumn": 22,
                  "snippet": {
                    "text": "*NO_PROXY*, *no_proxy*\n\tComma-separated list of domain extensions or CIDR notation IP addresses\n\tto which a proxy should _not_ be used for.  This is used explicitly to\n\ttest the URL hostname portion only. That is, specifying an IP address\n\tor CIDR block will not match a DNS name that resolves to the IP address.\n\n*SSL_CLIENT_CERT_FILE*++\n",
                    "rendered": {
                      "text": "*NO_PROXY*, *no_proxy*\n\tComma-separated list of domain extensions or CIDR notation IP addresses\n\tto which a proxy should _not_ be used for.  This is used explicitly to\n\ttest the URL hostname portion only. That is, specifying an IP address\n\tor CIDR block will not match a DNS name that resolves to the IP address.\n\n*SSL_CLIENT_CERT_FILE*++\n",
                      "markdown": "`*NO_PROXY*, *no_proxy*\n\tComma-separated list of domain extensions or CIDR notation IP addresses\n\tto which a proxy should _not_ be used for.  This is used explicitly to\n\ttest the URL hostname portion only. That is, specifying an IP address\n\tor CIDR block will not match a DNS name that resolves to the IP address.\n\n*SSL_CLIENT_CERT_FILE*++\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk.8.scd"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 19,
                  "endLine": 112,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tby creating /etc/apk/interactive as an empty file.\n\n*-p, --root* _ROOT_\n\tManage file system at _ROOT_.\n\n*-q, --quiet*\n\tPrint less information.\n",
                    "rendered": {
                      "text": "\tby creating /etc/apk/interactive as an empty file.\n\n*-p, --root* _ROOT_\n\tManage file system at _ROOT_.\n\n*-q, --quiet*\n\tPrint less information.\n",
                      "markdown": "`\tby creating /etc/apk/interactive as an empty file.\n\n*-p, --root* _ROOT_\n\tManage file system at _ROOT_.\n\n*-q, --quiet*\n\tPrint less information.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk.8.scd"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 2,
                  "endLine": 41,
                  "endColumn": 10,
                  "snippet": {
                    "text": "|[ *apk-fix*(8)\n:< Fix, reinstall or upgrade packages without modifying _world_\n|  *apk-update*(8)\n:  Update repository indexes\n|  *apk-upgrade*(8)\n:  Install upgrades available from repositories\n|  *apk-cache*(8)\n",
                    "rendered": {
                      "text": "|[ *apk-fix*(8)\n:< Fix, reinstall or upgrade packages without modifying _world_\n|  *apk-update*(8)\n:  Update repository indexes\n|  *apk-upgrade*(8)\n:  Install upgrades available from repositories\n|  *apk-cache*(8)\n",
                      "markdown": "`|[ *apk-fix*(8)\n:< Fix, reinstall or upgrade packages without modifying _world_\n|  *apk-update*(8)\n:  Update repository indexes\n|  *apk-upgrade*(8)\n:  Install upgrades available from repositories\n|  *apk-cache*(8)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk.8.scd"
                },
                "region": {
                  "startLine": 377,
                  "endLine": 377,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tfor details.\n\n*/etc/apk/world*\n\tTop level requirements and constraints on what should be installed.\n\tSee *apk-world*(5) for details.\n\n## Configuration files for built-in libfetch\n",
                    "rendered": {
                      "text": "\tfor details.\n\n*/etc/apk/world*\n\tTop level requirements and constraints on what should be installed.\n\tSee *apk-world*(5) for details.\n\n## Configuration files for built-in libfetch\n",
                      "markdown": "`\tfor details.\n\n*/etc/apk/world*\n\tTop level requirements and constraints on what should be installed.\n\tSee *apk-world*(5) for details.\n\n## Configuration files for built-in libfetch\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk.8.scd"
                },
                "region": {
                  "startLine": 355,
                  "startColumn": 27,
                  "endLine": 355,
                  "endColumn": 35,
                  "snippet": {
                    "text": "*/etc/apk/commit_hooks.d/\\*.pre-commit*++\n*/etc/apk/commit_hooks.d/\\*.post-commit*\n\tHook scripts which are executed before or after changes to database are\n\tcommitted. If a pre-commit script returns failure, the commit is aborted.\n\n\tIf *--no-scripts* or *--no-commit-hooks* option is specified, these\n\thook scripts are not executed.\n",
                    "rendered": {
                      "text": "*/etc/apk/commit_hooks.d/\\*.pre-commit*++\n*/etc/apk/commit_hooks.d/\\*.post-commit*\n\tHook scripts which are executed before or after changes to database are\n\tcommitted. If a pre-commit script returns failure, the commit is aborted.\n\n\tIf *--no-scripts* or *--no-commit-hooks* option is specified, these\n\thook scripts are not executed.\n",
                      "markdown": "`*/etc/apk/commit_hooks.d/\\*.pre-commit*++\n*/etc/apk/commit_hooks.d/\\*.post-commit*\n\tHook scripts which are executed before or after changes to database are\n\tcommitted. If a pre-commit script returns failure, the commit is aborted.\n\n\tIf *--no-scripts* or *--no-commit-hooks* option is specified, these\n\thook scripts are not executed.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk.8.scd"
                },
                "region": {
                  "startLine": 330,
                  "startColumn": 61,
                  "endLine": 330,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\tComma-separated list of domain extensions or CIDR notation IP addresses\n\tto which a proxy should _not_ be used for.  This is used explicitly to\n\ttest the URL hostname portion only. That is, specifying an IP address\n\tor CIDR block will not match a DNS name that resolves to the IP address.\n\n*SSL_CLIENT_CERT_FILE*++\n*SSL_CLIENT_KEY_FILE*\n",
                    "rendered": {
                      "text": "\tComma-separated list of domain extensions or CIDR notation IP addresses\n\tto which a proxy should _not_ be used for.  This is used explicitly to\n\ttest the URL hostname portion only. That is, specifying an IP address\n\tor CIDR block will not match a DNS name that resolves to the IP address.\n\n*SSL_CLIENT_CERT_FILE*++\n*SSL_CLIENT_KEY_FILE*\n",
                      "markdown": "`\tComma-separated list of domain extensions or CIDR notation IP addresses\n\tto which a proxy should _not_ be used for.  This is used explicitly to\n\ttest the URL hostname portion only. That is, specifying an IP address\n\tor CIDR block will not match a DNS name that resolves to the IP address.\n\n*SSL_CLIENT_CERT_FILE*++\n*SSL_CLIENT_KEY_FILE*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk.8.scd"
                },
                "region": {
                  "startLine": 329,
                  "startColumn": 59,
                  "endLine": 329,
                  "endColumn": 63,
                  "snippet": {
                    "text": "*NO_PROXY*, *no_proxy*\n\tComma-separated list of domain extensions or CIDR notation IP addresses\n\tto which a proxy should _not_ be used for.  This is used explicitly to\n\ttest the URL hostname portion only. That is, specifying an IP address\n\tor CIDR block will not match a DNS name that resolves to the IP address.\n\n*SSL_CLIENT_CERT_FILE*++\n",
                    "rendered": {
                      "text": "*NO_PROXY*, *no_proxy*\n\tComma-separated list of domain extensions or CIDR notation IP addresses\n\tto which a proxy should _not_ be used for.  This is used explicitly to\n\ttest the URL hostname portion only. That is, specifying an IP address\n\tor CIDR block will not match a DNS name that resolves to the IP address.\n\n*SSL_CLIENT_CERT_FILE*++\n",
                      "markdown": "`*NO_PROXY*, *no_proxy*\n\tComma-separated list of domain extensions or CIDR notation IP addresses\n\tto which a proxy should _not_ be used for.  This is used explicitly to\n\ttest the URL hostname portion only. That is, specifying an IP address\n\tor CIDR block will not match a DNS name that resolves to the IP address.\n\n*SSL_CLIENT_CERT_FILE*++\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk.8.scd"
                },
                "region": {
                  "startLine": 327,
                  "startColumn": 59,
                  "endLine": 327,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\tis established through a configured HTTP proxy.\n\n*NO_PROXY*, *no_proxy*\n\tComma-separated list of domain extensions or CIDR notation IP addresses\n\tto which a proxy should _not_ be used for.  This is used explicitly to\n\ttest the URL hostname portion only. That is, specifying an IP address\n\tor CIDR block will not match a DNS name that resolves to the IP address.\n",
                    "rendered": {
                      "text": "\tis established through a configured HTTP proxy.\n\n*NO_PROXY*, *no_proxy*\n\tComma-separated list of domain extensions or CIDR notation IP addresses\n\tto which a proxy should _not_ be used for.  This is used explicitly to\n\ttest the URL hostname portion only. That is, specifying an IP address\n\tor CIDR block will not match a DNS name that resolves to the IP address.\n",
                      "markdown": "`\tis established through a configured HTTP proxy.\n\n*NO_PROXY*, *no_proxy*\n\tComma-separated list of domain extensions or CIDR notation IP addresses\n\tto which a proxy should _not_ be used for.  This is used explicitly to\n\ttest the URL hostname portion only. That is, specifying an IP address\n\tor CIDR block will not match a DNS name that resolves to the IP address.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk.8.scd"
                },
                "region": {
                  "startLine": 305,
                  "startColumn": 8,
                  "endLine": 305,
                  "endColumn": 12,
                  "snippet": {
                    "text": "## Variables to configure built-in libfetch\n\n*FETCH_BIND_ADDRESS*\n\tA local IP address to which libfetch will bind all sockets it creates.\n\tCan be useful for source routing.\n\n*NETRC*\n",
                    "rendered": {
                      "text": "## Variables to configure built-in libfetch\n\n*FETCH_BIND_ADDRESS*\n\tA local IP address to which libfetch will bind all sockets it creates.\n\tCan be useful for source routing.\n\n*NETRC*\n",
                      "markdown": "`## Variables to configure built-in libfetch\n\n*FETCH_BIND_ADDRESS*\n\tA local IP address to which libfetch will bind all sockets it creates.\n\tCan be useful for source routing.\n\n*NETRC*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk.8.scd"
                },
                "region": {
                  "startLine": 233,
                  "startColumn": 9,
                  "endLine": 233,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\tThe default is 60 seconds.\n\n*--wait* _TIME_\n\tWait for TIME seconds to get an exclusive repository lock before\n\tfailing.\n\n# COMMIT OPTIONS\n",
                    "rendered": {
                      "text": "\tThe default is 60 seconds.\n\n*--wait* _TIME_\n\tWait for TIME seconds to get an exclusive repository lock before\n\tfailing.\n\n# COMMIT OPTIONS\n",
                      "markdown": "`\tThe default is 60 seconds.\n\n*--wait* _TIME_\n\tWait for TIME seconds to get an exclusive repository lock before\n\tfailing.\n\n# COMMIT OPTIONS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk.8.scd"
                },
                "region": {
                  "startLine": 229,
                  "startColumn": 54,
                  "endLine": 229,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\tapk 2.12.0_rc2.\n\n*--timeout* _TIME_\n\tTimeout network connections if no progress is made in TIME seconds.\n\tThe default is 60 seconds.\n\n*--wait* _TIME_\n",
                    "rendered": {
                      "text": "\tapk 2.12.0_rc2.\n\n*--timeout* _TIME_\n\tTimeout network connections if no progress is made in TIME seconds.\n\tThe default is 60 seconds.\n\n*--wait* _TIME_\n",
                      "markdown": "`\tapk 2.12.0_rc2.\n\n*--timeout* _TIME_\n\tTimeout network connections if no progress is made in TIME seconds.\n\tThe default is 60 seconds.\n\n*--wait* _TIME_\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk.8.scd"
                },
                "region": {
                  "startLine": 229,
                  "endLine": 229,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tapk 2.12.0_rc2.\n\n*--timeout* _TIME_\n\tTimeout network connections if no progress is made in TIME seconds.\n\tThe default is 60 seconds.\n\n*--wait* _TIME_\n",
                    "rendered": {
                      "text": "\tapk 2.12.0_rc2.\n\n*--timeout* _TIME_\n\tTimeout network connections if no progress is made in TIME seconds.\n\tThe default is 60 seconds.\n\n*--wait* _TIME_\n",
                      "markdown": "`\tapk 2.12.0_rc2.\n\n*--timeout* _TIME_\n\tTimeout network connections if no progress is made in TIME seconds.\n\tThe default is 60 seconds.\n\n*--wait* _TIME_\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk.8.scd"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 58,
                  "endLine": 13,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\n# DESCRIPTION\n\n*apk* manages packages installed on the system. The set of top level constraints\non system packages is called the _world_ (see *apk-world*(5)).\n\n*apk* supports various sub-commands to query and manipulate _world_ and package\n",
                    "rendered": {
                      "text": "\n# DESCRIPTION\n\n*apk* manages packages installed on the system. The set of top level constraints\non system packages is called the _world_ (see *apk-world*(5)).\n\n*apk* supports various sub-commands to query and manipulate _world_ and package\n",
                      "markdown": "`\n# DESCRIPTION\n\n*apk* manages packages installed on the system. The set of top level constraints\non system packages is called the _world_ (see *apk-world*(5)).\n\n*apk* supports various sub-commands to query and manipulate _world_ and package\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-mkpkg.8.scd"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 19,
                  "endLine": 43,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n*-t, --trigger* _TRIGGER_\n\tAppend _TRIGGER_ path specification to list triggers which affect\n\twhen the *trigger* script is executed.\n",
                    "rendered": {
                      "text": "\n*-t, --trigger* _TRIGGER_\n\tAppend _TRIGGER_ path specification to list triggers which affect\n\twhen the *trigger* script is executed.\n",
                      "markdown": "`\n*-t, --trigger* _TRIGGER_\n\tAppend _TRIGGER_ path specification to list triggers which affect\n\twhen the *trigger* script is executed.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-search.8.scd"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 60,
                  "endLine": 13,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\n# DESCRIPTION\n\n*apk search* searches all repositories for packages matching at least one\npattern. If no pattern is given, it lists all packages in the configured\nrepositories (see *apk-repositories*(5)). A pattern matches if it is a\ncase-insensitive substring of the package name.\n",
                    "rendered": {
                      "text": "\n# DESCRIPTION\n\n*apk search* searches all repositories for packages matching at least one\npattern. If no pattern is given, it lists all packages in the configured\nrepositories (see *apk-repositories*(5)). A pattern matches if it is a\ncase-insensitive substring of the package name.\n",
                      "markdown": "`\n# DESCRIPTION\n\n*apk search* searches all repositories for packages matching at least one\npattern. If no pattern is given, it lists all packages in the configured\nrepositories (see *apk-repositories*(5)). A pattern matches if it is a\ncase-insensitive substring of the package name.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-world.5.scd"
                },
                "region": {
                  "startLine": 8,
                  "endLine": 9,
                  "endColumn": 3,
                  "snippet": {
                    "text": "*/etc/apk/world* - list of constraints for package selection\n\n# DESCRIPTION\n\nAt /etc/apk/world, apk maintains the _world_, that is, a list of constraints\nthe package selection needs to fulfill.\n\nIf you edit this file manually, you should run *apk-fix*(8) to apply the\n",
                    "rendered": {
                      "text": "*/etc/apk/world* - list of constraints for package selection\n\n# DESCRIPTION\n\nAt /etc/apk/world, apk maintains the _world_, that is, a list of constraints\nthe package selection needs to fulfill.\n\nIf you edit this file manually, you should run *apk-fix*(8) to apply the\n",
                      "markdown": "`*/etc/apk/world* - list of constraints for package selection\n\n# DESCRIPTION\n\nAt /etc/apk/world, apk maintains the _world_, that is, a list of constraints\nthe package selection needs to fulfill.\n\nIf you edit this file manually, you should run *apk-fix*(8) to apply the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-world.5.scd"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 10,
                  "endLine": 68,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\tInstall a busybox version greater than or prefix match of 1.6.\n\n*busybox<~1.6*\n\tInstall a busybox version less than or prefix match of 1.6.\n",
                    "rendered": {
                      "text": "\tInstall a busybox version greater than or prefix match of 1.6.\n\n*busybox<~1.6*\n\tInstall a busybox version less than or prefix match of 1.6.\n",
                      "markdown": "`\tInstall a busybox version greater than or prefix match of 1.6.\n\n*busybox<~1.6*\n\tInstall a busybox version less than or prefix match of 1.6.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-world.5.scd"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 10,
                  "endLine": 65,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t1.6, 1.6.0_pre1, 1.6.0, 1.6.5, 1.6.9_p1.\n\n*busybox>~1.6*\n\tInstall a busybox version greater than or prefix match of 1.6.\n\n*busybox<~1.6*\n\tInstall a busybox version less than or prefix match of 1.6.\n",
                    "rendered": {
                      "text": "\t1.6, 1.6.0_pre1, 1.6.0, 1.6.5, 1.6.9_p1.\n\n*busybox>~1.6*\n\tInstall a busybox version greater than or prefix match of 1.6.\n\n*busybox<~1.6*\n\tInstall a busybox version less than or prefix match of 1.6.\n",
                      "markdown": "`\t1.6, 1.6.0_pre1, 1.6.0, 1.6.5, 1.6.9_p1.\n\n*busybox>~1.6*\n\tInstall a busybox version greater than or prefix match of 1.6.\n\n*busybox<~1.6*\n\tInstall a busybox version less than or prefix match of 1.6.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-world.5.scd"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 12,
                  "endLine": 61,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\tInstall a busybox version less than 1.6.1.\n\n*busybox~1.6*\n\tInstall any busybox version starting with 1.6. Examples of match:\n\t1.6, 1.6.0_pre1, 1.6.0, 1.6.5, 1.6.9_p1.\n\n*busybox>~1.6*\n",
                    "rendered": {
                      "text": "\tInstall a busybox version less than 1.6.1.\n\n*busybox~1.6*\n\tInstall any busybox version starting with 1.6. Examples of match:\n\t1.6, 1.6.0_pre1, 1.6.0, 1.6.5, 1.6.9_p1.\n\n*busybox>~1.6*\n",
                      "markdown": "`\tInstall a busybox version less than 1.6.1.\n\n*busybox~1.6*\n\tInstall any busybox version starting with 1.6. Examples of match:\n\t1.6, 1.6.0_pre1, 1.6.0, 1.6.5, 1.6.9_p1.\n\n*busybox>~1.6*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-world.5.scd"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 10,
                  "endLine": 58,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\tInstall a busybox version greater than or equal to 1.6.1.\n\n*busybox<1.6.1*\n\tInstall a busybox version less than 1.6.1.\n\n*busybox~1.6*\n\tInstall any busybox version starting with 1.6. Examples of match:\n",
                    "rendered": {
                      "text": "\tInstall a busybox version greater than or equal to 1.6.1.\n\n*busybox<1.6.1*\n\tInstall a busybox version less than 1.6.1.\n\n*busybox~1.6*\n\tInstall any busybox version starting with 1.6. Examples of match:\n",
                      "markdown": "`\tInstall a busybox version greater than or equal to 1.6.1.\n\n*busybox<1.6.1*\n\tInstall a busybox version less than 1.6.1.\n\n*busybox~1.6*\n\tInstall any busybox version starting with 1.6. Examples of match:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-world.5.scd"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 10,
                  "endLine": 55,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\tInstall a busybox version greater than 1.6.1.\n\n*busybox>=1.6.1*\n\tInstall a busybox version greater than or equal to 1.6.1.\n\n*busybox<1.6.1*\n\tInstall a busybox version less than 1.6.1.\n",
                    "rendered": {
                      "text": "\tInstall a busybox version greater than 1.6.1.\n\n*busybox>=1.6.1*\n\tInstall a busybox version greater than or equal to 1.6.1.\n\n*busybox<1.6.1*\n\tInstall a busybox version less than 1.6.1.\n",
                      "markdown": "`\tInstall a busybox version greater than 1.6.1.\n\n*busybox>=1.6.1*\n\tInstall a busybox version greater than or equal to 1.6.1.\n\n*busybox<1.6.1*\n\tInstall a busybox version less than 1.6.1.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-world.5.scd"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 10,
                  "endLine": 52,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\tInstall busybox version 1.6.1.\n\n*busybox>1.6.1*\n\tInstall a busybox version greater than 1.6.1.\n\n*busybox>=1.6.1*\n\tInstall a busybox version greater than or equal to 1.6.1.\n",
                    "rendered": {
                      "text": "\tInstall busybox version 1.6.1.\n\n*busybox>1.6.1*\n\tInstall a busybox version greater than 1.6.1.\n\n*busybox>=1.6.1*\n\tInstall a busybox version greater than or equal to 1.6.1.\n",
                      "markdown": "`\tInstall busybox version 1.6.1.\n\n*busybox>1.6.1*\n\tInstall a busybox version greater than 1.6.1.\n\n*busybox>=1.6.1*\n\tInstall a busybox version greater than or equal to 1.6.1.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-world.5.scd"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 8,
                  "endLine": 49,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\tversion from an untagged repository is a better fit it will be used.\n\n*busybox=1.6.1*\n\tInstall busybox version 1.6.1.\n\n*busybox>1.6.1*\n\tInstall a busybox version greater than 1.6.1.\n",
                    "rendered": {
                      "text": "\tversion from an untagged repository is a better fit it will be used.\n\n*busybox=1.6.1*\n\tInstall busybox version 1.6.1.\n\n*busybox>1.6.1*\n\tInstall a busybox version greater than 1.6.1.\n",
                      "markdown": "`\tversion from an untagged repository is a better fit it will be used.\n\n*busybox=1.6.1*\n\tInstall busybox version 1.6.1.\n\n*busybox>1.6.1*\n\tInstall a busybox version greater than 1.6.1.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-world.5.scd"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 23,
                  "endLine": 44,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\tavailable.\n\n*busybox@edge*\n\tAllows installation of busybox and it's dependencies from a repository\n\ttagged with \"edge\". Tagged repositories will not be prioritized. If a\n\tversion from an untagged repository is a better fit it will be used.\n\n",
                    "rendered": {
                      "text": "\tavailable.\n\n*busybox@edge*\n\tAllows installation of busybox and it's dependencies from a repository\n\ttagged with \"edge\". Tagged repositories will not be prioritized. If a\n\tversion from an untagged repository is a better fit it will be used.\n\n",
                      "markdown": "`\tavailable.\n\n*busybox@edge*\n\tAllows installation of busybox and it's dependencies from a repository\n\ttagged with \"edge\". Tagged repositories will not be prioritized. If a\n\tversion from an untagged repository is a better fit it will be used.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-world.5.scd"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 9,
                  "endLine": 40,
                  "endColumn": 18,
                  "snippet": {
                    "text": "The *~* operator constrains the package to the prefix match of the version number.\n\n*busybox*\n\tInstalls busybox from the untagged repository from which it is\n\tavailable.\n\n*busybox@edge*\n",
                    "rendered": {
                      "text": "The *~* operator constrains the package to the prefix match of the version number.\n\n*busybox*\n\tInstalls busybox from the untagged repository from which it is\n\tavailable.\n\n*busybox@edge*\n",
                      "markdown": "`The *~* operator constrains the package to the prefix match of the version number.\n\n*busybox*\n\tInstalls busybox from the untagged repository from which it is\n\tavailable.\n\n*busybox@edge*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/test/version.data"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 33,
                  "endLine": 4,
                  "snippet": {
                    "text": "2.34 > 0.1.0_alpha\n23_foo > 4_beta\n1.0 < 1.0bc\t\t# invalid. do string sort\n0.1.0_alpha = 0.1.0_alpha\n0.1.0_alpha < 0.1.3_alpha\n0.1.3_alpha > 0.1.0_alpha\n0.1.0_alpha2 > 0.1.0_alpha\n",
                    "rendered": {
                      "text": "2.34 > 0.1.0_alpha\n23_foo > 4_beta\n1.0 < 1.0bc\t\t# invalid. do string sort\n0.1.0_alpha = 0.1.0_alpha\n0.1.0_alpha < 0.1.3_alpha\n0.1.3_alpha > 0.1.0_alpha\n0.1.0_alpha2 > 0.1.0_alpha\n",
                      "markdown": "`2.34 > 0.1.0_alpha\n23_foo > 4_beta\n1.0 < 1.0bc\t\t# invalid. do string sort\n0.1.0_alpha = 0.1.0_alpha\n0.1.0_alpha < 0.1.3_alpha\n0.1.3_alpha > 0.1.0_alpha\n0.1.0_alpha2 > 0.1.0_alpha\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/test/solver.sh"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 28,
                  "endLine": 18,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\tif ! get_block EXPECT < $test | cmp .$test.got > /dev/null 2>&1; then\n\t\tfail=$((fail+1))\n\t\techo \"FAIL: $test\"\n\t\tget_block EXPECT < $test | diff -ru - .$test.got\n\telse\n\t\tpass=$((pass+1))\n\tfi\n",
                    "rendered": {
                      "text": "\tif ! get_block EXPECT < $test | cmp .$test.got > /dev/null 2>&1; then\n\t\tfail=$((fail+1))\n\t\techo \"FAIL: $test\"\n\t\tget_block EXPECT < $test | diff -ru - .$test.got\n\telse\n\t\tpass=$((pass+1))\n\tfi\n",
                      "markdown": "`\tif ! get_block EXPECT < $test | cmp .$test.got > /dev/null 2>&1; then\n\t\tfail=$((fail+1))\n\t\techo \"FAIL: $test\"\n\t\tget_block EXPECT < $test | diff -ru - .$test.got\n\telse\n\t\tpass=$((pass+1))\n\tfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/test/solver.sh"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 11,
                  "endLine": 18,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\tif ! get_block EXPECT < $test | cmp .$test.got > /dev/null 2>&1; then\n\t\tfail=$((fail+1))\n\t\techo \"FAIL: $test\"\n\t\tget_block EXPECT < $test | diff -ru - .$test.got\n\telse\n\t\tpass=$((pass+1))\n\tfi\n",
                    "rendered": {
                      "text": "\tif ! get_block EXPECT < $test | cmp .$test.got > /dev/null 2>&1; then\n\t\tfail=$((fail+1))\n\t\techo \"FAIL: $test\"\n\t\tget_block EXPECT < $test | diff -ru - .$test.got\n\telse\n\t\tpass=$((pass+1))\n\tfi\n",
                      "markdown": "`\tif ! get_block EXPECT < $test | cmp .$test.got > /dev/null 2>&1; then\n\t\tfail=$((fail+1))\n\t\techo \"FAIL: $test\"\n\t\tget_block EXPECT < $test | diff -ru - .$test.got\n\telse\n\t\tpass=$((pass+1))\n\tfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/test/solver.sh"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 15,
                  "endLine": 15,
                  "endColumn": 23,
                  "snippet": {
                    "text": "for test in ${TEST_TO_RUN:-*.test}; do\n\tget_block ARGS < $test | xargs $APK_TEST > .$test.got 2>&1\n\n\tif ! get_block EXPECT < $test | cmp .$test.got > /dev/null 2>&1; then\n\t\tfail=$((fail+1))\n\t\techo \"FAIL: $test\"\n\t\tget_block EXPECT < $test | diff -ru - .$test.got\n",
                    "rendered": {
                      "text": "for test in ${TEST_TO_RUN:-*.test}; do\n\tget_block ARGS < $test | xargs $APK_TEST > .$test.got 2>&1\n\n\tif ! get_block EXPECT < $test | cmp .$test.got > /dev/null 2>&1; then\n\t\tfail=$((fail+1))\n\t\techo \"FAIL: $test\"\n\t\tget_block EXPECT < $test | diff -ru - .$test.got\n",
                      "markdown": "`for test in ${TEST_TO_RUN:-*.test}; do\n\tget_block ARGS < $test | xargs $APK_TEST > .$test.got 2>&1\n\n\tif ! get_block EXPECT < $test | cmp .$test.got > /dev/null 2>&1; then\n\t\tfail=$((fail+1))\n\t\techo \"FAIL: $test\"\n\t\tget_block EXPECT < $test | diff -ru - .$test.got\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/test/solver.sh"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 25,
                  "endLine": 13,
                  "endColumn": 32,
                  "snippet": {
                    "text": "fail=0\npass=0\nfor test in ${TEST_TO_RUN:-*.test}; do\n\tget_block ARGS < $test | xargs $APK_TEST > .$test.got 2>&1\n\n\tif ! get_block EXPECT < $test | cmp .$test.got > /dev/null 2>&1; then\n\t\tfail=$((fail+1))\n",
                    "rendered": {
                      "text": "fail=0\npass=0\nfor test in ${TEST_TO_RUN:-*.test}; do\n\tget_block ARGS < $test | xargs $APK_TEST > .$test.got 2>&1\n\n\tif ! get_block EXPECT < $test | cmp .$test.got > /dev/null 2>&1; then\n\t\tfail=$((fail+1))\n",
                      "markdown": "`fail=0\npass=0\nfor test in ${TEST_TO_RUN:-*.test}; do\n\tget_block ARGS < $test | xargs $APK_TEST > .$test.got 2>&1\n\n\tif ! get_block EXPECT < $test | cmp .$test.got > /dev/null 2>&1; then\n\t\tfail=$((fail+1))\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/test/solver.sh"
                },
                "region": {
                  "startLine": 4,
                  "endLine": 4,
                  "endColumn": 5,
                  "snippet": {
                    "text": "#!/bin/sh\n\nget_block() {\n\tawk '/^@'$1'/{p=1;next} /^@/{p=0} p{print}'\n}\n\nAPK_TEST=\"$VALGRIND ../src/apk-test\"\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\nget_block() {\n\tawk '/^@'$1'/{p=1;next} /^@/{p=0} p{print}'\n}\n\nAPK_TEST=\"$VALGRIND ../src/apk-test\"\n",
                      "markdown": "`#!/bin/sh\n\nget_block() {\n\tawk '/^@'$1'/{p=1;next} /^@/{p=0} p{print}'\n}\n\nAPK_TEST=\"$VALGRIND ../src/apk-test\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/src/hash.c"
                },
                "region": {
                  "startLine": 77,
                  "endLine": 77,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tapk_hash_node *node;\n\n\thash %= apk_array_len(h->buckets);\n\tnode = (apk_hash_node *) (item + h->ops->node_offset);\n\thlist_add_head(node, &h->buckets->item[hash]);\n\th->num_items++;\n}\n",
                    "rendered": {
                      "text": "\tapk_hash_node *node;\n\n\thash %= apk_array_len(h->buckets);\n\tnode = (apk_hash_node *) (item + h->ops->node_offset);\n\thlist_add_head(node, &h->buckets->item[hash]);\n\th->num_items++;\n}\n",
                      "markdown": "`\tapk_hash_node *node;\n\n\thash %= apk_array_len(h->buckets);\n\tnode = (apk_hash_node *) (item + h->ops->node_offset);\n\thlist_add_head(node, &h->buckets->item[hash]);\n\th->num_items++;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/src/commit.c"
                },
                "region": {
                  "startLine": 823,
                  "startColumn": 61,
                  "endLine": 823,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\t}\n\n\tif (!ps.num_labels)\n\t\tapk_print_indented_line(&ps.i, \"Huh? Error reporter did not find the broken constraints.\\n\");\n}\n\nint apk_solver_commit(struct apk_database *db,\n",
                    "rendered": {
                      "text": "\t}\n\n\tif (!ps.num_labels)\n\t\tapk_print_indented_line(&ps.i, \"Huh? Error reporter did not find the broken constraints.\\n\");\n}\n\nint apk_solver_commit(struct apk_database *db,\n",
                      "markdown": "`\t}\n\n\tif (!ps.num_labels)\n\t\tapk_print_indented_line(&ps.i, \"Huh? Error reporter did not find the broken constraints.\\n\");\n}\n\nint apk_solver_commit(struct apk_database *db,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/src/apk_adb.c"
                },
                "region": {
                  "startLine": 568,
                  "startColumn": 40,
                  "endLine": 568,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\t\t\t\toptarg, apk_error_str(PTR_ERR(key)));\n\t\t\treturn PTR_ERR(key);\n\t\t}\n\t\tlist_add_tail(&key->key_node, &trust->private_key_list);\n\t\tbreak;\n\tdefault:\n\t\treturn -ENOTSUP;\n",
                    "rendered": {
                      "text": "\t\t\t\toptarg, apk_error_str(PTR_ERR(key)));\n\t\t\treturn PTR_ERR(key);\n\t\t}\n\t\tlist_add_tail(&key->key_node, &trust->private_key_list);\n\t\tbreak;\n\tdefault:\n\t\treturn -ENOTSUP;\n",
                      "markdown": "`\t\t\t\toptarg, apk_error_str(PTR_ERR(key)));\n\t\t\treturn PTR_ERR(key);\n\t\t}\n\t\tlist_add_tail(&key->key_node, &trust->private_key_list);\n\t\tbreak;\n\tdefault:\n\t\treturn -ENOTSUP;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/src/fs_fsys.c"
                },
                "region": {
                  "startLine": 226,
                  "startColumn": 48,
                  "endLine": 226,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\ttimes[0].tv_nsec = times[1].tv_nsec = 0;\n\t\tr = utimensat(atfd, fn, times, atflags);\n\t\tif (r < 0) {\n\t\t\tapk_err(out, \"Failed to preserve modification time on %s: %s\",\n\t\t\t\tfn, strerror(errno));\n\t\t\tif (!ret || ret == -ENOTSUP) ret = -errno;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\ttimes[0].tv_nsec = times[1].tv_nsec = 0;\n\t\tr = utimensat(atfd, fn, times, atflags);\n\t\tif (r < 0) {\n\t\t\tapk_err(out, \"Failed to preserve modification time on %s: %s\",\n\t\t\t\tfn, strerror(errno));\n\t\t\tif (!ret || ret == -ENOTSUP) ret = -errno;\n\t\t}\n",
                      "markdown": "`\t\ttimes[0].tv_nsec = times[1].tv_nsec = 0;\n\t\tr = utimensat(atfd, fn, times, atflags);\n\t\tif (r < 0) {\n\t\t\tapk_err(out, \"Failed to preserve modification time on %s: %s\",\n\t\t\t\tfn, strerror(errno));\n\t\t\tif (!ret || ret == -ENOTSUP) ret = -errno;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/src/app_convdb.c"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 44,
                  "endLine": 105,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\tstruct apk_id_cache *idc = apk_ctx_get_id_cache(ctx->ac);\n\tstruct apk_digest digest;\n\tstruct adb_obj pkg, pkginfo, files, file, paths, path, scripts, triggers, acl;\n\tapk_blob_t l, val, spc = APK_BLOB_STR(\" \"), nl = APK_BLOB_STR(\"\\n\");\n\tstruct conv_script *s;\n\tint i;\n\n",
                    "rendered": {
                      "text": "\tstruct apk_id_cache *idc = apk_ctx_get_id_cache(ctx->ac);\n\tstruct apk_digest digest;\n\tstruct adb_obj pkg, pkginfo, files, file, paths, path, scripts, triggers, acl;\n\tapk_blob_t l, val, spc = APK_BLOB_STR(\" \"), nl = APK_BLOB_STR(\"\\n\");\n\tstruct conv_script *s;\n\tint i;\n\n",
                      "markdown": "`\tstruct apk_id_cache *idc = apk_ctx_get_id_cache(ctx->ac);\n\tstruct apk_digest digest;\n\tstruct adb_obj pkg, pkginfo, files, file, paths, path, scripts, triggers, acl;\n\tapk_blob_t l, val, spc = APK_BLOB_STR(\" \"), nl = APK_BLOB_STR(\"\\n\");\n\tstruct conv_script *s;\n\tint i;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/src/app_convdb.c"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 17,
                  "endLine": 85,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\nstatic int read_triggers(struct conv_ctx *ctx, struct apk_istream *is)\n{\n\tapk_blob_t l, r, nl = APK_BLOB_STR(\"\\n\"), spc = APK_BLOB_STR(\" \");\n\tstruct conv_script *s;\n\n\tif (IS_ERR(is)) return PTR_ERR(is);\n",
                    "rendered": {
                      "text": "\nstatic int read_triggers(struct conv_ctx *ctx, struct apk_istream *is)\n{\n\tapk_blob_t l, r, nl = APK_BLOB_STR(\"\\n\"), spc = APK_BLOB_STR(\" \");\n\tstruct conv_script *s;\n\n\tif (IS_ERR(is)) return PTR_ERR(is);\n",
                      "markdown": "`\nstatic int read_triggers(struct conv_ctx *ctx, struct apk_istream *is)\n{\n\tapk_blob_t l, r, nl = APK_BLOB_STR(\"\\n\"), spc = APK_BLOB_STR(\" \");\n\tstruct conv_script *s;\n\n\tif (IS_ERR(is)) return PTR_ERR(is);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-audit.8.scd"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 44,
                  "endLine": 72,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\n*--packages*\n\tPrint only the packages with changed files. Instead of the full output\n\teach modification, the set of packages with at least one modified file\n\tis printed.\n\n\tTo repair all packages with modified files, one could use:\n",
                    "rendered": {
                      "text": "\n*--packages*\n\tPrint only the packages with changed files. Instead of the full output\n\teach modification, the set of packages with at least one modified file\n\tis printed.\n\n\tTo repair all packages with modified files, one could use:\n",
                      "markdown": "`\n*--packages*\n\tPrint only the packages with changed files. Instead of the full output\n\teach modification, the set of packages with at least one modified file\n\tis printed.\n\n\tTo repair all packages with modified files, one could use:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-audit.8.scd"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 27,
                  "endLine": 76,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\tis printed.\n\n\tTo repair all packages with modified files, one could use:\n\t\tapk audit --packages -q | xargs apk fix\n\n*--protected-paths* _FILE_\n\tUse given FILE for protected paths listings. This also makes apk ignore\n",
                    "rendered": {
                      "text": "\tis printed.\n\n\tTo repair all packages with modified files, one could use:\n\t\tapk audit --packages -q | xargs apk fix\n\n*--protected-paths* _FILE_\n\tUse given FILE for protected paths listings. This also makes apk ignore\n",
                      "markdown": "`\tis printed.\n\n\tTo repair all packages with modified files, one could use:\n\t\tapk audit --packages -q | xargs apk fix\n\n*--protected-paths* _FILE_\n\tUse given FILE for protected paths listings. This also makes apk ignore\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-audit.8.scd"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 36,
                  "endLine": 68,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\tspecified.\n\n*--ignore-busybox-symlinks*\n\tIgnore symlinks whose target is the busybox binary.\n\n*--packages*\n\tPrint only the packages with changed files. Instead of the full output\n",
                    "rendered": {
                      "text": "\tspecified.\n\n*--ignore-busybox-symlinks*\n\tIgnore symlinks whose target is the busybox binary.\n\n*--packages*\n\tPrint only the packages with changed files. Instead of the full output\n",
                      "markdown": "`\tspecified.\n\n*--ignore-busybox-symlinks*\n\tIgnore symlinks whose target is the busybox binary.\n\n*--packages*\n\tPrint only the packages with changed files. Instead of the full output\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/src/package.c"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 7,
                  "endLine": 105,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\t\t       apk_blob_t *name,\n\t\t       apk_blob_t *version)\n{\n\tint i, dash = 0;\n\n\tif (APK_BLOB_IS_NULL(apkname))\n\t\treturn -1;\n",
                    "rendered": {
                      "text": "\t\t       apk_blob_t *name,\n\t\t       apk_blob_t *version)\n{\n\tint i, dash = 0;\n\n\tif (APK_BLOB_IS_NULL(apkname))\n\t\treturn -1;\n",
                      "markdown": "`\t\t       apk_blob_t *name,\n\t\t       apk_blob_t *version)\n{\n\tint i, dash = 0;\n\n\tif (APK_BLOB_IS_NULL(apkname))\n\t\treturn -1;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/Makefile"
                },
                "region": {
                  "startLine": 52,
                  "endLine": 52,
                  "endColumn": 5,
                  "snippet": {
                    "text": "tag: check\n\tTAG_VERSION=$$(cat VERSION); \\\n\tgit commit . -m \"apk-tools-$${TAG_VERSION}\"; \\\n\tgit tag -s v$${TAG_VERSION} -m \"apk-tools-$${TAG_VERSION}\"\n\nsrc/: libfetch/\n",
                    "rendered": {
                      "text": "tag: check\n\tTAG_VERSION=$$(cat VERSION); \\\n\tgit commit . -m \"apk-tools-$${TAG_VERSION}\"; \\\n\tgit tag -s v$${TAG_VERSION} -m \"apk-tools-$${TAG_VERSION}\"\n\nsrc/: libfetch/\n",
                      "markdown": "`tag: check\n\tTAG_VERSION=$$(cat VERSION); \\\n\tgit commit . -m \"apk-tools-$${TAG_VERSION}\"; \\\n\tgit tag -s v$${TAG_VERSION} -m \"apk-tools-$${TAG_VERSION}\"\n\nsrc/: libfetch/\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/Makefile"
                },
                "region": {
                  "startLine": 51,
                  "endLine": 51,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ntag: check\n\tTAG_VERSION=$$(cat VERSION); \\\n\tgit commit . -m \"apk-tools-$${TAG_VERSION}\"; \\\n\tgit tag -s v$${TAG_VERSION} -m \"apk-tools-$${TAG_VERSION}\"\n\nsrc/: libfetch/\n",
                    "rendered": {
                      "text": "\ntag: check\n\tTAG_VERSION=$$(cat VERSION); \\\n\tgit commit . -m \"apk-tools-$${TAG_VERSION}\"; \\\n\tgit tag -s v$${TAG_VERSION} -m \"apk-tools-$${TAG_VERSION}\"\n\nsrc/: libfetch/\n",
                      "markdown": "`\ntag: check\n\tTAG_VERSION=$$(cat VERSION); \\\n\tgit commit . -m \"apk-tools-$${TAG_VERSION}\"; \\\n\tgit tag -s v$${TAG_VERSION} -m \"apk-tools-$${TAG_VERSION}\"\n\nsrc/: libfetch/\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/common.c"
                },
                "region": {
                  "startLine": 1103,
                  "startColumn": 16,
                  "endLine": 1103,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\t\t\tgoto ferr;\n\t\t\tif (snprintf(url->pwd, sizeof(url->pwd),\n\t\t\t\t\"%s\", word) > (int)sizeof(url->pwd)) {\n\t\t\t\tfetch_info(\"password in .netrc is too long\");\n\t\t\t\turl->pwd[0] = '\\0';\n\t\t\t}\n\t\t} else if (strcmp(word, \"account\") == 0) {\n",
                    "rendered": {
                      "text": "\t\t\t\tgoto ferr;\n\t\t\tif (snprintf(url->pwd, sizeof(url->pwd),\n\t\t\t\t\"%s\", word) > (int)sizeof(url->pwd)) {\n\t\t\t\tfetch_info(\"password in .netrc is too long\");\n\t\t\t\turl->pwd[0] = '\\0';\n\t\t\t}\n\t\t} else if (strcmp(word, \"account\") == 0) {\n",
                      "markdown": "`\t\t\t\tgoto ferr;\n\t\t\tif (snprintf(url->pwd, sizeof(url->pwd),\n\t\t\t\t\"%s\", word) > (int)sizeof(url->pwd)) {\n\t\t\t\tfetch_info(\"password in .netrc is too long\");\n\t\t\t\turl->pwd[0] = '\\0';\n\t\t\t}\n\t\t} else if (strcmp(word, \"account\") == 0) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/common.c"
                },
                "region": {
                  "startLine": 1098,
                  "startColumn": 27,
                  "endLine": 1098,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\t\t\t\tfetch_info(\"login name in .netrc is too long\");\n\t\t\t\turl->user[0] = '\\0';\n\t\t\t}\n\t\t} else if (strcmp(word, \"password\") == 0) {\n\t\t\tif ((word = fetch_read_word(f)) == NULL)\n\t\t\t\tgoto ferr;\n\t\t\tif (snprintf(url->pwd, sizeof(url->pwd),\n",
                    "rendered": {
                      "text": "\t\t\t\tfetch_info(\"login name in .netrc is too long\");\n\t\t\t\turl->user[0] = '\\0';\n\t\t\t}\n\t\t} else if (strcmp(word, \"password\") == 0) {\n\t\t\tif ((word = fetch_read_word(f)) == NULL)\n\t\t\t\tgoto ferr;\n\t\t\tif (snprintf(url->pwd, sizeof(url->pwd),\n",
                      "markdown": "`\t\t\t\tfetch_info(\"login name in .netrc is too long\");\n\t\t\t\turl->user[0] = '\\0';\n\t\t\t}\n\t\t} else if (strcmp(word, \"password\") == 0) {\n\t\t\tif ((word = fetch_read_word(f)) == NULL)\n\t\t\t\tgoto ferr;\n\t\t\tif (snprintf(url->pwd, sizeof(url->pwd),\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/common.c"
                },
                "region": {
                  "startLine": 567,
                  "startColumn": 17,
                  "endLine": 567,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\treturn 0;\n\t}\n\n\tif (SSL_CTX_use_PrivateKey_file(ctx, key_file, SSL_FILETYPE_PEM) != 1) {\n\t\tfprintf(stderr, \"Could not load client key %s\\n\", key_file);\n\t\treturn 0;\n\t}\n",
                    "rendered": {
                      "text": "\t\treturn 0;\n\t}\n\n\tif (SSL_CTX_use_PrivateKey_file(ctx, key_file, SSL_FILETYPE_PEM) != 1) {\n\t\tfprintf(stderr, \"Could not load client key %s\\n\", key_file);\n\t\treturn 0;\n\t}\n",
                      "markdown": "`\t\treturn 0;\n\t}\n\n\tif (SSL_CTX_use_PrivateKey_file(ctx, key_file, SSL_FILETYPE_PEM) != 1) {\n\t\tfprintf(stderr, \"Could not load client key %s\\n\", key_file);\n\t\treturn 0;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/common.c"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 27,
                  "endLine": 429,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\n/*\n * Check connection cache for an existing entry matching\n * protocol/host/port/user/password/family.\n */\nconn_t *\nfetch_cache_get(const struct url *url, int af)\n",
                    "rendered": {
                      "text": "\n/*\n * Check connection cache for an existing entry matching\n * protocol/host/port/user/password/family.\n */\nconn_t *\nfetch_cache_get(const struct url *url, int af)\n",
                      "markdown": "`\n/*\n * Check connection cache for an existing entry matching\n * protocol/host/port/user/password/family.\n */\nconn_t *\nfetch_cache_get(const struct url *url, int af)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/common.c"
                },
                "region": {
                  "startLine": 621,
                  "startColumn": 22,
                  "endLine": 621,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n\tif (getenv(\"SSL_NO_VERIFY_HOSTNAME\") == NULL) {\n\t\tif (verbose)\n\t\t\tfetch_info(\"Verify hostname\");\n\t\tif (X509_check_host(conn->ssl_cert, URL->host, strlen(URL->host),\n\t\t\t\tX509_CHECK_FLAG_NO_PARTIAL_WILDCARDS,\n\t\t\t\tNULL) != 1) {\n",
                    "rendered": {
                      "text": "\n\tif (getenv(\"SSL_NO_VERIFY_HOSTNAME\") == NULL) {\n\t\tif (verbose)\n\t\t\tfetch_info(\"Verify hostname\");\n\t\tif (X509_check_host(conn->ssl_cert, URL->host, strlen(URL->host),\n\t\t\t\tX509_CHECK_FLAG_NO_PARTIAL_WILDCARDS,\n\t\t\t\tNULL) != 1) {\n",
                      "markdown": "`\n\tif (getenv(\"SSL_NO_VERIFY_HOSTNAME\") == NULL) {\n\t\tif (verbose)\n\t\t\tfetch_info(\"Verify hostname\");\n\t\tif (X509_check_host(conn->ssl_cert, URL->host, strlen(URL->host),\n\t\t\t\tX509_CHECK_FLAG_NO_PARTIAL_WILDCARDS,\n\t\t\t\tNULL) != 1) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/common.c"
                },
                "region": {
                  "startLine": 285,
                  "endLine": 285,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tint timeout;\n\n\tgettimeofday(&cur, NULL);\n\ttimeout = (tv->tv_sec - cur.tv_sec) * 1000 + (tv->tv_usec - cur.tv_usec) / 1000;\n\treturn timeout;\n}\n\n",
                    "rendered": {
                      "text": "\tint timeout;\n\n\tgettimeofday(&cur, NULL);\n\ttimeout = (tv->tv_sec - cur.tv_sec) * 1000 + (tv->tv_usec - cur.tv_usec) / 1000;\n\treturn timeout;\n}\n\n",
                      "markdown": "`\tint timeout;\n\n\tgettimeofday(&cur, NULL);\n\ttimeout = (tv->tv_sec - cur.tv_sec) * 1000 + (tv->tv_usec - cur.tv_usec) / 1000;\n\treturn timeout;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.c"
                },
                "region": {
                  "startLine": 467,
                  "startColumn": 5,
                  "endLine": 467,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\t\t\tgoto ouch;\n\t\t}\n\n\t\t/* password */\n\t\tif (*q == ':') {\n\t\t\tq = fetch_pctdecode(u->pwd, q + 1, \"@\", URL_PWDLEN);\n\t\t\tif (q == NULL) {\n",
                    "rendered": {
                      "text": "\t\t\tgoto ouch;\n\t\t}\n\n\t\t/* password */\n\t\tif (*q == ':') {\n\t\t\tq = fetch_pctdecode(u->pwd, q + 1, \"@\", URL_PWDLEN);\n\t\t\tif (q == NULL) {\n",
                      "markdown": "`\t\t\tgoto ouch;\n\t\t}\n\n\t\t/* password */\n\t\tif (*q == ':') {\n\t\t\tq = fetch_pctdecode(u->pwd, q + 1, \"@\", URL_PWDLEN);\n\t\t\tif (q == NULL) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.c"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 52,
                  "endLine": 65,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\t{ URL_MALFORMED,\tFETCH_URL,\t\"Malformed URL\" },\n\t{ URL_BAD_SCHEME,\tFETCH_URL,\t\"Invalid URL scheme\" },\n\t{ URL_BAD_PORT,\t\tFETCH_URL,\t\"Invalid server port\" },\n\t{ URL_BAD_HOST,\t\tFETCH_URL,\t\"Invalid (or too long) hostname\" },\n\t{ URL_BAD_AUTH,\t\tFETCH_URL,\t\"Invalid (or too long) credentials\" },\n\t{ -1,\t\t\tFETCH_UNKNOWN,\t\"Unknown parser error\" }\n};\n",
                    "rendered": {
                      "text": "\t{ URL_MALFORMED,\tFETCH_URL,\t\"Malformed URL\" },\n\t{ URL_BAD_SCHEME,\tFETCH_URL,\t\"Invalid URL scheme\" },\n\t{ URL_BAD_PORT,\t\tFETCH_URL,\t\"Invalid server port\" },\n\t{ URL_BAD_HOST,\t\tFETCH_URL,\t\"Invalid (or too long) hostname\" },\n\t{ URL_BAD_AUTH,\t\tFETCH_URL,\t\"Invalid (or too long) credentials\" },\n\t{ -1,\t\t\tFETCH_UNKNOWN,\t\"Unknown parser error\" }\n};\n",
                      "markdown": "`\t{ URL_MALFORMED,\tFETCH_URL,\t\"Malformed URL\" },\n\t{ URL_BAD_SCHEME,\tFETCH_URL,\t\"Invalid URL scheme\" },\n\t{ URL_BAD_PORT,\t\tFETCH_URL,\t\"Invalid server port\" },\n\t{ URL_BAD_HOST,\t\tFETCH_URL,\t\"Invalid (or too long) hostname\" },\n\t{ URL_BAD_AUTH,\t\tFETCH_URL,\t\"Invalid (or too long) credentials\" },\n\t{ -1,\t\t\tFETCH_UNKNOWN,\t\"Unknown parser error\" }\n};\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.3"
                },
                "region": {
                  "startLine": 592,
                  "startColumn": 27,
                  "endLine": 592,
                  "endColumn": 35,
                  "snippet": {
                    "text": ".It Ev NETRC\nSpecifies a file to use instead of\n.Pa ~/.netrc\nto look up login names and passwords for FTP sites.\nSee\n.Xr ftp 1\nfor a description of the file format.\n",
                    "rendered": {
                      "text": ".It Ev NETRC\nSpecifies a file to use instead of\n.Pa ~/.netrc\nto look up login names and passwords for FTP sites.\nSee\n.Xr ftp 1\nfor a description of the file format.\n",
                      "markdown": "`.It Ev NETRC\nSpecifies a file to use instead of\n.Pa ~/.netrc\nto look up login names and passwords for FTP sites.\nSee\n.Xr ftp 1\nfor a description of the file format.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.3"
                },
                "region": {
                  "startLine": 578,
                  "startColumn": 30,
                  "endLine": 578,
                  "endColumn": 38,
                  "snippet": {
                    "text": "variable.\n.Pp\nThis variable is used if and only if connected to an HTTP proxy, and\nis ignored if a user and/or a password were specified in the proxy\nURL.\n.It Ev HTTP_REFERER\nSpecifies the referrer URL to use for HTTP requests.\n",
                    "rendered": {
                      "text": "variable.\n.Pp\nThis variable is used if and only if connected to an HTTP proxy, and\nis ignored if a user and/or a password were specified in the proxy\nURL.\n.It Ev HTTP_REFERER\nSpecifies the referrer URL to use for HTTP requests.\n",
                      "markdown": "`variable.\n.Pp\nThis variable is used if and only if connected to an HTTP proxy, and\nis ignored if a user and/or a password were specified in the proxy\nURL.\n.It Ev HTTP_REFERER\nSpecifies the referrer URL to use for HTTP requests.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.3"
                },
                "region": {
                  "startLine": 561,
                  "startColumn": 16,
                  "endLine": 561,
                  "endColumn": 24,
                  "snippet": {
                    "text": "password, in that order.\n.Pp\nThis variable is only used if the server requires authorization and\nno user name or password was specified in the URL.\n.It Ev HTTP_PROXY\nURL of the proxy to use for HTTP requests.\nThe document part is ignored.\n",
                    "rendered": {
                      "text": "password, in that order.\n.Pp\nThis variable is only used if the server requires authorization and\nno user name or password was specified in the URL.\n.It Ev HTTP_PROXY\nURL of the proxy to use for HTTP requests.\nThe document part is ignored.\n",
                      "markdown": "`password, in that order.\n.Pp\nThis variable is only used if the server requires authorization and\nno user name or password was specified in the URL.\n.It Ev HTTP_PROXY\nURL of the proxy to use for HTTP requests.\nThe document part is ignored.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.3"
                },
                "region": {
                  "startLine": 558,
                  "endLine": 558,
                  "endColumn": 8,
                  "snippet": {
                    "text": "Currently, only basic authorization is supported.\n.Pp\nBasic authorization requires two parameters: the user name and\npassword, in that order.\n.Pp\nThis variable is only used if the server requires authorization and\nno user name or password was specified in the URL.\n",
                    "rendered": {
                      "text": "Currently, only basic authorization is supported.\n.Pp\nBasic authorization requires two parameters: the user name and\npassword, in that order.\n.Pp\nThis variable is only used if the server requires authorization and\nno user name or password was specified in the URL.\n",
                      "markdown": "`Currently, only basic authorization is supported.\n.Pp\nBasic authorization requires two parameters: the user name and\npassword, in that order.\n.Pp\nThis variable is only used if the server requires authorization and\nno user name or password was specified in the URL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.3"
                },
                "region": {
                  "startLine": 458,
                  "startColumn": 29,
                  "endLine": 458,
                  "endColumn": 37,
                  "snippet": {
                    "text": "is currently unimplemented.\n.Sh AUTHENTICATION\nApart from setting the appropriate environment variables and\nspecifying the user name and password in the URL or the\n.Vt struct url ,\nthe calling program has the option of defining an authentication\nfunction with the following prototype:\n",
                    "rendered": {
                      "text": "is currently unimplemented.\n.Sh AUTHENTICATION\nApart from setting the appropriate environment variables and\nspecifying the user name and password in the URL or the\n.Vt struct url ,\nthe calling program has the option of defining an authentication\nfunction with the following prototype:\n",
                      "markdown": "`is currently unimplemented.\n.Sh AUTHENTICATION\nApart from setting the appropriate environment variables and\nspecifying the user name and password in the URL or the\n.Vt struct url ,\nthe calling program has the option of defining an authentication\nfunction with the following prototype:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.3"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 4,
                  "endLine": 430,
                  "endColumn": 12,
                  "snippet": {
                    "text": "If no user name or password is given, the\n.Nm fetch\nlibrary will attempt an anonymous login, with user name \"anonymous\"\nand password \"anonymous@\\*[Lt]hostname\\*[Gt]\".\n.Sh HTTP SCHEME\nThe\n.Fn fetchXGetHTTP ,\n",
                    "rendered": {
                      "text": "If no user name or password is given, the\n.Nm fetch\nlibrary will attempt an anonymous login, with user name \"anonymous\"\nand password \"anonymous@\\*[Lt]hostname\\*[Gt]\".\n.Sh HTTP SCHEME\nThe\n.Fn fetchXGetHTTP ,\n",
                      "markdown": "`If no user name or password is given, the\n.Nm fetch\nlibrary will attempt an anonymous login, with user name \"anonymous\"\nand password \"anonymous@\\*[Lt]hostname\\*[Gt]\".\n.Sh HTTP SCHEME\nThe\n.Fn fetchXGetHTTP ,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.3"
                },
                "region": {
                  "startLine": 427,
                  "startColumn": 19,
                  "endLine": 427,
                  "endColumn": 27,
                  "snippet": {
                    "text": ".Fn fetchPutFTP\nwill use a direct connection even if a proxy server is defined.\n.Pp\nIf no user name or password is given, the\n.Nm fetch\nlibrary will attempt an anonymous login, with user name \"anonymous\"\nand password \"anonymous@\\*[Lt]hostname\\*[Gt]\".\n",
                    "rendered": {
                      "text": ".Fn fetchPutFTP\nwill use a direct connection even if a proxy server is defined.\n.Pp\nIf no user name or password is given, the\n.Nm fetch\nlibrary will attempt an anonymous login, with user name \"anonymous\"\nand password \"anonymous@\\*[Lt]hostname\\*[Gt]\".\n",
                      "markdown": "`.Fn fetchPutFTP\nwill use a direct connection even if a proxy server is defined.\n.Pp\nIf no user name or password is given, the\n.Nm fetch\nlibrary will attempt an anonymous login, with user name \"anonymous\"\nand password \"anonymous@\\*[Lt]hostname\\*[Gt]\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.3"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 30,
                  "endLine": 430,
                  "endColumn": 38,
                  "snippet": {
                    "text": "If no user name or password is given, the\n.Nm fetch\nlibrary will attempt an anonymous login, with user name \"anonymous\"\nand password \"anonymous@\\*[Lt]hostname\\*[Gt]\".\n.Sh HTTP SCHEME\nThe\n.Fn fetchXGetHTTP ,\n",
                    "rendered": {
                      "text": "If no user name or password is given, the\n.Nm fetch\nlibrary will attempt an anonymous login, with user name \"anonymous\"\nand password \"anonymous@\\*[Lt]hostname\\*[Gt]\".\n.Sh HTTP SCHEME\nThe\n.Fn fetchXGetHTTP ,\n",
                      "markdown": "`If no user name or password is given, the\n.Nm fetch\nlibrary will attempt an anonymous login, with user name \"anonymous\"\nand password \"anonymous@\\*[Lt]hostname\\*[Gt]\".\n.Sh HTTP SCHEME\nThe\n.Fn fetchXGetHTTP ,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.3"
                },
                "region": {
                  "startLine": 721,
                  "startColumn": 33,
                  "endLine": 721,
                  "endColumn": 37,
                  "snippet": {
                    "text": ".Fn fetchPutHTTP\nand FTP proxy support.\n.Pp\nThere is no way to select a proxy at run-time other than setting the\n.Ev HTTP_PROXY\nenvironment variable as appropriate.\n.Pp\n",
                    "rendered": {
                      "text": ".Fn fetchPutHTTP\nand FTP proxy support.\n.Pp\nThere is no way to select a proxy at run-time other than setting the\n.Ev HTTP_PROXY\nenvironment variable as appropriate.\n.Pp\n",
                      "markdown": "`.Fn fetchPutHTTP\nand FTP proxy support.\n.Pp\nThere is no way to select a proxy at run-time other than setting the\n.Ev HTTP_PROXY\nenvironment variable as appropriate.\n.Pp\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.3"
                },
                "region": {
                  "startLine": 719,
                  "startColumn": 3,
                  "endLine": 719,
                  "endColumn": 8,
                  "snippet": {
                    "text": "The most notable\nexamples of this are\n.Fn fetchPutHTTP\nand FTP proxy support.\n.Pp\nThere is no way to select a proxy at run-time other than setting the\n.Ev HTTP_PROXY\n",
                    "rendered": {
                      "text": "The most notable\nexamples of this are\n.Fn fetchPutHTTP\nand FTP proxy support.\n.Pp\nThere is no way to select a proxy at run-time other than setting the\n.Ev HTTP_PROXY\n",
                      "markdown": "`The most notable\nexamples of this are\n.Fn fetchPutHTTP\nand FTP proxy support.\n.Pp\nThere is no way to select a proxy at run-time other than setting the\n.Ev HTTP_PROXY\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.3"
                },
                "region": {
                  "startLine": 653,
                  "startColumn": 24,
                  "endLine": 654,
                  "snippet": {
                    "text": ".%A A. Emtage\n.%A A. Marine\n.%D May 1994\n.%T How to Use Anonymous FTP\n.%O RFC 1635\n.Re\n.Rs\n.%A T. Berners-Lee\n",
                    "rendered": {
                      "text": ".%A A. Emtage\n.%A A. Marine\n.%D May 1994\n.%T How to Use Anonymous FTP\n.%O RFC 1635\n.Re\n.Rs\n.%A T. Berners-Lee\n",
                      "markdown": "`.%A A. Emtage\n.%A A. Marine\n.%D May 1994\n.%T How to Use Anonymous FTP\n.%O RFC 1635\n.Re\n.Rs\n.%A T. Berners-Lee\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.3"
                },
                "region": {
                  "startLine": 639,
                  "startColumn": 3,
                  "endLine": 639,
                  "endColumn": 8,
                  "snippet": {
                    "text": ".Sh SEE ALSO\n.\\\" .Xr fetch 1 ,\n.\\\" .Xr ftpio 3 ,\n.Xr ftp 1 ,\n.Xr ip 4\n.Rs\n.%A J. Postel\n",
                    "rendered": {
                      "text": ".Sh SEE ALSO\n.\\\" .Xr fetch 1 ,\n.\\\" .Xr ftpio 3 ,\n.Xr ftp 1 ,\n.Xr ip 4\n.Rs\n.%A J. Postel\n",
                      "markdown": "`.Sh SEE ALSO\n.\\\" .Xr fetch 1 ,\n.\\\" .Xr ftpio 3 ,\n.Xr ftp 1 ,\n.Xr ip 4\n.Rs\n.%A J. Postel\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.3"
                },
                "region": {
                  "startLine": 594,
                  "startColumn": 3,
                  "endLine": 594,
                  "endColumn": 8,
                  "snippet": {
                    "text": ".Pa ~/.netrc\nto look up login names and passwords for FTP sites.\nSee\n.Xr ftp 1\nfor a description of the file format.\nThis feature is experimental.\n.It Ev NO_PROXY\n",
                    "rendered": {
                      "text": ".Pa ~/.netrc\nto look up login names and passwords for FTP sites.\nSee\n.Xr ftp 1\nfor a description of the file format.\nThis feature is experimental.\n.It Ev NO_PROXY\n",
                      "markdown": "`.Pa ~/.netrc\nto look up login names and passwords for FTP sites.\nSee\n.Xr ftp 1\nfor a description of the file format.\nThis feature is experimental.\n.It Ev NO_PROXY\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.3"
                },
                "region": {
                  "startLine": 592,
                  "startColumn": 40,
                  "endLine": 592,
                  "endColumn": 45,
                  "snippet": {
                    "text": ".It Ev NETRC\nSpecifies a file to use instead of\n.Pa ~/.netrc\nto look up login names and passwords for FTP sites.\nSee\n.Xr ftp 1\nfor a description of the file format.\n",
                    "rendered": {
                      "text": ".It Ev NETRC\nSpecifies a file to use instead of\n.Pa ~/.netrc\nto look up login names and passwords for FTP sites.\nSee\n.Xr ftp 1\nfor a description of the file format.\n",
                      "markdown": "`.It Ev NETRC\nSpecifies a file to use instead of\n.Pa ~/.netrc\nto look up login names and passwords for FTP sites.\nSee\n.Xr ftp 1\nfor a description of the file format.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.3"
                },
                "region": {
                  "startLine": 476,
                  "startColumn": 8,
                  "endLine": 476,
                  "endColumn": 12,
                  "snippet": {
                    "text": ".Pp\nTo register the authentication callback, simply set\n.Va fetchAuthMethod\nto point at it.\nThe callback will be used whenever a site requires authentication and\nthe appropriate environment variables are not set.\n.Pp\n",
                    "rendered": {
                      "text": ".Pp\nTo register the authentication callback, simply set\n.Va fetchAuthMethod\nto point at it.\nThe callback will be used whenever a site requires authentication and\nthe appropriate environment variables are not set.\n.Pp\n",
                      "markdown": "`.Pp\nTo register the authentication callback, simply set\n.Va fetchAuthMethod\nto point at it.\nThe callback will be used whenever a site requires authentication and\nthe appropriate environment variables are not set.\n.Pp\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.3"
                },
                "region": {
                  "startLine": 401,
                  "startColumn": 13,
                  "endLine": 401,
                  "endColumn": 18,
                  "snippet": {
                    "text": ".Fn fetchGetFTP ,\nand\n.Fn fetchPutFTP\nimplement the FTP protocol as described in RFC 959.\n.Pp\nBy default\n.Nm libfetch\n",
                    "rendered": {
                      "text": ".Fn fetchGetFTP ,\nand\n.Fn fetchPutFTP\nimplement the FTP protocol as described in RFC 959.\n.Pp\nBy default\n.Nm libfetch\n",
                      "markdown": "`.Fn fetchGetFTP ,\nand\n.Fn fetchPutFTP\nimplement the FTP protocol as described in RFC 959.\n.Pp\nBy default\n.Nm libfetch\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.3"
                },
                "region": {
                  "startLine": 396,
                  "startColumn": 3,
                  "endLine": 396,
                  "endColumn": 8,
                  "snippet": {
                    "text": ".Fn fetchPutFile\nwill be appended to the previous contents of the file, instead of\nreplacing them.\n.Sh FTP SCHEME\n.Fn fetchXGetFTP ,\n.Fn fetchGetFTP ,\nand\n",
                    "rendered": {
                      "text": ".Fn fetchPutFile\nwill be appended to the previous contents of the file, instead of\nreplacing them.\n.Sh FTP SCHEME\n.Fn fetchXGetFTP ,\n.Fn fetchGetFTP ,\nand\n",
                      "markdown": "`.Fn fetchPutFile\nwill be appended to the previous contents of the file, instead of\nreplacing them.\n.Sh FTP SCHEME\n.Fn fetchXGetFTP ,\n.Fn fetchGetFTP ,\nand\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.3"
                },
                "region": {
                  "startLine": 367,
                  "startColumn": 3,
                  "endLine": 367,
                  "endColumn": 8,
                  "snippet": {
                    "text": "For HTTP an\n.Li If-Modified-Since\nHTTP header is sent.\nFor FTP a\n.Li MTDM\ncommand is sent first and compared locally.\nFor FILE the source file is compared.\n",
                    "rendered": {
                      "text": "For HTTP an\n.Li If-Modified-Since\nHTTP header is sent.\nFor FTP a\n.Li MTDM\ncommand is sent first and compared locally.\nFor FILE the source file is compared.\n",
                      "markdown": "`For HTTP an\n.Li If-Modified-Since\nHTTP header is sent.\nFor FTP a\n.Li MTDM\ncommand is sent first and compared locally.\nFor FILE the source file is compared.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.3"
                },
                "region": {
                  "startLine": 719,
                  "startColumn": 3,
                  "endLine": 719,
                  "endColumn": 8,
                  "snippet": {
                    "text": "The most notable\nexamples of this are\n.Fn fetchPutHTTP\nand FTP proxy support.\n.Pp\nThere is no way to select a proxy at run-time other than setting the\n.Ev HTTP_PROXY\n",
                    "rendered": {
                      "text": "The most notable\nexamples of this are\n.Fn fetchPutHTTP\nand FTP proxy support.\n.Pp\nThere is no way to select a proxy at run-time other than setting the\n.Ev HTTP_PROXY\n",
                      "markdown": "`The most notable\nexamples of this are\n.Fn fetchPutHTTP\nand FTP proxy support.\n.Pp\nThere is no way to select a proxy at run-time other than setting the\n.Ev HTTP_PROXY\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.3"
                },
                "region": {
                  "startLine": 653,
                  "startColumn": 24,
                  "endLine": 654,
                  "snippet": {
                    "text": ".%A A. Emtage\n.%A A. Marine\n.%D May 1994\n.%T How to Use Anonymous FTP\n.%O RFC 1635\n.Re\n.Rs\n.%A T. Berners-Lee\n",
                    "rendered": {
                      "text": ".%A A. Emtage\n.%A A. Marine\n.%D May 1994\n.%T How to Use Anonymous FTP\n.%O RFC 1635\n.Re\n.Rs\n.%A T. Berners-Lee\n",
                      "markdown": "`.%A A. Emtage\n.%A A. Marine\n.%D May 1994\n.%T How to Use Anonymous FTP\n.%O RFC 1635\n.Re\n.Rs\n.%A T. Berners-Lee\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.3"
                },
                "region": {
                  "startLine": 640,
                  "startColumn": 3,
                  "endLine": 640,
                  "endColumn": 7,
                  "snippet": {
                    "text": ".\\\" .Xr fetch 1 ,\n.\\\" .Xr ftpio 3 ,\n.Xr ftp 1 ,\n.Xr ip 4\n.Rs\n.%A J. Postel\n.%A J. K. Reynolds\n",
                    "rendered": {
                      "text": ".\\\" .Xr fetch 1 ,\n.\\\" .Xr ftpio 3 ,\n.Xr ftp 1 ,\n.Xr ip 4\n.Rs\n.%A J. Postel\n.%A J. K. Reynolds\n",
                      "markdown": "`.\\\" .Xr fetch 1 ,\n.\\\" .Xr ftpio 3 ,\n.Xr ftp 1 ,\n.Xr ip 4\n.Rs\n.%A J. Postel\n.%A J. K. Reynolds\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.3"
                },
                "region": {
                  "startLine": 639,
                  "startColumn": 3,
                  "endLine": 639,
                  "endColumn": 8,
                  "snippet": {
                    "text": ".Sh SEE ALSO\n.\\\" .Xr fetch 1 ,\n.\\\" .Xr ftpio 3 ,\n.Xr ftp 1 ,\n.Xr ip 4\n.Rs\n.%A J. Postel\n",
                    "rendered": {
                      "text": ".Sh SEE ALSO\n.\\\" .Xr fetch 1 ,\n.\\\" .Xr ftpio 3 ,\n.Xr ftp 1 ,\n.Xr ip 4\n.Rs\n.%A J. Postel\n",
                      "markdown": "`.Sh SEE ALSO\n.\\\" .Xr fetch 1 ,\n.\\\" .Xr ftpio 3 ,\n.Xr ftp 1 ,\n.Xr ip 4\n.Rs\n.%A J. Postel\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.3"
                },
                "region": {
                  "startLine": 594,
                  "startColumn": 3,
                  "endLine": 594,
                  "endColumn": 8,
                  "snippet": {
                    "text": ".Pa ~/.netrc\nto look up login names and passwords for FTP sites.\nSee\n.Xr ftp 1\nfor a description of the file format.\nThis feature is experimental.\n.It Ev NO_PROXY\n",
                    "rendered": {
                      "text": ".Pa ~/.netrc\nto look up login names and passwords for FTP sites.\nSee\n.Xr ftp 1\nfor a description of the file format.\nThis feature is experimental.\n.It Ev NO_PROXY\n",
                      "markdown": "`.Pa ~/.netrc\nto look up login names and passwords for FTP sites.\nSee\n.Xr ftp 1\nfor a description of the file format.\nThis feature is experimental.\n.It Ev NO_PROXY\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.3"
                },
                "region": {
                  "startLine": 592,
                  "startColumn": 40,
                  "endLine": 592,
                  "endColumn": 45,
                  "snippet": {
                    "text": ".It Ev NETRC\nSpecifies a file to use instead of\n.Pa ~/.netrc\nto look up login names and passwords for FTP sites.\nSee\n.Xr ftp 1\nfor a description of the file format.\n",
                    "rendered": {
                      "text": ".It Ev NETRC\nSpecifies a file to use instead of\n.Pa ~/.netrc\nto look up login names and passwords for FTP sites.\nSee\n.Xr ftp 1\nfor a description of the file format.\n",
                      "markdown": "`.It Ev NETRC\nSpecifies a file to use instead of\n.Pa ~/.netrc\nto look up login names and passwords for FTP sites.\nSee\n.Xr ftp 1\nfor a description of the file format.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.3"
                },
                "region": {
                  "startLine": 548,
                  "startColumn": 24,
                  "endLine": 548,
                  "endColumn": 28,
                  "snippet": {
                    "text": ".Sh ENVIRONMENT\n.Bl -tag -width \".Ev FETCH_BIND_ADDRESS\"\n.It Ev FETCH_BIND_ADDRESS\nSpecifies a host name or IP address to which sockets used for outgoing\nconnections will be bound.\n.It Ev HTTP_AUTH\nSpecifies HTTP authorization parameters as a colon-separated list of\n",
                    "rendered": {
                      "text": ".Sh ENVIRONMENT\n.Bl -tag -width \".Ev FETCH_BIND_ADDRESS\"\n.It Ev FETCH_BIND_ADDRESS\nSpecifies a host name or IP address to which sockets used for outgoing\nconnections will be bound.\n.It Ev HTTP_AUTH\nSpecifies HTTP authorization parameters as a colon-separated list of\n",
                      "markdown": "`.Sh ENVIRONMENT\n.Bl -tag -width \".Ev FETCH_BIND_ADDRESS\"\n.It Ev FETCH_BIND_ADDRESS\nSpecifies a host name or IP address to which sockets used for outgoing\nconnections will be bound.\n.It Ev HTTP_AUTH\nSpecifies HTTP authorization parameters as a colon-separated list of\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.3"
                },
                "region": {
                  "startLine": 509,
                  "startColumn": 20,
                  "endLine": 510,
                  "endColumn": 8,
                  "snippet": {
                    "text": "Operation aborted\n.It Bq Er FETCH_AUTH\nAuthentication failed\n.It Bq Er FETCH_DOWN\nService unavailable\n.It Bq Er FETCH_EXISTS\nFile exists\n.It Bq Er FETCH_FULL\n",
                    "rendered": {
                      "text": "Operation aborted\n.It Bq Er FETCH_AUTH\nAuthentication failed\n.It Bq Er FETCH_DOWN\nService unavailable\n.It Bq Er FETCH_EXISTS\nFile exists\n.It Bq Er FETCH_FULL\n",
                      "markdown": "`Operation aborted\n.It Bq Er FETCH_AUTH\nAuthentication failed\n.It Bq Er FETCH_DOWN\nService unavailable\n.It Bq Er FETCH_EXISTS\nFile exists\n.It Bq Er FETCH_FULL\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.3"
                },
                "region": {
                  "startLine": 416,
                  "startColumn": 3,
                  "endLine": 416,
                  "endColumn": 7,
                  "snippet": {
                    "text": ".Ql l\n(low) flag is specified, data sockets will be allocated in the low (or\ndefault) port range instead of the high port range (see\n.Xr ip 4 ) .\n.Pp\nIf the\n.Ql d\n",
                    "rendered": {
                      "text": ".Ql l\n(low) flag is specified, data sockets will be allocated in the low (or\ndefault) port range instead of the high port range (see\n.Xr ip 4 ) .\n.Pp\nIf the\n.Ql d\n",
                      "markdown": "`.Ql l\n(low) flag is specified, data sockets will be allocated in the low (or\ndefault) port range instead of the high port range (see\n.Xr ip 4 ) .\n.Pp\nIf the\n.Ql d\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.3"
                },
                "region": {
                  "startLine": 401,
                  "startColumn": 13,
                  "endLine": 401,
                  "endColumn": 18,
                  "snippet": {
                    "text": ".Fn fetchGetFTP ,\nand\n.Fn fetchPutFTP\nimplement the FTP protocol as described in RFC 959.\n.Pp\nBy default\n.Nm libfetch\n",
                    "rendered": {
                      "text": ".Fn fetchGetFTP ,\nand\n.Fn fetchPutFTP\nimplement the FTP protocol as described in RFC 959.\n.Pp\nBy default\n.Nm libfetch\n",
                      "markdown": "`.Fn fetchGetFTP ,\nand\n.Fn fetchPutFTP\nimplement the FTP protocol as described in RFC 959.\n.Pp\nBy default\n.Nm libfetch\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.3"
                },
                "region": {
                  "startLine": 396,
                  "startColumn": 3,
                  "endLine": 396,
                  "endColumn": 8,
                  "snippet": {
                    "text": ".Fn fetchPutFile\nwill be appended to the previous contents of the file, instead of\nreplacing them.\n.Sh FTP SCHEME\n.Fn fetchXGetFTP ,\n.Fn fetchGetFTP ,\nand\n",
                    "rendered": {
                      "text": ".Fn fetchPutFile\nwill be appended to the previous contents of the file, instead of\nreplacing them.\n.Sh FTP SCHEME\n.Fn fetchXGetFTP ,\n.Fn fetchGetFTP ,\nand\n",
                      "markdown": "`.Fn fetchPutFile\nwill be appended to the previous contents of the file, instead of\nreplacing them.\n.Sh FTP SCHEME\n.Fn fetchXGetFTP ,\n.Fn fetchGetFTP ,\nand\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.3"
                },
                "region": {
                  "startLine": 367,
                  "startColumn": 3,
                  "endLine": 367,
                  "endColumn": 8,
                  "snippet": {
                    "text": "For HTTP an\n.Li If-Modified-Since\nHTTP header is sent.\nFor FTP a\n.Li MTDM\ncommand is sent first and compared locally.\nFor FILE the source file is compared.\n",
                    "rendered": {
                      "text": "For HTTP an\n.Li If-Modified-Since\nHTTP header is sent.\nFor FTP a\n.Li MTDM\ncommand is sent first and compared locally.\nFor FILE the source file is compared.\n",
                      "markdown": "`For HTTP an\n.Li If-Modified-Since\nHTTP header is sent.\nFor FTP a\n.Li MTDM\ncommand is sent first and compared locally.\nFor FILE the source file is compared.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.3"
                },
                "region": {
                  "startLine": 337,
                  "startColumn": 16,
                  "endLine": 337,
                  "endColumn": 24,
                  "snippet": {
                    "text": ".Fn fetchPutURL ,\nand\n.Fn fetchStatURL ,\nexcept that they expect a pre-parsed URL in the form of a pointer to\na\n.Vt struct url\nrather than a string.\n",
                    "rendered": {
                      "text": ".Fn fetchPutURL ,\nand\n.Fn fetchStatURL ,\nexcept that they expect a pre-parsed URL in the form of a pointer to\na\n.Vt struct url\nrather than a string.\n",
                      "markdown": "`.Fn fetchPutURL ,\nand\n.Fn fetchStatURL ,\nexcept that they expect a pre-parsed URL in the form of a pointer to\na\n.Vt struct url\nrather than a string.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.3"
                },
                "region": {
                  "startLine": 266,
                  "startColumn": 13,
                  "endLine": 266,
                  "endColumn": 19,
                  "snippet": {
                    "text": "If the modification time could not be obtained from the server, the\n.Fa mtime\nfield is set to the epoch.\nIf the access time could not be obtained from the server, the\n.Fa atime\nfield is set to the modification time.\n.Pp\n",
                    "rendered": {
                      "text": "If the modification time could not be obtained from the server, the\n.Fa mtime\nfield is set to the epoch.\nIf the access time could not be obtained from the server, the\n.Fa atime\nfield is set to the modification time.\n.Pp\n",
                      "markdown": "`If the modification time could not be obtained from the server, the\n.Fa mtime\nfield is set to the epoch.\nIf the access time could not be obtained from the server, the\n.Fa atime\nfield is set to the modification time.\n.Pp\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.3"
                },
                "region": {
                  "startLine": 263,
                  "startColumn": 19,
                  "endLine": 263,
                  "endColumn": 25,
                  "snippet": {
                    "text": "If the size could not be obtained from the server, the\n.Fa size\nfield is set to \\-1.\nIf the modification time could not be obtained from the server, the\n.Fa mtime\nfield is set to the epoch.\nIf the access time could not be obtained from the server, the\n",
                    "rendered": {
                      "text": "If the size could not be obtained from the server, the\n.Fa size\nfield is set to \\-1.\nIf the modification time could not be obtained from the server, the\n.Fa mtime\nfield is set to the epoch.\nIf the access time could not be obtained from the server, the\n",
                      "markdown": "`If the size could not be obtained from the server, the\n.Fa size\nfield is set to \\-1.\nIf the modification time could not be obtained from the server, the\n.Fa mtime\nfield is set to the epoch.\nIf the access time could not be obtained from the server, the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.cat3"
                },
                "region": {
                  "startLine": 411,
                  "startColumn": 44,
                  "endLine": 411,
                  "endColumn": 52,
                  "snippet": {
                    "text": "                         user agents.\n\n     NETRC               Specifies a file to use instead of _\b~_\b/_\b._\bn_\be_\bt_\br_\bc to look\n                         up login names and passwords for FTP sites.  See\n                         ftp(1) for a description of the file format.  This\n                         feature is experimental.\n\n",
                    "rendered": {
                      "text": "                         user agents.\n\n     NETRC               Specifies a file to use instead of _\b~_\b/_\b._\bn_\be_\bt_\br_\bc to look\n                         up login names and passwords for FTP sites.  See\n                         ftp(1) for a description of the file format.  This\n                         feature is experimental.\n\n",
                      "markdown": "`                         user agents.\n\n     NETRC               Specifies a file to use instead of _\b~_\b/_\b._\bn_\be_\bt_\br_\bc to look\n                         up login names and passwords for FTP sites.  See\n                         ftp(1) for a description of the file format.  This\n                         feature is experimental.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.cat3"
                },
                "region": {
                  "startLine": 384,
                  "startColumn": 59,
                  "endLine": 384,
                  "endColumn": 67,
                  "snippet": {
                    "text": "                         name and password, in that order.\n\n                         This variable is only used if the server requires\n                         authorization and no user name or password was speci-\n                         fied in the URL.\n\n     HTTP_PROXY          URL of the proxy to use for HTTP requests.  The docu-\n",
                    "rendered": {
                      "text": "                         name and password, in that order.\n\n                         This variable is only used if the server requires\n                         authorization and no user name or password was speci-\n                         fied in the URL.\n\n     HTTP_PROXY          URL of the proxy to use for HTTP requests.  The docu-\n",
                      "markdown": "`                         name and password, in that order.\n\n                         This variable is only used if the server requires\n                         authorization and no user name or password was speci-\n                         fied in the URL.\n\n     HTTP_PROXY          URL of the proxy to use for HTTP requests.  The docu-\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.cat3"
                },
                "region": {
                  "startLine": 381,
                  "startColumn": 34,
                  "endLine": 381,
                  "endColumn": 42,
                  "snippet": {
                    "text": "                         basic authorization is supported.\n\n                         Basic authorization requires two parameters: the user\n                         name and password, in that order.\n\n                         This variable is only used if the server requires\n                         authorization and no user name or password was speci-\n",
                    "rendered": {
                      "text": "                         basic authorization is supported.\n\n                         Basic authorization requires two parameters: the user\n                         name and password, in that order.\n\n                         This variable is only used if the server requires\n                         authorization and no user name or password was speci-\n",
                      "markdown": "`                         basic authorization is supported.\n\n                         Basic authorization requires two parameters: the user\n                         name and password, in that order.\n\n                         This variable is only used if the server requires\n                         authorization and no user name or password was speci-\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.cat3"
                },
                "region": {
                  "startLine": 303,
                  "startColumn": 23,
                  "endLine": 303,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\nA\bAU\bUT\bTH\bHE\bEN\bNT\bTI\bIC\bCA\bAT\bTI\bIO\bON\bN\n     Apart from setting the appropriate environment variables and specifying\n     the user name and password in the URL or the _\bs_\bt_\br_\bu_\bc_\bt _\bu_\br_\bl, the calling pro-\n     gram has the option of defining an authentication function with the fol-\n     lowing prototype:\n\n",
                    "rendered": {
                      "text": "\nA\bAU\bUT\bTH\bHE\bEN\bNT\bTI\bIC\bCA\bAT\bTI\bIO\bON\bN\n     Apart from setting the appropriate environment variables and specifying\n     the user name and password in the URL or the _\bs_\bt_\br_\bu_\bc_\bt _\bu_\br_\bl, the calling pro-\n     gram has the option of defining an authentication function with the fol-\n     lowing prototype:\n\n",
                      "markdown": "`\nA\bAU\bUT\bTH\bHE\bEN\bNT\bTI\bIC\bCA\bAT\bTI\bIO\bON\bN\n     Apart from setting the appropriate environment variables and specifying\n     the user name and password in the URL or the _\bs_\bt_\br_\bu_\bc_\bt _\bu_\br_\bl, the calling pro-\n     gram has the option of defining an authentication function with the fol-\n     lowing prototype:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.cat3"
                },
                "region": {
                  "startLine": 285,
                  "startColumn": 53,
                  "endLine": 285,
                  "endColumn": 61,
                  "snippet": {
                    "text": "     defined.\n\n     If no user name or password is given, the f\bfe\bet\btc\bch\bh library will attempt an\n     anonymous login, with user name \"anonymous\" and password \"anony-\n     mous@<hostname>\".\n\nH\bHT\bTT\bTP\bP S\bSC\bCH\bHE\bEM\bME\bE\n",
                    "rendered": {
                      "text": "     defined.\n\n     If no user name or password is given, the f\bfe\bet\btc\bch\bh library will attempt an\n     anonymous login, with user name \"anonymous\" and password \"anony-\n     mous@<hostname>\".\n\nH\bHT\bTT\bTP\bP S\bSC\bCH\bHE\bEM\bME\bE\n",
                      "markdown": "`     defined.\n\n     If no user name or password is given, the f\bfe\bet\btc\bch\bh library will attempt an\n     anonymous login, with user name \"anonymous\" and password \"anony-\n     mous@<hostname>\".\n\nH\bHT\bTT\bTP\bP S\bSC\bCH\bHE\bEM\bME\bE\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.cat3"
                },
                "region": {
                  "startLine": 284,
                  "startColumn": 24,
                  "endLine": 284,
                  "endColumn": 32,
                  "snippet": {
                    "text": "     f\bfe\bet\btc\bch\bhP\bPu\but\btF\bFT\bTP\bP() will use a direct connection even if a proxy server is\n     defined.\n\n     If no user name or password is given, the f\bfe\bet\btc\bch\bh library will attempt an\n     anonymous login, with user name \"anonymous\" and password \"anony-\n     mous@<hostname>\".\n\n",
                    "rendered": {
                      "text": "     f\bfe\bet\btc\bch\bhP\bPu\but\btF\bFT\bTP\bP() will use a direct connection even if a proxy server is\n     defined.\n\n     If no user name or password is given, the f\bfe\bet\btc\bch\bh library will attempt an\n     anonymous login, with user name \"anonymous\" and password \"anony-\n     mous@<hostname>\".\n\n",
                      "markdown": "`     f\bfe\bet\btc\bch\bhP\bPu\but\btF\bFT\bTP\bP() will use a direct connection even if a proxy server is\n     defined.\n\n     If no user name or password is given, the f\bfe\bet\btc\bch\bh library will attempt an\n     anonymous login, with user name \"anonymous\" and password \"anony-\n     mous@<hostname>\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.cat3"
                },
                "region": {
                  "startLine": 286,
                  "startColumn": 11,
                  "endLine": 286,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\n     If no user name or password is given, the f\bfe\bet\btc\bch\bh library will attempt an\n     anonymous login, with user name \"anonymous\" and password \"anony-\n     mous@<hostname>\".\n\nH\bHT\bTT\bTP\bP S\bSC\bCH\bHE\bEM\bME\bE\n     The f\bfe\bet\btc\bch\bhX\bXG\bGe\bet\btH\bHT\bTT\bTP\bP(), f\bfe\bet\btc\bch\bhG\bGe\bet\btH\bHT\bTT\bTP\bP(), and f\bfe\bet\btc\bch\bhP\bPu\but\btH\bHT\bTT\bTP\bP() functions imple-\n",
                    "rendered": {
                      "text": "\n     If no user name or password is given, the f\bfe\bet\btc\bch\bh library will attempt an\n     anonymous login, with user name \"anonymous\" and password \"anony-\n     mous@<hostname>\".\n\nH\bHT\bTT\bTP\bP S\bSC\bCH\bHE\bEM\bME\bE\n     The f\bfe\bet\btc\bch\bhX\bXG\bGe\bet\btH\bHT\bTT\bTP\bP(), f\bfe\bet\btc\bch\bhG\bGe\bet\btH\bHT\bTT\bTP\bP(), and f\bfe\bet\btc\bch\bhP\bPu\but\btH\bHT\bTT\bTP\bP() functions imple-\n",
                      "markdown": "`\n     If no user name or password is given, the f\bfe\bet\btc\bch\bh library will attempt an\n     anonymous login, with user name \"anonymous\" and password \"anony-\n     mous@<hostname>\".\n\nH\bHT\bTT\bTP\bP S\bSC\bCH\bHE\bEM\bME\bE\n     The f\bfe\bet\btc\bch\bhX\bXG\bGe\bet\btH\bHT\bTT\bTP\bP(), f\bfe\bet\btc\bch\bhG\bGe\bet\btH\bHT\bTT\bTP\bP(), and f\bfe\bet\btc\bch\bhP\bPu\but\btH\bHT\bTT\bTP\bP() functions imple-\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.cat3"
                },
                "region": {
                  "startLine": 480,
                  "startColumn": 38,
                  "endLine": 480,
                  "endColumn": 42,
                  "snippet": {
                    "text": "     Some parts of the library are not yet implemented.  The most notable\n     examples of this are f\bfe\bet\btc\bch\bhP\bPu\but\btH\bHT\bTT\bTP\bP() and FTP proxy support.\n\n     There is no way to select a proxy at run-time other than setting the\n     HTTP_PROXY environment variable as appropriate.\n\n     l\bli\bib\bbf\bfe\bet\btc\bch\bh does not understand or obey 305 (Use Proxy) replies.\n",
                    "rendered": {
                      "text": "     Some parts of the library are not yet implemented.  The most notable\n     examples of this are f\bfe\bet\btc\bch\bhP\bPu\but\btH\bHT\bTT\bTP\bP() and FTP proxy support.\n\n     There is no way to select a proxy at run-time other than setting the\n     HTTP_PROXY environment variable as appropriate.\n\n     l\bli\bib\bbf\bfe\bet\btc\bch\bh does not understand or obey 305 (Use Proxy) replies.\n",
                      "markdown": "`     Some parts of the library are not yet implemented.  The most notable\n     examples of this are f\bfe\bet\btc\bch\bhP\bPu\but\btH\bHT\bTT\bTP\bP() and FTP proxy support.\n\n     There is no way to select a proxy at run-time other than setting the\n     HTTP_PROXY environment variable as appropriate.\n\n     l\bli\bib\bbf\bfe\bet\btc\bch\bh does not understand or obey 305 (Use Proxy) replies.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.cat3"
                },
                "region": {
                  "startLine": 478,
                  "startColumn": 68,
                  "endLine": 478,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\nB\bBU\bUG\bGS\bS\n     Some parts of the library are not yet implemented.  The most notable\n     examples of this are f\bfe\bet\btc\bch\bhP\bPu\but\btH\bHT\bTT\bTP\bP() and FTP proxy support.\n\n     There is no way to select a proxy at run-time other than setting the\n     HTTP_PROXY environment variable as appropriate.\n",
                    "rendered": {
                      "text": "\nB\bBU\bUG\bGS\bS\n     Some parts of the library are not yet implemented.  The most notable\n     examples of this are f\bfe\bet\btc\bch\bhP\bPu\but\btH\bHT\bTT\bTP\bP() and FTP proxy support.\n\n     There is no way to select a proxy at run-time other than setting the\n     HTTP_PROXY environment variable as appropriate.\n",
                      "markdown": "`\nB\bBU\bUG\bGS\bS\n     Some parts of the library are not yet implemented.  The most notable\n     examples of this are f\bfe\bet\btc\bch\bhP\bPu\but\btH\bHT\bTT\bTP\bP() and FTP proxy support.\n\n     There is no way to select a proxy at run-time other than setting the\n     HTTP_PROXY environment variable as appropriate.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.cat3"
                },
                "region": {
                  "startLine": 411,
                  "startColumn": 57,
                  "endLine": 411,
                  "endColumn": 62,
                  "snippet": {
                    "text": "                         user agents.\n\n     NETRC               Specifies a file to use instead of _\b~_\b/_\b._\bn_\be_\bt_\br_\bc to look\n                         up login names and passwords for FTP sites.  See\n                         ftp(1) for a description of the file format.  This\n                         feature is experimental.\n\n",
                    "rendered": {
                      "text": "                         user agents.\n\n     NETRC               Specifies a file to use instead of _\b~_\b/_\b._\bn_\be_\bt_\br_\bc to look\n                         up login names and passwords for FTP sites.  See\n                         ftp(1) for a description of the file format.  This\n                         feature is experimental.\n\n",
                      "markdown": "`                         user agents.\n\n     NETRC               Specifies a file to use instead of _\b~_\b/_\b._\bn_\be_\bt_\br_\bc to look\n                         up login names and passwords for FTP sites.  See\n                         ftp(1) for a description of the file format.  This\n                         feature is experimental.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.cat3"
                },
                "region": {
                  "startLine": 314,
                  "startColumn": 10,
                  "endLine": 314,
                  "endColumn": 14,
                  "snippet": {
                    "text": "     failure.\n\n     To register the authentication callback, simply set _\bf_\be_\bt_\bc_\bh_\bA_\bu_\bt_\bh_\bM_\be_\bt_\bh_\bo_\bd to\n     point at it.  The callback will be used whenever a site requires authen-\n     tication and the appropriate environment variables are not set.\n\n     This interface is experimental and may be subject to change.\n",
                    "rendered": {
                      "text": "     failure.\n\n     To register the authentication callback, simply set _\bf_\be_\bt_\bc_\bh_\bA_\bu_\bt_\bh_\bM_\be_\bt_\bh_\bo_\bd to\n     point at it.  The callback will be used whenever a site requires authen-\n     tication and the appropriate environment variables are not set.\n\n     This interface is experimental and may be subject to change.\n",
                      "markdown": "`     failure.\n\n     To register the authentication callback, simply set _\bf_\be_\bt_\bc_\bh_\bA_\bu_\bt_\bh_\bM_\be_\bt_\bh_\bo_\bd to\n     point at it.  The callback will be used whenever a site requires authen-\n     tication and the appropriate environment variables are not set.\n\n     This interface is experimental and may be subject to change.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.cat3"
                },
                "region": {
                  "startLine": 269,
                  "startColumn": 135,
                  "endLine": 269,
                  "endColumn": 140,
                  "snippet": {
                    "text": "     them.\n\nF\bFT\bTP\bP S\bSC\bCH\bHE\bEM\bME\bE\n     f\bfe\bet\btc\bch\bhX\bXG\bGe\bet\btF\bFT\bTP\bP(), f\bfe\bet\btc\bch\bhG\bGe\bet\btF\bFT\bTP\bP(), and f\bfe\bet\btc\bch\bhP\bPu\but\btF\bFT\bTP\bP() implement the FTP proto-\n     col as described in RFC 959.\n\n     By default l\bli\bib\bbf\bfe\bet\btc\bch\bh will attempt to use passive mode first and only fall-\n",
                    "rendered": {
                      "text": "     them.\n\nF\bFT\bTP\bP S\bSC\bCH\bHE\bEM\bME\bE\n     f\bfe\bet\btc\bch\bhX\bXG\bGe\bet\btF\bFT\bTP\bP(), f\bfe\bet\btc\bch\bhG\bGe\bet\btF\bFT\bTP\bP(), and f\bfe\bet\btc\bch\bhP\bPu\but\btF\bFT\bTP\bP() implement the FTP proto-\n     col as described in RFC 959.\n\n     By default l\bli\bib\bbf\bfe\bet\btc\bch\bh will attempt to use passive mode first and only fall-\n",
                      "markdown": "`     them.\n\nF\bFT\bTP\bP S\bSC\bCH\bHE\bEM\bME\bE\n     f\bfe\bet\btc\bch\bhX\bXG\bGe\bet\btF\bFT\bTP\bP(), f\bfe\bet\btc\bch\bhG\bGe\bet\btF\bFT\bTP\bP(), and f\bfe\bet\btc\bch\bhP\bPu\but\btF\bFT\bTP\bP() implement the FTP proto-\n     col as described in RFC 959.\n\n     By default l\bli\bib\bbf\bfe\bet\btc\bch\bh will attempt to use passive mode first and only fall-\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.cat3"
                },
                "region": {
                  "startLine": 253,
                  "startColumn": 48,
                  "endLine": 253,
                  "endColumn": 53,
                  "snippet": {
                    "text": "P\bPR\bRO\bOT\bTO\bOC\bCO\bOL\bL I\bIN\bND\bDE\bEP\bPE\bEN\bND\bDE\bEN\bNT\bT F\bFL\bLA\bAG\bGS\bS\n     If the `i' (if-modified-since) flag is specified, the library will try to\n     fetch the content only if it is newer than _\bl_\ba_\bs_\bt_\b__\bm_\bo_\bd_\bi_\bf_\bi_\be_\bd.  For HTTP an\n     If-Modified-Since HTTP header is sent.  For FTP a MTDM command is sent\n     first and compared locally.  For FILE the source file is compared.\n\nF\bFI\bIL\bLE\bE S\bSC\bCH\bHE\bEM\bME\bE\n",
                    "rendered": {
                      "text": "P\bPR\bRO\bOT\bTO\bOC\bCO\bOL\bL I\bIN\bND\bDE\bEP\bPE\bEN\bND\bDE\bEN\bNT\bT F\bFL\bLA\bAG\bGS\bS\n     If the `i' (if-modified-since) flag is specified, the library will try to\n     fetch the content only if it is newer than _\bl_\ba_\bs_\bt_\b__\bm_\bo_\bd_\bi_\bf_\bi_\be_\bd.  For HTTP an\n     If-Modified-Since HTTP header is sent.  For FTP a MTDM command is sent\n     first and compared locally.  For FILE the source file is compared.\n\nF\bFI\bIL\bLE\bE S\bSC\bCH\bHE\bEM\bME\bE\n",
                      "markdown": "`P\bPR\bRO\bOT\bTO\bOC\bCO\bOL\bL I\bIN\bND\bDE\bEP\bPE\bEN\bND\bDE\bEN\bNT\bT F\bFL\bLA\bAG\bGS\bS\n     If the `i' (if-modified-since) flag is specified, the library will try to\n     fetch the content only if it is newer than _\bl_\ba_\bs_\bt_\b__\bm_\bo_\bd_\bi_\bf_\bi_\be_\bd.  For HTTP an\n     If-Modified-Since HTTP header is sent.  For FTP a MTDM command is sent\n     first and compared locally.  For FILE the source file is compared.\n\nF\bFI\bIL\bLE\bE S\bSC\bCH\bHE\bEM\bME\bE\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.cat3"
                },
                "region": {
                  "startLine": 478,
                  "startColumn": 68,
                  "endLine": 478,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\nB\bBU\bUG\bGS\bS\n     Some parts of the library are not yet implemented.  The most notable\n     examples of this are f\bfe\bet\btc\bch\bhP\bPu\but\btH\bHT\bTT\bTP\bP() and FTP proxy support.\n\n     There is no way to select a proxy at run-time other than setting the\n     HTTP_PROXY environment variable as appropriate.\n",
                    "rendered": {
                      "text": "\nB\bBU\bUG\bGS\bS\n     Some parts of the library are not yet implemented.  The most notable\n     examples of this are f\bfe\bet\btc\bch\bhP\bPu\but\btH\bHT\bTT\bTP\bP() and FTP proxy support.\n\n     There is no way to select a proxy at run-time other than setting the\n     HTTP_PROXY environment variable as appropriate.\n",
                      "markdown": "`\nB\bBU\bUG\bGS\bS\n     Some parts of the library are not yet implemented.  The most notable\n     examples of this are f\bfe\bet\btc\bch\bhP\bPu\but\btH\bHT\bTT\bTP\bP() and FTP proxy support.\n\n     There is no way to select a proxy at run-time other than setting the\n     HTTP_PROXY environment variable as appropriate.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.cat3"
                },
                "region": {
                  "startLine": 411,
                  "startColumn": 57,
                  "endLine": 411,
                  "endColumn": 62,
                  "snippet": {
                    "text": "                         user agents.\n\n     NETRC               Specifies a file to use instead of _\b~_\b/_\b._\bn_\be_\bt_\br_\bc to look\n                         up login names and passwords for FTP sites.  See\n                         ftp(1) for a description of the file format.  This\n                         feature is experimental.\n\n",
                    "rendered": {
                      "text": "                         user agents.\n\n     NETRC               Specifies a file to use instead of _\b~_\b/_\b._\bn_\be_\bt_\br_\bc to look\n                         up login names and passwords for FTP sites.  See\n                         ftp(1) for a description of the file format.  This\n                         feature is experimental.\n\n",
                      "markdown": "`                         user agents.\n\n     NETRC               Specifies a file to use instead of _\b~_\b/_\b._\bn_\be_\bt_\br_\bc to look\n                         up login names and passwords for FTP sites.  See\n                         ftp(1) for a description of the file format.  This\n                         feature is experimental.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.cat3"
                },
                "region": {
                  "startLine": 371,
                  "startColumn": 49,
                  "endLine": 371,
                  "endColumn": 53,
                  "snippet": {
                    "text": "     and message, e.g. \"File is not available (404 Not Found)\"\n\nE\bEN\bNV\bVI\bIR\bRO\bON\bNM\bME\bEN\bNT\bT\n     FETCH_BIND_ADDRESS  Specifies a host name or IP address to which sockets\n                         used for outgoing connections will be bound.\n\n     HTTP_AUTH           Specifies HTTP authorization parameters as a colon-\n",
                    "rendered": {
                      "text": "     and message, e.g. \"File is not available (404 Not Found)\"\n\nE\bEN\bNV\bVI\bIR\bRO\bON\bNM\bME\bEN\bNT\bT\n     FETCH_BIND_ADDRESS  Specifies a host name or IP address to which sockets\n                         used for outgoing connections will be bound.\n\n     HTTP_AUTH           Specifies HTTP authorization parameters as a colon-\n",
                      "markdown": "`     and message, e.g. \"File is not available (404 Not Found)\"\n\nE\bEN\bNV\bVI\bIR\bRO\bON\bNM\bME\bEN\bNT\bT\n     FETCH_BIND_ADDRESS  Specifies a host name or IP address to which sockets\n                         used for outgoing connections will be bound.\n\n     HTTP_AUTH           Specifies HTTP authorization parameters as a colon-\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.cat3"
                },
                "region": {
                  "startLine": 335,
                  "startColumn": 24,
                  "endLine": 335,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n     [FETCH_AUTH]        Authentication failed\n\n     [FETCH_DOWN]        Service unavailable\n\n     [FETCH_EXISTS]      File exists\n\n",
                    "rendered": {
                      "text": "\n     [FETCH_AUTH]        Authentication failed\n\n     [FETCH_DOWN]        Service unavailable\n\n     [FETCH_EXISTS]      File exists\n\n",
                      "markdown": "`\n     [FETCH_AUTH]        Authentication failed\n\n     [FETCH_DOWN]        Service unavailable\n\n     [FETCH_EXISTS]      File exists\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.cat3"
                },
                "region": {
                  "startLine": 269,
                  "startColumn": 135,
                  "endLine": 269,
                  "endColumn": 140,
                  "snippet": {
                    "text": "     them.\n\nF\bFT\bTP\bP S\bSC\bCH\bHE\bEM\bME\bE\n     f\bfe\bet\btc\bch\bhX\bXG\bGe\bet\btF\bFT\bTP\bP(), f\bfe\bet\btc\bch\bhG\bGe\bet\btF\bFT\bTP\bP(), and f\bfe\bet\btc\bch\bhP\bPu\but\btF\bFT\bTP\bP() implement the FTP proto-\n     col as described in RFC 959.\n\n     By default l\bli\bib\bbf\bfe\bet\btc\bch\bh will attempt to use passive mode first and only fall-\n",
                    "rendered": {
                      "text": "     them.\n\nF\bFT\bTP\bP S\bSC\bCH\bHE\bEM\bME\bE\n     f\bfe\bet\btc\bch\bhX\bXG\bGe\bet\btF\bFT\bTP\bP(), f\bfe\bet\btc\bch\bhG\bGe\bet\btF\bFT\bTP\bP(), and f\bfe\bet\btc\bch\bhP\bPu\but\btF\bFT\bTP\bP() implement the FTP proto-\n     col as described in RFC 959.\n\n     By default l\bli\bib\bbf\bfe\bet\btc\bch\bh will attempt to use passive mode first and only fall-\n",
                      "markdown": "`     them.\n\nF\bFT\bTP\bP S\bSC\bCH\bHE\bEM\bME\bE\n     f\bfe\bet\btc\bch\bhX\bXG\bGe\bet\btF\bFT\bTP\bP(), f\bfe\bet\btc\bch\bhG\bGe\bet\btF\bFT\bTP\bP(), and f\bfe\bet\btc\bch\bhP\bPu\but\btF\bFT\bTP\bP() implement the FTP proto-\n     col as described in RFC 959.\n\n     By default l\bli\bib\bbf\bfe\bet\btc\bch\bh will attempt to use passive mode first and only fall-\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.cat3"
                },
                "region": {
                  "startLine": 253,
                  "startColumn": 48,
                  "endLine": 253,
                  "endColumn": 53,
                  "snippet": {
                    "text": "P\bPR\bRO\bOT\bTO\bOC\bCO\bOL\bL I\bIN\bND\bDE\bEP\bPE\bEN\bND\bDE\bEN\bNT\bT F\bFL\bLA\bAG\bGS\bS\n     If the `i' (if-modified-since) flag is specified, the library will try to\n     fetch the content only if it is newer than _\bl_\ba_\bs_\bt_\b__\bm_\bo_\bd_\bi_\bf_\bi_\be_\bd.  For HTTP an\n     If-Modified-Since HTTP header is sent.  For FTP a MTDM command is sent\n     first and compared locally.  For FILE the source file is compared.\n\nF\bFI\bIL\bLE\bE S\bSC\bCH\bHE\bEM\bME\bE\n",
                    "rendered": {
                      "text": "P\bPR\bRO\bOT\bTO\bOC\bCO\bOL\bL I\bIN\bND\bDE\bEP\bPE\bEN\bND\bDE\bEN\bNT\bT F\bFL\bLA\bAG\bGS\bS\n     If the `i' (if-modified-since) flag is specified, the library will try to\n     fetch the content only if it is newer than _\bl_\ba_\bs_\bt_\b__\bm_\bo_\bd_\bi_\bf_\bi_\be_\bd.  For HTTP an\n     If-Modified-Since HTTP header is sent.  For FTP a MTDM command is sent\n     first and compared locally.  For FILE the source file is compared.\n\nF\bFI\bIL\bLE\bE S\bSC\bCH\bHE\bEM\bME\bE\n",
                      "markdown": "`P\bPR\bRO\bOT\bTO\bOC\bCO\bOL\bL I\bIN\bND\bDE\bEP\bPE\bEN\bND\bDE\bEN\bNT\bT F\bFL\bLA\bAG\bGS\bS\n     If the `i' (if-modified-since) flag is specified, the library will try to\n     fetch the content only if it is newer than _\bl_\ba_\bs_\bt_\b__\bm_\bo_\bd_\bi_\bf_\bi_\be_\bd.  For HTTP an\n     If-Modified-Since HTTP header is sent.  For FTP a MTDM command is sent\n     first and compared locally.  For FILE the source file is compared.\n\nF\bFI\bIL\bLE\bE S\bSC\bCH\bHE\bEM\bME\bE\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.cat3"
                },
                "region": {
                  "startLine": 239,
                  "startColumn": 14,
                  "endLine": 239,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\n     f\bfe\bet\btc\bch\bhX\bXG\bGe\bet\bt(), f\bfe\bet\btc\bch\bhG\bGe\bet\bt(), f\bfe\bet\btc\bch\bhP\bPu\but\bt(), and f\bfe\bet\btc\bch\bhS\bSt\bta\bat\bt() are similar to\n     f\bfe\bet\btc\bch\bhX\bXG\bGe\bet\btU\bUR\bRL\bL(), f\bfe\bet\btc\bch\bhG\bGe\bet\btU\bUR\bRL\bL(), f\bfe\bet\btc\bch\bhP\bPu\but\btU\bUR\bRL\bL(), and f\bfe\bet\btc\bch\bhS\bSt\bta\bat\btU\bUR\bRL\bL(), except\n     that they expect a pre-parsed URL in the form of a pointer to a _\bs_\bt_\br_\bu_\bc_\bt\n     _\bu_\br_\bl rather than a string.\n\n     All of the f\bfe\bet\btc\bch\bhX\bXG\bGe\bet\btX\bXX\bXX\bX(), f\bfe\bet\btc\bch\bhG\bGe\bet\btX\bXX\bXX\bX(), and f\bfe\bet\btc\bch\bhP\bPu\but\btX\bXX\bXX\bX() functions\n",
                    "rendered": {
                      "text": "\n     f\bfe\bet\btc\bch\bhX\bXG\bGe\bet\bt(), f\bfe\bet\btc\bch\bhG\bGe\bet\bt(), f\bfe\bet\btc\bch\bhP\bPu\but\bt(), and f\bfe\bet\btc\bch\bhS\bSt\bta\bat\bt() are similar to\n     f\bfe\bet\btc\bch\bhX\bXG\bGe\bet\btU\bUR\bRL\bL(), f\bfe\bet\btc\bch\bhG\bGe\bet\btU\bUR\bRL\bL(), f\bfe\bet\btc\bch\bhP\bPu\but\btU\bUR\bRL\bL(), and f\bfe\bet\btc\bch\bhS\bSt\bta\bat\btU\bUR\bRL\bL(), except\n     that they expect a pre-parsed URL in the form of a pointer to a _\bs_\bt_\br_\bu_\bc_\bt\n     _\bu_\br_\bl rather than a string.\n\n     All of the f\bfe\bet\btc\bch\bhX\bXG\bGe\bet\btX\bXX\bXX\bX(), f\bfe\bet\btc\bch\bhG\bGe\bet\btX\bXX\bXX\bX(), and f\bfe\bet\btc\bch\bhP\bPu\but\btX\bXX\bXX\bX() functions\n",
                      "markdown": "`\n     f\bfe\bet\btc\bch\bhX\bXG\bGe\bet\bt(), f\bfe\bet\btc\bch\bhG\bGe\bet\bt(), f\bfe\bet\btc\bch\bhP\bPu\but\bt(), and f\bfe\bet\btc\bch\bhS\bSt\bta\bat\bt() are similar to\n     f\bfe\bet\btc\bch\bhX\bXG\bGe\bet\btU\bUR\bRL\bL(), f\bfe\bet\btc\bch\bhG\bGe\bet\btU\bUR\bRL\bL(), f\bfe\bet\btc\bch\bhP\bPu\but\btU\bUR\bRL\bL(), and f\bfe\bet\btc\bch\bhS\bSt\bta\bat\btU\bUR\bRL\bL(), except\n     that they expect a pre-parsed URL in the form of a pointer to a _\bs_\bt_\br_\bu_\bc_\bt\n     _\bu_\br_\bl rather than a string.\n\n     All of the f\bfe\bet\btc\bch\bhX\bXG\bGe\bet\btX\bXX\bXX\bX(), f\bfe\bet\btc\bch\bhG\bGe\bet\btX\bXX\bXX\bX(), and f\bfe\bet\btc\bch\bhP\bPu\but\btX\bXX\bXX\bX() functions\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.cat3"
                },
                "region": {
                  "startLine": 200,
                  "startColumn": 66,
                  "endLine": 200,
                  "endColumn": 72,
                  "snippet": {
                    "text": "\n     If the size could not be obtained from the server, the _\bs_\bi_\bz_\be field is set\n     to -1.  If the modification time could not be obtained from the server,\n     the _\bm_\bt_\bi_\bm_\be field is set to the epoch.  If the access time could not be\n     obtained from the server, the _\ba_\bt_\bi_\bm_\be field is set to the modification\n     time.\n\n",
                    "rendered": {
                      "text": "\n     If the size could not be obtained from the server, the _\bs_\bi_\bz_\be field is set\n     to -1.  If the modification time could not be obtained from the server,\n     the _\bm_\bt_\bi_\bm_\be field is set to the epoch.  If the access time could not be\n     obtained from the server, the _\ba_\bt_\bi_\bm_\be field is set to the modification\n     time.\n\n",
                      "markdown": "`\n     If the size could not be obtained from the server, the _\bs_\bi_\bz_\be field is set\n     to -1.  If the modification time could not be obtained from the server,\n     the _\bm_\bt_\bi_\bm_\be field is set to the epoch.  If the access time could not be\n     obtained from the server, the _\ba_\bt_\bi_\bm_\be field is set to the modification\n     time.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/fetch.cat3"
                },
                "region": {
                  "startLine": 199,
                  "startColumn": 32,
                  "endLine": 199,
                  "endColumn": 38,
                  "snippet": {
                    "text": "     };\n\n     If the size could not be obtained from the server, the _\bs_\bi_\bz_\be field is set\n     to -1.  If the modification time could not be obtained from the server,\n     the _\bm_\bt_\bi_\bm_\be field is set to the epoch.  If the access time could not be\n     obtained from the server, the _\ba_\bt_\bi_\bm_\be field is set to the modification\n     time.\n",
                    "rendered": {
                      "text": "     };\n\n     If the size could not be obtained from the server, the _\bs_\bi_\bz_\be field is set\n     to -1.  If the modification time could not be obtained from the server,\n     the _\bm_\bt_\bi_\bm_\be field is set to the epoch.  If the access time could not be\n     obtained from the server, the _\ba_\bt_\bi_\bm_\be field is set to the modification\n     time.\n",
                      "markdown": "`     };\n\n     If the size could not be obtained from the server, the _\bs_\bi_\bz_\be field is set\n     to -1.  If the modification time could not be obtained from the server,\n     the _\bm_\bt_\bi_\bm_\be field is set to the epoch.  If the access time could not be\n     obtained from the server, the _\ba_\bt_\bi_\bm_\be field is set to the modification\n     time.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/http.errors"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 3,
                  "endLine": 44,
                  "endColumn": 12,
                  "snippet": {
                    "text": "501 PROTO\tNot Implemented\n502 SERVER\tBad Gateway\n503 TEMP\tService Unavailable\n504 TIMEOUT\tGateway Time-out\n505 PROTO\tHTTP Version not supported\n999 PROTO\tProtocol error\n",
                    "rendered": {
                      "text": "501 PROTO\tNot Implemented\n502 SERVER\tBad Gateway\n503 TEMP\tService Unavailable\n504 TIMEOUT\tGateway Time-out\n505 PROTO\tHTTP Version not supported\n999 PROTO\tProtocol error\n",
                      "markdown": "`501 PROTO\tNot Implemented\n502 SERVER\tBad Gateway\n503 TEMP\tService Unavailable\n504 TIMEOUT\tGateway Time-out\n505 PROTO\tHTTP Version not supported\n999 PROTO\tProtocol error\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/http.errors"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 8,
                  "endLine": 43,
                  "endColumn": 17,
                  "snippet": {
                    "text": "500 SERVER\tInternal Server Error\n501 PROTO\tNot Implemented\n502 SERVER\tBad Gateway\n503 TEMP\tService Unavailable\n504 TIMEOUT\tGateway Time-out\n505 PROTO\tHTTP Version not supported\n999 PROTO\tProtocol error\n",
                    "rendered": {
                      "text": "500 SERVER\tInternal Server Error\n501 PROTO\tNot Implemented\n502 SERVER\tBad Gateway\n503 TEMP\tService Unavailable\n504 TIMEOUT\tGateway Time-out\n505 PROTO\tHTTP Version not supported\n999 PROTO\tProtocol error\n",
                      "markdown": "`500 SERVER\tInternal Server Error\n501 PROTO\tNot Implemented\n502 SERVER\tBad Gateway\n503 TEMP\tService Unavailable\n504 TIMEOUT\tGateway Time-out\n505 PROTO\tHTTP Version not supported\n999 PROTO\tProtocol error\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/http.errors"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 3,
                  "endLine": 30,
                  "endColumn": 12,
                  "snippet": {
                    "text": "405 PROTO\tMethod Not Allowed\n406 PROTO\tNot Acceptable\n407 AUTH\tProxy Authentication Required\n408 TIMEOUT\tRequest Time-out\n409 EXISTS\tConflict\n410 UNAVAIL\tGone\n411 PROTO\tLength Required\n",
                    "rendered": {
                      "text": "405 PROTO\tMethod Not Allowed\n406 PROTO\tNot Acceptable\n407 AUTH\tProxy Authentication Required\n408 TIMEOUT\tRequest Time-out\n409 EXISTS\tConflict\n410 UNAVAIL\tGone\n411 PROTO\tLength Required\n",
                      "markdown": "`405 PROTO\tMethod Not Allowed\n406 PROTO\tNot Acceptable\n407 AUTH\tProxy Authentication Required\n408 TIMEOUT\tRequest Time-out\n409 EXISTS\tConflict\n410 UNAVAIL\tGone\n411 PROTO\tLength Required\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/http.c"
                },
                "region": {
                  "startLine": 967,
                  "startColumn": 30,
                  "endLine": 967,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t\t\t\thttp_seterr(conn->err);\n\t\t\t\tgoto ouch;\n\t\t\t}\n\t\t\t/* try again, but send the password this time */\n\t\t\tif (verbose)\n\t\t\t\tfetch_info(\"server requires authorization\");\n\t\t\tbreak;\n",
                    "rendered": {
                      "text": "\t\t\t\thttp_seterr(conn->err);\n\t\t\t\tgoto ouch;\n\t\t\t}\n\t\t\t/* try again, but send the password this time */\n\t\t\tif (verbose)\n\t\t\t\tfetch_info(\"server requires authorization\");\n\t\t\tbreak;\n",
                      "markdown": "`\t\t\t\thttp_seterr(conn->err);\n\t\t\t\tgoto ouch;\n\t\t\t}\n\t\t\t/* try again, but send the password this time */\n\t\t\tif (verbose)\n\t\t\t\tfetch_info(\"server requires authorization\");\n\t\t\tbreak;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/http.c"
                },
                "region": {
                  "startLine": 588,
                  "startColumn": 23,
                  "endLine": 588,
                  "endColumn": 31,
                  "snippet": {
                    "text": "}\n\n/*\n * Encode username and password\n */\nstatic int\nhttp_basic_auth(conn_t *conn, const char *hdr, const char *usr, const char *pwd)\n",
                    "rendered": {
                      "text": "}\n\n/*\n * Encode username and password\n */\nstatic int\nhttp_basic_auth(conn_t *conn, const char *hdr, const char *usr, const char *pwd)\n",
                      "markdown": "`}\n\n/*\n * Encode username and password\n */\nstatic int\nhttp_basic_auth(conn_t *conn, const char *hdr, const char *usr, const char *pwd)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/http.c"
                },
                "region": {
                  "startLine": 575,
                  "startColumn": 11,
                  "endLine": 575,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\tcase 1:\n\t\tt = src[0] << 16;\n\t\tdst[0] = base64[(t >> 18) & 0x3f];\n\t\tdst[1] = base64[(t >> 12) & 0x3f];\n\t\tdst[2] = dst[3] = '=';\n\t\tdst += 4;\n\t\tbreak;\n",
                    "rendered": {
                      "text": "\tcase 1:\n\t\tt = src[0] << 16;\n\t\tdst[0] = base64[(t >> 18) & 0x3f];\n\t\tdst[1] = base64[(t >> 12) & 0x3f];\n\t\tdst[2] = dst[3] = '=';\n\t\tdst += 4;\n\t\tbreak;\n",
                      "markdown": "`\tcase 1:\n\t\tt = src[0] << 16;\n\t\tdst[0] = base64[(t >> 18) & 0x3f];\n\t\tdst[1] = base64[(t >> 12) & 0x3f];\n\t\tdst[2] = dst[3] = '=';\n\t\tdst += 4;\n\t\tbreak;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/http.c"
                },
                "region": {
                  "startLine": 574,
                  "startColumn": 11,
                  "endLine": 574,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t\tbreak;\n\tcase 1:\n\t\tt = src[0] << 16;\n\t\tdst[0] = base64[(t >> 18) & 0x3f];\n\t\tdst[1] = base64[(t >> 12) & 0x3f];\n\t\tdst[2] = dst[3] = '=';\n\t\tdst += 4;\n",
                    "rendered": {
                      "text": "\t\tbreak;\n\tcase 1:\n\t\tt = src[0] << 16;\n\t\tdst[0] = base64[(t >> 18) & 0x3f];\n\t\tdst[1] = base64[(t >> 12) & 0x3f];\n\t\tdst[2] = dst[3] = '=';\n\t\tdst += 4;\n",
                      "markdown": "`\t\tbreak;\n\tcase 1:\n\t\tt = src[0] << 16;\n\t\tdst[0] = base64[(t >> 18) & 0x3f];\n\t\tdst[1] = base64[(t >> 12) & 0x3f];\n\t\tdst[2] = dst[3] = '=';\n\t\tdst += 4;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/http.c"
                },
                "region": {
                  "startLine": 568,
                  "startColumn": 11,
                  "endLine": 568,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t\tt = (src[0] << 16) | (src[1] << 8);\n\t\tdst[0] = base64[(t >> 18) & 0x3f];\n\t\tdst[1] = base64[(t >> 12) & 0x3f];\n\t\tdst[2] = base64[(t >> 6) & 0x3f];\n\t\tdst[3] = '=';\n\t\tdst += 4;\n\t\tbreak;\n",
                    "rendered": {
                      "text": "\t\tt = (src[0] << 16) | (src[1] << 8);\n\t\tdst[0] = base64[(t >> 18) & 0x3f];\n\t\tdst[1] = base64[(t >> 12) & 0x3f];\n\t\tdst[2] = base64[(t >> 6) & 0x3f];\n\t\tdst[3] = '=';\n\t\tdst += 4;\n\t\tbreak;\n",
                      "markdown": "`\t\tt = (src[0] << 16) | (src[1] << 8);\n\t\tdst[0] = base64[(t >> 18) & 0x3f];\n\t\tdst[1] = base64[(t >> 12) & 0x3f];\n\t\tdst[2] = base64[(t >> 6) & 0x3f];\n\t\tdst[3] = '=';\n\t\tdst += 4;\n\t\tbreak;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/http.c"
                },
                "region": {
                  "startLine": 567,
                  "startColumn": 11,
                  "endLine": 567,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\tcase 2:\n\t\tt = (src[0] << 16) | (src[1] << 8);\n\t\tdst[0] = base64[(t >> 18) & 0x3f];\n\t\tdst[1] = base64[(t >> 12) & 0x3f];\n\t\tdst[2] = base64[(t >> 6) & 0x3f];\n\t\tdst[3] = '=';\n\t\tdst += 4;\n",
                    "rendered": {
                      "text": "\tcase 2:\n\t\tt = (src[0] << 16) | (src[1] << 8);\n\t\tdst[0] = base64[(t >> 18) & 0x3f];\n\t\tdst[1] = base64[(t >> 12) & 0x3f];\n\t\tdst[2] = base64[(t >> 6) & 0x3f];\n\t\tdst[3] = '=';\n\t\tdst += 4;\n",
                      "markdown": "`\tcase 2:\n\t\tt = (src[0] << 16) | (src[1] << 8);\n\t\tdst[0] = base64[(t >> 18) & 0x3f];\n\t\tdst[1] = base64[(t >> 12) & 0x3f];\n\t\tdst[2] = base64[(t >> 6) & 0x3f];\n\t\tdst[3] = '=';\n\t\tdst += 4;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/http.c"
                },
                "region": {
                  "startLine": 566,
                  "startColumn": 11,
                  "endLine": 566,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\tswitch (l) {\n\tcase 2:\n\t\tt = (src[0] << 16) | (src[1] << 8);\n\t\tdst[0] = base64[(t >> 18) & 0x3f];\n\t\tdst[1] = base64[(t >> 12) & 0x3f];\n\t\tdst[2] = base64[(t >> 6) & 0x3f];\n\t\tdst[3] = '=';\n",
                    "rendered": {
                      "text": "\tswitch (l) {\n\tcase 2:\n\t\tt = (src[0] << 16) | (src[1] << 8);\n\t\tdst[0] = base64[(t >> 18) & 0x3f];\n\t\tdst[1] = base64[(t >> 12) & 0x3f];\n\t\tdst[2] = base64[(t >> 6) & 0x3f];\n\t\tdst[3] = '=';\n",
                      "markdown": "`\tswitch (l) {\n\tcase 2:\n\t\tt = (src[0] << 16) | (src[1] << 8);\n\t\tdst[0] = base64[(t >> 18) & 0x3f];\n\t\tdst[1] = base64[(t >> 12) & 0x3f];\n\t\tdst[2] = base64[(t >> 6) & 0x3f];\n\t\tdst[3] = '=';\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/http.c"
                },
                "region": {
                  "startLine": 558,
                  "startColumn": 11,
                  "endLine": 558,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t\tdst[0] = base64[(t >> 18) & 0x3f];\n\t\tdst[1] = base64[(t >> 12) & 0x3f];\n\t\tdst[2] = base64[(t >> 6) & 0x3f];\n\t\tdst[3] = base64[(t >> 0) & 0x3f];\n\t\tsrc += 3; l -= 3;\n\t\tdst += 4;\n\t}\n",
                    "rendered": {
                      "text": "\t\tdst[0] = base64[(t >> 18) & 0x3f];\n\t\tdst[1] = base64[(t >> 12) & 0x3f];\n\t\tdst[2] = base64[(t >> 6) & 0x3f];\n\t\tdst[3] = base64[(t >> 0) & 0x3f];\n\t\tsrc += 3; l -= 3;\n\t\tdst += 4;\n\t}\n",
                      "markdown": "`\t\tdst[0] = base64[(t >> 18) & 0x3f];\n\t\tdst[1] = base64[(t >> 12) & 0x3f];\n\t\tdst[2] = base64[(t >> 6) & 0x3f];\n\t\tdst[3] = base64[(t >> 0) & 0x3f];\n\t\tsrc += 3; l -= 3;\n\t\tdst += 4;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/http.c"
                },
                "region": {
                  "startLine": 557,
                  "startColumn": 11,
                  "endLine": 557,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t\tt = (src[0] << 16) | (src[1] << 8) | src[2];\n\t\tdst[0] = base64[(t >> 18) & 0x3f];\n\t\tdst[1] = base64[(t >> 12) & 0x3f];\n\t\tdst[2] = base64[(t >> 6) & 0x3f];\n\t\tdst[3] = base64[(t >> 0) & 0x3f];\n\t\tsrc += 3; l -= 3;\n\t\tdst += 4;\n",
                    "rendered": {
                      "text": "\t\tt = (src[0] << 16) | (src[1] << 8) | src[2];\n\t\tdst[0] = base64[(t >> 18) & 0x3f];\n\t\tdst[1] = base64[(t >> 12) & 0x3f];\n\t\tdst[2] = base64[(t >> 6) & 0x3f];\n\t\tdst[3] = base64[(t >> 0) & 0x3f];\n\t\tsrc += 3; l -= 3;\n\t\tdst += 4;\n",
                      "markdown": "`\t\tt = (src[0] << 16) | (src[1] << 8) | src[2];\n\t\tdst[0] = base64[(t >> 18) & 0x3f];\n\t\tdst[1] = base64[(t >> 12) & 0x3f];\n\t\tdst[2] = base64[(t >> 6) & 0x3f];\n\t\tdst[3] = base64[(t >> 0) & 0x3f];\n\t\tsrc += 3; l -= 3;\n\t\tdst += 4;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/http.c"
                },
                "region": {
                  "startLine": 556,
                  "startColumn": 11,
                  "endLine": 556,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\twhile (l >= 3) {\n\t\tt = (src[0] << 16) | (src[1] << 8) | src[2];\n\t\tdst[0] = base64[(t >> 18) & 0x3f];\n\t\tdst[1] = base64[(t >> 12) & 0x3f];\n\t\tdst[2] = base64[(t >> 6) & 0x3f];\n\t\tdst[3] = base64[(t >> 0) & 0x3f];\n\t\tsrc += 3; l -= 3;\n",
                    "rendered": {
                      "text": "\twhile (l >= 3) {\n\t\tt = (src[0] << 16) | (src[1] << 8) | src[2];\n\t\tdst[0] = base64[(t >> 18) & 0x3f];\n\t\tdst[1] = base64[(t >> 12) & 0x3f];\n\t\tdst[2] = base64[(t >> 6) & 0x3f];\n\t\tdst[3] = base64[(t >> 0) & 0x3f];\n\t\tsrc += 3; l -= 3;\n",
                      "markdown": "`\twhile (l >= 3) {\n\t\tt = (src[0] << 16) | (src[1] << 8) | src[2];\n\t\tdst[0] = base64[(t >> 18) & 0x3f];\n\t\tdst[1] = base64[(t >> 12) & 0x3f];\n\t\tdst[2] = base64[(t >> 6) & 0x3f];\n\t\tdst[3] = base64[(t >> 0) & 0x3f];\n\t\tsrc += 3; l -= 3;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/http.c"
                },
                "region": {
                  "startLine": 555,
                  "startColumn": 11,
                  "endLine": 555,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n\twhile (l >= 3) {\n\t\tt = (src[0] << 16) | (src[1] << 8) | src[2];\n\t\tdst[0] = base64[(t >> 18) & 0x3f];\n\t\tdst[1] = base64[(t >> 12) & 0x3f];\n\t\tdst[2] = base64[(t >> 6) & 0x3f];\n\t\tdst[3] = base64[(t >> 0) & 0x3f];\n",
                    "rendered": {
                      "text": "\n\twhile (l >= 3) {\n\t\tt = (src[0] << 16) | (src[1] << 8) | src[2];\n\t\tdst[0] = base64[(t >> 18) & 0x3f];\n\t\tdst[1] = base64[(t >> 12) & 0x3f];\n\t\tdst[2] = base64[(t >> 6) & 0x3f];\n\t\tdst[3] = base64[(t >> 0) & 0x3f];\n",
                      "markdown": "`\n\twhile (l >= 3) {\n\t\tt = (src[0] << 16) | (src[1] << 8) | src[2];\n\t\tdst[0] = base64[(t >> 18) & 0x3f];\n\t\tdst[1] = base64[(t >> 12) & 0x3f];\n\t\tdst[2] = base64[(t >> 6) & 0x3f];\n\t\tdst[3] = base64[(t >> 0) & 0x3f];\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/libfetch/http.c"
                },
                "region": {
                  "startLine": 540,
                  "startColumn": 19,
                  "endLine": 540,
                  "endColumn": 25,
                  "snippet": {
                    "text": "static char *\nhttp_base64(const char *src)\n{\n\tstatic const char base64[] =\n\t    \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\t    \"abcdefghijklmnopqrstuvwxyz\"\n\t    \"0123456789+/\";\n",
                    "rendered": {
                      "text": "static char *\nhttp_base64(const char *src)\n{\n\tstatic const char base64[] =\n\t    \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\t    \"abcdefghijklmnopqrstuvwxyz\"\n\t    \"0123456789+/\";\n",
                      "markdown": "`static char *\nhttp_base64(const char *src)\n{\n\tstatic const char base64[] =\n\t    \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\t    \"abcdefghijklmnopqrstuvwxyz\"\n\t    \"0123456789+/\";\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/test/Makefile"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 2,
                  "endLine": 54,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\tif ! APK=\"$(APK)\" ROOT=\"$(testroot)\" SYSREPO=\"$(SYSREPO)\" sh -ex ./$< > $(basename $@).out 2>&1; then\\\n\t\t\techo \" FAIL\";\\\n\t\t\tprintf '%s\\n' \"------------- output -------------\" >&2;\\\n\t\t\tcat $(basename $@).out >&2;\\\n\t\t\tprintf '%s\\n' \"----------------------------------\" >&2;\\\n\t\t\texit 1;\\\n\t\tfi ;\\\n",
                    "rendered": {
                      "text": "\t\tif ! APK=\"$(APK)\" ROOT=\"$(testroot)\" SYSREPO=\"$(SYSREPO)\" sh -ex ./$< > $(basename $@).out 2>&1; then\\\n\t\t\techo \" FAIL\";\\\n\t\t\tprintf '%s\\n' \"------------- output -------------\" >&2;\\\n\t\t\tcat $(basename $@).out >&2;\\\n\t\t\tprintf '%s\\n' \"----------------------------------\" >&2;\\\n\t\t\texit 1;\\\n\t\tfi ;\\\n",
                      "markdown": "`\t\tif ! APK=\"$(APK)\" ROOT=\"$(testroot)\" SYSREPO=\"$(SYSREPO)\" sh -ex ./$< > $(basename $@).out 2>&1; then\\\n\t\t\techo \" FAIL\";\\\n\t\t\tprintf '%s\\n' \"------------- output -------------\" >&2;\\\n\t\t\tcat $(basename $@).out >&2;\\\n\t\t\tprintf '%s\\n' \"----------------------------------\" >&2;\\\n\t\t\texit 1;\\\n\t\tfi ;\\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/test/Makefile"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 29,
                  "endLine": 30,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\t@cd $@ &&\\\n\t\tfor i in */APKBUILD; do \\\n\t\t\t( cd $${i%/*} && REPODEST=\"$$PWD/../..\" abuild -R ) \\\n\t\t\t\t>> ../repos.out 2>&1 || { cat ../repos.out >&2; exit 1; } \\\n\t\tdone\n\n\n",
                    "rendered": {
                      "text": "\t@cd $@ &&\\\n\t\tfor i in */APKBUILD; do \\\n\t\t\t( cd $${i%/*} && REPODEST=\"$$PWD/../..\" abuild -R ) \\\n\t\t\t\t>> ../repos.out 2>&1 || { cat ../repos.out >&2; exit 1; } \\\n\t\tdone\n\n\n",
                      "markdown": "`\t@cd $@ &&\\\n\t\tfor i in */APKBUILD; do \\\n\t\t\t( cd $${i%/*} && REPODEST=\"$$PWD/../..\" abuild -R ) \\\n\t\t\t\t>> ../repos.out 2>&1 || { cat ../repos.out >&2; exit 1; } \\\n\t\tdone\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/src/adb_walk_gentext.c"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 11,
                  "endLine": 104,
                  "endColumn": 15,
                  "snippet": {
                    "text": "{\n\tstruct adb_walk_gentext *dt = container_of(d, struct adb_walk_gentext, d);\n\tFILE *out = dt->out;\n\tapk_blob_t nl = APK_BLOB_STR(\"\\n\");\n\n\tadb_walk_gentext_indent(dt);\n\n",
                    "rendered": {
                      "text": "{\n\tstruct adb_walk_gentext *dt = container_of(d, struct adb_walk_gentext, d);\n\tFILE *out = dt->out;\n\tapk_blob_t nl = APK_BLOB_STR(\"\\n\");\n\n\tadb_walk_gentext_indent(dt);\n\n",
                      "markdown": "`{\n\tstruct adb_walk_gentext *dt = container_of(d, struct adb_walk_gentext, d);\n\tFILE *out = dt->out;\n\tapk_blob_t nl = APK_BLOB_STR(\"\\n\");\n\n\tadb_walk_gentext_indent(dt);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/src/io.c"
                },
                "region": {
                  "startLine": 457,
                  "endLine": 457,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t\tgoto err;\n\t}\n\n\ttee = malloc(sizeof *tee);\n\tif (!tee) {\n\t\tr = -ENOMEM;\n\t\tgoto err;\n",
                    "rendered": {
                      "text": "\t\tgoto err;\n\t}\n\n\ttee = malloc(sizeof *tee);\n\tif (!tee) {\n\t\tr = -ENOMEM;\n\t\tgoto err;\n",
                      "markdown": "`\t\tgoto err;\n\t}\n\n\ttee = malloc(sizeof *tee);\n\tif (!tee) {\n\t\tr = -ENOMEM;\n\t\tgoto err;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/src/app_mkpkg.c"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 24,
                  "endLine": 119,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t\tapk_blob_split(APK_BLOB_STR(optarg), APK_BLOB_STRLIT(\":\"), &l, &r);\n\t\ti = adb_s_field_by_name_blob(&schema_scripts, l);\n\t\tif (!i) {\n\t\t\tapk_err(out, \"invalid script type: \" BLOB_FMT, BLOB_PRINTF(l));\n\t\t\treturn -EINVAL;\n\t\t}\n\t\tret = apk_blob_from_file(AT_FDCWD, r.ptr, &ictx->script[i]);\n",
                    "rendered": {
                      "text": "\t\tapk_blob_split(APK_BLOB_STR(optarg), APK_BLOB_STRLIT(\":\"), &l, &r);\n\t\ti = adb_s_field_by_name_blob(&schema_scripts, l);\n\t\tif (!i) {\n\t\t\tapk_err(out, \"invalid script type: \" BLOB_FMT, BLOB_PRINTF(l));\n\t\t\treturn -EINVAL;\n\t\t}\n\t\tret = apk_blob_from_file(AT_FDCWD, r.ptr, &ictx->script[i]);\n",
                      "markdown": "`\t\tapk_blob_split(APK_BLOB_STR(optarg), APK_BLOB_STRLIT(\":\"), &l, &r);\n\t\ti = adb_s_field_by_name_blob(&schema_scripts, l);\n\t\tif (!i) {\n\t\t\tapk_err(out, \"invalid script type: \" BLOB_FMT, BLOB_PRINTF(l));\n\t\t\treturn -EINVAL;\n\t\t}\n\t\tret = apk_blob_from_file(AT_FDCWD, r.ptr, &ictx->script[i]);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/src/print.c"
                },
                "region": {
                  "startLine": 211,
                  "startColumn": 21,
                  "endLine": 211,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\n\tgmtime_r(&now, &tm);\n\tstrftime(when, sizeof(when), \"%Y-%m-%d %H:%M:%S\", &tm);\n\tfprintf(out->log, \"` at %s\\n\", when);\n}\n\nvoid apk_print_progress(struct apk_progress *p, size_t done, size_t total)\n",
                    "rendered": {
                      "text": "\n\tgmtime_r(&now, &tm);\n\tstrftime(when, sizeof(when), \"%Y-%m-%d %H:%M:%S\", &tm);\n\tfprintf(out->log, \"` at %s\\n\", when);\n}\n\nvoid apk_print_progress(struct apk_progress *p, size_t done, size_t total)\n",
                      "markdown": "`\n\tgmtime_r(&now, &tm);\n\tstrftime(when, sizeof(when), \"%Y-%m-%d %H:%M:%S\", &tm);\n\tfprintf(out->log, \"` at %s\\n\", when);\n}\n\nvoid apk_print_progress(struct apk_progress *p, size_t done, size_t total)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/src/print.c"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 40,
                  "endLine": 52,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\tfunc(APKE_V2PKG_FORMAT,\t\t\"v2 package format error\") \\\n\tfunc(APKE_V2PKG_INTEGRITY,\t\"v2 package integrity error\") \\\n\tfunc(APKE_V2NDX_FORMAT,\t\t\"v2 index format error\") \\\n\tfunc(APKE_PACKAGE_NOT_FOUND,\t\"could not find a repo which provides this package (check repositories file and run 'apk update')\") \\\n\tfunc(APKE_INDEX_STALE,\t\t\"package mentioned in index not found (try 'apk update')\") \\\n\tfunc(APKE_FILE_INTEGRITY,\t\"file integrity error\") \\\n\tfunc(APKE_CACHE_NOT_AVAILABLE,\t\"cache not available\") \\\n",
                    "rendered": {
                      "text": "\tfunc(APKE_V2PKG_FORMAT,\t\t\"v2 package format error\") \\\n\tfunc(APKE_V2PKG_INTEGRITY,\t\"v2 package integrity error\") \\\n\tfunc(APKE_V2NDX_FORMAT,\t\t\"v2 index format error\") \\\n\tfunc(APKE_PACKAGE_NOT_FOUND,\t\"could not find a repo which provides this package (check repositories file and run 'apk update')\") \\\n\tfunc(APKE_INDEX_STALE,\t\t\"package mentioned in index not found (try 'apk update')\") \\\n\tfunc(APKE_FILE_INTEGRITY,\t\"file integrity error\") \\\n\tfunc(APKE_CACHE_NOT_AVAILABLE,\t\"cache not available\") \\\n",
                      "markdown": "`\tfunc(APKE_V2PKG_FORMAT,\t\t\"v2 package format error\") \\\n\tfunc(APKE_V2PKG_INTEGRITY,\t\"v2 package integrity error\") \\\n\tfunc(APKE_V2NDX_FORMAT,\t\t\"v2 index format error\") \\\n\tfunc(APKE_PACKAGE_NOT_FOUND,\t\"could not find a repo which provides this package (check repositories file and run 'apk update')\") \\\n\tfunc(APKE_INDEX_STALE,\t\t\"package mentioned in index not found (try 'apk update')\") \\\n\tfunc(APKE_FILE_INTEGRITY,\t\"file integrity error\") \\\n\tfunc(APKE_CACHE_NOT_AVAILABLE,\t\"cache not available\") \\\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/src/genhelp.lua"
                },
                "region": {
                  "startLine": 225,
                  "startColumn": 29,
                  "endLine": 225,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\tif #self.commands > 0 then\n\t\tfor _, cmd in ipairs(self.commands) do\n\t\t\tif type(cmd) == \"string\" then\n\t\t\t\ttable.insert(out, \"\\n\" .. cmd .. \":\\n\")\n\t\t\telse\n\t\t\t\ttable.insert(out, (\"  %-10s %s\\n\"):format(cmd[1], cmd[2]))\n\t\t\tend\n",
                    "rendered": {
                      "text": "\tif #self.commands > 0 then\n\t\tfor _, cmd in ipairs(self.commands) do\n\t\t\tif type(cmd) == \"string\" then\n\t\t\t\ttable.insert(out, \"\\n\" .. cmd .. \":\\n\")\n\t\t\telse\n\t\t\t\ttable.insert(out, (\"  %-10s %s\\n\"):format(cmd[1], cmd[2]))\n\t\t\tend\n",
                      "markdown": "`\tif #self.commands > 0 then\n\t\tfor _, cmd in ipairs(self.commands) do\n\t\t\tif type(cmd) == \"string\" then\n\t\t\t\ttable.insert(out, \"\\n\" .. cmd .. \":\\n\")\n\t\t\telse\n\t\t\t\ttable.insert(out, (\"  %-10s %s\\n\"):format(cmd[1], cmd[2]))\n\t\t\tend\n`"
                    }
                  },
                  "sourceLanguage": "lua"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/src/genhelp.lua"
                },
                "region": {
                  "startLine": 223,
                  "startColumn": 8,
                  "endLine": 223,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\ttable.insert(out, table.concat(self.usage, \"\\n\"))\n\ttable.insert(out, \"\\n\")\n\tif #self.commands > 0 then\n\t\tfor _, cmd in ipairs(self.commands) do\n\t\t\tif type(cmd) == \"string\" then\n\t\t\t\ttable.insert(out, \"\\n\" .. cmd .. \":\\n\")\n\t\t\telse\n",
                    "rendered": {
                      "text": "\ttable.insert(out, table.concat(self.usage, \"\\n\"))\n\ttable.insert(out, \"\\n\")\n\tif #self.commands > 0 then\n\t\tfor _, cmd in ipairs(self.commands) do\n\t\t\tif type(cmd) == \"string\" then\n\t\t\t\ttable.insert(out, \"\\n\" .. cmd .. \":\\n\")\n\t\t\telse\n",
                      "markdown": "`\ttable.insert(out, table.concat(self.usage, \"\\n\"))\n\ttable.insert(out, \"\\n\")\n\tif #self.commands > 0 then\n\t\tfor _, cmd in ipairs(self.commands) do\n\t\t\tif type(cmd) == \"string\" then\n\t\t\t\ttable.insert(out, \"\\n\" .. cmd .. \":\\n\")\n\t\t\telse\n`"
                    }
                  },
                  "sourceLanguage": "lua"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/src/genhelp.lua"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 8,
                  "endLine": 178,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\t\t\ttable.insert(out, (\"  %s\\n\"):format(k, \"\", v))\n\t\t\ttable.insert(out, indent)\n\t\telse\n\t\t\tlocal fmt = (\"  %%-%ds  \"):format(nindent - 4)\n\t\t\ttable.insert(out, fmt:format(k, v))\n\t\tend\n\n",
                    "rendered": {
                      "text": "\t\t\ttable.insert(out, (\"  %s\\n\"):format(k, \"\", v))\n\t\t\ttable.insert(out, indent)\n\t\telse\n\t\t\tlocal fmt = (\"  %%-%ds  \"):format(nindent - 4)\n\t\t\ttable.insert(out, fmt:format(k, v))\n\t\tend\n\n",
                      "markdown": "`\t\t\ttable.insert(out, (\"  %s\\n\"):format(k, \"\", v))\n\t\t\ttable.insert(out, indent)\n\t\telse\n\t\t\tlocal fmt = (\"  %%-%ds  \"):format(nindent - 4)\n\t\t\ttable.insert(out, fmt:format(k, v))\n\t\tend\n\n`"
                    }
                  },
                  "sourceLanguage": "lua"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/src/apk_trust.h"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 18,
                  "endLine": 25,
                  "endColumn": 29,
                  "snippet": {
                    "text": "struct apk_trust {\n\tstruct apk_digest_ctx dctx;\n\tstruct list_head trusted_key_list;\n\tstruct list_head private_key_list;\n\tunsigned int allow_untrusted : 1;\n\tunsigned int keys_loaded : 1;\n};\n",
                    "rendered": {
                      "text": "struct apk_trust {\n\tstruct apk_digest_ctx dctx;\n\tstruct list_head trusted_key_list;\n\tstruct list_head private_key_list;\n\tunsigned int allow_untrusted : 1;\n\tunsigned int keys_loaded : 1;\n};\n",
                      "markdown": "`struct apk_trust {\n\tstruct apk_digest_ctx dctx;\n\tstruct list_head trusted_key_list;\n\tstruct list_head private_key_list;\n\tunsigned int allow_untrusted : 1;\n\tunsigned int keys_loaded : 1;\n};\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/src/adb.c"
                },
                "region": {
                  "startLine": 1291,
                  "startColumn": 35,
                  "endLine": 1291,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\tr = adb_digest_adb(vfy, APK_DIGEST_SHA512, db->adb, &md);\n\tif (r) return r;\n\n\tlist_for_each_entry(tkey, &trust->private_key_list, key_node) {\n\t\tsig.v0 = (struct adb_sign_v0) {\n\t\t\t.hdr.sign_ver = 0,\n\t\t\t.hdr.hash_alg = APK_DIGEST_SHA512,\n",
                    "rendered": {
                      "text": "\tr = adb_digest_adb(vfy, APK_DIGEST_SHA512, db->adb, &md);\n\tif (r) return r;\n\n\tlist_for_each_entry(tkey, &trust->private_key_list, key_node) {\n\t\tsig.v0 = (struct adb_sign_v0) {\n\t\t\t.hdr.sign_ver = 0,\n\t\t\t.hdr.hash_alg = APK_DIGEST_SHA512,\n",
                      "markdown": "`\tr = adb_digest_adb(vfy, APK_DIGEST_SHA512, db->adb, &md);\n\tif (r) return r;\n\n\tlist_for_each_entry(tkey, &trust->private_key_list, key_node) {\n\t\tsig.v0 = (struct adb_sign_v0) {\n\t\t\t.hdr.sign_ver = 0,\n\t\t\t.hdr.hash_alg = APK_DIGEST_SHA512,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/src/app_info.c"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 37,
                  "endLine": 128,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tif (pkg == NULL) {\n\t\t\tapk_err(out, BLOB_FMT \": Could not find owner package\",\n\t\t\t\tBLOB_PRINTF(fn));\n\t\t\tctx->errors++;\n\t\t\tcontinue;\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\tif (pkg == NULL) {\n\t\t\tapk_err(out, BLOB_FMT \": Could not find owner package\",\n\t\t\t\tBLOB_PRINTF(fn));\n\t\t\tctx->errors++;\n\t\t\tcontinue;\n",
                      "markdown": "`\t\t}\n\n\t\tif (pkg == NULL) {\n\t\t\tapk_err(out, BLOB_FMT \": Could not find owner package\",\n\t\t\t\tBLOB_PRINTF(fn));\n\t\t\tctx->errors++;\n\t\t\tcontinue;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/src/apk.pc.in"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 14,
                  "endLine": 9,
                  "snippet": {
                    "text": "Name: apk\nDescription: Alpine Package Manager\nVersion: @VERSION@\nRequires: zlib openssl\nLibs: -L${libdir} -lapk\nCflags: -I${includedir}\n",
                    "rendered": {
                      "text": "Name: apk\nDescription: Alpine Package Manager\nVersion: @VERSION@\nRequires: zlib openssl\nLibs: -L${libdir} -lapk\nCflags: -I${includedir}\n",
                      "markdown": "`Name: apk\nDescription: Alpine Package Manager\nVersion: @VERSION@\nRequires: zlib openssl\nLibs: -L${libdir} -lapk\nCflags: -I${includedir}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/src/app_dot.c"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 4,
                  "endLine": 63,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n\tprintf( \"digraph \\\"apkindex\\\" {\\n\"\n\t\t\"  rankdir=LR;\\n\"\n\t\t\"  node [shape=box];\\n\");\n}\n\nstatic void dump_error_name(struct dot_ctx *ctx, struct apk_name *name)\n",
                    "rendered": {
                      "text": "\n\tprintf( \"digraph \\\"apkindex\\\" {\\n\"\n\t\t\"  rankdir=LR;\\n\"\n\t\t\"  node [shape=box];\\n\");\n}\n\nstatic void dump_error_name(struct dot_ctx *ctx, struct apk_name *name)\n",
                      "markdown": "`\n\tprintf( \"digraph \\\"apkindex\\\" {\\n\"\n\t\t\"  rankdir=LR;\\n\"\n\t\t\"  node [shape=box];\\n\");\n}\n\nstatic void dump_error_name(struct dot_ctx *ctx, struct apk_name *name)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/scripts/generate-meson-crossfile.sh"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 37,
                  "endLine": 43,
                  "endColumn": 42,
                  "snippet": {
                    "text": "c_args = ['$(echo ${CFLAGS} | sed -r \"s/\\s+/','/g\")']\nc_link_args = ['$(echo ${LDFLAGS} | sed -r \"s/\\s+/','/g\")']\ncpp_args = ['$(echo ${CXXFLAGS} | sed -r \"s/\\s+/','/g\")']\ncpp_link_args = ['$(echo ${LDFLAGS} | sed -r \"s/\\s+/','/g\")']\n[host_machine]\nsystem = 'linux'\ncpu_family = '${_target_cpu_family}'\n",
                    "rendered": {
                      "text": "c_args = ['$(echo ${CFLAGS} | sed -r \"s/\\s+/','/g\")']\nc_link_args = ['$(echo ${LDFLAGS} | sed -r \"s/\\s+/','/g\")']\ncpp_args = ['$(echo ${CXXFLAGS} | sed -r \"s/\\s+/','/g\")']\ncpp_link_args = ['$(echo ${LDFLAGS} | sed -r \"s/\\s+/','/g\")']\n[host_machine]\nsystem = 'linux'\ncpu_family = '${_target_cpu_family}'\n",
                      "markdown": "`c_args = ['$(echo ${CFLAGS} | sed -r \"s/\\s+/','/g\")']\nc_link_args = ['$(echo ${LDFLAGS} | sed -r \"s/\\s+/','/g\")']\ncpp_args = ['$(echo ${CXXFLAGS} | sed -r \"s/\\s+/','/g\")']\ncpp_link_args = ['$(echo ${LDFLAGS} | sed -r \"s/\\s+/','/g\")']\n[host_machine]\nsystem = 'linux'\ncpu_family = '${_target_cpu_family}'\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/scripts/generate-meson-crossfile.sh"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 33,
                  "endLine": 42,
                  "endColumn": 38,
                  "snippet": {
                    "text": "needs_exe_wrapper = true\nc_args = ['$(echo ${CFLAGS} | sed -r \"s/\\s+/','/g\")']\nc_link_args = ['$(echo ${LDFLAGS} | sed -r \"s/\\s+/','/g\")']\ncpp_args = ['$(echo ${CXXFLAGS} | sed -r \"s/\\s+/','/g\")']\ncpp_link_args = ['$(echo ${LDFLAGS} | sed -r \"s/\\s+/','/g\")']\n[host_machine]\nsystem = 'linux'\n",
                    "rendered": {
                      "text": "needs_exe_wrapper = true\nc_args = ['$(echo ${CFLAGS} | sed -r \"s/\\s+/','/g\")']\nc_link_args = ['$(echo ${LDFLAGS} | sed -r \"s/\\s+/','/g\")']\ncpp_args = ['$(echo ${CXXFLAGS} | sed -r \"s/\\s+/','/g\")']\ncpp_link_args = ['$(echo ${LDFLAGS} | sed -r \"s/\\s+/','/g\")']\n[host_machine]\nsystem = 'linux'\n",
                      "markdown": "`needs_exe_wrapper = true\nc_args = ['$(echo ${CFLAGS} | sed -r \"s/\\s+/','/g\")']\nc_link_args = ['$(echo ${LDFLAGS} | sed -r \"s/\\s+/','/g\")']\ncpp_args = ['$(echo ${CXXFLAGS} | sed -r \"s/\\s+/','/g\")']\ncpp_link_args = ['$(echo ${LDFLAGS} | sed -r \"s/\\s+/','/g\")']\n[host_machine]\nsystem = 'linux'\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/scripts/generate-meson-crossfile.sh"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 35,
                  "endLine": 41,
                  "endColumn": 40,
                  "snippet": {
                    "text": "[properties]\nneeds_exe_wrapper = true\nc_args = ['$(echo ${CFLAGS} | sed -r \"s/\\s+/','/g\")']\nc_link_args = ['$(echo ${LDFLAGS} | sed -r \"s/\\s+/','/g\")']\ncpp_args = ['$(echo ${CXXFLAGS} | sed -r \"s/\\s+/','/g\")']\ncpp_link_args = ['$(echo ${LDFLAGS} | sed -r \"s/\\s+/','/g\")']\n[host_machine]\n",
                    "rendered": {
                      "text": "[properties]\nneeds_exe_wrapper = true\nc_args = ['$(echo ${CFLAGS} | sed -r \"s/\\s+/','/g\")']\nc_link_args = ['$(echo ${LDFLAGS} | sed -r \"s/\\s+/','/g\")']\ncpp_args = ['$(echo ${CXXFLAGS} | sed -r \"s/\\s+/','/g\")']\ncpp_link_args = ['$(echo ${LDFLAGS} | sed -r \"s/\\s+/','/g\")']\n[host_machine]\n",
                      "markdown": "`[properties]\nneeds_exe_wrapper = true\nc_args = ['$(echo ${CFLAGS} | sed -r \"s/\\s+/','/g\")']\nc_link_args = ['$(echo ${LDFLAGS} | sed -r \"s/\\s+/','/g\")']\ncpp_args = ['$(echo ${CXXFLAGS} | sed -r \"s/\\s+/','/g\")']\ncpp_link_args = ['$(echo ${LDFLAGS} | sed -r \"s/\\s+/','/g\")']\n[host_machine]\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/scripts/generate-meson-crossfile.sh"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 29,
                  "endLine": 40,
                  "endColumn": 34,
                  "snippet": {
                    "text": "pkgconfig = 'pkg-config'\n[properties]\nneeds_exe_wrapper = true\nc_args = ['$(echo ${CFLAGS} | sed -r \"s/\\s+/','/g\")']\nc_link_args = ['$(echo ${LDFLAGS} | sed -r \"s/\\s+/','/g\")']\ncpp_args = ['$(echo ${CXXFLAGS} | sed -r \"s/\\s+/','/g\")']\ncpp_link_args = ['$(echo ${LDFLAGS} | sed -r \"s/\\s+/','/g\")']\n",
                    "rendered": {
                      "text": "pkgconfig = 'pkg-config'\n[properties]\nneeds_exe_wrapper = true\nc_args = ['$(echo ${CFLAGS} | sed -r \"s/\\s+/','/g\")']\nc_link_args = ['$(echo ${LDFLAGS} | sed -r \"s/\\s+/','/g\")']\ncpp_args = ['$(echo ${CXXFLAGS} | sed -r \"s/\\s+/','/g\")']\ncpp_link_args = ['$(echo ${LDFLAGS} | sed -r \"s/\\s+/','/g\")']\n",
                      "markdown": "`pkgconfig = 'pkg-config'\n[properties]\nneeds_exe_wrapper = true\nc_args = ['$(echo ${CFLAGS} | sed -r \"s/\\s+/','/g\")']\nc_link_args = ['$(echo ${LDFLAGS} | sed -r \"s/\\s+/','/g\")']\ncpp_args = ['$(echo ${CXXFLAGS} | sed -r \"s/\\s+/','/g\")']\ncpp_link_args = ['$(echo ${LDFLAGS} | sed -r \"s/\\s+/','/g\")']\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/scripts/generate-meson-crossfile.sh"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 18,
                  "endLine": 35,
                  "endColumn": 8,
                  "snippet": {
                    "text": "ar = '${AR}'\nnm = '${NM}'\nld = '${LD}'\nstrip = '${STRIP}'\nreadelf = '${READELF}'\nobjcopy = '${OBJCOPY}'\npkgconfig = 'pkg-config'\n[properties]\n",
                    "rendered": {
                      "text": "ar = '${AR}'\nnm = '${NM}'\nld = '${LD}'\nstrip = '${STRIP}'\nreadelf = '${READELF}'\nobjcopy = '${OBJCOPY}'\npkgconfig = 'pkg-config'\n[properties]\n",
                      "markdown": "`ar = '${AR}'\nnm = '${NM}'\nld = '${LD}'\nstrip = '${STRIP}'\nreadelf = '${READELF}'\nobjcopy = '${OBJCOPY}'\npkgconfig = 'pkg-config'\n[properties]\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/scripts/generate-meson-crossfile.sh"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 35,
                  "endLine": 27,
                  "endColumn": 4,
                  "snippet": {
                    "text": "esac\n\n# Keep in mind that CC, CXX etc. are the binaries to compile from host\n# to target, not from host to host!\ncat > apk.cross <<EOF\n[binaries]\nc = '${CC}'\ncpp = '${CXX}'\n",
                    "rendered": {
                      "text": "esac\n\n# Keep in mind that CC, CXX etc. are the binaries to compile from host\n# to target, not from host to host!\ncat > apk.cross <<EOF\n[binaries]\nc = '${CC}'\ncpp = '${CXX}'\n",
                      "markdown": "`esac\n\n# Keep in mind that CC, CXX etc. are the binaries to compile from host\n# to target, not from host to host!\ncat > apk.cross <<EOF\n[binaries]\nc = '${CC}'\ncpp = '${CXX}'\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/portability/unistd.h"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 9,
                  "endLine": 9,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\n#ifdef __APPLE__\n# include <crt_externs.h>\n# define environ (*_NSGetEnviron())\n#endif\n",
                    "rendered": {
                      "text": "\n#ifdef __APPLE__\n# include <crt_externs.h>\n# define environ (*_NSGetEnviron())\n#endif\n",
                      "markdown": "`\n#ifdef __APPLE__\n# include <crt_externs.h>\n# define environ (*_NSGetEnviron())\n#endif\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 17,
                  "endLine": 67,
                  "snippet": {
                    "text": "    image: debian\n    stage: test\n    script:\n        - apt-get update\n        - apt-get install -y make gcc git libssl-dev zlib1g-dev libzstd-dev lua5.3-dev lua5.2 lua-zlib-dev sudo meson\n        - unlink /bin/sh\n        - ln -s /bin/bash /bin/sh\n        - meson setup build\n",
                    "rendered": {
                      "text": "    image: debian\n    stage: test\n    script:\n        - apt-get update\n        - apt-get install -y make gcc git libssl-dev zlib1g-dev libzstd-dev lua5.3-dev lua5.2 lua-zlib-dev sudo meson\n        - unlink /bin/sh\n        - ln -s /bin/bash /bin/sh\n        - meson setup build\n",
                      "markdown": "`    image: debian\n    stage: test\n    script:\n        - apt-get update\n        - apt-get install -y make gcc git libssl-dev zlib1g-dev libzstd-dev lua5.3-dev lua5.2 lua-zlib-dev sudo meson\n        - unlink /bin/sh\n        - ln -s /bin/bash /bin/sh\n        - meson setup build\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 13,
                  "endLine": 53,
                  "snippet": {
                    "text": "    stage: test\n    script:\n        - echo https://dl-cdn.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories\n        - apk update\n        - apk add gcc git musl-dev openssl-dev linux-headers zlib-dev zstd-dev lua5.3-dev lua5.3-lzlib muon zlib-static zstd-static openssl-libs-static\n        - muon setup build\n        - ninja -C build\n        - muon setup -Dc_link_args=\"-static\" -Dprefer_static=true -Ddefault_library=static build-static\n",
                    "rendered": {
                      "text": "    stage: test\n    script:\n        - echo https://dl-cdn.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories\n        - apk update\n        - apk add gcc git musl-dev openssl-dev linux-headers zlib-dev zstd-dev lua5.3-dev lua5.3-lzlib muon zlib-static zstd-static openssl-libs-static\n        - muon setup build\n        - ninja -C build\n        - muon setup -Dc_link_args=\"-static\" -Dprefer_static=true -Ddefault_library=static build-static\n",
                      "markdown": "`    stage: test\n    script:\n        - echo https://dl-cdn.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories\n        - apk update\n        - apk add gcc git musl-dev openssl-dev linux-headers zlib-dev zstd-dev lua5.3-dev lua5.3-lzlib muon zlib-static zstd-static openssl-libs-static\n        - muon setup build\n        - ninja -C build\n        - muon setup -Dc_link_args=\"-static\" -Dprefer_static=true -Ddefault_library=static build-static\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 13,
                  "endLine": 40,
                  "snippet": {
                    "text": "    image: alpine\n    stage: test\n    script:\n        - apk update\n        - apk add make gcc git musl-dev openssl-dev linux-headers zlib-dev lua5.3-dev lua5.3-lzlib meson\n        - meson setup build -Durl_backend=wget -Dzstd=false\n        - ninja -C build\n    tags:\n",
                    "rendered": {
                      "text": "    image: alpine\n    stage: test\n    script:\n        - apk update\n        - apk add make gcc git musl-dev openssl-dev linux-headers zlib-dev lua5.3-dev lua5.3-lzlib meson\n        - meson setup build -Durl_backend=wget -Dzstd=false\n        - ninja -C build\n    tags:\n",
                      "markdown": "`    image: alpine\n    stage: test\n    script:\n        - apk update\n        - apk add make gcc git musl-dev openssl-dev linux-headers zlib-dev lua5.3-dev lua5.3-lzlib meson\n        - meson setup build -Durl_backend=wget -Dzstd=false\n        - ninja -C build\n    tags:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 13,
                  "endLine": 26,
                  "snippet": {
                    "text": "    image: alpine\n    stage: test\n    script:\n        - apk update\n        - apk add make gcc git musl-dev openssl-dev linux-headers zlib-dev zstd-dev lua5.3-dev lua5.3-lzlib meson zlib-static zstd-static openssl-libs-static\n        - meson setup build\n        - ninja -C build\n        - meson setup build-static -Dc_link_args=-static -Ddefault_library=static -Dprefer_static=true\n",
                    "rendered": {
                      "text": "    image: alpine\n    stage: test\n    script:\n        - apk update\n        - apk add make gcc git musl-dev openssl-dev linux-headers zlib-dev zstd-dev lua5.3-dev lua5.3-lzlib meson zlib-static zstd-static openssl-libs-static\n        - meson setup build\n        - ninja -C build\n        - meson setup build-static -Dc_link_args=-static -Ddefault_library=static -Dprefer_static=true\n",
                      "markdown": "`    image: alpine\n    stage: test\n    script:\n        - apk update\n        - apk add make gcc git musl-dev openssl-dev linux-headers zlib-dev zstd-dev lua5.3-dev lua5.3-lzlib meson zlib-static zstd-static openssl-libs-static\n        - meson setup build\n        - ninja -C build\n        - meson setup build-static -Dc_link_args=-static -Ddefault_library=static -Dprefer_static=true\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 13,
                  "endLine": 15,
                  "snippet": {
                    "text": "    image: alpine\n    stage: test\n    script:\n        - apk update\n        - apk add make gcc git musl-dev openssl-dev linux-headers zlib-dev lua5.3-dev lua5.3-lzlib zstd-dev\n        - make -j$(nproc) check\n    tags:\n        - docker-alpine\n",
                    "rendered": {
                      "text": "    image: alpine\n    stage: test\n    script:\n        - apk update\n        - apk add make gcc git musl-dev openssl-dev linux-headers zlib-dev lua5.3-dev lua5.3-lzlib zstd-dev\n        - make -j$(nproc) check\n    tags:\n        - docker-alpine\n",
                      "markdown": "`    image: alpine\n    stage: test\n    script:\n        - apk update\n        - apk add make gcc git musl-dev openssl-dev linux-headers zlib-dev lua5.3-dev lua5.3-lzlib zstd-dev\n        - make -j$(nproc) check\n    tags:\n        - docker-alpine\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 11,
                  "endLine": 111,
                  "endColumn": 17,
                  "snippet": {
                    "text": "            ! [ -f \"$artifact\" ] && { echo \"No artifacts found\"; exit 1; }\n            ARCH=${artifact#*-}\n            echo \"Uploading binary for $ARCH\"\n            curl --fail -H \"JOB-TOKEN: $CI_JOB_TOKEN\" -T \"$artifact\" -o /dev/null ${PACKAGE_ENDPOINT}/$CI_COMMIT_TAG/$ARCH/apk.static\n          done\n        - echo \"Making a release\"\n    release:\n",
                    "rendered": {
                      "text": "            ! [ -f \"$artifact\" ] && { echo \"No artifacts found\"; exit 1; }\n            ARCH=${artifact#*-}\n            echo \"Uploading binary for $ARCH\"\n            curl --fail -H \"JOB-TOKEN: $CI_JOB_TOKEN\" -T \"$artifact\" -o /dev/null ${PACKAGE_ENDPOINT}/$CI_COMMIT_TAG/$ARCH/apk.static\n          done\n        - echo \"Making a release\"\n    release:\n",
                      "markdown": "`            ! [ -f \"$artifact\" ] && { echo \"No artifacts found\"; exit 1; }\n            ARCH=${artifact#*-}\n            echo \"Uploading binary for $ARCH\"\n            curl --fail -H \"JOB-TOKEN: $CI_JOB_TOKEN\" -T \"$artifact\" -o /dev/null ${PACKAGE_ENDPOINT}/$CI_COMMIT_TAG/$ARCH/apk.static\n          done\n        - echo \"Making a release\"\n    release:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 17,
                  "endLine": 107,
                  "snippet": {
                    "text": "    image: registry.gitlab.com/gitlab-org/release-cli:latest\n    script:\n        - |-\n          apk add curl\n          for artifact in src/apk.static-*; do\n            ! [ -f \"$artifact\" ] && { echo \"No artifacts found\"; exit 1; }\n            ARCH=${artifact#*-}\n            echo \"Uploading binary for $ARCH\"\n",
                    "rendered": {
                      "text": "    image: registry.gitlab.com/gitlab-org/release-cli:latest\n    script:\n        - |-\n          apk add curl\n          for artifact in src/apk.static-*; do\n            ! [ -f \"$artifact\" ] && { echo \"No artifacts found\"; exit 1; }\n            ARCH=${artifact#*-}\n            echo \"Uploading binary for $ARCH\"\n",
                      "markdown": "`    image: registry.gitlab.com/gitlab-org/release-cli:latest\n    script:\n        - |-\n          apk add curl\n          for artifact in src/apk.static-*; do\n            ! [ -f \"$artifact\" ] && { echo \"No artifacts found\"; exit 1; }\n            ARCH=${artifact#*-}\n            echo \"Uploading binary for $ARCH\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 36,
                  "endLine": 80,
                  "endColumn": 41,
                  "snippet": {
                    "text": "    stage: build\n    image: alpinelinux/build-base:latest-$ARCH\n    script:\n        - abuild-apk add -u make gcc git musl-dev openssl-dev linux-headers zlib-dev zstd-dev lua5.3-dev lua5.3-lzlib zlib-static zstd-static openssl-libs-static\n        - make -j$(nproc) static\n        - install -s -m0755 src/apk.static src/apk.static-$ARCH\n    parallel:\n",
                    "rendered": {
                      "text": "    stage: build\n    image: alpinelinux/build-base:latest-$ARCH\n    script:\n        - abuild-apk add -u make gcc git musl-dev openssl-dev linux-headers zlib-dev zstd-dev lua5.3-dev lua5.3-lzlib zlib-static zstd-static openssl-libs-static\n        - make -j$(nproc) static\n        - install -s -m0755 src/apk.static src/apk.static-$ARCH\n    parallel:\n",
                      "markdown": "`    stage: build\n    image: alpinelinux/build-base:latest-$ARCH\n    script:\n        - abuild-apk add -u make gcc git musl-dev openssl-dev linux-headers zlib-dev zstd-dev lua5.3-dev lua5.3-lzlib zlib-static zstd-static openssl-libs-static\n        - make -j$(nproc) static\n        - install -s -m0755 src/apk.static src/apk.static-$ARCH\n    parallel:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 37,
                  "endLine": 67,
                  "endColumn": 42,
                  "snippet": {
                    "text": "    stage: test\n    script:\n        - apt-get update\n        - apt-get install -y make gcc git libssl-dev zlib1g-dev libzstd-dev lua5.3-dev lua5.2 lua-zlib-dev sudo meson\n        - unlink /bin/sh\n        - ln -s /bin/bash /bin/sh\n        - meson setup build\n",
                    "rendered": {
                      "text": "    stage: test\n    script:\n        - apt-get update\n        - apt-get install -y make gcc git libssl-dev zlib1g-dev libzstd-dev lua5.3-dev lua5.2 lua-zlib-dev sudo meson\n        - unlink /bin/sh\n        - ln -s /bin/bash /bin/sh\n        - meson setup build\n",
                      "markdown": "`    stage: test\n    script:\n        - apt-get update\n        - apt-get install -y make gcc git libssl-dev zlib1g-dev libzstd-dev lua5.3-dev lua5.2 lua-zlib-dev sudo meson\n        - unlink /bin/sh\n        - ln -s /bin/bash /bin/sh\n        - meson setup build\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 9,
                  "endLine": 67,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    stage: test\n    script:\n        - apt-get update\n        - apt-get install -y make gcc git libssl-dev zlib1g-dev libzstd-dev lua5.3-dev lua5.2 lua-zlib-dev sudo meson\n        - unlink /bin/sh\n        - ln -s /bin/bash /bin/sh\n        - meson setup build\n",
                    "rendered": {
                      "text": "    stage: test\n    script:\n        - apt-get update\n        - apt-get install -y make gcc git libssl-dev zlib1g-dev libzstd-dev lua5.3-dev lua5.2 lua-zlib-dev sudo meson\n        - unlink /bin/sh\n        - ln -s /bin/bash /bin/sh\n        - meson setup build\n",
                      "markdown": "`    stage: test\n    script:\n        - apt-get update\n        - apt-get install -y make gcc git libssl-dev zlib1g-dev libzstd-dev lua5.3-dev lua5.2 lua-zlib-dev sudo meson\n        - unlink /bin/sh\n        - ln -s /bin/bash /bin/sh\n        - meson setup build\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 9,
                  "endLine": 66,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    image: debian\n    stage: test\n    script:\n        - apt-get update\n        - apt-get install -y make gcc git libssl-dev zlib1g-dev libzstd-dev lua5.3-dev lua5.2 lua-zlib-dev sudo meson\n        - unlink /bin/sh\n        - ln -s /bin/bash /bin/sh\n",
                    "rendered": {
                      "text": "    image: debian\n    stage: test\n    script:\n        - apt-get update\n        - apt-get install -y make gcc git libssl-dev zlib1g-dev libzstd-dev lua5.3-dev lua5.2 lua-zlib-dev sudo meson\n        - unlink /bin/sh\n        - ln -s /bin/bash /bin/sh\n",
                      "markdown": "`    image: debian\n    stage: test\n    script:\n        - apt-get update\n        - apt-get install -y make gcc git libssl-dev zlib1g-dev libzstd-dev lua5.3-dev lua5.2 lua-zlib-dev sudo meson\n        - unlink /bin/sh\n        - ln -s /bin/bash /bin/sh\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 21,
                  "endLine": 53,
                  "endColumn": 26,
                  "snippet": {
                    "text": "    script:\n        - echo https://dl-cdn.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories\n        - apk update\n        - apk add gcc git musl-dev openssl-dev linux-headers zlib-dev zstd-dev lua5.3-dev lua5.3-lzlib muon zlib-static zstd-static openssl-libs-static\n        - muon setup build\n        - ninja -C build\n        - muon setup -Dc_link_args=\"-static\" -Dprefer_static=true -Ddefault_library=static build-static\n",
                    "rendered": {
                      "text": "    script:\n        - echo https://dl-cdn.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories\n        - apk update\n        - apk add gcc git musl-dev openssl-dev linux-headers zlib-dev zstd-dev lua5.3-dev lua5.3-lzlib muon zlib-static zstd-static openssl-libs-static\n        - muon setup build\n        - ninja -C build\n        - muon setup -Dc_link_args=\"-static\" -Dprefer_static=true -Ddefault_library=static build-static\n",
                      "markdown": "`    script:\n        - echo https://dl-cdn.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories\n        - apk update\n        - apk add gcc git musl-dev openssl-dev linux-headers zlib-dev zstd-dev lua5.3-dev lua5.3-lzlib muon zlib-static zstd-static openssl-libs-static\n        - muon setup build\n        - ninja -C build\n        - muon setup -Dc_link_args=\"-static\" -Dprefer_static=true -Ddefault_library=static build-static\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 26,
                  "endLine": 40,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    stage: test\n    script:\n        - apk update\n        - apk add make gcc git musl-dev openssl-dev linux-headers zlib-dev lua5.3-dev lua5.3-lzlib meson\n        - meson setup build -Durl_backend=wget -Dzstd=false\n        - ninja -C build\n    tags:\n",
                    "rendered": {
                      "text": "    stage: test\n    script:\n        - apk update\n        - apk add make gcc git musl-dev openssl-dev linux-headers zlib-dev lua5.3-dev lua5.3-lzlib meson\n        - meson setup build -Durl_backend=wget -Dzstd=false\n        - ninja -C build\n    tags:\n",
                      "markdown": "`    stage: test\n    script:\n        - apk update\n        - apk add make gcc git musl-dev openssl-dev linux-headers zlib-dev lua5.3-dev lua5.3-lzlib meson\n        - meson setup build -Durl_backend=wget -Dzstd=false\n        - ninja -C build\n    tags:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 26,
                  "endLine": 26,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    stage: test\n    script:\n        - apk update\n        - apk add make gcc git musl-dev openssl-dev linux-headers zlib-dev zstd-dev lua5.3-dev lua5.3-lzlib meson zlib-static zstd-static openssl-libs-static\n        - meson setup build\n        - ninja -C build\n        - meson setup build-static -Dc_link_args=-static -Ddefault_library=static -Dprefer_static=true\n",
                    "rendered": {
                      "text": "    stage: test\n    script:\n        - apk update\n        - apk add make gcc git musl-dev openssl-dev linux-headers zlib-dev zstd-dev lua5.3-dev lua5.3-lzlib meson zlib-static zstd-static openssl-libs-static\n        - meson setup build\n        - ninja -C build\n        - meson setup build-static -Dc_link_args=-static -Ddefault_library=static -Dprefer_static=true\n",
                      "markdown": "`    stage: test\n    script:\n        - apk update\n        - apk add make gcc git musl-dev openssl-dev linux-headers zlib-dev zstd-dev lua5.3-dev lua5.3-lzlib meson zlib-static zstd-static openssl-libs-static\n        - meson setup build\n        - ninja -C build\n        - meson setup build-static -Dc_link_args=-static -Ddefault_library=static -Dprefer_static=true\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 26,
                  "endLine": 15,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    stage: test\n    script:\n        - apk update\n        - apk add make gcc git musl-dev openssl-dev linux-headers zlib-dev lua5.3-dev lua5.3-lzlib zstd-dev\n        - make -j$(nproc) check\n    tags:\n        - docker-alpine\n",
                    "rendered": {
                      "text": "    stage: test\n    script:\n        - apk update\n        - apk add make gcc git musl-dev openssl-dev linux-headers zlib-dev lua5.3-dev lua5.3-lzlib zstd-dev\n        - make -j$(nproc) check\n    tags:\n        - docker-alpine\n",
                      "markdown": "`    stage: test\n    script:\n        - apk update\n        - apk add make gcc git musl-dev openssl-dev linux-headers zlib-dev lua5.3-dev lua5.3-lzlib zstd-dev\n        - make -j$(nproc) check\n    tags:\n        - docker-alpine\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-add.8.scd"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 16,
                  "endLine": 5,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\n# NAME\n\napk add - add or update constraints to _world_ and commit changes\n\n# SYNOPSIS\n\n",
                    "rendered": {
                      "text": "\n# NAME\n\napk add - add or update constraints to _world_ and commit changes\n\n# SYNOPSIS\n\n",
                      "markdown": "`\n# NAME\n\napk add - add or update constraints to _world_ and commit changes\n\n# SYNOPSIS\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-index.8.scd"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 55,
                  "endLine": 23,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\n*-d, --description* _TEXT_\n\tAdd a description to the index. Upstream, this is used to add version\n\tinformation based on the git commit SHA of aports HEAD at the time of\n\tindex generation.\n\n*--merge*\n",
                    "rendered": {
                      "text": "\n*-d, --description* _TEXT_\n\tAdd a description to the index. Upstream, this is used to add version\n\tinformation based on the git commit SHA of aports HEAD at the time of\n\tindex generation.\n\n*--merge*\n",
                      "markdown": "`\n*-d, --description* _TEXT_\n\tAdd a description to the index. Upstream, this is used to add version\n\tinformation based on the git commit SHA of aports HEAD at the time of\n\tindex generation.\n\n*--merge*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-index.8.scd"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 32,
                  "snippet": {
                    "text": "# ENVIRONMENT\n\n*SOURCE_DATE_EPOCH*\n\tUsed as the build time for tar file headers in APKINDEX.tar.gz.\n",
                    "rendered": {
                      "text": "# ENVIRONMENT\n\n*SOURCE_DATE_EPOCH*\n\tUsed as the build time for tar file headers in APKINDEX.tar.gz.\n",
                      "markdown": "`# ENVIRONMENT\n\n*SOURCE_DATE_EPOCH*\n\tUsed as the build time for tar file headers in APKINDEX.tar.gz.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-index.8.scd"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 18,
                  "endLine": 51,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# ENVIRONMENT\n\n*SOURCE_DATE_EPOCH*\n\tUsed as the build time for tar file headers in APKINDEX.tar.gz.\n",
                    "rendered": {
                      "text": "# ENVIRONMENT\n\n*SOURCE_DATE_EPOCH*\n\tUsed as the build time for tar file headers in APKINDEX.tar.gz.\n",
                      "markdown": "`# ENVIRONMENT\n\n*SOURCE_DATE_EPOCH*\n\tUsed as the build time for tar file headers in APKINDEX.tar.gz.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-index.8.scd"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 62,
                  "endLine": 23,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\n*-d, --description* _TEXT_\n\tAdd a description to the index. Upstream, this is used to add version\n\tinformation based on the git commit SHA of aports HEAD at the time of\n\tindex generation.\n\n*--merge*\n",
                    "rendered": {
                      "text": "\n*-d, --description* _TEXT_\n\tAdd a description to the index. Upstream, this is used to add version\n\tinformation based on the git commit SHA of aports HEAD at the time of\n\tindex generation.\n\n*--merge*\n",
                      "markdown": "`\n*-d, --description* _TEXT_\n\tAdd a description to the index. Upstream, this is used to add version\n\tinformation based on the git commit SHA of aports HEAD at the time of\n\tindex generation.\n\n*--merge*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-index.8.scd"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 50,
                  "endLine": 23,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\n*-d, --description* _TEXT_\n\tAdd a description to the index. Upstream, this is used to add version\n\tinformation based on the git commit SHA of aports HEAD at the time of\n\tindex generation.\n\n*--merge*\n",
                    "rendered": {
                      "text": "\n*-d, --description* _TEXT_\n\tAdd a description to the index. Upstream, this is used to add version\n\tinformation based on the git commit SHA of aports HEAD at the time of\n\tindex generation.\n\n*--merge*\n",
                      "markdown": "`\n*-d, --description* _TEXT_\n\tAdd a description to the index. Upstream, this is used to add version\n\tinformation based on the git commit SHA of aports HEAD at the time of\n\tindex generation.\n\n*--merge*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-index.8.scd"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 25,
                  "endLine": 23,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n*-d, --description* _TEXT_\n\tAdd a description to the index. Upstream, this is used to add version\n\tinformation based on the git commit SHA of aports HEAD at the time of\n\tindex generation.\n\n*--merge*\n",
                    "rendered": {
                      "text": "\n*-d, --description* _TEXT_\n\tAdd a description to the index. Upstream, this is used to add version\n\tinformation based on the git commit SHA of aports HEAD at the time of\n\tindex generation.\n\n*--merge*\n",
                      "markdown": "`\n*-d, --description* _TEXT_\n\tAdd a description to the index. Upstream, this is used to add version\n\tinformation based on the git commit SHA of aports HEAD at the time of\n\tindex generation.\n\n*--merge*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-v2.5.scd"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 3,
                  "endLine": 47,
                  "endColumn": 12,
                  "snippet": {
                    "text": "PKGINFO, its value is the sha256 hash of the data part of the apk.\nPackages are supposed to have a datahash, but indexes do not.\n\nThe control section is also where pre/post hook scripts for install, deinstall,\nand upgrade live, and where triggers live.\n\n# THE DATA SECTION\n",
                    "rendered": {
                      "text": "PKGINFO, its value is the sha256 hash of the data part of the apk.\nPackages are supposed to have a datahash, but indexes do not.\n\nThe control section is also where pre/post hook scripts for install, deinstall,\nand upgrade live, and where triggers live.\n\n# THE DATA SECTION\n",
                      "markdown": "`PKGINFO, its value is the sha256 hash of the data part of the apk.\nPackages are supposed to have a datahash, but indexes do not.\n\nThe control section is also where pre/post hook scripts for install, deinstall,\nand upgrade live, and where triggers live.\n\n# THE DATA SECTION\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-v2.5.scd"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 5,
                  "endLine": 34,
                  "endColumn": 14,
                  "snippet": {
                    "text": "signed by multiple different keys if need be, as long as clients trust\nat least one of them.\n\n# THE CONTROL SECTION\n\nIn a v2 apk file, the package metadata is stored in a single file called\n.PKGINFO. That file uses a key-value format, in which keys and values\n",
                    "rendered": {
                      "text": "signed by multiple different keys if need be, as long as clients trust\nat least one of them.\n\n# THE CONTROL SECTION\n\nIn a v2 apk file, the package metadata is stored in a single file called\n.PKGINFO. That file uses a key-value format, in which keys and values\n",
                      "markdown": "`signed by multiple different keys if need be, as long as clients trust\nat least one of them.\n\n# THE CONTROL SECTION\n\nIn a v2 apk file, the package metadata is stored in a single file called\n.PKGINFO. That file uses a key-value format, in which keys and values\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-v2.5.scd"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 70,
                  "endLine": 32,
                  "endColumn": 3,
                  "snippet": {
                    "text": "together (if the metadata contains no data hash).\n\nA single signature from a trusted key is sufficient, so an apk can be\nsigned by multiple different keys if need be, as long as clients trust\nat least one of them.\n\n# THE CONTROL SECTION\n\n",
                    "rendered": {
                      "text": "together (if the metadata contains no data hash).\n\nA single signature from a trusted key is sufficient, so an apk can be\nsigned by multiple different keys if need be, as long as clients trust\nat least one of them.\n\n# THE CONTROL SECTION\n\n",
                      "markdown": "`together (if the metadata contains no data hash).\n\nA single signature from a trusted key is sufficient, so an apk can be\nsigned by multiple different keys if need be, as long as clients trust\nat least one of them.\n\n# THE CONTROL SECTION\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-v2.5.scd"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 29,
                  "endLine": 12,
                  "endColumn": 38,
                  "snippet": {
                    "text": "A v2 .apk file contains a single package's contents, some metadata, and\nsome signatures. The .apk file contains three concatenated gzip streams,\nwhich together form a single tar archive. The tar archive contains three\nsections: the signatures, the control section, and the data section.\n\n# THE SIGNATURES\n\n",
                    "rendered": {
                      "text": "A v2 .apk file contains a single package's contents, some metadata, and\nsome signatures. The .apk file contains three concatenated gzip streams,\nwhich together form a single tar archive. The tar archive contains three\nsections: the signatures, the control section, and the data section.\n\n# THE SIGNATURES\n\n",
                      "markdown": "`A v2 .apk file contains a single package's contents, some metadata, and\nsome signatures. The .apk file contains three concatenated gzip streams,\nwhich together form a single tar archive. The tar archive contains three\nsections: the signatures, the control section, and the data section.\n\n# THE SIGNATURES\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-v2.5.scd"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 28,
                  "endLine": 52,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n# THE DATA SECTION\n\nThe data section is simply a tar archive of the package's contents, as\nproduced by the build process. These files are postprocessed by\n*abuild-tar*(1) and use pax extended headers to include per-file\nchecksums in a header named APK-TOOLS.checksum.*<hash>*.\n",
                    "rendered": {
                      "text": "\n# THE DATA SECTION\n\nThe data section is simply a tar archive of the package's contents, as\nproduced by the build process. These files are postprocessed by\n*abuild-tar*(1) and use pax extended headers to include per-file\nchecksums in a header named APK-TOOLS.checksum.*<hash>*.\n",
                      "markdown": "`\n# THE DATA SECTION\n\nThe data section is simply a tar archive of the package's contents, as\nproduced by the build process. These files are postprocessed by\n*abuild-tar*(1) and use pax extended headers to include per-file\nchecksums in a header named APK-TOOLS.checksum.*<hash>*.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-v2.5.scd"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 45,
                  "endLine": 11,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\nA v2 .apk file contains a single package's contents, some metadata, and\nsome signatures. The .apk file contains three concatenated gzip streams,\nwhich together form a single tar archive. The tar archive contains three\nsections: the signatures, the control section, and the data section.\n\n# THE SIGNATURES\n",
                    "rendered": {
                      "text": "\nA v2 .apk file contains a single package's contents, some metadata, and\nsome signatures. The .apk file contains three concatenated gzip streams,\nwhich together form a single tar archive. The tar archive contains three\nsections: the signatures, the control section, and the data section.\n\n# THE SIGNATURES\n",
                      "markdown": "`\nA v2 .apk file contains a single package's contents, some metadata, and\nsome signatures. The .apk file contains three concatenated gzip streams,\nwhich together form a single tar archive. The tar archive contains three\nsections: the signatures, the control section, and the data section.\n\n# THE SIGNATURES\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-v2.5.scd"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 28,
                  "endLine": 11,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\nA v2 .apk file contains a single package's contents, some metadata, and\nsome signatures. The .apk file contains three concatenated gzip streams,\nwhich together form a single tar archive. The tar archive contains three\nsections: the signatures, the control section, and the data section.\n\n# THE SIGNATURES\n",
                    "rendered": {
                      "text": "\nA v2 .apk file contains a single package's contents, some metadata, and\nsome signatures. The .apk file contains three concatenated gzip streams,\nwhich together form a single tar archive. The tar archive contains three\nsections: the signatures, the control section, and the data section.\n\n# THE SIGNATURES\n",
                      "markdown": "`\nA v2 .apk file contains a single package's contents, some metadata, and\nsome signatures. The .apk file contains three concatenated gzip streams,\nwhich together form a single tar archive. The tar archive contains three\nsections: the signatures, the control section, and the data section.\n\n# THE SIGNATURES\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-package.5.scd"
                },
                "region": {
                  "startLine": 219,
                  "startColumn": 59,
                  "endLine": 219,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\n*install-if* (*install_if*, *i*)\n\tAPK will automatically select and install the package if all of\n\tthe install-if dependencies are satisfied. There should be at least\n\ttwo dependencies in *install_if* dependencies, and one of them must\n\thave a equality (*=*) operator.\n\n",
                    "rendered": {
                      "text": "\n*install-if* (*install_if*, *i*)\n\tAPK will automatically select and install the package if all of\n\tthe install-if dependencies are satisfied. There should be at least\n\ttwo dependencies in *install_if* dependencies, and one of them must\n\thave a equality (*=*) operator.\n\n",
                      "markdown": "`\n*install-if* (*install_if*, *i*)\n\tAPK will automatically select and install the package if all of\n\tthe install-if dependencies are satisfied. There should be at least\n\ttwo dependencies in *install_if* dependencies, and one of them must\n\thave a equality (*=*) operator.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-package.5.scd"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 49,
                  "endLine": 156,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\n*file-size* (*S*)\n\tThis field is present meaningful only in the repository index copy of\n\tthe package info. APK index will fill this field at indexing time with the\n\tsize of the package file (.apk). Technically this field should be a repository\n\tindex specific field, and such change might be done in the future.\n\n",
                    "rendered": {
                      "text": "\n*file-size* (*S*)\n\tThis field is present meaningful only in the repository index copy of\n\tthe package info. APK index will fill this field at indexing time with the\n\tsize of the package file (.apk). Technically this field should be a repository\n\tindex specific field, and such change might be done in the future.\n\n",
                      "markdown": "`\n*file-size* (*S*)\n\tThis field is present meaningful only in the repository index copy of\n\tthe package info. APK index will fill this field at indexing time with the\n\tsize of the package file (.apk). Technically this field should be a repository\n\tindex specific field, and such change might be done in the future.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-package.5.scd"
                },
                "region": {
                  "startLine": 265,
                  "startColumn": 54,
                  "endLine": 265,
                  "endColumn": 62,
                  "snippet": {
                    "text": "\t- post-upgrade\n\n*triggers*\n\tList of directory globs. APK will execute the trigger script with\n\tlist of matched directories when any action (package installation,\n\tremoval) has modified content of that directory. When package is\n\tbeing fixed or installed it will get list of all matching directories.\n",
                    "rendered": {
                      "text": "\t- post-upgrade\n\n*triggers*\n\tList of directory globs. APK will execute the trigger script with\n\tlist of matched directories when any action (package installation,\n\tremoval) has modified content of that directory. When package is\n\tbeing fixed or installed it will get list of all matching directories.\n",
                      "markdown": "`\t- post-upgrade\n\n*triggers*\n\tList of directory globs. APK will execute the trigger script with\n\tlist of matched directories when any action (package installation,\n\tremoval) has modified content of that directory. When package is\n\tbeing fixed or installed it will get list of all matching directories.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-package.5.scd"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 18,
                  "endLine": 255,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\tare executed before or after package installation, removal, upgrade\n\tas well as to handle trigger conditions.\n\n\tCurrently defined script types:\n\t- trigger\n\t- pre-install\n\t- post-install\n",
                    "rendered": {
                      "text": "\tare executed before or after package installation, removal, upgrade\n\tas well as to handle trigger conditions.\n\n\tCurrently defined script types:\n\t- trigger\n\t- pre-install\n\t- post-install\n",
                      "markdown": "`\tare executed before or after package installation, removal, upgrade\n\tas well as to handle trigger conditions.\n\n\tCurrently defined script types:\n\t- trigger\n\t- pre-install\n\t- post-install\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-package.5.scd"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 25,
                  "endLine": 173,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\trequire APK to first satisfy the list of all its dependencies.\n\n\tThe dependencies are used by various APK components:\n\t- The solver will try to find a solution that all package dependencies\n\t  are satisfied (as well as the world dependencies)\n\t- When apk is committing changes to the file system, it will install\n\t  or remove packages in such order that all dependencies of the package\n",
                    "rendered": {
                      "text": "\trequire APK to first satisfy the list of all its dependencies.\n\n\tThe dependencies are used by various APK components:\n\t- The solver will try to find a solution that all package dependencies\n\t  are satisfied (as well as the world dependencies)\n\t- When apk is committing changes to the file system, it will install\n\t  or remove packages in such order that all dependencies of the package\n",
                      "markdown": "`\trequire APK to first satisfy the list of all its dependencies.\n\n\tThe dependencies are used by various APK components:\n\t- The solver will try to find a solution that all package dependencies\n\t  are satisfied (as well as the world dependencies)\n\t- When apk is committing changes to the file system, it will install\n\t  or remove packages in such order that all dependencies of the package\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-package.5.scd"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 61,
                  "endLine": 156,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\n*file-size* (*S*)\n\tThis field is present meaningful only in the repository index copy of\n\tthe package info. APK index will fill this field at indexing time with the\n\tsize of the package file (.apk). Technically this field should be a repository\n\tindex specific field, and such change might be done in the future.\n\n",
                    "rendered": {
                      "text": "\n*file-size* (*S*)\n\tThis field is present meaningful only in the repository index copy of\n\tthe package info. APK index will fill this field at indexing time with the\n\tsize of the package file (.apk). Technically this field should be a repository\n\tindex specific field, and such change might be done in the future.\n\n",
                      "markdown": "`\n*file-size* (*S*)\n\tThis field is present meaningful only in the repository index copy of\n\tthe package info. APK index will fill this field at indexing time with the\n\tsize of the package file (.apk). Technically this field should be a repository\n\tindex specific field, and such change might be done in the future.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/doc/apk-package.5.scd"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 45,
                  "endLine": 33,
                  "endColumn": 51,
                  "snippet": {
                    "text": "APK will often display concatenation of *name*-*version* in its verbose\noutput mode. The rule below on how a valid version number is defined allow\nthat this format can be uniquely splitted back to the two components by\nfinding the *last* occurance of *-[0-9]*. The dash in the beginning of this\nmatch is the splitting point: first portion is the *name* and second\nportion is the *version*.\n\n",
                    "rendered": {
                      "text": "APK will often display concatenation of *name*-*version* in its verbose\noutput mode. The rule below on how a valid version number is defined allow\nthat this format can be uniquely splitted back to the two components by\nfinding the *last* occurance of *-[0-9]*. The dash in the beginning of this\nmatch is the splitting point: first portion is the *name* and second\nportion is the *version*.\n\n",
                      "markdown": "`APK will often display concatenation of *name*-*version* in its verbose\noutput mode. The rule below on how a valid version number is defined allow\nthat this format can be uniquely splitted back to the two components by\nfinding the *last* occurance of *-[0-9]*. The dash in the beginning of this\nmatch is the splitting point: first portion is the *name* and second\nportion is the *version*.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/test/test4.sh"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 13,
                  "endLine": 5,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\n# desc: test failing pre-install\n\n# pre-install script will fail if should-fail file exists\nmkdir -p \"$ROOT\"\ntouch \"$ROOT\"/should-fail\n\n",
                    "rendered": {
                      "text": "\n# desc: test failing pre-install\n\n# pre-install script will fail if should-fail file exists\nmkdir -p \"$ROOT\"\ntouch \"$ROOT\"/should-fail\n\n",
                      "markdown": "`\n# desc: test failing pre-install\n\n# pre-install script will fail if should-fail file exists\nmkdir -p \"$ROOT\"\ntouch \"$ROOT\"/should-fail\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/src/trust.c"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 31,
                  "endLine": 68,
                  "endColumn": 42,
                  "snippet": {
                    "text": "void apk_trust_free(struct apk_trust *trust)\n{\n\t__apk_trust_free_keys(&trust->trusted_key_list);\n\t__apk_trust_free_keys(&trust->private_key_list);\n\tapk_digest_ctx_free(&trust->dctx);\n}\n\n",
                    "rendered": {
                      "text": "void apk_trust_free(struct apk_trust *trust)\n{\n\t__apk_trust_free_keys(&trust->trusted_key_list);\n\t__apk_trust_free_keys(&trust->private_key_list);\n\tapk_digest_ctx_free(&trust->dctx);\n}\n\n",
                      "markdown": "`void apk_trust_free(struct apk_trust *trust)\n{\n\t__apk_trust_free_keys(&trust->trusted_key_list);\n\t__apk_trust_free_keys(&trust->private_key_list);\n\tapk_digest_ctx_free(&trust->dctx);\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/src/trust.c"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 19,
                  "endLine": 40,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t*trust = (struct apk_trust){};\n\tapk_digest_ctx_init(&trust->dctx, APK_DIGEST_NONE);\n\tlist_init(&trust->trusted_key_list);\n\tlist_init(&trust->private_key_list);\n}\n\nint apk_trust_load_keys(struct apk_trust *trust, int dirfd)\n",
                    "rendered": {
                      "text": "\t*trust = (struct apk_trust){};\n\tapk_digest_ctx_init(&trust->dctx, APK_DIGEST_NONE);\n\tlist_init(&trust->trusted_key_list);\n\tlist_init(&trust->private_key_list);\n}\n\nint apk_trust_load_keys(struct apk_trust *trust, int dirfd)\n",
                      "markdown": "`\t*trust = (struct apk_trust){};\n\tapk_digest_ctx_init(&trust->dctx, APK_DIGEST_NONE);\n\tlist_init(&trust->trusted_key_list);\n\tlist_init(&trust->private_key_list);\n}\n\nint apk_trust_load_keys(struct apk_trust *trust, int dirfd)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/src/database.c"
                },
                "region": {
                  "startLine": 2117,
                  "startColumn": 19,
                  "endLine": 2117,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\twhile (waitpid(pid, &status, 0) < 0 && errno == EINTR);\n\n\tif (apk_exit_status_str(status, buf, sizeof buf)) {\n\t\tapk_err(out, \"%s: script %s\", basename(fn), buf);\n\t\treturn -1;\n\t}\n\treturn 0;\n",
                    "rendered": {
                      "text": "\twhile (waitpid(pid, &status, 0) < 0 && errno == EINTR);\n\n\tif (apk_exit_status_str(status, buf, sizeof buf)) {\n\t\tapk_err(out, \"%s: script %s\", basename(fn), buf);\n\t\treturn -1;\n\t}\n\treturn 0;\n",
                      "markdown": "`\twhile (waitpid(pid, &status, 0) < 0 && errno == EINTR);\n\n\tif (apk_exit_status_str(status, buf, sizeof buf)) {\n\t\tapk_err(out, \"%s: script %s\", basename(fn), buf);\n\t\treturn -1;\n\t}\n\treturn 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/src/database.c"
                },
                "region": {
                  "startLine": 1541,
                  "startColumn": 49,
                  "endLine": 1541,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\t\t\t/* remount cache read/write */\n\t\t\tdb->cache_remount_dir = find_mountpoint(db->root_fd, db->cache_dir);\n\t\t\tif (db->cache_remount_dir == NULL) {\n\t\t\t\tapk_warn(out, \"Unable to find cache directory mount point\");\n\t\t\t} else if (mount(0, db->cache_remount_dir, 0, MS_REMOUNT | (db->cache_remount_flags & ~MS_RDONLY), 0) != 0) {\n\t\t\t\tfree(db->cache_remount_dir);\n\t\t\t\tdb->cache_remount_dir = NULL;\n",
                    "rendered": {
                      "text": "\t\t\t/* remount cache read/write */\n\t\t\tdb->cache_remount_dir = find_mountpoint(db->root_fd, db->cache_dir);\n\t\t\tif (db->cache_remount_dir == NULL) {\n\t\t\t\tapk_warn(out, \"Unable to find cache directory mount point\");\n\t\t\t} else if (mount(0, db->cache_remount_dir, 0, MS_REMOUNT | (db->cache_remount_flags & ~MS_RDONLY), 0) != 0) {\n\t\t\t\tfree(db->cache_remount_dir);\n\t\t\t\tdb->cache_remount_dir = NULL;\n",
                      "markdown": "`\t\t\t/* remount cache read/write */\n\t\t\tdb->cache_remount_dir = find_mountpoint(db->root_fd, db->cache_dir);\n\t\t\tif (db->cache_remount_dir == NULL) {\n\t\t\t\tapk_warn(out, \"Unable to find cache directory mount point\");\n\t\t\t} else if (mount(0, db->cache_remount_dir, 0, MS_REMOUNT | (db->cache_remount_flags & ~MS_RDONLY), 0) != 0) {\n\t\t\t\tfree(db->cache_remount_dir);\n\t\t\t\tdb->cache_remount_dir = NULL;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/src/database.c"
                },
                "region": {
                  "startLine": 1541,
                  "startColumn": 28,
                  "endLine": 1541,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\t\t\t/* remount cache read/write */\n\t\t\tdb->cache_remount_dir = find_mountpoint(db->root_fd, db->cache_dir);\n\t\t\tif (db->cache_remount_dir == NULL) {\n\t\t\t\tapk_warn(out, \"Unable to find cache directory mount point\");\n\t\t\t} else if (mount(0, db->cache_remount_dir, 0, MS_REMOUNT | (db->cache_remount_flags & ~MS_RDONLY), 0) != 0) {\n\t\t\t\tfree(db->cache_remount_dir);\n\t\t\t\tdb->cache_remount_dir = NULL;\n",
                    "rendered": {
                      "text": "\t\t\t/* remount cache read/write */\n\t\t\tdb->cache_remount_dir = find_mountpoint(db->root_fd, db->cache_dir);\n\t\t\tif (db->cache_remount_dir == NULL) {\n\t\t\t\tapk_warn(out, \"Unable to find cache directory mount point\");\n\t\t\t} else if (mount(0, db->cache_remount_dir, 0, MS_REMOUNT | (db->cache_remount_flags & ~MS_RDONLY), 0) != 0) {\n\t\t\t\tfree(db->cache_remount_dir);\n\t\t\t\tdb->cache_remount_dir = NULL;\n",
                      "markdown": "`\t\t\t/* remount cache read/write */\n\t\t\tdb->cache_remount_dir = find_mountpoint(db->root_fd, db->cache_dir);\n\t\t\tif (db->cache_remount_dir == NULL) {\n\t\t\t\tapk_warn(out, \"Unable to find cache directory mount point\");\n\t\t\t} else if (mount(0, db->cache_remount_dir, 0, MS_REMOUNT | (db->cache_remount_flags & ~MS_RDONLY), 0) != 0) {\n\t\t\t\tfree(db->cache_remount_dir);\n\t\t\t\tdb->cache_remount_dir = NULL;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/src/crypto_openssl.c"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 21,
                  "endLine": 146,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\tbio = BIO_new_fp(fdopen(fd, \"r\"), BIO_CLOSE);\n\tif (!bio) return -ENOMEM;\n\tif (priv)\n\t\tkey = PEM_read_bio_PrivateKey(bio, NULL, NULL, NULL);\n\telse\n\t\tkey = PEM_read_bio_PUBKEY(bio, NULL, NULL, NULL);\n\tBIO_free(bio);\n",
                    "rendered": {
                      "text": "\tbio = BIO_new_fp(fdopen(fd, \"r\"), BIO_CLOSE);\n\tif (!bio) return -ENOMEM;\n\tif (priv)\n\t\tkey = PEM_read_bio_PrivateKey(bio, NULL, NULL, NULL);\n\telse\n\t\tkey = PEM_read_bio_PUBKEY(bio, NULL, NULL, NULL);\n\tBIO_free(bio);\n",
                      "markdown": "`\tbio = BIO_new_fp(fdopen(fd, \"r\"), BIO_CLOSE);\n\tif (!bio) return -ENOMEM;\n\tif (priv)\n\t\tkey = PEM_read_bio_PrivateKey(bio, NULL, NULL, NULL);\n\telse\n\t\tkey = PEM_read_bio_PUBKEY(bio, NULL, NULL, NULL);\n\tBIO_free(bio);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/src/crypto_openssl.c"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 27,
                  "endLine": 17,
                  "snippet": {
                    "text": "\n#include \"apk_crypto.h\"\n\n// Copmatibility with older openssl\n\n#if OPENSSL_VERSION_NUMBER < 0x1010000fL || (defined(LIBRESSL_VERSION_NUMBER) && LIBRESSL_VERSION_NUMBER < 0x2070000fL)\n\nstatic inline EVP_MD_CTX *EVP_MD_CTX_new(void)\n",
                    "rendered": {
                      "text": "\n#include \"apk_crypto.h\"\n\n// Copmatibility with older openssl\n\n#if OPENSSL_VERSION_NUMBER < 0x1010000fL || (defined(LIBRESSL_VERSION_NUMBER) && LIBRESSL_VERSION_NUMBER < 0x2070000fL)\n\nstatic inline EVP_MD_CTX *EVP_MD_CTX_new(void)\n",
                      "markdown": "`\n#include \"apk_crypto.h\"\n\n// Copmatibility with older openssl\n\n#if OPENSSL_VERSION_NUMBER < 0x1010000fL || (defined(LIBRESSL_VERSION_NUMBER) && LIBRESSL_VERSION_NUMBER < 0x2070000fL)\n\nstatic inline EVP_MD_CTX *EVP_MD_CTX_new(void)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/src/Makefile"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 1,
                  "endLine": 88,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\t\t   $(INSTALL) $(libapk_a) $(DESTDIR)$(LIBDIR)\napk-static-libs\t\t:= $(libapk.a-libs) $(obj)/libapk.a\n\n# Lua module\nifeq ($(LUAAPK),yes)\nLUA_VERSION\t\t?= 5.3\nLUA_PC\t\t\t?= lua$(LUA_VERSION)\n",
                    "rendered": {
                      "text": "\t\t\t   $(INSTALL) $(libapk_a) $(DESTDIR)$(LIBDIR)\napk-static-libs\t\t:= $(libapk.a-libs) $(obj)/libapk.a\n\n# Lua module\nifeq ($(LUAAPK),yes)\nLUA_VERSION\t\t?= 5.3\nLUA_PC\t\t\t?= lua$(LUA_VERSION)\n",
                      "markdown": "`\t\t\t   $(INSTALL) $(libapk_a) $(DESTDIR)$(LIBDIR)\napk-static-libs\t\t:= $(libapk.a-libs) $(obj)/libapk.a\n\n# Lua module\nifeq ($(LUAAPK),yes)\nLUA_VERSION\t\t?= 5.3\nLUA_PC\t\t\t?= lua$(LUA_VERSION)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/src/Makefile"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 49,
                  "endLine": 9,
                  "endColumn": 54,
                  "snippet": {
                    "text": "else ifneq ($(LUA),)\nLUAAPK\t\t\t?= yes\nelse\n$(error Lua interpreter not found. Please specify LUA interpreter, or use LUA=no to build without help.)\nendif\n\nifeq ($(URL_BACKEND),wget)\n",
                    "rendered": {
                      "text": "else ifneq ($(LUA),)\nLUAAPK\t\t\t?= yes\nelse\n$(error Lua interpreter not found. Please specify LUA interpreter, or use LUA=no to build without help.)\nendif\n\nifeq ($(URL_BACKEND),wget)\n",
                      "markdown": "`else ifneq ($(LUA),)\nLUAAPK\t\t\t?= yes\nelse\n$(error Lua interpreter not found. Please specify LUA interpreter, or use LUA=no to build without help.)\nendif\n\nifeq ($(URL_BACKEND),wget)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/src/Makefile"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 7,
                  "endLine": 9,
                  "endColumn": 12,
                  "snippet": {
                    "text": "else ifneq ($(LUA),)\nLUAAPK\t\t\t?= yes\nelse\n$(error Lua interpreter not found. Please specify LUA interpreter, or use LUA=no to build without help.)\nendif\n\nifeq ($(URL_BACKEND),wget)\n",
                    "rendered": {
                      "text": "else ifneq ($(LUA),)\nLUAAPK\t\t\t?= yes\nelse\n$(error Lua interpreter not found. Please specify LUA interpreter, or use LUA=no to build without help.)\nendif\n\nifeq ($(URL_BACKEND),wget)\n",
                      "markdown": "`else ifneq ($(LUA),)\nLUAAPK\t\t\t?= yes\nelse\n$(error Lua interpreter not found. Please specify LUA interpreter, or use LUA=no to build without help.)\nendif\n\nifeq ($(URL_BACKEND),wget)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/src/Makefile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 25,
                  "endLine": 2,
                  "endColumn": 4,
                  "snippet": {
                    "text": "PKG_CONFIG\t\t?= pkg-config\nLUA\t\t\t?= $(firstword $(wildcard /usr/bin/lua5.3 /usr/bin/lua5.2))\n\nifeq ($(LUA),no)\nLUAAPK\t\t\t?= no\n",
                    "rendered": {
                      "text": "PKG_CONFIG\t\t?= pkg-config\nLUA\t\t\t?= $(firstword $(wildcard /usr/bin/lua5.3 /usr/bin/lua5.2))\n\nifeq ($(LUA),no)\nLUAAPK\t\t\t?= no\n",
                      "markdown": "`PKG_CONFIG\t\t?= pkg-config\nLUA\t\t\t?= $(firstword $(wildcard /usr/bin/lua5.3 /usr/bin/lua5.2))\n\nifeq ($(LUA),no)\nLUAAPK\t\t\t?= no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/portability/meson.build"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 26,
                  "endLine": 20,
                  "endColumn": 31,
                  "snippet": {
                    "text": "foreach f : check_symbols\n\tif not cc.has_header_symbol(f.get(3), f.get(0), args: ['-D_GNU_SOURCE'])\n\t\tadd_project_arguments('-D' + f.get(2), language: 'c')\n\t\tlibportability_src += [f.get(1)]\n\tendif\nendforeach\n\n",
                    "rendered": {
                      "text": "foreach f : check_symbols\n\tif not cc.has_header_symbol(f.get(3), f.get(0), args: ['-D_GNU_SOURCE'])\n\t\tadd_project_arguments('-D' + f.get(2), language: 'c')\n\t\tlibportability_src += [f.get(1)]\n\tendif\nendforeach\n\n",
                      "markdown": "`foreach f : check_symbols\n\tif not cc.has_header_symbol(f.get(3), f.get(0), args: ['-D_GNU_SOURCE'])\n\t\tadd_project_arguments('-D' + f.get(2), language: 'c')\n\t\tlibportability_src += [f.get(1)]\n\tendif\nendforeach\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/portability/meson.build"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 32,
                  "endLine": 19,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\nforeach f : check_symbols\n\tif not cc.has_header_symbol(f.get(3), f.get(0), args: ['-D_GNU_SOURCE'])\n\t\tadd_project_arguments('-D' + f.get(2), language: 'c')\n\t\tlibportability_src += [f.get(1)]\n\tendif\nendforeach\n",
                    "rendered": {
                      "text": "\nforeach f : check_symbols\n\tif not cc.has_header_symbol(f.get(3), f.get(0), args: ['-D_GNU_SOURCE'])\n\t\tadd_project_arguments('-D' + f.get(2), language: 'c')\n\t\tlibportability_src += [f.get(1)]\n\tendif\nendforeach\n",
                      "markdown": "`\nforeach f : check_symbols\n\tif not cc.has_header_symbol(f.get(3), f.get(0), args: ['-D_GNU_SOURCE'])\n\t\tadd_project_arguments('-D' + f.get(2), language: 'c')\n\t\tlibportability_src += [f.get(1)]\n\tendif\nendforeach\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/portability/meson.build"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 40,
                  "endLine": 18,
                  "endColumn": 45,
                  "snippet": {
                    "text": "]\n\nforeach f : check_symbols\n\tif not cc.has_header_symbol(f.get(3), f.get(0), args: ['-D_GNU_SOURCE'])\n\t\tadd_project_arguments('-D' + f.get(2), language: 'c')\n\t\tlibportability_src += [f.get(1)]\n\tendif\n",
                    "rendered": {
                      "text": "]\n\nforeach f : check_symbols\n\tif not cc.has_header_symbol(f.get(3), f.get(0), args: ['-D_GNU_SOURCE'])\n\t\tadd_project_arguments('-D' + f.get(2), language: 'c')\n\t\tlibportability_src += [f.get(1)]\n\tendif\n",
                      "markdown": "`]\n\nforeach f : check_symbols\n\tif not cc.has_header_symbol(f.get(3), f.get(0), args: ['-D_GNU_SOURCE'])\n\t\tadd_project_arguments('-D' + f.get(2), language: 'c')\n\t\tlibportability_src += [f.get(1)]\n\tendif\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/portability/meson.build"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 30,
                  "endLine": 18,
                  "endColumn": 35,
                  "snippet": {
                    "text": "]\n\nforeach f : check_symbols\n\tif not cc.has_header_symbol(f.get(3), f.get(0), args: ['-D_GNU_SOURCE'])\n\t\tadd_project_arguments('-D' + f.get(2), language: 'c')\n\t\tlibportability_src += [f.get(1)]\n\tendif\n",
                    "rendered": {
                      "text": "]\n\nforeach f : check_symbols\n\tif not cc.has_header_symbol(f.get(3), f.get(0), args: ['-D_GNU_SOURCE'])\n\t\tadd_project_arguments('-D' + f.get(2), language: 'c')\n\t\tlibportability_src += [f.get(1)]\n\tendif\n",
                      "markdown": "`]\n\nforeach f : check_symbols\n\tif not cc.has_header_symbol(f.get(3), f.get(0), args: ['-D_GNU_SOURCE'])\n\t\tadd_project_arguments('-D' + f.get(2), language: 'c')\n\t\tlibportability_src += [f.get(1)]\n\tendif\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/get-version.sh"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 12,
                  "endLine": 6,
                  "endColumn": 17,
                  "snippet": {
                    "text": "try_version() {\n\t# usable version?\n\t[ \"${#1}\" -gt 0 ] || return 0\n\t# strip the git tag prefix\n\techo \"${1#v}\"\n\texit 0\n}\n",
                    "rendered": {
                      "text": "try_version() {\n\t# usable version?\n\t[ \"${#1}\" -gt 0 ] || return 0\n\t# strip the git tag prefix\n\techo \"${1#v}\"\n\texit 0\n}\n",
                      "markdown": "`try_version() {\n\t# usable version?\n\t[ \"${#1}\" -gt 0 ] || return 0\n\t# strip the git tag prefix\n\techo \"${1#v}\"\n\texit 0\n}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/Make.rules"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 19,
                  "endLine": 150,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nmake-cmd = $(subst \\#,\\\\\\#,$(subst $$,$$$$,$(call escsq,$(cmd_$(1)))))\n\n# printing commands\ncmd = @$(echo-cmd) $(cmd_$(1))\n\n# Name of target with a '.' as filename prefix. foo/bar.o => foo/.bar.o\ndot-target = $(dir $@).$(notdir $@)\n",
                    "rendered": {
                      "text": "\nmake-cmd = $(subst \\#,\\\\\\#,$(subst $$,$$$$,$(call escsq,$(cmd_$(1)))))\n\n# printing commands\ncmd = @$(echo-cmd) $(cmd_$(1))\n\n# Name of target with a '.' as filename prefix. foo/bar.o => foo/.bar.o\ndot-target = $(dir $@).$(notdir $@)\n",
                      "markdown": "`\nmake-cmd = $(subst \\#,\\\\\\#,$(subst $$,$$$$,$(call escsq,$(cmd_$(1)))))\n\n# printing commands\ncmd = @$(echo-cmd) $(cmd_$(1))\n\n# Name of target with a '.' as filename prefix. foo/bar.o => foo/.bar.o\ndot-target = $(dir $@).$(notdir $@)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/Make.rules"
                },
                "region": {
                  "startLine": 358,
                  "startColumn": 21,
                  "endLine": 358,
                  "endColumn": 26,
                  "snippet": {
                    "text": "endif\n\ndist:\n\tgit archive --format tar --prefix=$(PACKAGE)-$(DIST_VERSION)/ \\\n\t\t$(TAGPREFIX)$(DIST_VERSION) \\\n\t\t| bzip2 -9 > $(PACKAGE)-$(DIST_VERSION).tar.bz2\n\n",
                    "rendered": {
                      "text": "endif\n\ndist:\n\tgit archive --format tar --prefix=$(PACKAGE)-$(DIST_VERSION)/ \\\n\t\t$(TAGPREFIX)$(DIST_VERSION) \\\n\t\t| bzip2 -9 > $(PACKAGE)-$(DIST_VERSION).tar.bz2\n\n",
                      "markdown": "`endif\n\ndist:\n\tgit archive --format tar --prefix=$(PACKAGE)-$(DIST_VERSION)/ \\\n\t\t$(TAGPREFIX)$(DIST_VERSION) \\\n\t\t| bzip2 -9 > $(PACKAGE)-$(DIST_VERSION).tar.bz2\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/Make.rules"
                },
                "region": {
                  "startLine": 358,
                  "endLine": 358,
                  "endColumn": 5,
                  "snippet": {
                    "text": "endif\n\ndist:\n\tgit archive --format tar --prefix=$(PACKAGE)-$(DIST_VERSION)/ \\\n\t\t$(TAGPREFIX)$(DIST_VERSION) \\\n\t\t| bzip2 -9 > $(PACKAGE)-$(DIST_VERSION).tar.bz2\n\n",
                    "rendered": {
                      "text": "endif\n\ndist:\n\tgit archive --format tar --prefix=$(PACKAGE)-$(DIST_VERSION)/ \\\n\t\t$(TAGPREFIX)$(DIST_VERSION) \\\n\t\t| bzip2 -9 > $(PACKAGE)-$(DIST_VERSION).tar.bz2\n\n",
                      "markdown": "`endif\n\ndist:\n\tgit archive --format tar --prefix=$(PACKAGE)-$(DIST_VERSION)/ \\\n\t\t$(TAGPREFIX)$(DIST_VERSION) \\\n\t\t| bzip2 -9 > $(PACKAGE)-$(DIST_VERSION).tar.bz2\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/Make.rules"
                },
                "region": {
                  "startLine": 342,
                  "startColumn": 18,
                  "endLine": 342,
                  "endColumn": 25,
                  "snippet": {
                    "text": "ifeq ($(toplevelrun),yes)\n\t$(Q)find . $(RCS_FIND_IGNORE) \\\n\t\t\\( -name '*.[oas]' -o -name '.*.cmd' -o -name '.*.d' \\) \\\n\t\t-type f -print | xargs rm -f\nendif\n\t$(Q)rm -rf $(addprefix $(obj)/, \\\n\t\t$(sort\t$(progs-y) $(progs-n) $(progs-) \\\n",
                    "rendered": {
                      "text": "ifeq ($(toplevelrun),yes)\n\t$(Q)find . $(RCS_FIND_IGNORE) \\\n\t\t\\( -name '*.[oas]' -o -name '.*.cmd' -o -name '.*.d' \\) \\\n\t\t-type f -print | xargs rm -f\nendif\n\t$(Q)rm -rf $(addprefix $(obj)/, \\\n\t\t$(sort\t$(progs-y) $(progs-n) $(progs-) \\\n",
                      "markdown": "`ifeq ($(toplevelrun),yes)\n\t$(Q)find . $(RCS_FIND_IGNORE) \\\n\t\t\\( -name '*.[oas]' -o -name '.*.cmd' -o -name '.*.d' \\) \\\n\t\t-type f -print | xargs rm -f\nendif\n\t$(Q)rm -rf $(addprefix $(obj)/, \\\n\t\t$(sort\t$(progs-y) $(progs-n) $(progs-) \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/Make.rules"
                },
                "region": {
                  "startLine": 321,
                  "startColumn": 1,
                  "endLine": 321,
                  "endColumn": 6,
                  "snippet": {
                    "text": "endif\n\n##\n# Top level rules.\n\n%/: FORCE\n\t$(Q)$(MAKE) -f Make.rules build=$(build-dir) $(MAKECMDGOALS)\n",
                    "rendered": {
                      "text": "endif\n\n##\n# Top level rules.\n\n%/: FORCE\n\t$(Q)$(MAKE) -f Make.rules build=$(build-dir) $(MAKECMDGOALS)\n",
                      "markdown": "`endif\n\n##\n# Top level rules.\n\n%/: FORCE\n\t$(Q)$(MAKE) -f Make.rules build=$(build-dir) $(MAKECMDGOALS)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/Make.rules"
                },
                "region": {
                  "startLine": 283,
                  "startColumn": 15,
                  "endLine": 283,
                  "endColumn": 20,
                  "snippet": {
                    "text": "####\n# Template (.in) files\n\nquiet_cmd_sed = SED     $@\n      cmd_sed = $(SED) \\\n\t\t-e \"s|@EXEC_DIR@|$(SBINDIR)|\" \\\n\t\t-e \"s|@LIB_DIR@|$(LIBDIR)|\" \\\n",
                    "rendered": {
                      "text": "####\n# Template (.in) files\n\nquiet_cmd_sed = SED     $@\n      cmd_sed = $(SED) \\\n\t\t-e \"s|@EXEC_DIR@|$(SBINDIR)|\" \\\n\t\t-e \"s|@LIB_DIR@|$(LIBDIR)|\" \\\n",
                      "markdown": "`####\n# Template (.in) files\n\nquiet_cmd_sed = SED     $@\n      cmd_sed = $(SED) \\\n\t\t-e \"s|@EXEC_DIR@|$(SBINDIR)|\" \\\n\t\t-e \"s|@LIB_DIR@|$(LIBDIR)|\" \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/Make.rules"
                },
                "region": {
                  "startLine": 200,
                  "startColumn": 49,
                  "endLine": 200,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\ndefine rule_cc_o_c\n\t$(call echo-cmd,cc_o_c) $(cmd_cc_o_c);\t\t\\\n\t(echo 'cmd_$@ := $(call make-cmd,cc_o_c)'; echo; cat $(depfile)) \\\n\t\t> $(dot-target).cmd ; \\\n\trm $(depfile)\nendef\n",
                    "rendered": {
                      "text": "\ndefine rule_cc_o_c\n\t$(call echo-cmd,cc_o_c) $(cmd_cc_o_c);\t\t\\\n\t(echo 'cmd_$@ := $(call make-cmd,cc_o_c)'; echo; cat $(depfile)) \\\n\t\t> $(dot-target).cmd ; \\\n\trm $(depfile)\nendef\n",
                      "markdown": "`\ndefine rule_cc_o_c\n\t$(call echo-cmd,cc_o_c) $(cmd_cc_o_c);\t\t\\\n\t(echo 'cmd_$@ := $(call make-cmd,cc_o_c)'; echo; cat $(depfile)) \\\n\t\t> $(dot-target).cmd ; \\\n\trm $(depfile)\nendef\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/Make.rules"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 1,
                  "endLine": 162,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# Escape single quote for use in echo statements\nescsq = $(subst $(squote),'\\$(squote)',$1)\n\n# Find any prerequisites that is newer than target or that does not exist.\n# PHONY targets skipped in both cases.\nlocal-target-prereqs = %\nany-prereq = $(filter $(local-target-prereqs), $(filter-out $(PHONY),$?) $(filter-out $(PHONY) $(wildcard $^), $^))\n",
                    "rendered": {
                      "text": "# Escape single quote for use in echo statements\nescsq = $(subst $(squote),'\\$(squote)',$1)\n\n# Find any prerequisites that is newer than target or that does not exist.\n# PHONY targets skipped in both cases.\nlocal-target-prereqs = %\nany-prereq = $(filter $(local-target-prereqs), $(filter-out $(PHONY),$?) $(filter-out $(PHONY) $(wildcard $^), $^))\n",
                      "markdown": "`# Escape single quote for use in echo statements\nescsq = $(subst $(squote),'\\$(squote)',$1)\n\n# Find any prerequisites that is newer than target or that does not exist.\n# PHONY targets skipped in both cases.\nlocal-target-prereqs = %\nany-prereq = $(filter $(local-target-prereqs), $(filter-out $(PHONY),$?) $(filter-out $(PHONY) $(wildcard $^), $^))\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/Make.rules"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 24,
                  "endLine": 80,
                  "endColumn": 29,
                  "snippet": {
                    "text": "LDFLAGS\t\t?= -g\nLDFLAGS_ALL\t+= $(LDFLAGS)\n\nexport CC AR LD LN SCDOC SED INSTALL INSTALLDIR CFLAGS_ALL LDFLAGS_ALL\n\nbuild\t\t:=\n\n",
                    "rendered": {
                      "text": "LDFLAGS\t\t?= -g\nLDFLAGS_ALL\t+= $(LDFLAGS)\n\nexport CC AR LD LN SCDOC SED INSTALL INSTALLDIR CFLAGS_ALL LDFLAGS_ALL\n\nbuild\t\t:=\n\n",
                      "markdown": "`LDFLAGS\t\t?= -g\nLDFLAGS_ALL\t+= $(LDFLAGS)\n\nexport CC AR LD LN SCDOC SED INSTALL INSTALLDIR CFLAGS_ALL LDFLAGS_ALL\n\nbuild\t\t:=\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/Make.rules"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 7,
                  "endLine": 70,
                  "snippet": {
                    "text": "LD\t\t:= $(CROSS_COMPILE)ld\nLN\t\t:= ln -sf\nSCDOC\t\t:= scdoc\nSED\t\t:= sed\nINSTALL\t\t:= install\nINSTALLDIR\t:= $(INSTALL) -d\n\nCFLAGS\t\t?= -g -O2\n",
                    "rendered": {
                      "text": "LD\t\t:= $(CROSS_COMPILE)ld\nLN\t\t:= ln -sf\nSCDOC\t\t:= scdoc\nSED\t\t:= sed\nINSTALL\t\t:= install\nINSTALLDIR\t:= $(INSTALL) -d\n\nCFLAGS\t\t?= -g -O2\n",
                      "markdown": "`LD\t\t:= $(CROSS_COMPILE)ld\nLN\t\t:= ln -sf\nSCDOC\t\t:= scdoc\nSED\t\t:= sed\nINSTALL\t\t:= install\nINSTALLDIR\t:= $(INSTALL) -d\n\nCFLAGS\t\t?= -g -O2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apk-tools.zip/Make.rules"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 15,
                  "endLine": 69,
                  "endColumn": 4,
                  "snippet": {
                    "text": "AR\t\t:= $(CROSS_COMPILE)ar\nLD\t\t:= $(CROSS_COMPILE)ld\nLN\t\t:= ln -sf\nSCDOC\t\t:= scdoc\nSED\t\t:= sed\nINSTALL\t\t:= install\nINSTALLDIR\t:= $(INSTALL) -d\n\n",
                    "rendered": {
                      "text": "AR\t\t:= $(CROSS_COMPILE)ar\nLD\t\t:= $(CROSS_COMPILE)ld\nLN\t\t:= ln -sf\nSCDOC\t\t:= scdoc\nSED\t\t:= sed\nINSTALL\t\t:= install\nINSTALLDIR\t:= $(INSTALL) -d\n\n",
                      "markdown": "`AR\t\t:= $(CROSS_COMPILE)ar\nLD\t\t:= $(CROSS_COMPILE)ld\nLN\t\t:= ln -sf\nSCDOC\t\t:= scdoc\nSED\t\t:= sed\nINSTALL\t\t:= install\nINSTALLDIR\t:= $(INSTALL) -d\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}