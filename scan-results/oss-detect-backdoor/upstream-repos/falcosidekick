{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/awssecuritylake.go"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 11,
                  "endLine": 149,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t\tName:   \"hostname\",\n\t\t\tType:   \"Other\",\n\t\t\tTypeID: 0,\n\t\t\tValue:  hostname,\n\t\t})\n\t}\n\n",
                    "rendered": {
                      "text": "\t\t\tName:   \"hostname\",\n\t\t\tType:   \"Other\",\n\t\t\tTypeID: 0,\n\t\t\tValue:  hostname,\n\t\t})\n\t}\n\n",
                      "markdown": "`\t\t\tName:   \"hostname\",\n\t\t\tType:   \"Other\",\n\t\t\tTypeID: 0,\n\t\t\tValue:  hostname,\n\t\t})\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/awssecuritylake.go"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 12,
                  "endLine": 146,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n\tif hostname != \"\" {\n\t\tocsfobs = append(ocsfobs, OCSFObservable{\n\t\t\tName:   \"hostname\",\n\t\t\tType:   \"Other\",\n\t\t\tTypeID: 0,\n\t\t\tValue:  hostname,\n",
                    "rendered": {
                      "text": "\n\tif hostname != \"\" {\n\t\tocsfobs = append(ocsfobs, OCSFObservable{\n\t\t\tName:   \"hostname\",\n\t\t\tType:   \"Other\",\n\t\t\tTypeID: 0,\n\t\t\tValue:  hostname,\n",
                      "markdown": "`\n\tif hostname != \"\" {\n\t\tocsfobs = append(ocsfobs, OCSFObservable{\n\t\t\tName:   \"hostname\",\n\t\t\tType:   \"Other\",\n\t\t\tTypeID: 0,\n\t\t\tValue:  hostname,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/awssecuritylake.go"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 4,
                  "endLine": 144,
                  "endColumn": 12,
                  "snippet": {
                    "text": "func getObservables(hostname string, outputFields map[string]interface{}) []OCSFObservable {\n\tocsfobs := []OCSFObservable{}\n\n\tif hostname != \"\" {\n\t\tocsfobs = append(ocsfobs, OCSFObservable{\n\t\t\tName:   \"hostname\",\n\t\t\tType:   \"Other\",\n",
                    "rendered": {
                      "text": "func getObservables(hostname string, outputFields map[string]interface{}) []OCSFObservable {\n\tocsfobs := []OCSFObservable{}\n\n\tif hostname != \"\" {\n\t\tocsfobs = append(ocsfobs, OCSFObservable{\n\t\t\tName:   \"hostname\",\n\t\t\tType:   \"Other\",\n",
                      "markdown": "`func getObservables(hostname string, outputFields map[string]interface{}) []OCSFObservable {\n\tocsfobs := []OCSFObservable{}\n\n\tif hostname != \"\" {\n\t\tocsfobs = append(ocsfobs, OCSFObservable{\n\t\t\tName:   \"hostname\",\n\t\t\tType:   \"Other\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/awssecuritylake.go"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 20,
                  "endLine": 141,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\treturn ocsfsf\n}\n\nfunc getObservables(hostname string, outputFields map[string]interface{}) []OCSFObservable {\n\tocsfobs := []OCSFObservable{}\n\n\tif hostname != \"\" {\n",
                    "rendered": {
                      "text": "\treturn ocsfsf\n}\n\nfunc getObservables(hostname string, outputFields map[string]interface{}) []OCSFObservable {\n\tocsfobs := []OCSFObservable{}\n\n\tif hostname != \"\" {\n",
                      "markdown": "`\treturn ocsfsf\n}\n\nfunc getObservables(hostname string, outputFields map[string]interface{}) []OCSFObservable {\n\tocsfobs := []OCSFObservable{}\n\n\tif hostname != \"\" {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/alertmanager_test.go"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 69,
                  "endLine": 66,
                  "endColumn": 77,
                  "snippet": {
                    "text": "last second.\",\"output_fields\":{\"ebpf/enabled\":\"1\",\"n drops/buffer?clone{fork]enter\":\"0\",\"n_drops_buffer_clone_fork_exit\":\"0\"},\"priority\":\"Debug\",\"rule\":\"Falco internal: syscall event drop\",\"time\":\"2023-03-03T03:03:03.000000003Z\"}`\n\texpectedOutput := `[{\"labels\":{\"ebpf_enabled\":\"1\",\"eventsource\":\"\",\"hostname\":\"host\",\"n_drops_buffer_clone_fork_enter\":\"0\",\"n_drops_buffer_clone_fork_exit\":\"0\",\"priority\":\"Warning\",\"rule\":\"Falco internal: syscall event drop\",\"severity\":\"warning\",\"source\":\"falco\"},\"annotations\":{\"description\":\"Falco internal: syscall event drop. 815508 system calls dropped in last second.\",\"",
                    "rendered": {
                      "text": "last second.\",\"output_fields\":{\"ebpf/enabled\":\"1\",\"n drops/buffer?clone{fork]enter\":\"0\",\"n_drops_buffer_clone_fork_exit\":\"0\"},\"priority\":\"Debug\",\"rule\":\"Falco internal: syscall event drop\",\"time\":\"2023-03-03T03:03:03.000000003Z\"}`\n\texpectedOutput := `[{\"labels\":{\"ebpf_enabled\":\"1\",\"eventsource\":\"\",\"hostname\":\"host\",\"n_drops_buffer_clone_fork_enter\":\"0\",\"n_drops_buffer_clone_fork_exit\":\"0\",\"priority\":\"Warning\",\"rule\":\"Falco internal: syscall event drop\",\"severity\":\"warning\",\"source\":\"falco\"},\"annotations\":{\"description\":\"Falco internal: syscall event drop. 815508 system calls dropped in last second.\",\"",
                      "markdown": "`last second.\",\"output_fields\":{\"ebpf/enabled\":\"1\",\"n drops/buffer?clone{fork]enter\":\"0\",\"n_drops_buffer_clone_fork_exit\":\"0\"},\"priority\":\"Debug\",\"rule\":\"Falco internal: syscall event drop\",\"time\":\"2023-03-03T03:03:03.000000003Z\"}`\n\texpectedOutput := `[{\"labels\":{\"ebpf_enabled\":\"1\",\"eventsource\":\"\",\"hostname\":\"host\",\"n_drops_buffer_clone_fork_enter\":\"0\",\"n_drops_buffer_clone_fork_exit\":\"0\",\"priority\":\"Warning\",\"rule\":\"Falco internal: syscall event drop\",\"severity\":\"warning\",\"source\":\"falco\"},\"annotations\":{\"description\":\"Falco internal: syscall event drop. 815508 system calls dropped in last second.\",\"`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/alertmanager_test.go"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 13,
                  "endLine": 65,
                  "endColumn": 21,
                  "snippet": {
                    "text": "Marshal(newAlertmanagerPayload(f, config))\n\trequire.Nil(t, err)\n\n\tvar o1, o2 []alertmanagerPayload\n\trequire.Nil(t, json.Unmarshal([]byte(expectedOutput), &o1))\n\trequire.Nil(t, json.Unmarshal(s, &o2))\n\n\trequire.Equal(t, o1, o2)\n}\n\nfunc TestNewAlertmanagerPayloadBadLabels(t *testing.T) {\n\tinput := `{\"hostname\":\"host\",\"output\":\"Falco internal: syscall event drop. 815508 system calls dropped in last second.\",\"output_fields\":{\"ebpf/enabled\":\"1\",\"n drops/buffer?clone{fork]enter\":\"0\",\"n_drops_buffer_clone_fork_exit\":\"0\"},\"priority\":\"Debug\",\"rule\":\"Falco internal: syscall event drop\",\"time\":\"2023-03-03T03:03:",
                    "rendered": {
                      "text": "Marshal(newAlertmanagerPayload(f, config))\n\trequire.Nil(t, err)\n\n\tvar o1, o2 []alertmanagerPayload\n\trequire.Nil(t, json.Unmarshal([]byte(expectedOutput), &o1))\n\trequire.Nil(t, json.Unmarshal(s, &o2))\n\n\trequire.Equal(t, o1, o2)\n}\n\nfunc TestNewAlertmanagerPayloadBadLabels(t *testing.T) {\n\tinput := `{\"hostname\":\"host\",\"output\":\"Falco internal: syscall event drop. 815508 system calls dropped in last second.\",\"output_fields\":{\"ebpf/enabled\":\"1\",\"n drops/buffer?clone{fork]enter\":\"0\",\"n_drops_buffer_clone_fork_exit\":\"0\"},\"priority\":\"Debug\",\"rule\":\"Falco internal: syscall event drop\",\"time\":\"2023-03-03T03:03:",
                      "markdown": "`Marshal(newAlertmanagerPayload(f, config))\n\trequire.Nil(t, err)\n\n\tvar o1, o2 []alertmanagerPayload\n\trequire.Nil(t, json.Unmarshal([]byte(expectedOutput), &o1))\n\trequire.Nil(t, json.Unmarshal(s, &o2))\n\n\trequire.Equal(t, o1, o2)\n}\n\nfunc TestNewAlertmanagerPayloadBadLabels(t *testing.T) {\n\tinput := `{\"hostname\":\"host\",\"output\":\"Falco internal: syscall event drop. 815508 system calls dropped in last second.\",\"output_fields\":{\"ebpf/enabled\":\"1\",\"n drops/buffer?clone{fork]enter\":\"0\",\"n_drops_buffer_clone_fork_exit\":\"0\"},\"priority\":\"Debug\",\"rule\":\"Falco internal: syscall event drop\",\"time\":\"2023-03-03T03:03:`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/alertmanager_test.go"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 69,
                  "endLine": 42,
                  "endColumn": 77,
                  "snippet": {
                    "text": "\"0\",\"n_drops_buffer_total\":\"815508\",\"n_drops_bug\":\"0\",\"n_drops_page_faults\":\"0\",\"n_drops_scratch_map\":\"0\",\"n_evts\":\"2270350\"},\"priority\":\"Debug\",\"rule\":\"Falco internal: syscall event drop\",\"time\":\"2023-03-03T03:03:03.000000003Z\"}`\n\texpectedOutput := `[{\"labels\":{\"ebpf_enabled\":\"1\",\"eventsource\":\"\",\"hostname\":\"host\",\"n_drops\":\">10000\",\"n_drops_buffer_clone_fork_enter\":\"0\",\"n_drops_buffer_clone_fork_exit\":\"0\",\"n_drops_buffer_connect_enter\":\"0\",\"n_drops_buffer_connect_exit\":\"0\",\"n_drops_buffer_dir_file_enter\":\">100\",\"n_drops_buffer_dir_file_exit\":\">100\",\"n_drops_buffer_execve_enter\":\"0\",\"n_drops_buffer_e",
                    "rendered": {
                      "text": "\"0\",\"n_drops_buffer_total\":\"815508\",\"n_drops_bug\":\"0\",\"n_drops_page_faults\":\"0\",\"n_drops_scratch_map\":\"0\",\"n_evts\":\"2270350\"},\"priority\":\"Debug\",\"rule\":\"Falco internal: syscall event drop\",\"time\":\"2023-03-03T03:03:03.000000003Z\"}`\n\texpectedOutput := `[{\"labels\":{\"ebpf_enabled\":\"1\",\"eventsource\":\"\",\"hostname\":\"host\",\"n_drops\":\">10000\",\"n_drops_buffer_clone_fork_enter\":\"0\",\"n_drops_buffer_clone_fork_exit\":\"0\",\"n_drops_buffer_connect_enter\":\"0\",\"n_drops_buffer_connect_exit\":\"0\",\"n_drops_buffer_dir_file_enter\":\">100\",\"n_drops_buffer_dir_file_exit\":\">100\",\"n_drops_buffer_execve_enter\":\"0\",\"n_drops_buffer_e",
                      "markdown": "`\"0\",\"n_drops_buffer_total\":\"815508\",\"n_drops_bug\":\"0\",\"n_drops_page_faults\":\"0\",\"n_drops_scratch_map\":\"0\",\"n_evts\":\"2270350\"},\"priority\":\"Debug\",\"rule\":\"Falco internal: syscall event drop\",\"time\":\"2023-03-03T03:03:03.000000003Z\"}`\n\texpectedOutput := `[{\"labels\":{\"ebpf_enabled\":\"1\",\"eventsource\":\"\",\"hostname\":\"host\",\"n_drops\":\">10000\",\"n_drops_buffer_clone_fork_enter\":\"0\",\"n_drops_buffer_clone_fork_exit\":\"0\",\"n_drops_buffer_connect_enter\":\"0\",\"n_drops_buffer_connect_exit\":\"0\",\"n_drops_buffer_dir_file_enter\":\">100\",\"n_drops_buffer_dir_file_exit\":\">100\",\"n_drops_buffer_execve_enter\":\"0\",\"n_drops_buffer_e`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/alertmanager_test.go"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 13,
                  "endLine": 41,
                  "endColumn": 21,
                  "snippet": {
                    "text": "Marshal(newAlertmanagerPayload(f, config))\n\trequire.Nil(t, err)\n\n\tvar o1, o2 []alertmanagerPayload\n\trequire.Nil(t, json.Unmarshal([]byte(expectedOutput), &o1))\n\trequire.Nil(t, json.Unmarshal(s, &o2))\n\n\trequire.Equal(t, o1, o2)\n}\n\nfunc TestNewAlertmanagerPayloadDropEvent(t *testing.T) {\n\tinput := `{\"hostname\":\"host\",\"output\":\"Falco internal: syscall event drop. 815508 system calls dropped in last second.\",\"output_fields\":{\"ebpf_enabled\":\"1\",\"n_drops\":\"815508\",\"n_drops_buffer_clone_fork_enter\":\"0\",\"n_drops_buffer_clone_fork_exit\":\"0\",\"n_drops_buffer_connect_enter\":\"0\",\"n_drops_buffer_connect_exit\":\"0\",\"",
                    "rendered": {
                      "text": "Marshal(newAlertmanagerPayload(f, config))\n\trequire.Nil(t, err)\n\n\tvar o1, o2 []alertmanagerPayload\n\trequire.Nil(t, json.Unmarshal([]byte(expectedOutput), &o1))\n\trequire.Nil(t, json.Unmarshal(s, &o2))\n\n\trequire.Equal(t, o1, o2)\n}\n\nfunc TestNewAlertmanagerPayloadDropEvent(t *testing.T) {\n\tinput := `{\"hostname\":\"host\",\"output\":\"Falco internal: syscall event drop. 815508 system calls dropped in last second.\",\"output_fields\":{\"ebpf_enabled\":\"1\",\"n_drops\":\"815508\",\"n_drops_buffer_clone_fork_enter\":\"0\",\"n_drops_buffer_clone_fork_exit\":\"0\",\"n_drops_buffer_connect_enter\":\"0\",\"n_drops_buffer_connect_exit\":\"0\",\"",
                      "markdown": "`Marshal(newAlertmanagerPayload(f, config))\n\trequire.Nil(t, err)\n\n\tvar o1, o2 []alertmanagerPayload\n\trequire.Nil(t, json.Unmarshal([]byte(expectedOutput), &o1))\n\trequire.Nil(t, json.Unmarshal(s, &o2))\n\n\trequire.Equal(t, o1, o2)\n}\n\nfunc TestNewAlertmanagerPayloadDropEvent(t *testing.T) {\n\tinput := `{\"hostname\":\"host\",\"output\":\"Falco internal: syscall event drop. 815508 system calls dropped in last second.\",\"output_fields\":{\"ebpf_enabled\":\"1\",\"n_drops\":\"815508\",\"n_drops_buffer_clone_fork_enter\":\"0\",\"n_drops_buffer_clone_fork_exit\":\"0\",\"n_drops_buffer_connect_enter\":\"0\",\"n_drops_buffer_connect_exit\":\"0\",\"`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/alertmanager_test.go"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 149,
                  "endLine": 18,
                  "endColumn": 157,
                  "snippet": {
                    "text": "y\":\"critical\", \"value\":100} ,{\"priority\":\"warning\", \"value\":10}, {\"priority\":\"warning\", \"value\":1}]`\n\nfunc TestNewAlertmanagerPayloadO(t *testing.T) {\n\texpectedOutput := `[{\"labels\":{\"proc_name\":\"falcosidekick\",\"priority\":\"Debug\",\"severity\": \"information\",\"proc_tty\":\"1234\",\"eventsource\":\"syscalls\",\"hostname\":\"test-host\",\"rule\":\"Test rule\",\"source\":\"falco\",\"tags\":\"example,test\"},\"annotations\":{\"info\":\"This is a test from falcosidekick\",\"description\":\"This is a test from falcosidekick\",\"summary\":\"Test rule\"}}]`\n\tvar f types.FalcoPayload\n\td := json.NewDecoder(strings.NewReader(falcoTestInput))\n\td.UseNumb",
                    "rendered": {
                      "text": "y\":\"critical\", \"value\":100} ,{\"priority\":\"warning\", \"value\":10}, {\"priority\":\"warning\", \"value\":1}]`\n\nfunc TestNewAlertmanagerPayloadO(t *testing.T) {\n\texpectedOutput := `[{\"labels\":{\"proc_name\":\"falcosidekick\",\"priority\":\"Debug\",\"severity\": \"information\",\"proc_tty\":\"1234\",\"eventsource\":\"syscalls\",\"hostname\":\"test-host\",\"rule\":\"Test rule\",\"source\":\"falco\",\"tags\":\"example,test\"},\"annotations\":{\"info\":\"This is a test from falcosidekick\",\"description\":\"This is a test from falcosidekick\",\"summary\":\"Test rule\"}}]`\n\tvar f types.FalcoPayload\n\td := json.NewDecoder(strings.NewReader(falcoTestInput))\n\td.UseNumb",
                      "markdown": "`y\":\"critical\", \"value\":100} ,{\"priority\":\"warning\", \"value\":10}, {\"priority\":\"warning\", \"value\":1}]`\n\nfunc TestNewAlertmanagerPayloadO(t *testing.T) {\n\texpectedOutput := `[{\"labels\":{\"proc_name\":\"falcosidekick\",\"priority\":\"Debug\",\"severity\": \"information\",\"proc_tty\":\"1234\",\"eventsource\":\"syscalls\",\"hostname\":\"test-host\",\"rule\":\"Test rule\",\"source\":\"falco\",\"tags\":\"example,test\"},\"annotations\":{\"info\":\"This is a test from falcosidekick\",\"description\":\"This is a test from falcosidekick\",\"summary\":\"Test rule\"}}]`\n\tvar f types.FalcoPayload\n\td := json.NewDecoder(strings.NewReader(falcoTestInput))\n\td.UseNumb`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/slack.go"
                },
                "region": {
                  "startLine": 152,
                  "startColumn": 9,
                  "endLine": 152,
                  "endColumn": 15,
                  "snippet": {
                    "text": "func (c *Client) SlackPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Slack.Add(Total, 1)\n\n\terr := c.Post(newSlackPayload(falcopayload, c.Config))\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:slack\", \"status:error\"})\n\t\tc.Stats.Slack.Add(Error, 1)\n",
                    "rendered": {
                      "text": "func (c *Client) SlackPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Slack.Add(Total, 1)\n\n\terr := c.Post(newSlackPayload(falcopayload, c.Config))\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:slack\", \"status:error\"})\n\t\tc.Stats.Slack.Add(Error, 1)\n",
                      "markdown": "`func (c *Client) SlackPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Slack.Add(Total, 1)\n\n\terr := c.Post(newSlackPayload(falcopayload, c.Config))\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:slack\", \"status:error\"})\n\t\tc.Stats.Slack.Add(Error, 1)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/slack.go"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 9,
                  "endLine": 122,
                  "snippet": {
                    "text": "\tcase types.Critical:\n\t\tcolor = Orange\n\tcase types.Error:\n\t\tcolor = Red\n\tcase types.Warning:\n\t\tcolor = Yellow\n\tcase types.Notice:\n\t\tcolor = Lightcyan\n",
                    "rendered": {
                      "text": "\tcase types.Critical:\n\t\tcolor = Orange\n\tcase types.Error:\n\t\tcolor = Red\n\tcase types.Warning:\n\t\tcolor = Yellow\n\tcase types.Notice:\n\t\tcolor = Lightcyan\n",
                      "markdown": "`\tcase types.Critical:\n\t\tcolor = Orange\n\tcase types.Error:\n\t\tcolor = Red\n\tcase types.Warning:\n\t\tcolor = Yellow\n\tcase types.Notice:\n\t\tcolor = Lightcyan\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/slack.go"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 9,
                  "endLine": 116,
                  "snippet": {
                    "text": "\tvar color string\n\tswitch falcopayload.Priority {\n\tcase types.Emergency:\n\t\tcolor = Red\n\tcase types.Alert:\n\t\tcolor = Orange\n\tcase types.Critical:\n\t\tcolor = Orange\n",
                    "rendered": {
                      "text": "\tvar color string\n\tswitch falcopayload.Priority {\n\tcase types.Emergency:\n\t\tcolor = Red\n\tcase types.Alert:\n\t\tcolor = Orange\n\tcase types.Critical:\n\t\tcolor = Orange\n",
                      "markdown": "`\tvar color string\n\tswitch falcopayload.Priority {\n\tcase types.Emergency:\n\t\tcolor = Red\n\tcase types.Alert:\n\t\tcolor = Orange\n\tcase types.Critical:\n\t\tcolor = Orange\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/slack.go"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 15,
                  "endLine": 87,
                  "snippet": {
                    "text": "\t\t\tfields = append(fields, field)\n\t\t}\n\n\t\tfield.Title = Time\n\t\tfield.Short = false\n\t\tfield.Value = falcopayload.Time.String()\n\t\tfields = append(fields, field)\n\n",
                    "rendered": {
                      "text": "\t\t\tfields = append(fields, field)\n\t\t}\n\n\t\tfield.Title = Time\n\t\tfield.Short = false\n\t\tfield.Value = falcopayload.Time.String()\n\t\tfields = append(fields, field)\n\n",
                      "markdown": "`\t\t\tfields = append(fields, field)\n\t\t}\n\n\t\tfield.Title = Time\n\t\tfield.Short = false\n\t\tfield.Value = falcopayload.Time.String()\n\t\tfields = append(fields, field)\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/dynatrace.go"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 9,
                  "endLine": 118,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n\tc.ContentType = DynatraceContentType\n\n\terr := c.Post(newDynatracePayload(falcopayload).Payload, func(req *http.Request) {\n\t\treq.Header.Set(\"Authorization\", \"Api-Token \"+c.Config.Dynatrace.APIToken)\n\t})\n\tif err != nil {\n",
                    "rendered": {
                      "text": "\n\tc.ContentType = DynatraceContentType\n\n\terr := c.Post(newDynatracePayload(falcopayload).Payload, func(req *http.Request) {\n\t\treq.Header.Set(\"Authorization\", \"Api-Token \"+c.Config.Dynatrace.APIToken)\n\t})\n\tif err != nil {\n",
                      "markdown": "`\n\tc.ContentType = DynatraceContentType\n\n\terr := c.Post(newDynatracePayload(falcopayload).Payload, func(req *http.Request) {\n\t\treq.Header.Set(\"Authorization\", \"Api-Token \"+c.Config.Dynatrace.APIToken)\n\t})\n\tif err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/client.go"
                },
                "region": {
                  "startLine": 216,
                  "startColumn": 27,
                  "endLine": 216,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t\t}\n\t\tbody = dec\n\t}\n\tcontentType := resp.Header.Get(\"Content-Type\")\n\tif contentType == \"application/json\" {\n\t\tvar compactedBody bytes.Buffer\n\t\terr := json.Compact(&compactedBody, body)\n",
                    "rendered": {
                      "text": "\t\t}\n\t\tbody = dec\n\t}\n\tcontentType := resp.Header.Get(\"Content-Type\")\n\tif contentType == \"application/json\" {\n\t\tvar compactedBody bytes.Buffer\n\t\terr := json.Compact(&compactedBody, body)\n",
                      "markdown": "`\t\t}\n\t\tbody = dec\n\t}\n\tcontentType := resp.Header.Get(\"Content-Type\")\n\tif contentType == \"application/json\" {\n\t\tvar compactedBody bytes.Buffer\n\t\terr := json.Compact(&compactedBody, body)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/client.go"
                },
                "region": {
                  "startLine": 207,
                  "startColumn": 31,
                  "endLine": 207,
                  "endColumn": 36,
                  "snippet": {
                    "text": "// Get the response body as inlined string\nfunc (c *Client) getInlinedBodyAsString(resp *http.Response) string {\n\tbody, _ := io.ReadAll(resp.Body)\n\tcontentEncoding := resp.Header.Get(\"Content-Encoding\")\n\tif contentEncoding == \"gzip\" {\n\t\tdec, err := decompressData(body)\n\t\tif err != nil {\n",
                    "rendered": {
                      "text": "// Get the response body as inlined string\nfunc (c *Client) getInlinedBodyAsString(resp *http.Response) string {\n\tbody, _ := io.ReadAll(resp.Body)\n\tcontentEncoding := resp.Header.Get(\"Content-Encoding\")\n\tif contentEncoding == \"gzip\" {\n\t\tdec, err := decompressData(body)\n\t\tif err != nil {\n",
                      "markdown": "`// Get the response body as inlined string\nfunc (c *Client) getInlinedBodyAsString(resp *http.Response) string {\n\tbody, _ := io.ReadAll(resp.Body)\n\tcontentEncoding := resp.Header.Get(\"Content-Encoding\")\n\tif contentEncoding == \"gzip\" {\n\t\tdec, err := decompressData(body)\n\t\tif err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/client.go"
                },
                "region": {
                  "startLine": 150,
                  "endLine": 150,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n// InitClient returns a new output.Client for accessing the different API.\nfunc NewClient(outputType string, defaultEndpointURL string, cfg types.CommonConfig, params types.InitClientArgs) (*Client, error) {\n\treg := regexp.MustCompile(`(http|nats)(s?)://.*`)\n\tif !reg.MatchString(defaultEndpointURL) {\n\t\tlog.Printf(\"[ERROR] : %v - %v\\n\", outputType, \"Bad Endpoint\")\n\t\treturn nil, ErrClientCreation\n",
                    "rendered": {
                      "text": "\n// InitClient returns a new output.Client for accessing the different API.\nfunc NewClient(outputType string, defaultEndpointURL string, cfg types.CommonConfig, params types.InitClientArgs) (*Client, error) {\n\treg := regexp.MustCompile(`(http|nats)(s?)://.*`)\n\tif !reg.MatchString(defaultEndpointURL) {\n\t\tlog.Printf(\"[ERROR] : %v - %v\\n\", outputType, \"Bad Endpoint\")\n\t\treturn nil, ErrClientCreation\n",
                      "markdown": "`\n// InitClient returns a new output.Client for accessing the different API.\nfunc NewClient(outputType string, defaultEndpointURL string, cfg types.CommonConfig, params types.InitClientArgs) (*Client, error) {\n\treg := regexp.MustCompile(`(http|nats)(s?)://.*`)\n\tif !reg.MatchString(defaultEndpointURL) {\n\t\tlog.Printf(\"[ERROR] : %v - %v\\n\", outputType, \"Bad Endpoint\")\n\t\treturn nil, ErrClientCreation\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/client.go"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 57,
                  "endLine": 89,
                  "endColumn": 65,
                  "snippet": {
                    "text": "const UserAgentHeaderValue = \"Falcosidekick\"\nconst Bearer = \"Bearer\"\n\n// files names are static fo the shake of helm and single docker compatibility\nconst MutualTLSClientCertFilename = \"/client.crt\"\nconst MutualTLSClientKeyFilename = \"/client.key\"\nconst MutualTLSCacertFilename = \"/ca.crt\"\n",
                    "rendered": {
                      "text": "const UserAgentHeaderValue = \"Falcosidekick\"\nconst Bearer = \"Bearer\"\n\n// files names are static fo the shake of helm and single docker compatibility\nconst MutualTLSClientCertFilename = \"/client.crt\"\nconst MutualTLSClientKeyFilename = \"/client.key\"\nconst MutualTLSCacertFilename = \"/ca.crt\"\n",
                      "markdown": "`const UserAgentHeaderValue = \"Falcosidekick\"\nconst Bearer = \"Bearer\"\n\n// files names are static fo the shake of helm and single docker compatibility\nconst MutualTLSClientCertFilename = \"/client.crt\"\nconst MutualTLSClientKeyFilename = \"/client.key\"\nconst MutualTLSCacertFilename = \"/ca.crt\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/mattermost.go"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 9,
                  "endLine": 129,
                  "endColumn": 15,
                  "snippet": {
                    "text": "func (c *Client) MattermostPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Mattermost.Add(Total, 1)\n\n\terr := c.Post(newMattermostPayload(falcopayload, c.Config))\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:mattermost\", \"status:error\"})\n\t\tc.Stats.Mattermost.Add(Error, 1)\n",
                    "rendered": {
                      "text": "func (c *Client) MattermostPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Mattermost.Add(Total, 1)\n\n\terr := c.Post(newMattermostPayload(falcopayload, c.Config))\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:mattermost\", \"status:error\"})\n\t\tc.Stats.Mattermost.Add(Error, 1)\n",
                      "markdown": "`func (c *Client) MattermostPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Mattermost.Add(Total, 1)\n\n\terr := c.Post(newMattermostPayload(falcopayload, c.Config))\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:mattermost\", \"status:error\"})\n\t\tc.Stats.Mattermost.Add(Error, 1)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/mattermost.go"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 9,
                  "endLine": 97,
                  "snippet": {
                    "text": "\tcase types.Critical:\n\t\tcolor = Orange\n\tcase types.Error:\n\t\tcolor = Red\n\tcase types.Warning:\n\t\tcolor = Yellow\n\tcase types.Notice:\n\t\tcolor = Lightcyan\n",
                    "rendered": {
                      "text": "\tcase types.Critical:\n\t\tcolor = Orange\n\tcase types.Error:\n\t\tcolor = Red\n\tcase types.Warning:\n\t\tcolor = Yellow\n\tcase types.Notice:\n\t\tcolor = Lightcyan\n",
                      "markdown": "`\tcase types.Critical:\n\t\tcolor = Orange\n\tcase types.Error:\n\t\tcolor = Red\n\tcase types.Warning:\n\t\tcolor = Yellow\n\tcase types.Notice:\n\t\tcolor = Lightcyan\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/mattermost.go"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 9,
                  "endLine": 91,
                  "snippet": {
                    "text": "\tvar color string\n\tswitch falcopayload.Priority {\n\tcase types.Emergency:\n\t\tcolor = Red\n\tcase types.Alert:\n\t\tcolor = Orange\n\tcase types.Critical:\n\t\tcolor = Orange\n",
                    "rendered": {
                      "text": "\tvar color string\n\tswitch falcopayload.Priority {\n\tcase types.Emergency:\n\t\tcolor = Red\n\tcase types.Alert:\n\t\tcolor = Orange\n\tcase types.Critical:\n\t\tcolor = Orange\n",
                      "markdown": "`\tvar color string\n\tswitch falcopayload.Priority {\n\tcase types.Emergency:\n\t\tcolor = Red\n\tcase types.Alert:\n\t\tcolor = Orange\n\tcase types.Critical:\n\t\tcolor = Orange\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/mattermost.go"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 15,
                  "endLine": 62,
                  "snippet": {
                    "text": "\t\t\tfields = append(fields, field)\n\t\t}\n\n\t\tfield.Title = Time\n\t\tfield.Short = false\n\t\tfield.Value = falcopayload.Time.String()\n\t\tfields = append(fields, field)\n\n",
                    "rendered": {
                      "text": "\t\t\tfields = append(fields, field)\n\t\t}\n\n\t\tfield.Title = Time\n\t\tfield.Short = false\n\t\tfield.Value = falcopayload.Time.String()\n\t\tfields = append(fields, field)\n\n",
                      "markdown": "`\t\t\tfields = append(fields, field)\n\t\t}\n\n\t\tfield.Title = Time\n\t\tfield.Short = false\n\t\tfield.Value = falcopayload.Time.String()\n\t\tfields = append(fields, field)\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/alertmanager.go"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 9,
                  "endLine": 135,
                  "endColumn": 15,
                  "snippet": {
                    "text": "func (c *Client) AlertmanagerPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Alertmanager.Add(Total, 1)\n\n\terr := c.Post(newAlertmanagerPayload(falcopayload, c.Config), func(req *http.Request) {\n\t\tfor i, j := range c.Config.Alertmanager.CustomHeaders {\n\t\t\treq.Header.Set(i, j)\n\t\t}\n",
                    "rendered": {
                      "text": "func (c *Client) AlertmanagerPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Alertmanager.Add(Total, 1)\n\n\terr := c.Post(newAlertmanagerPayload(falcopayload, c.Config), func(req *http.Request) {\n\t\tfor i, j := range c.Config.Alertmanager.CustomHeaders {\n\t\t\treq.Header.Set(i, j)\n\t\t}\n",
                      "markdown": "`func (c *Client) AlertmanagerPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Alertmanager.Add(Total, 1)\n\n\terr := c.Post(newAlertmanagerPayload(falcopayload, c.Config), func(req *http.Request) {\n\t\tfor i, j := range c.Config.Alertmanager.CustomHeaders {\n\t\t\treq.Header.Set(i, j)\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/alertmanager.go"
                },
                "region": {
                  "startLine": 37,
                  "endLine": 37,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n// labels should match [a-zA-Z_][a-zA-Z0-9_]*\nvar (\n\treg = regexp.MustCompile(\"[^a-zA-Z0-9_]\")\n)\n\nfunc newAlertmanagerPayload(falcopayload types.FalcoPayload, config *types.Configuration) []alertmanagerPayload {\n",
                    "rendered": {
                      "text": "\n// labels should match [a-zA-Z_][a-zA-Z0-9_]*\nvar (\n\treg = regexp.MustCompile(\"[^a-zA-Z0-9_]\")\n)\n\nfunc newAlertmanagerPayload(falcopayload types.FalcoPayload, config *types.Configuration) []alertmanagerPayload {\n",
                      "markdown": "`\n// labels should match [a-zA-Z_][a-zA-Z0-9_]*\nvar (\n\treg = regexp.MustCompile(\"[^a-zA-Z0-9_]\")\n)\n\nfunc newAlertmanagerPayload(falcopayload types.FalcoPayload, config *types.Configuration) []alertmanagerPayload {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/gcp.go"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 18,
                  "endLine": 148,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t}\n\n\tresult := c.GCPTopicClient.Publish(context.Background(), message)\n\tid, err := result.Get(context.Background())\n\tif err != nil {\n\t\tlog.Printf(\"[ERROR] : GCPPubSub - %v - %v\\n\", \"Error while publishing message\", err.Error())\n\t\tc.Stats.GCPPubSub.Add(Error, 1)\n",
                    "rendered": {
                      "text": "\t}\n\n\tresult := c.GCPTopicClient.Publish(context.Background(), message)\n\tid, err := result.Get(context.Background())\n\tif err != nil {\n\t\tlog.Printf(\"[ERROR] : GCPPubSub - %v - %v\\n\", \"Error while publishing message\", err.Error())\n\t\tc.Stats.GCPPubSub.Add(Error, 1)\n",
                      "markdown": "`\t}\n\n\tresult := c.GCPTopicClient.Publish(context.Background(), message)\n\tid, err := result.Get(context.Background())\n\tif err != nil {\n\t\tlog.Printf(\"[ERROR] : GCPPubSub - %v - %v\\n\", \"Error while publishing message\", err.Error())\n\t\tc.Stats.GCPPubSub.Add(Error, 1)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/gcp.go"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 38,
                  "endLine": 32,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\tbase64decodedCredentialsData, err := base64.StdEncoding.DecodeString(config.GCP.Credentials)\n\tif err != nil {\n\t\tlog.Printf(\"[ERROR] : GCP - %v\\n\", \"Error while base64-decoding GCP Credentials\")\n\t\treturn nil, errors.New(\"error while base64-decoding GCP Credentials\")\n\t}\n\n\tgoogleCredentialsData := string(base64decodedCredentialsData)\n",
                    "rendered": {
                      "text": "\tbase64decodedCredentialsData, err := base64.StdEncoding.DecodeString(config.GCP.Credentials)\n\tif err != nil {\n\t\tlog.Printf(\"[ERROR] : GCP - %v\\n\", \"Error while base64-decoding GCP Credentials\")\n\t\treturn nil, errors.New(\"error while base64-decoding GCP Credentials\")\n\t}\n\n\tgoogleCredentialsData := string(base64decodedCredentialsData)\n",
                      "markdown": "`\tbase64decodedCredentialsData, err := base64.StdEncoding.DecodeString(config.GCP.Credentials)\n\tif err != nil {\n\t\tlog.Printf(\"[ERROR] : GCP - %v\\n\", \"Error while base64-decoding GCP Credentials\")\n\t\treturn nil, errors.New(\"error while base64-decoding GCP Credentials\")\n\t}\n\n\tgoogleCredentialsData := string(base64decodedCredentialsData)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/gcp.go"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 50,
                  "endLine": 31,
                  "endColumn": 56,
                  "snippet": {
                    "text": "func NewGCPClient(config *types.Configuration, stats *types.Statistics, promStats *types.PromStatistics, statsdClient, dogstatsdClient *statsd.Client) (*Client, error) {\n\tbase64decodedCredentialsData, err := base64.StdEncoding.DecodeString(config.GCP.Credentials)\n\tif err != nil {\n\t\tlog.Printf(\"[ERROR] : GCP - %v\\n\", \"Error while base64-decoding GCP Credentials\")\n\t\treturn nil, errors.New(\"error while base64-decoding GCP Credentials\")\n\t}\n\n",
                    "rendered": {
                      "text": "func NewGCPClient(config *types.Configuration, stats *types.Statistics, promStats *types.PromStatistics, statsdClient, dogstatsdClient *statsd.Client) (*Client, error) {\n\tbase64decodedCredentialsData, err := base64.StdEncoding.DecodeString(config.GCP.Credentials)\n\tif err != nil {\n\t\tlog.Printf(\"[ERROR] : GCP - %v\\n\", \"Error while base64-decoding GCP Credentials\")\n\t\treturn nil, errors.New(\"error while base64-decoding GCP Credentials\")\n\t}\n\n",
                      "markdown": "`func NewGCPClient(config *types.Configuration, stats *types.Statistics, promStats *types.PromStatistics, statsdClient, dogstatsdClient *statsd.Client) (*Client, error) {\n\tbase64decodedCredentialsData, err := base64.StdEncoding.DecodeString(config.GCP.Credentials)\n\tif err != nil {\n\t\tlog.Printf(\"[ERROR] : GCP - %v\\n\", \"Error while base64-decoding GCP Credentials\")\n\t\treturn nil, errors.New(\"error while base64-decoding GCP Credentials\")\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/gcp.go"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 38,
                  "endLine": 29,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\n// NewGCPClient returns a new output.Client for accessing the GCP API.\nfunc NewGCPClient(config *types.Configuration, stats *types.Statistics, promStats *types.PromStatistics, statsdClient, dogstatsdClient *statsd.Client) (*Client, error) {\n\tbase64decodedCredentialsData, err := base64.StdEncoding.DecodeString(config.GCP.Credentials)\n\tif err != nil {\n\t\tlog.Printf(\"[ERROR] : GCP - %v\\n\", \"Error while base64-decoding GCP Credentials\")\n\t\treturn nil, errors.New(\"error while base64-decoding GCP Credentials\")\n",
                    "rendered": {
                      "text": "\n// NewGCPClient returns a new output.Client for accessing the GCP API.\nfunc NewGCPClient(config *types.Configuration, stats *types.Statistics, promStats *types.PromStatistics, statsdClient, dogstatsdClient *statsd.Client) (*Client, error) {\n\tbase64decodedCredentialsData, err := base64.StdEncoding.DecodeString(config.GCP.Credentials)\n\tif err != nil {\n\t\tlog.Printf(\"[ERROR] : GCP - %v\\n\", \"Error while base64-decoding GCP Credentials\")\n\t\treturn nil, errors.New(\"error while base64-decoding GCP Credentials\")\n",
                      "markdown": "`\n// NewGCPClient returns a new output.Client for accessing the GCP API.\nfunc NewGCPClient(config *types.Configuration, stats *types.Statistics, promStats *types.PromStatistics, statsdClient, dogstatsdClient *statsd.Client) (*Client, error) {\n\tbase64decodedCredentialsData, err := base64.StdEncoding.DecodeString(config.GCP.Credentials)\n\tif err != nil {\n\t\tlog.Printf(\"[ERROR] : GCP - %v\\n\", \"Error while base64-decoding GCP Credentials\")\n\t\treturn nil, errors.New(\"error while base64-decoding GCP Credentials\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/gcp.go"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 11,
                  "endLine": 7,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\nimport (\n\t\"context\"\n\t\"encoding/base64\"\n\t\"encoding/json\"\n\t\"errors\"\n\t\"fmt\"\n",
                    "rendered": {
                      "text": "\nimport (\n\t\"context\"\n\t\"encoding/base64\"\n\t\"encoding/json\"\n\t\"errors\"\n\t\"fmt\"\n",
                      "markdown": "`\nimport (\n\t\"context\"\n\t\"encoding/base64\"\n\t\"encoding/json\"\n\t\"errors\"\n\t\"fmt\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/teams.go"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 9,
                  "endLine": 121,
                  "endColumn": 15,
                  "snippet": {
                    "text": "func (c *Client) TeamsPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Teams.Add(Total, 1)\n\n\terr := c.Post(newTeamsPayload(falcopayload, c.Config))\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:teams\", \"status:error\"})\n\t\tc.Stats.Teams.Add(Error, 1)\n",
                    "rendered": {
                      "text": "func (c *Client) TeamsPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Teams.Add(Total, 1)\n\n\terr := c.Post(newTeamsPayload(falcopayload, c.Config))\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:teams\", \"status:error\"})\n\t\tc.Stats.Teams.Add(Error, 1)\n",
                      "markdown": "`func (c *Client) TeamsPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Teams.Add(Total, 1)\n\n\terr := c.Post(newTeamsPayload(falcopayload, c.Config))\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:teams\", \"status:error\"})\n\t\tc.Stats.Teams.Add(Error, 1)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/n8n.go"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 9,
                  "endLine": 16,
                  "endColumn": 15,
                  "snippet": {
                    "text": "func (c *Client) N8NPost(falcopayload types.FalcoPayload) {\n\tc.Stats.N8N.Add(Total, 1)\n\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.N8N.User != \"\" && c.Config.N8N.Password != \"\" {\n\t\t\treq.SetBasicAuth(c.Config.N8N.User, c.Config.N8N.Password)\n\t\t}\n",
                    "rendered": {
                      "text": "func (c *Client) N8NPost(falcopayload types.FalcoPayload) {\n\tc.Stats.N8N.Add(Total, 1)\n\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.N8N.User != \"\" && c.Config.N8N.Password != \"\" {\n\t\t\treq.SetBasicAuth(c.Config.N8N.User, c.Config.N8N.Password)\n\t\t}\n",
                      "markdown": "`func (c *Client) N8NPost(falcopayload types.FalcoPayload) {\n\tc.Stats.N8N.Add(Total, 1)\n\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.N8N.User != \"\" && c.Config.N8N.Password != \"\" {\n\t\t\treq.SetBasicAuth(c.Config.N8N.User, c.Config.N8N.Password)\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/n8n.go"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 52,
                  "endLine": 18,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.N8N.User != \"\" && c.Config.N8N.Password != \"\" {\n\t\t\treq.SetBasicAuth(c.Config.N8N.User, c.Config.N8N.Password)\n\t\t}\n\n\t\tif c.Config.N8N.HeaderAuthName != \"\" && c.Config.N8N.HeaderAuthValue != \"\" {\n",
                    "rendered": {
                      "text": "\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.N8N.User != \"\" && c.Config.N8N.Password != \"\" {\n\t\t\treq.SetBasicAuth(c.Config.N8N.User, c.Config.N8N.Password)\n\t\t}\n\n\t\tif c.Config.N8N.HeaderAuthName != \"\" && c.Config.N8N.HeaderAuthValue != \"\" {\n",
                      "markdown": "`\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.N8N.User != \"\" && c.Config.N8N.Password != \"\" {\n\t\t\treq.SetBasicAuth(c.Config.N8N.User, c.Config.N8N.Password)\n\t\t}\n\n\t\tif c.Config.N8N.HeaderAuthName != \"\" && c.Config.N8N.HeaderAuthValue != \"\" {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/n8n.go"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 45,
                  "endLine": 17,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\tc.Stats.N8N.Add(Total, 1)\n\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.N8N.User != \"\" && c.Config.N8N.Password != \"\" {\n\t\t\treq.SetBasicAuth(c.Config.N8N.User, c.Config.N8N.Password)\n\t\t}\n\n",
                    "rendered": {
                      "text": "\tc.Stats.N8N.Add(Total, 1)\n\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.N8N.User != \"\" && c.Config.N8N.Password != \"\" {\n\t\t\treq.SetBasicAuth(c.Config.N8N.User, c.Config.N8N.Password)\n\t\t}\n\n",
                      "markdown": "`\tc.Stats.N8N.Add(Total, 1)\n\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.N8N.User != \"\" && c.Config.N8N.Password != \"\" {\n\t\t\treq.SetBasicAuth(c.Config.N8N.User, c.Config.N8N.Password)\n\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/loki.go"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 9,
                  "endLine": 93,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\tc.Stats.Loki.Add(Total, 1)\n\tc.ContentType = LokiContentType\n\n\terr := c.Post(newLokiPayload(falcopayload, c.Config), func(req *http.Request) {\n\t\tlokiConfigureTenant(c.Config, req)\n\t\tlokiConfigureAuth(c.Config, req)\n\t\tlokiConfigureCustomHeaders(c.Config, req)\n",
                    "rendered": {
                      "text": "\tc.Stats.Loki.Add(Total, 1)\n\tc.ContentType = LokiContentType\n\n\terr := c.Post(newLokiPayload(falcopayload, c.Config), func(req *http.Request) {\n\t\tlokiConfigureTenant(c.Config, req)\n\t\tlokiConfigureAuth(c.Config, req)\n\t\tlokiConfigureCustomHeaders(c.Config, req)\n",
                      "markdown": "`\tc.Stats.Loki.Add(Total, 1)\n\tc.ContentType = LokiContentType\n\n\terr := c.Post(newLokiPayload(falcopayload, c.Config), func(req *http.Request) {\n\t\tlokiConfigureTenant(c.Config, req)\n\t\tlokiConfigureAuth(c.Config, req)\n\t\tlokiConfigureCustomHeaders(c.Config, req)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/cliq.go"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 9,
                  "endLine": 168,
                  "endColumn": 15,
                  "snippet": {
                    "text": "func (c *Client) CliqPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Cliq.Add(Total, 1)\n\n\terr := c.Post(newCliqPayload(falcopayload, c.Config), func(req *http.Request) {\n\t\treq.Header.Set(ContentTypeHeaderKey, \"application/json\")\n\t})\n\tif err != nil {\n",
                    "rendered": {
                      "text": "func (c *Client) CliqPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Cliq.Add(Total, 1)\n\n\terr := c.Post(newCliqPayload(falcopayload, c.Config), func(req *http.Request) {\n\t\treq.Header.Set(ContentTypeHeaderKey, \"application/json\")\n\t})\n\tif err != nil {\n",
                      "markdown": "`func (c *Client) CliqPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Cliq.Add(Total, 1)\n\n\terr := c.Post(newCliqPayload(falcopayload, c.Config), func(req *http.Request) {\n\t\treq.Header.Set(ContentTypeHeaderKey, \"application/json\")\n\t})\n\tif err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/cliq.go"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 15,
                  "endLine": 119,
                  "snippet": {
                    "text": "\t\t\ttable.Rows = append(table.Rows, field)\n\t\t}\n\n\t\tfield.Field = Time\n\t\tfield.Value = falcopayload.Time.String()\n\t\ttable.Rows = append(table.Rows, field)\n\n\t\ttable.Headers = tableSlideHeaders\n",
                    "rendered": {
                      "text": "\t\t\ttable.Rows = append(table.Rows, field)\n\t\t}\n\n\t\tfield.Field = Time\n\t\tfield.Value = falcopayload.Time.String()\n\t\ttable.Rows = append(table.Rows, field)\n\n\t\ttable.Headers = tableSlideHeaders\n",
                      "markdown": "`\t\t\ttable.Rows = append(table.Rows, field)\n\t\t}\n\n\t\tfield.Field = Time\n\t\tfield.Value = falcopayload.Time.String()\n\t\ttable.Rows = append(table.Rows, field)\n\n\t\ttable.Headers = tableSlideHeaders\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/redis.go"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 25,
                  "endLine": 28,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n\trClient := redis.NewClient(&redis.Options{\n\t\tAddr:     config.Redis.Address,\n\t\tPassword: config.Redis.Password,\n\t\tDB:       config.Redis.Database,\n\t})\n\t// Ping the Redis server to check if it's running\n",
                    "rendered": {
                      "text": "\n\trClient := redis.NewClient(&redis.Options{\n\t\tAddr:     config.Redis.Address,\n\t\tPassword: config.Redis.Password,\n\t\tDB:       config.Redis.Database,\n\t})\n\t// Ping the Redis server to check if it's running\n",
                      "markdown": "`\n\trClient := redis.NewClient(&redis.Options{\n\t\tAddr:     config.Redis.Address,\n\t\tPassword: config.Redis.Password,\n\t\tDB:       config.Redis.Database,\n\t})\n\t// Ping the Redis server to check if it's running\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/redis.go"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 2,
                  "endLine": 28,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n\trClient := redis.NewClient(&redis.Options{\n\t\tAddr:     config.Redis.Address,\n\t\tPassword: config.Redis.Password,\n\t\tDB:       config.Redis.Database,\n\t})\n\t// Ping the Redis server to check if it's running\n",
                    "rendered": {
                      "text": "\n\trClient := redis.NewClient(&redis.Options{\n\t\tAddr:     config.Redis.Address,\n\t\tPassword: config.Redis.Password,\n\t\tDB:       config.Redis.Database,\n\t})\n\t// Ping the Redis server to check if it's running\n",
                      "markdown": "`\n\trClient := redis.NewClient(&redis.Options{\n\t\tAddr:     config.Redis.Address,\n\t\tPassword: config.Redis.Password,\n\t\tDB:       config.Redis.Database,\n\t})\n\t// Ping the Redis server to check if it's running\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/sumologic.go"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 8,
                  "endLine": 24,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\t\treturn\n\t}\n\n\terr = c.Post(falcopayload,\n\t\tfunc(req *http.Request) {\n\t\t\tif c.Config.SumoLogic.SourceCategory != \"\" {\n\t\t\t\treq.Header.Set(\"X-Sumo-Category\", c.Config.SumoLogic.SourceCategory)\n",
                    "rendered": {
                      "text": "\t\treturn\n\t}\n\n\terr = c.Post(falcopayload,\n\t\tfunc(req *http.Request) {\n\t\t\tif c.Config.SumoLogic.SourceCategory != \"\" {\n\t\t\t\treq.Header.Set(\"X-Sumo-Category\", c.Config.SumoLogic.SourceCategory)\n",
                      "markdown": "`\t\treturn\n\t}\n\n\terr = c.Post(falcopayload,\n\t\tfunc(req *http.Request) {\n\t\t\tif c.Config.SumoLogic.SourceCategory != \"\" {\n\t\t\t\treq.Header.Set(\"X-Sumo-Category\", c.Config.SumoLogic.SourceCategory)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/gotify.go"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 9,
                  "endLine": 97,
                  "endColumn": 15,
                  "snippet": {
                    "text": "func (c *Client) GotifyPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Gotify.Add(Total, 1)\n\n\terr := c.Post(newGotifyPayload(falcopayload, c.Config), func(req *http.Request) {\n\t\tif c.Config.Gotify.Token != \"\" {\n\t\t\treq.Header.Set(\"X-Gotify-Key\", c.Config.Gotify.Token)\n\t\t}\n",
                    "rendered": {
                      "text": "func (c *Client) GotifyPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Gotify.Add(Total, 1)\n\n\terr := c.Post(newGotifyPayload(falcopayload, c.Config), func(req *http.Request) {\n\t\tif c.Config.Gotify.Token != \"\" {\n\t\t\treq.Header.Set(\"X-Gotify-Key\", c.Config.Gotify.Token)\n\t\t}\n",
                      "markdown": "`func (c *Client) GotifyPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Gotify.Add(Total, 1)\n\n\terr := c.Post(newGotifyPayload(falcopayload, c.Config), func(req *http.Request) {\n\t\tif c.Config.Gotify.Token != \"\" {\n\t\t\treq.Header.Set(\"X-Gotify-Key\", c.Config.Gotify.Token)\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/openfaas.go"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 10,
                  "endLine": 76,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\t\t}\n\t\tlog.Printf(\"[INFO]  : %v - Function Response : %v\\n\", Openfaas, string(rawbody))\n\t} else {\n\t\terr := c.Post(falcopayload)\n\t\tif err != nil {\n\t\t\tgo c.CountMetric(Outputs, 1, []string{\"output:openfaas\", \"status:error\"})\n\t\t\tc.Stats.Openfaas.Add(Error, 1)\n",
                    "rendered": {
                      "text": "\t\t}\n\t\tlog.Printf(\"[INFO]  : %v - Function Response : %v\\n\", Openfaas, string(rawbody))\n\t} else {\n\t\terr := c.Post(falcopayload)\n\t\tif err != nil {\n\t\t\tgo c.CountMetric(Outputs, 1, []string{\"output:openfaas\", \"status:error\"})\n\t\t\tc.Stats.Openfaas.Add(Error, 1)\n",
                      "markdown": "`\t\t}\n\t\tlog.Printf(\"[INFO]  : %v - Function Response : %v\\n\", Openfaas, string(rawbody))\n\t} else {\n\t\terr := c.Post(falcopayload)\n\t\tif err != nil {\n\t\t\tgo c.CountMetric(Outputs, 1, []string{\"output:openfaas\", \"status:error\"})\n\t\t\tc.Stats.Openfaas.Add(Error, 1)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/openfaas.go"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 49,
                  "endLine": 60,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\n\tif c.Config.Openfaas.Kubeconfig != \"\" {\n\t\tstr, _ := json.Marshal(falcopayload)\n\t\treq := c.KubernetesClient.CoreV1().RESTClient().Post().AbsPath(\"/api/v1/namespaces/\" + c.Config.Openfaas.GatewayNamespace + \"/services/\" + c.Config.Openfaas.GatewayService + \":\" + strconv.Itoa(c.Config.Openfaas.GatewayPort) + \"/proxy\" + \"/function/\" + c.Config.Openfaas.FunctionName + \".\" + c.Config.Openfaas.FunctionNamespace).Body(str)\n\t\treq.SetHeader(\"event-id\", uuid.New().String())\n\t\treq.SetHeader(\"Content-Type\", \"application/json\")\n\t\treq.SetHeader(\"User-Agent\", \"Falcosidekick\")\n",
                    "rendered": {
                      "text": "\n\tif c.Config.Openfaas.Kubeconfig != \"\" {\n\t\tstr, _ := json.Marshal(falcopayload)\n\t\treq := c.KubernetesClient.CoreV1().RESTClient().Post().AbsPath(\"/api/v1/namespaces/\" + c.Config.Openfaas.GatewayNamespace + \"/services/\" + c.Config.Openfaas.GatewayService + \":\" + strconv.Itoa(c.Config.Openfaas.GatewayPort) + \"/proxy\" + \"/function/\" + c.Config.Openfaas.FunctionName + \".\" + c.Config.Openfaas.FunctionNamespace).Body(str)\n\t\treq.SetHeader(\"event-id\", uuid.New().String())\n\t\treq.SetHeader(\"Content-Type\", \"application/json\")\n\t\treq.SetHeader(\"User-Agent\", \"Falcosidekick\")\n",
                      "markdown": "`\n\tif c.Config.Openfaas.Kubeconfig != \"\" {\n\t\tstr, _ := json.Marshal(falcopayload)\n\t\treq := c.KubernetesClient.CoreV1().RESTClient().Post().AbsPath(\"/api/v1/namespaces/\" + c.Config.Openfaas.GatewayNamespace + \"/services/\" + c.Config.Openfaas.GatewayService + \":\" + strconv.Itoa(c.Config.Openfaas.GatewayPort) + \"/proxy\" + \"/function/\" + c.Config.Openfaas.FunctionName + \".\" + c.Config.Openfaas.FunctionNamespace).Body(str)\n\t\treq.SetHeader(\"event-id\", uuid.New().String())\n\t\treq.SetHeader(\"Content-Type\", \"application/json\")\n\t\treq.SetHeader(\"User-Agent\", \"Falcosidekick\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/opsgenie_test.go"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 4,
                  "endLine": 20,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\tEntity:      \"Falcosidekick\",\n\t\tDescription: \"Test rule\",\n\t\tDetails: map[string]string{\n\t\t\t\"hostname\":  \"test-host\",\n\t\t\t\"priority\":  \"Debug\",\n\t\t\t\"tags\":      \"test, example\",\n\t\t\t\"proc_name\": \"falcosidekick\",\n",
                    "rendered": {
                      "text": "\t\tEntity:      \"Falcosidekick\",\n\t\tDescription: \"Test rule\",\n\t\tDetails: map[string]string{\n\t\t\t\"hostname\":  \"test-host\",\n\t\t\t\"priority\":  \"Debug\",\n\t\t\t\"tags\":      \"test, example\",\n\t\t\t\"proc_name\": \"falcosidekick\",\n",
                      "markdown": "`\t\tEntity:      \"Falcosidekick\",\n\t\tDescription: \"Test rule\",\n\t\tDetails: map[string]string{\n\t\t\t\"hostname\":  \"test-host\",\n\t\t\t\"priority\":  \"Debug\",\n\t\t\t\"tags\":      \"test, example\",\n\t\t\t\"proc_name\": \"falcosidekick\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/falcosidekick-ui.md"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 3,
                  "endLine": 22,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `webui.url` | `WEBUI_URL` |               | WebUI URL, if not empty, WebUI output is **enabled** |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `webui.url` | `WEBUI_URL` |               | WebUI URL, if not empty, WebUI output is **enabled** |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `webui.url` | `WEBUI_URL` |               | WebUI URL, if not empty, WebUI output is **enabled** |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/falcosidekick-ui.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 15,
                  "endLine": 17,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n## Configuration\n\n| Setting     | Env var     | Default value | Description                                          |\n| ----------- | ----------- | ------------- | ---------------------------------------------------- |\n| `webui.url` | `WEBUI_URL` |               | WebUI URL, if not empty, WebUI output is **enabled** |\n\n",
                    "rendered": {
                      "text": "\n## Configuration\n\n| Setting     | Env var     | Default value | Description                                          |\n| ----------- | ----------- | ------------- | ---------------------------------------------------- |\n| `webui.url` | `WEBUI_URL` |               | WebUI URL, if not empty, WebUI output is **enabled** |\n\n",
                      "markdown": "`\n## Configuration\n\n| Setting     | Env var     | Default value | Description                                          |\n| ----------- | ----------- | ------------- | ---------------------------------------------------- |\n| `webui.url` | `WEBUI_URL` |               | WebUI URL, if not empty, WebUI output is **enabled** |\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/mqtt.md"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 19,
                  "endLine": 40,
                  "endColumn": 27,
                  "snippet": {
                    "text": "  # qos: 0 # QOS for messages (default: 0)\n  # retained: false # If true, messages are retained (default: false)\n  # user: \"\" # User if the authentication is enabled in the broker\n  # password: \"\" # Password if the authentication is enabled in the broker\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n```\n",
                    "rendered": {
                      "text": "  # qos: 0 # QOS for messages (default: 0)\n  # retained: false # If true, messages are retained (default: false)\n  # user: \"\" # User if the authentication is enabled in the broker\n  # password: \"\" # Password if the authentication is enabled in the broker\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n```\n",
                      "markdown": "`  # qos: 0 # QOS for messages (default: 0)\n  # retained: false # If true, messages are retained (default: false)\n  # user: \"\" # User if the authentication is enabled in the broker\n  # password: \"\" # Password if the authentication is enabled in the broker\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/mqtt.md"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 4,
                  "endLine": 40,
                  "endColumn": 12,
                  "snippet": {
                    "text": "  # qos: 0 # QOS for messages (default: 0)\n  # retained: false # If true, messages are retained (default: false)\n  # user: \"\" # User if the authentication is enabled in the broker\n  # password: \"\" # Password if the authentication is enabled in the broker\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n```\n",
                    "rendered": {
                      "text": "  # qos: 0 # QOS for messages (default: 0)\n  # retained: false # If true, messages are retained (default: false)\n  # user: \"\" # User if the authentication is enabled in the broker\n  # password: \"\" # Password if the authentication is enabled in the broker\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n```\n",
                      "markdown": "`  # qos: 0 # QOS for messages (default: 0)\n  # retained: false # If true, messages are retained (default: false)\n  # user: \"\" # User if the authentication is enabled in the broker\n  # password: \"\" # Password if the authentication is enabled in the broker\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/mqtt.md"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 71,
                  "endLine": 24,
                  "endColumn": 79,
                  "snippet": {
                    "text": "                      |\n| `mqtt.user`            | `MQTT_USER`            |                  | User if the authentication is enabled in the broker                                                                                 |\n| `mqtt.password`        | `MQTT_PASSWORD`        |                  | Password if the authentication is enabled in the broker                                                                             |\n| `mqtt.checkcert`       | `MQTT_CHECKCERT`       | `true`           | Check if ssl certificate of the output is valid                                                        ",
                    "rendered": {
                      "text": "                      |\n| `mqtt.user`            | `MQTT_USER`            |                  | User if the authentication is enabled in the broker                                                                                 |\n| `mqtt.password`        | `MQTT_PASSWORD`        |                  | Password if the authentication is enabled in the broker                                                                             |\n| `mqtt.checkcert`       | `MQTT_CHECKCERT`       | `true`           | Check if ssl certificate of the output is valid                                                        ",
                      "markdown": "`                      |\n| `mqtt.user`            | `MQTT_USER`            |                  | User if the authentication is enabled in the broker                                                                                 |\n| `mqtt.password`        | `MQTT_PASSWORD`        |                  | Password if the authentication is enabled in the broker                                                                             |\n| `mqtt.checkcert`       | `MQTT_CHECKCERT`       | `true`           | Check if ssl certificate of the output is valid                                                        `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/mqtt.md"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 33,
                  "endLine": 24,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                                                            |\n| `mqtt.user`            | `MQTT_USER`            |                  | User if the authentication is enabled in the broker                                                                                 |\n| `mqtt.password`        | `MQTT_PASSWORD`        |                  | Password if the authentication is enabled in the broker                                                                             |\n| `mqtt.checkcert`       | `MQTT_CHECKCERT`       | `true`           | Check if ssl certificate of the output is valid                  ",
                    "rendered": {
                      "text": "                                                            |\n| `mqtt.user`            | `MQTT_USER`            |                  | User if the authentication is enabled in the broker                                                                                 |\n| `mqtt.password`        | `MQTT_PASSWORD`        |                  | Password if the authentication is enabled in the broker                                                                             |\n| `mqtt.checkcert`       | `MQTT_CHECKCERT`       | `true`           | Check if ssl certificate of the output is valid                  ",
                      "markdown": "`                                                            |\n| `mqtt.user`            | `MQTT_USER`            |                  | User if the authentication is enabled in the broker                                                                                 |\n| `mqtt.password`        | `MQTT_PASSWORD`        |                  | Password if the authentication is enabled in the broker                                                                             |\n| `mqtt.checkcert`       | `MQTT_CHECKCERT`       | `true`           | Check if ssl certificate of the output is valid                  `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/mqtt.md"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 8,
                  "endLine": 24,
                  "endColumn": 16,
                  "snippet": {
                    "text": "                                                                                     |\n| `mqtt.user`            | `MQTT_USER`            |                  | User if the authentication is enabled in the broker                                                                                 |\n| `mqtt.password`        | `MQTT_PASSWORD`        |                  | Password if the authentication is enabled in the broker                                                                             |\n| `mqtt.checkcert`       | `MQTT_CHECKCERT`       | `true`           | Check if ssl certificate of the output i",
                    "rendered": {
                      "text": "                                                                                     |\n| `mqtt.user`            | `MQTT_USER`            |                  | User if the authentication is enabled in the broker                                                                                 |\n| `mqtt.password`        | `MQTT_PASSWORD`        |                  | Password if the authentication is enabled in the broker                                                                             |\n| `mqtt.checkcert`       | `MQTT_CHECKCERT`       | `true`           | Check if ssl certificate of the output i",
                      "markdown": "`                                                                                     |\n| `mqtt.user`            | `MQTT_USER`            |                  | User if the authentication is enabled in the broker                                                                                 |\n| `mqtt.password`        | `MQTT_PASSWORD`        |                  | Password if the authentication is enabled in the broker                                                                             |\n| `mqtt.checkcert`       | `MQTT_CHECKCERT`       | `true`           | Check if ssl certificate of the output i`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/mqtt.md"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 3,
                  "endLine": 29,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `mqtt.minimumpriority` | `MQTT_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `mqtt.minimumpriority` | `MQTT_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `mqtt.minimumpriority` | `MQTT_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/mqtt.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 26,
                  "endLine": 17,
                  "endColumn": 31,
                  "snippet": {
                    "text": "s://mqtt.org/\n\n## Table of content\n\n- [MQTT](#mqtt)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                | Env var                | Default value    | Description                                                                                                                         |\n| ---------------------- | ---------------------- | ---------------- | -------------------------------------------------------",
                    "rendered": {
                      "text": "s://mqtt.org/\n\n## Table of content\n\n- [MQTT](#mqtt)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                | Env var                | Default value    | Description                                                                                                                         |\n| ---------------------- | ---------------------- | ---------------- | -------------------------------------------------------",
                      "markdown": "`s://mqtt.org/\n\n## Table of content\n\n- [MQTT](#mqtt)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                | Env var                | Default value    | Description                                                                                                                         |\n| ---------------------- | ---------------------- | ---------------- | -------------------------------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/timescaledb.md"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 27,
                  "endLine": 40,
                  "endColumn": 35,
                  "snippet": {
                    "text": "  database: \"\" # TimescaleDB database used\n  hypertablename: \"falco_events\" # Hypertable to store data events (default: falco_events) See TimescaleDB setup for more info\n  # user: \"postgres\" # Username to authenticate with TimescaleDB (default: postgres)\n  # password: \"postgres\" # Password to authenticate with TimescaleDB (default: postgres)\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n```\n\n",
                    "rendered": {
                      "text": "  database: \"\" # TimescaleDB database used\n  hypertablename: \"falco_events\" # Hypertable to store data events (default: falco_events) See TimescaleDB setup for more info\n  # user: \"postgres\" # Username to authenticate with TimescaleDB (default: postgres)\n  # password: \"postgres\" # Password to authenticate with TimescaleDB (default: postgres)\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n```\n\n",
                      "markdown": "`  database: \"\" # TimescaleDB database used\n  hypertablename: \"falco_events\" # Hypertable to store data events (default: falco_events) See TimescaleDB setup for more info\n  # user: \"postgres\" # Username to authenticate with TimescaleDB (default: postgres)\n  # password: \"postgres\" # Password to authenticate with TimescaleDB (default: postgres)\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/timescaledb.md"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 4,
                  "endLine": 40,
                  "endColumn": 12,
                  "snippet": {
                    "text": "  database: \"\" # TimescaleDB database used\n  hypertablename: \"falco_events\" # Hypertable to store data events (default: falco_events) See TimescaleDB setup for more info\n  # user: \"postgres\" # Username to authenticate with TimescaleDB (default: postgres)\n  # password: \"postgres\" # Password to authenticate with TimescaleDB (default: postgres)\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n```\n\n",
                    "rendered": {
                      "text": "  database: \"\" # TimescaleDB database used\n  hypertablename: \"falco_events\" # Hypertable to store data events (default: falco_events) See TimescaleDB setup for more info\n  # user: \"postgres\" # Username to authenticate with TimescaleDB (default: postgres)\n  # password: \"postgres\" # Password to authenticate with TimescaleDB (default: postgres)\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n```\n\n",
                      "markdown": "`  database: \"\" # TimescaleDB database used\n  hypertablename: \"falco_events\" # Hypertable to store data events (default: falco_events) See TimescaleDB setup for more info\n  # user: \"postgres\" # Username to authenticate with TimescaleDB (default: postgres)\n  # password: \"postgres\" # Password to authenticate with TimescaleDB (default: postgres)\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/timescaledb.md"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 85,
                  "endLine": 25,
                  "endColumn": 93,
                  "snippet": {
                    "text": "imescaledb.user`            | `TIMESCALEDB_USER`            | `postgres`       | Username to authenticate with TimescaleDB                                                                                           |\n| `timescaledb.password`        | `TIMESCALEDB_PASSWORD`        | `postgres`       | Password to authenticate with TimescaleDB                                                                                           |\n| `timescaledb.minimumpriority` | `TIMESCALEDB_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error",
                    "rendered": {
                      "text": "imescaledb.user`            | `TIMESCALEDB_USER`            | `postgres`       | Username to authenticate with TimescaleDB                                                                                           |\n| `timescaledb.password`        | `TIMESCALEDB_PASSWORD`        | `postgres`       | Password to authenticate with TimescaleDB                                                                                           |\n| `timescaledb.minimumpriority` | `TIMESCALEDB_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error",
                      "markdown": "`imescaledb.user`            | `TIMESCALEDB_USER`            | `postgres`       | Username to authenticate with TimescaleDB                                                                                           |\n| `timescaledb.password`        | `TIMESCALEDB_PASSWORD`        | `postgres`       | Password to authenticate with TimescaleDB                                                                                           |\n| `timescaledb.minimumpriority` | `TIMESCALEDB_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/timescaledb.md"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 47,
                  "endLine": 25,
                  "endColumn": 55,
                  "snippet": {
                    "text": "                                |\n| `timescaledb.user`            | `TIMESCALEDB_USER`            | `postgres`       | Username to authenticate with TimescaleDB                                                                                           |\n| `timescaledb.password`        | `TIMESCALEDB_PASSWORD`        | `postgres`       | Password to authenticate with TimescaleDB                                                                                           |\n| `timescaledb.minimumpriority` | `TIMESCALEDB_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, or",
                    "rendered": {
                      "text": "                                |\n| `timescaledb.user`            | `TIMESCALEDB_USER`            | `postgres`       | Username to authenticate with TimescaleDB                                                                                           |\n| `timescaledb.password`        | `TIMESCALEDB_PASSWORD`        | `postgres`       | Password to authenticate with TimescaleDB                                                                                           |\n| `timescaledb.minimumpriority` | `TIMESCALEDB_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, or",
                      "markdown": "`                                |\n| `timescaledb.user`            | `TIMESCALEDB_USER`            | `postgres`       | Username to authenticate with TimescaleDB                                                                                           |\n| `timescaledb.password`        | `TIMESCALEDB_PASSWORD`        | `postgres`       | Password to authenticate with TimescaleDB                                                                                           |\n| `timescaledb.minimumpriority` | `TIMESCALEDB_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, or`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/timescaledb.md"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 15,
                  "endLine": 25,
                  "endColumn": 23,
                  "snippet": {
                    "text": "                                                                |\n| `timescaledb.user`            | `TIMESCALEDB_USER`            | `postgres`       | Username to authenticate with TimescaleDB                                                                                           |\n| `timescaledb.password`        | `TIMESCALEDB_PASSWORD`        | `postgres`       | Password to authenticate with TimescaleDB                                                                                           |\n| `timescaledb.minimumpriority` | `TIMESCALEDB_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of",
                    "rendered": {
                      "text": "                                                                |\n| `timescaledb.user`            | `TIMESCALEDB_USER`            | `postgres`       | Username to authenticate with TimescaleDB                                                                                           |\n| `timescaledb.password`        | `TIMESCALEDB_PASSWORD`        | `postgres`       | Password to authenticate with TimescaleDB                                                                                           |\n| `timescaledb.minimumpriority` | `TIMESCALEDB_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of",
                      "markdown": "`                                                                |\n| `timescaledb.user`            | `TIMESCALEDB_USER`            | `postgres`       | Username to authenticate with TimescaleDB                                                                                           |\n| `timescaledb.password`        | `TIMESCALEDB_PASSWORD`        | `postgres`       | Password to authenticate with TimescaleDB                                                                                           |\n| `timescaledb.minimumpriority` | `TIMESCALEDB_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/timescaledb.md"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 1,
                  "endLine": 80,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tsource VARCHAR(20),\n\toutput TEXT,\n\ttags TEXT,\n\thostname TEXT,\n\tcustom_field_1 TEXT,\n\tk8s_namespace TEXT\n);\n",
                    "rendered": {
                      "text": "\tsource VARCHAR(20),\n\toutput TEXT,\n\ttags TEXT,\n\thostname TEXT,\n\tcustom_field_1 TEXT,\n\tk8s_namespace TEXT\n);\n",
                      "markdown": "`\tsource VARCHAR(20),\n\toutput TEXT,\n\ttags TEXT,\n\thostname TEXT,\n\tcustom_field_1 TEXT,\n\tk8s_namespace TEXT\n);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/timescaledb.md"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 1,
                  "endLine": 58,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tsource VARCHAR(20),\n\toutput TEXT,\n\ttags TEXT,\n\thostname TEXT,\n);\nSELECT create_hypertable('falcosidekick_events', 'time');\n```\n",
                    "rendered": {
                      "text": "\tsource VARCHAR(20),\n\toutput TEXT,\n\ttags TEXT,\n\thostname TEXT,\n);\nSELECT create_hypertable('falcosidekick_events', 'time');\n```\n",
                      "markdown": "`\tsource VARCHAR(20),\n\toutput TEXT,\n\ttags TEXT,\n\thostname TEXT,\n);\nSELECT create_hypertable('falcosidekick_events', 'time');\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/timescaledb.md"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n```sql\nCREATE TABLE falcosidekick_events (\n\ttime TIMESTAMPTZ NOT NULL,\n\trule TEXT,\n\tpriority VARCHAR(20),\n\tsource VARCHAR(20),\n",
                    "rendered": {
                      "text": "\n```sql\nCREATE TABLE falcosidekick_events (\n\ttime TIMESTAMPTZ NOT NULL,\n\trule TEXT,\n\tpriority VARCHAR(20),\n\tsource VARCHAR(20),\n",
                      "markdown": "`\n```sql\nCREATE TABLE falcosidekick_events (\n\ttime TIMESTAMPTZ NOT NULL,\n\trule TEXT,\n\tpriority VARCHAR(20),\n\tsource VARCHAR(20),\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/timescaledb.md"
                },
                "region": {
                  "startLine": 52,
                  "endLine": 52,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n```sql\nCREATE TABLE falcosidekick_events (\n\ttime TIMESTAMPTZ NOT NULL,\n\trule TEXT,\n\tpriority VARCHAR(20),\n\tsource VARCHAR(20),\n",
                    "rendered": {
                      "text": "\n```sql\nCREATE TABLE falcosidekick_events (\n\ttime TIMESTAMPTZ NOT NULL,\n\trule TEXT,\n\tpriority VARCHAR(20),\n\tsource VARCHAR(20),\n",
                      "markdown": "`\n```sql\nCREATE TABLE falcosidekick_events (\n\ttime TIMESTAMPTZ NOT NULL,\n\trule TEXT,\n\tpriority VARCHAR(20),\n\tsource VARCHAR(20),\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/timescaledb.md"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 3,
                  "endLine": 29,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `timescaledb.minimumpriority` | `TIMESCALEDB_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `timescaledb.minimumpriority` | `TIMESCALEDB_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `timescaledb.minimumpriority` | `TIMESCALEDB_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/timescaledb.md"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 33,
                  "endLine": 18,
                  "endColumn": 38,
                  "snippet": {
                    "text": "ledb)\n\t- [Table of content](#table-of-content)\n\t- [Configuration](#configuration)\n\t- [Example of config.yaml](#example-of-configyaml)\n\t- [Additional info](#additional-info)\n\t\t- [TimescaleDB setup](#timescaledb-setup)\n\t- [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                       | Env var                       | Default value    | Description                                                                                                                         |\n| ----------------------------- | ----------------------------- | ---------------- | ----------------------------------",
                    "rendered": {
                      "text": "ledb)\n\t- [Table of content](#table-of-content)\n\t- [Configuration](#configuration)\n\t- [Example of config.yaml](#example-of-configyaml)\n\t- [Additional info](#additional-info)\n\t\t- [TimescaleDB setup](#timescaledb-setup)\n\t- [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                       | Env var                       | Default value    | Description                                                                                                                         |\n| ----------------------------- | ----------------------------- | ---------------- | ----------------------------------",
                      "markdown": "`ledb)\n\t- [Table of content](#table-of-content)\n\t- [Configuration](#configuration)\n\t- [Example of config.yaml](#example-of-configyaml)\n\t- [Additional info](#additional-info)\n\t\t- [TimescaleDB setup](#timescaledb-setup)\n\t- [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                       | Env var                       | Default value    | Description                                                                                                                         |\n| ----------------------------- | ----------------------------- | ---------------- | ----------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/tekton.md"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 3,
                  "endLine": 25,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `tekton.minimumpriority` | `TEKTON_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `tekton.minimumpriority` | `TEKTON_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `tekton.minimumpriority` | `TEKTON_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/tekton.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 28,
                  "endLine": 17,
                  "endColumn": 33,
                  "snippet": {
                    "text": " output\n\n## Table of content\n\n- [Tekton](#tekton)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                  | Env var                  | Default value    | Description                                                                                                                         |\n| ------------------------ | ------------------------ | ---------------- | -------------------------------------------------",
                    "rendered": {
                      "text": " output\n\n## Table of content\n\n- [Tekton](#tekton)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                  | Env var                  | Default value    | Description                                                                                                                         |\n| ------------------------ | ------------------------ | ---------------- | -------------------------------------------------",
                      "markdown": "` output\n\n## Table of content\n\n- [Tekton](#tekton)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                  | Env var                  | Default value    | Description                                                                                                                         |\n| ------------------------ | ------------------------ | ---------------- | -------------------------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/statsd.md"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 3,
                  "endLine": 23,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `statsd.namespace` | `STATSD_NAMESPACE` | `falcosidekick.` | A prefix for all metrics                                                                          |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `statsd.namespace` | `STATSD_NAMESPACE` | `falcosidekick.` | A prefix for all metrics                                                                          |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `statsd.namespace` | `STATSD_NAMESPACE` | `falcosidekick.` | A prefix for all metrics                                                                          |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/statsd.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 22,
                  "endLine": 17,
                  "endColumn": 27,
                  "snippet": {
                    "text": "statsd/statsd\n\n## Table of content\n\n- [StatsD](#statsd)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting            | Env var            | Default value    | Description                                                                                       |\n| ------------------ | ------------------ | ---------------- | ------------------------------------------------------------------------------------------------- |\n|",
                    "rendered": {
                      "text": "statsd/statsd\n\n## Table of content\n\n- [StatsD](#statsd)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting            | Env var            | Default value    | Description                                                                                       |\n| ------------------ | ------------------ | ---------------- | ------------------------------------------------------------------------------------------------- |\n|",
                      "markdown": "`statsd/statsd\n\n## Table of content\n\n- [StatsD](#statsd)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting            | Env var            | Default value    | Description                                                                                       |\n| ------------------ | ------------------ | ---------------- | ------------------------------------------------------------------------------------------------- |\n|`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/azure_event_hub.md"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 3,
                  "endLine": 23,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `azure.eventhub.minimumpriority` | `AZURE_EVENTHUB_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `azure.eventhub.minimumpriority` | `AZURE_EVENTHUB_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `azure.eventhub.minimumpriority` | `AZURE_EVENTHUB_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/azure_event_hub.md"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 36,
                  "endLine": 16,
                  "endColumn": 41,
                  "snippet": {
                    "text": "tent\n\n- [Azure EventHub](#azure-eventhub)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                          | Env var                          | Default value    | Description                                                                                                                         |\n| -------------------------------- | -------------------------------- | ---------------- | -------------------------",
                    "rendered": {
                      "text": "tent\n\n- [Azure EventHub](#azure-eventhub)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                          | Env var                          | Default value    | Description                                                                                                                         |\n| -------------------------------- | -------------------------------- | ---------------- | -------------------------",
                      "markdown": "`tent\n\n- [Azure EventHub](#azure-eventhub)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                          | Env var                          | Default value    | Description                                                                                                                         |\n| -------------------------------- | -------------------------------- | ---------------- | -------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/yandex_datastreams.md"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 3,
                  "endLine": 27,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `yandex.datastreams.minimumpriority` | `YANDEX_DATASTREAMS_MINIMUMPRIORITY` | `\"\"` (= `debug`)                         | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `yandex.datastreams.minimumpriority` | `YANDEX_DATASTREAMS_MINIMUMPRIORITY` | `\"\"` (= `debug`)                         | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `yandex.datastreams.minimumpriority` | `YANDEX_DATASTREAMS_MINIMUMPRIORITY` | `\"\"` (= `debug`)                         | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/yandex_datastreams.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 40,
                  "endLine": 17,
                  "endColumn": 45,
                  "snippet": {
                    "text": "dex Datastreams](#yandex-datastreams)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                              | Env var                              | Default value                            | Description                                                                                                                         |\n| ------------------------------------ | ------------------------------------ | --------",
                    "rendered": {
                      "text": "dex Datastreams](#yandex-datastreams)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                              | Env var                              | Default value                            | Description                                                                                                                         |\n| ------------------------------------ | ------------------------------------ | --------",
                      "markdown": "`dex Datastreams](#yandex-datastreams)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                              | Env var                              | Default value                            | Description                                                                                                                         |\n| ------------------------------------ | ------------------------------------ | --------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/talon.md"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 3,
                  "endLine": 24,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `talon.minimumpriority` | `TALON_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `talon.minimumpriority` | `TALON_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `talon.minimumpriority` | `TALON_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/talon.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 35,
                  "endLine": 17,
                  "endColumn": 40,
                  "snippet": {
                    "text": " of content\n\n- [Falco Talon](#falco-talon)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n|         Setting         |         Env var         |  Default value   |                                                             Description                                                             |\n| ----------------------- | ----------------------- | ---------------- | ------------------------------------------------------------",
                    "rendered": {
                      "text": " of content\n\n- [Falco Talon](#falco-talon)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n|         Setting         |         Env var         |  Default value   |                                                             Description                                                             |\n| ----------------------- | ----------------------- | ---------------- | ------------------------------------------------------------",
                      "markdown": "` of content\n\n- [Falco Talon](#falco-talon)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n|         Setting         |         Env var         |  Default value   |                                                             Description                                                             |\n| ----------------------- | ----------------------- | ---------------- | ------------------------------------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/dogstatsd.md"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 3,
                  "endLine": 24,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `dogstastd.tags`      | `DOGSTASTD_TAGS`      |                  | Comma separeted list of key:value to add as tags to the metrics                                         |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `dogstastd.tags`      | `DOGSTASTD_TAGS`      |                  | Comma separeted list of key:value to add as tags to the metrics                                         |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `dogstastd.tags`      | `DOGSTASTD_TAGS`      |                  | Comma separeted list of key:value to add as tags to the metrics                                         |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/dogstatsd.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 25,
                  "endLine": 17,
                  "endColumn": 30,
                  "snippet": {
                    "text": "b=go\n\n## Table of content\n\n- [Dogstatsd](#dogstatsd)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting               | Env var               | Default value    | Description                                                                                             |\n| --------------------- | --------------------- | ---------------- | --------------------------------------------------------------------------------------",
                    "rendered": {
                      "text": "b=go\n\n## Table of content\n\n- [Dogstatsd](#dogstatsd)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting               | Env var               | Default value    | Description                                                                                             |\n| --------------------- | --------------------- | ---------------- | --------------------------------------------------------------------------------------",
                      "markdown": "`b=go\n\n## Table of content\n\n- [Dogstatsd](#dogstatsd)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting               | Env var               | Default value    | Description                                                                                             |\n| --------------------- | --------------------- | ---------------- | --------------------------------------------------------------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/teams.md"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 3,
                  "endLine": 26,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/teams.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 27,
                  "endLine": 17,
                  "endColumn": 32,
                  "snippet": {
                    "text": "*: Chat/Messaging\n- **Website**: https://teams.com\n\n## Table of content\n\n- [Teams](#teams)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                 | Env var                 | Default value                                                                                       | Description                                                                                                                         |\n| ----------------------- | --------------",
                    "rendered": {
                      "text": "*: Chat/Messaging\n- **Website**: https://teams.com\n\n## Table of content\n\n- [Teams](#teams)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                 | Env var                 | Default value                                                                                       | Description                                                                                                                         |\n| ----------------------- | --------------",
                      "markdown": "`*: Chat/Messaging\n- **Website**: https://teams.com\n\n## Table of content\n\n- [Teams](#teams)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                 | Env var                 | Default value                                                                                       | Description                                                                                                                         |\n| ----------------------- | --------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/datadog.md"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 3,
                  "endLine": 24,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `datadog.minimumpriority` | `DATADOG_MINIMUMPRIORITY` | `\"\"` (= `debug`)            | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `datadog.minimumpriority` | `DATADOG_MINIMUMPRIORITY` | `\"\"` (= `debug`)            | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `datadog.minimumpriority` | `DATADOG_MINIMUMPRIORITY` | `\"\"` (= `debug`)            | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/datadog.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 29,
                  "endLine": 17,
                  "endColumn": 34,
                  "snippet": {
                    "text": "com/\n\n## Table of content\n\n- [Datadog](#datadog)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                   | Env var                   | Default value               | Description                                                                                                                         |\n| ------------------------- | ------------------------- | --------------------------- | ------------------------",
                    "rendered": {
                      "text": "com/\n\n## Table of content\n\n- [Datadog](#datadog)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                   | Env var                   | Default value               | Description                                                                                                                         |\n| ------------------------- | ------------------------- | --------------------------- | ------------------------",
                      "markdown": "`com/\n\n## Table of content\n\n- [Datadog](#datadog)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                   | Env var                   | Default value               | Description                                                                                                                         |\n| ------------------------- | ------------------------- | --------------------------- | ------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/aws_lambda.md"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 3,
                  "endLine": 30,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `aws.lambda.minimumpriority` | `AWS_LAMBDA_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `aws.lambda.minimumpriority` | `AWS_LAMBDA_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `aws.lambda.minimumpriority` | `AWS_LAMBDA_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/aws_lambda.md"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 32,
                  "endLine": 18,
                  "endColumn": 37,
                  "snippet": {
                    "text": "content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n    - [Lambda Sample IAM Policy](#lambda-sample-iam-policy)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                      | Env var                      | Default value    | Description                                                                                                                         |\n| ---------------------------- | ---------------------------- | ---------------- | -------------------------------------",
                    "rendered": {
                      "text": "content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n    - [Lambda Sample IAM Policy](#lambda-sample-iam-policy)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                      | Env var                      | Default value    | Description                                                                                                                         |\n| ---------------------------- | ---------------------------- | ---------------- | -------------------------------------",
                      "markdown": "`content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n    - [Lambda Sample IAM Policy](#lambda-sample-iam-policy)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                      | Env var                      | Default value    | Description                                                                                                                         |\n| ---------------------------- | ---------------------------- | ---------------- | -------------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/cliq.md"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 177,
                  "endLine": 55,
                  "endColumn": 185,
                  "snippet": {
                    "text": "                                                                                                                         |\n| `{{ index .OutputFields \\\"<field name>\\\" }}` | A map of additional optional fields emitted depending on the event. These may not be present for every event, in which case they expand to the string `<no value>` |\n\nGo templates also support some basic methods for text manipulation which can be used to improve the clarity of alerts - see the documentation for details.\n\n## Screenshots\n",
                    "rendered": {
                      "text": "                                                                                                                         |\n| `{{ index .OutputFields \\\"<field name>\\\" }}` | A map of additional optional fields emitted depending on the event. These may not be present for every event, in which case they expand to the string `<no value>` |\n\nGo templates also support some basic methods for text manipulation which can be used to improve the clarity of alerts - see the documentation for details.\n\n## Screenshots\n",
                      "markdown": "`                                                                                                                         |\n| `{{ index .OutputFields \\\"<field name>\\\" }}` | A map of additional optional fields emitted depending on the event. These may not be present for every event, in which case they expand to the string `<no value>` |\n\nGo templates also support some basic methods for text manipulation which can be used to improve the clarity of alerts - see the documentation for details.\n\n## Screenshots\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/cliq.md"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 177,
                  "endLine": 55,
                  "endColumn": 185,
                  "snippet": {
                    "text": "                                                                                                                         |\n| `{{ index .OutputFields \\\"<field name>\\\" }}` | A map of additional optional fields emitted depending on the event. These may not be present for every event, in which case they expand to the string `<no value>` |\n\nGo templates also support some basic methods for text manipulation which can be used to improve the clarity of alerts - see the documentation for details.\n\n## Screenshots\n",
                    "rendered": {
                      "text": "                                                                                                                         |\n| `{{ index .OutputFields \\\"<field name>\\\" }}` | A map of additional optional fields emitted depending on the event. These may not be present for every event, in which case they expand to the string `<no value>` |\n\nGo templates also support some basic methods for text manipulation which can be used to improve the clarity of alerts - see the documentation for details.\n\n## Screenshots\n",
                      "markdown": "`                                                                                                                         |\n| `{{ index .OutputFields \\\"<field name>\\\" }}` | A map of additional optional fields emitted depending on the event. These may not be present for every event, in which case they expand to the string `<no value>` |\n\nGo templates also support some basic methods for text manipulation which can be used to improve the clarity of alerts - see the documentation for details.\n\n## Screenshots\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/cliq.md"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 3,
                  "endLine": 28,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `cliq.minimumpriority` | `CLIQ_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"`                                                                                                                    |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `cliq.minimumpriority` | `CLIQ_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"`                                                                                                                    |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `cliq.minimumpriority` | `CLIQ_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"`                                                                                                                    |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/cliq.md"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 26,
                  "endLine": 18,
                  "endColumn": 31,
                  "snippet": {
                    "text": "iq)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n    - [Message Formatting](#message-formatting)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                | Env var                | Default value    | Description                                                                                                                                                                                                                                            |\n| ---------",
                    "rendered": {
                      "text": "iq)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n    - [Message Formatting](#message-formatting)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                | Env var                | Default value    | Description                                                                                                                                                                                                                                            |\n| ---------",
                      "markdown": "`iq)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n    - [Message Formatting](#message-formatting)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                | Env var                | Default value    | Description                                                                                                                                                                                                                                            |\n| ---------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/gotify.md"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 3,
                  "endLine": 26,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `gotify.minimumpriority` | `GOTIFY_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `gotify.minimumpriority` | `GOTIFY_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `gotify.minimumpriority` | `GOTIFY_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/gotify.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 28,
                  "endLine": 17,
                  "endColumn": 33,
                  "snippet": {
                    "text": "fy.net/\n\n## Table of content\n\n- [Gotify](#gotify)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                  | Env var                  | Default value    | Description                                                                                                                         |\n| ------------------------ | ------------------------ | ---------------- | -------------------------------------------------",
                    "rendered": {
                      "text": "fy.net/\n\n## Table of content\n\n- [Gotify](#gotify)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                  | Env var                  | Default value    | Description                                                                                                                         |\n| ------------------------ | ------------------------ | ---------------- | -------------------------------------------------",
                      "markdown": "`fy.net/\n\n## Table of content\n\n- [Gotify](#gotify)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                  | Env var                  | Default value    | Description                                                                                                                         |\n| ------------------------ | ------------------------ | ---------------- | -------------------------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/loki.md"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 3,
                  "endLine": 32,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/loki.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 26,
                  "endLine": 17,
                  "endColumn": 31,
                  "snippet": {
                    "text": "**: Logs\n- **Website**: https://grafana.com/oss/loki/\n\n## Table of content\n\n- [Loki](#loki)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                | Env var                | Default value       | Description                                                                                                                         |\n| ---------------------- | ---------------------- | ------------------- | -------------------------------------------------",
                    "rendered": {
                      "text": "**: Logs\n- **Website**: https://grafana.com/oss/loki/\n\n## Table of content\n\n- [Loki](#loki)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                | Env var                | Default value       | Description                                                                                                                         |\n| ---------------------- | ---------------------- | ------------------- | -------------------------------------------------",
                      "markdown": "`**: Logs\n- **Website**: https://grafana.com/oss/loki/\n\n## Table of content\n\n- [Loki](#loki)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                | Env var                | Default value       | Description                                                                                                                         |\n| ---------------------- | ---------------------- | ------------------- | -------------------------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/influxdb.md"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 83,
                  "endLine": 45,
                  "endColumn": 91,
                  "snippet": {
                    "text": "  # precision: \"ns\" # Write precision\n  # user: \"\" # user to use if auth is enabled in Influxdb\n  # password: \"\" # pasword to use if auth is enabled in Influxdb\n  # token: \"\" # API token to use if auth in enabled in Influxdb (disables user and password)\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n",
                    "rendered": {
                      "text": "  # precision: \"ns\" # Write precision\n  # user: \"\" # user to use if auth is enabled in Influxdb\n  # password: \"\" # pasword to use if auth is enabled in Influxdb\n  # token: \"\" # API token to use if auth in enabled in Influxdb (disables user and password)\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n",
                      "markdown": "`  # precision: \"ns\" # Write precision\n  # user: \"\" # user to use if auth is enabled in Influxdb\n  # password: \"\" # pasword to use if auth is enabled in Influxdb\n  # token: \"\" # API token to use if auth in enabled in Influxdb (disables user and password)\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/influxdb.md"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 4,
                  "endLine": 44,
                  "endColumn": 12,
                  "snippet": {
                    "text": "  # bucket: \"falco\" # Metrics bucket (default: falco)\n  # precision: \"ns\" # Write precision\n  # user: \"\" # user to use if auth is enabled in Influxdb\n  # password: \"\" # pasword to use if auth is enabled in Influxdb\n  # token: \"\" # API token to use if auth in enabled in Influxdb (disables user and password)\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n",
                    "rendered": {
                      "text": "  # bucket: \"falco\" # Metrics bucket (default: falco)\n  # precision: \"ns\" # Write precision\n  # user: \"\" # user to use if auth is enabled in Influxdb\n  # password: \"\" # pasword to use if auth is enabled in Influxdb\n  # token: \"\" # API token to use if auth in enabled in Influxdb (disables user and password)\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n",
                      "markdown": "`  # bucket: \"falco\" # Metrics bucket (default: falco)\n  # precision: \"ns\" # Write precision\n  # user: \"\" # user to use if auth is enabled in Influxdb\n  # password: \"\" # pasword to use if auth is enabled in Influxdb\n  # token: \"\" # API token to use if auth in enabled in Influxdb (disables user and password)\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/influxdb.md"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 146,
                  "endLine": 26,
                  "endColumn": 154,
                  "snippet": {
                    "text": "                  | Password to use if auth is enabled in Influxdb                                                                                      |\n| `influxdb.token`           | `INFLUXDB_TOKEN`           |                  | API token to use if auth in enabled in Influxdb (disables user and password)                                                        |\n| `influxdb.mutualtls`       | `INFLUXDB_MUTUALTLS`       | `false`          | Authenticate to the output with TLS, if true, checkcert flag will be ignored (server cert will always be checked)                   |\n| `influxdb.checkcert`      ",
                    "rendered": {
                      "text": "                  | Password to use if auth is enabled in Influxdb                                                                                      |\n| `influxdb.token`           | `INFLUXDB_TOKEN`           |                  | API token to use if auth in enabled in Influxdb (disables user and password)                                                        |\n| `influxdb.mutualtls`       | `INFLUXDB_MUTUALTLS`       | `false`          | Authenticate to the output with TLS, if true, checkcert flag will be ignored (server cert will always be checked)                   |\n| `influxdb.checkcert`      ",
                      "markdown": "`                  | Password to use if auth is enabled in Influxdb                                                                                      |\n| `influxdb.token`           | `INFLUXDB_TOKEN`           |                  | API token to use if auth in enabled in Influxdb (disables user and password)                                                        |\n| `influxdb.mutualtls`       | `INFLUXDB_MUTUALTLS`       | `false`          | Authenticate to the output with TLS, if true, checkcert flag will be ignored (server cert will always be checked)                   |\n| `influxdb.checkcert`      `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/influxdb.md"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 79,
                  "endLine": 25,
                  "endColumn": 87,
                  "snippet": {
                    "text": "      |\n| `influxdb.user`            | `INFLUXDB_USER`            |                  | User to use if auth is enabled in Influxdb                                                                                          |\n| `influxdb.password`        | `INFLUXDB_PASSWORD`        |                  | Password to use if auth is enabled in Influxdb                                                                                      |\n| `influxdb.token`           | `INFLUXDB_TOKEN`           |                  | API token to use if auth in enabled in Influxdb (disables user and password)                   ",
                    "rendered": {
                      "text": "      |\n| `influxdb.user`            | `INFLUXDB_USER`            |                  | User to use if auth is enabled in Influxdb                                                                                          |\n| `influxdb.password`        | `INFLUXDB_PASSWORD`        |                  | Password to use if auth is enabled in Influxdb                                                                                      |\n| `influxdb.token`           | `INFLUXDB_TOKEN`           |                  | API token to use if auth in enabled in Influxdb (disables user and password)                   ",
                      "markdown": "`      |\n| `influxdb.user`            | `INFLUXDB_USER`            |                  | User to use if auth is enabled in Influxdb                                                                                          |\n| `influxdb.password`        | `INFLUXDB_PASSWORD`        |                  | Password to use if auth is enabled in Influxdb                                                                                      |\n| `influxdb.token`           | `INFLUXDB_TOKEN`           |                  | API token to use if auth in enabled in Influxdb (disables user and password)                   `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/influxdb.md"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 41,
                  "endLine": 25,
                  "endColumn": 49,
                  "snippet": {
                    "text": "                                            |\n| `influxdb.user`            | `INFLUXDB_USER`            |                  | User to use if auth is enabled in Influxdb                                                                                          |\n| `influxdb.password`        | `INFLUXDB_PASSWORD`        |                  | Password to use if auth is enabled in Influxdb                                                                                      |\n| `influxdb.token`           | `INFLUXDB_TOKEN`           |                  | API token to use if auth in enabled in Influxdb (disables",
                    "rendered": {
                      "text": "                                            |\n| `influxdb.user`            | `INFLUXDB_USER`            |                  | User to use if auth is enabled in Influxdb                                                                                          |\n| `influxdb.password`        | `INFLUXDB_PASSWORD`        |                  | Password to use if auth is enabled in Influxdb                                                                                      |\n| `influxdb.token`           | `INFLUXDB_TOKEN`           |                  | API token to use if auth in enabled in Influxdb (disables",
                      "markdown": "`                                            |\n| `influxdb.user`            | `INFLUXDB_USER`            |                  | User to use if auth is enabled in Influxdb                                                                                          |\n| `influxdb.password`        | `INFLUXDB_PASSWORD`        |                  | Password to use if auth is enabled in Influxdb                                                                                      |\n| `influxdb.token`           | `INFLUXDB_TOKEN`           |                  | API token to use if auth in enabled in Influxdb (disables`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/influxdb.md"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 12,
                  "endLine": 25,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                                                                         |\n| `influxdb.user`            | `INFLUXDB_USER`            |                  | User to use if auth is enabled in Influxdb                                                                                          |\n| `influxdb.password`        | `INFLUXDB_PASSWORD`        |                  | Password to use if auth is enabled in Influxdb                                                                                      |\n| `influxdb.token`           | `INFLUXDB_TOKEN`           |                  | API token to use if auth in ",
                    "rendered": {
                      "text": "                                                                         |\n| `influxdb.user`            | `INFLUXDB_USER`            |                  | User to use if auth is enabled in Influxdb                                                                                          |\n| `influxdb.password`        | `INFLUXDB_PASSWORD`        |                  | Password to use if auth is enabled in Influxdb                                                                                      |\n| `influxdb.token`           | `INFLUXDB_TOKEN`           |                  | API token to use if auth in ",
                      "markdown": "`                                                                         |\n| `influxdb.user`            | `INFLUXDB_USER`            |                  | User to use if auth is enabled in Influxdb                                                                                          |\n| `influxdb.password`        | `INFLUXDB_PASSWORD`        |                  | Password to use if auth is enabled in Influxdb                                                                                      |\n| `influxdb.token`           | `INFLUXDB_TOKEN`           |                  | API token to use if auth in `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/influxdb.md"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 12,
                  "endLine": 63,
                  "endColumn": 5,
                  "snippet": {
                    "text": "events,akey=AValue,bkey=BValue,ckey=CValue,priority=Debug,rule=Testrule\nevents,akey=A_Value,bkey=B_Value,ckey=C_Value,priority=Debug,rule=Test_rule\n> select * from events\nname: events\ntime                akey    bkey    ckey    priority rule      value\n----                ----    ----    ----    -------- ----      -----\n1560433816893368400 AValue  BValue  CValue  Debug    Testrule  This is a test from falcosidekick\n1560441359119741800 A_Value B_Value C_Value Debug    Test_rule This is a test from falcosidekick\n",
                    "rendered": {
                      "text": "events,akey=AValue,bkey=BValue,ckey=CValue,priority=Debug,rule=Testrule\nevents,akey=A_Value,bkey=B_Value,ckey=C_Value,priority=Debug,rule=Test_rule\n> select * from events\nname: events\ntime                akey    bkey    ckey    priority rule      value\n----                ----    ----    ----    -------- ----      -----\n1560433816893368400 AValue  BValue  CValue  Debug    Testrule  This is a test from falcosidekick\n1560441359119741800 A_Value B_Value C_Value Debug    Test_rule This is a test from falcosidekick\n",
                      "markdown": "`events,akey=AValue,bkey=BValue,ckey=CValue,priority=Debug,rule=Testrule\nevents,akey=A_Value,bkey=B_Value,ckey=C_Value,priority=Debug,rule=Test_rule\n> select * from events\nname: events\ntime                akey    bkey    ckey    priority rule      value\n----                ----    ----    ----    -------- ----      -----\n1560433816893368400 AValue  BValue  CValue  Debug    Testrule  This is a test from falcosidekick\n1560441359119741800 A_Value B_Value C_Value Debug    Test_rule This is a test from falcosidekick\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/influxdb.md"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 3,
                  "endLine": 32,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `influxdb.minimumpriority` | `INFLUXDB_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `influxdb.minimumpriority` | `INFLUXDB_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `influxdb.minimumpriority` | `INFLUXDB_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/influxdb.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 30,
                  "endLine": 17,
                  "endColumn": 35,
                  "snippet": {
                    "text": "te**: https://www.influxdata.com/products/influxdb/\n\n## Table of content\n\n- [InfluxDB](#influxdb)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Result](#result)\n\n## Configuration\n\n| Setting                    | Env var                    | Default value    | Description                                                                                                                         |\n| -------------------------- | -------------------------- | ---------------- | -------------------------------------------",
                    "rendered": {
                      "text": "te**: https://www.influxdata.com/products/influxdb/\n\n## Table of content\n\n- [InfluxDB](#influxdb)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Result](#result)\n\n## Configuration\n\n| Setting                    | Env var                    | Default value    | Description                                                                                                                         |\n| -------------------------- | -------------------------- | ---------------- | -------------------------------------------",
                      "markdown": "`te**: https://www.influxdata.com/products/influxdb/\n\n## Table of content\n\n- [InfluxDB](#influxdb)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Result](#result)\n\n## Configuration\n\n| Setting                    | Env var                    | Default value    | Description                                                                                                                         |\n| -------------------------- | -------------------------- | ---------------- | -------------------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/sumologic.md"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 3,
                  "endLine": 28,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/sumologic.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 26,
                  "endLine": 17,
                  "endColumn": 31,
                  "snippet": {
                    "text": "s\n- **Website**: https://www.sumologic.com/\n\n## Table of content\n\n- [SumoLogic](#sumologic)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                | Env var                | Default value     | Description                                                                                                                         |\n| ---------------------- | ---------------------- | ----------------- | -----------------------------------------------------",
                    "rendered": {
                      "text": "s\n- **Website**: https://www.sumologic.com/\n\n## Table of content\n\n- [SumoLogic](#sumologic)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                | Env var                | Default value     | Description                                                                                                                         |\n| ---------------------- | ---------------------- | ----------------- | -----------------------------------------------------",
                      "markdown": "`s\n- **Website**: https://www.sumologic.com/\n\n## Table of content\n\n- [SumoLogic](#sumologic)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                | Env var                | Default value     | Description                                                                                                                         |\n| ---------------------- | ---------------------- | ----------------- | -----------------------------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/cloudevents.md"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 3,
                  "endLine": 26,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `cloudevents.minimumpriority` | `CLOUDEVENTS_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `cloudevents.minimumpriority` | `CLOUDEVENTS_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `cloudevents.minimumpriority` | `CLOUDEVENTS_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/cloudevents.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 33,
                  "endLine": 17,
                  "endColumn": 38,
                  "snippet": {
                    "text": " of content\n\n- [Cloud Events](#cloud-events)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                       | Env var                       | Default value    | Description                                                                                                                         |\n| ----------------------------- | ----------------------------- | ---------------- | ----------------------------------",
                    "rendered": {
                      "text": " of content\n\n- [Cloud Events](#cloud-events)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                       | Env var                       | Default value    | Description                                                                                                                         |\n| ----------------------------- | ----------------------------- | ---------------- | ----------------------------------",
                      "markdown": "` of content\n\n- [Cloud Events](#cloud-events)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                       | Env var                       | Default value    | Description                                                                                                                         |\n| ----------------------------- | ----------------------------- | ---------------- | ----------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/slack.md"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 177,
                  "endLine": 61,
                  "endColumn": 185,
                  "snippet": {
                    "text": "                                                                                                                         |\n| `{{ index .OutputFields \\\"<field name>\\\" }}` | A map of additional optional fields emitted depending on the event. These may not be present for every event, in which case they expand to the string `<no value>` |\n\nGo templates also support some basic methods for text manipulation which can be used to improve the clarity of alerts - see the documentation for details.\n\n## Screenshots\n\n(SLACK_OUTPUTFORMAT=\"**all**\")\n\n![slack example](images/slack.png)\n\n(SLACK_OUTPUTFORMAT=\"**text**\"",
                    "rendered": {
                      "text": "                                                                                                                         |\n| `{{ index .OutputFields \\\"<field name>\\\" }}` | A map of additional optional fields emitted depending on the event. These may not be present for every event, in which case they expand to the string `<no value>` |\n\nGo templates also support some basic methods for text manipulation which can be used to improve the clarity of alerts - see the documentation for details.\n\n## Screenshots\n\n(SLACK_OUTPUTFORMAT=\"**all**\")\n\n![slack example](images/slack.png)\n\n(SLACK_OUTPUTFORMAT=\"**text**\"",
                      "markdown": "`                                                                                                                         |\n| `{{ index .OutputFields \\\"<field name>\\\" }}` | A map of additional optional fields emitted depending on the event. These may not be present for every event, in which case they expand to the string `<no value>` |\n\nGo templates also support some basic methods for text manipulation which can be used to improve the clarity of alerts - see the documentation for details.\n\n## Screenshots\n\n(SLACK_OUTPUTFORMAT=\"**all**\")\n\n![slack example](images/slack.png)\n\n(SLACK_OUTPUTFORMAT=\"**text**\"`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/slack.md"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 177,
                  "endLine": 61,
                  "endColumn": 185,
                  "snippet": {
                    "text": "                                                                                                                         |\n| `{{ index .OutputFields \\\"<field name>\\\" }}` | A map of additional optional fields emitted depending on the event. These may not be present for every event, in which case they expand to the string `<no value>` |\n\nGo templates also support some basic methods for text manipulation which can be used to improve the clarity of alerts - see the documentation for details.\n\n## Screenshots\n\n(SLACK_OUTPUTFORMAT=\"**all**\")\n\n![slack example](images/slack.png)\n\n(SLACK_OUTPUTFORMAT=\"**text**\"",
                    "rendered": {
                      "text": "                                                                                                                         |\n| `{{ index .OutputFields \\\"<field name>\\\" }}` | A map of additional optional fields emitted depending on the event. These may not be present for every event, in which case they expand to the string `<no value>` |\n\nGo templates also support some basic methods for text manipulation which can be used to improve the clarity of alerts - see the documentation for details.\n\n## Screenshots\n\n(SLACK_OUTPUTFORMAT=\"**all**\")\n\n![slack example](images/slack.png)\n\n(SLACK_OUTPUTFORMAT=\"**text**\"",
                      "markdown": "`                                                                                                                         |\n| `{{ index .OutputFields \\\"<field name>\\\" }}` | A map of additional optional fields emitted depending on the event. These may not be present for every event, in which case they expand to the string `<no value>` |\n\nGo templates also support some basic methods for text manipulation which can be used to improve the clarity of alerts - see the documentation for details.\n\n## Screenshots\n\n(SLACK_OUTPUTFORMAT=\"**all**\")\n\n![slack example](images/slack.png)\n\n(SLACK_OUTPUTFORMAT=\"**text**\"`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/slack.md"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 3,
                  "endLine": 32,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `slack.minimumpriority` | `SLACK_MINIMUMPRIORITY` | `\"\"` (= `debug`)                                                                                    | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"`                                                                                                                        |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `slack.minimumpriority` | `SLACK_MINIMUMPRIORITY` | `\"\"` (= `debug`)                                                                                    | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"`                                                                                                                        |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `slack.minimumpriority` | `SLACK_MINIMUMPRIORITY` | `\"\"` (= `debug`)                                                                                    | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"`                                                                                                                        |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/slack.md"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 27,
                  "endLine": 20,
                  "endColumn": 32,
                  "snippet": {
                    "text": ")\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n    - [Message Formatting](#message-formatting)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n\n| Setting                 | Env var                 | Default value                                                                                       | Description                                                                                                                                                                     ",
                    "rendered": {
                      "text": ")\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n    - [Message Formatting](#message-formatting)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n\n| Setting                 | Env var                 | Default value                                                                                       | Description                                                                                                                                                                     ",
                      "markdown": "`)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n    - [Message Formatting](#message-formatting)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n\n| Setting                 | Env var                 | Default value                                                                                       | Description                                                                                                                                                                     `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/aws_s3.md"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 3,
                  "endLine": 32,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `aws.s3.objectcannedacl` | `AWS_S3_OBJECTCANNEDACL` | `bucket-owner-full-control` | Canned ACL (`x-amz-acl`) to use when creating the object                                                                            |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `aws.s3.objectcannedacl` | `AWS_S3_OBJECTCANNEDACL` | `bucket-owner-full-control` | Canned ACL (`x-amz-acl`) to use when creating the object                                                                            |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `aws.s3.objectcannedacl` | `AWS_S3_OBJECTCANNEDACL` | `bucket-owner-full-control` | Canned ACL (`x-amz-acl`) to use when creating the object                                                                            |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/aws_s3.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 28,
                  "endLine": 17,
                  "endColumn": 33,
                  "snippet": {
                    "text": "atures/\n\n## Table of content\n\n- [AWS S3](#aws-s3)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                  | Env var                  | Default value               | Description                                                                                                                         |\n|--------------------------|--------------------------|-----------------------------|----------------------------",
                    "rendered": {
                      "text": "atures/\n\n## Table of content\n\n- [AWS S3](#aws-s3)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                  | Env var                  | Default value               | Description                                                                                                                         |\n|--------------------------|--------------------------|-----------------------------|----------------------------",
                      "markdown": "`atures/\n\n## Table of content\n\n- [AWS S3](#aws-s3)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                  | Env var                  | Default value               | Description                                                                                                                         |\n|--------------------------|--------------------------|-----------------------------|----------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/n8n.md"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 19,
                  "endLine": 36,
                  "endColumn": 27,
                  "snippet": {
                    "text": "n8n:\n  address: \"\" # N8N address, if not empty, N8N output is enabled\n  # user: \"\" # Username to authenticate with N8N in basic auth\n  # password: \"\" # Password to authenticate with N8N in basic auth\n  # headerauthname: \"\" # Header Auth Key to authenticate with N8N\n  # headerauthvalue: \"\" # \n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n",
                    "rendered": {
                      "text": "n8n:\n  address: \"\" # N8N address, if not empty, N8N output is enabled\n  # user: \"\" # Username to authenticate with N8N in basic auth\n  # password: \"\" # Password to authenticate with N8N in basic auth\n  # headerauthname: \"\" # Header Auth Key to authenticate with N8N\n  # headerauthvalue: \"\" # \n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n",
                      "markdown": "`n8n:\n  address: \"\" # N8N address, if not empty, N8N output is enabled\n  # user: \"\" # Username to authenticate with N8N in basic auth\n  # password: \"\" # Password to authenticate with N8N in basic auth\n  # headerauthname: \"\" # Header Auth Key to authenticate with N8N\n  # headerauthvalue: \"\" # \n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/n8n.md"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 4,
                  "endLine": 36,
                  "endColumn": 12,
                  "snippet": {
                    "text": "n8n:\n  address: \"\" # N8N address, if not empty, N8N output is enabled\n  # user: \"\" # Username to authenticate with N8N in basic auth\n  # password: \"\" # Password to authenticate with N8N in basic auth\n  # headerauthname: \"\" # Header Auth Key to authenticate with N8N\n  # headerauthvalue: \"\" # \n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n",
                    "rendered": {
                      "text": "n8n:\n  address: \"\" # N8N address, if not empty, N8N output is enabled\n  # user: \"\" # Username to authenticate with N8N in basic auth\n  # password: \"\" # Password to authenticate with N8N in basic auth\n  # headerauthname: \"\" # Header Auth Key to authenticate with N8N\n  # headerauthvalue: \"\" # \n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n",
                      "markdown": "`n8n:\n  address: \"\" # N8N address, if not empty, N8N output is enabled\n  # user: \"\" # Username to authenticate with N8N in basic auth\n  # password: \"\" # Password to authenticate with N8N in basic auth\n  # headerauthname: \"\" # Header Auth Key to authenticate with N8N\n  # headerauthvalue: \"\" # \n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/n8n.md"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 69,
                  "endLine": 21,
                  "endColumn": 77,
                  "snippet": {
                    "text": "                          |\n| `n8n.user`            | `N8N_USER`            |                  | Username to authenticate with N8N in basic auth                                                                                     |\n| `n8n.password`        | `N8N_PASSWORD`        |                  | Password to authenticate with N8N in basic auth                                                                                     |\n| `n8n.headerauthname`  | `N8N_HEADERAUTHNAME`  |                  | Header Auth Value to authenticate with N8N                                                               ",
                    "rendered": {
                      "text": "                          |\n| `n8n.user`            | `N8N_USER`            |                  | Username to authenticate with N8N in basic auth                                                                                     |\n| `n8n.password`        | `N8N_PASSWORD`        |                  | Password to authenticate with N8N in basic auth                                                                                     |\n| `n8n.headerauthname`  | `N8N_HEADERAUTHNAME`  |                  | Header Auth Value to authenticate with N8N                                                               ",
                      "markdown": "`                          |\n| `n8n.user`            | `N8N_USER`            |                  | Username to authenticate with N8N in basic auth                                                                                     |\n| `n8n.password`        | `N8N_PASSWORD`        |                  | Password to authenticate with N8N in basic auth                                                                                     |\n| `n8n.headerauthname`  | `N8N_HEADERAUTHNAME`  |                  | Header Auth Value to authenticate with N8N                                                               `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/n8n.md"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 31,
                  "endLine": 21,
                  "endColumn": 39,
                  "snippet": {
                    "text": "                                                                |\n| `n8n.user`            | `N8N_USER`            |                  | Username to authenticate with N8N in basic auth                                                                                     |\n| `n8n.password`        | `N8N_PASSWORD`        |                  | Password to authenticate with N8N in basic auth                                                                                     |\n| `n8n.headerauthname`  | `N8N_HEADERAUTHNAME`  |                  | Header Auth Value to authenticate with N8N                         ",
                    "rendered": {
                      "text": "                                                                |\n| `n8n.user`            | `N8N_USER`            |                  | Username to authenticate with N8N in basic auth                                                                                     |\n| `n8n.password`        | `N8N_PASSWORD`        |                  | Password to authenticate with N8N in basic auth                                                                                     |\n| `n8n.headerauthname`  | `N8N_HEADERAUTHNAME`  |                  | Header Auth Value to authenticate with N8N                         ",
                      "markdown": "`                                                                |\n| `n8n.user`            | `N8N_USER`            |                  | Username to authenticate with N8N in basic auth                                                                                     |\n| `n8n.password`        | `N8N_PASSWORD`        |                  | Password to authenticate with N8N in basic auth                                                                                     |\n| `n8n.headerauthname`  | `N8N_HEADERAUTHNAME`  |                  | Header Auth Value to authenticate with N8N                         `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/n8n.md"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 7,
                  "endLine": 21,
                  "endColumn": 15,
                  "snippet": {
                    "text": "nabled**                                                                                |\n| `n8n.user`            | `N8N_USER`            |                  | Username to authenticate with N8N in basic auth                                                                                     |\n| `n8n.password`        | `N8N_PASSWORD`        |                  | Password to authenticate with N8N in basic auth                                                                                     |\n| `n8n.headerauthname`  | `N8N_HEADERAUTHNAME`  |                  | Header Auth Value to authenticate with N8N ",
                    "rendered": {
                      "text": "nabled**                                                                                |\n| `n8n.user`            | `N8N_USER`            |                  | Username to authenticate with N8N in basic auth                                                                                     |\n| `n8n.password`        | `N8N_PASSWORD`        |                  | Password to authenticate with N8N in basic auth                                                                                     |\n| `n8n.headerauthname`  | `N8N_HEADERAUTHNAME`  |                  | Header Auth Value to authenticate with N8N ",
                      "markdown": "`nabled**                                                                                |\n| `n8n.user`            | `N8N_USER`            |                  | Username to authenticate with N8N in basic auth                                                                                     |\n| `n8n.password`        | `N8N_PASSWORD`        |                  | Password to authenticate with N8N in basic auth                                                                                     |\n| `n8n.headerauthname`  | `N8N_HEADERAUTHNAME`  |                  | Header Auth Value to authenticate with N8N `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/n8n.md"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 3,
                  "endLine": 28,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `n8n.minimumpriority` | `N8N_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `n8n.minimumpriority` | `N8N_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `n8n.minimumpriority` | `N8N_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/n8n.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 25,
                  "endLine": 17,
                  "endColumn": 30,
                  "snippet": {
                    "text": " https://n8n.io/\n\n## Table of content\n\n- [N8N](#n8n)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting               | Env var               | Default value    | Description                                                                                                                         |\n| --------------------- | --------------------- | ---------------- | ----------------------------------------------------------",
                    "rendered": {
                      "text": " https://n8n.io/\n\n## Table of content\n\n- [N8N](#n8n)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting               | Env var               | Default value    | Description                                                                                                                         |\n| --------------------- | --------------------- | ---------------- | ----------------------------------------------------------",
                      "markdown": "` https://n8n.io/\n\n## Table of content\n\n- [N8N](#n8n)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting               | Env var               | Default value    | Description                                                                                                                         |\n| --------------------- | --------------------- | ---------------- | ----------------------------------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/release/ldflags.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\nset -o errexit\nset -o nounset\nset -o pipefail\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\nset -o errexit\nset -o nounset\nset -o pipefail\n",
                      "markdown": "`#!/usr/bin/env bash\n\nset -o errexit\nset -o nounset\nset -o pipefail\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/release/ldflags.sh"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 13,
                  "endLine": 16,
                  "endColumn": 19,
                  "snippet": {
                    "text": "  local GIT_COMMIT=$(git rev-parse HEAD)\n\n  local GIT_TREESTATE=\"clean\"\n  if [[ $(git diff --stat) != '' ]]; then\n    GIT_TREESTATE=\"dirty\"\n  fi\n\n",
                    "rendered": {
                      "text": "  local GIT_COMMIT=$(git rev-parse HEAD)\n\n  local GIT_TREESTATE=\"clean\"\n  if [[ $(git diff --stat) != '' ]]; then\n    GIT_TREESTATE=\"dirty\"\n  fi\n\n",
                      "markdown": "`  local GIT_COMMIT=$(git rev-parse HEAD)\n\n  local GIT_TREESTATE=\"clean\"\n  if [[ $(git diff --stat) != '' ]]; then\n    GIT_TREESTATE=\"dirty\"\n  fi\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/release/ldflags.sh"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 7,
                  "endLine": 11,
                  "snippet": {
                    "text": "# Output LDFlAGS for a given environment. LDFLAGS are applied to all go binary\n# builds.\n#\n# Args: env\nfunction ldflags() {\n  local GIT_VERSION=$(git describe --tags --always --dirty)\n  local GIT_COMMIT=$(git rev-parse HEAD)\n\n",
                    "rendered": {
                      "text": "# Output LDFlAGS for a given environment. LDFLAGS are applied to all go binary\n# builds.\n#\n# Args: env\nfunction ldflags() {\n  local GIT_VERSION=$(git describe --tags --always --dirty)\n  local GIT_COMMIT=$(git rev-parse HEAD)\n\n",
                      "markdown": "`# Output LDFlAGS for a given environment. LDFLAGS are applied to all go binary\n# builds.\n#\n# Args: env\nfunction ldflags() {\n  local GIT_VERSION=$(git describe --tags --always --dirty)\n  local GIT_COMMIT=$(git rev-parse HEAD)\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/release/ldflags.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\nset -o errexit\nset -o nounset\nset -o pipefail\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\nset -o errexit\nset -o nounset\nset -o pipefail\n",
                      "markdown": "`#!/usr/bin/env bash\n\nset -o errexit\nset -o nounset\nset -o pipefail\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.github/workflows/build-image.yml"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 9,
                  "endLine": 37,
                  "endColumn": 17,
                  "snippet": {
                    "text": "          make goreleaser-snapshot\n          docker images\n          docker run falcosecurity/falcosidekick:latest-amd64 --version\n          docker run public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 --version\n        env:\n          GOPATH: /home/runner/go\n",
                    "rendered": {
                      "text": "          make goreleaser-snapshot\n          docker images\n          docker run falcosecurity/falcosidekick:latest-amd64 --version\n          docker run public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 --version\n        env:\n          GOPATH: /home/runner/go\n",
                      "markdown": "`          make goreleaser-snapshot\n          docker images\n          docker run falcosecurity/falcosidekick:latest-amd64 --version\n          docker run public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 --version\n        env:\n          GOPATH: /home/runner/go\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.github/workflows/build-image.yml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 9,
                  "endLine": 36,
                  "endColumn": 17,
                  "snippet": {
                    "text": "        run: |\n          make goreleaser-snapshot\n          docker images\n          docker run falcosecurity/falcosidekick:latest-amd64 --version\n          docker run public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 --version\n        env:\n          GOPATH: /home/runner/go\n",
                    "rendered": {
                      "text": "        run: |\n          make goreleaser-snapshot\n          docker images\n          docker run falcosecurity/falcosidekick:latest-amd64 --version\n          docker run public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 --version\n        env:\n          GOPATH: /home/runner/go\n",
                      "markdown": "`        run: |\n          make goreleaser-snapshot\n          docker images\n          docker run falcosecurity/falcosidekick:latest-amd64 --version\n          docker run public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 --version\n        env:\n          GOPATH: /home/runner/go\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.github/workflows/build-image.yml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 9,
                  "endLine": 35,
                  "endColumn": 17,
                  "snippet": {
                    "text": "      - name: run goreleaser-snapshot\n        run: |\n          make goreleaser-snapshot\n          docker images\n          docker run falcosecurity/falcosidekick:latest-amd64 --version\n          docker run public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 --version\n        env:\n",
                    "rendered": {
                      "text": "      - name: run goreleaser-snapshot\n        run: |\n          make goreleaser-snapshot\n          docker images\n          docker run falcosecurity/falcosidekick:latest-amd64 --version\n          docker run public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 --version\n        env:\n",
                      "markdown": "`      - name: run goreleaser-snapshot\n        run: |\n          make goreleaser-snapshot\n          docker images\n          docker run falcosecurity/falcosidekick:latest-amd64 --version\n          docker run public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 --version\n        env:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.github/workflows/build-image.yml"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 20,
                  "endLine": 23,
                  "endColumn": 28,
                  "snippet": {
                    "text": "      - name: Set up QEMU\n        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1\n\n      - uses: anchore/sbom-action/download-syft@61119d458adab75f756bc0b9e4bde25725f86a7a # v0.17.2\n",
                    "rendered": {
                      "text": "      - name: Set up QEMU\n        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1\n\n      - uses: anchore/sbom-action/download-syft@61119d458adab75f756bc0b9e4bde25725f86a7a # v0.17.2\n",
                      "markdown": "`      - name: Set up QEMU\n        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1\n\n      - uses: anchore/sbom-action/download-syft@61119d458adab75f756bc0b9e4bde25725f86a7a # v0.17.2\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 10,
                  "endLine": 43,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0\n        with:\n          username: ${{ secrets.DOCKERHUB_USER }}\n          password: ${{ secrets.DOCKERHUB_SECRET }}\n\n      # Push images to AWS Public ECR\n      - name: Configure AWS credentials\n",
                    "rendered": {
                      "text": "        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0\n        with:\n          username: ${{ secrets.DOCKERHUB_USER }}\n          password: ${{ secrets.DOCKERHUB_SECRET }}\n\n      # Push images to AWS Public ECR\n      - name: Configure AWS credentials\n",
                      "markdown": "`        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0\n        with:\n          username: ${{ secrets.DOCKERHUB_USER }}\n          password: ${{ secrets.DOCKERHUB_SECRET }}\n\n      # Push images to AWS Public ECR\n      - name: Configure AWS credentials\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 6,
                  "endLine": 97,
                  "endColumn": 12,
                  "snippet": {
                    "text": "      contents: write # To add assets to a release.\n    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.0.0\n    with:\n      base64-subjects: \"${{ needs.release.outputs.hashes }}\"\n      upload-assets: true\n      upload-tag-name: \"${{ needs.release.outputs.tag_name }}\"\n",
                    "rendered": {
                      "text": "      contents: write # To add assets to a release.\n    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.0.0\n    with:\n      base64-subjects: \"${{ needs.release.outputs.hashes }}\"\n      upload-assets: true\n      upload-tag-name: \"${{ needs.release.outputs.tag_name }}\"\n",
                      "markdown": "`      contents: write # To add assets to a release.\n    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.0.0\n    with:\n      base64-subjects: \"${{ needs.release.outputs.hashes }}\"\n      upload-assets: true\n      upload-tag-name: \"${{ needs.release.outputs.tag_name }}\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 46,
                  "endLine": 87,
                  "endColumn": 52,
                  "snippet": {
                    "text": "        run: |\n          set -euo pipefail\n          checksum_file=$(echo \"$ARTIFACTS\" | jq -r '.[] | select (.type==\"Checksum\") | .path')\n          echo \"hashes=$(cat $checksum_file | base64 -w0)\" >> \"$GITHUB_OUTPUT\"\n\n  provenance:\n    needs: [release]\n",
                    "rendered": {
                      "text": "        run: |\n          set -euo pipefail\n          checksum_file=$(echo \"$ARTIFACTS\" | jq -r '.[] | select (.type==\"Checksum\") | .path')\n          echo \"hashes=$(cat $checksum_file | base64 -w0)\" >> \"$GITHUB_OUTPUT\"\n\n  provenance:\n    needs: [release]\n",
                      "markdown": "`        run: |\n          set -euo pipefail\n          checksum_file=$(echo \"$ARTIFACTS\" | jq -r '.[] | select (.type==\"Checksum\") | .path')\n          echo \"hashes=$(cat $checksum_file | base64 -w0)\" >> \"$GITHUB_OUTPUT\"\n\n  provenance:\n    needs: [release]\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 45,
                  "endLine": 87,
                  "endColumn": 53,
                  "snippet": {
                    "text": "        run: |\n          set -euo pipefail\n          checksum_file=$(echo \"$ARTIFACTS\" | jq -r '.[] | select (.type==\"Checksum\") | .path')\n          echo \"hashes=$(cat $checksum_file | base64 -w0)\" >> \"$GITHUB_OUTPUT\"\n\n  provenance:\n    needs: [release]\n",
                    "rendered": {
                      "text": "        run: |\n          set -euo pipefail\n          checksum_file=$(echo \"$ARTIFACTS\" | jq -r '.[] | select (.type==\"Checksum\") | .path')\n          echo \"hashes=$(cat $checksum_file | base64 -w0)\" >> \"$GITHUB_OUTPUT\"\n\n  provenance:\n    needs: [release]\n",
                      "markdown": "`        run: |\n          set -euo pipefail\n          checksum_file=$(echo \"$ARTIFACTS\" | jq -r '.[] | select (.type==\"Checksum\") | .path')\n          echo \"hashes=$(cat $checksum_file | base64 -w0)\" >> \"$GITHUB_OUTPUT\"\n\n  provenance:\n    needs: [release]\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 22,
                  "endLine": 39,
                  "endColumn": 30,
                  "snippet": {
                    "text": "      - uses: anchore/sbom-action/download-syft@61119d458adab75f756bc0b9e4bde25725f86a7a # v0.17.2\n\n      # Push images to DockerHUB\n      - name: Login to Docker Hub\n        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0\n        with:\n          username: ${{ secrets.DOCKERHUB_USER }}\n",
                    "rendered": {
                      "text": "      - uses: anchore/sbom-action/download-syft@61119d458adab75f756bc0b9e4bde25725f86a7a # v0.17.2\n\n      # Push images to DockerHUB\n      - name: Login to Docker Hub\n        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0\n        with:\n          username: ${{ secrets.DOCKERHUB_USER }}\n",
                      "markdown": "`      - uses: anchore/sbom-action/download-syft@61119d458adab75f756bc0b9e4bde25725f86a7a # v0.17.2\n\n      # Push images to DockerHUB\n      - name: Login to Docker Hub\n        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0\n        with:\n          username: ${{ secrets.DOCKERHUB_USER }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 20,
                  "endLine": 31,
                  "endColumn": 28,
                  "snippet": {
                    "text": "      - name: Set up QEMU\n        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1\n\n      - uses: sigstore/cosign-installer@dc72c7d5c4d10cd6bcb8cf6e3fd625a9e5e537da # v3.7.0\n",
                    "rendered": {
                      "text": "      - name: Set up QEMU\n        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1\n\n      - uses: sigstore/cosign-installer@dc72c7d5c4d10cd6bcb8cf6e3fd625a9e5e537da # v3.7.0\n",
                      "markdown": "`      - name: Set up QEMU\n        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1\n\n      - uses: sigstore/cosign-installer@dc72c7d5c4d10cd6bcb8cf6e3fd625a9e5e537da # v3.7.0\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.github/workflows/push-main.yml"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 10,
                  "endLine": 53,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0\n        with:\n          username: ${{ secrets.DOCKERHUB_USER }}\n          password: ${{ secrets.DOCKERHUB_SECRET }}\n\n      - name: Push images to Dockerhub\n        run: |\n",
                    "rendered": {
                      "text": "        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0\n        with:\n          username: ${{ secrets.DOCKERHUB_USER }}\n          password: ${{ secrets.DOCKERHUB_SECRET }}\n\n      - name: Push images to Dockerhub\n        run: |\n",
                      "markdown": "`        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0\n        with:\n          username: ${{ secrets.DOCKERHUB_USER }}\n          password: ${{ secrets.DOCKERHUB_SECRET }}\n\n      - name: Push images to Dockerhub\n        run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.github/workflows/push-main.yml"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 9,
                  "endLine": 83,
                  "endColumn": 17,
                  "snippet": {
                    "text": "          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-armv7\n          docker manifest create --amend public.ecr.aws/falcosecurity/falcosidekick:latest public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 \\\n            public.ecr.aws/falcosecurity/falcosidekick:latest-arm64 public.ecr.aws/falcosecurity/falcosidekick:latest-armv7\n          docker manifest push --purge public.ecr.aws/falcosecurity/falcosidekick:latest\n",
                    "rendered": {
                      "text": "          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-armv7\n          docker manifest create --amend public.ecr.aws/falcosecurity/falcosidekick:latest public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 \\\n            public.ecr.aws/falcosecurity/falcosidekick:latest-arm64 public.ecr.aws/falcosecurity/falcosidekick:latest-armv7\n          docker manifest push --purge public.ecr.aws/falcosecurity/falcosidekick:latest\n",
                      "markdown": "`          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-armv7\n          docker manifest create --amend public.ecr.aws/falcosecurity/falcosidekick:latest public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 \\\n            public.ecr.aws/falcosecurity/falcosidekick:latest-arm64 public.ecr.aws/falcosecurity/falcosidekick:latest-armv7\n          docker manifest push --purge public.ecr.aws/falcosecurity/falcosidekick:latest\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.github/workflows/push-main.yml"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 9,
                  "endLine": 81,
                  "endColumn": 17,
                  "snippet": {
                    "text": "          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-amd64\n          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-arm64\n          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-armv7\n          docker manifest create --amend public.ecr.aws/falcosecurity/falcosidekick:latest public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 \\\n            public.ecr.aws/falcosecurity/falcosidekick:latest-arm64 public.ecr.aws/falcosecurity/falcosidekick:latest-armv7\n          docker manifest push --purge public.ecr.aws/falcosecurity/falcosidekick:latest\n",
                    "rendered": {
                      "text": "          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-amd64\n          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-arm64\n          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-armv7\n          docker manifest create --amend public.ecr.aws/falcosecurity/falcosidekick:latest public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 \\\n            public.ecr.aws/falcosecurity/falcosidekick:latest-arm64 public.ecr.aws/falcosecurity/falcosidekick:latest-armv7\n          docker manifest push --purge public.ecr.aws/falcosecurity/falcosidekick:latest\n",
                      "markdown": "`          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-amd64\n          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-arm64\n          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-armv7\n          docker manifest create --amend public.ecr.aws/falcosecurity/falcosidekick:latest public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 \\\n            public.ecr.aws/falcosecurity/falcosidekick:latest-arm64 public.ecr.aws/falcosecurity/falcosidekick:latest-armv7\n          docker manifest push --purge public.ecr.aws/falcosecurity/falcosidekick:latest\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.github/workflows/push-main.yml"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 9,
                  "endLine": 80,
                  "endColumn": 17,
                  "snippet": {
                    "text": "tions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1\n        with:\n          registry-type: public\n\n      - run: |\n          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-amd64\n          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-arm64\n          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-armv7\n          docker manifest create --amend public.ecr.aws/falcosecurity/falcosidekick:latest public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 \\\n            public.ecr.aws/falcosecurity/falcosidekick:latest-arm64 public.ecr.aws/falcose",
                    "rendered": {
                      "text": "tions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1\n        with:\n          registry-type: public\n\n      - run: |\n          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-amd64\n          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-arm64\n          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-armv7\n          docker manifest create --amend public.ecr.aws/falcosecurity/falcosidekick:latest public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 \\\n            public.ecr.aws/falcosecurity/falcosidekick:latest-arm64 public.ecr.aws/falcose",
                      "markdown": "`tions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1\n        with:\n          registry-type: public\n\n      - run: |\n          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-amd64\n          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-arm64\n          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-armv7\n          docker manifest create --amend public.ecr.aws/falcosecurity/falcosidekick:latest public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 \\\n            public.ecr.aws/falcosecurity/falcosidekick:latest-arm64 public.ecr.aws/falcose`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.github/workflows/push-main.yml"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 9,
                  "endLine": 79,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n      - run: |\n          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-amd64\n          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-arm64\n          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-armv7\n          docker manifest create --amend public.ecr.aws/falcosecurity/falcosidekick:latest public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 \\\n            public.ecr.aws/falcosecurity/falcosidekick:latest-arm64 public.ecr.aws/falcosecurity/falcosidekick:latest-armv7\n",
                    "rendered": {
                      "text": "\n      - run: |\n          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-amd64\n          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-arm64\n          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-armv7\n          docker manifest create --amend public.ecr.aws/falcosecurity/falcosidekick:latest public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 \\\n            public.ecr.aws/falcosecurity/falcosidekick:latest-arm64 public.ecr.aws/falcosecurity/falcosidekick:latest-armv7\n",
                      "markdown": "`\n      - run: |\n          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-amd64\n          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-arm64\n          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-armv7\n          docker manifest create --amend public.ecr.aws/falcosecurity/falcosidekick:latest public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 \\\n            public.ecr.aws/falcosecurity/falcosidekick:latest-arm64 public.ecr.aws/falcosecurity/falcosidekick:latest-armv7\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.github/workflows/push-main.yml"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 9,
                  "endLine": 78,
                  "endColumn": 17,
                  "snippet": {
                    "text": "          registry-type: public\n\n      - run: |\n          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-amd64\n          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-arm64\n          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-armv7\n          docker manifest create --amend public.ecr.aws/falcosecurity/falcosidekick:latest public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 \\\n",
                    "rendered": {
                      "text": "          registry-type: public\n\n      - run: |\n          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-amd64\n          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-arm64\n          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-armv7\n          docker manifest create --amend public.ecr.aws/falcosecurity/falcosidekick:latest public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 \\\n",
                      "markdown": "`          registry-type: public\n\n      - run: |\n          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-amd64\n          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-arm64\n          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-armv7\n          docker manifest create --amend public.ecr.aws/falcosecurity/falcosidekick:latest public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.github/workflows/push-main.yml"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 9,
                  "endLine": 62,
                  "endColumn": 17,
                  "snippet": {
                    "text": "          docker push falcosecurity/falcosidekick:latest-armv7\n          docker manifest create --amend falcosecurity/falcosidekick:latest falcosecurity/falcosidekick:latest-amd64 \\\n            falcosecurity/falcosidekick:latest-arm64 falcosecurity/falcosidekick:latest-armv7\n          docker manifest push --purge falcosecurity/falcosidekick:latest\n\n      # Push images to AWS Public ECR\n      - name: Configure AWS credentials\n",
                    "rendered": {
                      "text": "          docker push falcosecurity/falcosidekick:latest-armv7\n          docker manifest create --amend falcosecurity/falcosidekick:latest falcosecurity/falcosidekick:latest-amd64 \\\n            falcosecurity/falcosidekick:latest-arm64 falcosecurity/falcosidekick:latest-armv7\n          docker manifest push --purge falcosecurity/falcosidekick:latest\n\n      # Push images to AWS Public ECR\n      - name: Configure AWS credentials\n",
                      "markdown": "`          docker push falcosecurity/falcosidekick:latest-armv7\n          docker manifest create --amend falcosecurity/falcosidekick:latest falcosecurity/falcosidekick:latest-amd64 \\\n            falcosecurity/falcosidekick:latest-arm64 falcosecurity/falcosidekick:latest-armv7\n          docker manifest push --purge falcosecurity/falcosidekick:latest\n\n      # Push images to AWS Public ECR\n      - name: Configure AWS credentials\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.github/workflows/push-main.yml"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 9,
                  "endLine": 60,
                  "endColumn": 17,
                  "snippet": {
                    "text": "          docker push falcosecurity/falcosidekick:latest-amd64\n          docker push falcosecurity/falcosidekick:latest-arm64\n          docker push falcosecurity/falcosidekick:latest-armv7\n          docker manifest create --amend falcosecurity/falcosidekick:latest falcosecurity/falcosidekick:latest-amd64 \\\n            falcosecurity/falcosidekick:latest-arm64 falcosecurity/falcosidekick:latest-armv7\n          docker manifest push --purge falcosecurity/falcosidekick:latest\n\n",
                    "rendered": {
                      "text": "          docker push falcosecurity/falcosidekick:latest-amd64\n          docker push falcosecurity/falcosidekick:latest-arm64\n          docker push falcosecurity/falcosidekick:latest-armv7\n          docker manifest create --amend falcosecurity/falcosidekick:latest falcosecurity/falcosidekick:latest-amd64 \\\n            falcosecurity/falcosidekick:latest-arm64 falcosecurity/falcosidekick:latest-armv7\n          docker manifest push --purge falcosecurity/falcosidekick:latest\n\n",
                      "markdown": "`          docker push falcosecurity/falcosidekick:latest-amd64\n          docker push falcosecurity/falcosidekick:latest-arm64\n          docker push falcosecurity/falcosidekick:latest-armv7\n          docker manifest create --amend falcosecurity/falcosidekick:latest falcosecurity/falcosidekick:latest-amd64 \\\n            falcosecurity/falcosidekick:latest-arm64 falcosecurity/falcosidekick:latest-armv7\n          docker manifest push --purge falcosecurity/falcosidekick:latest\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.github/workflows/push-main.yml"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 9,
                  "endLine": 59,
                  "endColumn": 17,
                  "snippet": {
                    "text": "        run: |\n          docker push falcosecurity/falcosidekick:latest-amd64\n          docker push falcosecurity/falcosidekick:latest-arm64\n          docker push falcosecurity/falcosidekick:latest-armv7\n          docker manifest create --amend falcosecurity/falcosidekick:latest falcosecurity/falcosidekick:latest-amd64 \\\n            falcosecurity/falcosidekick:latest-arm64 falcosecurity/falcosidekick:latest-armv7\n          docker manifest push --purge falcosecurity/falcosidekick:latest\n",
                    "rendered": {
                      "text": "        run: |\n          docker push falcosecurity/falcosidekick:latest-amd64\n          docker push falcosecurity/falcosidekick:latest-arm64\n          docker push falcosecurity/falcosidekick:latest-armv7\n          docker manifest create --amend falcosecurity/falcosidekick:latest falcosecurity/falcosidekick:latest-amd64 \\\n            falcosecurity/falcosidekick:latest-arm64 falcosecurity/falcosidekick:latest-armv7\n          docker manifest push --purge falcosecurity/falcosidekick:latest\n",
                      "markdown": "`        run: |\n          docker push falcosecurity/falcosidekick:latest-amd64\n          docker push falcosecurity/falcosidekick:latest-arm64\n          docker push falcosecurity/falcosidekick:latest-armv7\n          docker manifest create --amend falcosecurity/falcosidekick:latest falcosecurity/falcosidekick:latest-amd64 \\\n            falcosecurity/falcosidekick:latest-arm64 falcosecurity/falcosidekick:latest-armv7\n          docker manifest push --purge falcosecurity/falcosidekick:latest\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.github/workflows/push-main.yml"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 9,
                  "endLine": 58,
                  "endColumn": 17,
                  "snippet": {
                    "text": "      - name: Push images to Dockerhub\n        run: |\n          docker push falcosecurity/falcosidekick:latest-amd64\n          docker push falcosecurity/falcosidekick:latest-arm64\n          docker push falcosecurity/falcosidekick:latest-armv7\n          docker manifest create --amend falcosecurity/falcosidekick:latest falcosecurity/falcosidekick:latest-amd64 \\\n            falcosecurity/falcosidekick:latest-arm64 falcosecurity/falcosidekick:latest-armv7\n",
                    "rendered": {
                      "text": "      - name: Push images to Dockerhub\n        run: |\n          docker push falcosecurity/falcosidekick:latest-amd64\n          docker push falcosecurity/falcosidekick:latest-arm64\n          docker push falcosecurity/falcosidekick:latest-armv7\n          docker manifest create --amend falcosecurity/falcosidekick:latest falcosecurity/falcosidekick:latest-amd64 \\\n            falcosecurity/falcosidekick:latest-arm64 falcosecurity/falcosidekick:latest-armv7\n",
                      "markdown": "`      - name: Push images to Dockerhub\n        run: |\n          docker push falcosecurity/falcosidekick:latest-amd64\n          docker push falcosecurity/falcosidekick:latest-arm64\n          docker push falcosecurity/falcosidekick:latest-armv7\n          docker manifest create --amend falcosecurity/falcosidekick:latest falcosecurity/falcosidekick:latest-amd64 \\\n            falcosecurity/falcosidekick:latest-arm64 falcosecurity/falcosidekick:latest-armv7\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.github/workflows/push-main.yml"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 9,
                  "endLine": 57,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n      - name: Push images to Dockerhub\n        run: |\n          docker push falcosecurity/falcosidekick:latest-amd64\n          docker push falcosecurity/falcosidekick:latest-arm64\n          docker push falcosecurity/falcosidekick:latest-armv7\n          docker manifest create --amend falcosecurity/falcosidekick:latest falcosecurity/falcosidekick:latest-amd64 \\\n",
                    "rendered": {
                      "text": "\n      - name: Push images to Dockerhub\n        run: |\n          docker push falcosecurity/falcosidekick:latest-amd64\n          docker push falcosecurity/falcosidekick:latest-arm64\n          docker push falcosecurity/falcosidekick:latest-armv7\n          docker manifest create --amend falcosecurity/falcosidekick:latest falcosecurity/falcosidekick:latest-amd64 \\\n",
                      "markdown": "`\n      - name: Push images to Dockerhub\n        run: |\n          docker push falcosecurity/falcosidekick:latest-amd64\n          docker push falcosecurity/falcosidekick:latest-arm64\n          docker push falcosecurity/falcosidekick:latest-armv7\n          docker manifest create --amend falcosecurity/falcosidekick:latest falcosecurity/falcosidekick:latest-amd64 \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.github/workflows/push-main.yml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 22,
                  "endLine": 49,
                  "endColumn": 30,
                  "snippet": {
                    "text": "          GOPATH: /home/runner/go\n\n      # Push images to DockerHUB\n      - name: Login to Docker Hub\n        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0\n        with:\n          username: ${{ secrets.DOCKERHUB_USER }}\n",
                    "rendered": {
                      "text": "          GOPATH: /home/runner/go\n\n      # Push images to DockerHUB\n      - name: Login to Docker Hub\n        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0\n        with:\n          username: ${{ secrets.DOCKERHUB_USER }}\n",
                      "markdown": "`          GOPATH: /home/runner/go\n\n      # Push images to DockerHUB\n      - name: Login to Docker Hub\n        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0\n        with:\n          username: ${{ secrets.DOCKERHUB_USER }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.github/workflows/push-main.yml"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 9,
                  "endLine": 44,
                  "endColumn": 17,
                  "snippet": {
                    "text": "          make goreleaser-snapshot\n          docker images\n          docker run falcosecurity/falcosidekick:latest-amd64 --version\n          docker run public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 --version\n        env:\n          GOPATH: /home/runner/go\n\n",
                    "rendered": {
                      "text": "          make goreleaser-snapshot\n          docker images\n          docker run falcosecurity/falcosidekick:latest-amd64 --version\n          docker run public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 --version\n        env:\n          GOPATH: /home/runner/go\n\n",
                      "markdown": "`          make goreleaser-snapshot\n          docker images\n          docker run falcosecurity/falcosidekick:latest-amd64 --version\n          docker run public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 --version\n        env:\n          GOPATH: /home/runner/go\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.github/workflows/push-main.yml"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 9,
                  "endLine": 43,
                  "endColumn": 17,
                  "snippet": {
                    "text": "        run: |\n          make goreleaser-snapshot\n          docker images\n          docker run falcosecurity/falcosidekick:latest-amd64 --version\n          docker run public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 --version\n        env:\n          GOPATH: /home/runner/go\n",
                    "rendered": {
                      "text": "        run: |\n          make goreleaser-snapshot\n          docker images\n          docker run falcosecurity/falcosidekick:latest-amd64 --version\n          docker run public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 --version\n        env:\n          GOPATH: /home/runner/go\n",
                      "markdown": "`        run: |\n          make goreleaser-snapshot\n          docker images\n          docker run falcosecurity/falcosidekick:latest-amd64 --version\n          docker run public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 --version\n        env:\n          GOPATH: /home/runner/go\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.github/workflows/push-main.yml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 9,
                  "endLine": 42,
                  "endColumn": 17,
                  "snippet": {
                    "text": "      - name: run goreleaser-snapshot\n        run: |\n          make goreleaser-snapshot\n          docker images\n          docker run falcosecurity/falcosidekick:latest-amd64 --version\n          docker run public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 --version\n        env:\n",
                    "rendered": {
                      "text": "      - name: run goreleaser-snapshot\n        run: |\n          make goreleaser-snapshot\n          docker images\n          docker run falcosecurity/falcosidekick:latest-amd64 --version\n          docker run public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 --version\n        env:\n",
                      "markdown": "`      - name: run goreleaser-snapshot\n        run: |\n          make goreleaser-snapshot\n          docker images\n          docker run falcosecurity/falcosidekick:latest-amd64 --version\n          docker run public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 --version\n        env:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.github/workflows/push-main.yml"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 20,
                  "endLine": 28,
                  "endColumn": 28,
                  "snippet": {
                    "text": "      - name: Set up QEMU\n        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1\n\n      - uses: sigstore/cosign-installer@dc72c7d5c4d10cd6bcb8cf6e3fd625a9e5e537da # v3.7.0\n",
                    "rendered": {
                      "text": "      - name: Set up QEMU\n        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1\n\n      - uses: sigstore/cosign-installer@dc72c7d5c4d10cd6bcb8cf6e3fd625a9e5e537da # v3.7.0\n",
                      "markdown": "`      - name: Set up QEMU\n        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1\n\n      - uses: sigstore/cosign-installer@dc72c7d5c4d10cd6bcb8cf6e3fd625a9e5e537da # v3.7.0\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/internal/pkg/batcher/batcher_test.go"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 3,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tmx.Lock()\n\tdefer mx.Unlock()\n\tdiff := cmp.Diff(wantBatches, gotBatches)\n\tif diff != \"\" {\n\t\tt.Fatal(diff)\n\t}\n\n",
                    "rendered": {
                      "text": "\tmx.Lock()\n\tdefer mx.Unlock()\n\tdiff := cmp.Diff(wantBatches, gotBatches)\n\tif diff != \"\" {\n\t\tt.Fatal(diff)\n\t}\n\n",
                      "markdown": "`\tmx.Lock()\n\tdefer mx.Unlock()\n\tdiff := cmp.Diff(wantBatches, gotBatches)\n\tif diff != \"\" {\n\t\tt.Fatal(diff)\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/internal/pkg/batcher/batcher_test.go"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n\tmx.Lock()\n\tdefer mx.Unlock()\n\tdiff := cmp.Diff(wantBatches, gotBatches)\n\tif diff != \"\" {\n\t\tt.Fatal(diff)\n\t}\n",
                    "rendered": {
                      "text": "\n\tmx.Lock()\n\tdefer mx.Unlock()\n\tdiff := cmp.Diff(wantBatches, gotBatches)\n\tif diff != \"\" {\n\t\tt.Fatal(diff)\n\t}\n",
                      "markdown": "`\n\tmx.Lock()\n\tdefer mx.Unlock()\n\tdiff := cmp.Diff(wantBatches, gotBatches)\n\tif diff != \"\" {\n\t\tt.Fatal(diff)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/hack/go_install.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\nset -o errexit\nset -o nounset\nset -o pipefail\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\nset -o errexit\nset -o nounset\nset -o pipefail\n",
                      "markdown": "`#!/usr/bin/env bash\n\nset -o errexit\nset -o nounset\nset -o pipefail\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/hack/go_install.sh"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 34,
                  "endLine": 42,
                  "endColumn": 3,
                  "snippet": {
                    "text": "go mod init fake/mod\n\n# install the golang module specified as the first argument\ngo install -tags tools \"${1}@${3}\"\nmv \"${GOBIN}/${2}\" \"${GOBIN}/${2}-${3}\"\nln -sf \"${GOBIN}/${2}-${3}\" \"${GOBIN}/${2}\"\n",
                    "rendered": {
                      "text": "go mod init fake/mod\n\n# install the golang module specified as the first argument\ngo install -tags tools \"${1}@${3}\"\nmv \"${GOBIN}/${2}\" \"${GOBIN}/${2}-${3}\"\nln -sf \"${GOBIN}/${2}-${3}\" \"${GOBIN}/${2}\"\n",
                      "markdown": "`go mod init fake/mod\n\n# install the golang module specified as the first argument\ngo install -tags tools \"${1}@${3}\"\nmv \"${GOBIN}/${2}\" \"${GOBIN}/${2}-${3}\"\nln -sf \"${GOBIN}/${2}-${3}\" \"${GOBIN}/${2}\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/hack/go_install.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\nset -o errexit\nset -o nounset\nset -o pipefail\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\nset -o errexit\nset -o nounset\nset -o pipefail\n",
                      "markdown": "`#!/usr/bin/env bash\n\nset -o errexit\nset -o nounset\nset -o pipefail\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/smtp.go"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 93,
                  "endLine": 111,
                  "endColumn": 101,
                  "snippet": {
                    "text": "\tvar authClient sasl.Client\n\tswitch strings.ToLower(c.Config.SMTP.AuthMechanism) {\n\tcase Plain:\n\t\tauthClient = sasl.NewPlainClient(c.Config.SMTP.Identity, c.Config.SMTP.User, c.Config.SMTP.Password)\n\tcase OAuthBearer:\n\t\thost, portString, _ := net.SplitHostPort(c.Config.SMTP.HostPort)\n\t\tport, err := strconv.Atoi(portString)\n",
                    "rendered": {
                      "text": "\tvar authClient sasl.Client\n\tswitch strings.ToLower(c.Config.SMTP.AuthMechanism) {\n\tcase Plain:\n\t\tauthClient = sasl.NewPlainClient(c.Config.SMTP.Identity, c.Config.SMTP.User, c.Config.SMTP.Password)\n\tcase OAuthBearer:\n\t\thost, portString, _ := net.SplitHostPort(c.Config.SMTP.HostPort)\n\t\tport, err := strconv.Atoi(portString)\n",
                      "markdown": "`\tvar authClient sasl.Client\n\tswitch strings.ToLower(c.Config.SMTP.AuthMechanism) {\n\tcase Plain:\n\t\tauthClient = sasl.NewPlainClient(c.Config.SMTP.Identity, c.Config.SMTP.User, c.Config.SMTP.Password)\n\tcase OAuthBearer:\n\t\thost, portString, _ := net.SplitHostPort(c.Config.SMTP.HostPort)\n\t\tport, err := strconv.Atoi(portString)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/smtp.go"
                },
                "region": {
                  "startLine": 35,
                  "endLine": 35,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n// NewSMTPClient returns a new output.Client for accessing a SMTP server.\nfunc NewSMTPClient(config *types.Configuration, stats *types.Statistics, promStats *types.PromStatistics, statsdClient, dogstatsdClient *statsd.Client) (*Client, error) {\n\treg := regexp.MustCompile(`.*:[0-9]+`)\n\tif !reg.MatchString(config.SMTP.HostPort) {\n\t\tlog.Printf(\"[ERROR] : SMTP - Bad Host:Port\\n\")\n\t\treturn nil, ErrClientCreation\n",
                    "rendered": {
                      "text": "\n// NewSMTPClient returns a new output.Client for accessing a SMTP server.\nfunc NewSMTPClient(config *types.Configuration, stats *types.Statistics, promStats *types.PromStatistics, statsdClient, dogstatsdClient *statsd.Client) (*Client, error) {\n\treg := regexp.MustCompile(`.*:[0-9]+`)\n\tif !reg.MatchString(config.SMTP.HostPort) {\n\t\tlog.Printf(\"[ERROR] : SMTP - Bad Host:Port\\n\")\n\t\treturn nil, ErrClientCreation\n",
                      "markdown": "`\n// NewSMTPClient returns a new output.Client for accessing a SMTP server.\nfunc NewSMTPClient(config *types.Configuration, stats *types.Statistics, promStats *types.PromStatistics, statsdClient, dogstatsdClient *statsd.Client) (*Client, error) {\n\treg := regexp.MustCompile(`.*:[0-9]+`)\n\tif !reg.MatchString(config.SMTP.HostPort) {\n\t\tlog.Printf(\"[ERROR] : SMTP - Bad Host:Port\\n\")\n\t\treturn nil, ErrClientCreation\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/smtp.go"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 19,
                  "endLine": 174,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\tc.Stats.SMTP.Add(\"total\", 1)\n\terr = smtpClient.SendMail(c.Config.SMTP.From, to, strings.NewReader(body))\n\tif err != nil {\n\t\tc.ReportErr(\"Send Mail failure\", err)\n\t\treturn\n\t}\n\n",
                    "rendered": {
                      "text": "\tc.Stats.SMTP.Add(\"total\", 1)\n\terr = smtpClient.SendMail(c.Config.SMTP.From, to, strings.NewReader(body))\n\tif err != nil {\n\t\tc.ReportErr(\"Send Mail failure\", err)\n\t\treturn\n\t}\n\n",
                      "markdown": "`\tc.Stats.SMTP.Add(\"total\", 1)\n\terr = smtpClient.SendMail(c.Config.SMTP.From, to, strings.NewReader(body))\n\tif err != nil {\n\t\tc.ReportErr(\"Send Mail failure\", err)\n\t\treturn\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/slack_test.go"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 14,
                  "endLine": 43,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\t\t\t\t\tShort: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tTitle: \"hostname\",\n\t\t\t\t\t\tValue: \"test-host\",\n\t\t\t\t\t\tShort: true,\n\t\t\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\t\t\t\tShort: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tTitle: \"hostname\",\n\t\t\t\t\t\tValue: \"test-host\",\n\t\t\t\t\t\tShort: true,\n\t\t\t\t\t},\n",
                      "markdown": "`\t\t\t\t\t\tShort: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tTitle: \"hostname\",\n\t\t\t\t\t\tValue: \"test-host\",\n\t\t\t\t\t\tShort: true,\n\t\t\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/webhook.go"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 9,
                  "endLine": 26,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\tif strings.ToUpper(c.Config.Webhook.Method) == HttpPut {\n\t\terr = c.Put(falcopayload, optfn)\n\t} else {\n\t\terr = c.Post(falcopayload, optfn)\n\t}\n\n\tif err != nil {\n",
                    "rendered": {
                      "text": "\tif strings.ToUpper(c.Config.Webhook.Method) == HttpPut {\n\t\terr = c.Put(falcopayload, optfn)\n\t} else {\n\t\terr = c.Post(falcopayload, optfn)\n\t}\n\n\tif err != nil {\n",
                      "markdown": "`\tif strings.ToUpper(c.Config.Webhook.Method) == HttpPut {\n\t\terr = c.Put(falcopayload, optfn)\n\t} else {\n\t\terr = c.Post(falcopayload, optfn)\n\t}\n\n\tif err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/aws_cloudwatch_logs.md"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 3,
                  "endLine": 32,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/aws_cloudwatch_logs.md"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 40,
                  "endLine": 18,
                  "endColumn": 45,
                  "snippet": {
                    "text": ")\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n    - [CloudWatch Logs Sample IAM Policy](#cloudwatch-logs-sample-iam-policy)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                              | Env var                              | Default value    | Description                                                                                                                         |\n| ------------------------------------ | ------------------------------------ | ---------------- | -------------",
                    "rendered": {
                      "text": ")\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n    - [CloudWatch Logs Sample IAM Policy](#cloudwatch-logs-sample-iam-policy)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                              | Env var                              | Default value    | Description                                                                                                                         |\n| ------------------------------------ | ------------------------------------ | ---------------- | -------------",
                      "markdown": "`)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n    - [CloudWatch Logs Sample IAM Policy](#cloudwatch-logs-sample-iam-policy)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                              | Env var                              | Default value    | Description                                                                                                                         |\n| ------------------------------------ | ------------------------------------ | ---------------- | -------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/mattermost.md"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 177,
                  "endLine": 62,
                  "endColumn": 185,
                  "snippet": {
                    "text": "                                                                                                                         |\n| `{{ index .OutputFields \\\"<field name>\\\" }}` | A map of additional optional fields emitted depending on the event. These may not be present for every event, in which case they expand to the string `<no value>` |\n\nGo templates also support some basic methods for text manipulation which can be used to improve the clarity of alerts - see the documentation for details.\n\n## Screenshots\n\n![mattermost example](images/mattermost.png)",
                    "rendered": {
                      "text": "                                                                                                                         |\n| `{{ index .OutputFields \\\"<field name>\\\" }}` | A map of additional optional fields emitted depending on the event. These may not be present for every event, in which case they expand to the string `<no value>` |\n\nGo templates also support some basic methods for text manipulation which can be used to improve the clarity of alerts - see the documentation for details.\n\n## Screenshots\n\n![mattermost example](images/mattermost.png)",
                      "markdown": "`                                                                                                                         |\n| `{{ index .OutputFields \\\"<field name>\\\" }}` | A map of additional optional fields emitted depending on the event. These may not be present for every event, in which case they expand to the string `<no value>` |\n\nGo templates also support some basic methods for text manipulation which can be used to improve the clarity of alerts - see the documentation for details.\n\n## Screenshots\n\n![mattermost example](images/mattermost.png)`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/mattermost.md"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 177,
                  "endLine": 62,
                  "endColumn": 185,
                  "snippet": {
                    "text": "                                                                                                                         |\n| `{{ index .OutputFields \\\"<field name>\\\" }}` | A map of additional optional fields emitted depending on the event. These may not be present for every event, in which case they expand to the string `<no value>` |\n\nGo templates also support some basic methods for text manipulation which can be used to improve the clarity of alerts - see the documentation for details.\n\n## Screenshots\n\n![mattermost example](images/mattermost.png)",
                    "rendered": {
                      "text": "                                                                                                                         |\n| `{{ index .OutputFields \\\"<field name>\\\" }}` | A map of additional optional fields emitted depending on the event. These may not be present for every event, in which case they expand to the string `<no value>` |\n\nGo templates also support some basic methods for text manipulation which can be used to improve the clarity of alerts - see the documentation for details.\n\n## Screenshots\n\n![mattermost example](images/mattermost.png)",
                      "markdown": "`                                                                                                                         |\n| `{{ index .OutputFields \\\"<field name>\\\" }}` | A map of additional optional fields emitted depending on the event. These may not be present for every event, in which case they expand to the string `<no value>` |\n\nGo templates also support some basic methods for text manipulation which can be used to improve the clarity of alerts - see the documentation for details.\n\n## Screenshots\n\n![mattermost example](images/mattermost.png)`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/mattermost.md"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 3,
                  "endLine": 33,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/mattermost.md"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 32,
                  "endLine": 20,
                  "endColumn": 37,
                  "snippet": {
                    "text": " [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n    - [Message Formatting](#message-formatting)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n\n| Setting                      | Env var                      | Default value                                                                                       | Description                                                                                                                                                                ",
                    "rendered": {
                      "text": " [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n    - [Message Formatting](#message-formatting)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n\n| Setting                      | Env var                      | Default value                                                                                       | Description                                                                                                                                                                ",
                      "markdown": "` [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n    - [Message Formatting](#message-formatting)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n\n| Setting                      | Env var                      | Default value                                                                                       | Description                                                                                                                                                                `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/nats.md"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 3,
                  "endLine": 25,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `nats.minimumpriority` | `NATS_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `nats.minimumpriority` | `NATS_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `nats.minimumpriority` | `NATS_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/nats.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 26,
                  "endLine": 17,
                  "endColumn": 31,
                  "snippet": {
                    "text": "ps://nats.io/\n\n## Table of content\n\n- [NATS](#nats)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                | Env var                | Default value    | Description                                                                                                                         |\n| ---------------------- | ---------------------- | ---------------- | -------------------------------------------------------",
                    "rendered": {
                      "text": "ps://nats.io/\n\n## Table of content\n\n- [NATS](#nats)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                | Env var                | Default value    | Description                                                                                                                         |\n| ---------------------- | ---------------------- | ---------------- | -------------------------------------------------------",
                      "markdown": "`ps://nats.io/\n\n## Table of content\n\n- [NATS](#nats)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                | Env var                | Default value    | Description                                                                                                                         |\n| ---------------------- | ---------------------- | ---------------- | -------------------------------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/prometheus.md"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 3,
                  "endLine": 22,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `prometheus.extralabels` | `PROMETHEUS_EXTRALABELS` |               | Comma separated list of fields to use as labels additionally to rule, source, priority, tags and custom_fields |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `prometheus.extralabels` | `PROMETHEUS_EXTRALABELS` |               | Comma separated list of fields to use as labels additionally to rule, source, priority, tags and custom_fields |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `prometheus.extralabels` | `PROMETHEUS_EXTRALABELS` |               | Comma separated list of fields to use as labels additionally to rule, source, priority, tags and custom_fields |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/prometheus.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 28,
                  "endLine": 17,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n## Configuration\n\n| Setting                  | Env var                  | Default value | Description                                                                                                    |\n| ------------------------ | ------------------------ | ------------- | -------------------------------------------------------------------------------------------------------------- |\n| `prometheus.extralabels` | `PROMETHEUS_EXTRALABELS` |               | Comma separated list of fields to use as labels additionally to rule, source, priority, tags and custom_fields |\n\n",
                    "rendered": {
                      "text": "\n## Configuration\n\n| Setting                  | Env var                  | Default value | Description                                                                                                    |\n| ------------------------ | ------------------------ | ------------- | -------------------------------------------------------------------------------------------------------------- |\n| `prometheus.extralabels` | `PROMETHEUS_EXTRALABELS` |               | Comma separated list of fields to use as labels additionally to rule, source, priority, tags and custom_fields |\n\n",
                      "markdown": "`\n## Configuration\n\n| Setting                  | Env var                  | Default value | Description                                                                                                    |\n| ------------------------ | ------------------------ | ------------- | -------------------------------------------------------------------------------------------------------------- |\n| `prometheus.extralabels` | `PROMETHEUS_EXTRALABELS` |               | Comma separated list of fields to use as labels additionally to rule, source, priority, tags and custom_fields |\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/kafka.md"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 28,
                  "endLine": 46,
                  "endColumn": 36,
                  "snippet": {
                    "text": "(default: false)\n  # sasl: \"\" # SASL authentication mechanism, if empty, no authentication (PLAIN|SCRAM_SHA256|SCRAM_SHA512)\n  # tls: false # Use TLS for the connections (default: false)\n  # username: \"\" # use this username to authenticate to Kafka via SASL (default: \"\")\n  # password: \"\" # use this password to authenticate to Kafka via SASL (default: \"\")\n  # async: false # produce messages without blocking (default: false)\n  # requiredacks: NONE # number of acknowledges from partition replicas required before receiving (default: \"NONE\")\n  # compression: \"\" # enable message compression using this algor",
                    "rendered": {
                      "text": "(default: false)\n  # sasl: \"\" # SASL authentication mechanism, if empty, no authentication (PLAIN|SCRAM_SHA256|SCRAM_SHA512)\n  # tls: false # Use TLS for the connections (default: false)\n  # username: \"\" # use this username to authenticate to Kafka via SASL (default: \"\")\n  # password: \"\" # use this password to authenticate to Kafka via SASL (default: \"\")\n  # async: false # produce messages without blocking (default: false)\n  # requiredacks: NONE # number of acknowledges from partition replicas required before receiving (default: \"NONE\")\n  # compression: \"\" # enable message compression using this algor",
                      "markdown": "`(default: false)\n  # sasl: \"\" # SASL authentication mechanism, if empty, no authentication (PLAIN|SCRAM_SHA256|SCRAM_SHA512)\n  # tls: false # Use TLS for the connections (default: false)\n  # username: \"\" # use this username to authenticate to Kafka via SASL (default: \"\")\n  # password: \"\" # use this password to authenticate to Kafka via SASL (default: \"\")\n  # async: false # produce messages without blocking (default: false)\n  # requiredacks: NONE # number of acknowledges from partition replicas required before receiving (default: \"NONE\")\n  # compression: \"\" # enable message compression using this algor`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/kafka.md"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 4,
                  "endLine": 46,
                  "endColumn": 12,
                  "snippet": {
                    "text": "pic if it doesn't exist (default: false)\n  # sasl: \"\" # SASL authentication mechanism, if empty, no authentication (PLAIN|SCRAM_SHA256|SCRAM_SHA512)\n  # tls: false # Use TLS for the connections (default: false)\n  # username: \"\" # use this username to authenticate to Kafka via SASL (default: \"\")\n  # password: \"\" # use this password to authenticate to Kafka via SASL (default: \"\")\n  # async: false # produce messages without blocking (default: false)\n  # requiredacks: NONE # number of acknowledges from partition replicas required before receiving (default: \"NONE\")\n  # compression: \"\" # enable message comp",
                    "rendered": {
                      "text": "pic if it doesn't exist (default: false)\n  # sasl: \"\" # SASL authentication mechanism, if empty, no authentication (PLAIN|SCRAM_SHA256|SCRAM_SHA512)\n  # tls: false # Use TLS for the connections (default: false)\n  # username: \"\" # use this username to authenticate to Kafka via SASL (default: \"\")\n  # password: \"\" # use this password to authenticate to Kafka via SASL (default: \"\")\n  # async: false # produce messages without blocking (default: false)\n  # requiredacks: NONE # number of acknowledges from partition replicas required before receiving (default: \"NONE\")\n  # compression: \"\" # enable message comp",
                      "markdown": "`pic if it doesn't exist (default: false)\n  # sasl: \"\" # SASL authentication mechanism, if empty, no authentication (PLAIN|SCRAM_SHA256|SCRAM_SHA512)\n  # tls: false # Use TLS for the connections (default: false)\n  # username: \"\" # use this username to authenticate to Kafka via SASL (default: \"\")\n  # password: \"\" # use this password to authenticate to Kafka via SASL (default: \"\")\n  # async: false # produce messages without blocking (default: false)\n  # requiredacks: NONE # number of acknowledges from partition replicas required before receiving (default: \"NONE\")\n  # compression: \"\" # enable message comp`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/kafka.md"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 82,
                  "endLine": 25,
                  "endColumn": 90,
                  "snippet": {
                    "text": "o Kafka via SASL                                                                                                                                                                                                        |\n| `kafka.password`        | `KAFKA_PASSWORD`        |                  | Use this password to authenticate to Kafka via SASL                                                                                                                                                                                                        |\n| `kafka.async`           | `KAFKA_ASYNC`           | `false`   ",
                    "rendered": {
                      "text": "o Kafka via SASL                                                                                                                                                                                                        |\n| `kafka.password`        | `KAFKA_PASSWORD`        |                  | Use this password to authenticate to Kafka via SASL                                                                                                                                                                                                        |\n| `kafka.async`           | `KAFKA_ASYNC`           | `false`   ",
                      "markdown": "`o Kafka via SASL                                                                                                                                                                                                        |\n| `kafka.password`        | `KAFKA_PASSWORD`        |                  | Use this password to authenticate to Kafka via SASL                                                                                                                                                                                                        |\n| `kafka.async`           | `KAFKA_ASYNC`           | `false`   `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/kafka.md"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 35,
                  "endLine": 25,
                  "endColumn": 43,
                  "snippet": {
                    "text": "          | Use this username to authenticate to Kafka via SASL                                                                                                                                                                                                        |\n| `kafka.password`        | `KAFKA_PASSWORD`        |                  | Use this password to authenticate to Kafka via SASL                                                                                                                                                                                                        |\n| `kafka.async`  ",
                    "rendered": {
                      "text": "          | Use this username to authenticate to Kafka via SASL                                                                                                                                                                                                        |\n| `kafka.password`        | `KAFKA_PASSWORD`        |                  | Use this password to authenticate to Kafka via SASL                                                                                                                                                                                                        |\n| `kafka.async`  ",
                      "markdown": "`          | Use this username to authenticate to Kafka via SASL                                                                                                                                                                                                        |\n| `kafka.password`        | `KAFKA_PASSWORD`        |                  | Use this password to authenticate to Kafka via SASL                                                                                                                                                                                                        |\n| `kafka.async`  `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/kafka.md"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 9,
                  "endLine": 25,
                  "endColumn": 17,
                  "snippet": {
                    "text": "USERNAME`        |                  | Use this username to authenticate to Kafka via SASL                                                                                                                                                                                                        |\n| `kafka.password`        | `KAFKA_PASSWORD`        |                  | Use this password to authenticate to Kafka via SASL                                                                                                                                                                                                 ",
                    "rendered": {
                      "text": "USERNAME`        |                  | Use this username to authenticate to Kafka via SASL                                                                                                                                                                                                        |\n| `kafka.password`        | `KAFKA_PASSWORD`        |                  | Use this password to authenticate to Kafka via SASL                                                                                                                                                                                                 ",
                      "markdown": "`USERNAME`        |                  | Use this username to authenticate to Kafka via SASL                                                                                                                                                                                                        |\n| `kafka.password`        | `KAFKA_PASSWORD`        |                  | Use this password to authenticate to Kafka via SASL                                                                                                                                                                                                 `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/kafka.md"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 3,
                  "endLine": 34,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `kafka.minimumpriority` | `KAFKA_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"`                                                                                                                        |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `kafka.minimumpriority` | `KAFKA_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"`                                                                                                                        |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `kafka.minimumpriority` | `KAFKA_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"`                                                                                                                        |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/kafka.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 27,
                  "endLine": 17,
                  "endColumn": 32,
                  "snippet": {
                    "text": "pache.org/\n\n## Table of content\n\n- [Kafka](#kafka)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                 | Env var                 | Default value    | Description                                                                                                                                                                                                                                                |\n| ----",
                    "rendered": {
                      "text": "pache.org/\n\n## Table of content\n\n- [Kafka](#kafka)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                 | Env var                 | Default value    | Description                                                                                                                                                                                                                                                |\n| ----",
                      "markdown": "`pache.org/\n\n## Table of content\n\n- [Kafka](#kafka)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                 | Env var                 | Default value    | Description                                                                                                                                                                                                                                                |\n| ----`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/aws_kinesis.md"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 3,
                  "endLine": 29,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `aws.kinesis.minimumpriority` | `AWS_KINESIS_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `aws.kinesis.minimumpriority` | `AWS_KINESIS_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `aws.kinesis.minimumpriority` | `AWS_KINESIS_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/aws_kinesis.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 33,
                  "endLine": 17,
                  "endColumn": 38,
                  "snippet": {
                    "text": "le of content\n\n- [AWS Kinesis](#aws-kinesis)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                       | Env var                       | Default value    | Description                                                                                                                         |\n| ----------------------------- | ----------------------------- | ---------------- | ----------------------------------",
                    "rendered": {
                      "text": "le of content\n\n- [AWS Kinesis](#aws-kinesis)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                       | Env var                       | Default value    | Description                                                                                                                         |\n| ----------------------------- | ----------------------------- | ---------------- | ----------------------------------",
                      "markdown": "`le of content\n\n- [AWS Kinesis](#aws-kinesis)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                       | Env var                       | Default value    | Description                                                                                                                         |\n| ----------------------------- | ----------------------------- | ---------------- | ----------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/kafkarest.md"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 3,
                  "endLine": 26,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `kafkarest.minimumpriority` | `KAFKAREST_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `kafkarest.minimumpriority` | `KAFKAREST_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `kafkarest.minimumpriority` | `KAFKAREST_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/kafkarest.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 31,
                  "endLine": 17,
                  "endColumn": 36,
                  "snippet": {
                    "text": " Table of content\n\n- [Kafka Rest](#kafka-rest)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                     | Env var                     | Default value    | Description                                                                                                                         |\n| --------------------------- | --------------------------- | ---------------- | ----------------------------------------",
                    "rendered": {
                      "text": " Table of content\n\n- [Kafka Rest](#kafka-rest)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                     | Env var                     | Default value    | Description                                                                                                                         |\n| --------------------------- | --------------------------- | ---------------- | ----------------------------------------",
                      "markdown": "` Table of content\n\n- [Kafka Rest](#kafka-rest)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                     | Env var                     | Default value    | Description                                                                                                                         |\n| --------------------------- | --------------------------- | ---------------- | ----------------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/alertmanager.md"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 73,
                  "endLine": 42,
                  "endColumn": 79,
                  "snippet": {
                    "text": "ys be checked)\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # endpoint: \"\" # alertmanager endpoint for posting alerts: \"/api/v1/alerts\" or \"/api/v2/alerts\" (default: \"/api/v1/alerts\")\n  # expiresafter: \"\" if set to a non-zero value, alert expires after that time in seconds (default: 0)\n  # extralabels: \"\" # comma separated list of labels composed of a ':' separated name and value that is added to the Alerts. Example: my_label_1:my_value_1, my_label_1:my_value_2\n  # extraannotations: \"\" # comma separated list of annotations composed of a ':' separated name a",
                    "rendered": {
                      "text": "ys be checked)\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # endpoint: \"\" # alertmanager endpoint for posting alerts: \"/api/v1/alerts\" or \"/api/v2/alerts\" (default: \"/api/v1/alerts\")\n  # expiresafter: \"\" if set to a non-zero value, alert expires after that time in seconds (default: 0)\n  # extralabels: \"\" # comma separated list of labels composed of a ':' separated name and value that is added to the Alerts. Example: my_label_1:my_value_1, my_label_1:my_value_2\n  # extraannotations: \"\" # comma separated list of annotations composed of a ':' separated name a",
                      "markdown": "`ys be checked)\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # endpoint: \"\" # alertmanager endpoint for posting alerts: \"/api/v1/alerts\" or \"/api/v2/alerts\" (default: \"/api/v1/alerts\")\n  # expiresafter: \"\" if set to a non-zero value, alert expires after that time in seconds (default: 0)\n  # extralabels: \"\" # comma separated list of labels composed of a ':' separated name and value that is added to the Alerts. Example: my_label_1:my_value_1, my_label_1:my_value_2\n  # extraannotations: \"\" # comma separated list of annotations composed of a ':' separated name a`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/alertmanager.md"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 3,
                  "endLine": 32,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `alertmanager.customheaders`            | `ALERTMANAGER_CUSTOMHEADERS`            |                                                                      | Custom headers for the POST request                                                                                                                                                                                                      |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `alertmanager.customheaders`            | `ALERTMANAGER_CUSTOMHEADERS`            |                                                                      | Custom headers for the POST request                                                                                                                                                                                                      |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `alertmanager.customheaders`            | `ALERTMANAGER_CUSTOMHEADERS`            |                                                                      | Custom headers for the POST request                                                                                                                                                                                                      |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/alertmanager.md"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 209,
                  "endLine": 22,
                  "endColumn": 215,
                  "snippet": {
                    "text": "                                                                                         |\n| `alertmanager.expiresafter`             | `ALERTMANAGER_EXPIRESAFTER`             | `0`                                                                  | If set to a non-zero value, alert expires after that time in seconds                                                                                                                                                                     |\n| `alertmanager.extralabels`              | `ALERTMANAGER_EXTRALABELS`              |                                      ",
                    "rendered": {
                      "text": "                                                                                         |\n| `alertmanager.expiresafter`             | `ALERTMANAGER_EXPIRESAFTER`             | `0`                                                                  | If set to a non-zero value, alert expires after that time in seconds                                                                                                                                                                     |\n| `alertmanager.extralabels`              | `ALERTMANAGER_EXTRALABELS`              |                                      ",
                      "markdown": "`                                                                                         |\n| `alertmanager.expiresafter`             | `ALERTMANAGER_EXPIRESAFTER`             | `0`                                                                  | If set to a non-zero value, alert expires after that time in seconds                                                                                                                                                                     |\n| `alertmanager.extralabels`              | `ALERTMANAGER_EXTRALABELS`              |                                      `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/alertmanager.md"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 43,
                  "endLine": 16,
                  "endColumn": 48,
                  "snippet": {
                    "text": "metheus/alertmanager\n\n## Table of content\n\n- [AlertManager](#alertmanager)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                                 | Env var                                 | Default value                                                        | Description                                                                                                                                                                                    ",
                    "rendered": {
                      "text": "metheus/alertmanager\n\n## Table of content\n\n- [AlertManager](#alertmanager)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                                 | Env var                                 | Default value                                                        | Description                                                                                                                                                                                    ",
                      "markdown": "`metheus/alertmanager\n\n## Table of content\n\n- [AlertManager](#alertmanager)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                                 | Env var                                 | Default value                                                        | Description                                                                                                                                                                                    `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/rocketchat.md"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 177,
                  "endLine": 61,
                  "endColumn": 185,
                  "snippet": {
                    "text": "                                                                                                                         |\n| `{{ index .OutputFields \\\"<field name>\\\" }}` | A map of additional optional fields emitted depending on the event. These may not be present for every event, in which case they expand to the string `<no value>` |\n\nGo templates also support some basic methods for text manipulation which can be used to improve the clarity of alerts - see the documentation for details.",
                    "rendered": {
                      "text": "                                                                                                                         |\n| `{{ index .OutputFields \\\"<field name>\\\" }}` | A map of additional optional fields emitted depending on the event. These may not be present for every event, in which case they expand to the string `<no value>` |\n\nGo templates also support some basic methods for text manipulation which can be used to improve the clarity of alerts - see the documentation for details.",
                      "markdown": "`                                                                                                                         |\n| `{{ index .OutputFields \\\"<field name>\\\" }}` | A map of additional optional fields emitted depending on the event. These may not be present for every event, in which case they expand to the string `<no value>` |\n\nGo templates also support some basic methods for text manipulation which can be used to improve the clarity of alerts - see the documentation for details.`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/rocketchat.md"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 177,
                  "endLine": 61,
                  "endColumn": 185,
                  "snippet": {
                    "text": "                                                                                                                         |\n| `{{ index .OutputFields \\\"<field name>\\\" }}` | A map of additional optional fields emitted depending on the event. These may not be present for every event, in which case they expand to the string `<no value>` |\n\nGo templates also support some basic methods for text manipulation which can be used to improve the clarity of alerts - see the documentation for details.",
                    "rendered": {
                      "text": "                                                                                                                         |\n| `{{ index .OutputFields \\\"<field name>\\\" }}` | A map of additional optional fields emitted depending on the event. These may not be present for every event, in which case they expand to the string `<no value>` |\n\nGo templates also support some basic methods for text manipulation which can be used to improve the clarity of alerts - see the documentation for details.",
                      "markdown": "`                                                                                                                         |\n| `{{ index .OutputFields \\\"<field name>\\\" }}` | A map of additional optional fields emitted depending on the event. These may not be present for every event, in which case they expand to the string `<no value>` |\n\nGo templates also support some basic methods for text manipulation which can be used to improve the clarity of alerts - see the documentation for details.`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/rocketchat.md"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 3,
                  "endLine": 32,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/rocketchat.md"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 32,
                  "endLine": 19,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\n- [Rocketchat](#rocketchat)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n    - [Message Formatting](#message-formatting)\n\n## Configuration\n\n\n| Setting                      | Env var                      | Default value                                                                                       | Description                                                                                                                                                                ",
                    "rendered": {
                      "text": "\n- [Rocketchat](#rocketchat)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n    - [Message Formatting](#message-formatting)\n\n## Configuration\n\n\n| Setting                      | Env var                      | Default value                                                                                       | Description                                                                                                                                                                ",
                      "markdown": "`\n- [Rocketchat](#rocketchat)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n    - [Message Formatting](#message-formatting)\n\n## Configuration\n\n\n| Setting                      | Env var                      | Default value                                                                                       | Description                                                                                                                                                                `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/grafana_oncall.md"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 3,
                  "endLine": 26,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `grafanaoncall.minimumpriority` | `GRAFANAONCALL_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `grafanaoncall.minimumpriority` | `GRAFANAONCALL_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `grafanaoncall.minimumpriority` | `GRAFANAONCALL_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/grafana_oncall.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 35,
                  "endLine": 17,
                  "endColumn": 40,
                  "snippet": {
                    "text": "ntent\n\n- [Grafana OnCall](#grafana-oncall)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                         | Env var                         | Default value    | Description                                                                                                                         |\n| ------------------------------- | ------------------------------- | ---------------- | ----------------------------",
                    "rendered": {
                      "text": "ntent\n\n- [Grafana OnCall](#grafana-oncall)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                         | Env var                         | Default value    | Description                                                                                                                         |\n| ------------------------------- | ------------------------------- | ---------------- | ----------------------------",
                      "markdown": "`ntent\n\n- [Grafana OnCall](#grafana-oncall)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                         | Env var                         | Default value    | Description                                                                                                                         |\n| ------------------------------- | ------------------------------- | ---------------- | ----------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/gcp_cloud_functions.md"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 24,
                  "endLine": 30,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n```yaml\ngcp:\n  credentials: \"\" # The base64-encoded JSON key file for the GCP service account\n  cloudfunctions:\n    name: \"\" # The name of the Cloud Function, if not empty, GCP Cloud Functions is enabled\n    # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n",
                    "rendered": {
                      "text": "\n```yaml\ngcp:\n  credentials: \"\" # The base64-encoded JSON key file for the GCP service account\n  cloudfunctions:\n    name: \"\" # The name of the Cloud Function, if not empty, GCP Cloud Functions is enabled\n    # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n",
                      "markdown": "`\n```yaml\ngcp:\n  credentials: \"\" # The base64-encoded JSON key file for the GCP service account\n  cloudfunctions:\n    name: \"\" # The name of the Cloud Function, if not empty, GCP Cloud Functions is enabled\n    # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/gcp_cloud_functions.md"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 103,
                  "endLine": 19,
                  "endColumn": 109,
                  "snippet": {
                    "text": "-- | ------------------------------------ | ---------------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| `gcp.credentials`                    | `GCP_CREDENTIALS`                    |                  | The base64-encoded JSON key file for the GCP service account                                                                        |\n| `gcp.cloudfunctions.name`            | `GCP_CLOUDFUNCTIONS_NAME`            |                  | The name of the Cloud Function, if not empty, Google Cloud Functions is **ena",
                    "rendered": {
                      "text": "-- | ------------------------------------ | ---------------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| `gcp.credentials`                    | `GCP_CREDENTIALS`                    |                  | The base64-encoded JSON key file for the GCP service account                                                                        |\n| `gcp.cloudfunctions.name`            | `GCP_CLOUDFUNCTIONS_NAME`            |                  | The name of the Cloud Function, if not empty, Google Cloud Functions is **ena",
                      "markdown": "`-- | ------------------------------------ | ---------------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| `gcp.credentials`                    | `GCP_CREDENTIALS`                    |                  | The base64-encoded JSON key file for the GCP service account                                                                        |\n| `gcp.cloudfunctions.name`            | `GCP_CLOUDFUNCTIONS_NAME`            |                  | The name of the Cloud Function, if not empty, Google Cloud Functions is **ena`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/gcp_cloud_functions.md"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 64,
                  "endLine": 30,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\n```yaml\ngcp:\n  credentials: \"\" # The base64-encoded JSON key file for the GCP service account\n  cloudfunctions:\n    name: \"\" # The name of the Cloud Function, if not empty, GCP Cloud Functions is enabled\n    # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n",
                    "rendered": {
                      "text": "\n```yaml\ngcp:\n  credentials: \"\" # The base64-encoded JSON key file for the GCP service account\n  cloudfunctions:\n    name: \"\" # The name of the Cloud Function, if not empty, GCP Cloud Functions is enabled\n    # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n",
                      "markdown": "`\n```yaml\ngcp:\n  credentials: \"\" # The base64-encoded JSON key file for the GCP service account\n  cloudfunctions:\n    name: \"\" # The name of the Cloud Function, if not empty, GCP Cloud Functions is enabled\n    # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/gcp_cloud_functions.md"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 3,
                  "endLine": 24,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `gcp.cloudfunctions.minimumpriority` | `GCP_CLOUDFUNCTIONS_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `gcp.cloudfunctions.minimumpriority` | `GCP_CLOUDFUNCTIONS_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `gcp.cloudfunctions.minimumpriority` | `GCP_CLOUDFUNCTIONS_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/gcp_cloud_functions.md"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 143,
                  "endLine": 19,
                  "endColumn": 152,
                  "snippet": {
                    "text": "- | ---------------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| `gcp.credentials`                    | `GCP_CREDENTIALS`                    |                  | The base64-encoded JSON key file for the GCP service account                                                                        |\n| `gcp.cloudfunctions.name`            | `GCP_CLOUDFUNCTIONS_NAME`            |                  | The name of the Cloud Function, if not empty, Google Cloud Functions is **enabled**                                     ",
                    "rendered": {
                      "text": "- | ---------------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| `gcp.credentials`                    | `GCP_CREDENTIALS`                    |                  | The base64-encoded JSON key file for the GCP service account                                                                        |\n| `gcp.cloudfunctions.name`            | `GCP_CLOUDFUNCTIONS_NAME`            |                  | The name of the Cloud Function, if not empty, Google Cloud Functions is **enabled**                                     ",
                      "markdown": "`- | ---------------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| `gcp.credentials`                    | `GCP_CREDENTIALS`                    |                  | The base64-encoded JSON key file for the GCP service account                                                                        |\n| `gcp.cloudfunctions.name`            | `GCP_CLOUDFUNCTIONS_NAME`            |                  | The name of the Cloud Function, if not empty, Google Cloud Functions is **enabled**                                     `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/gcp_cloud_functions.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 40,
                  "endLine": 17,
                  "endColumn": 45,
                  "snippet": {
                    "text": "loud Functions](#gcp-cloud-functions)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                              | Env var                              | Default value    | Description                                                                                                                         |\n| ------------------------------------ | ------------------------------------ | ---------------- | -------------",
                    "rendered": {
                      "text": "loud Functions](#gcp-cloud-functions)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                              | Env var                              | Default value    | Description                                                                                                                         |\n| ------------------------------------ | ------------------------------------ | ---------------- | -------------",
                      "markdown": "`loud Functions](#gcp-cloud-functions)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                              | Env var                              | Default value    | Description                                                                                                                         |\n| ------------------------------------ | ------------------------------------ | ---------------- | -------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/wavefront.md"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 29,
                  "endLine": 41,
                  "endColumn": 35,
                  "snippet": {
                    "text": "  # endpointtoken: \"\" # Wavefront token. Must be used only when endpointtype is 'direct'\n  # metricname: \"falco.alert\" # Metric to be created in Wavefront. Defaults to falco.alert\n  # batchsize: 10000 # Max batch of data sent per flush interval. defaults to 10,000. Used only in direct mode\n  # flushintervalseconds: 1 # Time in seconds between flushing metrics to Wavefront. Defaults to 1s\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n```\n\n",
                    "rendered": {
                      "text": "  # endpointtoken: \"\" # Wavefront token. Must be used only when endpointtype is 'direct'\n  # metricname: \"falco.alert\" # Metric to be created in Wavefront. Defaults to falco.alert\n  # batchsize: 10000 # Max batch of data sent per flush interval. defaults to 10,000. Used only in direct mode\n  # flushintervalseconds: 1 # Time in seconds between flushing metrics to Wavefront. Defaults to 1s\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n```\n\n",
                      "markdown": "`  # endpointtoken: \"\" # Wavefront token. Must be used only when endpointtype is 'direct'\n  # metricname: \"falco.alert\" # Metric to be created in Wavefront. Defaults to falco.alert\n  # batchsize: 10000 # Max batch of data sent per flush interval. defaults to 10,000. Used only in direct mode\n  # flushintervalseconds: 1 # Time in seconds between flushing metrics to Wavefront. Defaults to 1s\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/wavefront.md"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 3,
                  "endLine": 29,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `wavefront.minimumpriority`      | `WAVEFRONT_MINIMUMPRIORITY`      | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `wavefront.minimumpriority`      | `WAVEFRONT_MINIMUMPRIORITY`      | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `wavefront.minimumpriority`      | `WAVEFRONT_MINIMUMPRIORITY`      | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/wavefront.md"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 90,
                  "endLine": 25,
                  "endColumn": 96,
                  "snippet": {
                    "text": "tchsize`            | `WAVEFRONT_BATCHSIZE`            | `10000`          | Max batch of data sent per flush interval. Used only in `direct` mode                                                               |\n| `wavefront.flushintervalseconds` | `WAVEFRONT_FLUSHINTERVALSECONDS` | `1`              | Time in seconds between flushing metrics to Wavefront                                                                               |\n| `wavefront.minimumpriority`      | `WAVEFRONT_MINIMUMPRIORITY`      | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,criti",
                    "rendered": {
                      "text": "tchsize`            | `WAVEFRONT_BATCHSIZE`            | `10000`          | Max batch of data sent per flush interval. Used only in `direct` mode                                                               |\n| `wavefront.flushintervalseconds` | `WAVEFRONT_FLUSHINTERVALSECONDS` | `1`              | Time in seconds between flushing metrics to Wavefront                                                                               |\n| `wavefront.minimumpriority`      | `WAVEFRONT_MINIMUMPRIORITY`      | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,criti",
                      "markdown": "`tchsize`            | `WAVEFRONT_BATCHSIZE`            | `10000`          | Max batch of data sent per flush interval. Used only in `direct` mode                                                               |\n| `wavefront.flushintervalseconds` | `WAVEFRONT_FLUSHINTERVALSECONDS` | `1`              | Time in seconds between flushing metrics to Wavefront                                                                               |\n| `wavefront.minimumpriority`      | `WAVEFRONT_MINIMUMPRIORITY`      | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,criti`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/wavefront.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 36,
                  "endLine": 17,
                  "endColumn": 41,
                  "snippet": {
                    "text": "ble of content\n\n- [Wavefront](#wavefront)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                          | Env var                          | Default value    | Description                                                                                                                         |\n| -------------------------------- | -------------------------------- | ---------------- | -------------------------",
                    "rendered": {
                      "text": "ble of content\n\n- [Wavefront](#wavefront)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                          | Env var                          | Default value    | Description                                                                                                                         |\n| -------------------------------- | -------------------------------- | ---------------- | -------------------------",
                      "markdown": "`ble of content\n\n- [Wavefront](#wavefront)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                          | Env var                          | Default value    | Description                                                                                                                         |\n| -------------------------------- | -------------------------------- | ---------------- | -------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/yandex_s3.md"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 3,
                  "endLine": 28,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `yandex.s3.minimumpriority` | `YANDEX_S3_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `yandex.s3.minimumpriority` | `YANDEX_S3_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `yandex.s3.minimumpriority` | `YANDEX_S3_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/yandex_s3.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 31,
                  "endLine": 17,
                  "endColumn": 36,
                  "snippet": {
                    "text": "## Table of content\n\n- [Yandex S3](#yandex-s3)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                     | Env var                     | Default value    | Description                                                                                                                         |\n| --------------------------- | --------------------------- | ---------------- | ----------------------------------------",
                    "rendered": {
                      "text": "## Table of content\n\n- [Yandex S3](#yandex-s3)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                     | Env var                     | Default value    | Description                                                                                                                         |\n| --------------------------- | --------------------------- | ---------------- | ----------------------------------------",
                      "markdown": "`## Table of content\n\n- [Yandex S3](#yandex-s3)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                     | Env var                     | Default value    | Description                                                                                                                         |\n| --------------------------- | --------------------------- | ---------------- | ----------------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/webex.md"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 3,
                  "endLine": 23,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/webex.md"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 27,
                  "endLine": 16,
                  "endColumn": 32,
                  "snippet": {
                    "text": "*: Chat/Messaging\n- **Website**: https://webex.com\n\n## Table of content\n\n- [Teams](#teams)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                 | Env var                 | Default value                                                                                       | Description                                                                                                                         |\n| ----------------------- | --------------",
                    "rendered": {
                      "text": "*: Chat/Messaging\n- **Website**: https://webex.com\n\n## Table of content\n\n- [Teams](#teams)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                 | Env var                 | Default value                                                                                       | Description                                                                                                                         |\n| ----------------------- | --------------",
                      "markdown": "`*: Chat/Messaging\n- **Website**: https://webex.com\n\n## Table of content\n\n- [Teams](#teams)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                 | Env var                 | Default value                                                                                       | Description                                                                                                                         |\n| ----------------------- | --------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/smtp.md"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 19,
                  "endLine": 47,
                  "endColumn": 27,
                  "snippet": {
                    "text": "  # tls: true # use TLS connection (true/false), default is \"true\"\n  # authmechanism: \"plain\" # SASL Mechanisms : plain, oauthbearer, external, anonymous or none (disable SASL). Default: plain\n  # user: \"\" # user for Plain Mechanism\n  # password: \"\" # password for Plain Mechanism\n  # token: \"\" # OAuthBearer token for OAuthBearer Mechanism\n  # identity: \"\" # identity string for Plain and External Mechanisms\n  # trace: \"\" trace string for Anonymous Mechanism\n",
                    "rendered": {
                      "text": "  # tls: true # use TLS connection (true/false), default is \"true\"\n  # authmechanism: \"plain\" # SASL Mechanisms : plain, oauthbearer, external, anonymous or none (disable SASL). Default: plain\n  # user: \"\" # user for Plain Mechanism\n  # password: \"\" # password for Plain Mechanism\n  # token: \"\" # OAuthBearer token for OAuthBearer Mechanism\n  # identity: \"\" # identity string for Plain and External Mechanisms\n  # trace: \"\" trace string for Anonymous Mechanism\n",
                      "markdown": "`  # tls: true # use TLS connection (true/false), default is \"true\"\n  # authmechanism: \"plain\" # SASL Mechanisms : plain, oauthbearer, external, anonymous or none (disable SASL). Default: plain\n  # user: \"\" # user for Plain Mechanism\n  # password: \"\" # password for Plain Mechanism\n  # token: \"\" # OAuthBearer token for OAuthBearer Mechanism\n  # identity: \"\" # identity string for Plain and External Mechanisms\n  # trace: \"\" trace string for Anonymous Mechanism\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/smtp.md"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 4,
                  "endLine": 47,
                  "endColumn": 12,
                  "snippet": {
                    "text": "  # tls: true # use TLS connection (true/false), default is \"true\"\n  # authmechanism: \"plain\" # SASL Mechanisms : plain, oauthbearer, external, anonymous or none (disable SASL). Default: plain\n  # user: \"\" # user for Plain Mechanism\n  # password: \"\" # password for Plain Mechanism\n  # token: \"\" # OAuthBearer token for OAuthBearer Mechanism\n  # identity: \"\" # identity string for Plain and External Mechanisms\n  # trace: \"\" trace string for Anonymous Mechanism\n",
                    "rendered": {
                      "text": "  # tls: true # use TLS connection (true/false), default is \"true\"\n  # authmechanism: \"plain\" # SASL Mechanisms : plain, oauthbearer, external, anonymous or none (disable SASL). Default: plain\n  # user: \"\" # user for Plain Mechanism\n  # password: \"\" # password for Plain Mechanism\n  # token: \"\" # OAuthBearer token for OAuthBearer Mechanism\n  # identity: \"\" # identity string for Plain and External Mechanisms\n  # trace: \"\" trace string for Anonymous Mechanism\n",
                      "markdown": "`  # tls: true # use TLS connection (true/false), default is \"true\"\n  # authmechanism: \"plain\" # SASL Mechanisms : plain, oauthbearer, external, anonymous or none (disable SASL). Default: plain\n  # user: \"\" # user for Plain Mechanism\n  # password: \"\" # password for Plain Mechanism\n  # token: \"\" # OAuthBearer token for OAuthBearer Mechanism\n  # identity: \"\" # identity string for Plain and External Mechanisms\n  # trace: \"\" trace string for Anonymous Mechanism\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/smtp.md"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 71,
                  "endLine": 23,
                  "endColumn": 79,
                  "snippet": {
                    "text": "                      |\n| `smtp.user`            | `SMTP_USER`            |                  | User for Plain Mechanism                                                                                                            |\n| `smtp.password`        | `SMTP_PASSWORD`        |                  | Password for Plain Mechanism                                                                                                        |\n| `smtp.token`           | `SMTP_TOKEN`           |                  | OAuthBearer token for OAuthBearer Mechanism                                                            ",
                    "rendered": {
                      "text": "                      |\n| `smtp.user`            | `SMTP_USER`            |                  | User for Plain Mechanism                                                                                                            |\n| `smtp.password`        | `SMTP_PASSWORD`        |                  | Password for Plain Mechanism                                                                                                        |\n| `smtp.token`           | `SMTP_TOKEN`           |                  | OAuthBearer token for OAuthBearer Mechanism                                                            ",
                      "markdown": "`                      |\n| `smtp.user`            | `SMTP_USER`            |                  | User for Plain Mechanism                                                                                                            |\n| `smtp.password`        | `SMTP_PASSWORD`        |                  | Password for Plain Mechanism                                                                                                        |\n| `smtp.token`           | `SMTP_TOKEN`           |                  | OAuthBearer token for OAuthBearer Mechanism                                                            `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/smtp.md"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 33,
                  "endLine": 23,
                  "endColumn": 41,
                  "snippet": {
                    "text": "ne` (disable SASL)                                          |\n| `smtp.user`            | `SMTP_USER`            |                  | User for Plain Mechanism                                                                                                            |\n| `smtp.password`        | `SMTP_PASSWORD`        |                  | Password for Plain Mechanism                                                                                                        |\n| `smtp.token`           | `SMTP_TOKEN`           |                  | OAuthBearer token for OAuthBearer Mechanism                      ",
                    "rendered": {
                      "text": "ne` (disable SASL)                                          |\n| `smtp.user`            | `SMTP_USER`            |                  | User for Plain Mechanism                                                                                                            |\n| `smtp.password`        | `SMTP_PASSWORD`        |                  | Password for Plain Mechanism                                                                                                        |\n| `smtp.token`           | `SMTP_TOKEN`           |                  | OAuthBearer token for OAuthBearer Mechanism                      ",
                      "markdown": "`ne` (disable SASL)                                          |\n| `smtp.user`            | `SMTP_USER`            |                  | User for Plain Mechanism                                                                                                            |\n| `smtp.password`        | `SMTP_PASSWORD`        |                  | Password for Plain Mechanism                                                                                                        |\n| `smtp.token`           | `SMTP_TOKEN`           |                  | OAuthBearer token for OAuthBearer Mechanism                      `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/smtp.md"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 8,
                  "endLine": 23,
                  "endColumn": 16,
                  "snippet": {
                    "text": "rnal`, `anonymous` or `none` (disable SASL)                                          |\n| `smtp.user`            | `SMTP_USER`            |                  | User for Plain Mechanism                                                                                                            |\n| `smtp.password`        | `SMTP_PASSWORD`        |                  | Password for Plain Mechanism                                                                                                        |\n| `smtp.token`           | `SMTP_TOKEN`           |                  | OAuthBearer token for OAuthBearer Mechan",
                    "rendered": {
                      "text": "rnal`, `anonymous` or `none` (disable SASL)                                          |\n| `smtp.user`            | `SMTP_USER`            |                  | User for Plain Mechanism                                                                                                            |\n| `smtp.password`        | `SMTP_PASSWORD`        |                  | Password for Plain Mechanism                                                                                                        |\n| `smtp.token`           | `SMTP_TOKEN`           |                  | OAuthBearer token for OAuthBearer Mechan",
                      "markdown": "`rnal`, `anonymous` or `none` (disable SASL)                                          |\n| `smtp.user`            | `SMTP_USER`            |                  | User for Plain Mechanism                                                                                                            |\n| `smtp.password`        | `SMTP_PASSWORD`        |                  | Password for Plain Mechanism                                                                                                        |\n| `smtp.token`           | `SMTP_TOKEN`           |                  | OAuthBearer token for OAuthBearer Mechan`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/smtp.md"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 3,
                  "endLine": 34,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n> [!WARNING]\nThe `smtp` can't work with the Office365 domains because of the authentication method used by the platform, it includes outlook.com, office365.com, hotmail.com, ...\n",
                    "rendered": {
                      "text": "\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n> [!WARNING]\nThe `smtp` can't work with the Office365 domains because of the authentication method used by the platform, it includes outlook.com, office365.com, hotmail.com, ...\n",
                      "markdown": "`\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n> [!WARNING]\nThe `smtp` can't work with the Office365 domains because of the authentication method used by the platform, it includes outlook.com, office365.com, hotmail.com, ...\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/smtp.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 26,
                  "endLine": 17,
                  "endColumn": 31,
                  "snippet": {
                    "text": "//en.wikipedia.org/wiki/Simple_Mail_Transfer_Protocol\n\n## Table of content\n\n- [SMTP](#smtp)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                | Env var                | Default value    | Description                                                                                                                         |\n| ---------------------- | ---------------------- | ---------------- | -------------------------------------------------------",
                    "rendered": {
                      "text": "//en.wikipedia.org/wiki/Simple_Mail_Transfer_Protocol\n\n## Table of content\n\n- [SMTP](#smtp)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                | Env var                | Default value    | Description                                                                                                                         |\n| ---------------------- | ---------------------- | ---------------- | -------------------------------------------------------",
                      "markdown": "`//en.wikipedia.org/wiki/Simple_Mail_Transfer_Protocol\n\n## Table of content\n\n- [SMTP](#smtp)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                | Env var                | Default value    | Description                                                                                                                         |\n| ---------------------- | ---------------------- | ---------------- | -------------------------------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/stan.md"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 3,
                  "endLine": 26,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `stan.minimumpriority` | `STAN_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `stan.minimumpriority` | `STAN_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `stan.minimumpriority` | `STAN_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/stan.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 26,
                  "endLine": 17,
                  "endColumn": 31,
                  "snippet": {
                    "text": "oncepts/intro\n\n## Table of content\n\n- [STAN](#stan)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                | Env var                | Default value    | Description                                                                                                                         |\n| ---------------------- | ---------------------- | ---------------- | -------------------------------------------------------",
                    "rendered": {
                      "text": "oncepts/intro\n\n## Table of content\n\n- [STAN](#stan)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                | Env var                | Default value    | Description                                                                                                                         |\n| ---------------------- | ---------------------- | ---------------- | -------------------------------------------------------",
                      "markdown": "`oncepts/intro\n\n## Table of content\n\n- [STAN](#stan)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                | Env var                | Default value    | Description                                                                                                                         |\n| ---------------------- | ---------------------- | ---------------- | -------------------------------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/quickwit.md"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 3,
                  "endLine": 29,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `quickwit.minimumpriority`      | `QUICKWIT_MINIMUMPRIORITY`      | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `quickwit.minimumpriority`      | `QUICKWIT_MINIMUMPRIORITY`      | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `quickwit.minimumpriority`      | `QUICKWIT_MINIMUMPRIORITY`      | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/quickwit.md"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 35,
                  "endLine": 16,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\n- **Website**: https://quickwit.io/\n\n## Table of content\n\n- [Quickwit](#quickwit)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                         | Env var                         | Default value    | Description                                                                                                                            |\n| ------------------------------- | ------------------------------- | ---------------- | -------------------------",
                    "rendered": {
                      "text": "\n- **Website**: https://quickwit.io/\n\n## Table of content\n\n- [Quickwit](#quickwit)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                         | Env var                         | Default value    | Description                                                                                                                            |\n| ------------------------------- | ------------------------------- | ---------------- | -------------------------",
                      "markdown": "`\n- **Website**: https://quickwit.io/\n\n## Table of content\n\n- [Quickwit](#quickwit)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                         | Env var                         | Default value    | Description                                                                                                                            |\n| ------------------------------- | ------------------------------- | ---------------- | -------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/discord.md"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 3,
                  "endLine": 24,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `discord.minimumpriority` | `DISCORD_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `discord.minimumpriority` | `DISCORD_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `discord.minimumpriority` | `DISCORD_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/discord.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 29,
                  "endLine": 17,
                  "endColumn": 34,
                  "snippet": {
                    "text": "com/\n\n## Table of content\n\n- [Discord](#discord)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                   | Env var                   | Default value    | Description                                                                                                                         |\n| ------------------------- | ------------------------- | ---------------- | ----------------------------------------------",
                    "rendered": {
                      "text": "com/\n\n## Table of content\n\n- [Discord](#discord)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                   | Env var                   | Default value    | Description                                                                                                                         |\n| ------------------------- | ------------------------- | ---------------- | ----------------------------------------------",
                      "markdown": "`com/\n\n## Table of content\n\n- [Discord](#discord)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                   | Env var                   | Default value    | Description                                                                                                                         |\n| ------------------------- | ------------------------- | ---------------- | ----------------------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/gcp_cloud_run.md"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 24,
                  "endLine": 31,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n```yaml\ngcp:\n  credentials: \"\" # The base64-encoded JSON key file for the GCP service account\n  cloudrun:\n    endpoint: \"\" # The URL of the Cloud Function\n    jwt: \"\" # Appropriate JWT to invoke the Cloud Function\n",
                    "rendered": {
                      "text": "\n```yaml\ngcp:\n  credentials: \"\" # The base64-encoded JSON key file for the GCP service account\n  cloudrun:\n    endpoint: \"\" # The URL of the Cloud Function\n    jwt: \"\" # Appropriate JWT to invoke the Cloud Function\n",
                      "markdown": "`\n```yaml\ngcp:\n  credentials: \"\" # The base64-encoded JSON key file for the GCP service account\n  cloudrun:\n    endpoint: \"\" # The URL of the Cloud Function\n    jwt: \"\" # Appropriate JWT to invoke the Cloud Function\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/gcp_cloud_run.md"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 91,
                  "endLine": 19,
                  "endColumn": 97,
                  "snippet": {
                    "text": "-------------------- | ------------------------------ | ---------------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| `gcp.credentials`              | `GCP_CREDENTIALS`              |                  | The base64-encoded JSON key file for the GCP service account                                                                        |\n| `gcp.cloudrun.endpoint`        | `GCP_CLOUDRUN_ENDPOINT`        |                  | The URL of the Cloud Run, if not empty, Google Cloud Run is **enabled**                  ",
                    "rendered": {
                      "text": "-------------------- | ------------------------------ | ---------------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| `gcp.credentials`              | `GCP_CREDENTIALS`              |                  | The base64-encoded JSON key file for the GCP service account                                                                        |\n| `gcp.cloudrun.endpoint`        | `GCP_CLOUDRUN_ENDPOINT`        |                  | The URL of the Cloud Run, if not empty, Google Cloud Run is **enabled**                  ",
                      "markdown": "`-------------------- | ------------------------------ | ---------------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| `gcp.credentials`              | `GCP_CREDENTIALS`              |                  | The base64-encoded JSON key file for the GCP service account                                                                        |\n| `gcp.cloudrun.endpoint`        | `GCP_CLOUDRUN_ENDPOINT`        |                  | The URL of the Cloud Run, if not empty, Google Cloud Run is **enabled**                  `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/gcp_cloud_run.md"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 64,
                  "endLine": 31,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\n```yaml\ngcp:\n  credentials: \"\" # The base64-encoded JSON key file for the GCP service account\n  cloudrun:\n    endpoint: \"\" # The URL of the Cloud Function\n    jwt: \"\" # Appropriate JWT to invoke the Cloud Function\n",
                    "rendered": {
                      "text": "\n```yaml\ngcp:\n  credentials: \"\" # The base64-encoded JSON key file for the GCP service account\n  cloudrun:\n    endpoint: \"\" # The URL of the Cloud Function\n    jwt: \"\" # Appropriate JWT to invoke the Cloud Function\n",
                      "markdown": "`\n```yaml\ngcp:\n  credentials: \"\" # The base64-encoded JSON key file for the GCP service account\n  cloudrun:\n    endpoint: \"\" # The URL of the Cloud Function\n    jwt: \"\" # Appropriate JWT to invoke the Cloud Function\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/gcp_cloud_run.md"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 3,
                  "endLine": 25,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `gcp.cloudrun.minimumpriority` | `GCP_CLOUDRUN_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `gcp.cloudrun.minimumpriority` | `GCP_CLOUDRUN_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `gcp.cloudrun.minimumpriority` | `GCP_CLOUDRUN_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/gcp_cloud_run.md"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 131,
                  "endLine": 19,
                  "endColumn": 140,
                  "snippet": {
                    "text": "------------- | ---------------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| `gcp.credentials`              | `GCP_CREDENTIALS`              |                  | The base64-encoded JSON key file for the GCP service account                                                                        |\n| `gcp.cloudrun.endpoint`        | `GCP_CLOUDRUN_ENDPOINT`        |                  | The URL of the Cloud Run, if not empty, Google Cloud Run is **enabled**                                                             ",
                    "rendered": {
                      "text": "------------- | ---------------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| `gcp.credentials`              | `GCP_CREDENTIALS`              |                  | The base64-encoded JSON key file for the GCP service account                                                                        |\n| `gcp.cloudrun.endpoint`        | `GCP_CLOUDRUN_ENDPOINT`        |                  | The URL of the Cloud Run, if not empty, Google Cloud Run is **enabled**                                                             ",
                      "markdown": "`------------- | ---------------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| `gcp.credentials`              | `GCP_CREDENTIALS`              |                  | The base64-encoded JSON key file for the GCP service account                                                                        |\n| `gcp.cloudrun.endpoint`        | `GCP_CLOUDRUN_ENDPOINT`        |                  | The URL of the Cloud Run, if not empty, Google Cloud Run is **enabled**                                                             `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/gcp_cloud_run.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 34,
                  "endLine": 17,
                  "endColumn": 39,
                  "snippet": {
                    "text": " content\n\n- [GCP Cloud Run](#gcp-cloud-run)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                        | Env var                        | Default value    | Description                                                                                                                         |\n| ------------------------------ | ------------------------------ | ---------------- | -------------------------------",
                    "rendered": {
                      "text": " content\n\n- [GCP Cloud Run](#gcp-cloud-run)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                        | Env var                        | Default value    | Description                                                                                                                         |\n| ------------------------------ | ------------------------------ | ---------------- | -------------------------------",
                      "markdown": "` content\n\n- [GCP Cloud Run](#gcp-cloud-run)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                        | Env var                        | Default value    | Description                                                                                                                         |\n| ------------------------------ | ------------------------------ | ---------------- | -------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/syslog.md"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 3,
                  "endLine": 26,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `syslog.minimumpriority` | `SYSLOG_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `syslog.minimumpriority` | `SYSLOG_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `syslog.minimumpriority` | `SYSLOG_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/syslog.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 28,
                  "endLine": 17,
                  "endColumn": 33,
                  "snippet": {
                    "text": "/Syslog\n\n## Table of content\n\n- [Syslog](#syslog)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                  | Env var                  | Default value    | Description                                                                                                                         |\n| ------------------------ | ------------------------ | ---------------- | -------------------------------------------------",
                    "rendered": {
                      "text": "/Syslog\n\n## Table of content\n\n- [Syslog](#syslog)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                  | Env var                  | Default value    | Description                                                                                                                         |\n| ------------------------ | ------------------------ | ---------------- | -------------------------------------------------",
                      "markdown": "`/Syslog\n\n## Table of content\n\n- [Syslog](#syslog)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                  | Env var                  | Default value    | Description                                                                                                                         |\n| ------------------------ | ------------------------ | ---------------- | -------------------------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/main.go"
                },
                "region": {
                  "startLine": 326,
                  "startColumn": 65,
                  "endLine": 326,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\t\t\turl += \"/write?db=\" + config.Influxdb.Database\n\t\t}\n\t\tif config.Influxdb.User != \"\" && config.Influxdb.Password != \"\" && config.Influxdb.Token == \"\" {\n\t\t\turl += \"&u=\" + config.Influxdb.User + \"&p=\" + config.Influxdb.Password\n\t\t}\n\t\tif config.Influxdb.Precision != \"\" {\n\t\t\turl += \"&precision=\" + config.Influxdb.Precision\n",
                    "rendered": {
                      "text": "\t\t\turl += \"/write?db=\" + config.Influxdb.Database\n\t\t}\n\t\tif config.Influxdb.User != \"\" && config.Influxdb.Password != \"\" && config.Influxdb.Token == \"\" {\n\t\t\turl += \"&u=\" + config.Influxdb.User + \"&p=\" + config.Influxdb.Password\n\t\t}\n\t\tif config.Influxdb.Precision != \"\" {\n\t\t\turl += \"&precision=\" + config.Influxdb.Precision\n",
                      "markdown": "`\t\t\turl += \"/write?db=\" + config.Influxdb.Database\n\t\t}\n\t\tif config.Influxdb.User != \"\" && config.Influxdb.Password != \"\" && config.Influxdb.Token == \"\" {\n\t\t\turl += \"&u=\" + config.Influxdb.User + \"&p=\" + config.Influxdb.Password\n\t\t}\n\t\tif config.Influxdb.Precision != \"\" {\n\t\t\turl += \"&precision=\" + config.Influxdb.Precision\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/main.go"
                },
                "region": {
                  "startLine": 325,
                  "startColumn": 51,
                  "endLine": 325,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\t\t} else if config.Influxdb.Database != \"\" {\n\t\t\turl += \"/write?db=\" + config.Influxdb.Database\n\t\t}\n\t\tif config.Influxdb.User != \"\" && config.Influxdb.Password != \"\" && config.Influxdb.Token == \"\" {\n\t\t\turl += \"&u=\" + config.Influxdb.User + \"&p=\" + config.Influxdb.Password\n\t\t}\n\t\tif config.Influxdb.Precision != \"\" {\n",
                    "rendered": {
                      "text": "\t\t} else if config.Influxdb.Database != \"\" {\n\t\t\turl += \"/write?db=\" + config.Influxdb.Database\n\t\t}\n\t\tif config.Influxdb.User != \"\" && config.Influxdb.Password != \"\" && config.Influxdb.Token == \"\" {\n\t\t\turl += \"&u=\" + config.Influxdb.User + \"&p=\" + config.Influxdb.Password\n\t\t}\n\t\tif config.Influxdb.Precision != \"\" {\n",
                      "markdown": "`\t\t} else if config.Influxdb.Database != \"\" {\n\t\t\turl += \"/write?db=\" + config.Influxdb.Database\n\t\t}\n\t\tif config.Influxdb.User != \"\" && config.Influxdb.Password != \"\" && config.Influxdb.Token == \"\" {\n\t\t\turl += \"&u=\" + config.Influxdb.User + \"&p=\" + config.Influxdb.Password\n\t\t}\n\t\tif config.Influxdb.Precision != \"\" {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/main.go"
                },
                "region": {
                  "startLine": 905,
                  "startColumn": 139,
                  "endLine": 905,
                  "endColumn": 143,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tif len(config.TLSServer.NoTLSPaths) == 0 {\n\t\t\tlog.Printf(\"[WARN]  : tlsserver.deploy is true but tlsserver.notlspaths is empty, change tlsserver.deploy to true to deploy two servers, at least for /ping endpoint\")\n\t\t}\n\n\t\tif len(config.TLSServer.NoTLSPaths) != 0 {\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\tif len(config.TLSServer.NoTLSPaths) == 0 {\n\t\t\tlog.Printf(\"[WARN]  : tlsserver.deploy is true but tlsserver.notlspaths is empty, change tlsserver.deploy to true to deploy two servers, at least for /ping endpoint\")\n\t\t}\n\n\t\tif len(config.TLSServer.NoTLSPaths) != 0 {\n",
                      "markdown": "`\t\t}\n\n\t\tif len(config.TLSServer.NoTLSPaths) == 0 {\n\t\t\tlog.Printf(\"[WARN]  : tlsserver.deploy is true but tlsserver.notlspaths is empty, change tlsserver.deploy to true to deploy two servers, at least for /ping endpoint\")\n\t\t}\n\n\t\tif len(config.TLSServer.NoTLSPaths) != 0 {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 514,
                  "startColumn": 75,
                  "endLine": 514,
                  "endColumn": 83,
                  "snippet": {
                    "text": "  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # username: \"a\" # use this username to authenticate to OpenObserve if the username is not empty (default: \"\")\n  # password: \"\" # use this password to authenticate to OpenObserve if the password is not empty (default: \"\")\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n\n",
                    "rendered": {
                      "text": "  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # username: \"a\" # use this username to authenticate to OpenObserve if the username is not empty (default: \"\")\n  # password: \"\" # use this password to authenticate to OpenObserve if the password is not empty (default: \"\")\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n\n",
                      "markdown": "`  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # username: \"a\" # use this username to authenticate to OpenObserve if the username is not empty (default: \"\")\n  # password: \"\" # use this password to authenticate to OpenObserve if the password is not empty (default: \"\")\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 514,
                  "startColumn": 28,
                  "endLine": 514,
                  "endColumn": 36,
                  "snippet": {
                    "text": "  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # username: \"a\" # use this username to authenticate to OpenObserve if the username is not empty (default: \"\")\n  # password: \"\" # use this password to authenticate to OpenObserve if the password is not empty (default: \"\")\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n\n",
                    "rendered": {
                      "text": "  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # username: \"a\" # use this username to authenticate to OpenObserve if the username is not empty (default: \"\")\n  # password: \"\" # use this password to authenticate to OpenObserve if the password is not empty (default: \"\")\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n\n",
                      "markdown": "`  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # username: \"a\" # use this username to authenticate to OpenObserve if the username is not empty (default: \"\")\n  # password: \"\" # use this password to authenticate to OpenObserve if the password is not empty (default: \"\")\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 514,
                  "startColumn": 4,
                  "endLine": 514,
                  "endColumn": 12,
                  "snippet": {
                    "text": "  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # username: \"a\" # use this username to authenticate to OpenObserve if the username is not empty (default: \"\")\n  # password: \"\" # use this password to authenticate to OpenObserve if the password is not empty (default: \"\")\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n\n",
                    "rendered": {
                      "text": "  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # username: \"a\" # use this username to authenticate to OpenObserve if the username is not empty (default: \"\")\n  # password: \"\" # use this password to authenticate to OpenObserve if the password is not empty (default: \"\")\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n\n",
                      "markdown": "`  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # username: \"a\" # use this username to authenticate to OpenObserve if the username is not empty (default: \"\")\n  # password: \"\" # use this password to authenticate to OpenObserve if the password is not empty (default: \"\")\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 500,
                  "startColumn": 19,
                  "endLine": 500,
                  "endColumn": 27,
                  "snippet": {
                    "text": "n8n:\n  # address: \"\" # N8N address, if not empty, N8N output is enabled\n  # user: \"\" # Username to authenticate with N8N in basic auth\n  # password: \"\" # Password to authenticate with N8N in basic auth\n  # headerauthname: \"\" # Header Auth Key to authenticate with N8N\n  # headerauthvalue: \"\" # Header Auth Value to authenticate with N8N\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n",
                    "rendered": {
                      "text": "n8n:\n  # address: \"\" # N8N address, if not empty, N8N output is enabled\n  # user: \"\" # Username to authenticate with N8N in basic auth\n  # password: \"\" # Password to authenticate with N8N in basic auth\n  # headerauthname: \"\" # Header Auth Key to authenticate with N8N\n  # headerauthvalue: \"\" # Header Auth Value to authenticate with N8N\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n",
                      "markdown": "`n8n:\n  # address: \"\" # N8N address, if not empty, N8N output is enabled\n  # user: \"\" # Username to authenticate with N8N in basic auth\n  # password: \"\" # Password to authenticate with N8N in basic auth\n  # headerauthname: \"\" # Header Auth Key to authenticate with N8N\n  # headerauthvalue: \"\" # Header Auth Value to authenticate with N8N\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 500,
                  "startColumn": 4,
                  "endLine": 500,
                  "endColumn": 12,
                  "snippet": {
                    "text": "n8n:\n  # address: \"\" # N8N address, if not empty, N8N output is enabled\n  # user: \"\" # Username to authenticate with N8N in basic auth\n  # password: \"\" # Password to authenticate with N8N in basic auth\n  # headerauthname: \"\" # Header Auth Key to authenticate with N8N\n  # headerauthvalue: \"\" # Header Auth Value to authenticate with N8N\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n",
                    "rendered": {
                      "text": "n8n:\n  # address: \"\" # N8N address, if not empty, N8N output is enabled\n  # user: \"\" # Username to authenticate with N8N in basic auth\n  # password: \"\" # Password to authenticate with N8N in basic auth\n  # headerauthname: \"\" # Header Auth Key to authenticate with N8N\n  # headerauthvalue: \"\" # Header Auth Value to authenticate with N8N\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n",
                      "markdown": "`n8n:\n  # address: \"\" # N8N address, if not empty, N8N output is enabled\n  # user: \"\" # Username to authenticate with N8N in basic auth\n  # password: \"\" # Password to authenticate with N8N in basic auth\n  # headerauthname: \"\" # Header Auth Key to authenticate with N8N\n  # headerauthvalue: \"\" # Header Auth Value to authenticate with N8N\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 485,
                  "startColumn": 19,
                  "endLine": 485,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\nredis:\n  # address: \"\" # Redis address, if not empty, Redis output is enabled\n  # password: \"\" # Password to authenticate with Redis (default: \"\")\n  # database: \"\" # Redis database number (default: 0)\n  # storagetype: \"\" # Redis storage type: hashmap or list (default: \"list\")\n  # key: \"\" # Redis storage key name for hashmap, list(default: \"falco\")\n",
                    "rendered": {
                      "text": "\nredis:\n  # address: \"\" # Redis address, if not empty, Redis output is enabled\n  # password: \"\" # Password to authenticate with Redis (default: \"\")\n  # database: \"\" # Redis database number (default: 0)\n  # storagetype: \"\" # Redis storage type: hashmap or list (default: \"list\")\n  # key: \"\" # Redis storage key name for hashmap, list(default: \"falco\")\n",
                      "markdown": "`\nredis:\n  # address: \"\" # Redis address, if not empty, Redis output is enabled\n  # password: \"\" # Password to authenticate with Redis (default: \"\")\n  # database: \"\" # Redis database number (default: 0)\n  # storagetype: \"\" # Redis storage type: hashmap or list (default: \"list\")\n  # key: \"\" # Redis storage key name for hashmap, list(default: \"falco\")\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 485,
                  "startColumn": 4,
                  "endLine": 485,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\nredis:\n  # address: \"\" # Redis address, if not empty, Redis output is enabled\n  # password: \"\" # Password to authenticate with Redis (default: \"\")\n  # database: \"\" # Redis database number (default: 0)\n  # storagetype: \"\" # Redis storage type: hashmap or list (default: \"list\")\n  # key: \"\" # Redis storage key name for hashmap, list(default: \"falco\")\n",
                    "rendered": {
                      "text": "\nredis:\n  # address: \"\" # Redis address, if not empty, Redis output is enabled\n  # password: \"\" # Password to authenticate with Redis (default: \"\")\n  # database: \"\" # Redis database number (default: 0)\n  # storagetype: \"\" # Redis storage type: hashmap or list (default: \"list\")\n  # key: \"\" # Redis storage key name for hashmap, list(default: \"falco\")\n",
                      "markdown": "`\nredis:\n  # address: \"\" # Redis address, if not empty, Redis output is enabled\n  # password: \"\" # Password to authenticate with Redis (default: \"\")\n  # database: \"\" # Redis database number (default: 0)\n  # storagetype: \"\" # Redis storage type: hashmap or list (default: \"list\")\n  # key: \"\" # Redis storage key name for hashmap, list(default: \"falco\")\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 478,
                  "startColumn": 27,
                  "endLine": 478,
                  "endColumn": 35,
                  "snippet": {
                    "text": "g|notice|informational|debug or \"\" (default)\n\ntimescaledb:\n  # host: \"\" # TimescaleDB host, if not empty, TImescaleDB output is enabled\n  # port: \"5432\" # TimescaleDB port (default: 5432)\n  # user: \"postgres\" # Username to authenticate with TimescaleDB (default: postgres)\n  # password: \"postgres\" # Password to authenticate with TimescaleDB (default: postgres)\n  # database: \"\" # TimescaleDB database used\n  # hypertablename: \"falco_events\" # Hypertable to store data events (default: falco_events) See TimescaleDB setup for more info\n  # minimumpriority: \"\" # minimum priority of event for using this outpu",
                    "rendered": {
                      "text": "g|notice|informational|debug or \"\" (default)\n\ntimescaledb:\n  # host: \"\" # TimescaleDB host, if not empty, TImescaleDB output is enabled\n  # port: \"5432\" # TimescaleDB port (default: 5432)\n  # user: \"postgres\" # Username to authenticate with TimescaleDB (default: postgres)\n  # password: \"postgres\" # Password to authenticate with TimescaleDB (default: postgres)\n  # database: \"\" # TimescaleDB database used\n  # hypertablename: \"falco_events\" # Hypertable to store data events (default: falco_events) See TimescaleDB setup for more info\n  # minimumpriority: \"\" # minimum priority of event for using this outpu",
                      "markdown": "`g|notice|informational|debug or \"\" (default)\n\ntimescaledb:\n  # host: \"\" # TimescaleDB host, if not empty, TImescaleDB output is enabled\n  # port: \"5432\" # TimescaleDB port (default: 5432)\n  # user: \"postgres\" # Username to authenticate with TimescaleDB (default: postgres)\n  # password: \"postgres\" # Password to authenticate with TimescaleDB (default: postgres)\n  # database: \"\" # TimescaleDB database used\n  # hypertablename: \"falco_events\" # Hypertable to store data events (default: falco_events) See TimescaleDB setup for more info\n  # minimumpriority: \"\" # minimum priority of event for using this outpu`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 478,
                  "startColumn": 4,
                  "endLine": 478,
                  "endColumn": 12,
                  "snippet": {
                    "text": "t|critical|error|warning|notice|informational|debug or \"\" (default)\n\ntimescaledb:\n  # host: \"\" # TimescaleDB host, if not empty, TImescaleDB output is enabled\n  # port: \"5432\" # TimescaleDB port (default: 5432)\n  # user: \"postgres\" # Username to authenticate with TimescaleDB (default: postgres)\n  # password: \"postgres\" # Password to authenticate with TimescaleDB (default: postgres)\n  # database: \"\" # TimescaleDB database used\n  # hypertablename: \"falco_events\" # Hypertable to store data events (default: falco_events) See TimescaleDB setup for more info\n  # minimumpriority: \"\" # minimum priority of eve",
                    "rendered": {
                      "text": "t|critical|error|warning|notice|informational|debug or \"\" (default)\n\ntimescaledb:\n  # host: \"\" # TimescaleDB host, if not empty, TImescaleDB output is enabled\n  # port: \"5432\" # TimescaleDB port (default: 5432)\n  # user: \"postgres\" # Username to authenticate with TimescaleDB (default: postgres)\n  # password: \"postgres\" # Password to authenticate with TimescaleDB (default: postgres)\n  # database: \"\" # TimescaleDB database used\n  # hypertablename: \"falco_events\" # Hypertable to store data events (default: falco_events) See TimescaleDB setup for more info\n  # minimumpriority: \"\" # minimum priority of eve",
                      "markdown": "`t|critical|error|warning|notice|informational|debug or \"\" (default)\n\ntimescaledb:\n  # host: \"\" # TimescaleDB host, if not empty, TImescaleDB output is enabled\n  # port: \"5432\" # TimescaleDB port (default: 5432)\n  # user: \"postgres\" # Username to authenticate with TimescaleDB (default: postgres)\n  # password: \"postgres\" # Password to authenticate with TimescaleDB (default: postgres)\n  # database: \"\" # TimescaleDB database used\n  # hypertablename: \"falco_events\" # Hypertable to store data events (default: falco_events) See TimescaleDB setup for more info\n  # minimumpriority: \"\" # minimum priority of eve`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 450,
                  "startColumn": 28,
                  "endLine": 450,
                  "endColumn": 36,
                  "snippet": {
                    "text": "  # hostport: \"\" # http://{domain or ip}:{port}, if not empty, ZincSearch output is enabled\n  # index: \"falco\" # index (default: falco)\n  # username: \"\" # use this username to authenticate to ZincSearch (default: \"\")\n  # password: \"\" # use this password to authenticate to ZincSearch (default: \"\")\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n\n",
                    "rendered": {
                      "text": "  # hostport: \"\" # http://{domain or ip}:{port}, if not empty, ZincSearch output is enabled\n  # index: \"falco\" # index (default: falco)\n  # username: \"\" # use this username to authenticate to ZincSearch (default: \"\")\n  # password: \"\" # use this password to authenticate to ZincSearch (default: \"\")\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n\n",
                      "markdown": "`  # hostport: \"\" # http://{domain or ip}:{port}, if not empty, ZincSearch output is enabled\n  # index: \"falco\" # index (default: falco)\n  # username: \"\" # use this username to authenticate to ZincSearch (default: \"\")\n  # password: \"\" # use this password to authenticate to ZincSearch (default: \"\")\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 450,
                  "startColumn": 4,
                  "endLine": 450,
                  "endColumn": 12,
                  "snippet": {
                    "text": "  # hostport: \"\" # http://{domain or ip}:{port}, if not empty, ZincSearch output is enabled\n  # index: \"falco\" # index (default: falco)\n  # username: \"\" # use this username to authenticate to ZincSearch (default: \"\")\n  # password: \"\" # use this password to authenticate to ZincSearch (default: \"\")\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n\n",
                    "rendered": {
                      "text": "  # hostport: \"\" # http://{domain or ip}:{port}, if not empty, ZincSearch output is enabled\n  # index: \"falco\" # index (default: falco)\n  # username: \"\" # use this username to authenticate to ZincSearch (default: \"\")\n  # password: \"\" # use this password to authenticate to ZincSearch (default: \"\")\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n\n",
                      "markdown": "`  # hostport: \"\" # http://{domain or ip}:{port}, if not empty, ZincSearch output is enabled\n  # index: \"falco\" # index (default: falco)\n  # username: \"\" # use this username to authenticate to ZincSearch (default: \"\")\n  # password: \"\" # use this password to authenticate to ZincSearch (default: \"\")\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 442,
                  "startColumn": 19,
                  "endLine": 442,
                  "endColumn": 27,
                  "snippet": {
                    "text": "  # qos: 0 # QOS for messages (default: 0)\n  # retained: false # If true, messages are retained (default: false)\n  # user: \"\" # User if the authentication is enabled in the broker\n  # password: \"\" # Password if the authentication is enabled in the broker\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n\n",
                    "rendered": {
                      "text": "  # qos: 0 # QOS for messages (default: 0)\n  # retained: false # If true, messages are retained (default: false)\n  # user: \"\" # User if the authentication is enabled in the broker\n  # password: \"\" # Password if the authentication is enabled in the broker\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n\n",
                      "markdown": "`  # qos: 0 # QOS for messages (default: 0)\n  # retained: false # If true, messages are retained (default: false)\n  # user: \"\" # User if the authentication is enabled in the broker\n  # password: \"\" # Password if the authentication is enabled in the broker\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 442,
                  "startColumn": 4,
                  "endLine": 442,
                  "endColumn": 12,
                  "snippet": {
                    "text": "  # qos: 0 # QOS for messages (default: 0)\n  # retained: false # If true, messages are retained (default: false)\n  # user: \"\" # User if the authentication is enabled in the broker\n  # password: \"\" # Password if the authentication is enabled in the broker\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n\n",
                    "rendered": {
                      "text": "  # qos: 0 # QOS for messages (default: 0)\n  # retained: false # If true, messages are retained (default: false)\n  # user: \"\" # User if the authentication is enabled in the broker\n  # password: \"\" # Password if the authentication is enabled in the broker\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n\n",
                      "markdown": "`  # qos: 0 # QOS for messages (default: 0)\n  # retained: false # If true, messages are retained (default: false)\n  # user: \"\" # User if the authentication is enabled in the broker\n  # password: \"\" # Password if the authentication is enabled in the broker\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 321,
                  "startColumn": 26,
                  "endLine": 321,
                  "endColumn": 34,
                  "snippet": {
                    "text": "al|debug or \"\" (default)\n  sasl: \"\" # SASL authentication mechanism, if empty, no authentication (PLAIN|SCRAM_SHA256|SCRAM_SHA512)\n  tls: false # Use TLS for the connections (default: false)\n  username: \"\" # use this username to authenticate to Kafka via SASL (default: \"\")\n  password: \"\" # use this password to authenticate to Kafka via SASL (default: \"\")\n  # async: false # produce messages without blocking (default: false)\n  # requiredacks: NONE # number of acknowledges from partition replicas required before receiving (default: \"NONE\")\n  # compression: \"\" # enable message compression using this algor",
                    "rendered": {
                      "text": "al|debug or \"\" (default)\n  sasl: \"\" # SASL authentication mechanism, if empty, no authentication (PLAIN|SCRAM_SHA256|SCRAM_SHA512)\n  tls: false # Use TLS for the connections (default: false)\n  username: \"\" # use this username to authenticate to Kafka via SASL (default: \"\")\n  password: \"\" # use this password to authenticate to Kafka via SASL (default: \"\")\n  # async: false # produce messages without blocking (default: false)\n  # requiredacks: NONE # number of acknowledges from partition replicas required before receiving (default: \"NONE\")\n  # compression: \"\" # enable message compression using this algor",
                      "markdown": "`al|debug or \"\" (default)\n  sasl: \"\" # SASL authentication mechanism, if empty, no authentication (PLAIN|SCRAM_SHA256|SCRAM_SHA512)\n  tls: false # Use TLS for the connections (default: false)\n  username: \"\" # use this username to authenticate to Kafka via SASL (default: \"\")\n  password: \"\" # use this password to authenticate to Kafka via SASL (default: \"\")\n  # async: false # produce messages without blocking (default: false)\n  # requiredacks: NONE # number of acknowledges from partition replicas required before receiving (default: \"NONE\")\n  # compression: \"\" # enable message compression using this algor`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 321,
                  "startColumn": 2,
                  "endLine": 321,
                  "endColumn": 10,
                  "snippet": {
                    "text": "rning|notice|informational|debug or \"\" (default)\n  sasl: \"\" # SASL authentication mechanism, if empty, no authentication (PLAIN|SCRAM_SHA256|SCRAM_SHA512)\n  tls: false # Use TLS for the connections (default: false)\n  username: \"\" # use this username to authenticate to Kafka via SASL (default: \"\")\n  password: \"\" # use this password to authenticate to Kafka via SASL (default: \"\")\n  # async: false # produce messages without blocking (default: false)\n  # requiredacks: NONE # number of acknowledges from partition replicas required before receiving (default: \"NONE\")\n  # compression: \"\" # enable message comp",
                    "rendered": {
                      "text": "rning|notice|informational|debug or \"\" (default)\n  sasl: \"\" # SASL authentication mechanism, if empty, no authentication (PLAIN|SCRAM_SHA256|SCRAM_SHA512)\n  tls: false # Use TLS for the connections (default: false)\n  username: \"\" # use this username to authenticate to Kafka via SASL (default: \"\")\n  password: \"\" # use this password to authenticate to Kafka via SASL (default: \"\")\n  # async: false # produce messages without blocking (default: false)\n  # requiredacks: NONE # number of acknowledges from partition replicas required before receiving (default: \"NONE\")\n  # compression: \"\" # enable message comp",
                      "markdown": "`rning|notice|informational|debug or \"\" (default)\n  sasl: \"\" # SASL authentication mechanism, if empty, no authentication (PLAIN|SCRAM_SHA256|SCRAM_SHA512)\n  tls: false # Use TLS for the connections (default: false)\n  username: \"\" # use this username to authenticate to Kafka via SASL (default: \"\")\n  password: \"\" # use this password to authenticate to Kafka via SASL (default: \"\")\n  # async: false # produce messages without blocking (default: false)\n  # requiredacks: NONE # number of acknowledges from partition replicas required before receiving (default: \"NONE\")\n  # compression: \"\" # enable message comp`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 19,
                  "endLine": 255,
                  "endColumn": 27,
                  "snippet": {
                    "text": "nodered:\n  # address: \"\" # Node-RED address, if not empty, Node-RED output is enabled\n  # user: \"\" # User if Basic Auth is enabled for 'http in' node in Node-RED\n  # password: \"\" # Password if Basic Auth is enabled for 'http in' node in Node-RED\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n",
                    "rendered": {
                      "text": "nodered:\n  # address: \"\" # Node-RED address, if not empty, Node-RED output is enabled\n  # user: \"\" # User if Basic Auth is enabled for 'http in' node in Node-RED\n  # password: \"\" # Password if Basic Auth is enabled for 'http in' node in Node-RED\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n",
                      "markdown": "`nodered:\n  # address: \"\" # Node-RED address, if not empty, Node-RED output is enabled\n  # user: \"\" # User if Basic Auth is enabled for 'http in' node in Node-RED\n  # password: \"\" # Password if Basic Auth is enabled for 'http in' node in Node-RED\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 4,
                  "endLine": 255,
                  "endColumn": 12,
                  "snippet": {
                    "text": "nodered:\n  # address: \"\" # Node-RED address, if not empty, Node-RED output is enabled\n  # user: \"\" # User if Basic Auth is enabled for 'http in' node in Node-RED\n  # password: \"\" # Password if Basic Auth is enabled for 'http in' node in Node-RED\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n",
                    "rendered": {
                      "text": "nodered:\n  # address: \"\" # Node-RED address, if not empty, Node-RED output is enabled\n  # user: \"\" # User if Basic Auth is enabled for 'http in' node in Node-RED\n  # password: \"\" # Password if Basic Auth is enabled for 'http in' node in Node-RED\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n",
                      "markdown": "`nodered:\n  # address: \"\" # Node-RED address, if not empty, Node-RED output is enabled\n  # user: \"\" # User if Basic Auth is enabled for 'http in' node in Node-RED\n  # password: \"\" # Password if Basic Auth is enabled for 'http in' node in Node-RED\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 216,
                  "startColumn": 19,
                  "endLine": 216,
                  "endColumn": 27,
                  "snippet": {
                    "text": "  # tls: false # Use TLS connection (true/false). Default: true\n  # authmechanism: \"plain\" # SASL Mechanisms : plain, oauthbearer, external, anonymous or none (disable SASL). Default: plain\n  # user: \"\" # user for Plain Mechanism\n  # password: \"\" # password for Plain Mechanism\n  # token: \"\" # OAuthBearer token for OAuthBearer Mechanism\n  # identity: \"\" # identity string for Plain and External Mechanisms\n  # trace: \"\" trace string for Anonymous Mechanism\n",
                    "rendered": {
                      "text": "  # tls: false # Use TLS connection (true/false). Default: true\n  # authmechanism: \"plain\" # SASL Mechanisms : plain, oauthbearer, external, anonymous or none (disable SASL). Default: plain\n  # user: \"\" # user for Plain Mechanism\n  # password: \"\" # password for Plain Mechanism\n  # token: \"\" # OAuthBearer token for OAuthBearer Mechanism\n  # identity: \"\" # identity string for Plain and External Mechanisms\n  # trace: \"\" trace string for Anonymous Mechanism\n",
                      "markdown": "`  # tls: false # Use TLS connection (true/false). Default: true\n  # authmechanism: \"plain\" # SASL Mechanisms : plain, oauthbearer, external, anonymous or none (disable SASL). Default: plain\n  # user: \"\" # user for Plain Mechanism\n  # password: \"\" # password for Plain Mechanism\n  # token: \"\" # OAuthBearer token for OAuthBearer Mechanism\n  # identity: \"\" # identity string for Plain and External Mechanisms\n  # trace: \"\" trace string for Anonymous Mechanism\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 216,
                  "startColumn": 4,
                  "endLine": 216,
                  "endColumn": 12,
                  "snippet": {
                    "text": "  # tls: false # Use TLS connection (true/false). Default: true\n  # authmechanism: \"plain\" # SASL Mechanisms : plain, oauthbearer, external, anonymous or none (disable SASL). Default: plain\n  # user: \"\" # user for Plain Mechanism\n  # password: \"\" # password for Plain Mechanism\n  # token: \"\" # OAuthBearer token for OAuthBearer Mechanism\n  # identity: \"\" # identity string for Plain and External Mechanisms\n  # trace: \"\" trace string for Anonymous Mechanism\n",
                    "rendered": {
                      "text": "  # tls: false # Use TLS connection (true/false). Default: true\n  # authmechanism: \"plain\" # SASL Mechanisms : plain, oauthbearer, external, anonymous or none (disable SASL). Default: plain\n  # user: \"\" # user for Plain Mechanism\n  # password: \"\" # password for Plain Mechanism\n  # token: \"\" # OAuthBearer token for OAuthBearer Mechanism\n  # identity: \"\" # identity string for Plain and External Mechanisms\n  # trace: \"\" trace string for Anonymous Mechanism\n",
                      "markdown": "`  # tls: false # Use TLS connection (true/false). Default: true\n  # authmechanism: \"plain\" # SASL Mechanisms : plain, oauthbearer, external, anonymous or none (disable SASL). Default: plain\n  # user: \"\" # user for Plain Mechanism\n  # password: \"\" # password for Plain Mechanism\n  # token: \"\" # OAuthBearer token for OAuthBearer Mechanism\n  # identity: \"\" # identity string for Plain and External Mechanisms\n  # trace: \"\" trace string for Anonymous Mechanism\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 83,
                  "endLine": 140,
                  "endColumn": 91,
                  "snippet": {
                    "text": "  # precision: \"ns\" # write precision\n  # user: \"\" # user to use if auth is enabled in Influxdb\n  # password: \"\" # pasword to use if auth is enabled in Influxdb\n  # token: \"\" # API token to use if auth in enabled in Influxdb (disables user and password)\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n",
                    "rendered": {
                      "text": "  # precision: \"ns\" # write precision\n  # user: \"\" # user to use if auth is enabled in Influxdb\n  # password: \"\" # pasword to use if auth is enabled in Influxdb\n  # token: \"\" # API token to use if auth in enabled in Influxdb (disables user and password)\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n",
                      "markdown": "`  # precision: \"ns\" # write precision\n  # user: \"\" # user to use if auth is enabled in Influxdb\n  # password: \"\" # pasword to use if auth is enabled in Influxdb\n  # token: \"\" # API token to use if auth in enabled in Influxdb (disables user and password)\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 4,
                  "endLine": 139,
                  "endColumn": 12,
                  "snippet": {
                    "text": "  # bucket: \"falco\" # bucket (default: falco)\n  # precision: \"ns\" # write precision\n  # user: \"\" # user to use if auth is enabled in Influxdb\n  # password: \"\" # pasword to use if auth is enabled in Influxdb\n  # token: \"\" # API token to use if auth in enabled in Influxdb (disables user and password)\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n",
                    "rendered": {
                      "text": "  # bucket: \"falco\" # bucket (default: falco)\n  # precision: \"ns\" # write precision\n  # user: \"\" # user to use if auth is enabled in Influxdb\n  # password: \"\" # pasword to use if auth is enabled in Influxdb\n  # token: \"\" # API token to use if auth in enabled in Influxdb (disables user and password)\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n",
                      "markdown": "`  # bucket: \"falco\" # bucket (default: falco)\n  # precision: \"ns\" # write precision\n  # user: \"\" # user to use if auth is enabled in Influxdb\n  # password: \"\" # pasword to use if auth is enabled in Influxdb\n  # token: \"\" # API token to use if auth in enabled in Influxdb (disables user and password)\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 77,
                  "endLine": 106,
                  "endColumn": 85,
                  "snippet": {
                    "text": "e)\n  # apikey: \"\" # use this APIKey to authenticate to Elasticsearch if the APIKey is not empty (default: \"\")\n  # username: \"\" # use this username to authenticate to Elasticsearch if the username is not empty (default: \"\")\n  # password: \"\" # use this password to authenticate to Elasticsearch if the password is not empty (default: \"\")\n  # flattenfields: false # replace . by _ to avoid mapping conflicts, force to true if createindextemplate==true (default: false)\n  # createindextemplate: false # create an index template (default: false)\n  # numberofshards: 3 # number of shards set by the index template ",
                    "rendered": {
                      "text": "e)\n  # apikey: \"\" # use this APIKey to authenticate to Elasticsearch if the APIKey is not empty (default: \"\")\n  # username: \"\" # use this username to authenticate to Elasticsearch if the username is not empty (default: \"\")\n  # password: \"\" # use this password to authenticate to Elasticsearch if the password is not empty (default: \"\")\n  # flattenfields: false # replace . by _ to avoid mapping conflicts, force to true if createindextemplate==true (default: false)\n  # createindextemplate: false # create an index template (default: false)\n  # numberofshards: 3 # number of shards set by the index template ",
                      "markdown": "`e)\n  # apikey: \"\" # use this APIKey to authenticate to Elasticsearch if the APIKey is not empty (default: \"\")\n  # username: \"\" # use this username to authenticate to Elasticsearch if the username is not empty (default: \"\")\n  # password: \"\" # use this password to authenticate to Elasticsearch if the password is not empty (default: \"\")\n  # flattenfields: false # replace . by _ to avoid mapping conflicts, force to true if createindextemplate==true (default: false)\n  # createindextemplate: false # create an index template (default: false)\n  # numberofshards: 3 # number of shards set by the index template `"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 28,
                  "endLine": 106,
                  "endColumn": 36,
                  "snippet": {
                    "text": " certificate of the output is valid (default: true)\n  # apikey: \"\" # use this APIKey to authenticate to Elasticsearch if the APIKey is not empty (default: \"\")\n  # username: \"\" # use this username to authenticate to Elasticsearch if the username is not empty (default: \"\")\n  # password: \"\" # use this password to authenticate to Elasticsearch if the password is not empty (default: \"\")\n  # flattenfields: false # replace . by _ to avoid mapping conflicts, force to true if createindextemplate==true (default: false)\n  # createindextemplate: false # create an index template (default: false)\n  # numberofshards",
                    "rendered": {
                      "text": " certificate of the output is valid (default: true)\n  # apikey: \"\" # use this APIKey to authenticate to Elasticsearch if the APIKey is not empty (default: \"\")\n  # username: \"\" # use this username to authenticate to Elasticsearch if the username is not empty (default: \"\")\n  # password: \"\" # use this password to authenticate to Elasticsearch if the password is not empty (default: \"\")\n  # flattenfields: false # replace . by _ to avoid mapping conflicts, force to true if createindextemplate==true (default: false)\n  # createindextemplate: false # create an index template (default: false)\n  # numberofshards",
                      "markdown": "` certificate of the output is valid (default: true)\n  # apikey: \"\" # use this APIKey to authenticate to Elasticsearch if the APIKey is not empty (default: \"\")\n  # username: \"\" # use this username to authenticate to Elasticsearch if the username is not empty (default: \"\")\n  # password: \"\" # use this password to authenticate to Elasticsearch if the password is not empty (default: \"\")\n  # flattenfields: false # replace . by _ to avoid mapping conflicts, force to true if createindextemplate==true (default: false)\n  # createindextemplate: false # create an index template (default: false)\n  # numberofshards`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 4,
                  "endLine": 106,
                  "endColumn": 12,
                  "snippet": {
                    "text": "ert: true # check if ssl certificate of the output is valid (default: true)\n  # apikey: \"\" # use this APIKey to authenticate to Elasticsearch if the APIKey is not empty (default: \"\")\n  # username: \"\" # use this username to authenticate to Elasticsearch if the username is not empty (default: \"\")\n  # password: \"\" # use this password to authenticate to Elasticsearch if the password is not empty (default: \"\")\n  # flattenfields: false # replace . by _ to avoid mapping conflicts, force to true if createindextemplate==true (default: false)\n  # createindextemplate: false # create an index template (default: f",
                    "rendered": {
                      "text": "ert: true # check if ssl certificate of the output is valid (default: true)\n  # apikey: \"\" # use this APIKey to authenticate to Elasticsearch if the APIKey is not empty (default: \"\")\n  # username: \"\" # use this username to authenticate to Elasticsearch if the username is not empty (default: \"\")\n  # password: \"\" # use this password to authenticate to Elasticsearch if the password is not empty (default: \"\")\n  # flattenfields: false # replace . by _ to avoid mapping conflicts, force to true if createindextemplate==true (default: false)\n  # createindextemplate: false # create an index template (default: f",
                      "markdown": "`ert: true # check if ssl certificate of the output is valid (default: true)\n  # apikey: \"\" # use this APIKey to authenticate to Elasticsearch if the APIKey is not empty (default: \"\")\n  # username: \"\" # use this username to authenticate to Elasticsearch if the username is not empty (default: \"\")\n  # password: \"\" # use this password to authenticate to Elasticsearch if the password is not empty (default: \"\")\n  # flattenfields: false # replace . by _ to avoid mapping conflicts, force to true if createindextemplate==true (default: false)\n  # createindextemplate: false # create an index template (default: f`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 281,
                  "startColumn": 24,
                  "endLine": 281,
                  "endColumn": 30,
                  "snippet": {
                    "text": "  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n\ngcp:\n  credentials: \"\" # The base64-encoded JSON key file for the GCP service account\n  pubsub:\n    projectid: \"\" # The GCP Project ID containing the Pub/Sub Topic\n    topic: \"\" # The name of the Pub/Sub topic\n",
                    "rendered": {
                      "text": "  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n\ngcp:\n  credentials: \"\" # The base64-encoded JSON key file for the GCP service account\n  pubsub:\n    projectid: \"\" # The GCP Project ID containing the Pub/Sub Topic\n    topic: \"\" # The name of the Pub/Sub topic\n",
                      "markdown": "`  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n\ngcp:\n  credentials: \"\" # The base64-encoded JSON key file for the GCP service account\n  pubsub:\n    projectid: \"\" # The GCP Project ID containing the Pub/Sub Topic\n    topic: \"\" # The name of the Pub/Sub topic\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 540,
                  "startColumn": 27,
                  "endLine": 540,
                  "endColumn": 32,
                  "snippet": {
                    "text": "y to all outgoing traces in the form of \"some-key=some-value,other-key=other-value\" (default: \"\")\n    # synced: false # Set to true if you want traces to be sent synchronously (default: false)\n    # duration: 1000 # Artificial span duration in milliseconds (default: 1000)\n    # extraenvvars: # Extra env vars (override the other settings)\n      # OTEL_EXPORTER_OTLP_TRACES_TIMEOUT: 10000\n      # OTEL_EXPORTER_OTLP_TIMEOUT: 10000\n    # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n    # ",
                    "rendered": {
                      "text": "y to all outgoing traces in the form of \"some-key=some-value,other-key=other-value\" (default: \"\")\n    # synced: false # Set to true if you want traces to be sent synchronously (default: false)\n    # duration: 1000 # Artificial span duration in milliseconds (default: 1000)\n    # extraenvvars: # Extra env vars (override the other settings)\n      # OTEL_EXPORTER_OTLP_TRACES_TIMEOUT: 10000\n      # OTEL_EXPORTER_OTLP_TIMEOUT: 10000\n    # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n    # ",
                      "markdown": "`y to all outgoing traces in the form of \"some-key=some-value,other-key=other-value\" (default: \"\")\n    # synced: false # Set to true if you want traces to be sent synchronously (default: false)\n    # duration: 1000 # Artificial span duration in milliseconds (default: 1000)\n    # extraenvvars: # Extra env vars (override the other settings)\n      # OTEL_EXPORTER_OTLP_TRACES_TIMEOUT: 10000\n      # OTEL_EXPORTER_OTLP_TIMEOUT: 10000\n    # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n    # `"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 536,
                  "startColumn": 33,
                  "endLine": 536,
                  "endColumn": 42,
                  "snippet": {
                    "text": "rtificate of the output is valid (default: true)\n\notlp:\n  traces:\n    # endpoint: \"\" # OTLP endpoint in the form of http://{domain or ip}:4318/v1/traces\n    # protocol: \"\" # OTLP protocol http/json, http/protobuf, grpc (default: \"\" which uses SDK default: http/json)\n    # timeout: \"\" # OTLP timeout: timeout value in milliseconds (default: \"\" which uses SDK default: 10000)\n    # headers: \"\" # OTLP headers: list of headers to apply to all outgoing traces in the form of \"some-key=some-value,other-key=other-value\" (default: \"\")\n    # synced: false # Set to true if you want traces to be sent synchronously (",
                    "rendered": {
                      "text": "rtificate of the output is valid (default: true)\n\notlp:\n  traces:\n    # endpoint: \"\" # OTLP endpoint in the form of http://{domain or ip}:4318/v1/traces\n    # protocol: \"\" # OTLP protocol http/json, http/protobuf, grpc (default: \"\" which uses SDK default: http/json)\n    # timeout: \"\" # OTLP timeout: timeout value in milliseconds (default: \"\" which uses SDK default: 10000)\n    # headers: \"\" # OTLP headers: list of headers to apply to all outgoing traces in the form of \"some-key=some-value,other-key=other-value\" (default: \"\")\n    # synced: false # Set to true if you want traces to be sent synchronously (",
                      "markdown": "`rtificate of the output is valid (default: true)\n\notlp:\n  traces:\n    # endpoint: \"\" # OTLP endpoint in the form of http://{domain or ip}:4318/v1/traces\n    # protocol: \"\" # OTLP protocol http/json, http/protobuf, grpc (default: \"\" which uses SDK default: http/json)\n    # timeout: \"\" # OTLP timeout: timeout value in milliseconds (default: \"\" which uses SDK default: 10000)\n    # headers: \"\" # OTLP headers: list of headers to apply to all outgoing traces in the form of \"some-key=some-value,other-key=other-value\" (default: \"\")\n    # synced: false # Set to true if you want traces to be sent synchronously (`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 403,
                  "startColumn": 26,
                  "endLine": 403,
                  "endColumn": 35,
                  "snippet": {
                    "text": "ot empty, WebUI output is enabled\n\nfission:\n  function: \"\" # Name of Fission function, if not empty, Fission is enabled\n  routernamespace: \"fission\" # Namespace of Fission Router, \"fission\" (default)\n  routerservice: \"router\" # Service of Fission Router, \"router\" (default)\n  routerport: 80 # Port of service of Fission Router\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # mutualtls: false # if",
                    "rendered": {
                      "text": "ot empty, WebUI output is enabled\n\nfission:\n  function: \"\" # Name of Fission function, if not empty, Fission is enabled\n  routernamespace: \"fission\" # Namespace of Fission Router, \"fission\" (default)\n  routerservice: \"router\" # Service of Fission Router, \"router\" (default)\n  routerport: 80 # Port of service of Fission Router\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # mutualtls: false # if",
                      "markdown": "`ot empty, WebUI output is enabled\n\nfission:\n  function: \"\" # Name of Fission function, if not empty, Fission is enabled\n  routernamespace: \"fission\" # Namespace of Fission Router, \"fission\" (default)\n  routerservice: \"router\" # Service of Fission Router, \"router\" (default)\n  routerport: 80 # Port of service of Fission Router\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # mutualtls: false # if`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 402,
                  "startColumn": 27,
                  "endLine": 402,
                  "endColumn": 36,
                  "snippet": {
                    "text": "fission:\n  function: \"\" # Name of Fission function, if not empty, Fission is enabled\n  routernamespace: \"fission\" # Namespace of Fission Router, \"fission\" (default)\n  routerservice: \"router\" # Service of Fission Router, \"router\" (default)\n  routerport: 80 # Port of service of Fission Router\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n",
                    "rendered": {
                      "text": "fission:\n  function: \"\" # Name of Fission function, if not empty, Fission is enabled\n  routernamespace: \"fission\" # Namespace of Fission Router, \"fission\" (default)\n  routerservice: \"router\" # Service of Fission Router, \"router\" (default)\n  routerport: 80 # Port of service of Fission Router\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n",
                      "markdown": "`fission:\n  function: \"\" # Name of Fission function, if not empty, Fission is enabled\n  routernamespace: \"fission\" # Namespace of Fission Router, \"fission\" (default)\n  routerservice: \"router\" # Service of Fission Router, \"router\" (default)\n  routerport: 80 # Port of service of Fission Router\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 354,
                  "startColumn": 29,
                  "endLine": 354,
                  "endColumn": 38,
                  "snippet": {
                    "text": "true)\n\nopenfaas:\n  functionname: \"\" # Name of OpenFaaS function, if not empty, OpenFaaS is enabled\n  functionnamespace: \"openfaas-fn\" # Namespace of OpenFaaS function, \"openfaas-fn\" (default)\n  gatewayservice: \"gateway\" # Service of OpenFaaS Gateway, \"gateway\" (default)\n  gatewayport: 8080 # Port of service of OpenFaaS Gateway\n  gatewaynamespace: \"openfaas\" # Namespace of OpenFaaS Gateway, \"openfaas\" (default)\n  kubeconfig: \"~/.kube/config\" # Kubeconfig file to use (only if falcosidekick is running outside the cluster)\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, orde",
                    "rendered": {
                      "text": "true)\n\nopenfaas:\n  functionname: \"\" # Name of OpenFaaS function, if not empty, OpenFaaS is enabled\n  functionnamespace: \"openfaas-fn\" # Namespace of OpenFaaS function, \"openfaas-fn\" (default)\n  gatewayservice: \"gateway\" # Service of OpenFaaS Gateway, \"gateway\" (default)\n  gatewayport: 8080 # Port of service of OpenFaaS Gateway\n  gatewaynamespace: \"openfaas\" # Namespace of OpenFaaS Gateway, \"openfaas\" (default)\n  kubeconfig: \"~/.kube/config\" # Kubeconfig file to use (only if falcosidekick is running outside the cluster)\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, orde",
                      "markdown": "`true)\n\nopenfaas:\n  functionname: \"\" # Name of OpenFaaS function, if not empty, OpenFaaS is enabled\n  functionnamespace: \"openfaas-fn\" # Namespace of OpenFaaS function, \"openfaas-fn\" (default)\n  gatewayservice: \"gateway\" # Service of OpenFaaS Gateway, \"gateway\" (default)\n  gatewayport: 8080 # Port of service of OpenFaaS Gateway\n  gatewaynamespace: \"openfaas\" # Namespace of OpenFaaS Gateway, \"openfaas\" (default)\n  kubeconfig: \"~/.kube/config\" # Kubeconfig file to use (only if falcosidekick is running outside the cluster)\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, orde`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 353,
                  "startColumn": 29,
                  "endLine": 353,
                  "endColumn": 38,
                  "snippet": {
                    "text": "openfaas:\n  functionname: \"\" # Name of OpenFaaS function, if not empty, OpenFaaS is enabled\n  functionnamespace: \"openfaas-fn\" # Namespace of OpenFaaS function, \"openfaas-fn\" (default)\n  gatewayservice: \"gateway\" # Service of OpenFaaS Gateway, \"gateway\" (default)\n  gatewayport: 8080 # Port of service of OpenFaaS Gateway\n  gatewaynamespace: \"openfaas\" # Namespace of OpenFaaS Gateway, \"openfaas\" (default)\n  kubeconfig: \"~/.kube/config\" # Kubeconfig file to use (only if falcosidekick is running outside the cluster)\n",
                    "rendered": {
                      "text": "openfaas:\n  functionname: \"\" # Name of OpenFaaS function, if not empty, OpenFaaS is enabled\n  functionnamespace: \"openfaas-fn\" # Namespace of OpenFaaS function, \"openfaas-fn\" (default)\n  gatewayservice: \"gateway\" # Service of OpenFaaS Gateway, \"gateway\" (default)\n  gatewayport: 8080 # Port of service of OpenFaaS Gateway\n  gatewaynamespace: \"openfaas\" # Namespace of OpenFaaS Gateway, \"openfaas\" (default)\n  kubeconfig: \"~/.kube/config\" # Kubeconfig file to use (only if falcosidekick is running outside the cluster)\n",
                      "markdown": "`openfaas:\n  functionname: \"\" # Name of OpenFaaS function, if not empty, OpenFaaS is enabled\n  functionnamespace: \"openfaas-fn\" # Namespace of OpenFaaS function, \"openfaas-fn\" (default)\n  gatewayservice: \"gateway\" # Service of OpenFaaS Gateway, \"gateway\" (default)\n  gatewayport: 8080 # Port of service of OpenFaaS Gateway\n  gatewaynamespace: \"openfaas\" # Namespace of OpenFaaS Gateway, \"openfaas\" (default)\n  kubeconfig: \"~/.kube/config\" # Kubeconfig file to use (only if falcosidekick is running outside the cluster)\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 344,
                  "startColumn": 22,
                  "endLine": 344,
                  "endColumn": 31,
                  "snippet": {
                    "text": "kubeless:\n  function: \"\" # Name of Kubeless function, if not empty, Kubeless is enabled\n  namespace: \"\" # Namespace of Kubeless function (mandatory)\n  port: 8080 # Port of service of Kubeless function\n  kubeconfig: \"~/.kube/config\" # Kubeconfig file to use (only if falcoside is running outside the cluster)\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n",
                    "rendered": {
                      "text": "kubeless:\n  function: \"\" # Name of Kubeless function, if not empty, Kubeless is enabled\n  namespace: \"\" # Namespace of Kubeless function (mandatory)\n  port: 8080 # Port of service of Kubeless function\n  kubeconfig: \"~/.kube/config\" # Kubeconfig file to use (only if falcoside is running outside the cluster)\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n",
                      "markdown": "`kubeless:\n  function: \"\" # Name of Kubeless function, if not empty, Kubeless is enabled\n  namespace: \"\" # Namespace of Kubeless function (mandatory)\n  port: 8080 # Port of service of Kubeless function\n  kubeconfig: \"~/.kube/config\" # Kubeconfig file to use (only if falcoside is running outside the cluster)\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 281,
                  "startColumn": 64,
                  "endLine": 281,
                  "endColumn": 73,
                  "snippet": {
                    "text": "  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n\ngcp:\n  credentials: \"\" # The base64-encoded JSON key file for the GCP service account\n  pubsub:\n    projectid: \"\" # The GCP Project ID containing the Pub/Sub Topic\n    topic: \"\" # The name of the Pub/Sub topic\n",
                    "rendered": {
                      "text": "  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n\ngcp:\n  credentials: \"\" # The base64-encoded JSON key file for the GCP service account\n  pubsub:\n    projectid: \"\" # The GCP Project ID containing the Pub/Sub Topic\n    topic: \"\" # The name of the Pub/Sub topic\n",
                      "markdown": "`  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n\ngcp:\n  credentials: \"\" # The base64-encoded JSON key file for the GCP service account\n  pubsub:\n    projectid: \"\" # The GCP Project ID containing the Pub/Sub Topic\n    topic: \"\" # The name of the Pub/Sub topic\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 66,
                  "endLine": 255,
                  "endColumn": 72,
                  "snippet": {
                    "text": "nodered:\n  # address: \"\" # Node-RED address, if not empty, Node-RED output is enabled\n  # user: \"\" # User if Basic Auth is enabled for 'http in' node in Node-RED\n  # password: \"\" # Password if Basic Auth is enabled for 'http in' node in Node-RED\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n",
                    "rendered": {
                      "text": "nodered:\n  # address: \"\" # Node-RED address, if not empty, Node-RED output is enabled\n  # user: \"\" # User if Basic Auth is enabled for 'http in' node in Node-RED\n  # password: \"\" # Password if Basic Auth is enabled for 'http in' node in Node-RED\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n",
                      "markdown": "`nodered:\n  # address: \"\" # Node-RED address, if not empty, Node-RED output is enabled\n  # user: \"\" # User if Basic Auth is enabled for 'http in' node in Node-RED\n  # password: \"\" # Password if Basic Auth is enabled for 'http in' node in Node-RED\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 58,
                  "endLine": 254,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\nnodered:\n  # address: \"\" # Node-RED address, if not empty, Node-RED output is enabled\n  # user: \"\" # User if Basic Auth is enabled for 'http in' node in Node-RED\n  # password: \"\" # Password if Basic Auth is enabled for 'http in' node in Node-RED\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n",
                    "rendered": {
                      "text": "\nnodered:\n  # address: \"\" # Node-RED address, if not empty, Node-RED output is enabled\n  # user: \"\" # User if Basic Auth is enabled for 'http in' node in Node-RED\n  # password: \"\" # Password if Basic Auth is enabled for 'http in' node in Node-RED\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n",
                      "markdown": "`\nnodered:\n  # address: \"\" # Node-RED address, if not empty, Node-RED output is enabled\n  # user: \"\" # User if Basic Auth is enabled for 'http in' node in Node-RED\n  # password: \"\" # Password if Basic Auth is enabled for 'http in' node in Node-RED\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 204,
                  "startColumn": 17,
                  "endLine": 204,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    # region: \"\" # Bucket Region  (mandatory)\n    # prefix: \"\" # Prefix for keys  (mandatory)\n    # accountid: \"\" # Account ID  (mandatory)\n    interval: 5 # Time in minutes between two puts to S3 (must be between 5 and 60min) (default: 5min)\n    batchsize: 1000 # Max number of events by parquet file (default: 1000)\n    # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n  kinesis:\n",
                    "rendered": {
                      "text": "    # region: \"\" # Bucket Region  (mandatory)\n    # prefix: \"\" # Prefix for keys  (mandatory)\n    # accountid: \"\" # Account ID  (mandatory)\n    interval: 5 # Time in minutes between two puts to S3 (must be between 5 and 60min) (default: 5min)\n    batchsize: 1000 # Max number of events by parquet file (default: 1000)\n    # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n  kinesis:\n",
                      "markdown": "`    # region: \"\" # Bucket Region  (mandatory)\n    # prefix: \"\" # Prefix for keys  (mandatory)\n    # accountid: \"\" # Account ID  (mandatory)\n    interval: 5 # Time in minutes between two puts to S3 (must be between 5 and 60min) (default: 5min)\n    batchsize: 1000 # Max number of events by parquet file (default: 1000)\n    # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n  kinesis:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 73,
                  "endLine": 86,
                  "endColumn": 79,
                  "snippet": {
                    "text": "ys be checked)\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # endpoint: \"\" # alertmanager endpoint for posting alerts: \"/api/v1/alerts\" or \"/api/v2/alerts\" (default: \"/api/v1/alerts\")\n  # expiresafter: \"\" if set to a non-zero value, alert expires after that time in seconds (default: 0)\n  # extralabels: \"\" # comma separated list of labels composed of a ':' separated name and value that is added to the Alerts. Example: my_label_1:my_value_1, my_label_1:my_value_2\n  # extraannotations: \"\" # comma separated list of annotations composed of a ':' separated name a",
                    "rendered": {
                      "text": "ys be checked)\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # endpoint: \"\" # alertmanager endpoint for posting alerts: \"/api/v1/alerts\" or \"/api/v2/alerts\" (default: \"/api/v1/alerts\")\n  # expiresafter: \"\" if set to a non-zero value, alert expires after that time in seconds (default: 0)\n  # extralabels: \"\" # comma separated list of labels composed of a ':' separated name and value that is added to the Alerts. Example: my_label_1:my_value_1, my_label_1:my_value_2\n  # extraannotations: \"\" # comma separated list of annotations composed of a ':' separated name a",
                      "markdown": "`ys be checked)\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # endpoint: \"\" # alertmanager endpoint for posting alerts: \"/api/v1/alerts\" or \"/api/v2/alerts\" (default: \"/api/v1/alerts\")\n  # expiresafter: \"\" if set to a non-zero value, alert expires after that time in seconds (default: 0)\n  # extralabels: \"\" # comma separated list of labels composed of a ':' separated name and value that is added to the Alerts. Example: my_label_1:my_value_1, my_label_1:my_value_2\n  # extraannotations: \"\" # comma separated list of annotations composed of a ':' separated name a`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 96,
                  "endLine": 11,
                  "endColumn": 101,
                  "snippet": {
                    "text": "templatedfields: # templated fields are added to falco events and metrics, it uses Go template + output_fields values\n  # Dkey: '{{ or (index . \"k8s.ns.labels.foo\") \"bar\" }}'\n# bracketreplacer: \"_\" # if not empty, the brackets in keys of Output Fields are replaced\ncustomtags: # custom tags are added to the falco events, if the value starts with % the relative env var is used\n  - tagA\n  - tagB\noutputFieldFormat: \"<timestamp>: <priority> <output> <custom_fields> <templated_fields>\" # if not empty, allow to change the format of the output field. (default: \"<timestamp>: <priority> <output>\")\n",
                    "rendered": {
                      "text": "templatedfields: # templated fields are added to falco events and metrics, it uses Go template + output_fields values\n  # Dkey: '{{ or (index . \"k8s.ns.labels.foo\") \"bar\" }}'\n# bracketreplacer: \"_\" # if not empty, the brackets in keys of Output Fields are replaced\ncustomtags: # custom tags are added to the falco events, if the value starts with % the relative env var is used\n  - tagA\n  - tagB\noutputFieldFormat: \"<timestamp>: <priority> <output> <custom_fields> <templated_fields>\" # if not empty, allow to change the format of the output field. (default: \"<timestamp>: <priority> <output>\")\n",
                      "markdown": "`templatedfields: # templated fields are added to falco events and metrics, it uses Go template + output_fields values\n  # Dkey: '{{ or (index . \"k8s.ns.labels.foo\") \"bar\" }}'\n# bracketreplacer: \"_\" # if not empty, the brackets in keys of Output Fields are replaced\ncustomtags: # custom tags are added to the falco events, if the value starts with % the relative env var is used\n  - tagA\n  - tagB\noutputFieldFormat: \"<timestamp>: <priority> <output> <custom_fields> <templated_fields>\" # if not empty, allow to change the format of the output field. (default: \"<timestamp>: <priority> <output>\")\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 108,
                  "endLine": 4,
                  "endColumn": 113,
                  "snippet": {
                    "text": "#listenaddress: \"\" # ip address to bind falcosidekick to (default: \"\" meaning all addresses)\n#listenport: 2801 # port to listen for daemon (default: 2801)\ndebug: false # if true all outputs will print in stdout the payload they send (default: false)\ncustomfields: # custom fields are added to falco events and metrics, if the value starts with % the relative env var is used\n  Akey: \"AValue\"\n  Bkey: \"BValue\"\n  Ckey: \"CValue\"\n",
                    "rendered": {
                      "text": "#listenaddress: \"\" # ip address to bind falcosidekick to (default: \"\" meaning all addresses)\n#listenport: 2801 # port to listen for daemon (default: 2801)\ndebug: false # if true all outputs will print in stdout the payload they send (default: false)\ncustomfields: # custom fields are added to falco events and metrics, if the value starts with % the relative env var is used\n  Akey: \"AValue\"\n  Bkey: \"BValue\"\n  Ckey: \"CValue\"\n",
                      "markdown": "`#listenaddress: \"\" # ip address to bind falcosidekick to (default: \"\" meaning all addresses)\n#listenport: 2801 # port to listen for daemon (default: 2801)\ndebug: false # if true all outputs will print in stdout the payload they send (default: false)\ncustomfields: # custom fields are added to falco events and metrics, if the value starts with % the relative env var is used\n  Akey: \"AValue\"\n  Bkey: \"BValue\"\n  Ckey: \"CValue\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config_example.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 20,
                  "endLine": 1,
                  "endColumn": 24,
                  "snippet": {
                    "text": "#listenaddress: \"\" # ip address to bind falcosidekick to (default: \"\" meaning all addresses)\n#listenport: 2801 # port to listen for daemon (default: 2801)\ndebug: false # if true all outputs will print in stdout the payload they send (default: false)\ncustomfields: # custom fields are added to falco events and metrics, if the value starts with % the relative env var is used\n",
                    "rendered": {
                      "text": "#listenaddress: \"\" # ip address to bind falcosidekick to (default: \"\" meaning all addresses)\n#listenport: 2801 # port to listen for daemon (default: 2801)\ndebug: false # if true all outputs will print in stdout the payload they send (default: false)\ncustomfields: # custom fields are added to falco events and metrics, if the value starts with % the relative env var is used\n",
                      "markdown": "`#listenaddress: \"\" # ip address to bind falcosidekick to (default: \"\" meaning all addresses)\n#listenport: 2801 # port to listen for daemon (default: 2801)\ndebug: false # if true all outputs will print in stdout the payload they send (default: false)\ncustomfields: # custom fields are added to falco events and metrics, if the value starts with % the relative env var is used\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.goreleaser.yml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 45,
                  "endLine": 22,
                  "endColumn": 51,
                  "snippet": {
                    "text": "before:\n  hooks:\n    - go mod tidy\n    - /bin/bash -c 'if [ -n \"$(git --no-pager diff --exit-code go.mod go.sum)\" ]; then exit 1; fi'\n\n# gomod:\n#   proxy: true\n",
                    "rendered": {
                      "text": "before:\n  hooks:\n    - go mod tidy\n    - /bin/bash -c 'if [ -n \"$(git --no-pager diff --exit-code go.mod go.sum)\" ]; then exit 1; fi'\n\n# gomod:\n#   proxy: true\n",
                      "markdown": "`before:\n  hooks:\n    - go mod tidy\n    - /bin/bash -c 'if [ -n \"$(git --no-pager diff --exit-code go.mod go.sum)\" ]; then exit 1; fi'\n\n# gomod:\n#   proxy: true\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/Dockerfile"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 7,
                  "endLine": 2,
                  "endColumn": 15,
                  "snippet": {
                    "text": "ARG BASE_IMAGE=alpine:3.19\n# Final Docker image\nFROM ${BASE_IMAGE} AS final-stage\nLABEL MAINTAINER \"Thomas Labarussias <issif+falcosidekick@gadz.org>\"\n\n",
                    "rendered": {
                      "text": "ARG BASE_IMAGE=alpine:3.19\n# Final Docker image\nFROM ${BASE_IMAGE} AS final-stage\nLABEL MAINTAINER \"Thomas Labarussias <issif+falcosidekick@gadz.org>\"\n\n",
                      "markdown": "`ARG BASE_IMAGE=alpine:3.19\n# Final Docker image\nFROM ${BASE_IMAGE} AS final-stage\nLABEL MAINTAINER \"Thomas Labarussias <issif+falcosidekick@gadz.org>\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/teams_test.go"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 14,
                  "endLine": 39,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\t\t\t\t\tValue: \"syscalls\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tName:  \"hostname\",\n\t\t\t\t\t\tValue: \"test-host\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n",
                    "rendered": {
                      "text": "\t\t\t\t\t\tValue: \"syscalls\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tName:  \"hostname\",\n\t\t\t\t\t\tValue: \"test-host\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n",
                      "markdown": "`\t\t\t\t\t\tValue: \"syscalls\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tName:  \"hostname\",\n\t\t\t\t\t\tValue: \"test-host\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/webex.go"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 9,
                  "endLine": 57,
                  "endColumn": 15,
                  "snippet": {
                    "text": "func (c *Client) WebexPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Webex.Add(Total, 1)\n\n\terr := c.Post(newWebexPayload(falcopayload))\n\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:webex\", \"status:error\"})\n",
                    "rendered": {
                      "text": "func (c *Client) WebexPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Webex.Add(Total, 1)\n\n\terr := c.Post(newWebexPayload(falcopayload))\n\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:webex\", \"status:error\"})\n",
                      "markdown": "`func (c *Client) WebexPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Webex.Add(Total, 1)\n\n\terr := c.Post(newWebexPayload(falcopayload))\n\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:webex\", \"status:error\"})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/telegram.go"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 9,
                  "endLine": 84,
                  "endColumn": 15,
                  "snippet": {
                    "text": "func (c *Client) TelegramPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Telegram.Add(Total, 1)\n\n\terr := c.Post(newTelegramPayload(falcopayload, c.Config))\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:telegram\", \"status:error\"})\n\t\tc.Stats.Telegram.Add(Error, 1)\n",
                    "rendered": {
                      "text": "func (c *Client) TelegramPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Telegram.Add(Total, 1)\n\n\terr := c.Post(newTelegramPayload(falcopayload, c.Config))\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:telegram\", \"status:error\"})\n\t\tc.Stats.Telegram.Add(Error, 1)\n",
                      "markdown": "`func (c *Client) TelegramPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Telegram.Add(Total, 1)\n\n\terr := c.Post(newTelegramPayload(falcopayload, c.Config))\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:telegram\", \"status:error\"})\n\t\tc.Stats.Telegram.Add(Error, 1)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/kafka.go"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 92,
                  "endLine": 64,
                  "endColumn": 100,
                  "snippet": {
                    "text": "\t\t\tcase \"SHA256\":\n\t\t\t\ttransport.SASL, err = scram.Mechanism(scram.SHA256, config.Kafka.Username, config.Kafka.Password)\n\t\t\tcase \"SHA512\":\n\t\t\t\ttransport.SASL, err = scram.Mechanism(scram.SHA512, config.Kafka.Username, config.Kafka.Password)\n\t\t\tdefault:\n\t\t\t\terr = fmt.Errorf(\"unsupported SASL SCRAM algorithm %q\", algo)\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\tcase \"SHA256\":\n\t\t\t\ttransport.SASL, err = scram.Mechanism(scram.SHA256, config.Kafka.Username, config.Kafka.Password)\n\t\t\tcase \"SHA512\":\n\t\t\t\ttransport.SASL, err = scram.Mechanism(scram.SHA512, config.Kafka.Username, config.Kafka.Password)\n\t\t\tdefault:\n\t\t\t\terr = fmt.Errorf(\"unsupported SASL SCRAM algorithm %q\", algo)\n\t\t\t}\n",
                      "markdown": "`\t\t\tcase \"SHA256\":\n\t\t\t\ttransport.SASL, err = scram.Mechanism(scram.SHA256, config.Kafka.Username, config.Kafka.Password)\n\t\t\tcase \"SHA512\":\n\t\t\t\ttransport.SASL, err = scram.Mechanism(scram.SHA512, config.Kafka.Username, config.Kafka.Password)\n\t\t\tdefault:\n\t\t\t\terr = fmt.Errorf(\"unsupported SASL SCRAM algorithm %q\", algo)\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/kafka.go"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 92,
                  "endLine": 62,
                  "endColumn": 100,
                  "snippet": {
                    "text": "\t\t\talgo := strings.TrimPrefix(config.Kafka.SASL, \"SCRAM_\")\n\t\t\tswitch algo {\n\t\t\tcase \"SHA256\":\n\t\t\t\ttransport.SASL, err = scram.Mechanism(scram.SHA256, config.Kafka.Username, config.Kafka.Password)\n\t\t\tcase \"SHA512\":\n\t\t\t\ttransport.SASL, err = scram.Mechanism(scram.SHA512, config.Kafka.Username, config.Kafka.Password)\n\t\t\tdefault:\n",
                    "rendered": {
                      "text": "\t\t\talgo := strings.TrimPrefix(config.Kafka.SASL, \"SCRAM_\")\n\t\t\tswitch algo {\n\t\t\tcase \"SHA256\":\n\t\t\t\ttransport.SASL, err = scram.Mechanism(scram.SHA256, config.Kafka.Username, config.Kafka.Password)\n\t\t\tcase \"SHA512\":\n\t\t\t\ttransport.SASL, err = scram.Mechanism(scram.SHA512, config.Kafka.Username, config.Kafka.Password)\n\t\t\tdefault:\n",
                      "markdown": "`\t\t\talgo := strings.TrimPrefix(config.Kafka.SASL, \"SCRAM_\")\n\t\t\tswitch algo {\n\t\t\tcase \"SHA256\":\n\t\t\t\ttransport.SASL, err = scram.Mechanism(scram.SHA256, config.Kafka.Username, config.Kafka.Password)\n\t\t\tcase \"SHA512\":\n\t\t\t\ttransport.SASL, err = scram.Mechanism(scram.SHA512, config.Kafka.Username, config.Kafka.Password)\n\t\t\tdefault:\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/kafka.go"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 27,
                  "endLine": 56,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\t\tcase saslMode == \"PLAIN\":\n\t\t\ttransport.SASL = plain.Mechanism{\n\t\t\t\tUsername: config.Kafka.Username,\n\t\t\t\tPassword: config.Kafka.Password,\n\t\t\t}\n\t\tcase strings.HasPrefix(saslMode, \"SCRAM_\"):\n\t\t\talgo := strings.TrimPrefix(config.Kafka.SASL, \"SCRAM_\")\n",
                    "rendered": {
                      "text": "\t\tcase saslMode == \"PLAIN\":\n\t\t\ttransport.SASL = plain.Mechanism{\n\t\t\t\tUsername: config.Kafka.Username,\n\t\t\t\tPassword: config.Kafka.Password,\n\t\t\t}\n\t\tcase strings.HasPrefix(saslMode, \"SCRAM_\"):\n\t\t\talgo := strings.TrimPrefix(config.Kafka.SASL, \"SCRAM_\")\n",
                      "markdown": "`\t\tcase saslMode == \"PLAIN\":\n\t\t\ttransport.SASL = plain.Mechanism{\n\t\t\t\tUsername: config.Kafka.Username,\n\t\t\t\tPassword: config.Kafka.Password,\n\t\t\t}\n\t\tcase strings.HasPrefix(saslMode, \"SCRAM_\"):\n\t\t\talgo := strings.TrimPrefix(config.Kafka.SASL, \"SCRAM_\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/kafka.go"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 4,
                  "endLine": 56,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\tcase saslMode == \"PLAIN\":\n\t\t\ttransport.SASL = plain.Mechanism{\n\t\t\t\tUsername: config.Kafka.Username,\n\t\t\t\tPassword: config.Kafka.Password,\n\t\t\t}\n\t\tcase strings.HasPrefix(saslMode, \"SCRAM_\"):\n\t\t\talgo := strings.TrimPrefix(config.Kafka.SASL, \"SCRAM_\")\n",
                    "rendered": {
                      "text": "\t\tcase saslMode == \"PLAIN\":\n\t\t\ttransport.SASL = plain.Mechanism{\n\t\t\t\tUsername: config.Kafka.Username,\n\t\t\t\tPassword: config.Kafka.Password,\n\t\t\t}\n\t\tcase strings.HasPrefix(saslMode, \"SCRAM_\"):\n\t\t\talgo := strings.TrimPrefix(config.Kafka.SASL, \"SCRAM_\")\n",
                      "markdown": "`\t\tcase saslMode == \"PLAIN\":\n\t\t\ttransport.SASL = plain.Mechanism{\n\t\t\t\tUsername: config.Kafka.Username,\n\t\t\t\tPassword: config.Kafka.Password,\n\t\t\t}\n\t\tcase strings.HasPrefix(saslMode, \"SCRAM_\"):\n\t\t\talgo := strings.TrimPrefix(config.Kafka.SASL, \"SCRAM_\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/quickwit.go"
                },
                "region": {
                  "startLine": 166,
                  "startColumn": 9,
                  "endLine": 166,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\t\tlog.Printf(\"[DEBUG] : Quickwit - ingesting payload: %v\\n\", falcopayload)\n\t}\n\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tfor i, j := range c.Config.Quickwit.CustomHeaders {\n\t\t\treq.Header.Set(i, j)\n\t\t}\n",
                    "rendered": {
                      "text": "\t\tlog.Printf(\"[DEBUG] : Quickwit - ingesting payload: %v\\n\", falcopayload)\n\t}\n\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tfor i, j := range c.Config.Quickwit.CustomHeaders {\n\t\t\treq.Header.Set(i, j)\n\t\t}\n",
                      "markdown": "`\t\tlog.Printf(\"[DEBUG] : Quickwit - ingesting payload: %v\\n\", falcopayload)\n\t}\n\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tfor i, j := range c.Config.Quickwit.CustomHeaders {\n\t\t\treq.Header.Set(i, j)\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/quickwit.go"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 25,
                  "endLine": 149,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\t\tlog.Printf(\"[DEBUG] : Quickwit - mapping: %#v\\n\", mapping)\n\t}\n\n\terr = quickwitInitClient.Post(mapping)\n\n\t// This error means it's an http 400 (meaning the index already exists, so no need to throw an error)\n\tif err != nil && err.Error() == \"header missing\" {\n",
                    "rendered": {
                      "text": "\t\tlog.Printf(\"[DEBUG] : Quickwit - mapping: %#v\\n\", mapping)\n\t}\n\n\terr = quickwitInitClient.Post(mapping)\n\n\t// This error means it's an http 400 (meaning the index already exists, so no need to throw an error)\n\tif err != nil && err.Error() == \"header missing\" {\n",
                      "markdown": "`\t\tlog.Printf(\"[DEBUG] : Quickwit - mapping: %#v\\n\", mapping)\n\t}\n\n\terr = quickwitInitClient.Post(mapping)\n\n\t// This error means it's an http 400 (meaning the index already exists, so no need to throw an error)\n\tif err != nil && err.Error() == \"header missing\" {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/quickwit.go"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 30,
                  "endLine": 57,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\t\treturn false\n\t}\n\n\tif nil != quickwitCheckClient.Get() {\n\t\treturn false\n\t}\n\n",
                    "rendered": {
                      "text": "\t\treturn false\n\t}\n\n\tif nil != quickwitCheckClient.Get() {\n\t\treturn false\n\t}\n\n",
                      "markdown": "`\t\treturn false\n\t}\n\n\tif nil != quickwitCheckClient.Get() {\n\t\treturn false\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/quickwit.go"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 74,
                  "endLine": 141,
                  "endColumn": 82,
                  "snippet": {
                    "text": "\t\t\t},\n\t\t},\n\t\tSearchSettings: QuickwitSearchSettings{\n\t\t\tDefaultSearchFields: []string{\"rule\", \"source\", \"output\", \"priority\", \"hostname\", \"tags\"},\n\t\t},\n\t}\n\n",
                    "rendered": {
                      "text": "\t\t\t},\n\t\t},\n\t\tSearchSettings: QuickwitSearchSettings{\n\t\t\tDefaultSearchFields: []string{\"rule\", \"source\", \"output\", \"priority\", \"hostname\", \"tags\"},\n\t\t},\n\t}\n\n",
                      "markdown": "`\t\t\t},\n\t\t},\n\t\tSearchSettings: QuickwitSearchSettings{\n\t\t\tDefaultSearchFields: []string{\"rule\", \"source\", \"output\", \"priority\", \"hostname\", \"tags\"},\n\t\t},\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/quickwit.go"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 12,
                  "endLine": 105,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t\t\t\tFast: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tName: \"hostname\",\n\t\t\t\t\tType: \"text\",\n\t\t\t\t\tFast: true,\n\t\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\t\t\tFast: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tName: \"hostname\",\n\t\t\t\t\tType: \"text\",\n\t\t\t\t\tFast: true,\n\t\t\t\t},\n",
                      "markdown": "`\t\t\t\t\tFast: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tName: \"hostname\",\n\t\t\t\t\tType: \"text\",\n\t\t\t\t\tFast: true,\n\t\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/discord.go"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 9,
                  "endLine": 103,
                  "endColumn": 15,
                  "snippet": {
                    "text": "func (c *Client) DiscordPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Discord.Add(Total, 1)\n\n\terr := c.Post(newDiscordPayload(falcopayload, c.Config))\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:discord\", \"status:error\"})\n\t\tc.Stats.Discord.Add(Error, 1)\n",
                    "rendered": {
                      "text": "func (c *Client) DiscordPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Discord.Add(Total, 1)\n\n\terr := c.Post(newDiscordPayload(falcopayload, c.Config))\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:discord\", \"status:error\"})\n\t\tc.Stats.Discord.Add(Error, 1)\n",
                      "markdown": "`func (c *Client) DiscordPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Discord.Add(Total, 1)\n\n\terr := c.Post(newDiscordPayload(falcopayload, c.Config))\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:discord\", \"status:error\"})\n\t\tc.Stats.Discord.Add(Error, 1)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/discord.go"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 23,
                  "endLine": 46,
                  "snippet": {
                    "text": "\tvar color string\n\tswitch falcopayload.Priority {\n\tcase types.Emergency:\n\t\tcolor = \"15158332\" // red\n\tcase types.Alert:\n\t\tcolor = \"11027200\" // dark orange\n\tcase types.Critical:\n\t\tcolor = \"15105570\" // orange\n",
                    "rendered": {
                      "text": "\tvar color string\n\tswitch falcopayload.Priority {\n\tcase types.Emergency:\n\t\tcolor = \"15158332\" // red\n\tcase types.Alert:\n\t\tcolor = \"11027200\" // dark orange\n\tcase types.Critical:\n\t\tcolor = \"15105570\" // orange\n",
                      "markdown": "`\tvar color string\n\tswitch falcopayload.Priority {\n\tcase types.Emergency:\n\t\tcolor = \"15158332\" // red\n\tcase types.Alert:\n\t\tcolor = \"11027200\" // dark orange\n\tcase types.Critical:\n\t\tcolor = \"15105570\" // orange\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/pagerduty_test.go"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 5,
                  "endLine": 29,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\t\t\tGroup:     \"\",\n\t\t\tClass:     \"\",\n\t\t\tDetails: map[string]interface{}{\n\t\t\t\t\"hostname\":  \"test-host\",\n\t\t\t\t\"proc.name\": \"falcosidekick\",\n\t\t\t\t\"proc.tty\":  float64(1234),\n\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\tGroup:     \"\",\n\t\t\tClass:     \"\",\n\t\t\tDetails: map[string]interface{}{\n\t\t\t\t\"hostname\":  \"test-host\",\n\t\t\t\t\"proc.name\": \"falcosidekick\",\n\t\t\t\t\"proc.tty\":  float64(1234),\n\t\t\t},\n",
                      "markdown": "`\t\t\tGroup:     \"\",\n\t\t\tClass:     \"\",\n\t\t\tDetails: map[string]interface{}{\n\t\t\t\t\"hostname\":  \"test-host\",\n\t\t\t\t\"proc.name\": \"falcosidekick\",\n\t\t\t\t\"proc.tty\":  float64(1234),\n\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/pagerduty_test.go"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 179,
                  "endLine": 16,
                  "endColumn": 187,
                  "snippet": {
                    "text": ")\n\nfunc TestPagerdutyPayload(t *testing.T) {\n\tvar falcoTestInput = `{\"output\":\"This is a test from falcosidekick\",\"priority\":\"Debug\",\"rule\":\"Test rule\",\"hostname\":\"test-host\",\"time\":\"2001-01-01T01:10:00Z\",\"output_fields\": {\"hostname\": \"test-host\", \"proc.name\":\"falcosidekick\", \"proc.tty\": 1234}}`\n\tvar excpectedOutput = pagerduty.V2Event{\n\t\tRoutingKey: \"\",\n\t\tAction:     \"trigger\",\n",
                    "rendered": {
                      "text": ")\n\nfunc TestPagerdutyPayload(t *testing.T) {\n\tvar falcoTestInput = `{\"output\":\"This is a test from falcosidekick\",\"priority\":\"Debug\",\"rule\":\"Test rule\",\"hostname\":\"test-host\",\"time\":\"2001-01-01T01:10:00Z\",\"output_fields\": {\"hostname\": \"test-host\", \"proc.name\":\"falcosidekick\", \"proc.tty\": 1234}}`\n\tvar excpectedOutput = pagerduty.V2Event{\n\t\tRoutingKey: \"\",\n\t\tAction:     \"trigger\",\n",
                      "markdown": "`)\n\nfunc TestPagerdutyPayload(t *testing.T) {\n\tvar falcoTestInput = `{\"output\":\"This is a test from falcosidekick\",\"priority\":\"Debug\",\"rule\":\"Test rule\",\"hostname\":\"test-host\",\"time\":\"2001-01-01T01:10:00Z\",\"output_fields\": {\"hostname\": \"test-host\", \"proc.name\":\"falcosidekick\", \"proc.tty\": 1234}}`\n\tvar excpectedOutput = pagerduty.V2Event{\n\t\tRoutingKey: \"\",\n\t\tAction:     \"trigger\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/pagerduty_test.go"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 108,
                  "endLine": 16,
                  "endColumn": 116,
                  "snippet": {
                    "text": ")\n\nfunc TestPagerdutyPayload(t *testing.T) {\n\tvar falcoTestInput = `{\"output\":\"This is a test from falcosidekick\",\"priority\":\"Debug\",\"rule\":\"Test rule\",\"hostname\":\"test-host\",\"time\":\"2001-01-01T01:10:00Z\",\"output_fields\": {\"hostname\": \"test-host\", \"proc.name\":\"falcosidekick\", \"proc.tty\": 1234}}`\n\tvar excpectedOutput = pagerduty.V2Event{\n\t\tRoutingKey: \"\",\n\t\tAction:     \"trigger\",\n",
                    "rendered": {
                      "text": ")\n\nfunc TestPagerdutyPayload(t *testing.T) {\n\tvar falcoTestInput = `{\"output\":\"This is a test from falcosidekick\",\"priority\":\"Debug\",\"rule\":\"Test rule\",\"hostname\":\"test-host\",\"time\":\"2001-01-01T01:10:00Z\",\"output_fields\": {\"hostname\": \"test-host\", \"proc.name\":\"falcosidekick\", \"proc.tty\": 1234}}`\n\tvar excpectedOutput = pagerduty.V2Event{\n\t\tRoutingKey: \"\",\n\t\tAction:     \"trigger\",\n",
                      "markdown": "`)\n\nfunc TestPagerdutyPayload(t *testing.T) {\n\tvar falcoTestInput = `{\"output\":\"This is a test from falcosidekick\",\"priority\":\"Debug\",\"rule\":\"Test rule\",\"hostname\":\"test-host\",\"time\":\"2001-01-01T01:10:00Z\",\"output_fields\": {\"hostname\": \"test-host\", \"proc.name\":\"falcosidekick\", \"proc.tty\": 1234}}`\n\tvar excpectedOutput = pagerduty.V2Event{\n\t\tRoutingKey: \"\",\n\t\tAction:     \"trigger\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/mqtt.go"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 33,
                  "endLine": 25,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\toptions.SetClientID(\"falcosidekick-\" + uuid.NewString()[:6])\n\tif config.MQTT.User != \"\" && config.MQTT.Password != \"\" {\n\t\toptions.Username = config.MQTT.User\n\t\toptions.Password = config.MQTT.Password\n\t}\n\tif !config.MQTT.CheckCert {\n\t\toptions.TLSConfig = &tls.Config{\n",
                    "rendered": {
                      "text": "\toptions.SetClientID(\"falcosidekick-\" + uuid.NewString()[:6])\n\tif config.MQTT.User != \"\" && config.MQTT.Password != \"\" {\n\t\toptions.Username = config.MQTT.User\n\t\toptions.Password = config.MQTT.Password\n\t}\n\tif !config.MQTT.CheckCert {\n\t\toptions.TLSConfig = &tls.Config{\n",
                      "markdown": "`\toptions.SetClientID(\"falcosidekick-\" + uuid.NewString()[:6])\n\tif config.MQTT.User != \"\" && config.MQTT.Password != \"\" {\n\t\toptions.Username = config.MQTT.User\n\t\toptions.Password = config.MQTT.Password\n\t}\n\tif !config.MQTT.CheckCert {\n\t\toptions.TLSConfig = &tls.Config{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/mqtt.go"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 10,
                  "endLine": 25,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\toptions.SetClientID(\"falcosidekick-\" + uuid.NewString()[:6])\n\tif config.MQTT.User != \"\" && config.MQTT.Password != \"\" {\n\t\toptions.Username = config.MQTT.User\n\t\toptions.Password = config.MQTT.Password\n\t}\n\tif !config.MQTT.CheckCert {\n\t\toptions.TLSConfig = &tls.Config{\n",
                    "rendered": {
                      "text": "\toptions.SetClientID(\"falcosidekick-\" + uuid.NewString()[:6])\n\tif config.MQTT.User != \"\" && config.MQTT.Password != \"\" {\n\t\toptions.Username = config.MQTT.User\n\t\toptions.Password = config.MQTT.Password\n\t}\n\tif !config.MQTT.CheckCert {\n\t\toptions.TLSConfig = &tls.Config{\n",
                      "markdown": "`\toptions.SetClientID(\"falcosidekick-\" + uuid.NewString()[:6])\n\tif config.MQTT.User != \"\" && config.MQTT.Password != \"\" {\n\t\toptions.Username = config.MQTT.User\n\t\toptions.Password = config.MQTT.Password\n\t}\n\tif !config.MQTT.CheckCert {\n\t\toptions.TLSConfig = &tls.Config{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/mqtt.go"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 42,
                  "endLine": 23,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\toptions := mqtt.NewClientOptions()\n\toptions.AddBroker(config.MQTT.Broker)\n\toptions.SetClientID(\"falcosidekick-\" + uuid.NewString()[:6])\n\tif config.MQTT.User != \"\" && config.MQTT.Password != \"\" {\n\t\toptions.Username = config.MQTT.User\n\t\toptions.Password = config.MQTT.Password\n\t}\n",
                    "rendered": {
                      "text": "\toptions := mqtt.NewClientOptions()\n\toptions.AddBroker(config.MQTT.Broker)\n\toptions.SetClientID(\"falcosidekick-\" + uuid.NewString()[:6])\n\tif config.MQTT.User != \"\" && config.MQTT.Password != \"\" {\n\t\toptions.Username = config.MQTT.User\n\t\toptions.Password = config.MQTT.Password\n\t}\n",
                      "markdown": "`\toptions := mqtt.NewClientOptions()\n\toptions.AddBroker(config.MQTT.Broker)\n\toptions.SetClientID(\"falcosidekick-\" + uuid.NewString()[:6])\n\tif config.MQTT.User != \"\" && config.MQTT.Password != \"\" {\n\t\toptions.Username = config.MQTT.User\n\t\toptions.Password = config.MQTT.Password\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/openobserve.go"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 9,
                  "endLine": 16,
                  "endColumn": 15,
                  "snippet": {
                    "text": "func (c *Client) OpenObservePost(falcopayload types.FalcoPayload) {\n\tc.Stats.OpenObserve.Add(Total, 1)\n\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.OpenObserve.Username != \"\" && c.Config.OpenObserve.Password != \"\" {\n\t\t\treq.SetBasicAuth(c.Config.OpenObserve.Username, c.Config.OpenObserve.Password)\n\t\t}\n",
                    "rendered": {
                      "text": "func (c *Client) OpenObservePost(falcopayload types.FalcoPayload) {\n\tc.Stats.OpenObserve.Add(Total, 1)\n\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.OpenObserve.Username != \"\" && c.Config.OpenObserve.Password != \"\" {\n\t\t\treq.SetBasicAuth(c.Config.OpenObserve.Username, c.Config.OpenObserve.Password)\n\t\t}\n",
                      "markdown": "`func (c *Client) OpenObservePost(falcopayload types.FalcoPayload) {\n\tc.Stats.OpenObserve.Add(Total, 1)\n\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.OpenObserve.Username != \"\" && c.Config.OpenObserve.Password != \"\" {\n\t\t\treq.SetBasicAuth(c.Config.OpenObserve.Username, c.Config.OpenObserve.Password)\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/openobserve.go"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 72,
                  "endLine": 18,
                  "endColumn": 80,
                  "snippet": {
                    "text": "\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.OpenObserve.Username != \"\" && c.Config.OpenObserve.Password != \"\" {\n\t\t\treq.SetBasicAuth(c.Config.OpenObserve.Username, c.Config.OpenObserve.Password)\n\t\t}\n\n\t\tfor i, j := range c.Config.OpenObserve.CustomHeaders {\n",
                    "rendered": {
                      "text": "\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.OpenObserve.Username != \"\" && c.Config.OpenObserve.Password != \"\" {\n\t\t\treq.SetBasicAuth(c.Config.OpenObserve.Username, c.Config.OpenObserve.Password)\n\t\t}\n\n\t\tfor i, j := range c.Config.OpenObserve.CustomHeaders {\n",
                      "markdown": "`\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.OpenObserve.Username != \"\" && c.Config.OpenObserve.Password != \"\" {\n\t\t\treq.SetBasicAuth(c.Config.OpenObserve.Username, c.Config.OpenObserve.Password)\n\t\t}\n\n\t\tfor i, j := range c.Config.OpenObserve.CustomHeaders {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/openobserve.go"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 65,
                  "endLine": 17,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\tc.Stats.OpenObserve.Add(Total, 1)\n\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.OpenObserve.Username != \"\" && c.Config.OpenObserve.Password != \"\" {\n\t\t\treq.SetBasicAuth(c.Config.OpenObserve.Username, c.Config.OpenObserve.Password)\n\t\t}\n\n",
                    "rendered": {
                      "text": "\tc.Stats.OpenObserve.Add(Total, 1)\n\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.OpenObserve.Username != \"\" && c.Config.OpenObserve.Password != \"\" {\n\t\t\treq.SetBasicAuth(c.Config.OpenObserve.Username, c.Config.OpenObserve.Password)\n\t\t}\n\n",
                      "markdown": "`\tc.Stats.OpenObserve.Add(Total, 1)\n\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.OpenObserve.Username != \"\" && c.Config.OpenObserve.Password != \"\" {\n\t\t\treq.SetBasicAuth(c.Config.OpenObserve.Username, c.Config.OpenObserve.Password)\n\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/syslog.go"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 10,
                  "endLine": 106,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t\t\tfalcopayload.Source,\n\t\t)\n\t\tif falcopayload.Hostname != \"\" {\n\t\t\ts += \" hostname=\" + falcopayload.Hostname\n\t\t}\n\t\ts += \" outputfields=\"\n\t\tfor i, j := range falcopayload.OutputFields {\n",
                    "rendered": {
                      "text": "\t\t\tfalcopayload.Source,\n\t\t)\n\t\tif falcopayload.Hostname != \"\" {\n\t\t\ts += \" hostname=\" + falcopayload.Hostname\n\t\t}\n\t\ts += \" outputfields=\"\n\t\tfor i, j := range falcopayload.OutputFields {\n",
                      "markdown": "`\t\t\tfalcopayload.Source,\n\t\t)\n\t\tif falcopayload.Hostname != \"\" {\n\t\t\ts += \" hostname=\" + falcopayload.Hostname\n\t\t}\n\t\ts += \" outputfields=\"\n\t\tfor i, j := range falcopayload.OutputFields {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/gcpcloudrun.go"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 9,
                  "endLine": 16,
                  "endColumn": 15,
                  "snippet": {
                    "text": "func (c *Client) CloudRunFunctionPost(falcopayload types.FalcoPayload) {\n\tc.Stats.GCPCloudRun.Add(Total, 1)\n\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.GCP.CloudRun.JWT != \"\" {\n\t\t\treq.Header.Set(AuthorizationHeaderKey, Bearer+\" \"+c.Config.GCP.CloudRun.JWT)\n\t\t}\n",
                    "rendered": {
                      "text": "func (c *Client) CloudRunFunctionPost(falcopayload types.FalcoPayload) {\n\tc.Stats.GCPCloudRun.Add(Total, 1)\n\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.GCP.CloudRun.JWT != \"\" {\n\t\t\treq.Header.Set(AuthorizationHeaderKey, Bearer+\" \"+c.Config.GCP.CloudRun.JWT)\n\t\t}\n",
                      "markdown": "`func (c *Client) CloudRunFunctionPost(falcopayload types.FalcoPayload) {\n\tc.Stats.GCPCloudRun.Add(Total, 1)\n\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.GCP.CloudRun.JWT != \"\" {\n\t\t\treq.Header.Set(AuthorizationHeaderKey, Bearer+\" \"+c.Config.GCP.CloudRun.JWT)\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/spyderbat.go"
                },
                "region": {
                  "startLine": 232,
                  "startColumn": 9,
                  "endLine": 232,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n\tpayload, err := newSpyderbatPayload(falcopayload)\n\tif err == nil {\n\t\terr = c.Post(payload, func(req *http.Request) {\n\t\t\treq.Header.Set(\"Authorization\", \"Bearer \"+c.Config.Spyderbat.APIKey)\n\t\t\treq.Header.Set(\"Content-Encoding\", \"gzip\")\n\t\t})\n",
                    "rendered": {
                      "text": "\n\tpayload, err := newSpyderbatPayload(falcopayload)\n\tif err == nil {\n\t\terr = c.Post(payload, func(req *http.Request) {\n\t\t\treq.Header.Set(\"Authorization\", \"Bearer \"+c.Config.Spyderbat.APIKey)\n\t\t\treq.Header.Set(\"Content-Encoding\", \"gzip\")\n\t\t})\n",
                      "markdown": "`\n\tpayload, err := newSpyderbatPayload(falcopayload)\n\tif err == nil {\n\t\terr = c.Post(payload, func(req *http.Request) {\n\t\t\treq.Header.Set(\"Authorization\", \"Bearer \"+c.Config.Spyderbat.APIKey)\n\t\t\treq.Header.Set(\"Content-Encoding\", \"gzip\")\n\t\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/spyderbat.go"
                },
                "region": {
                  "startLine": 131,
                  "endLine": 131,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tID            string   `json:\"id\"`\n\tMonotonicTime int      `json:\"monotonic_time\"`\n\tOrcTime       float64  `json:\"orc_time\"`\n\tTime          float64  `json:\"time\"`\n\tPID           int32    `json:\"pid\"`\n\tLevel         string   `json:\"level\"`\n\tMessage       []string `json:\"msg\"`\n",
                    "rendered": {
                      "text": "\tID            string   `json:\"id\"`\n\tMonotonicTime int      `json:\"monotonic_time\"`\n\tOrcTime       float64  `json:\"orc_time\"`\n\tTime          float64  `json:\"time\"`\n\tPID           int32    `json:\"pid\"`\n\tLevel         string   `json:\"level\"`\n\tMessage       []string `json:\"msg\"`\n",
                      "markdown": "`\tID            string   `json:\"id\"`\n\tMonotonicTime int      `json:\"monotonic_time\"`\n\tOrcTime       float64  `json:\"orc_time\"`\n\tTime          float64  `json:\"time\"`\n\tPID           int32    `json:\"pid\"`\n\tLevel         string   `json:\"level\"`\n\tMessage       []string `json:\"msg\"`\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/client_test.go"
                },
                "region": {
                  "startLine": 246,
                  "startColumn": 14,
                  "endLine": 246,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\trequire.Nil(t, err)\n\trequire.NotEmpty(t, nc)\n\n\terrPost := nc.Post(\"\")\n\trequire.Nil(t, errPost)\n\n}\n",
                    "rendered": {
                      "text": "\trequire.Nil(t, err)\n\trequire.NotEmpty(t, nc)\n\n\terrPost := nc.Post(\"\")\n\trequire.Nil(t, errPost)\n\n}\n",
                      "markdown": "`\trequire.Nil(t, err)\n\trequire.NotEmpty(t, nc)\n\n\terrPost := nc.Post(\"\")\n\trequire.Nil(t, errPost)\n\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/client_test.go"
                },
                "region": {
                  "startLine": 199,
                  "startColumn": 3,
                  "endLine": 199,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\treq.Header.Set(headerKey, headerVal)\n\t})\n\n\tnc.Post(\"\", func(req *http.Request) {\n\t\treq.Header.Set(headerKey, headerVal)\n\t})\n}\n",
                    "rendered": {
                      "text": "\t\treq.Header.Set(headerKey, headerVal)\n\t})\n\n\tnc.Post(\"\", func(req *http.Request) {\n\t\treq.Header.Set(headerKey, headerVal)\n\t})\n}\n",
                      "markdown": "`\t\treq.Header.Set(headerKey, headerVal)\n\t})\n\n\tnc.Post(\"\", func(req *http.Request) {\n\t\treq.Header.Set(headerKey, headerVal)\n\t})\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/client_test.go"
                },
                "region": {
                  "startLine": 195,
                  "startColumn": 3,
                  "endLine": 195,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\trequire.Nil(t, err)\n\trequire.NotEmpty(t, nc)\n\n\tnc.Post(\"\", func(req *http.Request) {\n\t\treq.Header.Set(headerKey, headerVal)\n\t})\n\n",
                    "rendered": {
                      "text": "\trequire.Nil(t, err)\n\trequire.NotEmpty(t, nc)\n\n\tnc.Post(\"\", func(req *http.Request) {\n\t\treq.Header.Set(headerKey, headerVal)\n\t})\n\n",
                      "markdown": "`\trequire.Nil(t, err)\n\trequire.NotEmpty(t, nc)\n\n\tnc.Post(\"\", func(req *http.Request) {\n\t\treq.Header.Set(headerKey, headerVal)\n\t})\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/client_test.go"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 3,
                  "endLine": 174,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\trequire.Nil(t, err)\n\trequire.NotEmpty(t, nc)\n\n\tnc.Post(\"\", func(req *http.Request) {\n\t\treq.SetBasicAuth(username, password)\n\t})\n}\n",
                    "rendered": {
                      "text": "\trequire.Nil(t, err)\n\trequire.NotEmpty(t, nc)\n\n\tnc.Post(\"\", func(req *http.Request) {\n\t\treq.SetBasicAuth(username, password)\n\t})\n}\n",
                      "markdown": "`\trequire.Nil(t, err)\n\trequire.NotEmpty(t, nc)\n\n\tnc.Post(\"\", func(req *http.Request) {\n\t\treq.SetBasicAuth(username, password)\n\t})\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/client_test.go"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 23,
                  "endLine": 129,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t\t// I'm not comfortable using the constants here - seems too easy to fat-finger a change in\n\t\t// one location and break auth across a bunch of apps. Seems like the solution will be\n\t\t// more robust if we check against the _actual string_ \"Authorization\".\n\t\tpassedVal := r.Header.Get(\"Authorization\")\n\t\t// We have to have content here\n\t\tif passedVal == \"\" {\n\t\t\tt.Fatalf(\"Input Authorization header was empty\")\n",
                    "rendered": {
                      "text": "\t\t// I'm not comfortable using the constants here - seems too easy to fat-finger a change in\n\t\t// one location and break auth across a bunch of apps. Seems like the solution will be\n\t\t// more robust if we check against the _actual string_ \"Authorization\".\n\t\tpassedVal := r.Header.Get(\"Authorization\")\n\t\t// We have to have content here\n\t\tif passedVal == \"\" {\n\t\t\tt.Fatalf(\"Input Authorization header was empty\")\n",
                      "markdown": "`\t\t// I'm not comfortable using the constants here - seems too easy to fat-finger a change in\n\t\t// one location and break auth across a bunch of apps. Seems like the solution will be\n\t\t// more robust if we check against the _actual string_ \"Authorization\".\n\t\tpassedVal := r.Header.Get(\"Authorization\")\n\t\t// We have to have content here\n\t\tif passedVal == \"\" {\n\t\t\tt.Fatalf(\"Input Authorization header was empty\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/client_test.go"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 3,
                  "endLine": 118,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\trequire.Nil(t, err)\n\trequire.NotEmpty(t, nc)\n\n\tnc.Post(\"\", func(req *http.Request) {\n\t\treq.Header.Set(headerKey, headerVal)\n\t})\n}\n",
                    "rendered": {
                      "text": "\trequire.Nil(t, err)\n\trequire.NotEmpty(t, nc)\n\n\tnc.Post(\"\", func(req *http.Request) {\n\t\treq.Header.Set(headerKey, headerVal)\n\t})\n}\n",
                      "markdown": "`\trequire.Nil(t, err)\n\trequire.NotEmpty(t, nc)\n\n\tnc.Post(\"\", func(req *http.Request) {\n\t\treq.Header.Set(headerKey, headerVal)\n\t})\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/client_test.go"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 23,
                  "endLine": 106,
                  "endColumn": 28,
                  "snippet": {
                    "text": "func TestAddHeader(t *testing.T) {\n\theaderKey, headerVal := \"key\", \"val\"\n\tts := httptest.NewServer(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n\t\tpassedVal := r.Header.Get(headerKey)\n\t\trequire.Equal(t, passedVal, headerVal)\n\t}))\n\tinitClientArgs := &types.InitClientArgs{\n",
                    "rendered": {
                      "text": "func TestAddHeader(t *testing.T) {\n\theaderKey, headerVal := \"key\", \"val\"\n\tts := httptest.NewServer(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n\t\tpassedVal := r.Header.Get(headerKey)\n\t\trequire.Equal(t, passedVal, headerVal)\n\t}))\n\tinitClientArgs := &types.InitClientArgs{\n",
                      "markdown": "`func TestAddHeader(t *testing.T) {\n\theaderKey, headerVal := \"key\", \"val\"\n\tts := httptest.NewServer(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n\t\tpassedVal := r.Header.Get(headerKey)\n\t\trequire.Equal(t, passedVal, headerVal)\n\t}))\n\tinitClientArgs := &types.InitClientArgs{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/client_test.go"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 15,
                  "endLine": 98,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\trequire.Nil(t, err)\n\t\trequire.NotEmpty(t, nc)\n\n\t\terrPost := nc.Post(\"\")\n\t\trequire.Equal(t, errPost, j)\n\t}\n}\n",
                    "rendered": {
                      "text": "\t\trequire.Nil(t, err)\n\t\trequire.NotEmpty(t, nc)\n\n\t\terrPost := nc.Post(\"\")\n\t\trequire.Equal(t, errPost, j)\n\t}\n}\n",
                      "markdown": "`\t\trequire.Nil(t, err)\n\t\trequire.NotEmpty(t, nc)\n\n\t\terrPost := nc.Post(\"\")\n\t\trequire.Equal(t, errPost, j)\n\t}\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/client_test.go"
                },
                "region": {
                  "startLine": 403,
                  "startColumn": 26,
                  "endLine": 403,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\tclientCertPrivKeyPEM := new(bytes.Buffer)\n\tpem.Encode(clientCertPrivKeyPEM, &pem.Block{\n\t\tType:  \"RSA PRIVATE KEY\",\n\t\tBytes: x509.MarshalPKCS1PrivateKey(clientCertPrivKey),\n\t})\n\terr = os.WriteFile(config.MutualTLSClient.KeyFile, clientCertPrivKeyPEM.Bytes(), 0600)\n\tif err != nil {\n",
                    "rendered": {
                      "text": "\tclientCertPrivKeyPEM := new(bytes.Buffer)\n\tpem.Encode(clientCertPrivKeyPEM, &pem.Block{\n\t\tType:  \"RSA PRIVATE KEY\",\n\t\tBytes: x509.MarshalPKCS1PrivateKey(clientCertPrivKey),\n\t})\n\terr = os.WriteFile(config.MutualTLSClient.KeyFile, clientCertPrivKeyPEM.Bytes(), 0600)\n\tif err != nil {\n",
                      "markdown": "`\tclientCertPrivKeyPEM := new(bytes.Buffer)\n\tpem.Encode(clientCertPrivKeyPEM, &pem.Block{\n\t\tType:  \"RSA PRIVATE KEY\",\n\t\tBytes: x509.MarshalPKCS1PrivateKey(clientCertPrivKey),\n\t})\n\terr = os.WriteFile(config.MutualTLSClient.KeyFile, clientCertPrivKeyPEM.Bytes(), 0600)\n\tif err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/client_test.go"
                },
                "region": {
                  "startLine": 341,
                  "startColumn": 26,
                  "endLine": 341,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\tcertPrivKeyPEM := new(bytes.Buffer)\n\tpem.Encode(certPrivKeyPEM, &pem.Block{\n\t\tType:  \"RSA PRIVATE KEY\",\n\t\tBytes: x509.MarshalPKCS1PrivateKey(certPrivKey),\n\t})\n\tserverCert, err := tls.X509KeyPair(certPEM.Bytes(), certPrivKeyPEM.Bytes())\n\tif err != nil {\n",
                    "rendered": {
                      "text": "\tcertPrivKeyPEM := new(bytes.Buffer)\n\tpem.Encode(certPrivKeyPEM, &pem.Block{\n\t\tType:  \"RSA PRIVATE KEY\",\n\t\tBytes: x509.MarshalPKCS1PrivateKey(certPrivKey),\n\t})\n\tserverCert, err := tls.X509KeyPair(certPEM.Bytes(), certPrivKeyPEM.Bytes())\n\tif err != nil {\n",
                      "markdown": "`\tcertPrivKeyPEM := new(bytes.Buffer)\n\tpem.Encode(certPrivKeyPEM, &pem.Block{\n\t\tType:  \"RSA PRIVATE KEY\",\n\t\tBytes: x509.MarshalPKCS1PrivateKey(certPrivKey),\n\t})\n\tserverCert, err := tls.X509KeyPair(certPEM.Bytes(), certPrivKeyPEM.Bytes())\n\tif err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/client_test.go"
                },
                "region": {
                  "startLine": 175,
                  "startColumn": 29,
                  "endLine": 175,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\trequire.NotEmpty(t, nc)\n\n\tnc.Post(\"\", func(req *http.Request) {\n\t\treq.SetBasicAuth(username, password)\n\t})\n}\n\n",
                    "rendered": {
                      "text": "\trequire.NotEmpty(t, nc)\n\n\tnc.Post(\"\", func(req *http.Request) {\n\t\treq.SetBasicAuth(username, password)\n\t})\n}\n\n",
                      "markdown": "`\trequire.NotEmpty(t, nc)\n\n\tnc.Post(\"\", func(req *http.Request) {\n\t\treq.SetBasicAuth(username, password)\n\t})\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/client_test.go"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 35,
                  "endLine": 160,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\t\tpassedPassword := splitDigest[1]\n\n\t\trequire.Equal(t, passedUsername, username)\n\t\trequire.Equal(t, passedPassword, password)\n\t\t// I used https://www.base64encode.org/ to encode \"user:pass\" in base64,\n\t\t// and that should be the provided value.\n\t\trequire.Equal(t, digest, \"dXNlcjpwYXNz\")\n",
                    "rendered": {
                      "text": "\t\tpassedPassword := splitDigest[1]\n\n\t\trequire.Equal(t, passedUsername, username)\n\t\trequire.Equal(t, passedPassword, password)\n\t\t// I used https://www.base64encode.org/ to encode \"user:pass\" in base64,\n\t\t// and that should be the provided value.\n\t\trequire.Equal(t, digest, \"dXNlcjpwYXNz\")\n",
                      "markdown": "`\t\tpassedPassword := splitDigest[1]\n\n\t\trequire.Equal(t, passedUsername, username)\n\t\trequire.Equal(t, passedPassword, password)\n\t\t// I used https://www.base64encode.org/ to encode \"user:pass\" in base64,\n\t\t// and that should be the provided value.\n\t\trequire.Equal(t, digest, \"dXNlcjpwYXNz\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/client_test.go"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 25,
                  "endLine": 160,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t\tpassedPassword := splitDigest[1]\n\n\t\trequire.Equal(t, passedUsername, username)\n\t\trequire.Equal(t, passedPassword, password)\n\t\t// I used https://www.base64encode.org/ to encode \"user:pass\" in base64,\n\t\t// and that should be the provided value.\n\t\trequire.Equal(t, digest, \"dXNlcjpwYXNz\")\n",
                    "rendered": {
                      "text": "\t\tpassedPassword := splitDigest[1]\n\n\t\trequire.Equal(t, passedUsername, username)\n\t\trequire.Equal(t, passedPassword, password)\n\t\t// I used https://www.base64encode.org/ to encode \"user:pass\" in base64,\n\t\t// and that should be the provided value.\n\t\trequire.Equal(t, digest, \"dXNlcjpwYXNz\")\n",
                      "markdown": "`\t\tpassedPassword := splitDigest[1]\n\n\t\trequire.Equal(t, passedUsername, username)\n\t\trequire.Equal(t, passedPassword, password)\n\t\t// I used https://www.base64encode.org/ to encode \"user:pass\" in base64,\n\t\t// and that should be the provided value.\n\t\trequire.Equal(t, digest, \"dXNlcjpwYXNz\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/client_test.go"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 8,
                  "endLine": 157,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tpassedUsername := splitDigest[0]\n\t\tpassedPassword := splitDigest[1]\n\n\t\trequire.Equal(t, passedUsername, username)\n\t\trequire.Equal(t, passedPassword, password)\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\tpassedUsername := splitDigest[0]\n\t\tpassedPassword := splitDigest[1]\n\n\t\trequire.Equal(t, passedUsername, username)\n\t\trequire.Equal(t, passedPassword, password)\n",
                      "markdown": "`\t\t}\n\n\t\tpassedUsername := splitDigest[0]\n\t\tpassedPassword := splitDigest[1]\n\n\t\trequire.Equal(t, passedUsername, username)\n\t\trequire.Equal(t, passedPassword, password)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/client_test.go"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 79,
                  "endLine": 153,
                  "endColumn": 87,
                  "snippet": {
                    "text": "\t\tsplitDigest := strings.Split(decodedDigest, \":\")\n\n\t\tif len(splitDigest) != 2 {\n\t\t\tt.Fatalf(\"Decoded digest split on a colon must have two elements - user and password.\")\n\t\t}\n\n\t\tpassedUsername := splitDigest[0]\n",
                    "rendered": {
                      "text": "\t\tsplitDigest := strings.Split(decodedDigest, \":\")\n\n\t\tif len(splitDigest) != 2 {\n\t\t\tt.Fatalf(\"Decoded digest split on a colon must have two elements - user and password.\")\n\t\t}\n\n\t\tpassedUsername := splitDigest[0]\n",
                      "markdown": "`\t\tsplitDigest := strings.Split(decodedDigest, \":\")\n\n\t\tif len(splitDigest) != 2 {\n\t\t\tt.Fatalf(\"Decoded digest split on a colon must have two elements - user and password.\")\n\t\t}\n\n\t\tpassedUsername := splitDigest[0]\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/client_test.go"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 11,
                  "endLine": 124,
                  "endColumn": 19,
                  "snippet": {
                    "text": "}\n\nfunc TestAddBasicAuth(t *testing.T) {\n\tusername, password := \"user\", \"pass\"\n\tts := httptest.NewServer(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n\t\t// I'm not comfortable using the constants here - seems too easy to fat-finger a change in\n\t\t// one location and break auth across a bunch of apps. Seems like the solution will be\n",
                    "rendered": {
                      "text": "}\n\nfunc TestAddBasicAuth(t *testing.T) {\n\tusername, password := \"user\", \"pass\"\n\tts := httptest.NewServer(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n\t\t// I'm not comfortable using the constants here - seems too easy to fat-finger a change in\n\t\t// one location and break auth across a bunch of apps. Seems like the solution will be\n",
                      "markdown": "`}\n\nfunc TestAddBasicAuth(t *testing.T) {\n\tusername, password := \"user\", \"pass\"\n\tts := httptest.NewServer(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n\t\t// I'm not comfortable using the constants here - seems too easy to fat-finger a change in\n\t\t// one location and break auth across a bunch of apps. Seems like the solution will be\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/client_test.go"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 251,
                  "endLine": 31,
                  "endColumn": 259,
                  "snippet": {
                    "text": "\nconst Status200 string = \"/200\"\n\nvar falcoTestInput = `{\"output\":\"This is a test from falcosidekick\",\"priority\":\"Debug\",\"rule\":\"Test rule\", \"time\":\"2001-01-01T01:10:00Z\",\"source\":\"syscalls\",\"output_fields\": {\"proc.name\":\"falcosidekick\", \"proc.tty\": 1234}, \"tags\":[\"test\",\"example\"], \"hostname\":\"test-host\"}`\n\nfunc TestNewClient(t *testing.T) {\n\tu, _ := url.Parse(\"http://localhost\")\n",
                    "rendered": {
                      "text": "\nconst Status200 string = \"/200\"\n\nvar falcoTestInput = `{\"output\":\"This is a test from falcosidekick\",\"priority\":\"Debug\",\"rule\":\"Test rule\", \"time\":\"2001-01-01T01:10:00Z\",\"source\":\"syscalls\",\"output_fields\": {\"proc.name\":\"falcosidekick\", \"proc.tty\": 1234}, \"tags\":[\"test\",\"example\"], \"hostname\":\"test-host\"}`\n\nfunc TestNewClient(t *testing.T) {\n\tu, _ := url.Parse(\"http://localhost\")\n",
                      "markdown": "`\nconst Status200 string = \"/200\"\n\nvar falcoTestInput = `{\"output\":\"This is a test from falcosidekick\",\"priority\":\"Debug\",\"rule\":\"Test rule\", \"time\":\"2001-01-01T01:10:00Z\",\"source\":\"syscalls\",\"output_fields\": {\"proc.name\":\"falcosidekick\", \"proc.tty\": 1234}, \"tags\":[\"test\",\"example\"], \"hostname\":\"test-host\"}`\n\nfunc TestNewClient(t *testing.T) {\n\tu, _ := url.Parse(\"http://localhost\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/client_test.go"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 67,
                  "endLine": 161,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\n\t\trequire.Equal(t, passedUsername, username)\n\t\trequire.Equal(t, passedPassword, password)\n\t\t// I used https://www.base64encode.org/ to encode \"user:pass\" in base64,\n\t\t// and that should be the provided value.\n\t\trequire.Equal(t, digest, \"dXNlcjpwYXNz\")\n\t}))\n",
                    "rendered": {
                      "text": "\n\t\trequire.Equal(t, passedUsername, username)\n\t\trequire.Equal(t, passedPassword, password)\n\t\t// I used https://www.base64encode.org/ to encode \"user:pass\" in base64,\n\t\t// and that should be the provided value.\n\t\trequire.Equal(t, digest, \"dXNlcjpwYXNz\")\n\t}))\n",
                      "markdown": "`\n\t\trequire.Equal(t, passedUsername, username)\n\t\trequire.Equal(t, passedPassword, password)\n\t\t// I used https://www.base64encode.org/ to encode \"user:pass\" in base64,\n\t\t// and that should be the provided value.\n\t\trequire.Equal(t, digest, \"dXNlcjpwYXNz\")\n\t}))\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/client_test.go"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 29,
                  "endLine": 146,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\n\t\trequire.Equal(t, basicDeclarator, \"Basic\")\n\n\t\tdecodedDigestBytes, err := base64.StdEncoding.DecodeString(digest)\n\t\trequire.Nil(t, err)\n\t\tdecodedDigest := string(decodedDigestBytes)\n\n",
                    "rendered": {
                      "text": "\n\t\trequire.Equal(t, basicDeclarator, \"Basic\")\n\n\t\tdecodedDigestBytes, err := base64.StdEncoding.DecodeString(digest)\n\t\trequire.Nil(t, err)\n\t\tdecodedDigest := string(decodedDigestBytes)\n\n",
                      "markdown": "`\n\t\trequire.Equal(t, basicDeclarator, \"Basic\")\n\n\t\tdecodedDigestBytes, err := base64.StdEncoding.DecodeString(digest)\n\t\trequire.Nil(t, err)\n\t\tdecodedDigest := string(decodedDigestBytes)\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/client_test.go"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 11,
                  "endLine": 12,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t\"crypto/tls\"\n\t\"crypto/x509\"\n\t\"crypto/x509/pkix\"\n\t\"encoding/base64\"\n\t\"encoding/pem\"\n\t\"math/big\"\n\t\"net\"\n",
                    "rendered": {
                      "text": "\t\"crypto/tls\"\n\t\"crypto/x509\"\n\t\"crypto/x509/pkix\"\n\t\"encoding/base64\"\n\t\"encoding/pem\"\n\t\"math/big\"\n\t\"net\"\n",
                      "markdown": "`\t\"crypto/tls\"\n\t\"crypto/x509\"\n\t\"crypto/x509/pkix\"\n\t\"encoding/base64\"\n\t\"encoding/pem\"\n\t\"math/big\"\n\t\"net\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/timescaledb.go"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 21,
                  "endLine": 28,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\tconnStr := fmt.Sprintf(\n\t\t\"postgres://%s:%s@%s:%s/%s\",\n\t\tconfig.TimescaleDB.User,\n\t\tconfig.TimescaleDB.Password,\n\t\tconfig.TimescaleDB.Host,\n\t\tconfig.TimescaleDB.Port,\n\t\tconfig.TimescaleDB.Database,\n",
                    "rendered": {
                      "text": "\tconnStr := fmt.Sprintf(\n\t\t\"postgres://%s:%s@%s:%s/%s\",\n\t\tconfig.TimescaleDB.User,\n\t\tconfig.TimescaleDB.Password,\n\t\tconfig.TimescaleDB.Host,\n\t\tconfig.TimescaleDB.Port,\n\t\tconfig.TimescaleDB.Database,\n",
                      "markdown": "`\tconnStr := fmt.Sprintf(\n\t\t\"postgres://%s:%s@%s:%s/%s\",\n\t\tconfig.TimescaleDB.User,\n\t\tconfig.TimescaleDB.Password,\n\t\tconfig.TimescaleDB.Host,\n\t\tconfig.TimescaleDB.Port,\n\t\tconfig.TimescaleDB.Database,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/constants.go"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\tPlaintext string = \"plaintext\"\n\tJSON      string = \"json\"\n\tMarkdown  string = \"markdown\"\n\tHostname  string = \"hostname\"\n\n\tDefaultFooter  string = \"https://github.com/falcosecurity/falcosidekick\"\n\tDefaultIconURL string = \"https://raw.githubusercontent.com/falcosecurity/falcosidekick/master/imgs/falcosidekick.png\"\n",
                    "rendered": {
                      "text": "\tPlaintext string = \"plaintext\"\n\tJSON      string = \"json\"\n\tMarkdown  string = \"markdown\"\n\tHostname  string = \"hostname\"\n\n\tDefaultFooter  string = \"https://github.com/falcosecurity/falcosidekick\"\n\tDefaultIconURL string = \"https://raw.githubusercontent.com/falcosecurity/falcosidekick/master/imgs/falcosidekick.png\"\n",
                      "markdown": "`\tPlaintext string = \"plaintext\"\n\tJSON      string = \"json\"\n\tMarkdown  string = \"markdown\"\n\tHostname  string = \"hostname\"\n\n\tDefaultFooter  string = \"https://github.com/falcosecurity/falcosidekick\"\n\tDefaultIconURL string = \"https://raw.githubusercontent.com/falcosecurity/falcosidekick/master/imgs/falcosidekick.png\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/constants.go"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 42,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t// Colors\n\tPaleCyan  string = \"#ccfff2\"\n\tYellow    string = \"#ffc700\"\n\tRed       string = \"#e20b0b\"\n\tLigthBlue string = \"#68c2ff\"\n\tLightcyan string = \"#5bffb5\"\n\tOrange    string = \"#ff5400\"\n",
                    "rendered": {
                      "text": "\t// Colors\n\tPaleCyan  string = \"#ccfff2\"\n\tYellow    string = \"#ffc700\"\n\tRed       string = \"#e20b0b\"\n\tLigthBlue string = \"#68c2ff\"\n\tLightcyan string = \"#5bffb5\"\n\tOrange    string = \"#ff5400\"\n",
                      "markdown": "`\t// Colors\n\tPaleCyan  string = \"#ccfff2\"\n\tYellow    string = \"#ffc700\"\n\tRed       string = \"#e20b0b\"\n\tLigthBlue string = \"#68c2ff\"\n\tLightcyan string = \"#5bffb5\"\n\tOrange    string = \"#ff5400\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/constants.go"
                },
                "region": {
                  "startLine": 29,
                  "endLine": 29,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tPriority  string = \"priority\"\n\tSource    string = \"source\"\n\tTags      string = \"tags\"\n\tTime      string = \"time\"\n\tText      string = \"text\"\n\tPlaintext string = \"plaintext\"\n\tJSON      string = \"json\"\n",
                    "rendered": {
                      "text": "\tPriority  string = \"priority\"\n\tSource    string = \"source\"\n\tTags      string = \"tags\"\n\tTime      string = \"time\"\n\tText      string = \"text\"\n\tPlaintext string = \"plaintext\"\n\tJSON      string = \"json\"\n",
                      "markdown": "`\tPriority  string = \"priority\"\n\tSource    string = \"source\"\n\tTags      string = \"tags\"\n\tTime      string = \"time\"\n\tText      string = \"text\"\n\tPlaintext string = \"plaintext\"\n\tJSON      string = \"json\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/datadog.go"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 9,
                  "endLine": 67,
                  "endColumn": 15,
                  "snippet": {
                    "text": "func (c *Client) DatadogPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Datadog.Add(Total, 1)\n\n\terr := c.Post(newDatadogPayload(falcopayload))\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:datadog\", \"status:error\"})\n\t\tc.Stats.Datadog.Add(Error, 1)\n",
                    "rendered": {
                      "text": "func (c *Client) DatadogPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Datadog.Add(Total, 1)\n\n\terr := c.Post(newDatadogPayload(falcopayload))\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:datadog\", \"status:error\"})\n\t\tc.Stats.Datadog.Add(Error, 1)\n",
                      "markdown": "`func (c *Client) DatadogPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Datadog.Add(Total, 1)\n\n\terr := c.Post(newDatadogPayload(falcopayload))\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:datadog\", \"status:error\"})\n\t\tc.Stats.Datadog.Add(Error, 1)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/cliq_test.go"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 15,
                  "endLine": 45,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\t\t\t\t\t\tValue: \"Debug\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tField: \"hostname\",\n\t\t\t\t\t\t\tValue: \"test-host\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n",
                    "rendered": {
                      "text": "\t\t\t\t\t\t\tValue: \"Debug\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tField: \"hostname\",\n\t\t\t\t\t\t\tValue: \"test-host\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n",
                      "markdown": "`\t\t\t\t\t\t\tValue: \"Debug\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tField: \"hostname\",\n\t\t\t\t\t\t\tValue: \"test-host\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/influxdb_test.go"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 98,
                  "endLine": 15,
                  "endColumn": 106,
                  "snippet": {
                    "text": ")\n\nfunc TestNewInfluxdbPayload(t *testing.T) {\n\texpectedOutput := `\"events,rule=Test_rule,priority=Debug,source=syscalls,proc.name=falcosidekick,hostname=test-host,tags=test_example value=\\\"This is a test from falcosidekick\\\"\"`\n\tvar f types.FalcoPayload\n\trequire.Nil(t, json.Unmarshal([]byte(falcoTestInput), &f))\n\n",
                    "rendered": {
                      "text": ")\n\nfunc TestNewInfluxdbPayload(t *testing.T) {\n\texpectedOutput := `\"events,rule=Test_rule,priority=Debug,source=syscalls,proc.name=falcosidekick,hostname=test-host,tags=test_example value=\\\"This is a test from falcosidekick\\\"\"`\n\tvar f types.FalcoPayload\n\trequire.Nil(t, json.Unmarshal([]byte(falcoTestInput), &f))\n\n",
                      "markdown": "`)\n\nfunc TestNewInfluxdbPayload(t *testing.T) {\n\texpectedOutput := `\"events,rule=Test_rule,priority=Debug,source=syscalls,proc.name=falcosidekick,hostname=test-host,tags=test_example value=\\\"This is a test from falcosidekick\\\"\"`\n\tvar f types.FalcoPayload\n\trequire.Nil(t, json.Unmarshal([]byte(falcoTestInput), &f))\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/otlp_test.go"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 10,
                  "endLine": 68,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t\t\tmsg: \"#3 Payload with Hostname\",\n\t\t\tfp: types.FalcoPayload{\n\t\t\t\tOutputFields: map[string]interface{}{\n\t\t\t\t\t\"evt.hostname\": \"localhost\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tconfig: types.Configuration{\n",
                    "rendered": {
                      "text": "\t\t\tmsg: \"#3 Payload with Hostname\",\n\t\t\tfp: types.FalcoPayload{\n\t\t\t\tOutputFields: map[string]interface{}{\n\t\t\t\t\t\"evt.hostname\": \"localhost\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tconfig: types.Configuration{\n",
                      "markdown": "`\t\t\tmsg: \"#3 Payload with Hostname\",\n\t\t\tfp: types.FalcoPayload{\n\t\t\t\tOutputFields: map[string]interface{}{\n\t\t\t\t\t\"evt.hostname\": \"localhost\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tconfig: types.Configuration{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/otlp_test.go"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 10,
                  "endLine": 51,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t\t\tfp: types.FalcoPayload{\n\t\t\t\tOutputFields: map[string]interface{}{\n\t\t\t\t\t\"container.id\": \"42\",\n\t\t\t\t\t\"evt.hostname\": \"localhost\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tconfig: types.Configuration{\n",
                    "rendered": {
                      "text": "\t\t\tfp: types.FalcoPayload{\n\t\t\t\tOutputFields: map[string]interface{}{\n\t\t\t\t\t\"container.id\": \"42\",\n\t\t\t\t\t\"evt.hostname\": \"localhost\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tconfig: types.Configuration{\n",
                      "markdown": "`\t\t\tfp: types.FalcoPayload{\n\t\t\t\tOutputFields: map[string]interface{}{\n\t\t\t\t\t\"container.id\": \"42\",\n\t\t\t\t\t\"evt.hostname\": \"localhost\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tconfig: types.Configuration{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/otlp_test.go"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 10,
                  "endLine": 33,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t\t\t\t\t\"k8s.ns.name\":  \"my-ns\",\n\t\t\t\t\t\"k8s.pod.name\": \"my-pod-name\",\n\t\t\t\t\t\"container.id\": \"42\",\n\t\t\t\t\t\"evt.hostname\": \"localhost\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tconfig: types.Configuration{\n",
                    "rendered": {
                      "text": "\t\t\t\t\t\"k8s.ns.name\":  \"my-ns\",\n\t\t\t\t\t\"k8s.pod.name\": \"my-pod-name\",\n\t\t\t\t\t\"container.id\": \"42\",\n\t\t\t\t\t\"evt.hostname\": \"localhost\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tconfig: types.Configuration{\n",
                      "markdown": "`\t\t\t\t\t\"k8s.ns.name\":  \"my-ns\",\n\t\t\t\t\t\"k8s.pod.name\": \"my-pod-name\",\n\t\t\t\t\t\"container.id\": \"42\",\n\t\t\t\t\t\"evt.hostname\": \"localhost\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tconfig: types.Configuration{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/grafana.go"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 9,
                  "endLine": 107,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\tc.Stats.GrafanaOnCall.Add(Total, 1)\n\tc.ContentType = GrafanaContentType\n\n\terr := c.Post(newGrafanaOnCallPayload(falcopayload), func(req *http.Request) {\n\t\tfor i, j := range c.Config.GrafanaOnCall.CustomHeaders {\n\t\t\treq.Header.Set(i, j)\n\t\t}\n",
                    "rendered": {
                      "text": "\tc.Stats.GrafanaOnCall.Add(Total, 1)\n\tc.ContentType = GrafanaContentType\n\n\terr := c.Post(newGrafanaOnCallPayload(falcopayload), func(req *http.Request) {\n\t\tfor i, j := range c.Config.GrafanaOnCall.CustomHeaders {\n\t\t\treq.Header.Set(i, j)\n\t\t}\n",
                      "markdown": "`\tc.Stats.GrafanaOnCall.Add(Total, 1)\n\tc.ContentType = GrafanaContentType\n\n\terr := c.Post(newGrafanaOnCallPayload(falcopayload), func(req *http.Request) {\n\t\tfor i, j := range c.Config.GrafanaOnCall.CustomHeaders {\n\t\t\treq.Header.Set(i, j)\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/grafana.go"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 9,
                  "endLine": 83,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\tc.Stats.Grafana.Add(Total, 1)\n\tc.ContentType = GrafanaContentType\n\n\terr := c.Post(newGrafanaPayload(falcopayload, c.Config), func(req *http.Request) {\n\t\treq.Header.Set(\"Authorization\", Bearer+\" \"+c.Config.Grafana.APIKey)\n\t\tfor i, j := range c.Config.Grafana.CustomHeaders {\n\t\t\treq.Header.Set(i, j)\n",
                    "rendered": {
                      "text": "\tc.Stats.Grafana.Add(Total, 1)\n\tc.ContentType = GrafanaContentType\n\n\terr := c.Post(newGrafanaPayload(falcopayload, c.Config), func(req *http.Request) {\n\t\treq.Header.Set(\"Authorization\", Bearer+\" \"+c.Config.Grafana.APIKey)\n\t\tfor i, j := range c.Config.Grafana.CustomHeaders {\n\t\t\treq.Header.Set(i, j)\n",
                      "markdown": "`\tc.Stats.Grafana.Add(Total, 1)\n\tc.ContentType = GrafanaContentType\n\n\terr := c.Post(newGrafanaPayload(falcopayload, c.Config), func(req *http.Request) {\n\t\treq.Header.Set(\"Authorization\", Bearer+\" \"+c.Config.Grafana.APIKey)\n\t\tfor i, j := range c.Config.Grafana.CustomHeaders {\n\t\t\treq.Header.Set(i, j)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/grafana.go"
                },
                "region": {
                  "startLine": 16,
                  "endLine": 16,
                  "endColumn": 6,
                  "snippet": {
                    "text": "type grafanaPayload struct {\n\tDashboardID int      `json:\"dashboardId,omitempty\"`\n\tPanelID     int      `json:\"panelId,omitempty\"`\n\tTime        int64    `json:\"time\"`\n\tTimeEnd     int64    `json:\"timeEnd\"`\n\tTags        []string `json:\"tags\"`\n\tText        string   `json:\"text\"`\n",
                    "rendered": {
                      "text": "type grafanaPayload struct {\n\tDashboardID int      `json:\"dashboardId,omitempty\"`\n\tPanelID     int      `json:\"panelId,omitempty\"`\n\tTime        int64    `json:\"time\"`\n\tTimeEnd     int64    `json:\"timeEnd\"`\n\tTags        []string `json:\"tags\"`\n\tText        string   `json:\"text\"`\n",
                      "markdown": "`type grafanaPayload struct {\n\tDashboardID int      `json:\"dashboardId,omitempty\"`\n\tPanelID     int      `json:\"panelId,omitempty\"`\n\tTime        int64    `json:\"time\"`\n\tTimeEnd     int64    `json:\"timeEnd\"`\n\tTags        []string `json:\"tags\"`\n\tText        string   `json:\"text\"`\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/fission.go"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 10,
                  "endLine": 91,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\t} else {\n\t\tc.ContentType = FissionContentType\n\n\t\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\t\treq.Header.Set(FissionEventIDKey, uuid.New().String())\n\t\t})\n\t\tif err != nil {\n",
                    "rendered": {
                      "text": "\t} else {\n\t\tc.ContentType = FissionContentType\n\n\t\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\t\treq.Header.Set(FissionEventIDKey, uuid.New().String())\n\t\t})\n\t\tif err != nil {\n",
                      "markdown": "`\t} else {\n\t\tc.ContentType = FissionContentType\n\n\t\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\t\treq.Header.Set(FissionEventIDKey, uuid.New().String())\n\t\t})\n\t\tif err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/fission.go"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 49,
                  "endLine": 70,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\n\tif c.Config.Fission.KubeConfig != \"\" {\n\t\tstr, _ := json.Marshal(falcopayload)\n\t\treq := c.KubernetesClient.CoreV1().RESTClient().Post().AbsPath(APIv1Namespaces +\n\t\t\tc.Config.Fission.RouterNamespace + ServicesPath + c.Config.Fission.RouterService +\n\t\t\t\":\" + strconv.Itoa(c.Config.Fission.RouterPort) + \"/proxy/\" + \"/fission-function/\" +\n\t\t\tc.Config.Fission.Function).Body(str)\n",
                    "rendered": {
                      "text": "\n\tif c.Config.Fission.KubeConfig != \"\" {\n\t\tstr, _ := json.Marshal(falcopayload)\n\t\treq := c.KubernetesClient.CoreV1().RESTClient().Post().AbsPath(APIv1Namespaces +\n\t\t\tc.Config.Fission.RouterNamespace + ServicesPath + c.Config.Fission.RouterService +\n\t\t\t\":\" + strconv.Itoa(c.Config.Fission.RouterPort) + \"/proxy/\" + \"/fission-function/\" +\n\t\t\tc.Config.Fission.Function).Body(str)\n",
                      "markdown": "`\n\tif c.Config.Fission.KubeConfig != \"\" {\n\t\tstr, _ := json.Marshal(falcopayload)\n\t\treq := c.KubernetesClient.CoreV1().RESTClient().Post().AbsPath(APIv1Namespaces +\n\t\t\tc.Config.Fission.RouterNamespace + ServicesPath + c.Config.Fission.RouterService +\n\t\t\t\":\" + strconv.Itoa(c.Config.Fission.RouterPort) + \"/proxy/\" + \"/fission-function/\" +\n\t\t\tc.Config.Fission.Function).Body(str)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/elasticsearch.go"
                },
                "region": {
                  "startLine": 268,
                  "startColumn": 21,
                  "endLine": 268,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\treturn false, err\n\t}\n\tclientCopy.EndpointURL = u\n\tif err := clientCopy.Get(); err != nil {\n\t\tif err.Error() == \"resource not found\" {\n\t\t\treturn false, nil\n\t\t}\n",
                    "rendered": {
                      "text": "\t\treturn false, err\n\t}\n\tclientCopy.EndpointURL = u\n\tif err := clientCopy.Get(); err != nil {\n\t\tif err.Error() == \"resource not found\" {\n\t\t\treturn false, nil\n\t\t}\n",
                      "markdown": "`\t\treturn false, err\n\t}\n\tclientCopy.EndpointURL = u\n\tif err := clientCopy.Get(); err != nil {\n\t\tif err.Error() == \"resource not found\" {\n\t\t\treturn false, nil\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/elasticsearch.go"
                },
                "region": {
                  "startLine": 210,
                  "startColumn": 11,
                  "endLine": 210,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlog.Printf(\"[INFO]  : %v - %v\\n\", c.OutputType, \"attempt to POST again the payload without the wrong field\")\n\t\t\t\terr = c.Post(payload, reqOpts...)\n\t\t\t\tif err != nil {\n\t\t\t\t\tc.setElasticSearchErrorMetrics(sz)\n\t\t\t\t\treturn\n",
                    "rendered": {
                      "text": "\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlog.Printf(\"[INFO]  : %v - %v\\n\", c.OutputType, \"attempt to POST again the payload without the wrong field\")\n\t\t\t\terr = c.Post(payload, reqOpts...)\n\t\t\t\tif err != nil {\n\t\t\t\t\tc.setElasticSearchErrorMetrics(sz)\n\t\t\t\t\treturn\n",
                      "markdown": "`\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlog.Printf(\"[INFO]  : %v - %v\\n\", c.OutputType, \"attempt to POST again the payload without the wrong field\")\n\t\t\t\terr = c.Post(payload, reqOpts...)\n\t\t\t\tif err != nil {\n\t\t\t\t\tc.setElasticSearchErrorMetrics(sz)\n\t\t\t\t\treturn\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/elasticsearch.go"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 9,
                  "endLine": 145,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\t\t}\n\t} else {\n\t\t// Use regular Post call, this avoid parsing response on http status 200\n\t\terr = c.Post(payload, reqOpts...)\n\t\tif err != nil {\n\t\t\tresponse = err.Error()\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t}\n\t} else {\n\t\t// Use regular Post call, this avoid parsing response on http status 200\n\t\terr = c.Post(payload, reqOpts...)\n\t\tif err != nil {\n\t\t\tresponse = err.Error()\n\t\t}\n",
                      "markdown": "`\t\t}\n\t} else {\n\t\t// Use regular Post call, this avoid parsing response on http status 200\n\t\terr = c.Post(payload, reqOpts...)\n\t\tif err != nil {\n\t\t\tresponse = err.Error()\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/elasticsearch.go"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 77,
                  "endLine": 113,
                  "endColumn": 85,
                  "snippet": {
                    "text": "\t\t\t}\n\n\t\t\tif c.Config.Elasticsearch.Username != \"\" && c.Config.Elasticsearch.Password != \"\" {\n\t\t\t\treq.SetBasicAuth(c.Config.Elasticsearch.Username, c.Config.Elasticsearch.Password)\n\t\t\t}\n\n\t\t\tfor i, j := range c.Config.Elasticsearch.CustomHeaders {\n",
                    "rendered": {
                      "text": "\t\t\t}\n\n\t\t\tif c.Config.Elasticsearch.Username != \"\" && c.Config.Elasticsearch.Password != \"\" {\n\t\t\t\treq.SetBasicAuth(c.Config.Elasticsearch.Username, c.Config.Elasticsearch.Password)\n\t\t\t}\n\n\t\t\tfor i, j := range c.Config.Elasticsearch.CustomHeaders {\n",
                      "markdown": "`\t\t\t}\n\n\t\t\tif c.Config.Elasticsearch.Username != \"\" && c.Config.Elasticsearch.Password != \"\" {\n\t\t\t\treq.SetBasicAuth(c.Config.Elasticsearch.Username, c.Config.Elasticsearch.Password)\n\t\t\t}\n\n\t\t\tfor i, j := range c.Config.Elasticsearch.CustomHeaders {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/elasticsearch.go"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 70,
                  "endLine": 112,
                  "endColumn": 78,
                  "snippet": {
                    "text": "\t\t\t\treq.Header.Set(\"Authorization\", \"APIKey \"+c.Config.Elasticsearch.ApiKey)\n\t\t\t}\n\n\t\t\tif c.Config.Elasticsearch.Username != \"\" && c.Config.Elasticsearch.Password != \"\" {\n\t\t\t\treq.SetBasicAuth(c.Config.Elasticsearch.Username, c.Config.Elasticsearch.Password)\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t\t\treq.Header.Set(\"Authorization\", \"APIKey \"+c.Config.Elasticsearch.ApiKey)\n\t\t\t}\n\n\t\t\tif c.Config.Elasticsearch.Username != \"\" && c.Config.Elasticsearch.Password != \"\" {\n\t\t\t\treq.SetBasicAuth(c.Config.Elasticsearch.Username, c.Config.Elasticsearch.Password)\n\t\t\t}\n\n",
                      "markdown": "`\t\t\t\treq.Header.Set(\"Authorization\", \"APIKey \"+c.Config.Elasticsearch.ApiKey)\n\t\t\t}\n\n\t\t\tif c.Config.Elasticsearch.Username != \"\" && c.Config.Elasticsearch.Password != \"\" {\n\t\t\t\treq.SetBasicAuth(c.Config.Elasticsearch.Username, c.Config.Elasticsearch.Password)\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/elasticsearch.go"
                },
                "region": {
                  "startLine": 175,
                  "startColumn": 38,
                  "endLine": 175,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tc.setElasticSearchErrorMetrics(failed)\n\t\t\t\t// Set success sz that is reported at the end of this function\n\t\t\t\tsz -= failed\n\t\t\t}\n\t\t} else {\n",
                    "rendered": {
                      "text": "\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tc.setElasticSearchErrorMetrics(failed)\n\t\t\t\t// Set success sz that is reported at the end of this function\n\t\t\t\tsz -= failed\n\t\t\t}\n\t\t} else {\n",
                      "markdown": "`\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tc.setElasticSearchErrorMetrics(failed)\n\t\t\t\t// Set success sz that is reported at the end of this function\n\t\t\t\tsz -= failed\n\t\t\t}\n\t\t} else {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/webui.go"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 9,
                  "endLine": 27,
                  "endColumn": 15,
                  "snippet": {
                    "text": "func (c *Client) WebUIPost(falcopayload types.FalcoPayload) {\n\tc.Stats.WebUI.Add(Total, 1)\n\n\terr := c.Post(newWebUIPayload(falcopayload))\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:webui\", \"status:error\"})\n\t\tc.Stats.WebUI.Add(Error, 1)\n",
                    "rendered": {
                      "text": "func (c *Client) WebUIPost(falcopayload types.FalcoPayload) {\n\tc.Stats.WebUI.Add(Total, 1)\n\n\terr := c.Post(newWebUIPayload(falcopayload))\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:webui\", \"status:error\"})\n\t\tc.Stats.WebUI.Add(Error, 1)\n",
                      "markdown": "`func (c *Client) WebUIPost(falcopayload types.FalcoPayload) {\n\tc.Stats.WebUI.Add(Total, 1)\n\n\terr := c.Post(newWebUIPayload(falcopayload))\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:webui\", \"status:error\"})\n\t\tc.Stats.WebUI.Add(Error, 1)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/rocketchat.go"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 9,
                  "endLine": 125,
                  "endColumn": 15,
                  "snippet": {
                    "text": "func (c *Client) RocketchatPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Rocketchat.Add(Total, 1)\n\n\terr := c.Post(newRocketchatPayload(falcopayload, c.Config))\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:rocketchat\", \"status:error\"})\n\t\tc.Stats.Rocketchat.Add(Error, 1)\n",
                    "rendered": {
                      "text": "func (c *Client) RocketchatPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Rocketchat.Add(Total, 1)\n\n\terr := c.Post(newRocketchatPayload(falcopayload, c.Config))\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:rocketchat\", \"status:error\"})\n\t\tc.Stats.Rocketchat.Add(Error, 1)\n",
                      "markdown": "`func (c *Client) RocketchatPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Rocketchat.Add(Total, 1)\n\n\terr := c.Post(newRocketchatPayload(falcopayload, c.Config))\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:rocketchat\", \"status:error\"})\n\t\tc.Stats.Rocketchat.Add(Error, 1)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/rocketchat.go"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 10,
                  "endLine": 93,
                  "snippet": {
                    "text": "\t\tcase types.Critical:\n\t\t\tcolor = Orange\n\t\tcase types.Error:\n\t\t\tcolor = Red\n\t\tcase types.Warning:\n\t\t\tcolor = Yellow\n\t\tcase types.Notice:\n\t\t\tcolor = Lightcyan\n",
                    "rendered": {
                      "text": "\t\tcase types.Critical:\n\t\t\tcolor = Orange\n\t\tcase types.Error:\n\t\t\tcolor = Red\n\t\tcase types.Warning:\n\t\t\tcolor = Yellow\n\t\tcase types.Notice:\n\t\t\tcolor = Lightcyan\n",
                      "markdown": "`\t\tcase types.Critical:\n\t\t\tcolor = Orange\n\t\tcase types.Error:\n\t\t\tcolor = Red\n\t\tcase types.Warning:\n\t\t\tcolor = Yellow\n\t\tcase types.Notice:\n\t\t\tcolor = Lightcyan\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/rocketchat.go"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 10,
                  "endLine": 87,
                  "snippet": {
                    "text": "\t\tvar color string\n\t\tswitch falcopayload.Priority {\n\t\tcase types.Emergency:\n\t\t\tcolor = Red\n\t\tcase types.Alert:\n\t\t\tcolor = Orange\n\t\tcase types.Critical:\n\t\t\tcolor = Orange\n",
                    "rendered": {
                      "text": "\t\tvar color string\n\t\tswitch falcopayload.Priority {\n\t\tcase types.Emergency:\n\t\t\tcolor = Red\n\t\tcase types.Alert:\n\t\t\tcolor = Orange\n\t\tcase types.Critical:\n\t\t\tcolor = Orange\n",
                      "markdown": "`\t\tvar color string\n\t\tswitch falcopayload.Priority {\n\t\tcase types.Emergency:\n\t\t\tcolor = Red\n\t\tcase types.Alert:\n\t\t\tcolor = Orange\n\t\tcase types.Critical:\n\t\t\tcolor = Orange\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/rocketchat.go"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 15,
                  "endLine": 56,
                  "snippet": {
                    "text": "\t\t\tfields = append(fields, field)\n\t\t}\n\n\t\tfield.Title = Time\n\t\tfield.Short = false\n\t\tfield.Value = falcopayload.Time.String()\n\t\tfields = append(fields, field)\n\t\tif falcopayload.Hostname != \"\" {\n",
                    "rendered": {
                      "text": "\t\t\tfields = append(fields, field)\n\t\t}\n\n\t\tfield.Title = Time\n\t\tfield.Short = false\n\t\tfield.Value = falcopayload.Time.String()\n\t\tfields = append(fields, field)\n\t\tif falcopayload.Hostname != \"\" {\n",
                      "markdown": "`\t\t\tfields = append(fields, field)\n\t\t}\n\n\t\tfield.Title = Time\n\t\tfield.Short = false\n\t\tfield.Value = falcopayload.Time.String()\n\t\tfields = append(fields, field)\n\t\tif falcopayload.Hostname != \"\" {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/timescaledb_test.go"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 3,
                  "endLine": 27,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t\"source\":           \"syscalls\",\n\t\t\"output\":           \"This is a test from falcosidekick\",\n\t\t\"tags\":             \"test,example\",\n\t\t\"hostname\":         \"test-host\",\n\t\t\"custom_field_1\":   \"test-custom-value-1\",\n\t\t\"template_field_1\": \"falcosidekick\",\n\t}\n",
                    "rendered": {
                      "text": "\t\t\"source\":           \"syscalls\",\n\t\t\"output\":           \"This is a test from falcosidekick\",\n\t\t\"tags\":             \"test,example\",\n\t\t\"hostname\":         \"test-host\",\n\t\t\"custom_field_1\":   \"test-custom-value-1\",\n\t\t\"template_field_1\": \"falcosidekick\",\n\t}\n",
                      "markdown": "`\t\t\"source\":           \"syscalls\",\n\t\t\"output\":           \"This is a test from falcosidekick\",\n\t\t\"tags\":             \"test,example\",\n\t\t\"hostname\":         \"test-host\",\n\t\t\"custom_field_1\":   \"test-custom-value-1\",\n\t\t\"template_field_1\": \"falcosidekick\",\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/influxdb.go"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 9,
                  "endLine": 44,
                  "endColumn": 15,
                  "snippet": {
                    "text": "func (c *Client) InfluxdbPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Influxdb.Add(Total, 1)\n\n\terr := c.Post(newInfluxdbPayload(falcopayload), func(req *http.Request) {\n\t\treq.Header.Set(\"Accept\", \"application/json\")\n\n\t\tif c.Config.Influxdb.Token != \"\" {\n",
                    "rendered": {
                      "text": "func (c *Client) InfluxdbPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Influxdb.Add(Total, 1)\n\n\terr := c.Post(newInfluxdbPayload(falcopayload), func(req *http.Request) {\n\t\treq.Header.Set(\"Accept\", \"application/json\")\n\n\t\tif c.Config.Influxdb.Token != \"\" {\n",
                      "markdown": "`func (c *Client) InfluxdbPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Influxdb.Add(Total, 1)\n\n\terr := c.Post(newInfluxdbPayload(falcopayload), func(req *http.Request) {\n\t\treq.Header.Set(\"Accept\", \"application/json\")\n\n\t\tif c.Config.Influxdb.Token != \"\" {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/yandex.go"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 8,
                  "endLine": 28,
                  "endColumn": 17,
                  "snippet": {
                    "text": "// NewYandexClient returns a new output.Client for accessing the Yandex API.\nfunc NewYandexClient(config *types.Configuration, stats *types.Statistics, promStats *types.PromStatistics, statsdClient, dogstatsdClient *statsd.Client) (*Client, error) {\n\tresolverFn := func(service, region string, optFns ...func(*endpoints.Options)) (endpoints.ResolvedEndpoint, error) {\n\t\tswitch service {\n\t\tcase endpoints.S3ServiceID:\n\t\t\treturn endpoints.ResolvedEndpoint{\n\t\t\t\tURL:           config.Yandex.S3.Endpoint,\n",
                    "rendered": {
                      "text": "// NewYandexClient returns a new output.Client for accessing the Yandex API.\nfunc NewYandexClient(config *types.Configuration, stats *types.Statistics, promStats *types.PromStatistics, statsdClient, dogstatsdClient *statsd.Client) (*Client, error) {\n\tresolverFn := func(service, region string, optFns ...func(*endpoints.Options)) (endpoints.ResolvedEndpoint, error) {\n\t\tswitch service {\n\t\tcase endpoints.S3ServiceID:\n\t\t\treturn endpoints.ResolvedEndpoint{\n\t\t\t\tURL:           config.Yandex.S3.Endpoint,\n",
                      "markdown": "`// NewYandexClient returns a new output.Client for accessing the Yandex API.\nfunc NewYandexClient(config *types.Configuration, stats *types.Statistics, promStats *types.PromStatistics, statsdClient, dogstatsdClient *statsd.Client) (*Client, error) {\n\tresolverFn := func(service, region string, optFns ...func(*endpoints.Options)) (endpoints.ResolvedEndpoint, error) {\n\t\tswitch service {\n\t\tcase endpoints.S3ServiceID:\n\t\t\treturn endpoints.ResolvedEndpoint{\n\t\t\t\tURL:           config.Yandex.S3.Endpoint,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/nodered.md"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 19,
                  "endLine": 35,
                  "endColumn": 27,
                  "snippet": {
                    "text": "nodered:\n  address: \"\" # Node-RED address, if not empty, Node-RFED output is enabled\n  # user: \"\" # User if Basic Auth is enabled for 'http in' node in Node-RED\n  # password: \"\" # Password if Basic Auth is enabled for 'http in' node in Node-RED\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n",
                    "rendered": {
                      "text": "nodered:\n  address: \"\" # Node-RED address, if not empty, Node-RFED output is enabled\n  # user: \"\" # User if Basic Auth is enabled for 'http in' node in Node-RED\n  # password: \"\" # Password if Basic Auth is enabled for 'http in' node in Node-RED\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n",
                      "markdown": "`nodered:\n  address: \"\" # Node-RED address, if not empty, Node-RFED output is enabled\n  # user: \"\" # User if Basic Auth is enabled for 'http in' node in Node-RED\n  # password: \"\" # Password if Basic Auth is enabled for 'http in' node in Node-RED\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/nodered.md"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 4,
                  "endLine": 35,
                  "endColumn": 12,
                  "snippet": {
                    "text": "nodered:\n  address: \"\" # Node-RED address, if not empty, Node-RFED output is enabled\n  # user: \"\" # User if Basic Auth is enabled for 'http in' node in Node-RED\n  # password: \"\" # Password if Basic Auth is enabled for 'http in' node in Node-RED\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n",
                    "rendered": {
                      "text": "nodered:\n  address: \"\" # Node-RED address, if not empty, Node-RFED output is enabled\n  # user: \"\" # User if Basic Auth is enabled for 'http in' node in Node-RED\n  # password: \"\" # Password if Basic Auth is enabled for 'http in' node in Node-RED\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n",
                      "markdown": "`nodered:\n  address: \"\" # Node-RED address, if not empty, Node-RFED output is enabled\n  # user: \"\" # User if Basic Auth is enabled for 'http in' node in Node-RED\n  # password: \"\" # Password if Basic Auth is enabled for 'http in' node in Node-RED\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/nodered.md"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 77,
                  "endLine": 21,
                  "endColumn": 85,
                  "snippet": {
                    "text": "          |\n| `nodered.user`            | `NODERED_USER`            |                  | User if Basic Auth is enabled for 'http in' node in Node-RED                                                                        |\n| `nodered.password`        | `NODERED_PASSWORD`        |                  | Password if Basic Auth is enabled for 'http in' node in Node-RED                                                                    |\n| `nodered.customheaders`   | `NODERED_CUSTOMHEADERS`   |                  | Custom headers for the POST request                                                              ",
                    "rendered": {
                      "text": "          |\n| `nodered.user`            | `NODERED_USER`            |                  | User if Basic Auth is enabled for 'http in' node in Node-RED                                                                        |\n| `nodered.password`        | `NODERED_PASSWORD`        |                  | Password if Basic Auth is enabled for 'http in' node in Node-RED                                                                    |\n| `nodered.customheaders`   | `NODERED_CUSTOMHEADERS`   |                  | Custom headers for the POST request                                                              ",
                      "markdown": "`          |\n| `nodered.user`            | `NODERED_USER`            |                  | User if Basic Auth is enabled for 'http in' node in Node-RED                                                                        |\n| `nodered.password`        | `NODERED_PASSWORD`        |                  | Password if Basic Auth is enabled for 'http in' node in Node-RED                                                                    |\n| `nodered.customheaders`   | `NODERED_CUSTOMHEADERS`   |                  | Custom headers for the POST request                                                              `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/nodered.md"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 39,
                  "endLine": 21,
                  "endColumn": 47,
                  "snippet": {
                    "text": "                                                |\n| `nodered.user`            | `NODERED_USER`            |                  | User if Basic Auth is enabled for 'http in' node in Node-RED                                                                        |\n| `nodered.password`        | `NODERED_PASSWORD`        |                  | Password if Basic Auth is enabled for 'http in' node in Node-RED                                                                    |\n| `nodered.customheaders`   | `NODERED_CUSTOMHEADERS`   |                  | Custom headers for the POST request                        ",
                    "rendered": {
                      "text": "                                                |\n| `nodered.user`            | `NODERED_USER`            |                  | User if Basic Auth is enabled for 'http in' node in Node-RED                                                                        |\n| `nodered.password`        | `NODERED_PASSWORD`        |                  | Password if Basic Auth is enabled for 'http in' node in Node-RED                                                                    |\n| `nodered.customheaders`   | `NODERED_CUSTOMHEADERS`   |                  | Custom headers for the POST request                        ",
                      "markdown": "`                                                |\n| `nodered.user`            | `NODERED_USER`            |                  | User if Basic Auth is enabled for 'http in' node in Node-RED                                                                        |\n| `nodered.password`        | `NODERED_PASSWORD`        |                  | Password if Basic Auth is enabled for 'http in' node in Node-RED                                                                    |\n| `nodered.customheaders`   | `NODERED_CUSTOMHEADERS`   |                  | Custom headers for the POST request                        `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/nodered.md"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 11,
                  "endLine": 21,
                  "endColumn": 19,
                  "snippet": {
                    "text": "bled**                                                                      |\n| `nodered.user`            | `NODERED_USER`            |                  | User if Basic Auth is enabled for 'http in' node in Node-RED                                                                        |\n| `nodered.password`        | `NODERED_PASSWORD`        |                  | Password if Basic Auth is enabled for 'http in' node in Node-RED                                                                    |\n| `nodered.customheaders`   | `NODERED_CUSTOMHEADERS`   |                  | Custom headers for the POST req",
                    "rendered": {
                      "text": "bled**                                                                      |\n| `nodered.user`            | `NODERED_USER`            |                  | User if Basic Auth is enabled for 'http in' node in Node-RED                                                                        |\n| `nodered.password`        | `NODERED_PASSWORD`        |                  | Password if Basic Auth is enabled for 'http in' node in Node-RED                                                                    |\n| `nodered.customheaders`   | `NODERED_CUSTOMHEADERS`   |                  | Custom headers for the POST req",
                      "markdown": "`bled**                                                                      |\n| `nodered.user`            | `NODERED_USER`            |                  | User if Basic Auth is enabled for 'http in' node in Node-RED                                                                        |\n| `nodered.password`        | `NODERED_PASSWORD`        |                  | Password if Basic Auth is enabled for 'http in' node in Node-RED                                                                    |\n| `nodered.customheaders`   | `NODERED_CUSTOMHEADERS`   |                  | Custom headers for the POST req`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/nodered.md"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 66,
                  "endLine": 35,
                  "endColumn": 72,
                  "snippet": {
                    "text": "nodered:\n  address: \"\" # Node-RED address, if not empty, Node-RFED output is enabled\n  # user: \"\" # User if Basic Auth is enabled for 'http in' node in Node-RED\n  # password: \"\" # Password if Basic Auth is enabled for 'http in' node in Node-RED\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n",
                    "rendered": {
                      "text": "nodered:\n  address: \"\" # Node-RED address, if not empty, Node-RFED output is enabled\n  # user: \"\" # User if Basic Auth is enabled for 'http in' node in Node-RED\n  # password: \"\" # Password if Basic Auth is enabled for 'http in' node in Node-RED\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n",
                      "markdown": "`nodered:\n  address: \"\" # Node-RED address, if not empty, Node-RFED output is enabled\n  # user: \"\" # User if Basic Auth is enabled for 'http in' node in Node-RED\n  # password: \"\" # Password if Basic Auth is enabled for 'http in' node in Node-RED\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/nodered.md"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "```yaml\nnodered:\n  address: \"\" # Node-RED address, if not empty, Node-RFED output is enabled\n  # user: \"\" # User if Basic Auth is enabled for 'http in' node in Node-RED\n  # password: \"\" # Password if Basic Auth is enabled for 'http in' node in Node-RED\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n",
                    "rendered": {
                      "text": "```yaml\nnodered:\n  address: \"\" # Node-RED address, if not empty, Node-RFED output is enabled\n  # user: \"\" # User if Basic Auth is enabled for 'http in' node in Node-RED\n  # password: \"\" # Password if Basic Auth is enabled for 'http in' node in Node-RED\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n",
                      "markdown": "````yaml\nnodered:\n  address: \"\" # Node-RED address, if not empty, Node-RFED output is enabled\n  # user: \"\" # User if Basic Auth is enabled for 'http in' node in Node-RED\n  # password: \"\" # Password if Basic Auth is enabled for 'http in' node in Node-RED\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/nodered.md"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 3,
                  "endLine": 27,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `nodered.minimumpriority` | `NODERED_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `nodered.minimumpriority` | `NODERED_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `nodered.minimumpriority` | `NODERED_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/nodered.md"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 124,
                  "endLine": 21,
                  "endColumn": 130,
                  "snippet": {
                    "text": "RED_USER`            |                  | User if Basic Auth is enabled for 'http in' node in Node-RED                                                                        |\n| `nodered.password`        | `NODERED_PASSWORD`        |                  | Password if Basic Auth is enabled for 'http in' node in Node-RED                                                                    |\n| `nodered.customheaders`   | `NODERED_CUSTOMHEADERS`   |                  | Custom headers for the POST request                                                                                                 |\n| `noder",
                    "rendered": {
                      "text": "RED_USER`            |                  | User if Basic Auth is enabled for 'http in' node in Node-RED                                                                        |\n| `nodered.password`        | `NODERED_PASSWORD`        |                  | Password if Basic Auth is enabled for 'http in' node in Node-RED                                                                    |\n| `nodered.customheaders`   | `NODERED_CUSTOMHEADERS`   |                  | Custom headers for the POST request                                                                                                 |\n| `noder",
                      "markdown": "`RED_USER`            |                  | User if Basic Auth is enabled for 'http in' node in Node-RED                                                                        |\n| `nodered.password`        | `NODERED_PASSWORD`        |                  | Password if Basic Auth is enabled for 'http in' node in Node-RED                                                                    |\n| `nodered.customheaders`   | `NODERED_CUSTOMHEADERS`   |                  | Custom headers for the POST request                                                                                                 |\n| `noder`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/nodered.md"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 120,
                  "endLine": 20,
                  "endColumn": 126,
                  "snippet": {
                    "text": "NODERED_ADDRESS`         |                  | Node-RED address, if not empty, Node-RED output is **enabled**                                                                      |\n| `nodered.user`            | `NODERED_USER`            |                  | User if Basic Auth is enabled for 'http in' node in Node-RED                                                                        |\n| `nodered.password`        | `NODERED_PASSWORD`        |                  | Password if Basic Auth is enabled for 'http in' node in Node-RED                                                                    |\n| `n",
                    "rendered": {
                      "text": "NODERED_ADDRESS`         |                  | Node-RED address, if not empty, Node-RED output is **enabled**                                                                      |\n| `nodered.user`            | `NODERED_USER`            |                  | User if Basic Auth is enabled for 'http in' node in Node-RED                                                                        |\n| `nodered.password`        | `NODERED_PASSWORD`        |                  | Password if Basic Auth is enabled for 'http in' node in Node-RED                                                                    |\n| `n",
                      "markdown": "`NODERED_ADDRESS`         |                  | Node-RED address, if not empty, Node-RED output is **enabled**                                                                      |\n| `nodered.user`            | `NODERED_USER`            |                  | User if Basic Auth is enabled for 'http in' node in Node-RED                                                                        |\n| `nodered.password`        | `NODERED_PASSWORD`        |                  | Password if Basic Auth is enabled for 'http in' node in Node-RED                                                                    |\n| `n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/nodered.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 29,
                  "endLine": 17,
                  "endColumn": 34,
                  "snippet": {
                    "text": "g/\n\n## Table of content\n\n- [Node-RED](#node-red)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                   | Env var                   | Default value    | Description                                                                                                                         |\n| ------------------------- | ------------------------- | ---------------- | ----------------------------------------------",
                    "rendered": {
                      "text": "g/\n\n## Table of content\n\n- [Node-RED](#node-red)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                   | Env var                   | Default value    | Description                                                                                                                         |\n| ------------------------- | ------------------------- | ---------------- | ----------------------------------------------",
                      "markdown": "`g/\n\n## Table of content\n\n- [Node-RED](#node-red)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                   | Env var                   | Default value    | Description                                                                                                                         |\n| ------------------------- | ------------------------- | ---------------- | ----------------------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/otlp_traces.md"
                },
                "region": {
                  "startLine": 221,
                  "startColumn": 31,
                  "endLine": 221,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\n### Run it\n\nTo bring up the stack, and peek at how Grafana shows it:\n\n1. Bring up the stack\n\n",
                    "rendered": {
                      "text": "\n### Run it\n\nTo bring up the stack, and peek at how Grafana shows it:\n\n1. Bring up the stack\n\n",
                      "markdown": "`\n### Run it\n\nTo bring up the stack, and peek at how Grafana shows it:\n\n1. Bring up the stack\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/otlp_traces.md"
                },
                "region": {
                  "startLine": 167,
                  "startColumn": 35,
                  "endLine": 168,
                  "endColumn": 4,
                  "snippet": {
                    "text": "  <https://github.com/falcosecurity/rules.git>\n\n```shell\nmkdir -p ./etc/falco/upstream-rules\ngit clone --depth 1 https://github.com/falcosecurity/rules/ ./etc/falco/upstream-rules\nln -s upstream-rules/rules ./etc/falco/rules\n```\n\n",
                    "rendered": {
                      "text": "  <https://github.com/falcosecurity/rules.git>\n\n```shell\nmkdir -p ./etc/falco/upstream-rules\ngit clone --depth 1 https://github.com/falcosecurity/rules/ ./etc/falco/upstream-rules\nln -s upstream-rules/rules ./etc/falco/rules\n```\n\n",
                      "markdown": "`  <https://github.com/falcosecurity/rules.git>\n\n```shell\nmkdir -p ./etc/falco/upstream-rules\ngit clone --depth 1 https://github.com/falcosecurity/rules/ ./etc/falco/upstream-rules\nln -s upstream-rules/rules ./etc/falco/rules\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/otlp_traces.md"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 41,
                  "endLine": 132,
                  "endColumn": 46,
                  "snippet": {
                    "text": "    restart: always\n  trigger:\n    image: alpine\n    command: [\"sh\", \"-c\", \"while true; do cat /etc/shadow > /dev/null; sleep 5; done\"]\n```\n\n- `./etc/falco/falco.yaml`: minimal falco configuration\n",
                    "rendered": {
                      "text": "    restart: always\n  trigger:\n    image: alpine\n    command: [\"sh\", \"-c\", \"while true; do cat /etc/shadow > /dev/null; sleep 5; done\"]\n```\n\n- `./etc/falco/falco.yaml`: minimal falco configuration\n",
                      "markdown": "`    restart: always\n  trigger:\n    image: alpine\n    command: [\"sh\", \"-c\", \"while true; do cat /etc/shadow > /dev/null; sleep 5; done\"]\n```\n\n- `./etc/falco/falco.yaml`: minimal falco configuration\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/otlp_traces.md"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 27,
                  "endLine": 43,
                  "endColumn": 32,
                  "snippet": {
                    "text": "y to all outgoing traces in the form of \"some-key=some-value,other-key=other-value\" (default: \"\")\n    # synced: false # Set to true if you want traces to be sent synchronously (default: false)\n    # duration: 1000 # Artificial span duration in milliseconds (default: 1000)\n    # extraenvvars: # Extra env vars (override the other settings)\n      # OTEL_EXPORTER_OTLP_TRACES_TIMEOUT: 10000\n      # OTEL_EXPORTER_OTLP_TIMEOUT: 10000\n    # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n    # ",
                    "rendered": {
                      "text": "y to all outgoing traces in the form of \"some-key=some-value,other-key=other-value\" (default: \"\")\n    # synced: false # Set to true if you want traces to be sent synchronously (default: false)\n    # duration: 1000 # Artificial span duration in milliseconds (default: 1000)\n    # extraenvvars: # Extra env vars (override the other settings)\n      # OTEL_EXPORTER_OTLP_TRACES_TIMEOUT: 10000\n      # OTEL_EXPORTER_OTLP_TIMEOUT: 10000\n    # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n    # ",
                      "markdown": "`y to all outgoing traces in the form of \"some-key=some-value,other-key=other-value\" (default: \"\")\n    # synced: false # Set to true if you want traces to be sent synchronously (default: false)\n    # duration: 1000 # Artificial span duration in milliseconds (default: 1000)\n    # extraenvvars: # Extra env vars (override the other settings)\n      # OTEL_EXPORTER_OTLP_TRACES_TIMEOUT: 10000\n      # OTEL_EXPORTER_OTLP_TIMEOUT: 10000\n    # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n    # `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/otlp_traces.md"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 33,
                  "endLine": 39,
                  "endColumn": 42,
                  "snippet": {
                    "text": "-variables/):\n\n## Example of config.yaml\n\n```yaml\notlp:\n  traces:\n    # endpoint: \"\" # OTLP endpoint in the form of http://{domain or ip}:4318/v1/traces\n    # protocol: \"\" # OTLP protocol http/json, http/protobuf, grpc (default: \"\" which uses SDK default: http/json)\n    # timeout: \"\" # OTLP timeout: timeout value in milliseconds (default: \"\" which uses SDK default: 10000)\n    # headers: \"\" # OTLP headers: list of headers to apply to all outgoing traces in the form of \"some-key=some-value,other-key=other-value\" (default: \"\")\n    # synced: false # Set to true if you want traces to be sent synchronously (",
                    "rendered": {
                      "text": "-variables/):\n\n## Example of config.yaml\n\n```yaml\notlp:\n  traces:\n    # endpoint: \"\" # OTLP endpoint in the form of http://{domain or ip}:4318/v1/traces\n    # protocol: \"\" # OTLP protocol http/json, http/protobuf, grpc (default: \"\" which uses SDK default: http/json)\n    # timeout: \"\" # OTLP timeout: timeout value in milliseconds (default: \"\" which uses SDK default: 10000)\n    # headers: \"\" # OTLP headers: list of headers to apply to all outgoing traces in the form of \"some-key=some-value,other-key=other-value\" (default: \"\")\n    # synced: false # Set to true if you want traces to be sent synchronously (",
                      "markdown": "`-variables/):\n\n## Example of config.yaml\n\n```yaml\notlp:\n  traces:\n    # endpoint: \"\" # OTLP endpoint in the form of http://{domain or ip}:4318/v1/traces\n    # protocol: \"\" # OTLP protocol http/json, http/protobuf, grpc (default: \"\" which uses SDK default: http/json)\n    # timeout: \"\" # OTLP timeout: timeout value in milliseconds (default: \"\" which uses SDK default: 10000)\n    # headers: \"\" # OTLP headers: list of headers to apply to all outgoing traces in the form of \"some-key=some-value,other-key=other-value\" (default: \"\")\n    # synced: false # Set to true if you want traces to be sent synchronously (`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/otlp_traces.md"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 13,
                  "endLine": 30,
                  "endColumn": 18,
                  "snippet": {
                    "text": "| `otlp.traces.extraenvvars`    | `OTLP_TRACES_EXTRAENVVARS`    |                    | Extra env vars (override the other settings)                                                                                        |\n\n> [!NOTE]\nFor the extra Env Vars values see [standard `OTEL_*` environment variables](https://opentelemetry.io/docs/specs/otel/configuration/sdk-environment-variables/):\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `otlp.traces.extraenvvars`    | `OTLP_TRACES_EXTRAENVVARS`    |                    | Extra env vars (override the other settings)                                                                                        |\n\n> [!NOTE]\nFor the extra Env Vars values see [standard `OTEL_*` environment variables](https://opentelemetry.io/docs/specs/otel/configuration/sdk-environment-variables/):\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `otlp.traces.extraenvvars`    | `OTLP_TRACES_EXTRAENVVARS`    |                    | Extra env vars (override the other settings)                                                                                        |\n\n> [!NOTE]\nFor the extra Env Vars values see [standard `OTEL_*` environment variables](https://opentelemetry.io/docs/specs/otel/configuration/sdk-environment-variables/):\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/otlp_traces.md"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 92,
                  "endLine": 27,
                  "endColumn": 97,
                  "snippet": {
                    "text": "s.duration`        | `OTLP_TRACES_DURATION`        | `1000`             | Artificial span duration in milliseconds (as Falco doesn't provide an ending timestamp)                                             |\n| `otlp.traces.extraenvvars`    | `OTLP_TRACES_EXTRAENVVARS`    |                    | Extra env vars (override the other settings)                                                                                        |\n\n> [!NOTE]\nFor the extra Env Vars values see [standard `OTEL_*` environment variables](https://opentelemetry.io/docs/specs/otel/configuration/sdk-environment-variables/):\n\n## E",
                    "rendered": {
                      "text": "s.duration`        | `OTLP_TRACES_DURATION`        | `1000`             | Artificial span duration in milliseconds (as Falco doesn't provide an ending timestamp)                                             |\n| `otlp.traces.extraenvvars`    | `OTLP_TRACES_EXTRAENVVARS`    |                    | Extra env vars (override the other settings)                                                                                        |\n\n> [!NOTE]\nFor the extra Env Vars values see [standard `OTEL_*` environment variables](https://opentelemetry.io/docs/specs/otel/configuration/sdk-environment-variables/):\n\n## E",
                      "markdown": "`s.duration`        | `OTLP_TRACES_DURATION`        | `1000`             | Artificial span duration in milliseconds (as Falco doesn't provide an ending timestamp)                                             |\n| `otlp.traces.extraenvvars`    | `OTLP_TRACES_EXTRAENVVARS`    |                    | Extra env vars (override the other settings)                                                                                        |\n\n> [!NOTE]\nFor the extra Env Vars values see [standard `OTEL_*` environment variables](https://opentelemetry.io/docs/specs/otel/configuration/sdk-environment-variables/):\n\n## E`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/otlp_traces.md"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 86,
                  "endLine": 21,
                  "endColumn": 95,
                  "snippet": {
                    "text": ".traces.protocol`        | `OTLP_TRACES_PROTOCOL`        | `http` (from SDK)  | OTLP Protocol                                                                                                                       |\n| `otlp.traces.timeout`         | `OTLP_TRACES_TIMEOUT`         | `10000` (from SDK) | Timeout value in milliseconds                                                                                                       |\n| `otlp.traces.headers`         | `OTLP_TRACES_HEADERS`         |                    | List of headers to apply to all outgoing traces in the form of \"some-key=some-value,oth",
                    "rendered": {
                      "text": ".traces.protocol`        | `OTLP_TRACES_PROTOCOL`        | `http` (from SDK)  | OTLP Protocol                                                                                                                       |\n| `otlp.traces.timeout`         | `OTLP_TRACES_TIMEOUT`         | `10000` (from SDK) | Timeout value in milliseconds                                                                                                       |\n| `otlp.traces.headers`         | `OTLP_TRACES_HEADERS`         |                    | List of headers to apply to all outgoing traces in the form of \"some-key=some-value,oth",
                      "markdown": "`.traces.protocol`        | `OTLP_TRACES_PROTOCOL`        | `http` (from SDK)  | OTLP Protocol                                                                                                                       |\n| `otlp.traces.timeout`         | `OTLP_TRACES_TIMEOUT`         | `10000` (from SDK) | Timeout value in milliseconds                                                                                                       |\n| `otlp.traces.headers`         | `OTLP_TRACES_HEADERS`         |                    | List of headers to apply to all outgoing traces in the form of \"some-key=some-value,oth`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/otlp_traces.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 44,
                  "endLine": 17,
                  "endColumn": 49,
                  "snippet": {
                    "text": "ble-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Running a whole stack with docker-compose](#running-a-whole-stack-with-docker-compose)\n\n## Configuration\n\n|            Setting            |            Env var            |   Default value    |                                                             Description                                                             |\n| ----------------------------- | ----------------------------- | ------------------ | -----------------------------------------",
                    "rendered": {
                      "text": "ble-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Running a whole stack with docker-compose](#running-a-whole-stack-with-docker-compose)\n\n## Configuration\n\n|            Setting            |            Env var            |   Default value    |                                                             Description                                                             |\n| ----------------------------- | ----------------------------- | ------------------ | -----------------------------------------",
                      "markdown": "`ble-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Running a whole stack with docker-compose](#running-a-whole-stack-with-docker-compose)\n\n## Configuration\n\n|            Setting            |            Env var            |   Default value    |                                                             Description                                                             |\n| ----------------------------- | ----------------------------- | ------------------ | -----------------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/kubeless.md"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 22,
                  "endLine": 35,
                  "endColumn": 31,
                  "snippet": {
                    "text": "kubeless:\n  function: \"\" # Name of Kubeless function, if not empty, Kubeless is enabled\n  namespace: \"\" # Namespace of Kubeless function (mandatory)\n  port: 8080 # Port of service of Kubeless function\n  kubeconfig: \"~/.kube/config\" # Kubeconfig file to use (only if falcosidekick is running outside the cluster)\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n",
                    "rendered": {
                      "text": "kubeless:\n  function: \"\" # Name of Kubeless function, if not empty, Kubeless is enabled\n  namespace: \"\" # Namespace of Kubeless function (mandatory)\n  port: 8080 # Port of service of Kubeless function\n  kubeconfig: \"~/.kube/config\" # Kubeconfig file to use (only if falcosidekick is running outside the cluster)\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n",
                      "markdown": "`kubeless:\n  function: \"\" # Name of Kubeless function, if not empty, Kubeless is enabled\n  namespace: \"\" # Namespace of Kubeless function (mandatory)\n  port: 8080 # Port of service of Kubeless function\n  kubeconfig: \"~/.kube/config\" # Kubeconfig file to use (only if falcosidekick is running outside the cluster)\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/kubeless.md"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 3,
                  "endLine": 27,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `kubeless.minimumpriority` | `KUBELESS_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `kubeless.minimumpriority` | `KUBELESS_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `kubeless.minimumpriority` | `KUBELESS_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/kubeless.md"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 86,
                  "endLine": 22,
                  "endColumn": 95,
                  "snippet": {
                    "text": "\n| `kubeless.port`            | `KUBELESS_PORT`            | `8080`           | Port of service of Kubeless function                                                                                                |\n| `kubeless.port`            | `KUBELESS_PORT`            | `~/.kube/config` | Port of service of Kubeless function                                                                                                |\n| `kubeless.kubeconfig`      | `KUBELESS_KUBECONFIG`      | `true`           | Kubeconfig file to use (only if falcosidekick is running outside the cluster)                          ",
                    "rendered": {
                      "text": "\n| `kubeless.port`            | `KUBELESS_PORT`            | `8080`           | Port of service of Kubeless function                                                                                                |\n| `kubeless.port`            | `KUBELESS_PORT`            | `~/.kube/config` | Port of service of Kubeless function                                                                                                |\n| `kubeless.kubeconfig`      | `KUBELESS_KUBECONFIG`      | `true`           | Kubeconfig file to use (only if falcosidekick is running outside the cluster)                          ",
                      "markdown": "`\n| `kubeless.port`            | `KUBELESS_PORT`            | `8080`           | Port of service of Kubeless function                                                                                                |\n| `kubeless.port`            | `KUBELESS_PORT`            | `~/.kube/config` | Port of service of Kubeless function                                                                                                |\n| `kubeless.kubeconfig`      | `KUBELESS_KUBECONFIG`      | `true`           | Kubeconfig file to use (only if falcosidekick is running outside the cluster)                          `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/kubeless.md"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 86,
                  "endLine": 21,
                  "endColumn": 95,
                  "snippet": {
                    "text": "\n| `kubeless.namespace`       | `KUBELESS_NAMESPACE`       |                  | Namespace of Kubeless function (mandatory)                                                                                          |\n| `kubeless.port`            | `KUBELESS_PORT`            | `8080`           | Port of service of Kubeless function                                                                                                |\n| `kubeless.port`            | `KUBELESS_PORT`            | `~/.kube/config` | Port of service of Kubeless function                                                                   ",
                    "rendered": {
                      "text": "\n| `kubeless.namespace`       | `KUBELESS_NAMESPACE`       |                  | Namespace of Kubeless function (mandatory)                                                                                          |\n| `kubeless.port`            | `KUBELESS_PORT`            | `8080`           | Port of service of Kubeless function                                                                                                |\n| `kubeless.port`            | `KUBELESS_PORT`            | `~/.kube/config` | Port of service of Kubeless function                                                                   ",
                      "markdown": "`\n| `kubeless.namespace`       | `KUBELESS_NAMESPACE`       |                  | Namespace of Kubeless function (mandatory)                                                                                          |\n| `kubeless.port`            | `KUBELESS_PORT`            | `8080`           | Port of service of Kubeless function                                                                                                |\n| `kubeless.port`            | `KUBELESS_PORT`            | `~/.kube/config` | Port of service of Kubeless function                                                                   `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/kubeless.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 30,
                  "endLine": 17,
                  "endColumn": 35,
                  "snippet": {
                    "text": "/\n\n## Table of content\n\n- [Kubeless](#kubeless)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                    | Env var                    | Default value    | Description                                                                                                                         |\n| -------------------------- | -------------------------- | ---------------- | -------------------------------------------",
                    "rendered": {
                      "text": "/\n\n## Table of content\n\n- [Kubeless](#kubeless)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                    | Env var                    | Default value    | Description                                                                                                                         |\n| -------------------------- | -------------------------- | ---------------- | -------------------------------------------",
                      "markdown": "`/\n\n## Table of content\n\n- [Kubeless](#kubeless)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                    | Env var                    | Default value    | Description                                                                                                                         |\n| -------------------------- | -------------------------- | ---------------- | -------------------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/zincsearch.md"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 28,
                  "endLine": 36,
                  "endColumn": 36,
                  "snippet": {
                    "text": "  hostport: \"\" # http://{domain or ip}:{port}, if not empty, ZincSearch output is enabled\n  # index: \"falco\" # Index (default: falco)\n  # username: \"\" # Use this username to authenticate to ZincSearch (default: \"\")\n  # password: \"\" # Use this password to authenticate to ZincSearch (default: \"\")\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n```\n",
                    "rendered": {
                      "text": "  hostport: \"\" # http://{domain or ip}:{port}, if not empty, ZincSearch output is enabled\n  # index: \"falco\" # Index (default: falco)\n  # username: \"\" # Use this username to authenticate to ZincSearch (default: \"\")\n  # password: \"\" # Use this password to authenticate to ZincSearch (default: \"\")\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n```\n",
                      "markdown": "`  hostport: \"\" # http://{domain or ip}:{port}, if not empty, ZincSearch output is enabled\n  # index: \"falco\" # Index (default: falco)\n  # username: \"\" # Use this username to authenticate to ZincSearch (default: \"\")\n  # password: \"\" # Use this password to authenticate to ZincSearch (default: \"\")\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/zincsearch.md"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 4,
                  "endLine": 36,
                  "endColumn": 12,
                  "snippet": {
                    "text": "  hostport: \"\" # http://{domain or ip}:{port}, if not empty, ZincSearch output is enabled\n  # index: \"falco\" # Index (default: falco)\n  # username: \"\" # Use this username to authenticate to ZincSearch (default: \"\")\n  # password: \"\" # Use this password to authenticate to ZincSearch (default: \"\")\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n```\n",
                    "rendered": {
                      "text": "  hostport: \"\" # http://{domain or ip}:{port}, if not empty, ZincSearch output is enabled\n  # index: \"falco\" # Index (default: falco)\n  # username: \"\" # Use this username to authenticate to ZincSearch (default: \"\")\n  # password: \"\" # Use this password to authenticate to ZincSearch (default: \"\")\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n```\n",
                      "markdown": "`  hostport: \"\" # http://{domain or ip}:{port}, if not empty, ZincSearch output is enabled\n  # index: \"falco\" # Index (default: falco)\n  # username: \"\" # Use this username to authenticate to ZincSearch (default: \"\")\n  # password: \"\" # Use this password to authenticate to ZincSearch (default: \"\")\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/zincsearch.md"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 92,
                  "endLine": 22,
                  "endColumn": 100,
                  "snippet": {
                    "text": "arch.username`        | `ZINCSEARCH_USERNAME`        |                  | Use this username to authenticate to ZincSearch                                                                                     |\n| `zincsearch.password`        | `ZINCSEARCH_PASSWORD`        |                  | Use this password to authenticate to ZincSearch                                                                                     |\n| `zincsearch.checkcert`       | `ZINCSEARCH_CHECKCERT`       | `true`           | Check if ssl certificate of the output is valid                                                     ",
                    "rendered": {
                      "text": "arch.username`        | `ZINCSEARCH_USERNAME`        |                  | Use this username to authenticate to ZincSearch                                                                                     |\n| `zincsearch.password`        | `ZINCSEARCH_PASSWORD`        |                  | Use this password to authenticate to ZincSearch                                                                                     |\n| `zincsearch.checkcert`       | `ZINCSEARCH_CHECKCERT`       | `true`           | Check if ssl certificate of the output is valid                                                     ",
                      "markdown": "`arch.username`        | `ZINCSEARCH_USERNAME`        |                  | Use this username to authenticate to ZincSearch                                                                                     |\n| `zincsearch.password`        | `ZINCSEARCH_PASSWORD`        |                  | Use this password to authenticate to ZincSearch                                                                                     |\n| `zincsearch.checkcert`       | `ZINCSEARCH_CHECKCERT`       | `true`           | Check if ssl certificate of the output is valid                                                     `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/zincsearch.md"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 45,
                  "endLine": 22,
                  "endColumn": 53,
                  "snippet": {
                    "text": "                                    |\n| `zincsearch.username`        | `ZINCSEARCH_USERNAME`        |                  | Use this username to authenticate to ZincSearch                                                                                     |\n| `zincsearch.password`        | `ZINCSEARCH_PASSWORD`        |                  | Use this password to authenticate to ZincSearch                                                                                     |\n| `zincsearch.checkcert`       | `ZINCSEARCH_CHECKCERT`       | `true`           | Check if ssl certificate of the output is valid      ",
                    "rendered": {
                      "text": "                                    |\n| `zincsearch.username`        | `ZINCSEARCH_USERNAME`        |                  | Use this username to authenticate to ZincSearch                                                                                     |\n| `zincsearch.password`        | `ZINCSEARCH_PASSWORD`        |                  | Use this password to authenticate to ZincSearch                                                                                     |\n| `zincsearch.checkcert`       | `ZINCSEARCH_CHECKCERT`       | `true`           | Check if ssl certificate of the output is valid      ",
                      "markdown": "`                                    |\n| `zincsearch.username`        | `ZINCSEARCH_USERNAME`        |                  | Use this username to authenticate to ZincSearch                                                                                     |\n| `zincsearch.password`        | `ZINCSEARCH_PASSWORD`        |                  | Use this password to authenticate to ZincSearch                                                                                     |\n| `zincsearch.checkcert`       | `ZINCSEARCH_CHECKCERT`       | `true`           | Check if ssl certificate of the output is valid      `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/zincsearch.md"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 14,
                  "endLine": 22,
                  "endColumn": 22,
                  "snippet": {
                    "text": "                                                                   |\n| `zincsearch.username`        | `ZINCSEARCH_USERNAME`        |                  | Use this username to authenticate to ZincSearch                                                                                     |\n| `zincsearch.password`        | `ZINCSEARCH_PASSWORD`        |                  | Use this password to authenticate to ZincSearch                                                                                     |\n| `zincsearch.checkcert`       | `ZINCSEARCH_CHECKCERT`       | `true`           | Check if ssl certifica",
                    "rendered": {
                      "text": "                                                                   |\n| `zincsearch.username`        | `ZINCSEARCH_USERNAME`        |                  | Use this username to authenticate to ZincSearch                                                                                     |\n| `zincsearch.password`        | `ZINCSEARCH_PASSWORD`        |                  | Use this password to authenticate to ZincSearch                                                                                     |\n| `zincsearch.checkcert`       | `ZINCSEARCH_CHECKCERT`       | `true`           | Check if ssl certifica",
                      "markdown": "`                                                                   |\n| `zincsearch.username`        | `ZINCSEARCH_USERNAME`        |                  | Use this username to authenticate to ZincSearch                                                                                     |\n| `zincsearch.password`        | `ZINCSEARCH_PASSWORD`        |                  | Use this password to authenticate to ZincSearch                                                                                     |\n| `zincsearch.checkcert`       | `ZINCSEARCH_CHECKCERT`       | `true`           | Check if ssl certifica`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/zincsearch.md"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 3,
                  "endLine": 27,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `zincsearch.minimumpriority` | `ZINCSEARCH_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `zincsearch.minimumpriority` | `ZINCSEARCH_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `zincsearch.minimumpriority` | `ZINCSEARCH_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/zincsearch.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 32,
                  "endLine": 17,
                  "endColumn": 37,
                  "snippet": {
                    "text": "Table of content\n\n- [Zincsearch](#zincsearch)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                      | Env var                      | Default value    | Description                                                                                                                         |\n| ---------------------------- | ---------------------------- | ---------------- | -------------------------------------",
                    "rendered": {
                      "text": "Table of content\n\n- [Zincsearch](#zincsearch)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                      | Env var                      | Default value    | Description                                                                                                                         |\n| ---------------------------- | ---------------------------- | ---------------- | -------------------------------------",
                      "markdown": "`Table of content\n\n- [Zincsearch](#zincsearch)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                      | Env var                      | Default value    | Description                                                                                                                         |\n| ---------------------------- | ---------------------------- | ---------------- | -------------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/aws_sns.md"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 3,
                  "endLine": 31,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `aws.sns.minimumpriority` | `AWS_SNS_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `aws.sns.minimumpriority` | `AWS_SNS_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `aws.sns.minimumpriority` | `AWS_SNS_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/aws_sns.md"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 29,
                  "endLine": 18,
                  "endColumn": 34,
                  "snippet": {
                    "text": "s)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n    - [SNS Sample Policy](#sns-sample-policy)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                   | Env var                   | Default value    | Description                                                                                                                         |\n| ------------------------- | ------------------------- | ---------------- | ----------------------------------------------",
                    "rendered": {
                      "text": "s)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n    - [SNS Sample Policy](#sns-sample-policy)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                   | Env var                   | Default value    | Description                                                                                                                         |\n| ------------------------- | ------------------------- | ---------------- | ----------------------------------------------",
                      "markdown": "`s)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n    - [SNS Sample Policy](#sns-sample-policy)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                   | Env var                   | Default value    | Description                                                                                                                         |\n| ------------------------- | ------------------------- | ---------------- | ----------------------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/spyderbat.md"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 3,
                  "endLine": 27,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `spyperbat.minimumpriority`   | `SPYPERBAT_MINIMUMPRIORITY`   | `\"\"` (= `debug`)            | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `spyperbat.minimumpriority`   | `SPYPERBAT_MINIMUMPRIORITY`   | `\"\"` (= `debug`)            | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `spyperbat.minimumpriority`   | `SPYPERBAT_MINIMUMPRIORITY`   | `\"\"` (= `debug`)            | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/spyderbat.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 33,
                  "endLine": 17,
                  "endColumn": 38,
                  "snippet": {
                    "text": " Table of content\n\n- [Spyderbat](#spyderbat)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                       | Env var                       | Default value               | Description                                                                                                                         |\n| ----------------------------- | ----------------------------- | --------------------------- | ------------",
                    "rendered": {
                      "text": " Table of content\n\n- [Spyderbat](#spyderbat)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                       | Env var                       | Default value               | Description                                                                                                                         |\n| ----------------------------- | ----------------------------- | --------------------------- | ------------",
                      "markdown": "` Table of content\n\n- [Spyderbat](#spyderbat)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                       | Env var                       | Default value               | Description                                                                                                                         |\n| ----------------------------- | ----------------------------- | --------------------------- | ------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/elasticsearch.md"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 77,
                  "endLine": 62,
                  "endColumn": 85,
                  "snippet": {
                    "text": "  # type: \"_doc\"\n  # suffix: \"daily\" # date suffix for index rotation : daily (default), monthly, annually, none\n  # username: \"\" # use this username to authenticate to Elasticsearch if the username is not empty (default: \"\")\n  # password: \"\" # use this password to authenticate to Elasticsearch if the password is not empty (default: \"\")\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n",
                    "rendered": {
                      "text": "  # type: \"_doc\"\n  # suffix: \"daily\" # date suffix for index rotation : daily (default), monthly, annually, none\n  # username: \"\" # use this username to authenticate to Elasticsearch if the username is not empty (default: \"\")\n  # password: \"\" # use this password to authenticate to Elasticsearch if the password is not empty (default: \"\")\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n",
                      "markdown": "`  # type: \"_doc\"\n  # suffix: \"daily\" # date suffix for index rotation : daily (default), monthly, annually, none\n  # username: \"\" # use this username to authenticate to Elasticsearch if the username is not empty (default: \"\")\n  # password: \"\" # use this password to authenticate to Elasticsearch if the password is not empty (default: \"\")\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/elasticsearch.md"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 28,
                  "endLine": 62,
                  "endColumn": 36,
                  "snippet": {
                    "text": "  # type: \"_doc\"\n  # suffix: \"daily\" # date suffix for index rotation : daily (default), monthly, annually, none\n  # username: \"\" # use this username to authenticate to Elasticsearch if the username is not empty (default: \"\")\n  # password: \"\" # use this password to authenticate to Elasticsearch if the password is not empty (default: \"\")\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n",
                    "rendered": {
                      "text": "  # type: \"_doc\"\n  # suffix: \"daily\" # date suffix for index rotation : daily (default), monthly, annually, none\n  # username: \"\" # use this username to authenticate to Elasticsearch if the username is not empty (default: \"\")\n  # password: \"\" # use this password to authenticate to Elasticsearch if the password is not empty (default: \"\")\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n",
                      "markdown": "`  # type: \"_doc\"\n  # suffix: \"daily\" # date suffix for index rotation : daily (default), monthly, annually, none\n  # username: \"\" # use this username to authenticate to Elasticsearch if the username is not empty (default: \"\")\n  # password: \"\" # use this password to authenticate to Elasticsearch if the password is not empty (default: \"\")\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/elasticsearch.md"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 4,
                  "endLine": 62,
                  "endColumn": 12,
                  "snippet": {
                    "text": "  # type: \"_doc\"\n  # suffix: \"daily\" # date suffix for index rotation : daily (default), monthly, annually, none\n  # username: \"\" # use this username to authenticate to Elasticsearch if the username is not empty (default: \"\")\n  # password: \"\" # use this password to authenticate to Elasticsearch if the password is not empty (default: \"\")\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n",
                    "rendered": {
                      "text": "  # type: \"_doc\"\n  # suffix: \"daily\" # date suffix for index rotation : daily (default), monthly, annually, none\n  # username: \"\" # use this username to authenticate to Elasticsearch if the username is not empty (default: \"\")\n  # password: \"\" # use this password to authenticate to Elasticsearch if the password is not empty (default: \"\")\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n",
                      "markdown": "`  # type: \"_doc\"\n  # suffix: \"daily\" # date suffix for index rotation : daily (default), monthly, annually, none\n  # username: \"\" # use this username to authenticate to Elasticsearch if the username is not empty (default: \"\")\n  # password: \"\" # use this password to authenticate to Elasticsearch if the password is not empty (default: \"\")\n  # customHeaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/elasticsearch.md"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 111,
                  "endLine": 25,
                  "endColumn": 119,
                  "snippet": {
                    "text": "TICSEARCH_USERNAME`               |                  | Use this username to authenticate to Elasticsearch                                                                                  |\n| `elasticsearch.password`              | `ELASTICSEARCH_PASSWORD`               |                  | Use this password to authenticate to Elasticsearch                                                                                  |\n| `elasticsearch.flattenfields`         | `ELASTICSEARCH_FLATTENFIELDS`          | `false`          | Replace . by _ to avoid mapping conflicts, force to true if `createindextemplate=",
                    "rendered": {
                      "text": "TICSEARCH_USERNAME`               |                  | Use this username to authenticate to Elasticsearch                                                                                  |\n| `elasticsearch.password`              | `ELASTICSEARCH_PASSWORD`               |                  | Use this password to authenticate to Elasticsearch                                                                                  |\n| `elasticsearch.flattenfields`         | `ELASTICSEARCH_FLATTENFIELDS`          | `false`          | Replace . by _ to avoid mapping conflicts, force to true if `createindextemplate=",
                      "markdown": "`TICSEARCH_USERNAME`               |                  | Use this username to authenticate to Elasticsearch                                                                                  |\n| `elasticsearch.password`              | `ELASTICSEARCH_PASSWORD`               |                  | Use this password to authenticate to Elasticsearch                                                                                  |\n| `elasticsearch.flattenfields`         | `ELASTICSEARCH_FLATTENFIELDS`          | `false`          | Replace . by _ to avoid mapping conflicts, force to true if `createindextemplate=`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/elasticsearch.md"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 57,
                  "endLine": 25,
                  "endColumn": 65,
                  "snippet": {
                    "text": "     |\n| `elasticsearch.username`              | `ELASTICSEARCH_USERNAME`               |                  | Use this username to authenticate to Elasticsearch                                                                                  |\n| `elasticsearch.password`              | `ELASTICSEARCH_PASSWORD`               |                  | Use this password to authenticate to Elasticsearch                                                                                  |\n| `elasticsearch.flattenfields`         | `ELASTICSEARCH_FLATTENFIELDS`          | `false`          | Replace . by _ to avoid map",
                    "rendered": {
                      "text": "     |\n| `elasticsearch.username`              | `ELASTICSEARCH_USERNAME`               |                  | Use this username to authenticate to Elasticsearch                                                                                  |\n| `elasticsearch.password`              | `ELASTICSEARCH_PASSWORD`               |                  | Use this password to authenticate to Elasticsearch                                                                                  |\n| `elasticsearch.flattenfields`         | `ELASTICSEARCH_FLATTENFIELDS`          | `false`          | Replace . by _ to avoid map",
                      "markdown": "`     |\n| `elasticsearch.username`              | `ELASTICSEARCH_USERNAME`               |                  | Use this username to authenticate to Elasticsearch                                                                                  |\n| `elasticsearch.password`              | `ELASTICSEARCH_PASSWORD`               |                  | Use this password to authenticate to Elasticsearch                                                                                  |\n| `elasticsearch.flattenfields`         | `ELASTICSEARCH_FLATTENFIELDS`          | `false`          | Replace . by _ to avoid map`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/elasticsearch.md"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 17,
                  "endLine": 25,
                  "endColumn": 25,
                  "snippet": {
                    "text": "                                             |\n| `elasticsearch.username`              | `ELASTICSEARCH_USERNAME`               |                  | Use this username to authenticate to Elasticsearch                                                                                  |\n| `elasticsearch.password`              | `ELASTICSEARCH_PASSWORD`               |                  | Use this password to authenticate to Elasticsearch                                                                                  |\n| `elasticsearch.flattenfields`         | `ELASTICSEARCH_FLATTENFIELDS`          | `false",
                    "rendered": {
                      "text": "                                             |\n| `elasticsearch.username`              | `ELASTICSEARCH_USERNAME`               |                  | Use this username to authenticate to Elasticsearch                                                                                  |\n| `elasticsearch.password`              | `ELASTICSEARCH_PASSWORD`               |                  | Use this password to authenticate to Elasticsearch                                                                                  |\n| `elasticsearch.flattenfields`         | `ELASTICSEARCH_FLATTENFIELDS`          | `false",
                      "markdown": "`                                             |\n| `elasticsearch.username`              | `ELASTICSEARCH_USERNAME`               |                  | Use this username to authenticate to Elasticsearch                                                                                  |\n| `elasticsearch.password`              | `ELASTICSEARCH_PASSWORD`               |                  | Use this password to authenticate to Elasticsearch                                                                                  |\n| `elasticsearch.flattenfields`         | `ELASTICSEARCH_FLATTENFIELDS`          | `false`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/elasticsearch.md"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 3,
                  "endLine": 41,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `elasticsearch.batching.flushinterval`| `ELASTICSEARCH_BATCHING_FLUSHINTERVAL` | `1s`             | Batch flush interval, use valid Go duration string                                                                                  |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n> [!NOTE]\nIncreasing the default number of concurrent requests is a good way to increase throughput of the http outputs. This also increases the potential number of open connections. Choose wisely.\n",
                    "rendered": {
                      "text": "| `elasticsearch.batching.flushinterval`| `ELASTICSEARCH_BATCHING_FLUSHINTERVAL` | `1s`             | Batch flush interval, use valid Go duration string                                                                                  |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n> [!NOTE]\nIncreasing the default number of concurrent requests is a good way to increase throughput of the http outputs. This also increases the potential number of open connections. Choose wisely.\n",
                      "markdown": "`| `elasticsearch.batching.flushinterval`| `ELASTICSEARCH_BATCHING_FLUSHINTERVAL` | `1s`             | Batch flush interval, use valid Go duration string                                                                                  |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n> [!NOTE]\nIncreasing the default number of concurrent requests is a good way to increase throughput of the http outputs. This also increases the potential number of open connections. Choose wisely.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/elasticsearch.md"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 55,
                  "endLine": 16,
                  "endColumn": 60,
                  "snippet": {
                    "text": "earch/\n\n## Table of content\n\n- [Elasticsearch](#elasticsearch)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n|               Setting                 |               Env var                  |  Default value   |                                                             Description                                                             |\n| ------------------------------------- | -------------------------------------- | ---------------- | ----------------------",
                    "rendered": {
                      "text": "earch/\n\n## Table of content\n\n- [Elasticsearch](#elasticsearch)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n|               Setting                 |               Env var                  |  Default value   |                                                             Description                                                             |\n| ------------------------------------- | -------------------------------------- | ---------------- | ----------------------",
                      "markdown": "`earch/\n\n## Table of content\n\n- [Elasticsearch](#elasticsearch)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n|               Setting                 |               Env var                  |  Default value   |                                                             Description                                                             |\n| ------------------------------------- | -------------------------------------- | ---------------- | ----------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/dynatrace.md"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 3,
                  "endLine": 25,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `dynatrace.checkcert`       | `DYNATRACE_CHECKCERT`       | `true`           | Check if ssl certificate of the output is valid                                                                                                                                                 |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `dynatrace.checkcert`       | `DYNATRACE_CHECKCERT`       | `true`           | Check if ssl certificate of the output is valid                                                                                                                                                 |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `dynatrace.checkcert`       | `DYNATRACE_CHECKCERT`       | `true`           | Check if ssl certificate of the output is valid                                                                                                                                                 |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/dynatrace.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 41,
                  "endLine": 17,
                  "endColumn": 46,
                  "snippet": {
                    "text": "f content\n\n- [Dynatrace](#dynatrace)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n|           Setting           |           Env var           |  Default value   |                                                                                           Description                                                                                           |\n| --------------------------- | --------------------------- | ---------",
                    "rendered": {
                      "text": "f content\n\n- [Dynatrace](#dynatrace)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n|           Setting           |           Env var           |  Default value   |                                                                                           Description                                                                                           |\n| --------------------------- | --------------------------- | ---------",
                      "markdown": "`f content\n\n- [Dynatrace](#dynatrace)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n|           Setting           |           Env var           |  Default value   |                                                                                           Description                                                                                           |\n| --------------------------- | --------------------------- | ---------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/gcp_storage.md"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 24,
                  "endLine": 31,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n```yaml\ngcp:\n  credentials: \"\" # The base64-encoded JSON key file for the GCP service account\n  storage:\n    bucket: \"\" # The name of the bucket, if not empty, GCP Storage is enabled\n    prefix : \"\" # Prefix, keys will have format: gs://<bucket>/<prefix>/YYYY-MM-DD/YYYY-MM-DDTHH:mm:ss.s+01:00.json\n",
                    "rendered": {
                      "text": "\n```yaml\ngcp:\n  credentials: \"\" # The base64-encoded JSON key file for the GCP service account\n  storage:\n    bucket: \"\" # The name of the bucket, if not empty, GCP Storage is enabled\n    prefix : \"\" # Prefix, keys will have format: gs://<bucket>/<prefix>/YYYY-MM-DD/YYYY-MM-DDTHH:mm:ss.s+01:00.json\n",
                      "markdown": "`\n```yaml\ngcp:\n  credentials: \"\" # The base64-encoded JSON key file for the GCP service account\n  storage:\n    bucket: \"\" # The name of the bucket, if not empty, GCP Storage is enabled\n    prefix : \"\" # Prefix, keys will have format: gs://<bucket>/<prefix>/YYYY-MM-DD/YYYY-MM-DDTHH:mm:ss.s+01:00.json\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/gcp_storage.md"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 89,
                  "endLine": 19,
                  "endColumn": 95,
                  "snippet": {
                    "text": "----------------------- | ----------------------------- | ---------------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| `gcp.credentials`             | `GCP_CREDENTIALS`             |                  | The base64-encoded JSON key file for the GCP service account                                                                        |\n| `gcp.storage.bucket`          | `GCP_STORAGE_BUCKET`          |                  | The name of the bucket, if not empty, GCP Storage is **enabled**                           ",
                    "rendered": {
                      "text": "----------------------- | ----------------------------- | ---------------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| `gcp.credentials`             | `GCP_CREDENTIALS`             |                  | The base64-encoded JSON key file for the GCP service account                                                                        |\n| `gcp.storage.bucket`          | `GCP_STORAGE_BUCKET`          |                  | The name of the bucket, if not empty, GCP Storage is **enabled**                           ",
                      "markdown": "`----------------------- | ----------------------------- | ---------------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| `gcp.credentials`             | `GCP_CREDENTIALS`             |                  | The base64-encoded JSON key file for the GCP service account                                                                        |\n| `gcp.storage.bucket`          | `GCP_STORAGE_BUCKET`          |                  | The name of the bucket, if not empty, GCP Storage is **enabled**                           `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/gcp_storage.md"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 64,
                  "endLine": 31,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\n```yaml\ngcp:\n  credentials: \"\" # The base64-encoded JSON key file for the GCP service account\n  storage:\n    bucket: \"\" # The name of the bucket, if not empty, GCP Storage is enabled\n    prefix : \"\" # Prefix, keys will have format: gs://<bucket>/<prefix>/YYYY-MM-DD/YYYY-MM-DDTHH:mm:ss.s+01:00.json\n",
                    "rendered": {
                      "text": "\n```yaml\ngcp:\n  credentials: \"\" # The base64-encoded JSON key file for the GCP service account\n  storage:\n    bucket: \"\" # The name of the bucket, if not empty, GCP Storage is enabled\n    prefix : \"\" # Prefix, keys will have format: gs://<bucket>/<prefix>/YYYY-MM-DD/YYYY-MM-DDTHH:mm:ss.s+01:00.json\n",
                      "markdown": "`\n```yaml\ngcp:\n  credentials: \"\" # The base64-encoded JSON key file for the GCP service account\n  storage:\n    bucket: \"\" # The name of the bucket, if not empty, GCP Storage is enabled\n    prefix : \"\" # Prefix, keys will have format: gs://<bucket>/<prefix>/YYYY-MM-DD/YYYY-MM-DDTHH:mm:ss.s+01:00.json\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/gcp_storage.md"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 3,
                  "endLine": 25,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `gcp.storage.minimumpriority` | `GCP_STORAGE_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `gcp.storage.minimumpriority` | `GCP_STORAGE_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `gcp.storage.minimumpriority` | `GCP_STORAGE_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/gcp_storage.md"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 129,
                  "endLine": 19,
                  "endColumn": 138,
                  "snippet": {
                    "text": "--------------- | ---------------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| `gcp.credentials`             | `GCP_CREDENTIALS`             |                  | The base64-encoded JSON key file for the GCP service account                                                                        |\n| `gcp.storage.bucket`          | `GCP_STORAGE_BUCKET`          |                  | The name of the bucket, if not empty, GCP Storage is **enabled**                                                                    |\n",
                    "rendered": {
                      "text": "--------------- | ---------------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| `gcp.credentials`             | `GCP_CREDENTIALS`             |                  | The base64-encoded JSON key file for the GCP service account                                                                        |\n| `gcp.storage.bucket`          | `GCP_STORAGE_BUCKET`          |                  | The name of the bucket, if not empty, GCP Storage is **enabled**                                                                    |\n",
                      "markdown": "`--------------- | ---------------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| `gcp.credentials`             | `GCP_CREDENTIALS`             |                  | The base64-encoded JSON key file for the GCP service account                                                                        |\n| `gcp.storage.bucket`          | `GCP_STORAGE_BUCKET`          |                  | The name of the bucket, if not empty, GCP Storage is **enabled**                                                                    |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/gcp_storage.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 33,
                  "endLine": 17,
                  "endColumn": 38,
                  "snippet": {
                    "text": "le of content\n\n- [GCP Storage](#gcp-storage)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                       | Env var                       | Default value    | Description                                                                                                                         |\n| ----------------------------- | ----------------------------- | ---------------- | ----------------------------------",
                    "rendered": {
                      "text": "le of content\n\n- [GCP Storage](#gcp-storage)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                       | Env var                       | Default value    | Description                                                                                                                         |\n| ----------------------------- | ----------------------------- | ---------------- | ----------------------------------",
                      "markdown": "`le of content\n\n- [GCP Storage](#gcp-storage)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                       | Env var                       | Default value    | Description                                                                                                                         |\n| ----------------------------- | ----------------------------- | ---------------- | ----------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/types/types.go"
                },
                "region": {
                  "startLine": 782,
                  "startColumn": 1,
                  "endLine": 782,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tStreamName       string\n\tMinimumPriority  string\n\tUsername         string\n\tPassword         string\n\tCustomHeaders    map[string]string\n}\n\n",
                    "rendered": {
                      "text": "\tStreamName       string\n\tMinimumPriority  string\n\tUsername         string\n\tPassword         string\n\tCustomHeaders    map[string]string\n}\n\n",
                      "markdown": "`\tStreamName       string\n\tMinimumPriority  string\n\tUsername         string\n\tPassword         string\n\tCustomHeaders    map[string]string\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/types/types.go"
                },
                "region": {
                  "startLine": 760,
                  "startColumn": 1,
                  "endLine": 760,
                  "endColumn": 9,
                  "snippet": {
                    "text": "type N8NConfig struct {\n\tAddress         string\n\tUser            string\n\tPassword        string\n\tHeaderAuthName  string\n\tHeaderAuthValue string\n\tMinimumPriority string\n",
                    "rendered": {
                      "text": "type N8NConfig struct {\n\tAddress         string\n\tUser            string\n\tPassword        string\n\tHeaderAuthName  string\n\tHeaderAuthValue string\n\tMinimumPriority string\n",
                      "markdown": "`type N8NConfig struct {\n\tAddress         string\n\tUser            string\n\tPassword        string\n\tHeaderAuthName  string\n\tHeaderAuthValue string\n\tMinimumPriority string\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/types/types.go"
                },
                "region": {
                  "startLine": 737,
                  "startColumn": 1,
                  "endLine": 737,
                  "endColumn": 9,
                  "snippet": {
                    "text": "// RedisConfig represents config parameters for Redis\ntype RedisConfig struct {\n\tAddress         string\n\tPassword        string\n\tDatabase        int\n\tStorageType     string\n\tKey             string\n",
                    "rendered": {
                      "text": "// RedisConfig represents config parameters for Redis\ntype RedisConfig struct {\n\tAddress         string\n\tPassword        string\n\tDatabase        int\n\tStorageType     string\n\tKey             string\n",
                      "markdown": "`// RedisConfig represents config parameters for Redis\ntype RedisConfig struct {\n\tAddress         string\n\tPassword        string\n\tDatabase        int\n\tStorageType     string\n\tKey             string\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/types/types.go"
                },
                "region": {
                  "startLine": 728,
                  "startColumn": 1,
                  "endLine": 728,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tHost            string\n\tPort            string\n\tUser            string\n\tPassword        string\n\tDatabase        string\n\tHypertableName  string\n\tMinimumPriority string\n",
                    "rendered": {
                      "text": "\tHost            string\n\tPort            string\n\tUser            string\n\tPassword        string\n\tDatabase        string\n\tHypertableName  string\n\tMinimumPriority string\n",
                      "markdown": "`\tHost            string\n\tPort            string\n\tUser            string\n\tPassword        string\n\tDatabase        string\n\tHypertableName  string\n\tMinimumPriority string\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/types/types.go"
                },
                "region": {
                  "startLine": 701,
                  "startColumn": 1,
                  "endLine": 701,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tHostPort        string\n\tIndex           string\n\tUsername        string\n\tPassword        string\n\tCheckCert       bool\n\tMinimumPriority string\n}\n",
                    "rendered": {
                      "text": "\tHostPort        string\n\tIndex           string\n\tUsername        string\n\tPassword        string\n\tCheckCert       bool\n\tMinimumPriority string\n}\n",
                      "markdown": "`\tHostPort        string\n\tIndex           string\n\tUsername        string\n\tPassword        string\n\tCheckCert       bool\n\tMinimumPriority string\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/types/types.go"
                },
                "region": {
                  "startLine": 680,
                  "startColumn": 1,
                  "endLine": 680,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tQOS             int\n\tRetained        bool\n\tUser            string\n\tPassword        string\n\tCheckCert       bool\n\tMinimumPriority string\n}\n",
                    "rendered": {
                      "text": "\tQOS             int\n\tRetained        bool\n\tUser            string\n\tPassword        string\n\tCheckCert       bool\n\tMinimumPriority string\n}\n",
                      "markdown": "`\tQOS             int\n\tRetained        bool\n\tUser            string\n\tPassword        string\n\tCheckCert       bool\n\tMinimumPriority string\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/types/types.go"
                },
                "region": {
                  "startLine": 550,
                  "startColumn": 1,
                  "endLine": 550,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tSASL            string\n\tTLS             bool\n\tUsername        string\n\tPassword        string\n\tBalancer        string\n\tClientID        string\n\tCompression     string\n",
                    "rendered": {
                      "text": "\tSASL            string\n\tTLS             bool\n\tUsername        string\n\tPassword        string\n\tBalancer        string\n\tClientID        string\n\tCompression     string\n",
                      "markdown": "`\tSASL            string\n\tTLS             bool\n\tUsername        string\n\tPassword        string\n\tBalancer        string\n\tClientID        string\n\tCompression     string\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/types/types.go"
                },
                "region": {
                  "startLine": 471,
                  "startColumn": 1,
                  "endLine": 471,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tCommonConfig    `mapstructure:\",squash\"`\n\tAddress         string\n\tUser            string\n\tPassword        string\n\tCustomHeaders   map[string]string\n\tMinimumPriority string\n}\n",
                    "rendered": {
                      "text": "\tCommonConfig    `mapstructure:\",squash\"`\n\tAddress         string\n\tUser            string\n\tPassword        string\n\tCustomHeaders   map[string]string\n\tMinimumPriority string\n}\n",
                      "markdown": "`\tCommonConfig    `mapstructure:\",squash\"`\n\tAddress         string\n\tUser            string\n\tPassword        string\n\tCustomHeaders   map[string]string\n\tMinimumPriority string\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/types/types.go"
                },
                "region": {
                  "startLine": 440,
                  "startColumn": 1,
                  "endLine": 440,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tTLS             bool\n\tAuthMechanism   string\n\tUser            string\n\tPassword        string\n\tToken           string\n\tIdentity        string\n\tTrace           string\n",
                    "rendered": {
                      "text": "\tTLS             bool\n\tAuthMechanism   string\n\tUser            string\n\tPassword        string\n\tToken           string\n\tIdentity        string\n\tTrace           string\n",
                      "markdown": "`\tTLS             bool\n\tAuthMechanism   string\n\tUser            string\n\tPassword        string\n\tToken           string\n\tIdentity        string\n\tTrace           string\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/types/types.go"
                },
                "region": {
                  "startLine": 322,
                  "startColumn": 1,
                  "endLine": 322,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tBucket          string\n\tPrecision       string\n\tUser            string\n\tPassword        string\n\tToken           string\n\tMinimumPriority string\n}\n",
                    "rendered": {
                      "text": "\tBucket          string\n\tPrecision       string\n\tUser            string\n\tPassword        string\n\tToken           string\n\tMinimumPriority string\n}\n",
                      "markdown": "`\tBucket          string\n\tPrecision       string\n\tUser            string\n\tPassword        string\n\tToken           string\n\tMinimumPriority string\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/types/types.go"
                },
                "region": {
                  "startLine": 292,
                  "startColumn": 1,
                  "endLine": 292,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tMinimumPriority     string\n\tSuffix              string\n\tUsername            string\n\tPassword            string\n\tApiKey              string\n\tFlattenFields       bool\n\tCreateIndexTemplate bool\n",
                    "rendered": {
                      "text": "\tMinimumPriority     string\n\tSuffix              string\n\tUsername            string\n\tPassword            string\n\tApiKey              string\n\tFlattenFields       bool\n\tCreateIndexTemplate bool\n",
                      "markdown": "`\tMinimumPriority     string\n\tSuffix              string\n\tUsername            string\n\tPassword            string\n\tApiKey              string\n\tFlattenFields       bool\n\tCreateIndexTemplate bool\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/types/types.go"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 62,
                  "endLine": 214,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\ntype WavefrontOutputConfig struct {\n\tEndpointType         string // direct or proxy\n\tEndpointHost         string // Endpoint hostname (only IP or hostname)\n\tEndpointToken        string // Token for API access. Only for direct mode\n\tEndpointMetricPort   int    // Port to send metrics. Only for proxy mode\n\tMetricName           string // The Name of the metric\n",
                    "rendered": {
                      "text": "\ntype WavefrontOutputConfig struct {\n\tEndpointType         string // direct or proxy\n\tEndpointHost         string // Endpoint hostname (only IP or hostname)\n\tEndpointToken        string // Token for API access. Only for direct mode\n\tEndpointMetricPort   int    // Port to send metrics. Only for proxy mode\n\tMetricName           string // The Name of the metric\n",
                      "markdown": "`\ntype WavefrontOutputConfig struct {\n\tEndpointType         string // direct or proxy\n\tEndpointHost         string // Endpoint hostname (only IP or hostname)\n\tEndpointToken        string // Token for API access. Only for direct mode\n\tEndpointMetricPort   int    // Port to send metrics. Only for proxy mode\n\tMetricName           string // The Name of the metric\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/types/types.go"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 41,
                  "endLine": 214,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\ntype WavefrontOutputConfig struct {\n\tEndpointType         string // direct or proxy\n\tEndpointHost         string // Endpoint hostname (only IP or hostname)\n\tEndpointToken        string // Token for API access. Only for direct mode\n\tEndpointMetricPort   int    // Port to send metrics. Only for proxy mode\n\tMetricName           string // The Name of the metric\n",
                    "rendered": {
                      "text": "\ntype WavefrontOutputConfig struct {\n\tEndpointType         string // direct or proxy\n\tEndpointHost         string // Endpoint hostname (only IP or hostname)\n\tEndpointToken        string // Token for API access. Only for direct mode\n\tEndpointMetricPort   int    // Port to send metrics. Only for proxy mode\n\tMetricName           string // The Name of the metric\n",
                      "markdown": "`\ntype WavefrontOutputConfig struct {\n\tEndpointType         string // direct or proxy\n\tEndpointHost         string // Endpoint hostname (only IP or hostname)\n\tEndpointToken        string // Token for API access. Only for direct mode\n\tEndpointMetricPort   int    // Port to send metrics. Only for proxy mode\n\tMetricName           string // The Name of the metric\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/types/types.go"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 44,
                  "endLine": 27,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\tOutputFields map[string]interface{} `json:\"output_fields\"`\n\tSource       string                 `json:\"source\"`\n\tTags         []string               `json:\"tags,omitempty\"`\n\tHostname     string                 `json:\"hostname,omitempty\"`\n}\n\nfunc (f FalcoPayload) String() string {\n",
                    "rendered": {
                      "text": "\tOutputFields map[string]interface{} `json:\"output_fields\"`\n\tSource       string                 `json:\"source\"`\n\tTags         []string               `json:\"tags,omitempty\"`\n\tHostname     string                 `json:\"hostname,omitempty\"`\n}\n\nfunc (f FalcoPayload) String() string {\n",
                      "markdown": "`\tOutputFields map[string]interface{} `json:\"output_fields\"`\n\tSource       string                 `json:\"source\"`\n\tTags         []string               `json:\"tags,omitempty\"`\n\tHostname     string                 `json:\"hostname,omitempty\"`\n}\n\nfunc (f FalcoPayload) String() string {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/types/types.go"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 56,
                  "endLine": 157,
                  "endColumn": 60,
                  "snippet": {
                    "text": "type CommonConfig struct {\n\tCheckCert             bool\n\tMutualTLS             bool\n\tMaxConcurrentRequests uint16 // Max concurrent requests at a time, unlimited if 0\n}\n\n// SlackOutputConfig represents parameters for Slack\n",
                    "rendered": {
                      "text": "type CommonConfig struct {\n\tCheckCert             bool\n\tMutualTLS             bool\n\tMaxConcurrentRequests uint16 // Max concurrent requests at a time, unlimited if 0\n}\n\n// SlackOutputConfig represents parameters for Slack\n",
                      "markdown": "`type CommonConfig struct {\n\tCheckCert             bool\n\tMutualTLS             bool\n\tMaxConcurrentRequests uint16 // Max concurrent requests at a time, unlimited if 0\n}\n\n// SlackOutputConfig represents parameters for Slack\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/types/types.go"
                },
                "region": {
                  "startLine": 790,
                  "endLine": 790,
                  "endColumn": 9,
                  "snippet": {
                    "text": "type OTLPTraces struct {\n\tEndpoint        string\n\tProtocol        string\n\tTimeout         int64\n\tHeaders         string\n\tDuration        int64\n\tSynced          bool\n",
                    "rendered": {
                      "text": "type OTLPTraces struct {\n\tEndpoint        string\n\tProtocol        string\n\tTimeout         int64\n\tHeaders         string\n\tDuration        int64\n\tSynced          bool\n",
                      "markdown": "`type OTLPTraces struct {\n\tEndpoint        string\n\tProtocol        string\n\tTimeout         int64\n\tHeaders         string\n\tDuration        int64\n\tSynced          bool\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/types/types.go"
                },
                "region": {
                  "startLine": 662,
                  "startColumn": 52,
                  "endLine": 662,
                  "endColumn": 56,
                  "snippet": {
                    "text": "}\n\n// SyslogConfig represents config parameters for the syslog client\n// Host: the remote syslog host. It can be either an IP address or a domain.\n// Port: the remote port address. Ex: 514.\n// Protocol: the type of transfer protocol to use. It should be either \"tcp\" or \"udp\".\ntype SyslogConfig struct {\n",
                    "rendered": {
                      "text": "}\n\n// SyslogConfig represents config parameters for the syslog client\n// Host: the remote syslog host. It can be either an IP address or a domain.\n// Port: the remote port address. Ex: 514.\n// Protocol: the type of transfer protocol to use. It should be either \"tcp\" or \"udp\".\ntype SyslogConfig struct {\n",
                      "markdown": "`}\n\n// SyslogConfig represents config parameters for the syslog client\n// Host: the remote syslog host. It can be either an IP address or a domain.\n// Port: the remote port address. Ex: 514.\n// Protocol: the type of transfer protocol to use. It should be either \"tcp\" or \"udp\".\ntype SyslogConfig struct {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/types/types.go"
                },
                "region": {
                  "startLine": 218,
                  "startColumn": 31,
                  "endLine": 218,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tEndpointToken        string // Token for API access. Only for direct mode\n\tEndpointMetricPort   int    // Port to send metrics. Only for proxy mode\n\tMetricName           string // The Name of the metric\n\tFlushIntervalSeconds int    // Time between flushes.\n\tBatchSize            int    // BatchSize to send. Only for direct mode\n\tMinimumPriority      string\n}\n",
                    "rendered": {
                      "text": "\tEndpointToken        string // Token for API access. Only for direct mode\n\tEndpointMetricPort   int    // Port to send metrics. Only for proxy mode\n\tMetricName           string // The Name of the metric\n\tFlushIntervalSeconds int    // Time between flushes.\n\tBatchSize            int    // BatchSize to send. Only for direct mode\n\tMinimumPriority      string\n}\n",
                      "markdown": "`\tEndpointToken        string // Token for API access. Only for direct mode\n\tEndpointMetricPort   int    // Port to send metrics. Only for proxy mode\n\tMetricName           string // The Name of the metric\n\tFlushIntervalSeconds int    // Time between flushes.\n\tBatchSize            int    // BatchSize to send. Only for direct mode\n\tMinimumPriority      string\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/types/types.go"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 55,
                  "endLine": 214,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\ntype WavefrontOutputConfig struct {\n\tEndpointType         string // direct or proxy\n\tEndpointHost         string // Endpoint hostname (only IP or hostname)\n\tEndpointToken        string // Token for API access. Only for direct mode\n\tEndpointMetricPort   int    // Port to send metrics. Only for proxy mode\n\tMetricName           string // The Name of the metric\n",
                    "rendered": {
                      "text": "\ntype WavefrontOutputConfig struct {\n\tEndpointType         string // direct or proxy\n\tEndpointHost         string // Endpoint hostname (only IP or hostname)\n\tEndpointToken        string // Token for API access. Only for direct mode\n\tEndpointMetricPort   int    // Port to send metrics. Only for proxy mode\n\tMetricName           string // The Name of the metric\n",
                      "markdown": "`\ntype WavefrontOutputConfig struct {\n\tEndpointType         string // direct or proxy\n\tEndpointHost         string // Endpoint hostname (only IP or hostname)\n\tEndpointToken        string // Token for API access. Only for direct mode\n\tEndpointMetricPort   int    // Port to send metrics. Only for proxy mode\n\tMetricName           string // The Name of the metric\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/types/types.go"
                },
                "region": {
                  "startLine": 23,
                  "endLine": 23,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tOutput       string                 `json:\"output\"`\n\tPriority     PriorityType           `json:\"priority\"`\n\tRule         string                 `json:\"rule\"`\n\tTime         time.Time              `json:\"time\"`\n\tOutputFields map[string]interface{} `json:\"output_fields\"`\n\tSource       string                 `json:\"source\"`\n\tTags         []string               `json:\"tags,omitempty\"`\n",
                    "rendered": {
                      "text": "\tOutput       string                 `json:\"output\"`\n\tPriority     PriorityType           `json:\"priority\"`\n\tRule         string                 `json:\"rule\"`\n\tTime         time.Time              `json:\"time\"`\n\tOutputFields map[string]interface{} `json:\"output_fields\"`\n\tSource       string                 `json:\"source\"`\n\tTags         []string               `json:\"tags,omitempty\"`\n",
                      "markdown": "`\tOutput       string                 `json:\"output\"`\n\tPriority     PriorityType           `json:\"priority\"`\n\tRule         string                 `json:\"rule\"`\n\tTime         time.Time              `json:\"time\"`\n\tOutputFields map[string]interface{} `json:\"output_fields\"`\n\tSource       string                 `json:\"source\"`\n\tTags         []string               `json:\"tags,omitempty\"`\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 438,
                  "startColumn": 26,
                  "endLine": 438,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\n## 1.0.6 - 2019-05-09\n#### New\n- Add `SLACK_HIDE_FIELDS` env var, to enable concise output in Slack (fields are not displayed) ([issue #15](https://github.com/falcosecurity/falcosidekick/issues/15))\n#### Enhancement\n- Remove `/checkPayload` endpoint, not usefull anymore\n- Change of how enabled/disabled outputs are printed in log (more concise view)\n",
                    "rendered": {
                      "text": "\n## 1.0.6 - 2019-05-09\n#### New\n- Add `SLACK_HIDE_FIELDS` env var, to enable concise output in Slack (fields are not displayed) ([issue #15](https://github.com/falcosecurity/falcosidekick/issues/15))\n#### Enhancement\n- Remove `/checkPayload` endpoint, not usefull anymore\n- Change of how enabled/disabled outputs are printed in log (more concise view)\n",
                      "markdown": "`\n## 1.0.6 - 2019-05-09\n#### New\n- Add `SLACK_HIDE_FIELDS` env var, to enable concise output in Slack (fields are not displayed) ([issue #15](https://github.com/falcosecurity/falcosidekick/issues/15))\n#### Enhancement\n- Remove `/checkPayload` endpoint, not usefull anymore\n- Change of how enabled/disabled outputs are printed in log (more concise view)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 7,
                  "endLine": 110,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n- Improve the check of the payload from `Falco`, it allows now to have an empty output ([PR#372](https://github.com/falcosecurity/falcosidekick/pull/372))\n- Allow to set user and api key for `Loki` output for `Grafana Logs` ([PR#379](https://github.com/falcosecurity/falcosidekick/pull/379))\n- Add `hostname` in json payload for all outputs ([PR#383](https://github.com/falcosecurity/falcosidekick/pull/383) thanks to [@Lowaiz](https://github.com/Lowaiz))\n- Add SASL authentication for `Kafka` output ([PR#385](https://github.com/falcosecurity/falcosidekick/pull/385) thanks to [@Lowaiz](https://github.com/",
                    "rendered": {
                      "text": "\n- Improve the check of the payload from `Falco`, it allows now to have an empty output ([PR#372](https://github.com/falcosecurity/falcosidekick/pull/372))\n- Allow to set user and api key for `Loki` output for `Grafana Logs` ([PR#379](https://github.com/falcosecurity/falcosidekick/pull/379))\n- Add `hostname` in json payload for all outputs ([PR#383](https://github.com/falcosecurity/falcosidekick/pull/383) thanks to [@Lowaiz](https://github.com/Lowaiz))\n- Add SASL authentication for `Kafka` output ([PR#385](https://github.com/falcosecurity/falcosidekick/pull/385) thanks to [@Lowaiz](https://github.com/",
                      "markdown": "`\n- Improve the check of the payload from `Falco`, it allows now to have an empty output ([PR#372](https://github.com/falcosecurity/falcosidekick/pull/372))\n- Allow to set user and api key for `Loki` output for `Grafana Logs` ([PR#379](https://github.com/falcosecurity/falcosidekick/pull/379))\n- Add `hostname` in json payload for all outputs ([PR#383](https://github.com/falcosecurity/falcosidekick/pull/383) thanks to [@Lowaiz](https://github.com/Lowaiz))\n- Add SASL authentication for `Kafka` output ([PR#385](https://github.com/falcosecurity/falcosidekick/pull/385) thanks to [@Lowaiz](https://github.com/`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 7,
                  "endLine": 56,
                  "endColumn": 15,
                  "snippet": {
                    "text": "o [@Lowaiz](https://github.com/Lowaiz))\n- Allow to replace the brackets ([PR#421](https://github.com/falcosecurity/falcosidekick/pull/421))\n- Allow to set custom http headers for `Loki`, `Elasticsearch` and `Grafana` outputs ([PR#428](https://github.com/falcosecurity/falcosidekick/pull/428))\n- Add `hostname`, `tags`, `custom` and `templated fields` for `TimescaleDB` output ([PR#438](https://github.com/falcosecurity/falcosidekick/pull/438) thanks to [@hileef](https://github.com/hileef))\n- Allow to set thresholds for the dropped events in `AlertManager` ouput ([PR#439](https://github.com/falcosecurity/f",
                    "rendered": {
                      "text": "o [@Lowaiz](https://github.com/Lowaiz))\n- Allow to replace the brackets ([PR#421](https://github.com/falcosecurity/falcosidekick/pull/421))\n- Allow to set custom http headers for `Loki`, `Elasticsearch` and `Grafana` outputs ([PR#428](https://github.com/falcosecurity/falcosidekick/pull/428))\n- Add `hostname`, `tags`, `custom` and `templated fields` for `TimescaleDB` output ([PR#438](https://github.com/falcosecurity/falcosidekick/pull/438) thanks to [@hileef](https://github.com/hileef))\n- Allow to set thresholds for the dropped events in `AlertManager` ouput ([PR#439](https://github.com/falcosecurity/f",
                      "markdown": "`o [@Lowaiz](https://github.com/Lowaiz))\n- Allow to replace the brackets ([PR#421](https://github.com/falcosecurity/falcosidekick/pull/421))\n- Allow to set custom http headers for `Loki`, `Elasticsearch` and `Grafana` outputs ([PR#428](https://github.com/falcosecurity/falcosidekick/pull/428))\n- Add `hostname`, `tags`, `custom` and `templated fields` for `TimescaleDB` output ([PR#438](https://github.com/falcosecurity/falcosidekick/pull/438) thanks to [@hileef](https://github.com/hileef))\n- Allow to set thresholds for the dropped events in `AlertManager` ouput ([PR#439](https://github.com/falcosecurity/f`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 7,
                  "endLine": 53,
                  "endColumn": 15,
                  "snippet": {
                    "text": "kick/pull/509))\n\n#### Enhancement\n- Add `output` in the description annotation for `AlertManager` output ([PR#341](https://github.com/falcosecurity/falcosidekick/pull/478))\n- Allow to set the http method for `Webhook` output ([PR#399](https://github.com/falcosecurity/falcosidekick/pull/399))\n- Add `hostname` as prometheus label ([PR#420](https://github.com/falcosecurity/falcosidekick/pull/420) thanks to [@Lowaiz](https://github.com/Lowaiz))\n- Allow to replace the brackets ([PR#421](https://github.com/falcosecurity/falcosidekick/pull/421))\n- Allow to set custom http headers for `Loki`, `Elasticsearch` ",
                    "rendered": {
                      "text": "kick/pull/509))\n\n#### Enhancement\n- Add `output` in the description annotation for `AlertManager` output ([PR#341](https://github.com/falcosecurity/falcosidekick/pull/478))\n- Allow to set the http method for `Webhook` output ([PR#399](https://github.com/falcosecurity/falcosidekick/pull/399))\n- Add `hostname` as prometheus label ([PR#420](https://github.com/falcosecurity/falcosidekick/pull/420) thanks to [@Lowaiz](https://github.com/Lowaiz))\n- Allow to replace the brackets ([PR#421](https://github.com/falcosecurity/falcosidekick/pull/421))\n- Allow to set custom http headers for `Loki`, `Elasticsearch` ",
                      "markdown": "`kick/pull/509))\n\n#### Enhancement\n- Add `output` in the description annotation for `AlertManager` output ([PR#341](https://github.com/falcosecurity/falcosidekick/pull/478))\n- Allow to set the http method for `Webhook` output ([PR#399](https://github.com/falcosecurity/falcosidekick/pull/399))\n- Add `hostname` as prometheus label ([PR#420](https://github.com/falcosecurity/falcosidekick/pull/420) thanks to [@Lowaiz](https://github.com/Lowaiz))\n- Allow to replace the brackets ([PR#421](https://github.com/falcosecurity/falcosidekick/pull/421))\n- Allow to set custom http headers for `Loki`, `Elasticsearch` `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 46,
                  "endLine": 31,
                  "endColumn": 54,
                  "snippet": {
                    "text": "t ([PR#581](https://github.com/falcosecurity/falcosidekick/pull/581) thanks to [@claviola](https://github.com/claviola))\n- Fix bug with the extension `source` in the `CloudEvent` output ([PR#587](https://github.com/falcosecurity/falcosidekick/pull/587))\n- Fix panics in the `Prometheus` output when `hostname` field is missing ([PR#628](https://github.com/falcosecurity/falcosidekick/pull/628))\n- Remove refs to deprecated `ioutil` modules ([PR#639](https://github.com/falcosecurity/falcosidekick/pull/639) thanks to [@testwill](https://github.com/testwill))\n- Fix locks in the `Loki` output ([PR#647](https:",
                    "rendered": {
                      "text": "t ([PR#581](https://github.com/falcosecurity/falcosidekick/pull/581) thanks to [@claviola](https://github.com/claviola))\n- Fix bug with the extension `source` in the `CloudEvent` output ([PR#587](https://github.com/falcosecurity/falcosidekick/pull/587))\n- Fix panics in the `Prometheus` output when `hostname` field is missing ([PR#628](https://github.com/falcosecurity/falcosidekick/pull/628))\n- Remove refs to deprecated `ioutil` modules ([PR#639](https://github.com/falcosecurity/falcosidekick/pull/639) thanks to [@testwill](https://github.com/testwill))\n- Fix locks in the `Loki` output ([PR#647](https:",
                      "markdown": "`t ([PR#581](https://github.com/falcosecurity/falcosidekick/pull/581) thanks to [@claviola](https://github.com/claviola))\n- Fix bug with the extension `source` in the `CloudEvent` output ([PR#587](https://github.com/falcosecurity/falcosidekick/pull/587))\n- Fix panics in the `Prometheus` output when `hostname` field is missing ([PR#628](https://github.com/falcosecurity/falcosidekick/pull/628))\n- Remove refs to deprecated `ioutil` modules ([PR#639](https://github.com/falcosecurity/falcosidekick/pull/639) thanks to [@testwill](https://github.com/testwill))\n- Fix locks in the `Loki` output ([PR#647](https:`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 468,
                  "startColumn": 1,
                  "endLine": 468,
                  "endColumn": 9,
                  "snippet": {
                    "text": "## 1.0.2 - 2018-10-10\n#### Enhancement\n- Update changelog\n- Update README with new Slack Options + more info\n\n## 1.0.1 - 2018-10-10\n#### New\n",
                    "rendered": {
                      "text": "## 1.0.2 - 2018-10-10\n#### Enhancement\n- Update changelog\n- Update README with new Slack Options + more info\n\n## 1.0.1 - 2018-10-10\n#### New\n",
                      "markdown": "`## 1.0.2 - 2018-10-10\n#### Enhancement\n- Update changelog\n- Update README with new Slack Options + more info\n\n## 1.0.1 - 2018-10-10\n#### New\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 467,
                  "startColumn": 1,
                  "endLine": 467,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n## 1.0.2 - 2018-10-10\n#### Enhancement\n- Update changelog\n- Update README with new Slack Options + more info\n\n## 1.0.1 - 2018-10-10\n",
                    "rendered": {
                      "text": "\n## 1.0.2 - 2018-10-10\n#### Enhancement\n- Update changelog\n- Update README with new Slack Options + more info\n\n## 1.0.1 - 2018-10-10\n",
                      "markdown": "`\n## 1.0.2 - 2018-10-10\n#### Enhancement\n- Update changelog\n- Update README with new Slack Options + more info\n\n## 1.0.1 - 2018-10-10\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 45,
                  "endLine": 430,
                  "endColumn": 49,
                  "snippet": {
                    "text": "    - `DATADOG_TOKEN` **->** `DATADOG_API_KEY`\n    - `SLACK_TOKEN` **->** `SLACK_WEBHOOK_URL`\n#### Fix\n- `/test` sends an event with a timestamp set at *now*\n\n## 1.0.7 - 2019-05-09\n#### Enhancement\n",
                    "rendered": {
                      "text": "    - `DATADOG_TOKEN` **->** `DATADOG_API_KEY`\n    - `SLACK_TOKEN` **->** `SLACK_WEBHOOK_URL`\n#### Fix\n- `/test` sends an event with a timestamp set at *now*\n\n## 1.0.7 - 2019-05-09\n#### Enhancement\n",
                      "markdown": "`    - `DATADOG_TOKEN` **->** `DATADOG_API_KEY`\n    - `SLACK_TOKEN` **->** `SLACK_WEBHOOK_URL`\n#### Fix\n- `/test` sends an event with a timestamp set at *now*\n\n## 1.0.7 - 2019-05-09\n#### Enhancement\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 369,
                  "startColumn": 1,
                  "endLine": 369,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n## 2.7.1 - 2019-08-28\n#### Enhancement\n- Update of Dockerfile : golang 1.12 + alpine 3.10\n\n## 2.7.0 - 2019-08-27\n#### New\n",
                    "rendered": {
                      "text": "\n## 2.7.1 - 2019-08-28\n#### Enhancement\n- Update of Dockerfile : golang 1.12 + alpine 3.10\n\n## 2.7.0 - 2019-08-27\n#### New\n",
                      "markdown": "`\n## 2.7.1 - 2019-08-28\n#### Enhancement\n- Update of Dockerfile : golang 1.12 + alpine 3.10\n\n## 2.7.0 - 2019-08-27\n#### New\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 251,
                  "startColumn": 14,
                  "endLine": 251,
                  "endColumn": 22,
                  "snippet": {
                    "text": "ement\n- Add test for `Mattermost` ([PR#99](https://github.com/falcosecurity/falcosidekick/pull/99) thanks to [@cpanato](https://github.com/cpanato))\n- Add golangci lint ([PR#100](https://github.com/falcosecurity/falcosidekick/pull/100) thanks to [@cpanato](https://github.com/cpanato))\n- Dependecies: update several deps ([PR#103](https://github.com/falcosecurity/falcosidekick/pull/103) thanks to [@cpanato](https://github.com/cpanato))\n- clean a bit the `Circleci` config ([PR#106](https://github.com/falcosecurity/falcosidekick/pull/106) thanks to [@cpanato](https://github.com/cpanato))\n- Use `testify` t",
                    "rendered": {
                      "text": "ement\n- Add test for `Mattermost` ([PR#99](https://github.com/falcosecurity/falcosidekick/pull/99) thanks to [@cpanato](https://github.com/cpanato))\n- Add golangci lint ([PR#100](https://github.com/falcosecurity/falcosidekick/pull/100) thanks to [@cpanato](https://github.com/cpanato))\n- Dependecies: update several deps ([PR#103](https://github.com/falcosecurity/falcosidekick/pull/103) thanks to [@cpanato](https://github.com/cpanato))\n- clean a bit the `Circleci` config ([PR#106](https://github.com/falcosecurity/falcosidekick/pull/106) thanks to [@cpanato](https://github.com/cpanato))\n- Use `testify` t",
                      "markdown": "`ement\n- Add test for `Mattermost` ([PR#99](https://github.com/falcosecurity/falcosidekick/pull/99) thanks to [@cpanato](https://github.com/cpanato))\n- Add golangci lint ([PR#100](https://github.com/falcosecurity/falcosidekick/pull/100) thanks to [@cpanato](https://github.com/cpanato))\n- Dependecies: update several deps ([PR#103](https://github.com/falcosecurity/falcosidekick/pull/103) thanks to [@cpanato](https://github.com/cpanato))\n- clean a bit the `Circleci` config ([PR#106](https://github.com/falcosecurity/falcosidekick/pull/106) thanks to [@cpanato](https://github.com/cpanato))\n- Use `testify` t`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 1,
                  "endLine": 148,
                  "endColumn": 9,
                  "snippet": {
                    "text": "-C2C))\n- Add `tags` and `source` in events for all outputs ([PR#310](https://github.com/falcosecurity/falcosidekick/pull/310))\n- Add `custom_fields` to *Prometheus* series ([PR#314](https://github.com/falcosecurity/falcosidekick/pull/314) thanks to [@LyvingInSync](https://github.com/LyvingInSync))\n- Update CircleCI jobs ([PR#316](https://github.com/falcosecurity/falcosidekick/pull/316))\n#### Fix\n- Fix *OpsGenie* output when keys have \".\" ([PR#287](https://github.com/falcosecurity/falcosidekick/pull/287))\n- Fix typo in README ([PR#299](https://github.com/falcosecurity/falcosidekick/pull/299) thanks to ",
                    "rendered": {
                      "text": "-C2C))\n- Add `tags` and `source` in events for all outputs ([PR#310](https://github.com/falcosecurity/falcosidekick/pull/310))\n- Add `custom_fields` to *Prometheus* series ([PR#314](https://github.com/falcosecurity/falcosidekick/pull/314) thanks to [@LyvingInSync](https://github.com/LyvingInSync))\n- Update CircleCI jobs ([PR#316](https://github.com/falcosecurity/falcosidekick/pull/316))\n#### Fix\n- Fix *OpsGenie* output when keys have \".\" ([PR#287](https://github.com/falcosecurity/falcosidekick/pull/287))\n- Fix typo in README ([PR#299](https://github.com/falcosecurity/falcosidekick/pull/299) thanks to ",
                      "markdown": "`-C2C))\n- Add `tags` and `source` in events for all outputs ([PR#310](https://github.com/falcosecurity/falcosidekick/pull/310))\n- Add `custom_fields` to *Prometheus* series ([PR#314](https://github.com/falcosecurity/falcosidekick/pull/314) thanks to [@LyvingInSync](https://github.com/LyvingInSync))\n- Update CircleCI jobs ([PR#316](https://github.com/falcosecurity/falcosidekick/pull/316))\n#### Fix\n- Fix *OpsGenie* output when keys have \".\" ([PR#287](https://github.com/falcosecurity/falcosidekick/pull/287))\n- Fix typo in README ([PR#299](https://github.com/falcosecurity/falcosidekick/pull/299) thanks to `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 1,
                  "endLine": 141,
                  "endColumn": 9,
                  "snippet": {
                    "text": "ub.com/falcosecurity/falcosidekick/pull/276))\n- Update Golang + GolangCI-Lint ([PR#289](https://github.com/falcosecurity/falcosidekick/pull/289) [PR#292](https://github.com/falcosecurity/falcosidekick/pull/292))\n- Add version info ([PR#290](https://github.com/falcosecurity/falcosidekick/pull/290))\n- Update image base to alpine 3.15 ([PR#291](https://github.com/falcosecurity/falcosidekick/pull/291))\n- Increase CircleCI timeout ([PR#293](https://github.com/falcosecurity/falcosidekick/pull/293))\n- Support *IRSA* for AWS authentication ([PR#295](https://github.com/falcosecurity/falcosidekick/pull/295) tha",
                    "rendered": {
                      "text": "ub.com/falcosecurity/falcosidekick/pull/276))\n- Update Golang + GolangCI-Lint ([PR#289](https://github.com/falcosecurity/falcosidekick/pull/289) [PR#292](https://github.com/falcosecurity/falcosidekick/pull/292))\n- Add version info ([PR#290](https://github.com/falcosecurity/falcosidekick/pull/290))\n- Update image base to alpine 3.15 ([PR#291](https://github.com/falcosecurity/falcosidekick/pull/291))\n- Increase CircleCI timeout ([PR#293](https://github.com/falcosecurity/falcosidekick/pull/293))\n- Support *IRSA* for AWS authentication ([PR#295](https://github.com/falcosecurity/falcosidekick/pull/295) tha",
                      "markdown": "`ub.com/falcosecurity/falcosidekick/pull/276))\n- Update Golang + GolangCI-Lint ([PR#289](https://github.com/falcosecurity/falcosidekick/pull/289) [PR#292](https://github.com/falcosecurity/falcosidekick/pull/292))\n- Add version info ([PR#290](https://github.com/falcosecurity/falcosidekick/pull/290))\n- Update image base to alpine 3.15 ([PR#291](https://github.com/falcosecurity/falcosidekick/pull/291))\n- Increase CircleCI timeout ([PR#293](https://github.com/falcosecurity/falcosidekick/pull/293))\n- Support *IRSA* for AWS authentication ([PR#295](https://github.com/falcosecurity/falcosidekick/pull/295) tha`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 1,
                  "endLine": 139,
                  "endColumn": 9,
                  "snippet": {
                    "text": "w to choose API endpoint for *AlertManager* ([PR#282](https://github.com/falcosecurity/falcosidekick/pull/282) thanks to [@mathildeHermet](https://github.com/maxgiomathildeHermet92))\n- Add label `priority` in *AlertManager* events ([PR#276](https://github.com/falcosecurity/falcosidekick/pull/276))\n- Update Golang + GolangCI-Lint ([PR#289](https://github.com/falcosecurity/falcosidekick/pull/289) [PR#292](https://github.com/falcosecurity/falcosidekick/pull/292))\n- Add version info ([PR#290](https://github.com/falcosecurity/falcosidekick/pull/290))\n- Update image base to alpine 3.15 ([PR#291](https://git",
                    "rendered": {
                      "text": "w to choose API endpoint for *AlertManager* ([PR#282](https://github.com/falcosecurity/falcosidekick/pull/282) thanks to [@mathildeHermet](https://github.com/maxgiomathildeHermet92))\n- Add label `priority` in *AlertManager* events ([PR#276](https://github.com/falcosecurity/falcosidekick/pull/276))\n- Update Golang + GolangCI-Lint ([PR#289](https://github.com/falcosecurity/falcosidekick/pull/289) [PR#292](https://github.com/falcosecurity/falcosidekick/pull/292))\n- Add version info ([PR#290](https://github.com/falcosecurity/falcosidekick/pull/290))\n- Update image base to alpine 3.15 ([PR#291](https://git",
                      "markdown": "`w to choose API endpoint for *AlertManager* ([PR#282](https://github.com/falcosecurity/falcosidekick/pull/282) thanks to [@mathildeHermet](https://github.com/maxgiomathildeHermet92))\n- Add label `priority` in *AlertManager* events ([PR#276](https://github.com/falcosecurity/falcosidekick/pull/276))\n- Update Golang + GolangCI-Lint ([PR#289](https://github.com/falcosecurity/falcosidekick/pull/289) [PR#292](https://github.com/falcosecurity/falcosidekick/pull/292))\n- Add version info ([PR#290](https://github.com/falcosecurity/falcosidekick/pull/290))\n- Update image base to alpine 3.15 ([PR#291](https://git`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 1,
                  "endLine": 105,
                  "endColumn": 9,
                  "snippet": {
                    "text": "github.com/falcosecurity/falcosidekick/pull/353))\n- Update format + default endpoint for `Loki` output ([PR#356](https://github.com/falcosecurity/falcosidekick/pull/356))\n- Determine resource names + owner ref for `Policy Reports` ([PR#358](https://github.com/falcosecurity/falcosidekick/pull/358))\n- Update `Influxdb` output to use API Token and /api/v2 endpoint ([PR#359](https://github.com/falcosecurity/falcosidekick/pull/359))\n- Allow to override the `Slack` channel ([PR#366](https://github.com/falcosecurity/falcosidekick/pull/366))\n- Add From, To and Date headers in `SMTP` payload ([PR#364](https://",
                    "rendered": {
                      "text": "github.com/falcosecurity/falcosidekick/pull/353))\n- Update format + default endpoint for `Loki` output ([PR#356](https://github.com/falcosecurity/falcosidekick/pull/356))\n- Determine resource names + owner ref for `Policy Reports` ([PR#358](https://github.com/falcosecurity/falcosidekick/pull/358))\n- Update `Influxdb` output to use API Token and /api/v2 endpoint ([PR#359](https://github.com/falcosecurity/falcosidekick/pull/359))\n- Allow to override the `Slack` channel ([PR#366](https://github.com/falcosecurity/falcosidekick/pull/366))\n- Add From, To and Date headers in `SMTP` payload ([PR#364](https://",
                      "markdown": "`github.com/falcosecurity/falcosidekick/pull/353))\n- Update format + default endpoint for `Loki` output ([PR#356](https://github.com/falcosecurity/falcosidekick/pull/356))\n- Determine resource names + owner ref for `Policy Reports` ([PR#358](https://github.com/falcosecurity/falcosidekick/pull/358))\n- Update `Influxdb` output to use API Token and /api/v2 endpoint ([PR#359](https://github.com/falcosecurity/falcosidekick/pull/359))\n- Allow to override the `Slack` channel ([PR#366](https://github.com/falcosecurity/falcosidekick/pull/366))\n- Add From, To and Date headers in `SMTP` payload ([PR#364](https://`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 1,
                  "endLine": 103,
                  "endColumn": 9,
                  "snippet": {
                    "text": "ty/falcosidekick/pull/347) thanks to [@Lowaiz](https://github.com/Lowaiz))\n- Update default type for `Elasticsearch` documents ([PR#349](https://github.com/falcosecurity/falcosidekick/pull/349))\n- Support env vars in custom fields ([PR#353](https://github.com/falcosecurity/falcosidekick/pull/353))\n- Update format + default endpoint for `Loki` output ([PR#356](https://github.com/falcosecurity/falcosidekick/pull/356))\n- Determine resource names + owner ref for `Policy Reports` ([PR#358](https://github.com/falcosecurity/falcosidekick/pull/358))\n- Update `Influxdb` output to use API Token and /api/v2 endp",
                    "rendered": {
                      "text": "ty/falcosidekick/pull/347) thanks to [@Lowaiz](https://github.com/Lowaiz))\n- Update default type for `Elasticsearch` documents ([PR#349](https://github.com/falcosecurity/falcosidekick/pull/349))\n- Support env vars in custom fields ([PR#353](https://github.com/falcosecurity/falcosidekick/pull/353))\n- Update format + default endpoint for `Loki` output ([PR#356](https://github.com/falcosecurity/falcosidekick/pull/356))\n- Determine resource names + owner ref for `Policy Reports` ([PR#358](https://github.com/falcosecurity/falcosidekick/pull/358))\n- Update `Influxdb` output to use API Token and /api/v2 endp",
                      "markdown": "`ty/falcosidekick/pull/347) thanks to [@Lowaiz](https://github.com/Lowaiz))\n- Update default type for `Elasticsearch` documents ([PR#349](https://github.com/falcosecurity/falcosidekick/pull/349))\n- Support env vars in custom fields ([PR#353](https://github.com/falcosecurity/falcosidekick/pull/353))\n- Update format + default endpoint for `Loki` output ([PR#356](https://github.com/falcosecurity/falcosidekick/pull/356))\n- Determine resource names + owner ref for `Policy Reports` ([PR#358](https://github.com/falcosecurity/falcosidekick/pull/358))\n- Update `Influxdb` output to use API Token and /api/v2 endp`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 1,
                  "endLine": 101,
                  "endColumn": 9,
                  "snippet": {
                    "text": "nd `Policy Reports` to Namespace by `ownerReference` ([PR#346](https://github.com/falcosecurity/falcosidekick/pull/346))\n- Add extra labels and annotations for `AlertManager` payloads ([PR#347](https://github.com/falcosecurity/falcosidekick/pull/347) thanks to [@Lowaiz](https://github.com/Lowaiz))\n- Update default type for `Elasticsearch` documents ([PR#349](https://github.com/falcosecurity/falcosidekick/pull/349))\n- Support env vars in custom fields ([PR#353](https://github.com/falcosecurity/falcosidekick/pull/353))\n- Update format + default endpoint for `Loki` output ([PR#356](https://github.com/fal",
                    "rendered": {
                      "text": "nd `Policy Reports` to Namespace by `ownerReference` ([PR#346](https://github.com/falcosecurity/falcosidekick/pull/346))\n- Add extra labels and annotations for `AlertManager` payloads ([PR#347](https://github.com/falcosecurity/falcosidekick/pull/347) thanks to [@Lowaiz](https://github.com/Lowaiz))\n- Update default type for `Elasticsearch` documents ([PR#349](https://github.com/falcosecurity/falcosidekick/pull/349))\n- Support env vars in custom fields ([PR#353](https://github.com/falcosecurity/falcosidekick/pull/353))\n- Update format + default endpoint for `Loki` output ([PR#356](https://github.com/fal",
                      "markdown": "`nd `Policy Reports` to Namespace by `ownerReference` ([PR#346](https://github.com/falcosecurity/falcosidekick/pull/346))\n- Add extra labels and annotations for `AlertManager` payloads ([PR#347](https://github.com/falcosecurity/falcosidekick/pull/347) thanks to [@Lowaiz](https://github.com/Lowaiz))\n- Update default type for `Elasticsearch` documents ([PR#349](https://github.com/falcosecurity/falcosidekick/pull/349))\n- Support env vars in custom fields ([PR#353](https://github.com/falcosecurity/falcosidekick/pull/353))\n- Update format + default endpoint for `Loki` output ([PR#356](https://github.com/fal`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 447,
                  "startColumn": 15,
                  "endLine": 447,
                  "endColumn": 20,
                  "snippet": {
                    "text": "## 1.0.5 - 2019-04-09\n#### New\n- Add a `/test` endpoint which sends a fake event to all enabled outputs\n- Add a `DEBUG` env var, if enabled, payload for enabled outputs will be printed in stdout\n#### Enhancement\n- Reformate some logs outputs to be nicer\n- Add a check on payload's body from falco to avoid to send empty's ones to outputs\n",
                    "rendered": {
                      "text": "## 1.0.5 - 2019-04-09\n#### New\n- Add a `/test` endpoint which sends a fake event to all enabled outputs\n- Add a `DEBUG` env var, if enabled, payload for enabled outputs will be printed in stdout\n#### Enhancement\n- Reformate some logs outputs to be nicer\n- Add a check on payload's body from falco to avoid to send empty's ones to outputs\n",
                      "markdown": "`## 1.0.5 - 2019-04-09\n#### New\n- Add a `/test` endpoint which sends a fake event to all enabled outputs\n- Add a `DEBUG` env var, if enabled, payload for enabled outputs will be printed in stdout\n#### Enhancement\n- Reformate some logs outputs to be nicer\n- Add a check on payload's body from falco to avoid to send empty's ones to outputs\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 438,
                  "startColumn": 25,
                  "endLine": 438,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n## 1.0.6 - 2019-05-09\n#### New\n- Add `SLACK_HIDE_FIELDS` env var, to enable concise output in Slack (fields are not displayed) ([issue #15](https://github.com/falcosecurity/falcosidekick/issues/15))\n#### Enhancement\n- Remove `/checkPayload` endpoint, not usefull anymore\n- Change of how enabled/disabled outputs are printed in log (more concise view)\n",
                    "rendered": {
                      "text": "\n## 1.0.6 - 2019-05-09\n#### New\n- Add `SLACK_HIDE_FIELDS` env var, to enable concise output in Slack (fields are not displayed) ([issue #15](https://github.com/falcosecurity/falcosidekick/issues/15))\n#### Enhancement\n- Remove `/checkPayload` endpoint, not usefull anymore\n- Change of how enabled/disabled outputs are printed in log (more concise view)\n",
                      "markdown": "`\n## 1.0.6 - 2019-05-09\n#### New\n- Add `SLACK_HIDE_FIELDS` env var, to enable concise output in Slack (fields are not displayed) ([issue #15](https://github.com/falcosecurity/falcosidekick/issues/15))\n#### Enhancement\n- Remove `/checkPayload` endpoint, not usefull anymore\n- Change of how enabled/disabled outputs are printed in log (more concise view)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 419,
                  "startColumn": 13,
                  "endLine": 419,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#### Enhancement\n- Add a lot of unit tests for code coverage ([issue #17](https://github.com/falcosecurity/falcosidekick/issues/17))\n- Some log outputs have been reformated\n- :boom: Some env variables have been renamed again to match fields in YAML config files (*see README*)\n#### Fix\n- Panic are now catched to avoid crashes\n\n",
                    "rendered": {
                      "text": "#### Enhancement\n- Add a lot of unit tests for code coverage ([issue #17](https://github.com/falcosecurity/falcosidekick/issues/17))\n- Some log outputs have been reformated\n- :boom: Some env variables have been renamed again to match fields in YAML config files (*see README*)\n#### Fix\n- Panic are now catched to avoid crashes\n\n",
                      "markdown": "`#### Enhancement\n- Add a lot of unit tests for code coverage ([issue #17](https://github.com/falcosecurity/falcosidekick/issues/17))\n- Some log outputs have been reformated\n- :boom: Some env variables have been renamed again to match fields in YAML config files (*see README*)\n#### Fix\n- Panic are now catched to avoid crashes\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 414,
                  "startColumn": 74,
                  "endLine": 414,
                  "endColumn": 79,
                  "snippet": {
                    "text": "## 2.0.0 - 2019-05-23\n#### New\n- New output: **Elasticsearch** ([issue #14](https://github.com/falcosecurity/falcosidekick/issues/14))\n- **New configuration method : we can now use a config file in YAML and/or env vars** (see *README*) ([issue #17](https://github.com/falcosecurity/falcosidekick/issues/17))\n- New endpoint : `/debug/vars` gives access to Golang + Custom metrics (see *README*) ([issue #17](https://github.com/falcosecurity/falcosidekick/issues/17))\n#### Enhancement\n- Add a lot of unit tests for code coverage ([issue #17](https://github.com/falcosecurity/falcosidekick/issues/17))\n",
                    "rendered": {
                      "text": "## 2.0.0 - 2019-05-23\n#### New\n- New output: **Elasticsearch** ([issue #14](https://github.com/falcosecurity/falcosidekick/issues/14))\n- **New configuration method : we can now use a config file in YAML and/or env vars** (see *README*) ([issue #17](https://github.com/falcosecurity/falcosidekick/issues/17))\n- New endpoint : `/debug/vars` gives access to Golang + Custom metrics (see *README*) ([issue #17](https://github.com/falcosecurity/falcosidekick/issues/17))\n#### Enhancement\n- Add a lot of unit tests for code coverage ([issue #17](https://github.com/falcosecurity/falcosidekick/issues/17))\n",
                      "markdown": "`## 2.0.0 - 2019-05-23\n#### New\n- New output: **Elasticsearch** ([issue #14](https://github.com/falcosecurity/falcosidekick/issues/14))\n- **New configuration method : we can now use a config file in YAML and/or env vars** (see *README*) ([issue #17](https://github.com/falcosecurity/falcosidekick/issues/17))\n- New endpoint : `/debug/vars` gives access to Golang + Custom metrics (see *README*) ([issue #17](https://github.com/falcosecurity/falcosidekick/issues/17))\n#### Enhancement\n- Add a lot of unit tests for code coverage ([issue #17](https://github.com/falcosecurity/falcosidekick/issues/17))\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 303,
                  "startColumn": 1,
                  "endLine": 303,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# 2.12.3 - 2020-04-21\n#### Enhancement\n- Allow using Datadog EU site by specifying new variable **datadog.host**/**DATADOG_HOST** ([PR#59](https://github.com/falcosecurity/falcosidekick/pull/59) thanks to [@DrPhil](https://github.com/DrPhil))\n- Docker Image is based now on last Golang and Alpine images\n\n## 2.12.2 - 2020-04-21\n#### Fix\n",
                    "rendered": {
                      "text": "# 2.12.3 - 2020-04-21\n#### Enhancement\n- Allow using Datadog EU site by specifying new variable **datadog.host**/**DATADOG_HOST** ([PR#59](https://github.com/falcosecurity/falcosidekick/pull/59) thanks to [@DrPhil](https://github.com/DrPhil))\n- Docker Image is based now on last Golang and Alpine images\n\n## 2.12.2 - 2020-04-21\n#### Fix\n",
                      "markdown": "`# 2.12.3 - 2020-04-21\n#### Enhancement\n- Allow using Datadog EU site by specifying new variable **datadog.host**/**DATADOG_HOST** ([PR#59](https://github.com/falcosecurity/falcosidekick/pull/59) thanks to [@DrPhil](https://github.com/DrPhil))\n- Docker Image is based now on last Golang and Alpine images\n\n## 2.12.2 - 2020-04-21\n#### Fix\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 288,
                  "startColumn": 42,
                  "endLine": 288,
                  "endColumn": 50,
                  "snippet": {
                    "text": "- New output: **Discord** ([PR#61](https://github.com/falcosecurity/falcosidekick/pull/61) thanks to [@nibalizer](https://github.com/nibalizer))\n#### Enhancement\n- Cert validity of outputs can be disabled ([PR#74](https://github.com/falcosecurity/falcosidekick/pull/74))\n- Golang 1.14 is now used for building the Docker image\n- Displayed username can be override for **Slack**, **Mattermost** and **Rocketchat** ([PR#72](https://github.com/falcosecurity/falcosidekick/pull/72))\n#### Fix\n- Wrong port name was displayed as output of Helm chart\n",
                    "rendered": {
                      "text": "- New output: **Discord** ([PR#61](https://github.com/falcosecurity/falcosidekick/pull/61) thanks to [@nibalizer](https://github.com/nibalizer))\n#### Enhancement\n- Cert validity of outputs can be disabled ([PR#74](https://github.com/falcosecurity/falcosidekick/pull/74))\n- Golang 1.14 is now used for building the Docker image\n- Displayed username can be override for **Slack**, **Mattermost** and **Rocketchat** ([PR#72](https://github.com/falcosecurity/falcosidekick/pull/72))\n#### Fix\n- Wrong port name was displayed as output of Helm chart\n",
                      "markdown": "`- New output: **Discord** ([PR#61](https://github.com/falcosecurity/falcosidekick/pull/61) thanks to [@nibalizer](https://github.com/nibalizer))\n#### Enhancement\n- Cert validity of outputs can be disabled ([PR#74](https://github.com/falcosecurity/falcosidekick/pull/74))\n- Golang 1.14 is now used for building the Docker image\n- Displayed username can be override for **Slack**, **Mattermost** and **Rocketchat** ([PR#72](https://github.com/falcosecurity/falcosidekick/pull/72))\n#### Fix\n- Wrong port name was displayed as output of Helm chart\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 195,
                  "startColumn": 54,
                  "endLine": 195,
                  "endColumn": 59,
                  "snippet": {
                    "text": "r api for **Kafka** ([PR#206](https://github.com/falcosecurity/falcosidekick/pull/206) thanks to [@zemek](https://github.com/zemek))\n- Reorder *imports* to follow good practices ([PR#205](https://github.com/falcosecurity/falcosidekick/pull/205))\n- Prevent misleading error message when *CUSTOMFIELDS* env var is set ([PR#201](https://github.com/falcosecurity/falcosidekick/pull/201) thanks to [@zemek](https://github.com/zemek))\n- Use *Events v2* API for **PagerDuty** output ([PR#200](https://github.com/falcosecurity/falcosidekick/pull/200) thanks to [@caWhite](https://github.com/caWhite))\n#### Fix\n- F",
                    "rendered": {
                      "text": "r api for **Kafka** ([PR#206](https://github.com/falcosecurity/falcosidekick/pull/206) thanks to [@zemek](https://github.com/zemek))\n- Reorder *imports* to follow good practices ([PR#205](https://github.com/falcosecurity/falcosidekick/pull/205))\n- Prevent misleading error message when *CUSTOMFIELDS* env var is set ([PR#201](https://github.com/falcosecurity/falcosidekick/pull/201) thanks to [@zemek](https://github.com/zemek))\n- Use *Events v2* API for **PagerDuty** output ([PR#200](https://github.com/falcosecurity/falcosidekick/pull/200) thanks to [@caWhite](https://github.com/caWhite))\n#### Fix\n- F",
                      "markdown": "`r api for **Kafka** ([PR#206](https://github.com/falcosecurity/falcosidekick/pull/206) thanks to [@zemek](https://github.com/zemek))\n- Reorder *imports* to follow good practices ([PR#205](https://github.com/falcosecurity/falcosidekick/pull/205))\n- Prevent misleading error message when *CUSTOMFIELDS* env var is set ([PR#201](https://github.com/falcosecurity/falcosidekick/pull/201) thanks to [@zemek](https://github.com/zemek))\n- Use *Events v2* API for **PagerDuty** output ([PR#200](https://github.com/falcosecurity/falcosidekick/pull/200) thanks to [@caWhite](https://github.com/caWhite))\n#### Fix\n- F`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 69,
                  "endLine": 177,
                  "endColumn": 75,
                  "snippet": {
                    "text": "@cartyc](https://github.com/cartyc))\n- Add basic auth for *Elasticsearch* output ([PR#245](https://github.com/falcosecurity/falcosidekick/pull/245) thanks to [@distortedsignal](https://github.com/distortedsignal))\n#### Enhancement\n- Reorder fields in *Slack*t, *RocketChat* and *Mattermost* outputs + sort `customer_fields` alphabetically ([PR#226](https://github.com/falcosecurity/falcosidekick/pull/226))\n- Set default values for *OpenFaas* output ([PR#232](https://github.com/falcosecurity/falcosidekick/pull/232))\n- Re-use session for *AWS* output instead of deprecated `session.New()` ([PR#238](https:",
                    "rendered": {
                      "text": "@cartyc](https://github.com/cartyc))\n- Add basic auth for *Elasticsearch* output ([PR#245](https://github.com/falcosecurity/falcosidekick/pull/245) thanks to [@distortedsignal](https://github.com/distortedsignal))\n#### Enhancement\n- Reorder fields in *Slack*t, *RocketChat* and *Mattermost* outputs + sort `customer_fields` alphabetically ([PR#226](https://github.com/falcosecurity/falcosidekick/pull/226))\n- Set default values for *OpenFaas* output ([PR#232](https://github.com/falcosecurity/falcosidekick/pull/232))\n- Re-use session for *AWS* output instead of deprecated `session.New()` ([PR#238](https:",
                      "markdown": "`@cartyc](https://github.com/cartyc))\n- Add basic auth for *Elasticsearch* output ([PR#245](https://github.com/falcosecurity/falcosidekick/pull/245) thanks to [@distortedsignal](https://github.com/distortedsignal))\n#### Enhancement\n- Reorder fields in *Slack*t, *RocketChat* and *Mattermost* outputs + sort `customer_fields` alphabetically ([PR#226](https://github.com/falcosecurity/falcosidekick/pull/226))\n- Set default values for *OpenFaas* output ([PR#232](https://github.com/falcosecurity/falcosidekick/pull/232))\n- Re-use session for *AWS* output instead of deprecated `session.New()` ([PR#238](https:`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 1,
                  "endLine": 162,
                  "endColumn": 9,
                  "snippet": {
                    "text": ".com/falcosecurity/falcosidekick/pull/263) thanks to [@dirien](https://github.com/dirien))\n#### Enhancement\n- Set header `x-amz-acl` to `bucket-owner-full-control` for output `AWS S3` ([PR#264](https://github.com/falcosecurity/falcosidekick/pull/264) thanks to [@Kaizhe](https://github.com/Kaizhe))\n- Docker image is now available on [`AWS ECR Public Gallery`](https://gallery.ecr.aws/falcosecurity/falcosidekick) ([PR#265](https://github.com/falcosecurity/falcosidekick/pull/265) thanks to [@maxgio92](https://github.com/maxgio92))\n\n## 2.23.1 - 2021-06-23\n#### Fix\n- Fix memory leak with `AddHeaders` method",
                    "rendered": {
                      "text": ".com/falcosecurity/falcosidekick/pull/263) thanks to [@dirien](https://github.com/dirien))\n#### Enhancement\n- Set header `x-amz-acl` to `bucket-owner-full-control` for output `AWS S3` ([PR#264](https://github.com/falcosecurity/falcosidekick/pull/264) thanks to [@Kaizhe](https://github.com/Kaizhe))\n- Docker image is now available on [`AWS ECR Public Gallery`](https://gallery.ecr.aws/falcosecurity/falcosidekick) ([PR#265](https://github.com/falcosecurity/falcosidekick/pull/265) thanks to [@maxgio92](https://github.com/maxgio92))\n\n## 2.23.1 - 2021-06-23\n#### Fix\n- Fix memory leak with `AddHeaders` method",
                      "markdown": "`.com/falcosecurity/falcosidekick/pull/263) thanks to [@dirien](https://github.com/dirien))\n#### Enhancement\n- Set header `x-amz-acl` to `bucket-owner-full-control` for output `AWS S3` ([PR#264](https://github.com/falcosecurity/falcosidekick/pull/264) thanks to [@Kaizhe](https://github.com/Kaizhe))\n- Docker image is now available on [`AWS ECR Public Gallery`](https://gallery.ecr.aws/falcosecurity/falcosidekick) ([PR#265](https://github.com/falcosecurity/falcosidekick/pull/265) thanks to [@maxgio92](https://github.com/maxgio92))\n\n## 2.23.1 - 2021-06-23\n#### Fix\n- Fix memory leak with `AddHeaders` method`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 19,
                  "endLine": 142,
                  "endColumn": 28,
                  "snippet": {
                    "text": "falcosidekick/pull/289) [PR#292](https://github.com/falcosecurity/falcosidekick/pull/292))\n- Add version info ([PR#290](https://github.com/falcosecurity/falcosidekick/pull/290))\n- Update image base to alpine 3.15 ([PR#291](https://github.com/falcosecurity/falcosidekick/pull/291))\n- Increase CircleCI timeout ([PR#293](https://github.com/falcosecurity/falcosidekick/pull/293))\n- Support *IRSA* for AWS authentication ([PR#295](https://github.com/falcosecurity/falcosidekick/pull/295) thanks to [@VariableExp0rt](https://github.com/VariableExp0rt))\n- Add *tenant* for *Loki* output ([PR#308](https://github.com",
                    "rendered": {
                      "text": "falcosidekick/pull/289) [PR#292](https://github.com/falcosecurity/falcosidekick/pull/292))\n- Add version info ([PR#290](https://github.com/falcosecurity/falcosidekick/pull/290))\n- Update image base to alpine 3.15 ([PR#291](https://github.com/falcosecurity/falcosidekick/pull/291))\n- Increase CircleCI timeout ([PR#293](https://github.com/falcosecurity/falcosidekick/pull/293))\n- Support *IRSA* for AWS authentication ([PR#295](https://github.com/falcosecurity/falcosidekick/pull/295) thanks to [@VariableExp0rt](https://github.com/VariableExp0rt))\n- Add *tenant* for *Loki* output ([PR#308](https://github.com",
                      "markdown": "`falcosidekick/pull/289) [PR#292](https://github.com/falcosecurity/falcosidekick/pull/292))\n- Add version info ([PR#290](https://github.com/falcosecurity/falcosidekick/pull/290))\n- Update image base to alpine 3.15 ([PR#291](https://github.com/falcosecurity/falcosidekick/pull/291))\n- Increase CircleCI timeout ([PR#293](https://github.com/falcosecurity/falcosidekick/pull/293))\n- Support *IRSA* for AWS authentication ([PR#295](https://github.com/falcosecurity/falcosidekick/pull/295) thanks to [@VariableExp0rt](https://github.com/VariableExp0rt))\n- Add *tenant* for *Loki* output ([PR#308](https://github.com`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 9,
                  "endLine": 102,
                  "endColumn": 14,
                  "snippet": {
                    "text": "xtra labels and annotations for `AlertManager` payloads ([PR#347](https://github.com/falcosecurity/falcosidekick/pull/347) thanks to [@Lowaiz](https://github.com/Lowaiz))\n- Update default type for `Elasticsearch` documents ([PR#349](https://github.com/falcosecurity/falcosidekick/pull/349))\n- Support env vars in custom fields ([PR#353](https://github.com/falcosecurity/falcosidekick/pull/353))\n- Update format + default endpoint for `Loki` output ([PR#356](https://github.com/falcosecurity/falcosidekick/pull/356))\n- Determine resource names + owner ref for `Policy Reports` ([PR#358](https://github.com/",
                    "rendered": {
                      "text": "xtra labels and annotations for `AlertManager` payloads ([PR#347](https://github.com/falcosecurity/falcosidekick/pull/347) thanks to [@Lowaiz](https://github.com/Lowaiz))\n- Update default type for `Elasticsearch` documents ([PR#349](https://github.com/falcosecurity/falcosidekick/pull/349))\n- Support env vars in custom fields ([PR#353](https://github.com/falcosecurity/falcosidekick/pull/353))\n- Update format + default endpoint for `Loki` output ([PR#356](https://github.com/falcosecurity/falcosidekick/pull/356))\n- Determine resource names + owner ref for `Policy Reports` ([PR#358](https://github.com/",
                      "markdown": "`xtra labels and annotations for `AlertManager` payloads ([PR#347](https://github.com/falcosecurity/falcosidekick/pull/347) thanks to [@Lowaiz](https://github.com/Lowaiz))\n- Update default type for `Elasticsearch` documents ([PR#349](https://github.com/falcosecurity/falcosidekick/pull/349))\n- Support env vars in custom fields ([PR#353](https://github.com/falcosecurity/falcosidekick/pull/353))\n- Update format + default endpoint for `Loki` output ([PR#356](https://github.com/falcosecurity/falcosidekick/pull/356))\n- Determine resource names + owner ref for `Policy Reports` ([PR#358](https://github.com/`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 11,
                  "endLine": 36,
                  "endColumn": 16,
                  "snippet": {
                    "text": " the outputs into multiple files ([PR#648](https://github.com/falcosecurity/falcosidekick/pull/648))\n- Fix mTLS client verification failures due to missing ClientCAs ([PR#666](https://github.com/falcosecurity/falcosidekick/pull/666) thanks to [@jgmartinez](https://github.com/jgmartinez))\n- Fix wrong env var for pagerduty output ([PR#682](https://github.com/falcosecurity/falcosidekick/pull/682))\n- Remove hard settings for usernames in `Mattermost` and `Rocketchat` ([PR#731](https://github.com/falcosecurity/falcosidekick/pull/731))\n- Fix multi lines json in the error lines ([PR#764](https://github.co",
                    "rendered": {
                      "text": " the outputs into multiple files ([PR#648](https://github.com/falcosecurity/falcosidekick/pull/648))\n- Fix mTLS client verification failures due to missing ClientCAs ([PR#666](https://github.com/falcosecurity/falcosidekick/pull/666) thanks to [@jgmartinez](https://github.com/jgmartinez))\n- Fix wrong env var for pagerduty output ([PR#682](https://github.com/falcosecurity/falcosidekick/pull/682))\n- Remove hard settings for usernames in `Mattermost` and `Rocketchat` ([PR#731](https://github.com/falcosecurity/falcosidekick/pull/731))\n- Fix multi lines json in the error lines ([PR#764](https://github.co",
                      "markdown": "` the outputs into multiple files ([PR#648](https://github.com/falcosecurity/falcosidekick/pull/648))\n- Fix mTLS client verification failures due to missing ClientCAs ([PR#666](https://github.com/falcosecurity/falcosidekick/pull/666) thanks to [@jgmartinez](https://github.com/jgmartinez))\n- Fix wrong env var for pagerduty output ([PR#682](https://github.com/falcosecurity/falcosidekick/pull/682))\n- Remove hard settings for usernames in `Mattermost` and `Rocketchat` ([PR#731](https://github.com/falcosecurity/falcosidekick/pull/731))\n- Fix multi lines json in the error lines ([PR#764](https://github.co`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/README.md"
                },
                "region": {
                  "startLine": 436,
                  "startColumn": 185,
                  "endLine": 436,
                  "endColumn": 193,
                  "snippet": {
                    "text": "Run you daemon and try (from Falco's documentation):\n\n```bash\ncurl -XPOST \"http://localhost:2801/\" -d'{\"output\":\"16:31:56.746609046: Error File below a known binary directory opened for writing (user=root command=touch /bin/hack file=/bin/hack)\",\"hostname\": \"localhost\", \"priority\":\"Error\",\"rule\":\"Write below binary dir\",\"time\":\"2019-05-17T15:31:56.746609046Z\", \"output_fields\": {\"evt.time\":1507591916746609046,\"fd.name\":\"/bin/hack\",\"proc.cmdline\":\"touch /bin/hack\",\"user.name\":\"root\"}}'\n```\n\n## Development\n",
                    "rendered": {
                      "text": "Run you daemon and try (from Falco's documentation):\n\n```bash\ncurl -XPOST \"http://localhost:2801/\" -d'{\"output\":\"16:31:56.746609046: Error File below a known binary directory opened for writing (user=root command=touch /bin/hack file=/bin/hack)\",\"hostname\": \"localhost\", \"priority\":\"Error\",\"rule\":\"Write below binary dir\",\"time\":\"2019-05-17T15:31:56.746609046Z\", \"output_fields\": {\"evt.time\":1507591916746609046,\"fd.name\":\"/bin/hack\",\"proc.cmdline\":\"touch /bin/hack\",\"user.name\":\"root\"}}'\n```\n\n## Development\n",
                      "markdown": "`Run you daemon and try (from Falco's documentation):\n\n```bash\ncurl -XPOST \"http://localhost:2801/\" -d'{\"output\":\"16:31:56.746609046: Error File below a known binary directory opened for writing (user=root command=touch /bin/hack file=/bin/hack)\",\"hostname\": \"localhost\", \"priority\":\"Error\",\"rule\":\"Write below binary dir\",\"time\":\"2019-05-17T15:31:56.746609046Z\", \"output_fields\": {\"evt.time\":1507591916746609046,\"fd.name\":\"/bin/hack\",\"proc.cmdline\":\"touch /bin/hack\",\"user.name\":\"root\"}}'\n```\n\n## Development\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/README.md"
                },
                "region": {
                  "startLine": 261,
                  "startColumn": 9,
                  "endLine": 262,
                  "snippet": {
                    "text": "You can also deploy `falcosidekick` as a dependency of the `falco` chart, the settings for the communication between falco and `falcosidekick` are automatically set. Just prefix all `falcosidekick` settings with `falcosidekick.`:\n```bash\nhelm repo add falcosecurity https://falcosecurity.github.io/charts\nhelm repo update\n\nhelm install falco --set falcosidekick.enabled=true falcosecurity/falco\n```\n\n",
                    "rendered": {
                      "text": "You can also deploy `falcosidekick` as a dependency of the `falco` chart, the settings for the communication between falco and `falcosidekick` are automatically set. Just prefix all `falcosidekick` settings with `falcosidekick.`:\n```bash\nhelm repo add falcosecurity https://falcosecurity.github.io/charts\nhelm repo update\n\nhelm install falco --set falcosidekick.enabled=true falcosecurity/falco\n```\n\n",
                      "markdown": "`You can also deploy `falcosidekick` as a dependency of the `falco` chart, the settings for the communication between falco and `falcosidekick` are automatically set. Just prefix all `falcosidekick` settings with `falcosidekick.`:\n```bash\nhelm repo add falcosecurity https://falcosecurity.github.io/charts\nhelm repo update\n\nhelm install falco --set falcosidekick.enabled=true falcosecurity/falco\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/README.md"
                },
                "region": {
                  "startLine": 252,
                  "startColumn": 9,
                  "endLine": 253,
                  "snippet": {
                    "text": "\n```bash\nhelm repo add falcosecurity https://falcosecurity.github.io/charts\nhelm repo update\n\nhelm install falcosidekick --set config.debug=true falcosecurity/falcosidekick\n```\n\n",
                    "rendered": {
                      "text": "\n```bash\nhelm repo add falcosecurity https://falcosecurity.github.io/charts\nhelm repo update\n\nhelm install falcosidekick --set config.debug=true falcosecurity/falcosidekick\n```\n\n",
                      "markdown": "`\n```bash\nhelm repo add falcosecurity https://falcosecurity.github.io/charts\nhelm repo update\n\nhelm install falcosidekick --set config.debug=true falcosecurity/falcosidekick\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/README.md"
                },
                "region": {
                  "startLine": 451,
                  "startColumn": 7,
                  "endLine": 452,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nCreate a debug event\n\n```bash\ncurl -X POST -H \"Content-Type: application/json\" -H \"Accept: application/json\" localhost:2801/test\n```\n\n### Test & Coverage\n",
                    "rendered": {
                      "text": "\nCreate a debug event\n\n```bash\ncurl -X POST -H \"Content-Type: application/json\" -H \"Accept: application/json\" localhost:2801/test\n```\n\n### Test & Coverage\n",
                      "markdown": "`\nCreate a debug event\n\n```bash\ncurl -X POST -H \"Content-Type: application/json\" -H \"Accept: application/json\" localhost:2801/test\n```\n\n### Test & Coverage\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/README.md"
                },
                "region": {
                  "startLine": 435,
                  "startColumn": 7,
                  "endLine": 436,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nRun you daemon and try (from Falco's documentation):\n\n```bash\ncurl -XPOST \"http://localhost:2801/\" -d'{\"output\":\"16:31:56.746609046: Error File below a known binary directory opened for writing (user=root command=touch /bin/hack file=/bin/hack)\",\"hostname\": \"localhost\", \"priority\":\"Error\",\"rule\":\"Write below binary dir\",\"time\":\"2019-05-17T15:31:56.746609046Z\", \"output_fields\": {\"evt.time\":1507591916746609046,\"fd.name\":\"/bin/hack\",\"proc.cmdline\":\"touch /bin/hack\",\"user.name\":\"root\"}}'\n```\n\n## Development\n",
                    "rendered": {
                      "text": "\nRun you daemon and try (from Falco's documentation):\n\n```bash\ncurl -XPOST \"http://localhost:2801/\" -d'{\"output\":\"16:31:56.746609046: Error File below a known binary directory opened for writing (user=root command=touch /bin/hack file=/bin/hack)\",\"hostname\": \"localhost\", \"priority\":\"Error\",\"rule\":\"Write below binary dir\",\"time\":\"2019-05-17T15:31:56.746609046Z\", \"output_fields\": {\"evt.time\":1507591916746609046,\"fd.name\":\"/bin/hack\",\"proc.cmdline\":\"touch /bin/hack\",\"user.name\":\"root\"}}'\n```\n\n## Development\n",
                      "markdown": "`\nRun you daemon and try (from Falco's documentation):\n\n```bash\ncurl -XPOST \"http://localhost:2801/\" -d'{\"output\":\"16:31:56.746609046: Error File below a known binary directory opened for writing (user=root command=touch /bin/hack file=/bin/hack)\",\"hostname\": \"localhost\", \"priority\":\"Error\",\"rule\":\"Write below binary dir\",\"time\":\"2019-05-17T15:31:56.746609046Z\", \"output_fields\": {\"evt.time\":1507591916746609046,\"fd.name\":\"/bin/hack\",\"proc.cmdline\":\"touch /bin/hack\",\"user.name\":\"root\"}}'\n```\n\n## Development\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/README.md"
                },
                "region": {
                  "startLine": 401,
                  "startColumn": 7,
                  "endLine": 402,
                  "endColumn": 7,
                  "snippet": {
                    "text": "lient/client.key -v /localpath/ca.crt:/etc/certs/client/ca.crt falcosecurity/falcosidekick\n```\n\nAlternately the path where the *client.crt*, *client.key* and *ca.crt* files are stored can be configured in **mutualtlsfilespath** global parameter. (**Important**: file names must be preserved)\n\n```bash\ndocker run -d -p 2801:2801 -e MUTUALTLSFILESPATH=/etc/certs -e ALERTMANAGER_HOSTPORT=https://XXXX -e ALERTMANAGER_MUTUALTLS=true -e INFLUXDB_HOSTPORT=https://XXXX -e INFLUXDB_MUTUALTLS=true -e WEBHOOK_ADDRESS=XXXX -v /localpath/myclientcert.crt:/etc/certs/client.crt -v /localpath/myclientkey.key:/etc/certs",
                    "rendered": {
                      "text": "lient/client.key -v /localpath/ca.crt:/etc/certs/client/ca.crt falcosecurity/falcosidekick\n```\n\nAlternately the path where the *client.crt*, *client.key* and *ca.crt* files are stored can be configured in **mutualtlsfilespath** global parameter. (**Important**: file names must be preserved)\n\n```bash\ndocker run -d -p 2801:2801 -e MUTUALTLSFILESPATH=/etc/certs -e ALERTMANAGER_HOSTPORT=https://XXXX -e ALERTMANAGER_MUTUALTLS=true -e INFLUXDB_HOSTPORT=https://XXXX -e INFLUXDB_MUTUALTLS=true -e WEBHOOK_ADDRESS=XXXX -v /localpath/myclientcert.crt:/etc/certs/client.crt -v /localpath/myclientkey.key:/etc/certs",
                      "markdown": "`lient/client.key -v /localpath/ca.crt:/etc/certs/client/ca.crt falcosecurity/falcosidekick\n```\n\nAlternately the path where the *client.crt*, *client.key* and *ca.crt* files are stored can be configured in **mutualtlsfilespath** global parameter. (**Important**: file names must be preserved)\n\n```bash\ndocker run -d -p 2801:2801 -e MUTUALTLSFILESPATH=/etc/certs -e ALERTMANAGER_HOSTPORT=https://XXXX -e ALERTMANAGER_MUTUALTLS=true -e INFLUXDB_HOSTPORT=https://XXXX -e INFLUXDB_MUTUALTLS=true -e WEBHOOK_ADDRESS=XXXX -v /localpath/myclientcert.crt:/etc/certs/client.crt -v /localpath/myclientkey.key:/etc/certs`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/README.md"
                },
                "region": {
                  "startLine": 395,
                  "startColumn": 7,
                  "endLine": 396,
                  "endColumn": 7,
                  "snippet": {
                    "text": " Slack Datadog\n```\n\n## Mutual TLS ##\n\nOutputs with `mutualtls` enabled in their configuration require the *client.crt*, *client.key* and *ca.crt* filepaths to be configured in the **mutualtlsclient_certfile**, **mutualtlsclient_keyfile** and  **mutualtlsclient_cacertfile** global parameter.\n\n```bash\ndocker run -d -p 2801:2801 -e MUTUALTLSCLIENT_CERTFILE=/etc/certs/client/client.crt -e MUTUALTLSCLIENT_KEYFILE=/etc/certs/client/client.key -e MUTUALTLSCLIENT_CACERTFILE=/etc/certs/client/ca.crt -e ALERTMANAGER_HOSTPORT=https://XXXX -e ALERTMANAGER_MUTUALTLS=true -e INFLUXDB_HOSTPORT=https://XXXX -e INFLUX",
                    "rendered": {
                      "text": " Slack Datadog\n```\n\n## Mutual TLS ##\n\nOutputs with `mutualtls` enabled in their configuration require the *client.crt*, *client.key* and *ca.crt* filepaths to be configured in the **mutualtlsclient_certfile**, **mutualtlsclient_keyfile** and  **mutualtlsclient_cacertfile** global parameter.\n\n```bash\ndocker run -d -p 2801:2801 -e MUTUALTLSCLIENT_CERTFILE=/etc/certs/client/client.crt -e MUTUALTLSCLIENT_KEYFILE=/etc/certs/client/client.key -e MUTUALTLSCLIENT_CACERTFILE=/etc/certs/client/ca.crt -e ALERTMANAGER_HOSTPORT=https://XXXX -e ALERTMANAGER_MUTUALTLS=true -e INFLUXDB_HOSTPORT=https://XXXX -e INFLUX",
                      "markdown": "` Slack Datadog\n```\n\n## Mutual TLS ##\n\nOutputs with `mutualtls` enabled in their configuration require the *client.crt*, *client.key* and *ca.crt* filepaths to be configured in the **mutualtlsclient_certfile**, **mutualtlsclient_keyfile** and  **mutualtlsclient_cacertfile** global parameter.\n\n```bash\ndocker run -d -p 2801:2801 -e MUTUALTLSCLIENT_CERTFILE=/etc/certs/client/client.crt -e MUTUALTLSCLIENT_KEYFILE=/etc/certs/client/client.key -e MUTUALTLSCLIENT_CACERTFILE=/etc/certs/client/ca.crt -e ALERTMANAGER_HOSTPORT=https://XXXX -e ALERTMANAGER_MUTUALTLS=true -e INFLUXDB_HOSTPORT=https://XXXX -e INFLUX`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/README.md"
                },
                "region": {
                  "startLine": 332,
                  "startColumn": 96,
                  "endLine": 332,
                  "endColumn": 101,
                  "snippet": {
                    "text": "  # Ckey: \"CValue\"\ntemplatedfields: # templated fields are added to falco events and metrics, it uses Go template + output_fields values\n  # Dkey: '{{ or (index . \"k8s.ns.labels.foo\") \"bar\" }}'\ncustomtags: # custom tags are added to the falco events, if the value starts with % the relative env var is used\n  # - tagA\n  # - tagB\n# bracketreplacer: \"_\" # if not empty, replace the brackets in keys of Output Fields\n",
                    "rendered": {
                      "text": "  # Ckey: \"CValue\"\ntemplatedfields: # templated fields are added to falco events and metrics, it uses Go template + output_fields values\n  # Dkey: '{{ or (index . \"k8s.ns.labels.foo\") \"bar\" }}'\ncustomtags: # custom tags are added to the falco events, if the value starts with % the relative env var is used\n  # - tagA\n  # - tagB\n# bracketreplacer: \"_\" # if not empty, replace the brackets in keys of Output Fields\n",
                      "markdown": "`  # Ckey: \"CValue\"\ntemplatedfields: # templated fields are added to falco events and metrics, it uses Go template + output_fields values\n  # Dkey: '{{ or (index . \"k8s.ns.labels.foo\") \"bar\" }}'\ncustomtags: # custom tags are added to the falco events, if the value starts with % the relative env var is used\n  # - tagA\n  # - tagB\n# bracketreplacer: \"_\" # if not empty, replace the brackets in keys of Output Fields\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/README.md"
                },
                "region": {
                  "startLine": 326,
                  "startColumn": 96,
                  "endLine": 326,
                  "endColumn": 101,
                  "snippet": {
                    "text": "#listenaddress: \"\" # ip address to bind falcosidekick to (default: \"\" meaning all addresses)\n#listenport: 2801 # port to listen for daemon (default: 2801)\ndebug: false # if true all outputs will print in stdout the payload they send (default: false)\ncustomfields: # custom fields are added to falco events, if the value starts with % the relative env var is used\n  # Akey: \"AValue\"\n  # Bkey: \"BValue\"\n  # Ckey: \"CValue\"\n",
                    "rendered": {
                      "text": "#listenaddress: \"\" # ip address to bind falcosidekick to (default: \"\" meaning all addresses)\n#listenport: 2801 # port to listen for daemon (default: 2801)\ndebug: false # if true all outputs will print in stdout the payload they send (default: false)\ncustomfields: # custom fields are added to falco events, if the value starts with % the relative env var is used\n  # Akey: \"AValue\"\n  # Bkey: \"BValue\"\n  # Ckey: \"CValue\"\n",
                      "markdown": "`#listenaddress: \"\" # ip address to bind falcosidekick to (default: \"\" meaning all addresses)\n#listenport: 2801 # port to listen for daemon (default: 2801)\ndebug: false # if true all outputs will print in stdout the payload they send (default: false)\ncustomfields: # custom fields are added to falco events, if the value starts with % the relative env var is used\n  # Akey: \"AValue\"\n  # Bkey: \"BValue\"\n  # Ckey: \"CValue\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/README.md"
                },
                "region": {
                  "startLine": 323,
                  "startColumn": 20,
                  "endLine": 323,
                  "endColumn": 24,
                  "snippet": {
                    "text": "See **config_example.yaml** :\n\n```yaml\n#listenaddress: \"\" # ip address to bind falcosidekick to (default: \"\" meaning all addresses)\n#listenport: 2801 # port to listen for daemon (default: 2801)\ndebug: false # if true all outputs will print in stdout the payload they send (default: false)\ncustomfields: # custom fields are added to falco events, if the value starts with % the relative env var is used\n",
                    "rendered": {
                      "text": "See **config_example.yaml** :\n\n```yaml\n#listenaddress: \"\" # ip address to bind falcosidekick to (default: \"\" meaning all addresses)\n#listenport: 2801 # port to listen for daemon (default: 2801)\ndebug: false # if true all outputs will print in stdout the payload they send (default: false)\ncustomfields: # custom fields are added to falco events, if the value starts with % the relative env var is used\n",
                      "markdown": "`See **config_example.yaml** :\n\n```yaml\n#listenaddress: \"\" # ip address to bind falcosidekick to (default: \"\" meaning all addresses)\n#listenport: 2801 # port to listen for daemon (default: 2801)\ndebug: false # if true all outputs will print in stdout the payload they send (default: false)\ncustomfields: # custom fields are added to falco events, if the value starts with % the relative env var is used\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/README.md"
                },
                "region": {
                  "startLine": 240,
                  "startColumn": 1,
                  "endLine": 240,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n* Check if `Falcosidekick` runs:\n  ```shell\n  curl localhost:2801/healthz\n  ```  \n\n### In Kubernetes\n",
                    "rendered": {
                      "text": "\n* Check if `Falcosidekick` runs:\n  ```shell\n  curl localhost:2801/healthz\n  ```  \n\n### In Kubernetes\n",
                      "markdown": "`\n* Check if `Falcosidekick` runs:\n  ```shell\n  curl localhost:2801/healthz\n  ```  \n\n### In Kubernetes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/README.md"
                },
                "region": {
                  "startLine": 235,
                  "startColumn": 6,
                  "endLine": 235,
                  "endColumn": 17,
                  "snippet": {
                    "text": "  ```shell\n  sudo systemctl daemon-reload\n  sudo systemctl enable falcosidekick\n  sudo systemctl start falcosidekick\n  ```\n\n* Check if `Falcosidekick` runs:\n",
                    "rendered": {
                      "text": "  ```shell\n  sudo systemctl daemon-reload\n  sudo systemctl enable falcosidekick\n  sudo systemctl start falcosidekick\n  ```\n\n* Check if `Falcosidekick` runs:\n",
                      "markdown": "`  ```shell\n  sudo systemctl daemon-reload\n  sudo systemctl enable falcosidekick\n  sudo systemctl start falcosidekick\n  ```\n\n* Check if `Falcosidekick` runs:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/README.md"
                },
                "region": {
                  "startLine": 234,
                  "startColumn": 6,
                  "endLine": 234,
                  "endColumn": 17,
                  "snippet": {
                    "text": "* Reload `systemd` and start `Falcosidekick`:\n  ```shell\n  sudo systemctl daemon-reload\n  sudo systemctl enable falcosidekick\n  sudo systemctl start falcosidekick\n  ```\n\n",
                    "rendered": {
                      "text": "* Reload `systemd` and start `Falcosidekick`:\n  ```shell\n  sudo systemctl daemon-reload\n  sudo systemctl enable falcosidekick\n  sudo systemctl start falcosidekick\n  ```\n\n",
                      "markdown": "`* Reload `systemd` and start `Falcosidekick`:\n  ```shell\n  sudo systemctl daemon-reload\n  sudo systemctl enable falcosidekick\n  sudo systemctl start falcosidekick\n  ```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/README.md"
                },
                "region": {
                  "startLine": 233,
                  "startColumn": 6,
                  "endLine": 233,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n* Reload `systemd` and start `Falcosidekick`:\n  ```shell\n  sudo systemctl daemon-reload\n  sudo systemctl enable falcosidekick\n  sudo systemctl start falcosidekick\n  ```\n",
                    "rendered": {
                      "text": "\n* Reload `systemd` and start `Falcosidekick`:\n  ```shell\n  sudo systemctl daemon-reload\n  sudo systemctl enable falcosidekick\n  sudo systemctl start falcosidekick\n  ```\n",
                      "markdown": "`\n* Reload `systemd` and start `Falcosidekick`:\n  ```shell\n  sudo systemctl daemon-reload\n  sudo systemctl enable falcosidekick\n  sudo systemctl start falcosidekick\n  ```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/README.md"
                },
                "region": {
                  "startLine": 213,
                  "startColumn": 6,
                  "endLine": 213,
                  "endColumn": 13,
                  "snippet": {
                    "text": "* Create the systemd unit files `/etc/systemd/system/falcosidekick.service`:\n  ```shell\n  sudo touch /etc/systemd/system/falcosidekick.service\n  sudo chmod 664 /etc/systemd/system/falcosidekick.service\n  ```\n  ```toml\n  [Unit]\n",
                    "rendered": {
                      "text": "* Create the systemd unit files `/etc/systemd/system/falcosidekick.service`:\n  ```shell\n  sudo touch /etc/systemd/system/falcosidekick.service\n  sudo chmod 664 /etc/systemd/system/falcosidekick.service\n  ```\n  ```toml\n  [Unit]\n",
                      "markdown": "`* Create the systemd unit files `/etc/systemd/system/falcosidekick.service`:\n  ```shell\n  sudo touch /etc/systemd/system/falcosidekick.service\n  sudo chmod 664 /etc/systemd/system/falcosidekick.service\n  ```\n  ```toml\n  [Unit]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/README.md"
                },
                "region": {
                  "startLine": 205,
                  "startColumn": 6,
                  "endLine": 205,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  or\n  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_amd64.tar.gz -O - | tar -xz\n  chmod +x falcosidekick\n  sudo mv falcosidekick /usr/local/bin/\n  ```\n\n* Create the `/etc/falcosidekick/config.yaml` file, see [Configuration](#configuration).\n",
                    "rendered": {
                      "text": "  or\n  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_amd64.tar.gz -O - | tar -xz\n  chmod +x falcosidekick\n  sudo mv falcosidekick /usr/local/bin/\n  ```\n\n* Create the `/etc/falcosidekick/config.yaml` file, see [Configuration](#configuration).\n",
                      "markdown": "`  or\n  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_amd64.tar.gz -O - | tar -xz\n  chmod +x falcosidekick\n  sudo mv falcosidekick /usr/local/bin/\n  ```\n\n* Create the `/etc/falcosidekick/config.yaml` file, see [Configuration](#configuration).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/README.md"
                },
                "region": {
                  "startLine": 204,
                  "startColumn": 1,
                  "endLine": 204,
                  "endColumn": 8,
                  "snippet": {
                    "text": "  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_arm64.tar.gz -O - | tar -xz\n  or\n  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_amd64.tar.gz -O - | tar -xz\n  chmod +x falcosidekick\n  sudo mv falcosidekick /usr/local/bin/\n  ```\n\n",
                    "rendered": {
                      "text": "  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_arm64.tar.gz -O - | tar -xz\n  or\n  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_amd64.tar.gz -O - | tar -xz\n  chmod +x falcosidekick\n  sudo mv falcosidekick /usr/local/bin/\n  ```\n\n",
                      "markdown": "`  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_arm64.tar.gz -O - | tar -xz\n  or\n  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_amd64.tar.gz -O - | tar -xz\n  chmod +x falcosidekick\n  sudo mv falcosidekick /usr/local/bin/\n  ```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/README.md"
                },
                "region": {
                  "startLine": 203,
                  "startColumn": 128,
                  "endLine": 203,
                  "endColumn": 133,
                  "snippet": {
                    "text": "  VER=$(curl --silent -qI https://github.com/falcosecurity/falcosidekick/releases/latest | awk -F '/' '/^location/ {print  substr($NF, 1, length($NF)-1)}')\n  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_arm64.tar.gz -O - | tar -xz\n  or\n  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_amd64.tar.gz -O - | tar -xz\n  chmod +x falcosidekick\n  sudo mv falcosidekick /usr/local/bin/\n  ```\n",
                    "rendered": {
                      "text": "  VER=$(curl --silent -qI https://github.com/falcosecurity/falcosidekick/releases/latest | awk -F '/' '/^location/ {print  substr($NF, 1, length($NF)-1)}')\n  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_arm64.tar.gz -O - | tar -xz\n  or\n  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_amd64.tar.gz -O - | tar -xz\n  chmod +x falcosidekick\n  sudo mv falcosidekick /usr/local/bin/\n  ```\n",
                      "markdown": "`  VER=$(curl --silent -qI https://github.com/falcosecurity/falcosidekick/releases/latest | awk -F '/' '/^location/ {print  substr($NF, 1, length($NF)-1)}')\n  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_arm64.tar.gz -O - | tar -xz\n  or\n  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_amd64.tar.gz -O - | tar -xz\n  chmod +x falcosidekick\n  sudo mv falcosidekick /usr/local/bin/\n  ```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/README.md"
                },
                "region": {
                  "startLine": 203,
                  "startColumn": 1,
                  "endLine": 203,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  VER=$(curl --silent -qI https://github.com/falcosecurity/falcosidekick/releases/latest | awk -F '/' '/^location/ {print  substr($NF, 1, length($NF)-1)}')\n  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_arm64.tar.gz -O - | tar -xz\n  or\n  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_amd64.tar.gz -O - | tar -xz\n  chmod +x falcosidekick\n  sudo mv falcosidekick /usr/local/bin/\n  ```\n",
                    "rendered": {
                      "text": "  VER=$(curl --silent -qI https://github.com/falcosecurity/falcosidekick/releases/latest | awk -F '/' '/^location/ {print  substr($NF, 1, length($NF)-1)}')\n  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_arm64.tar.gz -O - | tar -xz\n  or\n  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_amd64.tar.gz -O - | tar -xz\n  chmod +x falcosidekick\n  sudo mv falcosidekick /usr/local/bin/\n  ```\n",
                      "markdown": "`  VER=$(curl --silent -qI https://github.com/falcosecurity/falcosidekick/releases/latest | awk -F '/' '/^location/ {print  substr($NF, 1, length($NF)-1)}')\n  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_arm64.tar.gz -O - | tar -xz\n  or\n  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_amd64.tar.gz -O - | tar -xz\n  chmod +x falcosidekick\n  sudo mv falcosidekick /usr/local/bin/\n  ```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/README.md"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 128,
                  "endLine": 201,
                  "endColumn": 133,
                  "snippet": {
                    "text": "* Download the latest release:\n  ```shell\n  VER=$(curl --silent -qI https://github.com/falcosecurity/falcosidekick/releases/latest | awk -F '/' '/^location/ {print  substr($NF, 1, length($NF)-1)}')\n  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_arm64.tar.gz -O - | tar -xz\n  or\n  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_amd64.tar.gz -O - | tar -xz\n  chmod +x falcosidekick\n",
                    "rendered": {
                      "text": "* Download the latest release:\n  ```shell\n  VER=$(curl --silent -qI https://github.com/falcosecurity/falcosidekick/releases/latest | awk -F '/' '/^location/ {print  substr($NF, 1, length($NF)-1)}')\n  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_arm64.tar.gz -O - | tar -xz\n  or\n  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_amd64.tar.gz -O - | tar -xz\n  chmod +x falcosidekick\n",
                      "markdown": "`* Download the latest release:\n  ```shell\n  VER=$(curl --silent -qI https://github.com/falcosecurity/falcosidekick/releases/latest | awk -F '/' '/^location/ {print  substr($NF, 1, length($NF)-1)}')\n  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_arm64.tar.gz -O - | tar -xz\n  or\n  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_amd64.tar.gz -O - | tar -xz\n  chmod +x falcosidekick\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/README.md"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 1,
                  "endLine": 201,
                  "endColumn": 7,
                  "snippet": {
                    "text": "* Download the latest release:\n  ```shell\n  VER=$(curl --silent -qI https://github.com/falcosecurity/falcosidekick/releases/latest | awk -F '/' '/^location/ {print  substr($NF, 1, length($NF)-1)}')\n  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_arm64.tar.gz -O - | tar -xz\n  or\n  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_amd64.tar.gz -O - | tar -xz\n  chmod +x falcosidekick\n",
                    "rendered": {
                      "text": "* Download the latest release:\n  ```shell\n  VER=$(curl --silent -qI https://github.com/falcosecurity/falcosidekick/releases/latest | awk -F '/' '/^location/ {print  substr($NF, 1, length($NF)-1)}')\n  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_arm64.tar.gz -O - | tar -xz\n  or\n  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_amd64.tar.gz -O - | tar -xz\n  chmod +x falcosidekick\n",
                      "markdown": "`* Download the latest release:\n  ```shell\n  VER=$(curl --silent -qI https://github.com/falcosecurity/falcosidekick/releases/latest | awk -F '/' '/^location/ {print  substr($NF, 1, length($NF)-1)}')\n  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_arm64.tar.gz -O - | tar -xz\n  or\n  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_amd64.tar.gz -O - | tar -xz\n  chmod +x falcosidekick\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/README.md"
                },
                "region": {
                  "startLine": 200,
                  "startColumn": 90,
                  "endLine": 200,
                  "endColumn": 95,
                  "snippet": {
                    "text": "\n* Download the latest release:\n  ```shell\n  VER=$(curl --silent -qI https://github.com/falcosecurity/falcosidekick/releases/latest | awk -F '/' '/^location/ {print  substr($NF, 1, length($NF)-1)}')\n  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_arm64.tar.gz -O - | tar -xz\n  or\n  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_amd64.tar.gz -O - | tar -xz\n",
                    "rendered": {
                      "text": "\n* Download the latest release:\n  ```shell\n  VER=$(curl --silent -qI https://github.com/falcosecurity/falcosidekick/releases/latest | awk -F '/' '/^location/ {print  substr($NF, 1, length($NF)-1)}')\n  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_arm64.tar.gz -O - | tar -xz\n  or\n  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_amd64.tar.gz -O - | tar -xz\n",
                      "markdown": "`\n* Download the latest release:\n  ```shell\n  VER=$(curl --silent -qI https://github.com/falcosecurity/falcosidekick/releases/latest | awk -F '/' '/^location/ {print  substr($NF, 1, length($NF)-1)}')\n  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_arm64.tar.gz -O - | tar -xz\n  or\n  wget -c https://github.com/falcosecurity/falcosidekick/releases/download/${VER}/falcosidekick_${VER}_linux_amd64.tar.gz -O - | tar -xz\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/README.md"
                },
                "region": {
                  "startLine": 192,
                  "startColumn": 7,
                  "endLine": 193,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#### With docker\n\nUse the environment variables to set up the outputs:\n```bash\ndocker run -d -p 2801:2801 -e SLACK_WEBHOOKURL=XXXX -e DATADOG_APIKEY=XXXX falcosecurity/falcosidekick\n```\n\n#### With systemd\n",
                    "rendered": {
                      "text": "#### With docker\n\nUse the environment variables to set up the outputs:\n```bash\ndocker run -d -p 2801:2801 -e SLACK_WEBHOOKURL=XXXX -e DATADOG_APIKEY=XXXX falcosecurity/falcosidekick\n```\n\n#### With systemd\n",
                      "markdown": "`#### With docker\n\nUse the environment variables to set up the outputs:\n```bash\ndocker run -d -p 2801:2801 -e SLACK_WEBHOOKURL=XXXX -e DATADOG_APIKEY=XXXX falcosecurity/falcosidekick\n```\n\n#### With systemd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/README.md"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 9,
                  "endLine": 190,
                  "snippet": {
                    "text": "\n### Localhost\n\n#### With docker\n\nUse the environment variables to set up the outputs:\n```bash\ndocker run -d -p 2801:2801 -e SLACK_WEBHOOKURL=XXXX -e DATADOG_APIKEY=XXXX falcosecurity/falcosidekick\n",
                    "rendered": {
                      "text": "\n### Localhost\n\n#### With docker\n\nUse the environment variables to set up the outputs:\n```bash\ndocker run -d -p 2801:2801 -e SLACK_WEBHOOKURL=XXXX -e DATADOG_APIKEY=XXXX falcosecurity/falcosidekick\n",
                      "markdown": "`\n### Localhost\n\n#### With docker\n\nUse the environment variables to set up the outputs:\n```bash\ndocker run -d -p 2801:2801 -e SLACK_WEBHOOKURL=XXXX -e DATADOG_APIKEY=XXXX falcosecurity/falcosidekick\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/tekton.go"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 9,
                  "endLine": 15,
                  "endColumn": 15,
                  "snippet": {
                    "text": "func (c *Client) TektonPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Tekton.Add(Total, 1)\n\n\terr := c.Post(falcopayload)\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:tekton\", \"status:error\"})\n\t\tc.Stats.Tekton.Add(Error, 1)\n",
                    "rendered": {
                      "text": "func (c *Client) TektonPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Tekton.Add(Total, 1)\n\n\terr := c.Post(falcopayload)\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:tekton\", \"status:error\"})\n\t\tc.Stats.Tekton.Add(Error, 1)\n",
                      "markdown": "`func (c *Client) TektonPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Tekton.Add(Total, 1)\n\n\terr := c.Post(falcopayload)\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:tekton\", \"status:error\"})\n\t\tc.Stats.Tekton.Add(Error, 1)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/googlechat.go"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 9,
                  "endLine": 105,
                  "endColumn": 15,
                  "snippet": {
                    "text": "func (c *Client) GooglechatPost(falcopayload types.FalcoPayload) {\n\tc.Stats.GoogleChat.Add(Total, 1)\n\n\terr := c.Post(newGooglechatPayload(falcopayload, c.Config))\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:googlechat\", \"status:error\"})\n\t\tc.Stats.GoogleChat.Add(Error, 1)\n",
                    "rendered": {
                      "text": "func (c *Client) GooglechatPost(falcopayload types.FalcoPayload) {\n\tc.Stats.GoogleChat.Add(Total, 1)\n\n\terr := c.Post(newGooglechatPayload(falcopayload, c.Config))\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:googlechat\", \"status:error\"})\n\t\tc.Stats.GoogleChat.Add(Error, 1)\n",
                      "markdown": "`func (c *Client) GooglechatPost(falcopayload types.FalcoPayload) {\n\tc.Stats.GoogleChat.Add(Total, 1)\n\n\terr := c.Post(newGooglechatPayload(falcopayload, c.Config))\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:googlechat\", \"status:error\"})\n\t\tc.Stats.GoogleChat.Add(Error, 1)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/kafkarest.go"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 8,
                  "endLine": 53,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\t\t}},\n\t}\n\n\terr = c.Post(payload)\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:kafkarest\", \"status:error\"})\n\t\tc.Stats.KafkaRest.Add(Error, 1)\n",
                    "rendered": {
                      "text": "\t\t}},\n\t}\n\n\terr = c.Post(payload)\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:kafkarest\", \"status:error\"})\n\t\tc.Stats.KafkaRest.Add(Error, 1)\n",
                      "markdown": "`\t\t}},\n\t}\n\n\terr = c.Post(payload)\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:kafkarest\", \"status:error\"})\n\t\tc.Stats.KafkaRest.Add(Error, 1)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/kafkarest.go"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 10,
                  "endLine": 49,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\n\tpayload := KafkaRestPayload{\n\t\tRecords: []Records{{\n\t\t\tValue: base64.StdEncoding.EncodeToString(falcoMsg),\n\t\t}},\n\t}\n\n",
                    "rendered": {
                      "text": "\n\tpayload := KafkaRestPayload{\n\t\tRecords: []Records{{\n\t\t\tValue: base64.StdEncoding.EncodeToString(falcoMsg),\n\t\t}},\n\t}\n\n",
                      "markdown": "`\n\tpayload := KafkaRestPayload{\n\t\tRecords: []Records{{\n\t\t\tValue: base64.StdEncoding.EncodeToString(falcoMsg),\n\t\t}},\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/kafkarest.go"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 11,
                  "endLine": 6,
                  "endColumn": 17,
                  "snippet": {
                    "text": "package outputs\n\nimport (\n\t\"encoding/base64\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"log\"\n",
                    "rendered": {
                      "text": "package outputs\n\nimport (\n\t\"encoding/base64\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"log\"\n",
                      "markdown": "`package outputs\n\nimport (\n\t\"encoding/base64\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"log\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/fission.md"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 26,
                  "endLine": 37,
                  "endColumn": 35,
                  "snippet": {
                    "text": "## Example of config.yaml\n\n```yaml\nfission:\n  function: \"\" # Name of Fission function, if not empty, Fission is enabled\n  routernamespace: \"fission\" # Namespace of Fission Router, \"fission\" (default)\n  routerservice: \"router\" # Service of Fission Router, \"router\" (default)\n  routerport: 80 # Port of service of Fission Router\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # mutualtls: false # if",
                    "rendered": {
                      "text": "## Example of config.yaml\n\n```yaml\nfission:\n  function: \"\" # Name of Fission function, if not empty, Fission is enabled\n  routernamespace: \"fission\" # Namespace of Fission Router, \"fission\" (default)\n  routerservice: \"router\" # Service of Fission Router, \"router\" (default)\n  routerport: 80 # Port of service of Fission Router\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # mutualtls: false # if",
                      "markdown": "`## Example of config.yaml\n\n```yaml\nfission:\n  function: \"\" # Name of Fission function, if not empty, Fission is enabled\n  routernamespace: \"fission\" # Namespace of Fission Router, \"fission\" (default)\n  routerservice: \"router\" # Service of Fission Router, \"router\" (default)\n  routerport: 80 # Port of service of Fission Router\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n  # mutualtls: false # if`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/fission.md"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 27,
                  "endLine": 36,
                  "endColumn": 36,
                  "snippet": {
                    "text": "fission:\n  function: \"\" # Name of Fission function, if not empty, Fission is enabled\n  routernamespace: \"fission\" # Namespace of Fission Router, \"fission\" (default)\n  routerservice: \"router\" # Service of Fission Router, \"router\" (default)\n  routerport: 80 # Port of service of Fission Router\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n",
                    "rendered": {
                      "text": "fission:\n  function: \"\" # Name of Fission function, if not empty, Fission is enabled\n  routernamespace: \"fission\" # Namespace of Fission Router, \"fission\" (default)\n  routerservice: \"router\" # Service of Fission Router, \"router\" (default)\n  routerport: 80 # Port of service of Fission Router\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n",
                      "markdown": "`fission:\n  function: \"\" # Name of Fission function, if not empty, Fission is enabled\n  routernamespace: \"fission\" # Namespace of Fission Router, \"fission\" (default)\n  routerservice: \"router\" # Service of Fission Router, \"router\" (default)\n  routerport: 80 # Port of service of Fission Router\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n  # checkcert: true # check if ssl certificate of the output is valid (default: true)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/fission.md"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 3,
                  "endLine": 28,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `fission.minimumpriority` | `FISSION_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `fission.minimumpriority` | `FISSION_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `fission.minimumpriority` | `FISSION_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/fission.md"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 84,
                  "endLine": 22,
                  "endColumn": 93,
                  "snippet": {
                    "text": "   |\n| `fission.routerservice`   | `FISSION_ROUTERSERVICE`   | `router`         | Service of Fission Router                                                                                                           |\n| `fission.routerport`      | `FISSION_ROUTERPORT`      | `80`             | Port of service of Fission Router                                                                                                   |\n| `fission.mutualtls`       | `FISSION_MUTUALTLS`       | `false`          | Authenticate to the output with TLS, if true, checkcert flag will be ignored (server cert will always be ",
                    "rendered": {
                      "text": "   |\n| `fission.routerservice`   | `FISSION_ROUTERSERVICE`   | `router`         | Service of Fission Router                                                                                                           |\n| `fission.routerport`      | `FISSION_ROUTERPORT`      | `80`             | Port of service of Fission Router                                                                                                   |\n| `fission.mutualtls`       | `FISSION_MUTUALTLS`       | `false`          | Authenticate to the output with TLS, if true, checkcert flag will be ignored (server cert will always be ",
                      "markdown": "`   |\n| `fission.routerservice`   | `FISSION_ROUTERSERVICE`   | `router`         | Service of Fission Router                                                                                                           |\n| `fission.routerport`      | `FISSION_ROUTERPORT`      | `80`             | Port of service of Fission Router                                                                                                   |\n| `fission.mutualtls`       | `FISSION_MUTUALTLS`       | `false`          | Authenticate to the output with TLS, if true, checkcert flag will be ignored (server cert will always be `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/fission.md"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 76,
                  "endLine": 21,
                  "endColumn": 85,
                  "snippet": {
                    "text": "           |\n| `fission.routernamespace` | `FISSION_ROUTERNAMESPACE` | `fission`        | Namespace of Fission Router                                                                                                         |\n| `fission.routerservice`   | `FISSION_ROUTERSERVICE`   | `router`         | Service of Fission Router                                                                                                           |\n| `fission.routerport`      | `FISSION_ROUTERPORT`      | `80`             | Port of service of Fission Router                                                                ",
                    "rendered": {
                      "text": "           |\n| `fission.routernamespace` | `FISSION_ROUTERNAMESPACE` | `fission`        | Namespace of Fission Router                                                                                                         |\n| `fission.routerservice`   | `FISSION_ROUTERSERVICE`   | `router`         | Service of Fission Router                                                                                                           |\n| `fission.routerport`      | `FISSION_ROUTERPORT`      | `80`             | Port of service of Fission Router                                                                ",
                      "markdown": "`           |\n| `fission.routernamespace` | `FISSION_ROUTERNAMESPACE` | `fission`        | Namespace of Fission Router                                                                                                         |\n| `fission.routerservice`   | `FISSION_ROUTERSERVICE`   | `router`         | Service of Fission Router                                                                                                           |\n| `fission.routerport`      | `FISSION_ROUTERPORT`      | `80`             | Port of service of Fission Router                                                                `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/fission.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 29,
                  "endLine": 17,
                  "endColumn": 34,
                  "snippet": {
                    "text": "tput\n\n## Table of content\n\n- [Fission](#fission)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                   | Env var                   | Default value    | Description                                                                                                                         |\n| ------------------------- | ------------------------- | ---------------- | ----------------------------------------------",
                    "rendered": {
                      "text": "tput\n\n## Table of content\n\n- [Fission](#fission)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                   | Env var                   | Default value    | Description                                                                                                                         |\n| ------------------------- | ------------------------- | ---------------- | ----------------------------------------------",
                      "markdown": "`tput\n\n## Table of content\n\n- [Fission](#fission)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                   | Env var                   | Default value    | Description                                                                                                                         |\n| ------------------------- | ------------------------- | ---------------- | ----------------------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/pagerduty.md"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 3,
                  "endLine": 24,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `pagerduty.minimumpriority` | `PAGERDUTY_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `pagerduty.minimumpriority` | `PAGERDUTY_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `pagerduty.minimumpriority` | `PAGERDUTY_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/pagerduty.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 31,
                  "endLine": 17,
                  "endColumn": 36,
                  "snippet": {
                    "text": "## Table of content\n\n- [PagerDuty](#pagerduty)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                     | Env var                     | Default value    | Description                                                                                                                         |\n| --------------------------- | --------------------------- | ---------------- | ----------------------------------------",
                    "rendered": {
                      "text": "## Table of content\n\n- [PagerDuty](#pagerduty)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                     | Env var                     | Default value    | Description                                                                                                                         |\n| --------------------------- | --------------------------- | ---------------- | ----------------------------------------",
                      "markdown": "`## Table of content\n\n- [PagerDuty](#pagerduty)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                     | Env var                     | Default value    | Description                                                                                                                         |\n| --------------------------- | --------------------------- | ---------------- | ----------------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/stats_prometheus.go"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 3,
                  "endLine": 48,
                  "endColumn": 11,
                  "snippet": {
                    "text": "func getFalcoNewCounterVec(config *types.Configuration) *prometheus.CounterVec {\n\tregPromLabels, _ := regexp.Compile(\"^[a-zA-Z_:][a-zA-Z0-9_:]*$\")\n\tlabelnames := []string{\n\t\t\"hostname\",\n\t\t\"rule\",\n\t\t\"priority\",\n\t\t\"priority_raw\",\n",
                    "rendered": {
                      "text": "func getFalcoNewCounterVec(config *types.Configuration) *prometheus.CounterVec {\n\tregPromLabels, _ := regexp.Compile(\"^[a-zA-Z_:][a-zA-Z0-9_:]*$\")\n\tlabelnames := []string{\n\t\t\"hostname\",\n\t\t\"rule\",\n\t\t\"priority\",\n\t\t\"priority_raw\",\n",
                      "markdown": "`func getFalcoNewCounterVec(config *types.Configuration) *prometheus.CounterVec {\n\tregPromLabels, _ := regexp.Compile(\"^[a-zA-Z_:][a-zA-Z0-9_:]*$\")\n\tlabelnames := []string{\n\t\t\"hostname\",\n\t\t\"rule\",\n\t\t\"priority\",\n\t\t\"priority_raw\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/Dockerfile.dev"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 7,
                  "endLine": 13,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\nRUN make falcosidekick\n\n# Final Docker image\nFROM ${BASE_IMAGE} AS final-stage\nLABEL MAINTAINER \"Thomas Labarussias <issif+falcosidekick@gadz.org>\"\n\n",
                    "rendered": {
                      "text": "\nRUN make falcosidekick\n\n# Final Docker image\nFROM ${BASE_IMAGE} AS final-stage\nLABEL MAINTAINER \"Thomas Labarussias <issif+falcosidekick@gadz.org>\"\n\n",
                      "markdown": "`\nRUN make falcosidekick\n\n# Final Docker image\nFROM ${BASE_IMAGE} AS final-stage\nLABEL MAINTAINER \"Thomas Labarussias <issif+falcosidekick@gadz.org>\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/Dockerfile.dev"
                },
                "region": {
                  "startLine": 5,
                  "endLine": 6,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ARG BASE_IMAGE=alpine:3.19\n\nFROM ${BUILDER_IMAGE} AS build-stage\n\nENV CGO_ENABLED=0\n\nWORKDIR /src/\nCOPY . .\n",
                    "rendered": {
                      "text": "ARG BASE_IMAGE=alpine:3.19\n\nFROM ${BUILDER_IMAGE} AS build-stage\n\nENV CGO_ENABLED=0\n\nWORKDIR /src/\nCOPY . .\n",
                      "markdown": "`ARG BASE_IMAGE=alpine:3.19\n\nFROM ${BUILDER_IMAGE} AS build-stage\n\nENV CGO_ENABLED=0\n\nWORKDIR /src/\nCOPY . .\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docker-compose.yaml"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 19,
                  "endLine": 66,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    image: quay.io/minio/minio\n    environment:\n      - MINIO_ROOT_USER=root\n      - MINIO_ROOT_PASSWORD=super-secret\n      - MINIO_DOMAIN=minio.localhost\n    command: server /data --console-address \":9001\"\n    ports:\n",
                    "rendered": {
                      "text": "    image: quay.io/minio/minio\n    environment:\n      - MINIO_ROOT_USER=root\n      - MINIO_ROOT_PASSWORD=super-secret\n      - MINIO_DOMAIN=minio.localhost\n    command: server /data --console-address \":9001\"\n    ports:\n",
                      "markdown": "`    image: quay.io/minio/minio\n    environment:\n      - MINIO_ROOT_USER=root\n      - MINIO_ROOT_PASSWORD=super-secret\n      - MINIO_DOMAIN=minio.localhost\n    command: server /data --console-address \":9001\"\n    ports:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docker-compose.yaml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 29,
                  "endLine": 49,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    environment:\n      - DOCKER_INFLUXDB_INIT_MODE=setup\n      - DOCKER_INFLUXDB_INIT_USERNAME=admin\n      - DOCKER_INFLUXDB_INIT_PASSWORD=adminadmin\n      - DOCKER_INFLUXDB_INIT_ORG=falco\n      - DOCKER_INFLUXDB_INIT_BUCKET=falco\n    ports:\n",
                    "rendered": {
                      "text": "    environment:\n      - DOCKER_INFLUXDB_INIT_MODE=setup\n      - DOCKER_INFLUXDB_INIT_USERNAME=admin\n      - DOCKER_INFLUXDB_INIT_PASSWORD=adminadmin\n      - DOCKER_INFLUXDB_INIT_ORG=falco\n      - DOCKER_INFLUXDB_INIT_BUCKET=falco\n    ports:\n",
                      "markdown": "`    environment:\n      - DOCKER_INFLUXDB_INIT_MODE=setup\n      - DOCKER_INFLUXDB_INIT_USERNAME=admin\n      - DOCKER_INFLUXDB_INIT_PASSWORD=adminadmin\n      - DOCKER_INFLUXDB_INIT_ORG=falco\n      - DOCKER_INFLUXDB_INIT_BUCKET=falco\n    ports:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docker-compose.yaml"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 16,
                  "endLine": 16,
                  "endColumn": 24,
                  "snippet": {
                    "text": "      - \"9200:9200\"\n      - \"9300:9300\"\n    environment: #credentials: elastic/elastic\n      - ELASTIC_PASSWORD=elastic\n      - discovery.type=single-node\n      - xpack.security.enabled=false\n      - xpack.security.transport.ssl.enabled=false\n",
                    "rendered": {
                      "text": "      - \"9200:9200\"\n      - \"9300:9300\"\n    environment: #credentials: elastic/elastic\n      - ELASTIC_PASSWORD=elastic\n      - discovery.type=single-node\n      - xpack.security.enabled=false\n      - xpack.security.transport.ssl.enabled=false\n",
                      "markdown": "`      - \"9200:9200\"\n      - \"9300:9300\"\n    environment: #credentials: elastic/elastic\n      - ELASTIC_PASSWORD=elastic\n      - discovery.type=single-node\n      - xpack.security.enabled=false\n      - xpack.security.transport.ssl.enabled=false\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docker-compose.yaml"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 4,
                  "endLine": 28,
                  "endColumn": 12,
                  "snippet": {
                    "text": "      - \"4222:4222\"\n      - \"8222:8222\"\n    command: \"--http_port 8222\"\n    hostname: nats\n    profiles: [nats]\n\n  loki:\n",
                    "rendered": {
                      "text": "      - \"4222:4222\"\n      - \"8222:8222\"\n    command: \"--http_port 8222\"\n    hostname: nats\n    profiles: [nats]\n\n  loki:\n",
                      "markdown": "`      - \"4222:4222\"\n      - \"8222:8222\"\n    command: \"--http_port 8222\"\n    hostname: nats\n    profiles: [nats]\n\n  loki:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config.go"
                },
                "region": {
                  "startLine": 386,
                  "startColumn": 3,
                  "endLine": 386,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\"N8n\": {\n\t\t\"Address\":         \"\",\n\t\t\"User\":            \"\",\n\t\t\"Password\":        \"\",\n\t\t\"HeaderAuthName\":  \"\",\n\t\t\"HeaderAuthValue\": \"\",\n\t\t\"MinimumPriority\": \"\",\n",
                    "rendered": {
                      "text": "\t\"N8n\": {\n\t\t\"Address\":         \"\",\n\t\t\"User\":            \"\",\n\t\t\"Password\":        \"\",\n\t\t\"HeaderAuthName\":  \"\",\n\t\t\"HeaderAuthValue\": \"\",\n\t\t\"MinimumPriority\": \"\",\n",
                      "markdown": "`\t\"N8n\": {\n\t\t\"Address\":         \"\",\n\t\t\"User\":            \"\",\n\t\t\"Password\":        \"\",\n\t\t\"HeaderAuthName\":  \"\",\n\t\t\"HeaderAuthValue\": \"\",\n\t\t\"MinimumPriority\": \"\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config.go"
                },
                "region": {
                  "startLine": 378,
                  "startColumn": 3,
                  "endLine": 378,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t\"Host\":            \"\",\n\t\t\"Port\":            \"5432\",\n\t\t\"User\":            \"postgres\",\n\t\t\"Password\":        \"postgres\",\n\t\t\"Database\":        \"falcosidekick\",\n\t\t\"HypertableName\":  \"falcosidekick_events\",\n\t\t\"MinimumPriority\": \"\",\n",
                    "rendered": {
                      "text": "\t\t\"Host\":            \"\",\n\t\t\"Port\":            \"5432\",\n\t\t\"User\":            \"postgres\",\n\t\t\"Password\":        \"postgres\",\n\t\t\"Database\":        \"falcosidekick\",\n\t\t\"HypertableName\":  \"falcosidekick_events\",\n\t\t\"MinimumPriority\": \"\",\n",
                      "markdown": "`\t\t\"Host\":            \"\",\n\t\t\"Port\":            \"5432\",\n\t\t\"User\":            \"postgres\",\n\t\t\"Password\":        \"postgres\",\n\t\t\"Database\":        \"falcosidekick\",\n\t\t\"HypertableName\":  \"falcosidekick_events\",\n\t\t\"MinimumPriority\": \"\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config.go"
                },
                "region": {
                  "startLine": 350,
                  "startColumn": 3,
                  "endLine": 350,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t\"HostPort\":        \"\",\n\t\t\"Index\":           \"falco\",\n\t\t\"Username\":        \"\",\n\t\t\"Password\":        \"\",\n\t\t\"CheckCert\":       true,\n\t\t\"MinimumPriority\": \"\",\n\t},\n",
                    "rendered": {
                      "text": "\t\t\"HostPort\":        \"\",\n\t\t\"Index\":           \"falco\",\n\t\t\"Username\":        \"\",\n\t\t\"Password\":        \"\",\n\t\t\"CheckCert\":       true,\n\t\t\"MinimumPriority\": \"\",\n\t},\n",
                      "markdown": "`\t\t\"HostPort\":        \"\",\n\t\t\"Index\":           \"falco\",\n\t\t\"Username\":        \"\",\n\t\t\"Password\":        \"\",\n\t\t\"CheckCert\":       true,\n\t\t\"MinimumPriority\": \"\",\n\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config.go"
                },
                "region": {
                  "startLine": 342,
                  "startColumn": 3,
                  "endLine": 342,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t\"QOS\":             0,\n\t\t\"Retained\":        false,\n\t\t\"User\":            \"\",\n\t\t\"Password\":        \"\",\n\t\t\"CheckCert\":       true,\n\t\t\"MinimumPriority\": \"\",\n\t},\n",
                    "rendered": {
                      "text": "\t\t\"QOS\":             0,\n\t\t\"Retained\":        false,\n\t\t\"User\":            \"\",\n\t\t\"Password\":        \"\",\n\t\t\"CheckCert\":       true,\n\t\t\"MinimumPriority\": \"\",\n\t},\n",
                      "markdown": "`\t\t\"QOS\":             0,\n\t\t\"Retained\":        false,\n\t\t\"User\":            \"\",\n\t\t\"Password\":        \"\",\n\t\t\"CheckCert\":       true,\n\t\t\"MinimumPriority\": \"\",\n\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config.go"
                },
                "region": {
                  "startLine": 298,
                  "startColumn": 3,
                  "endLine": 298,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t\"SASL\":            \"\",\n\t\t\"TLS\":             false,\n\t\t\"Username\":        \"\",\n\t\t\"Password\":        \"\",\n\t\t\"Balancer\":        \"round_robin\",\n\t\t\"ClientID\":        \"\",\n\t\t\"Compression\":     \"NONE\",\n",
                    "rendered": {
                      "text": "\t\t\"SASL\":            \"\",\n\t\t\"TLS\":             false,\n\t\t\"Username\":        \"\",\n\t\t\"Password\":        \"\",\n\t\t\"Balancer\":        \"round_robin\",\n\t\t\"ClientID\":        \"\",\n\t\t\"Compression\":     \"NONE\",\n",
                      "markdown": "`\t\t\"SASL\":            \"\",\n\t\t\"TLS\":             false,\n\t\t\"Username\":        \"\",\n\t\t\"Password\":        \"\",\n\t\t\"Balancer\":        \"round_robin\",\n\t\t\"ClientID\":        \"\",\n\t\t\"Compression\":     \"NONE\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config.go"
                },
                "region": {
                  "startLine": 287,
                  "startColumn": 3,
                  "endLine": 287,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\"NodeRed\": {\n\t\t\"Address\":         \"\",\n\t\t\"User\":            \"\",\n\t\t\"Password\":        \"\",\n\t\t\"MinimumPriority\": \"\",\n\t\t\"CheckCert\":       true,\n\t},\n",
                    "rendered": {
                      "text": "\t\"NodeRed\": {\n\t\t\"Address\":         \"\",\n\t\t\"User\":            \"\",\n\t\t\"Password\":        \"\",\n\t\t\"MinimumPriority\": \"\",\n\t\t\"CheckCert\":       true,\n\t},\n",
                      "markdown": "`\t\"NodeRed\": {\n\t\t\"Address\":         \"\",\n\t\t\"User\":            \"\",\n\t\t\"Password\":        \"\",\n\t\t\"MinimumPriority\": \"\",\n\t\t\"CheckCert\":       true,\n\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config.go"
                },
                "region": {
                  "startLine": 270,
                  "startColumn": 3,
                  "endLine": 270,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t\"MinimumPriority\": \"\",\n\t\t\"AuthMechanism\":   \"plain\",\n\t\t\"User\":            \"\",\n\t\t\"Password\":        \"\",\n\t\t\"Token\":           \"\",\n\t\t\"Identity\":        \"\",\n\t\t\"Trace\":           \"\",\n",
                    "rendered": {
                      "text": "\t\t\"MinimumPriority\": \"\",\n\t\t\"AuthMechanism\":   \"plain\",\n\t\t\"User\":            \"\",\n\t\t\"Password\":        \"\",\n\t\t\"Token\":           \"\",\n\t\t\"Identity\":        \"\",\n\t\t\"Trace\":           \"\",\n",
                      "markdown": "`\t\t\"MinimumPriority\": \"\",\n\t\t\"AuthMechanism\":   \"plain\",\n\t\t\"User\":            \"\",\n\t\t\"Password\":        \"\",\n\t\t\"Token\":           \"\",\n\t\t\"Identity\":        \"\",\n\t\t\"Trace\":           \"\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config.go"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 3,
                  "endLine": 255,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t\"StreamName\":       \"falco\",\n\t\t\"MinimumPriority\":  \"\",\n\t\t\"Username\":         \"\",\n\t\t\"Password\":         \"\",\n\t},\n}\n\n",
                    "rendered": {
                      "text": "\t\t\"StreamName\":       \"falco\",\n\t\t\"MinimumPriority\":  \"\",\n\t\t\"Username\":         \"\",\n\t\t\"Password\":         \"\",\n\t},\n}\n\n",
                      "markdown": "`\t\t\"StreamName\":       \"falco\",\n\t\t\"MinimumPriority\":  \"\",\n\t\t\"Username\":         \"\",\n\t\t\"Password\":         \"\",\n\t},\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config.go"
                },
                "region": {
                  "startLine": 243,
                  "startColumn": 3,
                  "endLine": 243,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t},\n\t\"Redis\": {\n\t\t\"Address\":         \"\",\n\t\t\"Password\":        \"\",\n\t\t\"Database\":        0,\n\t\t\"StorageType\":     \"list\",\n\t\t\"Key\":             \"falco\",\n",
                    "rendered": {
                      "text": "\t},\n\t\"Redis\": {\n\t\t\"Address\":         \"\",\n\t\t\"Password\":        \"\",\n\t\t\"Database\":        0,\n\t\t\"StorageType\":     \"list\",\n\t\t\"Key\":             \"falco\",\n",
                      "markdown": "`\t},\n\t\"Redis\": {\n\t\t\"Address\":         \"\",\n\t\t\"Password\":        \"\",\n\t\t\"Database\":        0,\n\t\t\"StorageType\":     \"list\",\n\t\t\"Key\":             \"falco\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config.go"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 3,
                  "endLine": 131,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t\"Bucket\":          \"falco\",\n\t\t\"Precision\":       \"ns\",\n\t\t\"User\":            \"\",\n\t\t\"Password\":        \"\",\n\t\t\"Token\":           \"\",\n\t\t\"MinimumPriority\": \"\",\n\t},\n",
                    "rendered": {
                      "text": "\t\t\"Bucket\":          \"falco\",\n\t\t\"Precision\":       \"ns\",\n\t\t\"User\":            \"\",\n\t\t\"Password\":        \"\",\n\t\t\"Token\":           \"\",\n\t\t\"MinimumPriority\": \"\",\n\t},\n",
                      "markdown": "`\t\t\"Bucket\":          \"falco\",\n\t\t\"Precision\":       \"ns\",\n\t\t\"User\":            \"\",\n\t\t\"Password\":        \"\",\n\t\t\"Token\":           \"\",\n\t\t\"MinimumPriority\": \"\",\n\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config.go"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 3,
                  "endLine": 105,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t\"MinimumPriority\":        \"\",\n\t\t\"Suffix\":                 \"daily\",\n\t\t\"Username\":               \"\",\n\t\t\"Password\":               \"\",\n\t\t\"Pipeline\":               \"\",\n\t\t\"FlattenFields\":          false,\n\t\t\"CreateIndexTemplate\":    false,\n",
                    "rendered": {
                      "text": "\t\t\"MinimumPriority\":        \"\",\n\t\t\"Suffix\":                 \"daily\",\n\t\t\"Username\":               \"\",\n\t\t\"Password\":               \"\",\n\t\t\"Pipeline\":               \"\",\n\t\t\"FlattenFields\":          false,\n\t\t\"CreateIndexTemplate\":    false,\n",
                      "markdown": "`\t\t\"MinimumPriority\":        \"\",\n\t\t\"Suffix\":                 \"daily\",\n\t\t\"Username\":               \"\",\n\t\t\"Password\":               \"\",\n\t\t\"Pipeline\":               \"\",\n\t\t\"FlattenFields\":          false,\n\t\t\"CreateIndexTemplate\":    false,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config.go"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 27,
                  "endLine": 35,
                  "endColumn": 31,
                  "snippet": {
                    "text": "var commonHttpOutputDefaults = map[string]any{\n\t\"MutualTLS\": false,\n\t\"CheckCert\": true,\n\t// Max concurrent requests at a time per http-based output\n\t\"MaxConcurrentRequests\": defaultMaxConcurrentHttpRequests,\n}\n\n",
                    "rendered": {
                      "text": "var commonHttpOutputDefaults = map[string]any{\n\t\"MutualTLS\": false,\n\t\"CheckCert\": true,\n\t// Max concurrent requests at a time per http-based output\n\t\"MaxConcurrentRequests\": defaultMaxConcurrentHttpRequests,\n}\n\n",
                      "markdown": "`var commonHttpOutputDefaults = map[string]any{\n\t\"MutualTLS\": false,\n\t\"CheckCert\": true,\n\t// Max concurrent requests at a time per http-based output\n\t\"MaxConcurrentRequests\": defaultMaxConcurrentHttpRequests,\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config.go"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 56,
                  "endLine": 28,
                  "endColumn": 60,
                  "snippet": {
                    "text": "// Max concurrent requests at a time per output, unlimited if set to 0\n// Setting it to 1 by default, because the previously\n// many outputs were synchronized on headers locks, in all or some cases\n// and that was limiting the the number of requests to 1 at a time.\nconst defaultMaxConcurrentHttpRequests = 1\n\n// Common http outputs defaults\n",
                    "rendered": {
                      "text": "// Max concurrent requests at a time per output, unlimited if set to 0\n// Setting it to 1 by default, because the previously\n// many outputs were synchronized on headers locks, in all or some cases\n// and that was limiting the the number of requests to 1 at a time.\nconst defaultMaxConcurrentHttpRequests = 1\n\n// Common http outputs defaults\n",
                      "markdown": "`// Max concurrent requests at a time per output, unlimited if set to 0\n// Setting it to 1 by default, because the previously\n// many outputs were synchronized on headers locks, in all or some cases\n// and that was limiting the the number of requests to 1 at a time.\nconst defaultMaxConcurrentHttpRequests = 1\n\n// Common http outputs defaults\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config.go"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 26,
                  "endLine": 25,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\"github.com/falcosecurity/falcosidekick/types\"\n)\n\n// Max concurrent requests at a time per output, unlimited if set to 0\n// Setting it to 1 by default, because the previously\n// many outputs were synchronized on headers locks, in all or some cases\n// and that was limiting the the number of requests to 1 at a time.\n",
                    "rendered": {
                      "text": "\t\"github.com/falcosecurity/falcosidekick/types\"\n)\n\n// Max concurrent requests at a time per output, unlimited if set to 0\n// Setting it to 1 by default, because the previously\n// many outputs were synchronized on headers locks, in all or some cases\n// and that was limiting the the number of requests to 1 at a time.\n",
                      "markdown": "`\t\"github.com/falcosecurity/falcosidekick/types\"\n)\n\n// Max concurrent requests at a time per output, unlimited if set to 0\n// Setting it to 1 by default, because the previously\n// many outputs were synchronized on headers locks, in all or some cases\n// and that was limiting the the number of requests to 1 at a time.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config.go"
                },
                "region": {
                  "startLine": 768,
                  "startColumn": 64,
                  "endLine": 768,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\t\tlog.Fatalf(\"[ERROR] : Bad noTLS server port number\\n\")\n\t}\n\n\tif ip := net.ParseIP(c.ListenAddress); c.ListenAddress != \"\" && ip == nil {\n\t\tlog.Fatalf(\"[ERROR] : Failed to parse ListenAddress\")\n\t}\n\n",
                    "rendered": {
                      "text": "\t\tlog.Fatalf(\"[ERROR] : Bad noTLS server port number\\n\")\n\t}\n\n\tif ip := net.ParseIP(c.ListenAddress); c.ListenAddress != \"\" && ip == nil {\n\t\tlog.Fatalf(\"[ERROR] : Failed to parse ListenAddress\")\n\t}\n\n",
                      "markdown": "`\t\tlog.Fatalf(\"[ERROR] : Bad noTLS server port number\\n\")\n\t}\n\n\tif ip := net.ParseIP(c.ListenAddress); c.ListenAddress != \"\" && ip == nil {\n\t\tlog.Fatalf(\"[ERROR] : Failed to parse ListenAddress\")\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config.go"
                },
                "region": {
                  "startLine": 768,
                  "startColumn": 3,
                  "endLine": 768,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\tlog.Fatalf(\"[ERROR] : Bad noTLS server port number\\n\")\n\t}\n\n\tif ip := net.ParseIP(c.ListenAddress); c.ListenAddress != \"\" && ip == nil {\n\t\tlog.Fatalf(\"[ERROR] : Failed to parse ListenAddress\")\n\t}\n\n",
                    "rendered": {
                      "text": "\t\tlog.Fatalf(\"[ERROR] : Bad noTLS server port number\\n\")\n\t}\n\n\tif ip := net.ParseIP(c.ListenAddress); c.ListenAddress != \"\" && ip == nil {\n\t\tlog.Fatalf(\"[ERROR] : Failed to parse ListenAddress\")\n\t}\n\n",
                      "markdown": "`\t\tlog.Fatalf(\"[ERROR] : Bad noTLS server port number\\n\")\n\t}\n\n\tif ip := net.ParseIP(c.ListenAddress); c.ListenAddress != \"\" && ip == nil {\n\t\tlog.Fatalf(\"[ERROR] : Failed to parse ListenAddress\")\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config.go"
                },
                "region": {
                  "startLine": 744,
                  "startColumn": 44,
                  "endLine": 744,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\t\t\tenvName, envValue, found := strings.Cut(extraEnvVarData, \":\")\n\t\t\tenvName, envValue = strings.TrimSpace(envName), strings.TrimSpace(envValue)\n\t\t\tif !promKVNameRegex.MatchString(envName) {\n\t\t\t\tlog.Printf(\"[ERROR] : OTLPTraces - Extra Env Var name '%v' is not valid\", envName)\n\t\t\t} else if found {\n\t\t\t\tc.OTLP.Traces.ExtraEnvVars[envName] = envValue\n\t\t\t} else {\n",
                    "rendered": {
                      "text": "\t\t\tenvName, envValue, found := strings.Cut(extraEnvVarData, \":\")\n\t\t\tenvName, envValue = strings.TrimSpace(envName), strings.TrimSpace(envValue)\n\t\t\tif !promKVNameRegex.MatchString(envName) {\n\t\t\t\tlog.Printf(\"[ERROR] : OTLPTraces - Extra Env Var name '%v' is not valid\", envName)\n\t\t\t} else if found {\n\t\t\t\tc.OTLP.Traces.ExtraEnvVars[envName] = envValue\n\t\t\t} else {\n",
                      "markdown": "`\t\t\tenvName, envValue, found := strings.Cut(extraEnvVarData, \":\")\n\t\t\tenvName, envValue = strings.TrimSpace(envName), strings.TrimSpace(envValue)\n\t\t\tif !promKVNameRegex.MatchString(envName) {\n\t\t\t\tlog.Printf(\"[ERROR] : OTLPTraces - Extra Env Var name '%v' is not valid\", envName)\n\t\t\t} else if found {\n\t\t\t\tc.OTLP.Traces.ExtraEnvVars[envName] = envValue\n\t\t\t} else {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config.go"
                },
                "region": {
                  "startLine": 623,
                  "startColumn": 33,
                  "endLine": 623,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\t\t\t\t\tif s := os.Getenv(tagkeys[1][1:]); s != \"\" {\n\t\t\t\t\t\tc.Customfields[tagkeys[0]] = s\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlog.Printf(\"[ERROR] : Can't find env var %v for custom fields\", tagkeys[1][1:])\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tc.Customfields[tagkeys[0]] = tagkeys[1]\n",
                    "rendered": {
                      "text": "\t\t\t\t\tif s := os.Getenv(tagkeys[1][1:]); s != \"\" {\n\t\t\t\t\t\tc.Customfields[tagkeys[0]] = s\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlog.Printf(\"[ERROR] : Can't find env var %v for custom fields\", tagkeys[1][1:])\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tc.Customfields[tagkeys[0]] = tagkeys[1]\n",
                      "markdown": "`\t\t\t\t\tif s := os.Getenv(tagkeys[1][1:]); s != \"\" {\n\t\t\t\t\t\tc.Customfields[tagkeys[0]] = s\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlog.Printf(\"[ERROR] : Can't find env var %v for custom fields\", tagkeys[1][1:])\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tc.Customfields[tagkeys[0]] = tagkeys[1]\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config.go"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 32,
                  "endLine": 35,
                  "endColumn": 38,
                  "snippet": {
                    "text": "var commonHttpOutputDefaults = map[string]any{\n\t\"MutualTLS\": false,\n\t\"CheckCert\": true,\n\t// Max concurrent requests at a time per http-based output\n\t\"MaxConcurrentRequests\": defaultMaxConcurrentHttpRequests,\n}\n\n",
                    "rendered": {
                      "text": "var commonHttpOutputDefaults = map[string]any{\n\t\"MutualTLS\": false,\n\t\"CheckCert\": true,\n\t// Max concurrent requests at a time per http-based output\n\t\"MaxConcurrentRequests\": defaultMaxConcurrentHttpRequests,\n}\n\n",
                      "markdown": "`var commonHttpOutputDefaults = map[string]any{\n\t\"MutualTLS\": false,\n\t\"CheckCert\": true,\n\t// Max concurrent requests at a time per http-based output\n\t\"MaxConcurrentRequests\": defaultMaxConcurrentHttpRequests,\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/config.go"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 31,
                  "endLine": 25,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\t\"github.com/falcosecurity/falcosidekick/types\"\n)\n\n// Max concurrent requests at a time per output, unlimited if set to 0\n// Setting it to 1 by default, because the previously\n// many outputs were synchronized on headers locks, in all or some cases\n// and that was limiting the the number of requests to 1 at a time.\n",
                    "rendered": {
                      "text": "\t\"github.com/falcosecurity/falcosidekick/types\"\n)\n\n// Max concurrent requests at a time per output, unlimited if set to 0\n// Setting it to 1 by default, because the previously\n// many outputs were synchronized on headers locks, in all or some cases\n// and that was limiting the the number of requests to 1 at a time.\n",
                      "markdown": "`\t\"github.com/falcosecurity/falcosidekick/types\"\n)\n\n// Max concurrent requests at a time per output, unlimited if set to 0\n// Setting it to 1 by default, because the previously\n// many outputs were synchronized on headers locks, in all or some cases\n// and that was limiting the the number of requests to 1 at a time.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/Makefile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 25,
                  "endLine": 1,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# Ensure Make is run with bash shell as some syntax below is bash-specific\nSHELL=/bin/bash -o pipefail\n\n.DEFAULT_GOAL:=help\n",
                    "rendered": {
                      "text": "# Ensure Make is run with bash shell as some syntax below is bash-specific\nSHELL=/bin/bash -o pipefail\n\n.DEFAULT_GOAL:=help\n",
                      "markdown": "`# Ensure Make is run with bash shell as some syntax below is bash-specific\nSHELL=/bin/bash -o pipefail\n\n.DEFAULT_GOAL:=help\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/Makefile"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 1,
                  "endLine": 49,
                  "snippet": {
                    "text": "GOLANGCI_LINT_BIN := golangci-lint\nGOLANGCI_LINT := $(TOOLS_BIN_DIR)/$(GOLANGCI_LINT_BIN)-$(GOLANGCI_LINT_VER)\n\n# Docker\nIMAGE_TAG := falcosecurity/falcosidekick:latest\n\n## --------------------------------------\n## Build\n",
                    "rendered": {
                      "text": "GOLANGCI_LINT_BIN := golangci-lint\nGOLANGCI_LINT := $(TOOLS_BIN_DIR)/$(GOLANGCI_LINT_BIN)-$(GOLANGCI_LINT_VER)\n\n# Docker\nIMAGE_TAG := falcosecurity/falcosidekick:latest\n\n## --------------------------------------\n## Build\n",
                      "markdown": "`GOLANGCI_LINT_BIN := golangci-lint\nGOLANGCI_LINT := $(TOOLS_BIN_DIR)/$(GOLANGCI_LINT_BIN)-$(GOLANGCI_LINT_VER)\n\n# Docker\nIMAGE_TAG := falcosecurity/falcosidekick:latest\n\n## --------------------------------------\n## Build\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/Makefile"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 14,
                  "endLine": 29,
                  "endColumn": 19,
                  "snippet": {
                    "text": "    BUILD_DATE ?= $(shell date \"$(DATE_FMT)\")\nendif\nGIT_TREESTATE = \"clean\"\nDIFF = $(shell git diff --quiet >/dev/null 2>&1; if [ $$? -eq 1 ]; then echo \"1\"; fi)\nifeq ($(DIFF), 1)\n    GIT_TREESTATE = \"dirty\"\nendif\n",
                    "rendered": {
                      "text": "    BUILD_DATE ?= $(shell date \"$(DATE_FMT)\")\nendif\nGIT_TREESTATE = \"clean\"\nDIFF = $(shell git diff --quiet >/dev/null 2>&1; if [ $$? -eq 1 ]; then echo \"1\"; fi)\nifeq ($(DIFF), 1)\n    GIT_TREESTATE = \"dirty\"\nendif\n",
                      "markdown": "`    BUILD_DATE ?= $(shell date \"$(DATE_FMT)\")\nendif\nGIT_TREESTATE = \"clean\"\nDIFF = $(shell git diff --quiet >/dev/null 2>&1; if [ $$? -eq 1 ]; then echo \"1\"; fi)\nifeq ($(DIFF), 1)\n    GIT_TREESTATE = \"dirty\"\nendif\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/Makefile"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 23,
                  "endLine": 29,
                  "endColumn": 5,
                  "snippet": {
                    "text": "else\n    BUILD_DATE ?= $(shell date \"$(DATE_FMT)\")\nendif\nGIT_TREESTATE = \"clean\"\nDIFF = $(shell git diff --quiet >/dev/null 2>&1; if [ $$? -eq 1 ]; then echo \"1\"; fi)\nifeq ($(DIFF), 1)\n    GIT_TREESTATE = \"dirty\"\nendif\n",
                    "rendered": {
                      "text": "else\n    BUILD_DATE ?= $(shell date \"$(DATE_FMT)\")\nendif\nGIT_TREESTATE = \"clean\"\nDIFF = $(shell git diff --quiet >/dev/null 2>&1; if [ $$? -eq 1 ]; then echo \"1\"; fi)\nifeq ($(DIFF), 1)\n    GIT_TREESTATE = \"dirty\"\nendif\n",
                      "markdown": "`else\n    BUILD_DATE ?= $(shell date \"$(DATE_FMT)\")\nendif\nGIT_TREESTATE = \"clean\"\nDIFF = $(shell git diff --quiet >/dev/null 2>&1; if [ $$? -eq 1 ]; then echo \"1\"; fi)\nifeq ($(DIFF), 1)\n    GIT_TREESTATE = \"dirty\"\nendif\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/Makefile"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 28,
                  "endLine": 22,
                  "endColumn": 33,
                  "snippet": {
                    "text": "GIT_VERSION ?= $(shell git describe --tags --always --dirty)\nGIT_HASH ?= $(shell git rev-parse HEAD)\nDATE_FMT = +'%Y-%m-%dT%H:%M:%SZ'\nSOURCE_DATE_EPOCH ?= $(shell git log -1 --pretty=%ct)\nifdef SOURCE_DATE_EPOCH\n    BUILD_DATE ?= $(shell date -u -d \"@$(SOURCE_DATE_EPOCH)\" \"$(DATE_FMT)\" 2>/dev/null || date -u -r \"$(SOURCE_DATE_EPOCH)\" \"$(DATE_FMT)\" 2>/dev/null || date -u \"$(DATE_FMT)\")\nelse\n",
                    "rendered": {
                      "text": "GIT_VERSION ?= $(shell git describe --tags --always --dirty)\nGIT_HASH ?= $(shell git rev-parse HEAD)\nDATE_FMT = +'%Y-%m-%dT%H:%M:%SZ'\nSOURCE_DATE_EPOCH ?= $(shell git log -1 --pretty=%ct)\nifdef SOURCE_DATE_EPOCH\n    BUILD_DATE ?= $(shell date -u -d \"@$(SOURCE_DATE_EPOCH)\" \"$(DATE_FMT)\" 2>/dev/null || date -u -r \"$(SOURCE_DATE_EPOCH)\" \"$(DATE_FMT)\" 2>/dev/null || date -u \"$(DATE_FMT)\")\nelse\n",
                      "markdown": "`GIT_VERSION ?= $(shell git describe --tags --always --dirty)\nGIT_HASH ?= $(shell git rev-parse HEAD)\nDATE_FMT = +'%Y-%m-%dT%H:%M:%SZ'\nSOURCE_DATE_EPOCH ?= $(shell git log -1 --pretty=%ct)\nifdef SOURCE_DATE_EPOCH\n    BUILD_DATE ?= $(shell date -u -d \"@$(SOURCE_DATE_EPOCH)\" \"$(DATE_FMT)\" 2>/dev/null || date -u -r \"$(SOURCE_DATE_EPOCH)\" \"$(DATE_FMT)\" 2>/dev/null || date -u \"$(DATE_FMT)\")\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/Makefile"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 19,
                  "endLine": 20,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\nGIT_TAG ?= dirty-tag\nGIT_VERSION ?= $(shell git describe --tags --always --dirty)\nGIT_HASH ?= $(shell git rev-parse HEAD)\nDATE_FMT = +'%Y-%m-%dT%H:%M:%SZ'\nSOURCE_DATE_EPOCH ?= $(shell git log -1 --pretty=%ct)\nifdef SOURCE_DATE_EPOCH\n",
                    "rendered": {
                      "text": "\nGIT_TAG ?= dirty-tag\nGIT_VERSION ?= $(shell git describe --tags --always --dirty)\nGIT_HASH ?= $(shell git rev-parse HEAD)\nDATE_FMT = +'%Y-%m-%dT%H:%M:%SZ'\nSOURCE_DATE_EPOCH ?= $(shell git log -1 --pretty=%ct)\nifdef SOURCE_DATE_EPOCH\n",
                      "markdown": "`\nGIT_TAG ?= dirty-tag\nGIT_VERSION ?= $(shell git describe --tags --always --dirty)\nGIT_HASH ?= $(shell git rev-parse HEAD)\nDATE_FMT = +'%Y-%m-%dT%H:%M:%SZ'\nSOURCE_DATE_EPOCH ?= $(shell git log -1 --pretty=%ct)\nifdef SOURCE_DATE_EPOCH\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/Makefile"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 22,
                  "endLine": 19,
                  "endColumn": 27,
                  "snippet": {
                    "text": "TEST_FLAGS ?= -v -race\n\nGIT_TAG ?= dirty-tag\nGIT_VERSION ?= $(shell git describe --tags --always --dirty)\nGIT_HASH ?= $(shell git rev-parse HEAD)\nDATE_FMT = +'%Y-%m-%dT%H:%M:%SZ'\nSOURCE_DATE_EPOCH ?= $(shell git log -1 --pretty=%ct)\n",
                    "rendered": {
                      "text": "TEST_FLAGS ?= -v -race\n\nGIT_TAG ?= dirty-tag\nGIT_VERSION ?= $(shell git describe --tags --always --dirty)\nGIT_HASH ?= $(shell git rev-parse HEAD)\nDATE_FMT = +'%Y-%m-%dT%H:%M:%SZ'\nSOURCE_DATE_EPOCH ?= $(shell git log -1 --pretty=%ct)\n",
                      "markdown": "`TEST_FLAGS ?= -v -race\n\nGIT_TAG ?= dirty-tag\nGIT_VERSION ?= $(shell git describe --tags --always --dirty)\nGIT_HASH ?= $(shell git rev-parse HEAD)\nDATE_FMT = +'%Y-%m-%dT%H:%M:%SZ'\nSOURCE_DATE_EPOCH ?= $(shell git log -1 --pretty=%ct)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/Makefile"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 9,
                  "endLine": 16,
                  "snippet": {
                    "text": "endif\nexport GOPROXY\nGO ?= go\nDOCKER ?= docker\nTEST_FLAGS ?= -v -race\n\nGIT_TAG ?= dirty-tag\nGIT_VERSION ?= $(shell git describe --tags --always --dirty)\n",
                    "rendered": {
                      "text": "endif\nexport GOPROXY\nGO ?= go\nDOCKER ?= docker\nTEST_FLAGS ?= -v -race\n\nGIT_TAG ?= dirty-tag\nGIT_VERSION ?= $(shell git describe --tags --always --dirty)\n",
                      "markdown": "`endif\nexport GOPROXY\nGO ?= go\nDOCKER ?= docker\nTEST_FLAGS ?= -v -race\n\nGIT_TAG ?= dirty-tag\nGIT_VERSION ?= $(shell git describe --tags --always --dirty)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/Makefile"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 8,
                  "endLine": 15,
                  "endColumn": 7,
                  "snippet": {
                    "text": "GOPROXY := https://proxy.golang.org\nendif\nexport GOPROXY\nGO ?= go\nDOCKER ?= docker\nTEST_FLAGS ?= -v -race\n\nGIT_TAG ?= dirty-tag\n",
                    "rendered": {
                      "text": "GOPROXY := https://proxy.golang.org\nendif\nexport GOPROXY\nGO ?= go\nDOCKER ?= docker\nTEST_FLAGS ?= -v -race\n\nGIT_TAG ?= dirty-tag\n",
                      "markdown": "`GOPROXY := https://proxy.golang.org\nendif\nexport GOPROXY\nGO ?= go\nDOCKER ?= docker\nTEST_FLAGS ?= -v -race\n\nGIT_TAG ?= dirty-tag\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/Makefile"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 21,
                  "endLine": 9,
                  "endColumn": 26,
                  "snippet": {
                    "text": "GOPATH  := $(shell go env GOPATH)\nGOARCH  := $(shell go env GOARCH)\nGOOS    := $(shell go env GOOS)\nGOPROXY := $(shell go env GOPROXY)\nifeq ($(GOPROXY),)\nGOPROXY := https://proxy.golang.org\nendif\n",
                    "rendered": {
                      "text": "GOPATH  := $(shell go env GOPATH)\nGOARCH  := $(shell go env GOARCH)\nGOOS    := $(shell go env GOOS)\nGOPROXY := $(shell go env GOPROXY)\nifeq ($(GOPROXY),)\nGOPROXY := https://proxy.golang.org\nendif\n",
                      "markdown": "`GOPATH  := $(shell go env GOPATH)\nGOARCH  := $(shell go env GOARCH)\nGOOS    := $(shell go env GOOS)\nGOPROXY := $(shell go env GOPROXY)\nifeq ($(GOPROXY),)\nGOPROXY := https://proxy.golang.org\nendif\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/Makefile"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 21,
                  "endLine": 8,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\nGOPATH  := $(shell go env GOPATH)\nGOARCH  := $(shell go env GOARCH)\nGOOS    := $(shell go env GOOS)\nGOPROXY := $(shell go env GOPROXY)\nifeq ($(GOPROXY),)\nGOPROXY := https://proxy.golang.org\n",
                    "rendered": {
                      "text": "\nGOPATH  := $(shell go env GOPATH)\nGOARCH  := $(shell go env GOARCH)\nGOOS    := $(shell go env GOOS)\nGOPROXY := $(shell go env GOPROXY)\nifeq ($(GOPROXY),)\nGOPROXY := https://proxy.golang.org\n",
                      "markdown": "`\nGOPATH  := $(shell go env GOPATH)\nGOARCH  := $(shell go env GOARCH)\nGOOS    := $(shell go env GOOS)\nGOPROXY := $(shell go env GOPROXY)\nifeq ($(GOPROXY),)\nGOPROXY := https://proxy.golang.org\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/Makefile"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 21,
                  "endLine": 7,
                  "endColumn": 26,
                  "snippet": {
                    "text": ".DEFAULT_GOAL:=help\n\nGOPATH  := $(shell go env GOPATH)\nGOARCH  := $(shell go env GOARCH)\nGOOS    := $(shell go env GOOS)\nGOPROXY := $(shell go env GOPROXY)\nifeq ($(GOPROXY),)\n",
                    "rendered": {
                      "text": ".DEFAULT_GOAL:=help\n\nGOPATH  := $(shell go env GOPATH)\nGOARCH  := $(shell go env GOARCH)\nGOOS    := $(shell go env GOOS)\nGOPROXY := $(shell go env GOPROXY)\nifeq ($(GOPROXY),)\n",
                      "markdown": "`.DEFAULT_GOAL:=help\n\nGOPATH  := $(shell go env GOPATH)\nGOARCH  := $(shell go env GOARCH)\nGOOS    := $(shell go env GOOS)\nGOPROXY := $(shell go env GOPROXY)\nifeq ($(GOPROXY),)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/Makefile"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 21,
                  "endLine": 6,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n.DEFAULT_GOAL:=help\n\nGOPATH  := $(shell go env GOPATH)\nGOARCH  := $(shell go env GOARCH)\nGOOS    := $(shell go env GOOS)\nGOPROXY := $(shell go env GOPROXY)\n",
                    "rendered": {
                      "text": "\n.DEFAULT_GOAL:=help\n\nGOPATH  := $(shell go env GOPATH)\nGOARCH  := $(shell go env GOARCH)\nGOOS    := $(shell go env GOOS)\nGOPROXY := $(shell go env GOPROXY)\n",
                      "markdown": "`\n.DEFAULT_GOAL:=help\n\nGOPATH  := $(shell go env GOPATH)\nGOARCH  := $(shell go env GOARCH)\nGOOS    := $(shell go env GOOS)\nGOPROXY := $(shell go env GOPROXY)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/Makefile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 25,
                  "endLine": 1,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# Ensure Make is run with bash shell as some syntax below is bash-specific\nSHELL=/bin/bash -o pipefail\n\n.DEFAULT_GOAL:=help\n",
                    "rendered": {
                      "text": "# Ensure Make is run with bash shell as some syntax below is bash-specific\nSHELL=/bin/bash -o pipefail\n\n.DEFAULT_GOAL:=help\n",
                      "markdown": "`# Ensure Make is run with bash shell as some syntax below is bash-specific\nSHELL=/bin/bash -o pipefail\n\n.DEFAULT_GOAL:=help\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/rocketchat_test.go"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 14,
                  "endLine": 58,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\t\t\t\t\tShort: false,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tTitle: \"hostname\",\n\t\t\t\t\t\tValue: \"test-host\",\n\t\t\t\t\t\tShort: true,\n\t\t\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\t\t\t\tShort: false,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tTitle: \"hostname\",\n\t\t\t\t\t\tValue: \"test-host\",\n\t\t\t\t\t\tShort: true,\n\t\t\t\t\t},\n",
                      "markdown": "`\t\t\t\t\t\tShort: false,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tTitle: \"hostname\",\n\t\t\t\t\t\tValue: \"test-host\",\n\t\t\t\t\t\tShort: true,\n\t\t\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/googlechat_test.go"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 20,
                  "endLine": 43,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkeyValue{\n\t\t\t\t\t\t\t\t\tTopLabel: \"hostname\",\n\t\t\t\t\t\t\t\t\tContent:  \"test-host\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkeyValue{\n\t\t\t\t\t\t\t\t\tTopLabel: \"hostname\",\n\t\t\t\t\t\t\t\t\tContent:  \"test-host\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n",
                      "markdown": "`\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkeyValue{\n\t\t\t\t\t\t\t\t\tTopLabel: \"hostname\",\n\t\t\t\t\t\t\t\t\tContent:  \"test-host\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/otlp.go"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 47,
                  "endLine": 119,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\t\tcontainerId = falcopayload.OutputFields[\"container.id\"].(string)\n\t}\n\tif falcopayload.OutputFields[\"evt.hostname\"] != nil {\n\t\tevtHostname = falcopayload.OutputFields[\"evt.hostname\"].(string)\n\t}\n\n\tvar traceIDStr string\n",
                    "rendered": {
                      "text": "\t\tcontainerId = falcopayload.OutputFields[\"container.id\"].(string)\n\t}\n\tif falcopayload.OutputFields[\"evt.hostname\"] != nil {\n\t\tevtHostname = falcopayload.OutputFields[\"evt.hostname\"].(string)\n\t}\n\n\tvar traceIDStr string\n",
                      "markdown": "`\t\tcontainerId = falcopayload.OutputFields[\"container.id\"].(string)\n\t}\n\tif falcopayload.OutputFields[\"evt.hostname\"] != nil {\n\t\tevtHostname = falcopayload.OutputFields[\"evt.hostname\"].(string)\n\t}\n\n\tvar traceIDStr string\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/otlp.go"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 35,
                  "endLine": 118,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\tif falcopayload.OutputFields[\"container.id\"] != nil {\n\t\tcontainerId = falcopayload.OutputFields[\"container.id\"].(string)\n\t}\n\tif falcopayload.OutputFields[\"evt.hostname\"] != nil {\n\t\tevtHostname = falcopayload.OutputFields[\"evt.hostname\"].(string)\n\t}\n\n",
                    "rendered": {
                      "text": "\tif falcopayload.OutputFields[\"container.id\"] != nil {\n\t\tcontainerId = falcopayload.OutputFields[\"container.id\"].(string)\n\t}\n\tif falcopayload.OutputFields[\"evt.hostname\"] != nil {\n\t\tevtHostname = falcopayload.OutputFields[\"evt.hostname\"].(string)\n\t}\n\n",
                      "markdown": "`\tif falcopayload.OutputFields[\"container.id\"] != nil {\n\t\tcontainerId = falcopayload.OutputFields[\"container.id\"].(string)\n\t}\n\tif falcopayload.OutputFields[\"evt.hostname\"] != nil {\n\t\tevtHostname = falcopayload.OutputFields[\"evt.hostname\"].(string)\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/otlp.go"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 38,
                  "endLine": 71,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\tspan.SetAttributes(attribute.String(\"priority\", falcopayload.Priority.String()))\n\tspan.SetAttributes(attribute.String(\"rule\", falcopayload.Rule))\n\tspan.SetAttributes(attribute.String(\"output\", falcopayload.Output))\n\tspan.SetAttributes(attribute.String(\"hostname\", falcopayload.Hostname))\n\tspan.SetAttributes(attribute.StringSlice(\"tags\", falcopayload.Tags))\n\tfor k, v := range falcopayload.OutputFields {\n\t\tspan.SetAttributes(attribute.String(k, fmt.Sprintf(\"%v\", v)))\n",
                    "rendered": {
                      "text": "\tspan.SetAttributes(attribute.String(\"priority\", falcopayload.Priority.String()))\n\tspan.SetAttributes(attribute.String(\"rule\", falcopayload.Rule))\n\tspan.SetAttributes(attribute.String(\"output\", falcopayload.Output))\n\tspan.SetAttributes(attribute.String(\"hostname\", falcopayload.Hostname))\n\tspan.SetAttributes(attribute.StringSlice(\"tags\", falcopayload.Tags))\n\tfor k, v := range falcopayload.OutputFields {\n\t\tspan.SetAttributes(attribute.String(k, fmt.Sprintf(\"%v\", v)))\n",
                      "markdown": "`\tspan.SetAttributes(attribute.String(\"priority\", falcopayload.Priority.String()))\n\tspan.SetAttributes(attribute.String(\"rule\", falcopayload.Rule))\n\tspan.SetAttributes(attribute.String(\"output\", falcopayload.Output))\n\tspan.SetAttributes(attribute.String(\"hostname\", falcopayload.Hostname))\n\tspan.SetAttributes(attribute.StringSlice(\"tags\", falcopayload.Tags))\n\tfor k, v := range falcopayload.OutputFields {\n\t\tspan.SetAttributes(attribute.String(k, fmt.Sprintf(\"%v\", v)))\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/otlp.go"
                },
                "region": {
                  "startLine": 56,
                  "endLine": 56,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tstartTime := falcopayload.Time\n\tendTime := falcopayload.Time.Add(time.Millisecond * time.Duration(c.Config.OTLP.Traces.Duration))\n\n\tsc := trace.SpanContext{}.WithTraceID(traceID)\n\tctx := trace.ContextWithSpanContext(context.Background(), sc)\n\n\ttracer := getTracerProvider().Tracer(\"falco-event\")\n",
                    "rendered": {
                      "text": "\tstartTime := falcopayload.Time\n\tendTime := falcopayload.Time.Add(time.Millisecond * time.Duration(c.Config.OTLP.Traces.Duration))\n\n\tsc := trace.SpanContext{}.WithTraceID(traceID)\n\tctx := trace.ContextWithSpanContext(context.Background(), sc)\n\n\ttracer := getTracerProvider().Tracer(\"falco-event\")\n",
                      "markdown": "`\tstartTime := falcopayload.Time\n\tendTime := falcopayload.Time.Add(time.Millisecond * time.Duration(c.Config.OTLP.Traces.Duration))\n\n\tsc := trace.SpanContext{}.WithTraceID(traceID)\n\tctx := trace.ContextWithSpanContext(context.Background(), sc)\n\n\ttracer := getTracerProvider().Tracer(\"falco-event\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/otlp.go"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 43,
                  "endLine": 132,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\t}\n\n\tif traceIDStr == \"\" {\n\t\treturn trace.TraceID{}, errors.New(\"can't find any field to generate an immutable trace id\")\n\t}\n\n\t// Hash to return a 32 character traceID\n",
                    "rendered": {
                      "text": "\t}\n\n\tif traceIDStr == \"\" {\n\t\treturn trace.TraceID{}, errors.New(\"can't find any field to generate an immutable trace id\")\n\t}\n\n\t// Hash to return a 32 character traceID\n",
                      "markdown": "`\t}\n\n\tif traceIDStr == \"\" {\n\t\treturn trace.TraceID{}, errors.New(\"can't find any field to generate an immutable trace id\")\n\t}\n\n\t// Hash to return a 32 character traceID\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/elasticsearch_mapping.go"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 5,
                  "endLine": 18,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\t\t  \"@timestamp\": {\n\t\t\t\"type\": \"date\"\n\t\t  },\n\t\t  \"hostname\": {\n\t\t\t\"type\": \"text\",\n\t\t\t\"fields\": {\n\t\t\t  \"keyword\": {\n",
                    "rendered": {
                      "text": "\t\t  \"@timestamp\": {\n\t\t\t\"type\": \"date\"\n\t\t  },\n\t\t  \"hostname\": {\n\t\t\t\"type\": \"text\",\n\t\t\t\"fields\": {\n\t\t\t  \"keyword\": {\n",
                      "markdown": "`\t\t  \"@timestamp\": {\n\t\t\t\"type\": \"date\"\n\t\t  },\n\t\t  \"hostname\": {\n\t\t\t\"type\": \"text\",\n\t\t\t\"fields\": {\n\t\t\t  \"keyword\": {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/aws.go"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 10,
                  "endLine": 147,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\t}\n\n\tif c.Config.Debug {\n\t\tr, _ := base64.StdEncoding.DecodeString(*resp.LogResult)\n\t\tlog.Printf(\"[DEBUG] : %v Lambda result : %v\\n\", c.OutputType, string(r))\n\t}\n\n",
                    "rendered": {
                      "text": "\t}\n\n\tif c.Config.Debug {\n\t\tr, _ := base64.StdEncoding.DecodeString(*resp.LogResult)\n\t\tlog.Printf(\"[DEBUG] : %v Lambda result : %v\\n\", c.OutputType, string(r))\n\t}\n\n",
                      "markdown": "`\t}\n\n\tif c.Config.Debug {\n\t\tr, _ := base64.StdEncoding.DecodeString(*resp.LogResult)\n\t\tlog.Printf(\"[DEBUG] : %v Lambda result : %v\\n\", c.OutputType, string(r))\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/aws.go"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 11,
                  "endLine": 7,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\nimport (\n\t\"bytes\"\n\t\"encoding/base64\"\n\t\"encoding/json\"\n\t\"errors\"\n\t\"fmt\"\n",
                    "rendered": {
                      "text": "\nimport (\n\t\"bytes\"\n\t\"encoding/base64\"\n\t\"encoding/json\"\n\t\"errors\"\n\t\"fmt\"\n",
                      "markdown": "`\nimport (\n\t\"bytes\"\n\t\"encoding/base64\"\n\t\"encoding/json\"\n\t\"errors\"\n\t\"fmt\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/aws.go"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 44,
                  "endLine": 62,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\t\terr3 := os.Setenv(\"AWS_DEFAULT_REGION\", region)\n\t\tif err1 != nil || err2 != nil || err3 != nil {\n\t\t\tlog.Println(\"[ERROR] : AWS - Error setting AWS env vars\")\n\t\t\treturn nil, errors.New(\"error setting AWS env vars\")\n\t\t}\n\t}\n\n",
                    "rendered": {
                      "text": "\t\terr3 := os.Setenv(\"AWS_DEFAULT_REGION\", region)\n\t\tif err1 != nil || err2 != nil || err3 != nil {\n\t\t\tlog.Println(\"[ERROR] : AWS - Error setting AWS env vars\")\n\t\t\treturn nil, errors.New(\"error setting AWS env vars\")\n\t\t}\n\t}\n\n",
                      "markdown": "`\t\terr3 := os.Setenv(\"AWS_DEFAULT_REGION\", region)\n\t\tif err1 != nil || err2 != nil || err3 != nil {\n\t\t\tlog.Println(\"[ERROR] : AWS - Error setting AWS env vars\")\n\t\t\treturn nil, errors.New(\"error setting AWS env vars\")\n\t\t}\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/aws.go"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 49,
                  "endLine": 61,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\terr2 := os.Setenv(\"AWS_SECRET_ACCESS_KEY\", config.AWS.SecretAccessKey)\n\t\terr3 := os.Setenv(\"AWS_DEFAULT_REGION\", region)\n\t\tif err1 != nil || err2 != nil || err3 != nil {\n\t\t\tlog.Println(\"[ERROR] : AWS - Error setting AWS env vars\")\n\t\t\treturn nil, errors.New(\"error setting AWS env vars\")\n\t\t}\n\t}\n",
                    "rendered": {
                      "text": "\t\terr2 := os.Setenv(\"AWS_SECRET_ACCESS_KEY\", config.AWS.SecretAccessKey)\n\t\terr3 := os.Setenv(\"AWS_DEFAULT_REGION\", region)\n\t\tif err1 != nil || err2 != nil || err3 != nil {\n\t\t\tlog.Println(\"[ERROR] : AWS - Error setting AWS env vars\")\n\t\t\treturn nil, errors.New(\"error setting AWS env vars\")\n\t\t}\n\t}\n",
                      "markdown": "`\t\terr2 := os.Setenv(\"AWS_SECRET_ACCESS_KEY\", config.AWS.SecretAccessKey)\n\t\terr3 := os.Setenv(\"AWS_DEFAULT_REGION\", region)\n\t\tif err1 != nil || err2 != nil || err3 != nil {\n\t\t\tlog.Println(\"[ERROR] : AWS - Error setting AWS env vars\")\n\t\t\treturn nil, errors.New(\"error setting AWS env vars\")\n\t\t}\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/opsgenie.go"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 9,
                  "endLine": 69,
                  "endColumn": 15,
                  "snippet": {
                    "text": "func (c *Client) OpsgeniePost(falcopayload types.FalcoPayload) {\n\tc.Stats.Opsgenie.Add(Total, 1)\n\n\terr := c.Post(newOpsgeniePayload(falcopayload), func(req *http.Request) {\n\t\treq.Header.Set(AuthorizationHeaderKey, \"GenieKey \"+c.Config.Opsgenie.APIKey)\n\t})\n\tif err != nil {\n",
                    "rendered": {
                      "text": "func (c *Client) OpsgeniePost(falcopayload types.FalcoPayload) {\n\tc.Stats.Opsgenie.Add(Total, 1)\n\n\terr := c.Post(newOpsgeniePayload(falcopayload), func(req *http.Request) {\n\t\treq.Header.Set(AuthorizationHeaderKey, \"GenieKey \"+c.Config.Opsgenie.APIKey)\n\t})\n\tif err != nil {\n",
                      "markdown": "`func (c *Client) OpsgeniePost(falcopayload types.FalcoPayload) {\n\tc.Stats.Opsgenie.Add(Total, 1)\n\n\terr := c.Post(newOpsgeniePayload(falcopayload), func(req *http.Request) {\n\t\treq.Header.Set(AuthorizationHeaderKey, \"GenieKey \"+c.Config.Opsgenie.APIKey)\n\t})\n\tif err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/discord_test.go"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 15,
                  "endLine": 41,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\t\t\t\t\tInline: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tName:   \"hostname\",\n\t\t\t\t\t\tValue:  \"test-host\",\n\t\t\t\t\t\tInline: true,\n\t\t\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\t\t\t\tInline: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tName:   \"hostname\",\n\t\t\t\t\t\tValue:  \"test-host\",\n\t\t\t\t\t\tInline: true,\n\t\t\t\t\t},\n",
                      "markdown": "`\t\t\t\t\t\tInline: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tName:   \"hostname\",\n\t\t\t\t\t\tValue:  \"test-host\",\n\t\t\t\t\t\tInline: true,\n\t\t\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/loki_test.go"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 6,
                  "endLine": 19,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\t\tStreams: []lokiStream{\n\t\t\t{\n\t\t\t\tStream: map[string]string{\n\t\t\t\t\t\"hostname\": \"test-host\",\n\t\t\t\t\t\"tags\":     \"example,test\",\n\t\t\t\t\t\"rule\":     \"Test rule\",\n\t\t\t\t\t\"source\":   \"syscalls\",\n",
                    "rendered": {
                      "text": "\t\tStreams: []lokiStream{\n\t\t\t{\n\t\t\t\tStream: map[string]string{\n\t\t\t\t\t\"hostname\": \"test-host\",\n\t\t\t\t\t\"tags\":     \"example,test\",\n\t\t\t\t\t\"rule\":     \"Test rule\",\n\t\t\t\t\t\"source\":   \"syscalls\",\n",
                      "markdown": "`\t\tStreams: []lokiStream{\n\t\t\t{\n\t\t\t\tStream: map[string]string{\n\t\t\t\t\t\"hostname\": \"test-host\",\n\t\t\t\t\t\"tags\":     \"example,test\",\n\t\t\t\t\t\"rule\":     \"Test rule\",\n\t\t\t\t\t\"source\":   \"syscalls\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/datadog_test.go"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 186,
                  "endLine": 15,
                  "endColumn": 194,
                  "snippet": {
                    "text": ")\n\nfunc TestNewDatadogPayload(t *testing.T) {\n\texpectedOutput := `{\"title\":\"Test rule\",\"text\":\"This is a test from falcosidekick\",\"alert_type\":\"info\",\"source_type_name\":\"falco\",\"tags\":[\"proc.name:falcosidekick\", \"source:syscalls\", \"hostname:test-host\", \"example\", \"test\"]}`\n\tvar f types.FalcoPayload\n\tjson.Unmarshal([]byte(falcoTestInput), &f)\n\ts, _ := json.Marshal(newDatadogPayload(f))\n",
                    "rendered": {
                      "text": ")\n\nfunc TestNewDatadogPayload(t *testing.T) {\n\texpectedOutput := `{\"title\":\"Test rule\",\"text\":\"This is a test from falcosidekick\",\"alert_type\":\"info\",\"source_type_name\":\"falco\",\"tags\":[\"proc.name:falcosidekick\", \"source:syscalls\", \"hostname:test-host\", \"example\", \"test\"]}`\n\tvar f types.FalcoPayload\n\tjson.Unmarshal([]byte(falcoTestInput), &f)\n\ts, _ := json.Marshal(newDatadogPayload(f))\n",
                      "markdown": "`)\n\nfunc TestNewDatadogPayload(t *testing.T) {\n\texpectedOutput := `{\"title\":\"Test rule\",\"text\":\"This is a test from falcosidekick\",\"alert_type\":\"info\",\"source_type_name\":\"falco\",\"tags\":[\"proc.name:falcosidekick\", \"source:syscalls\", \"hostname:test-host\", \"example\", \"test\"]}`\n\tvar f types.FalcoPayload\n\tjson.Unmarshal([]byte(falcoTestInput), &f)\n\ts, _ := json.Marshal(newDatadogPayload(f))\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/mattermost_test.go"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 14,
                  "endLine": 33,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\t\t\t\t\tShort: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tTitle: \"hostname\",\n\t\t\t\t\t\tValue: \"test-host\",\n\t\t\t\t\t\tShort: true,\n\t\t\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\t\t\t\tShort: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tTitle: \"hostname\",\n\t\t\t\t\t\tValue: \"test-host\",\n\t\t\t\t\t\tShort: true,\n\t\t\t\t\t},\n",
                      "markdown": "`\t\t\t\t\t\tShort: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tTitle: \"hostname\",\n\t\t\t\t\t\tValue: \"test-host\",\n\t\t\t\t\t\tShort: true,\n\t\t\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/policyreport.go"
                },
                "region": {
                  "startLine": 278,
                  "startColumn": 76,
                  "endLine": 278,
                  "endColumn": 81,
                  "snippet": {
                    "text": "\t\tif err != nil {\n\t\t\tif errorsv1.IsAlreadyExists(err) {\n\t\t\t\taction = update\n\t\t\t\tcpolicyr, err = c.Crdclient.Wgpolicyk8sV1alpha2().ClusterPolicyReports().Get(context.Background(), policyReportName, metav1.GetOptions{})\n\t\t\t\tif err != nil {\n\t\t\t\t\tlog.Printf(\"[ERROR] : PolicyReport - Error with with the Cluster Policy Report %v: %v\\n\", policyReportName, err)\n\t\t\t\t\treturn err\n",
                    "rendered": {
                      "text": "\t\tif err != nil {\n\t\t\tif errorsv1.IsAlreadyExists(err) {\n\t\t\t\taction = update\n\t\t\t\tcpolicyr, err = c.Crdclient.Wgpolicyk8sV1alpha2().ClusterPolicyReports().Get(context.Background(), policyReportName, metav1.GetOptions{})\n\t\t\t\tif err != nil {\n\t\t\t\t\tlog.Printf(\"[ERROR] : PolicyReport - Error with with the Cluster Policy Report %v: %v\\n\", policyReportName, err)\n\t\t\t\t\treturn err\n",
                      "markdown": "`\t\tif err != nil {\n\t\t\tif errorsv1.IsAlreadyExists(err) {\n\t\t\t\taction = update\n\t\t\t\tcpolicyr, err = c.Crdclient.Wgpolicyk8sV1alpha2().ClusterPolicyReports().Get(context.Background(), policyReportName, metav1.GetOptions{})\n\t\t\t\tif err != nil {\n\t\t\t\t\tlog.Printf(\"[ERROR] : PolicyReport - Error with with the Cluster Policy Report %v: %v\\n\", policyReportName, err)\n\t\t\t\t\treturn err\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/policyreport.go"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 74,
                  "endLine": 254,
                  "endColumn": 79,
                  "snippet": {
                    "text": "func (c *Client) createOrUpdateClusterPolicyReport(result *wgpolicy.PolicyReportResult) error {\n\taction := update\n\n\tcpolicyr, err := c.Crdclient.Wgpolicyk8sV1alpha2().ClusterPolicyReports().Get(context.Background(), clusterPolicyReportName, metav1.GetOptions{})\n\tif err != nil {\n\t\tif !errorsv1.IsNotFound(err) {\n\t\t\treturn err\n",
                    "rendered": {
                      "text": "func (c *Client) createOrUpdateClusterPolicyReport(result *wgpolicy.PolicyReportResult) error {\n\taction := update\n\n\tcpolicyr, err := c.Crdclient.Wgpolicyk8sV1alpha2().ClusterPolicyReports().Get(context.Background(), clusterPolicyReportName, metav1.GetOptions{})\n\tif err != nil {\n\t\tif !errorsv1.IsNotFound(err) {\n\t\t\treturn err\n",
                      "markdown": "`func (c *Client) createOrUpdateClusterPolicyReport(result *wgpolicy.PolicyReportResult) error {\n\taction := update\n\n\tcpolicyr, err := c.Crdclient.Wgpolicyk8sV1alpha2().ClusterPolicyReports().Get(context.Background(), clusterPolicyReportName, metav1.GetOptions{})\n\tif err != nil {\n\t\tif !errorsv1.IsNotFound(err) {\n\t\t\treturn err\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/policyreport.go"
                },
                "region": {
                  "startLine": 223,
                  "startColumn": 77,
                  "endLine": 223,
                  "endColumn": 82,
                  "snippet": {
                    "text": "\t\tif err != nil {\n\t\t\tif errorsv1.IsAlreadyExists(err) {\n\t\t\t\taction = update\n\t\t\t\tpolicyr, err = c.Crdclient.Wgpolicyk8sV1alpha2().PolicyReports(namespace).Get(context.Background(), policyReportName, metav1.GetOptions{})\n\t\t\t\tif err != nil {\n\t\t\t\t\tlog.Printf(\"[ERROR] : PolicyReport - Error with with the Policy Report %v in namespace %v: %v\\n\", policyReportName, namespace, err)\n\t\t\t\t\treturn err\n",
                    "rendered": {
                      "text": "\t\tif err != nil {\n\t\t\tif errorsv1.IsAlreadyExists(err) {\n\t\t\t\taction = update\n\t\t\t\tpolicyr, err = c.Crdclient.Wgpolicyk8sV1alpha2().PolicyReports(namespace).Get(context.Background(), policyReportName, metav1.GetOptions{})\n\t\t\t\tif err != nil {\n\t\t\t\t\tlog.Printf(\"[ERROR] : PolicyReport - Error with with the Policy Report %v in namespace %v: %v\\n\", policyReportName, namespace, err)\n\t\t\t\t\treturn err\n",
                      "markdown": "`\t\tif err != nil {\n\t\t\tif errorsv1.IsAlreadyExists(err) {\n\t\t\t\taction = update\n\t\t\t\tpolicyr, err = c.Crdclient.Wgpolicyk8sV1alpha2().PolicyReports(namespace).Get(context.Background(), policyReportName, metav1.GetOptions{})\n\t\t\t\tif err != nil {\n\t\t\t\t\tlog.Printf(\"[ERROR] : PolicyReport - Error with with the Policy Report %v in namespace %v: %v\\n\", policyReportName, namespace, err)\n\t\t\t\t\treturn err\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/policyreport.go"
                },
                "region": {
                  "startLine": 199,
                  "startColumn": 75,
                  "endLine": 199,
                  "endColumn": 80,
                  "snippet": {
                    "text": "\t\t}\n\t}\n\n\tpolicyr, err := c.Crdclient.Wgpolicyk8sV1alpha2().PolicyReports(namespace).Get(context.Background(), policyReportName, metav1.GetOptions{})\n\tif err != nil {\n\t\tif !errorsv1.IsNotFound(err) {\n\t\t\treturn err\n",
                    "rendered": {
                      "text": "\t\t}\n\t}\n\n\tpolicyr, err := c.Crdclient.Wgpolicyk8sV1alpha2().PolicyReports(namespace).Get(context.Background(), policyReportName, metav1.GetOptions{})\n\tif err != nil {\n\t\tif !errorsv1.IsNotFound(err) {\n\t\t\treturn err\n",
                      "markdown": "`\t\t}\n\t}\n\n\tpolicyr, err := c.Crdclient.Wgpolicyk8sV1alpha2().PolicyReports(namespace).Get(context.Background(), policyReportName, metav1.GetOptions{})\n\tif err != nil {\n\t\tif !errorsv1.IsNotFound(err) {\n\t\t\treturn err\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/policyreport.go"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 51,
                  "endLine": 190,
                  "endColumn": 56,
                  "snippet": {
                    "text": "func (c *Client) createOrUpdatePolicyReport(result *wgpolicy.PolicyReportResult, namespace string) error {\n\taction := update\n\n\t_, err := c.KubernetesClient.CoreV1().Namespaces().Get(context.Background(), namespace, metav1.GetOptions{})\n\tif err != nil {\n\t\tif errorsv1.IsNotFound(err) {\n\t\t\tlog.Printf(\"[INFO]  : PolicyReport - Can't find the namespace '%v', fallback to '%v'\\n\", namespace, defaultNamespace)\n",
                    "rendered": {
                      "text": "func (c *Client) createOrUpdatePolicyReport(result *wgpolicy.PolicyReportResult, namespace string) error {\n\taction := update\n\n\t_, err := c.KubernetesClient.CoreV1().Namespaces().Get(context.Background(), namespace, metav1.GetOptions{})\n\tif err != nil {\n\t\tif errorsv1.IsNotFound(err) {\n\t\t\tlog.Printf(\"[INFO]  : PolicyReport - Can't find the namespace '%v', fallback to '%v'\\n\", namespace, defaultNamespace)\n",
                      "markdown": "`func (c *Client) createOrUpdatePolicyReport(result *wgpolicy.PolicyReportResult, namespace string) error {\n\taction := update\n\n\t_, err := c.KubernetesClient.CoreV1().Namespaces().Get(context.Background(), namespace, metav1.GetOptions{})\n\tif err != nil {\n\t\tif errorsv1.IsNotFound(err) {\n\t\t\tlog.Printf(\"[INFO]  : PolicyReport - Can't find the namespace '%v', fallback to '%v'\\n\", namespace, defaultNamespace)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/policyreport.go"
                },
                "region": {
                  "startLine": 277,
                  "startColumn": 12,
                  "endLine": 278,
                  "snippet": {
                    "text": "\t\t_, err := c.Crdclient.Wgpolicyk8sV1alpha2().ClusterPolicyReports().Create(context.Background(), cpolicyr, metav1.CreateOptions{})\n\t\tif err != nil {\n\t\t\tif errorsv1.IsAlreadyExists(err) {\n\t\t\t\taction = update\n\t\t\t\tcpolicyr, err = c.Crdclient.Wgpolicyk8sV1alpha2().ClusterPolicyReports().Get(context.Background(), policyReportName, metav1.GetOptions{})\n\t\t\t\tif err != nil {\n\t\t\t\t\tlog.Printf(\"[ERROR] : PolicyReport - Error with with the Cluster Policy Report %v: %v\\n\", policyReportName, err)\n\t\t\t\t\treturn err\n",
                    "rendered": {
                      "text": "\t\t_, err := c.Crdclient.Wgpolicyk8sV1alpha2().ClusterPolicyReports().Create(context.Background(), cpolicyr, metav1.CreateOptions{})\n\t\tif err != nil {\n\t\t\tif errorsv1.IsAlreadyExists(err) {\n\t\t\t\taction = update\n\t\t\t\tcpolicyr, err = c.Crdclient.Wgpolicyk8sV1alpha2().ClusterPolicyReports().Get(context.Background(), policyReportName, metav1.GetOptions{})\n\t\t\t\tif err != nil {\n\t\t\t\t\tlog.Printf(\"[ERROR] : PolicyReport - Error with with the Cluster Policy Report %v: %v\\n\", policyReportName, err)\n\t\t\t\t\treturn err\n",
                      "markdown": "`\t\t_, err := c.Crdclient.Wgpolicyk8sV1alpha2().ClusterPolicyReports().Create(context.Background(), cpolicyr, metav1.CreateOptions{})\n\t\tif err != nil {\n\t\t\tif errorsv1.IsAlreadyExists(err) {\n\t\t\t\taction = update\n\t\t\t\tcpolicyr, err = c.Crdclient.Wgpolicyk8sV1alpha2().ClusterPolicyReports().Get(context.Background(), policyReportName, metav1.GetOptions{})\n\t\t\t\tif err != nil {\n\t\t\t\t\tlog.Printf(\"[ERROR] : PolicyReport - Error with with the Cluster Policy Report %v: %v\\n\", policyReportName, err)\n\t\t\t\t\treturn err\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/policyreport.go"
                },
                "region": {
                  "startLine": 252,
                  "startColumn": 10,
                  "endLine": 253,
                  "snippet": {
                    "text": "}\n\nfunc (c *Client) createOrUpdateClusterPolicyReport(result *wgpolicy.PolicyReportResult) error {\n\taction := update\n\n\tcpolicyr, err := c.Crdclient.Wgpolicyk8sV1alpha2().ClusterPolicyReports().Get(context.Background(), clusterPolicyReportName, metav1.GetOptions{})\n\tif err != nil {\n\t\tif !errorsv1.IsNotFound(err) {\n",
                    "rendered": {
                      "text": "}\n\nfunc (c *Client) createOrUpdateClusterPolicyReport(result *wgpolicy.PolicyReportResult) error {\n\taction := update\n\n\tcpolicyr, err := c.Crdclient.Wgpolicyk8sV1alpha2().ClusterPolicyReports().Get(context.Background(), clusterPolicyReportName, metav1.GetOptions{})\n\tif err != nil {\n\t\tif !errorsv1.IsNotFound(err) {\n",
                      "markdown": "`}\n\nfunc (c *Client) createOrUpdateClusterPolicyReport(result *wgpolicy.PolicyReportResult) error {\n\taction := update\n\n\tcpolicyr, err := c.Crdclient.Wgpolicyk8sV1alpha2().ClusterPolicyReports().Get(context.Background(), clusterPolicyReportName, metav1.GetOptions{})\n\tif err != nil {\n\t\tif !errorsv1.IsNotFound(err) {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/policyreport.go"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 12,
                  "endLine": 223,
                  "snippet": {
                    "text": "\t\t_, err := c.Crdclient.Wgpolicyk8sV1alpha2().PolicyReports(namespace).Create(context.Background(), policyr, metav1.CreateOptions{})\n\t\tif err != nil {\n\t\t\tif errorsv1.IsAlreadyExists(err) {\n\t\t\t\taction = update\n\t\t\t\tpolicyr, err = c.Crdclient.Wgpolicyk8sV1alpha2().PolicyReports(namespace).Get(context.Background(), policyReportName, metav1.GetOptions{})\n\t\t\t\tif err != nil {\n\t\t\t\t\tlog.Printf(\"[ERROR] : PolicyReport - Error with with the Policy Report %v in namespace %v: %v\\n\", policyReportName, namespace, err)\n\t\t\t\t\treturn err\n",
                    "rendered": {
                      "text": "\t\t_, err := c.Crdclient.Wgpolicyk8sV1alpha2().PolicyReports(namespace).Create(context.Background(), policyr, metav1.CreateOptions{})\n\t\tif err != nil {\n\t\t\tif errorsv1.IsAlreadyExists(err) {\n\t\t\t\taction = update\n\t\t\t\tpolicyr, err = c.Crdclient.Wgpolicyk8sV1alpha2().PolicyReports(namespace).Get(context.Background(), policyReportName, metav1.GetOptions{})\n\t\t\t\tif err != nil {\n\t\t\t\t\tlog.Printf(\"[ERROR] : PolicyReport - Error with with the Policy Report %v in namespace %v: %v\\n\", policyReportName, namespace, err)\n\t\t\t\t\treturn err\n",
                      "markdown": "`\t\t_, err := c.Crdclient.Wgpolicyk8sV1alpha2().PolicyReports(namespace).Create(context.Background(), policyr, metav1.CreateOptions{})\n\t\tif err != nil {\n\t\t\tif errorsv1.IsAlreadyExists(err) {\n\t\t\t\taction = update\n\t\t\t\tpolicyr, err = c.Crdclient.Wgpolicyk8sV1alpha2().PolicyReports(namespace).Get(context.Background(), policyReportName, metav1.GetOptions{})\n\t\t\t\tif err != nil {\n\t\t\t\t\tlog.Printf(\"[ERROR] : PolicyReport - Error with with the Policy Report %v in namespace %v: %v\\n\", policyReportName, namespace, err)\n\t\t\t\t\treturn err\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/policyreport.go"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 10,
                  "endLine": 189,
                  "snippet": {
                    "text": "}\n\nfunc (c *Client) createOrUpdatePolicyReport(result *wgpolicy.PolicyReportResult, namespace string) error {\n\taction := update\n\n\t_, err := c.KubernetesClient.CoreV1().Namespaces().Get(context.Background(), namespace, metav1.GetOptions{})\n\tif err != nil {\n\t\tif errorsv1.IsNotFound(err) {\n",
                    "rendered": {
                      "text": "}\n\nfunc (c *Client) createOrUpdatePolicyReport(result *wgpolicy.PolicyReportResult, namespace string) error {\n\taction := update\n\n\t_, err := c.KubernetesClient.CoreV1().Namespaces().Get(context.Background(), namespace, metav1.GetOptions{})\n\tif err != nil {\n\t\tif errorsv1.IsNotFound(err) {\n",
                      "markdown": "`}\n\nfunc (c *Client) createOrUpdatePolicyReport(result *wgpolicy.PolicyReportResult, namespace string) error {\n\taction := update\n\n\t_, err := c.KubernetesClient.CoreV1().Namespaces().Get(context.Background(), namespace, metav1.GetOptions{})\n\tif err != nil {\n\t\tif errorsv1.IsNotFound(err) {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/policyreport.go"
                },
                "region": {
                  "startLine": 33,
                  "endLine": 33,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\tpolicyReportName        string = \"falco-policy-report\"\n\tpolicyReportSource      string = \"Falco\"\n\n\tupdate string = \"Update\"\n\tcreate string = \"Create\"\n\n\thigh     wgpolicy.PolicyResultSeverity = \"high\"\n",
                    "rendered": {
                      "text": "\tpolicyReportName        string = \"falco-policy-report\"\n\tpolicyReportSource      string = \"Falco\"\n\n\tupdate string = \"Update\"\n\tcreate string = \"Create\"\n\n\thigh     wgpolicy.PolicyResultSeverity = \"high\"\n",
                      "markdown": "`\tpolicyReportName        string = \"falco-policy-report\"\n\tpolicyReportSource      string = \"Falco\"\n\n\tupdate string = \"Update\"\n\tcreate string = \"Create\"\n\n\thigh     wgpolicy.PolicyResultSeverity = \"high\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/policyreport.go"
                },
                "region": {
                  "startLine": 193,
                  "startColumn": 45,
                  "endLine": 193,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\t_, err := c.KubernetesClient.CoreV1().Namespaces().Get(context.Background(), namespace, metav1.GetOptions{})\n\tif err != nil {\n\t\tif errorsv1.IsNotFound(err) {\n\t\t\tlog.Printf(\"[INFO]  : PolicyReport - Can't find the namespace '%v', fallback to '%v'\\n\", namespace, defaultNamespace)\n\t\t\tnamespace = defaultNamespace\n\t\t\tresult.Subjects[0].Namespace = defaultNamespace\n\t\t}\n",
                    "rendered": {
                      "text": "\t_, err := c.KubernetesClient.CoreV1().Namespaces().Get(context.Background(), namespace, metav1.GetOptions{})\n\tif err != nil {\n\t\tif errorsv1.IsNotFound(err) {\n\t\t\tlog.Printf(\"[INFO]  : PolicyReport - Can't find the namespace '%v', fallback to '%v'\\n\", namespace, defaultNamespace)\n\t\t\tnamespace = defaultNamespace\n\t\t\tresult.Subjects[0].Namespace = defaultNamespace\n\t\t}\n",
                      "markdown": "`\t_, err := c.KubernetesClient.CoreV1().Namespaces().Get(context.Background(), namespace, metav1.GetOptions{})\n\tif err != nil {\n\t\tif errorsv1.IsNotFound(err) {\n\t\t\tlog.Printf(\"[INFO]  : PolicyReport - Can't find the namespace '%v', fallback to '%v'\\n\", namespace, defaultNamespace)\n\t\t\tnamespace = defaultNamespace\n\t\t\tresult.Subjects[0].Namespace = defaultNamespace\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/nodered.go"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 9,
                  "endLine": 16,
                  "endColumn": 15,
                  "snippet": {
                    "text": "func (c *Client) NodeRedPost(falcopayload types.FalcoPayload) {\n\tc.Stats.NodeRed.Add(Total, 1)\n\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.NodeRed.User != \"\" && c.Config.NodeRed.Password != \"\" {\n\t\t\treq.SetBasicAuth(c.Config.NodeRed.User, c.Config.NodeRed.Password)\n\t\t}\n",
                    "rendered": {
                      "text": "func (c *Client) NodeRedPost(falcopayload types.FalcoPayload) {\n\tc.Stats.NodeRed.Add(Total, 1)\n\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.NodeRed.User != \"\" && c.Config.NodeRed.Password != \"\" {\n\t\t\treq.SetBasicAuth(c.Config.NodeRed.User, c.Config.NodeRed.Password)\n\t\t}\n",
                      "markdown": "`func (c *Client) NodeRedPost(falcopayload types.FalcoPayload) {\n\tc.Stats.NodeRed.Add(Total, 1)\n\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.NodeRed.User != \"\" && c.Config.NodeRed.Password != \"\" {\n\t\t\treq.SetBasicAuth(c.Config.NodeRed.User, c.Config.NodeRed.Password)\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/nodered.go"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 60,
                  "endLine": 18,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.NodeRed.User != \"\" && c.Config.NodeRed.Password != \"\" {\n\t\t\treq.SetBasicAuth(c.Config.NodeRed.User, c.Config.NodeRed.Password)\n\t\t}\n\n\t\tfor i, j := range c.Config.NodeRed.CustomHeaders {\n",
                    "rendered": {
                      "text": "\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.NodeRed.User != \"\" && c.Config.NodeRed.Password != \"\" {\n\t\t\treq.SetBasicAuth(c.Config.NodeRed.User, c.Config.NodeRed.Password)\n\t\t}\n\n\t\tfor i, j := range c.Config.NodeRed.CustomHeaders {\n",
                      "markdown": "`\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.NodeRed.User != \"\" && c.Config.NodeRed.Password != \"\" {\n\t\t\treq.SetBasicAuth(c.Config.NodeRed.User, c.Config.NodeRed.Password)\n\t\t}\n\n\t\tfor i, j := range c.Config.NodeRed.CustomHeaders {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/nodered.go"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 53,
                  "endLine": 17,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\tc.Stats.NodeRed.Add(Total, 1)\n\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.NodeRed.User != \"\" && c.Config.NodeRed.Password != \"\" {\n\t\t\treq.SetBasicAuth(c.Config.NodeRed.User, c.Config.NodeRed.Password)\n\t\t}\n\n",
                    "rendered": {
                      "text": "\tc.Stats.NodeRed.Add(Total, 1)\n\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.NodeRed.User != \"\" && c.Config.NodeRed.Password != \"\" {\n\t\t\treq.SetBasicAuth(c.Config.NodeRed.User, c.Config.NodeRed.Password)\n\t\t}\n\n",
                      "markdown": "`\tc.Stats.NodeRed.Add(Total, 1)\n\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.NodeRed.User != \"\" && c.Config.NodeRed.Password != \"\" {\n\t\t\treq.SetBasicAuth(c.Config.NodeRed.User, c.Config.NodeRed.Password)\n\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/zincsearch.go"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 9,
                  "endLine": 16,
                  "endColumn": 15,
                  "snippet": {
                    "text": "func (c *Client) ZincsearchPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Zincsearch.Add(Total, 1)\n\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.Zincsearch.Username != \"\" && c.Config.Zincsearch.Password != \"\" {\n\t\t\treq.SetBasicAuth(c.Config.Zincsearch.Username, c.Config.Zincsearch.Password)\n\t\t}\n",
                    "rendered": {
                      "text": "func (c *Client) ZincsearchPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Zincsearch.Add(Total, 1)\n\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.Zincsearch.Username != \"\" && c.Config.Zincsearch.Password != \"\" {\n\t\t\treq.SetBasicAuth(c.Config.Zincsearch.Username, c.Config.Zincsearch.Password)\n\t\t}\n",
                      "markdown": "`func (c *Client) ZincsearchPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Zincsearch.Add(Total, 1)\n\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.Zincsearch.Username != \"\" && c.Config.Zincsearch.Password != \"\" {\n\t\t\treq.SetBasicAuth(c.Config.Zincsearch.Username, c.Config.Zincsearch.Password)\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/zincsearch.go"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 70,
                  "endLine": 18,
                  "endColumn": 78,
                  "snippet": {
                    "text": "\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.Zincsearch.Username != \"\" && c.Config.Zincsearch.Password != \"\" {\n\t\t\treq.SetBasicAuth(c.Config.Zincsearch.Username, c.Config.Zincsearch.Password)\n\t\t}\n\t})\n\tif err != nil {\n",
                    "rendered": {
                      "text": "\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.Zincsearch.Username != \"\" && c.Config.Zincsearch.Password != \"\" {\n\t\t\treq.SetBasicAuth(c.Config.Zincsearch.Username, c.Config.Zincsearch.Password)\n\t\t}\n\t})\n\tif err != nil {\n",
                      "markdown": "`\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.Zincsearch.Username != \"\" && c.Config.Zincsearch.Password != \"\" {\n\t\t\treq.SetBasicAuth(c.Config.Zincsearch.Username, c.Config.Zincsearch.Password)\n\t\t}\n\t})\n\tif err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/zincsearch.go"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 63,
                  "endLine": 17,
                  "endColumn": 71,
                  "snippet": {
                    "text": "\tc.Stats.Zincsearch.Add(Total, 1)\n\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.Zincsearch.Username != \"\" && c.Config.Zincsearch.Password != \"\" {\n\t\t\treq.SetBasicAuth(c.Config.Zincsearch.Username, c.Config.Zincsearch.Password)\n\t\t}\n\t})\n",
                    "rendered": {
                      "text": "\tc.Stats.Zincsearch.Add(Total, 1)\n\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.Zincsearch.Username != \"\" && c.Config.Zincsearch.Password != \"\" {\n\t\t\treq.SetBasicAuth(c.Config.Zincsearch.Username, c.Config.Zincsearch.Password)\n\t\t}\n\t})\n",
                      "markdown": "`\tc.Stats.Zincsearch.Add(Total, 1)\n\n\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\tif c.Config.Zincsearch.Username != \"\" && c.Config.Zincsearch.Password != \"\" {\n\t\t\treq.SetBasicAuth(c.Config.Zincsearch.Username, c.Config.Zincsearch.Password)\n\t\t}\n\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/talon.go"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 9,
                  "endLine": 16,
                  "endColumn": 15,
                  "snippet": {
                    "text": "func (c *Client) TalonPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Talon.Add(Total, 1)\n\n\terr := c.Post(falcopayload)\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:talon\", \"status:error\"})\n\t\tc.Stats.Talon.Add(Error, 1)\n",
                    "rendered": {
                      "text": "func (c *Client) TalonPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Talon.Add(Total, 1)\n\n\terr := c.Post(falcopayload)\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:talon\", \"status:error\"})\n\t\tc.Stats.Talon.Add(Error, 1)\n",
                      "markdown": "`func (c *Client) TalonPost(falcopayload types.FalcoPayload) {\n\tc.Stats.Talon.Add(Total, 1)\n\n\terr := c.Post(falcopayload)\n\tif err != nil {\n\t\tgo c.CountMetric(Outputs, 1, []string{\"output:talon\", \"status:error\"})\n\t\tc.Stats.Talon.Add(Error, 1)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/kubeless.go"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 10,
                  "endLine": 90,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\t} else {\n\t\tc.ContentType = KubelessContentType\n\n\t\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\t\treq.Header.Set(KubelessEventIDKey, uuid.New().String())\n\t\t\treq.Header.Set(KubelessEventTypeKey, KubelessEventTypeValue)\n\t\t\treq.Header.Set(KubelessEventNamespaceKey, c.Config.Kubeless.Namespace)\n",
                    "rendered": {
                      "text": "\t} else {\n\t\tc.ContentType = KubelessContentType\n\n\t\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\t\treq.Header.Set(KubelessEventIDKey, uuid.New().String())\n\t\t\treq.Header.Set(KubelessEventTypeKey, KubelessEventTypeValue)\n\t\t\treq.Header.Set(KubelessEventNamespaceKey, c.Config.Kubeless.Namespace)\n",
                      "markdown": "`\t} else {\n\t\tc.ContentType = KubelessContentType\n\n\t\terr := c.Post(falcopayload, func(req *http.Request) {\n\t\t\treq.Header.Set(KubelessEventIDKey, uuid.New().String())\n\t\t\treq.Header.Set(KubelessEventTypeKey, KubelessEventTypeValue)\n\t\t\treq.Header.Set(KubelessEventNamespaceKey, c.Config.Kubeless.Namespace)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/outputs/kubeless.go"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 49,
                  "endLine": 70,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\n\tif c.Config.Kubeless.Kubeconfig != \"\" {\n\t\tstr, _ := json.Marshal(falcopayload)\n\t\treq := c.KubernetesClient.CoreV1().RESTClient().Post().AbsPath(\"/api/v1/namespaces/\" + c.Config.Kubeless.Namespace + \"/services/\" + c.Config.Kubeless.Function + \":\" + strconv.Itoa(c.Config.Kubeless.Port) + \"/proxy/\").Body(str)\n\t\treq.SetHeader(KubelessEventIDKey, uuid.New().String())\n\t\treq.SetHeader(ContentTypeHeaderKey, KubelessContentType)\n\t\treq.SetHeader(UserAgentHeaderKey, UserAgentHeaderValue)\n",
                    "rendered": {
                      "text": "\n\tif c.Config.Kubeless.Kubeconfig != \"\" {\n\t\tstr, _ := json.Marshal(falcopayload)\n\t\treq := c.KubernetesClient.CoreV1().RESTClient().Post().AbsPath(\"/api/v1/namespaces/\" + c.Config.Kubeless.Namespace + \"/services/\" + c.Config.Kubeless.Function + \":\" + strconv.Itoa(c.Config.Kubeless.Port) + \"/proxy/\").Body(str)\n\t\treq.SetHeader(KubelessEventIDKey, uuid.New().String())\n\t\treq.SetHeader(ContentTypeHeaderKey, KubelessContentType)\n\t\treq.SetHeader(UserAgentHeaderKey, UserAgentHeaderValue)\n",
                      "markdown": "`\n\tif c.Config.Kubeless.Kubeconfig != \"\" {\n\t\tstr, _ := json.Marshal(falcopayload)\n\t\treq := c.KubernetesClient.CoreV1().RESTClient().Post().AbsPath(\"/api/v1/namespaces/\" + c.Config.Kubeless.Namespace + \"/services/\" + c.Config.Kubeless.Function + \":\" + strconv.Itoa(c.Config.Kubeless.Port) + \"/proxy/\").Body(str)\n\t\treq.SetHeader(KubelessEventIDKey, uuid.New().String())\n\t\treq.SetHeader(ContentTypeHeaderKey, KubelessContentType)\n\t\treq.SetHeader(UserAgentHeaderKey, UserAgentHeaderValue)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/rabbitmq.md"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 3,
                  "endLine": 24,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `rabbitmq.minimumpriority` | `RABBITMQ_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `rabbitmq.minimumpriority` | `RABBITMQ_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `rabbitmq.minimumpriority` | `RABBITMQ_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/rabbitmq.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 30,
                  "endLine": 17,
                  "endColumn": 35,
                  "snippet": {
                    "text": "/\n\n## Table of content\n\n- [RabbitMQ](#rabbitmq)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                    | Env var                    | Default value    | Description                                                                                                                         |\n| -------------------------- | -------------------------- | ---------------- | -------------------------------------------",
                    "rendered": {
                      "text": "/\n\n## Table of content\n\n- [RabbitMQ](#rabbitmq)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                    | Env var                    | Default value    | Description                                                                                                                         |\n| -------------------------- | -------------------------- | ---------------- | -------------------------------------------",
                      "markdown": "`/\n\n## Table of content\n\n- [RabbitMQ](#rabbitmq)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                    | Env var                    | Default value    | Description                                                                                                                         |\n| -------------------------- | -------------------------- | ---------------- | -------------------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/redis.md"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 19,
                  "endLine": 37,
                  "endColumn": 27,
                  "snippet": {
                    "text": "  # database: \"\" # Redis database number (default: 0)\n  # storagetype: \"\" # Redis storage type: hashmap or list (default: list)\n  # key: \"\" # Redis storage key name (default: \"falco\")\n  # password: \"\" # Password to authenticate with Redis (default: \"\")\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n```\n\n",
                    "rendered": {
                      "text": "  # database: \"\" # Redis database number (default: 0)\n  # storagetype: \"\" # Redis storage type: hashmap or list (default: list)\n  # key: \"\" # Redis storage key name (default: \"falco\")\n  # password: \"\" # Password to authenticate with Redis (default: \"\")\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n```\n\n",
                      "markdown": "`  # database: \"\" # Redis database number (default: 0)\n  # storagetype: \"\" # Redis storage type: hashmap or list (default: list)\n  # key: \"\" # Redis storage key name (default: \"falco\")\n  # password: \"\" # Password to authenticate with Redis (default: \"\")\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/redis.md"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 12,
                  "snippet": {
                    "text": "  # database: \"\" # Redis database number (default: 0)\n  # storagetype: \"\" # Redis storage type: hashmap or list (default: list)\n  # key: \"\" # Redis storage key name (default: \"falco\")\n  # password: \"\" # Password to authenticate with Redis (default: \"\")\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n```\n\n",
                    "rendered": {
                      "text": "  # database: \"\" # Redis database number (default: 0)\n  # storagetype: \"\" # Redis storage type: hashmap or list (default: list)\n  # key: \"\" # Redis storage key name (default: \"falco\")\n  # password: \"\" # Password to authenticate with Redis (default: \"\")\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n```\n\n",
                      "markdown": "`  # database: \"\" # Redis database number (default: 0)\n  # storagetype: \"\" # Redis storage type: hashmap or list (default: list)\n  # key: \"\" # Redis storage key name (default: \"falco\")\n  # password: \"\" # Password to authenticate with Redis (default: \"\")\n  # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/redis.md"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 73,
                  "endLine": 23,
                  "endColumn": 81,
                  "snippet": {
                    "text": "                  |\n| `redis.key`             | `REDIS_KEY`             | `falco`          | Redis storage key name                                                                                                              |\n| `redis.password`        | `REDIS_PASSWORD`        |                  | Password to authenticate with Redis                                                                                                 |\n| `redis.minimumpriority` | `REDIS_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,not",
                    "rendered": {
                      "text": "                  |\n| `redis.key`             | `REDIS_KEY`             | `falco`          | Redis storage key name                                                                                                              |\n| `redis.password`        | `REDIS_PASSWORD`        |                  | Password to authenticate with Redis                                                                                                 |\n| `redis.minimumpriority` | `REDIS_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,not",
                      "markdown": "`                  |\n| `redis.key`             | `REDIS_KEY`             | `falco`          | Redis storage key name                                                                                                              |\n| `redis.password`        | `REDIS_PASSWORD`        |                  | Password to authenticate with Redis                                                                                                 |\n| `redis.minimumpriority` | `REDIS_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,not`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/redis.md"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 35,
                  "endLine": 23,
                  "endColumn": 43,
                  "snippet": {
                    "text": "                                                        |\n| `redis.key`             | `REDIS_KEY`             | `falco`          | Redis storage key name                                                                                                              |\n| `redis.password`        | `REDIS_PASSWORD`        |                  | Password to authenticate with Redis                                                                                                 |\n| `redis.minimumpriority` | `REDIS_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emer",
                    "rendered": {
                      "text": "                                                        |\n| `redis.key`             | `REDIS_KEY`             | `falco`          | Redis storage key name                                                                                                              |\n| `redis.password`        | `REDIS_PASSWORD`        |                  | Password to authenticate with Redis                                                                                                 |\n| `redis.minimumpriority` | `REDIS_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emer",
                      "markdown": "`                                                        |\n| `redis.key`             | `REDIS_KEY`             | `falco`          | Redis storage key name                                                                                                              |\n| `redis.password`        | `REDIS_PASSWORD`        |                  | Password to authenticate with Redis                                                                                                 |\n| `redis.minimumpriority` | `REDIS_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emer`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/redis.md"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 9,
                  "endLine": 23,
                  "endColumn": 17,
                  "snippet": {
                    "text": "                                                                                  |\n| `redis.key`             | `REDIS_KEY`             | `falco`          | Redis storage key name                                                                                                              |\n| `redis.password`        | `REDIS_PASSWORD`        |                  | Password to authenticate with Redis                                                                                                 |\n| `redis.minimumpriority` | `REDIS_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using t",
                    "rendered": {
                      "text": "                                                                                  |\n| `redis.key`             | `REDIS_KEY`             | `falco`          | Redis storage key name                                                                                                              |\n| `redis.password`        | `REDIS_PASSWORD`        |                  | Password to authenticate with Redis                                                                                                 |\n| `redis.minimumpriority` | `REDIS_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using t",
                      "markdown": "`                                                                                  |\n| `redis.key`             | `REDIS_KEY`             | `falco`          | Redis storage key name                                                                                                              |\n| `redis.password`        | `REDIS_PASSWORD`        |                  | Password to authenticate with Redis                                                                                                 |\n| `redis.minimumpriority` | `REDIS_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using t`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/redis.md"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 3,
                  "endLine": 27,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `redis.minimumpriority` | `REDIS_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `redis.minimumpriority` | `REDIS_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `redis.minimumpriority` | `REDIS_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/redis.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 27,
                  "endLine": 17,
                  "endColumn": 32,
                  "snippet": {
                    "text": "redis.com/\n\n## Table of content\n\n- [Redis](#redis)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                 | Env var                 | Default value    | Description                                                                                                                         |\n| ----------------------- | ----------------------- | ---------------- | ----------------------------------------------------",
                    "rendered": {
                      "text": "redis.com/\n\n## Table of content\n\n- [Redis](#redis)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                 | Env var                 | Default value    | Description                                                                                                                         |\n| ----------------------- | ----------------------- | ---------------- | ----------------------------------------------------",
                      "markdown": "`redis.com/\n\n## Table of content\n\n- [Redis](#redis)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                 | Env var                 | Default value    | Description                                                                                                                         |\n| ----------------------- | ----------------------- | ---------------- | ----------------------------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/aws_security_lake.md"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 19,
                  "endLine": 51,
                  "endColumn": 25,
                  "snippet": {
                    "text": "    region: \"\" # Bucket Region\n    prefix: \"\" # Prefix for keys\n    accountid: \"\" # Account ID\n    # interval: 5 # Time in minutes between two puts to S3 (must be between 5 and 60min) (default: 5min)\n    # batchsize: 1000 # Max number of events by parquet file (default: 1000)\n    # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n```\n",
                    "rendered": {
                      "text": "    region: \"\" # Bucket Region\n    prefix: \"\" # Prefix for keys\n    accountid: \"\" # Account ID\n    # interval: 5 # Time in minutes between two puts to S3 (must be between 5 and 60min) (default: 5min)\n    # batchsize: 1000 # Max number of events by parquet file (default: 1000)\n    # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n```\n",
                      "markdown": "`    region: \"\" # Bucket Region\n    prefix: \"\" # Prefix for keys\n    accountid: \"\" # Account ID\n    # interval: 5 # Time in minutes between two puts to S3 (must be between 5 and 60min) (default: 5min)\n    # batchsize: 1000 # Max number of events by parquet file (default: 1000)\n    # minimumpriority: \"\" # minimum priority of event for using this output, order is emergency|alert|critical|error|warning|notice|informational|debug or \"\" (default)\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/aws_security_lake.md"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 3,
                  "endLine": 34,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `aws.securitylake.minimumpriority` | `AWS_SECURITYLAKE_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `aws.securitylake.minimumpriority` | `AWS_SECURITYLAKE_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `aws.securitylake.minimumpriority` | `AWS_SECURITYLAKE_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/aws_security_lake.md"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 94,
                  "endLine": 29,
                  "endColumn": 100,
                  "snippet": {
                    "text": "ountid`       | `AWS_SECURITYLAKE_ACCOUNTID`       |                  | Account ID                                                                                                                          |\n| `aws.securitylake.interval`        | `AWS_SECURITYLAKE_INTERVAL`        | `5`              | Time in minutes between two puts to S3 (must be between 5 and 60min)                                                                |\n| `aws.securitylake.batchsize`       | `AWS_SECURITYLAKE_BATCHSIZE`       | `1000`           | Max number of events by parquet file                                        ",
                    "rendered": {
                      "text": "ountid`       | `AWS_SECURITYLAKE_ACCOUNTID`       |                  | Account ID                                                                                                                          |\n| `aws.securitylake.interval`        | `AWS_SECURITYLAKE_INTERVAL`        | `5`              | Time in minutes between two puts to S3 (must be between 5 and 60min)                                                                |\n| `aws.securitylake.batchsize`       | `AWS_SECURITYLAKE_BATCHSIZE`       | `1000`           | Max number of events by parquet file                                        ",
                      "markdown": "`ountid`       | `AWS_SECURITYLAKE_ACCOUNTID`       |                  | Account ID                                                                                                                          |\n| `aws.securitylake.interval`        | `AWS_SECURITYLAKE_INTERVAL`        | `5`              | Time in minutes between two puts to S3 (must be between 5 and 60min)                                                                |\n| `aws.securitylake.batchsize`       | `AWS_SECURITYLAKE_BATCHSIZE`       | `1000`           | Max number of events by parquet file                                        `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/aws_security_lake.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 38,
                  "endLine": 17,
                  "endColumn": 43,
                  "snippet": {
                    "text": "[AWS Security Lake](#aws-security-lake)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                            | Env var                            | Default value    | Description                                                                                                                         |\n| ---------------------------------- | ---------------------------------- | ---------------- | -------------------",
                    "rendered": {
                      "text": "[AWS Security Lake](#aws-security-lake)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                            | Env var                            | Default value    | Description                                                                                                                         |\n| ---------------------------------- | ---------------------------------- | ---------------- | -------------------",
                      "markdown": "`[AWS Security Lake](#aws-security-lake)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                            | Env var                            | Default value    | Description                                                                                                                         |\n| ---------------------------------- | ---------------------------------- | ---------------- | -------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/EXAMPLE.md"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 3,
                  "endLine": 24,
                  "endColumn": 8,
                  "snippet": {
                    "text": "|         |         |               |             |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "|         |         |               |             |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`|         |         |               |             |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/EXAMPLE.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 11,
                  "endLine": 17,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\n## Configuration\n\n| Setting | Env var | Default value | Description |\n| ------- | ------- | ------------- | ----------- |\n|         |         |               |             |\n|         |         |               |             |\n",
                    "rendered": {
                      "text": "\n## Configuration\n\n| Setting | Env var | Default value | Description |\n| ------- | ------- | ------------- | ----------- |\n|         |         |               |             |\n|         |         |               |             |\n",
                      "markdown": "`\n## Configuration\n\n| Setting | Env var | Default value | Description |\n| ------- | ------- | ------------- | ----------- |\n|         |         |               |             |\n|         |         |               |             |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/openfaas.md"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 29,
                  "endLine": 38,
                  "endColumn": 38,
                  "snippet": {
                    "text": "``yaml\nopenfaas:\n  functionname: \"\" # Name of OpenFaaS function, if not empty, OpenFaaS is enabled\n  functionnamespace: \"openfaas-fn\" # Namespace of OpenFaaS function, \"openfaas-fn\" (default)\n  gatewayservice: \"gateway\" # Service of OpenFaaS Gateway, \"gateway\" (default)\n  gatewayport: 8080 # Port of service of OpenFaaS Gateway\n  gatewaynamespace: \"openfaas\" # Namespace of OpenFaaS Gateway, \"openfaas\" (default)\n  kubeconfig: \"~/.kube/config\" # Kubeconfig file to use (only if falcosidekick is running outside the cluster)\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, orde",
                    "rendered": {
                      "text": "``yaml\nopenfaas:\n  functionname: \"\" # Name of OpenFaaS function, if not empty, OpenFaaS is enabled\n  functionnamespace: \"openfaas-fn\" # Namespace of OpenFaaS function, \"openfaas-fn\" (default)\n  gatewayservice: \"gateway\" # Service of OpenFaaS Gateway, \"gateway\" (default)\n  gatewayport: 8080 # Port of service of OpenFaaS Gateway\n  gatewaynamespace: \"openfaas\" # Namespace of OpenFaaS Gateway, \"openfaas\" (default)\n  kubeconfig: \"~/.kube/config\" # Kubeconfig file to use (only if falcosidekick is running outside the cluster)\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, orde",
                      "markdown": "```yaml\nopenfaas:\n  functionname: \"\" # Name of OpenFaaS function, if not empty, OpenFaaS is enabled\n  functionnamespace: \"openfaas-fn\" # Namespace of OpenFaaS function, \"openfaas-fn\" (default)\n  gatewayservice: \"gateway\" # Service of OpenFaaS Gateway, \"gateway\" (default)\n  gatewayport: 8080 # Port of service of OpenFaaS Gateway\n  gatewaynamespace: \"openfaas\" # Namespace of OpenFaaS Gateway, \"openfaas\" (default)\n  kubeconfig: \"~/.kube/config\" # Kubeconfig file to use (only if falcosidekick is running outside the cluster)\n  # minimumpriority: \"debug\" # minimum priority of event for using this output, orde`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/openfaas.md"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 29,
                  "endLine": 37,
                  "endColumn": 38,
                  "snippet": {
                    "text": "openfaas:\n  functionname: \"\" # Name of OpenFaaS function, if not empty, OpenFaaS is enabled\n  functionnamespace: \"openfaas-fn\" # Namespace of OpenFaaS function, \"openfaas-fn\" (default)\n  gatewayservice: \"gateway\" # Service of OpenFaaS Gateway, \"gateway\" (default)\n  gatewayport: 8080 # Port of service of OpenFaaS Gateway\n  gatewaynamespace: \"openfaas\" # Namespace of OpenFaaS Gateway, \"openfaas\" (default)\n  kubeconfig: \"~/.kube/config\" # Kubeconfig file to use (only if falcosidekick is running outside the cluster)\n",
                    "rendered": {
                      "text": "openfaas:\n  functionname: \"\" # Name of OpenFaaS function, if not empty, OpenFaaS is enabled\n  functionnamespace: \"openfaas-fn\" # Namespace of OpenFaaS function, \"openfaas-fn\" (default)\n  gatewayservice: \"gateway\" # Service of OpenFaaS Gateway, \"gateway\" (default)\n  gatewayport: 8080 # Port of service of OpenFaaS Gateway\n  gatewaynamespace: \"openfaas\" # Namespace of OpenFaaS Gateway, \"openfaas\" (default)\n  kubeconfig: \"~/.kube/config\" # Kubeconfig file to use (only if falcosidekick is running outside the cluster)\n",
                      "markdown": "`openfaas:\n  functionname: \"\" # Name of OpenFaaS function, if not empty, OpenFaaS is enabled\n  functionnamespace: \"openfaas-fn\" # Namespace of OpenFaaS function, \"openfaas-fn\" (default)\n  gatewayservice: \"gateway\" # Service of OpenFaaS Gateway, \"gateway\" (default)\n  gatewayport: 8080 # Port of service of OpenFaaS Gateway\n  gatewaynamespace: \"openfaas\" # Namespace of OpenFaaS Gateway, \"openfaas\" (default)\n  kubeconfig: \"~/.kube/config\" # Kubeconfig file to use (only if falcosidekick is running outside the cluster)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/openfaas.md"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 3,
                  "endLine": 29,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `openfaas.minimumpriority`   | `OPENFAAS_MINIMUMPRIORITY`   | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `openfaas.minimumpriority`   | `OPENFAAS_MINIMUMPRIORITY`   | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `openfaas.minimumpriority`   | `OPENFAAS_MINIMUMPRIORITY`   | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/openfaas.md"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 90,
                  "endLine": 22,
                  "endColumn": 99,
                  "snippet": {
                    "text": "faas.gatewayservice`    | `OPENFAAS_GATEWAYSERVICE`    | `gateway`        | Service of OpenFaaS Gateway                                                                                                         |\n| `openfaas.gatewayport`       | `OPENFAAS_GATEWAYPORT`       | `8080`           | Port of service of OpenFaaS Gateway                                                                                                 |\n| `openfaas.gatewaynamespace`  | `OPENFAAS_GATEWAYNAMESPACE`  | `openfaas`       | Namespace of OpenFaaS Gateway                                                                      ",
                    "rendered": {
                      "text": "faas.gatewayservice`    | `OPENFAAS_GATEWAYSERVICE`    | `gateway`        | Service of OpenFaaS Gateway                                                                                                         |\n| `openfaas.gatewayport`       | `OPENFAAS_GATEWAYPORT`       | `8080`           | Port of service of OpenFaaS Gateway                                                                                                 |\n| `openfaas.gatewaynamespace`  | `OPENFAAS_GATEWAYNAMESPACE`  | `openfaas`       | Namespace of OpenFaaS Gateway                                                                      ",
                      "markdown": "`faas.gatewayservice`    | `OPENFAAS_GATEWAYSERVICE`    | `gateway`        | Service of OpenFaaS Gateway                                                                                                         |\n| `openfaas.gatewayport`       | `OPENFAAS_GATEWAYPORT`       | `8080`           | Port of service of OpenFaaS Gateway                                                                                                 |\n| `openfaas.gatewaynamespace`  | `OPENFAAS_GATEWAYNAMESPACE`  | `openfaas`       | Namespace of OpenFaaS Gateway                                                                      `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/openfaas.md"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 82,
                  "endLine": 21,
                  "endColumn": 91,
                  "snippet": {
                    "text": "\n| `openfaas.functionnamespace` | `OPENFAAS_FUNCTIONNAMESPACE` | `openfaas-fn`    | Namespace of OpenFaaS function                                                                                                      |\n| `openfaas.gatewayservice`    | `OPENFAAS_GATEWAYSERVICE`    | `gateway`        | Service of OpenFaaS Gateway                                                                                                         |\n| `openfaas.gatewayport`       | `OPENFAAS_GATEWAYPORT`       | `8080`           | Port of service of OpenFaaS Gateway                                                        ",
                    "rendered": {
                      "text": "\n| `openfaas.functionnamespace` | `OPENFAAS_FUNCTIONNAMESPACE` | `openfaas-fn`    | Namespace of OpenFaaS function                                                                                                      |\n| `openfaas.gatewayservice`    | `OPENFAAS_GATEWAYSERVICE`    | `gateway`        | Service of OpenFaaS Gateway                                                                                                         |\n| `openfaas.gatewayport`       | `OPENFAAS_GATEWAYPORT`       | `8080`           | Port of service of OpenFaaS Gateway                                                        ",
                      "markdown": "`\n| `openfaas.functionnamespace` | `OPENFAAS_FUNCTIONNAMESPACE` | `openfaas-fn`    | Namespace of OpenFaaS function                                                                                                      |\n| `openfaas.gatewayservice`    | `OPENFAAS_GATEWAYSERVICE`    | `gateway`        | Service of OpenFaaS Gateway                                                                                                         |\n| `openfaas.gatewayport`       | `OPENFAAS_GATEWAYPORT`       | `8080`           | Port of service of OpenFaaS Gateway                                                        `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/openfaas.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 32,
                  "endLine": 17,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\n## Table of content\n\n- [OpenFaaS](#openfaas)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                      | Env var                      | Default value    | Description                                                                                                                         |\n| ---------------------------- | ---------------------------- | ---------------- | -------------------------------------",
                    "rendered": {
                      "text": "\n## Table of content\n\n- [OpenFaaS](#openfaas)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                      | Env var                      | Default value    | Description                                                                                                                         |\n| ---------------------------- | ---------------------------- | ---------------- | -------------------------------------",
                      "markdown": "`\n## Table of content\n\n- [OpenFaaS](#openfaas)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                      | Env var                      | Default value    | Description                                                                                                                         |\n| ---------------------------- | ---------------------------- | ---------------- | -------------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/webhook.md"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 3,
                  "endLine": 27,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `webhook.minimumpriority` | `WEBHOOK_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `webhook.minimumpriority` | `WEBHOOK_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `webhook.minimumpriority` | `WEBHOOK_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/webhook.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 29,
                  "endLine": 17,
                  "endColumn": 34,
                  "snippet": {
                    "text": "n/a>\n\n## Table of content\n\n- [Webhook](#webhook)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                   | Env var                   | Default value    | Description                                                                                                                         |\n| ------------------------- | ------------------------- | ---------------- | ----------------------------------------------",
                    "rendered": {
                      "text": "n/a>\n\n## Table of content\n\n- [Webhook](#webhook)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                   | Env var                   | Default value    | Description                                                                                                                         |\n| ------------------------- | ------------------------- | ---------------- | ----------------------------------------------",
                      "markdown": "`n/a>\n\n## Table of content\n\n- [Webhook](#webhook)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                   | Env var                   | Default value    | Description                                                                                                                         |\n| ------------------------- | ------------------------- | ---------------- | ----------------------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/gcp_pub_sub.md"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 24,
                  "endLine": 32,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n```yaml\ngcp:\n  credentials: \"\" # The base64-encoded JSON key file for the GCP service account\n  pubsub:\n    projectid: \"\" # The GCP Project ID containing the Pub/Sub Topic, if not empty, GCP PubSub is enabled\n    topic: \"\" # The name of the Pub/Sub topic\n",
                    "rendered": {
                      "text": "\n```yaml\ngcp:\n  credentials: \"\" # The base64-encoded JSON key file for the GCP service account\n  pubsub:\n    projectid: \"\" # The GCP Project ID containing the Pub/Sub Topic, if not empty, GCP PubSub is enabled\n    topic: \"\" # The name of the Pub/Sub topic\n",
                      "markdown": "`\n```yaml\ngcp:\n  credentials: \"\" # The base64-encoded JSON key file for the GCP service account\n  pubsub:\n    projectid: \"\" # The GCP Project ID containing the Pub/Sub Topic, if not empty, GCP PubSub is enabled\n    topic: \"\" # The name of the Pub/Sub topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/gcp_pub_sub.md"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 89,
                  "endLine": 19,
                  "endColumn": 95,
                  "snippet": {
                    "text": "----------------------- | ----------------------------- | ---------------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| `gcp.credentials`             | `GCP_CREDENTIALS`             |                  | The base64-encoded JSON key file for the GCP service account                                                                        |\n| `gcp.pubsub.projectid`        | `GCP_PUBSUB_PROJECTID`        |                  | The GCP Project ID containing the Pub/Sub Topic, if not empty, GCP PubSub is **enabled**   ",
                    "rendered": {
                      "text": "----------------------- | ----------------------------- | ---------------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| `gcp.credentials`             | `GCP_CREDENTIALS`             |                  | The base64-encoded JSON key file for the GCP service account                                                                        |\n| `gcp.pubsub.projectid`        | `GCP_PUBSUB_PROJECTID`        |                  | The GCP Project ID containing the Pub/Sub Topic, if not empty, GCP PubSub is **enabled**   ",
                      "markdown": "`----------------------- | ----------------------------- | ---------------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| `gcp.credentials`             | `GCP_CREDENTIALS`             |                  | The base64-encoded JSON key file for the GCP service account                                                                        |\n| `gcp.pubsub.projectid`        | `GCP_PUBSUB_PROJECTID`        |                  | The GCP Project ID containing the Pub/Sub Topic, if not empty, GCP PubSub is **enabled**   `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/gcp_pub_sub.md"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 64,
                  "endLine": 32,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\n```yaml\ngcp:\n  credentials: \"\" # The base64-encoded JSON key file for the GCP service account\n  pubsub:\n    projectid: \"\" # The GCP Project ID containing the Pub/Sub Topic, if not empty, GCP PubSub is enabled\n    topic: \"\" # The name of the Pub/Sub topic\n",
                    "rendered": {
                      "text": "\n```yaml\ngcp:\n  credentials: \"\" # The base64-encoded JSON key file for the GCP service account\n  pubsub:\n    projectid: \"\" # The GCP Project ID containing the Pub/Sub Topic, if not empty, GCP PubSub is enabled\n    topic: \"\" # The name of the Pub/Sub topic\n",
                      "markdown": "`\n```yaml\ngcp:\n  credentials: \"\" # The base64-encoded JSON key file for the GCP service account\n  pubsub:\n    projectid: \"\" # The GCP Project ID containing the Pub/Sub Topic, if not empty, GCP PubSub is enabled\n    topic: \"\" # The name of the Pub/Sub topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/gcp_pub_sub.md"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 3,
                  "endLine": 26,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `gcp.pubsub.minimumpriority`  | `GCP_PUBSUB_MINIMUMPRIORITY`  | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `gcp.pubsub.minimumpriority`  | `GCP_PUBSUB_MINIMUMPRIORITY`  | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `gcp.pubsub.minimumpriority`  | `GCP_PUBSUB_MINIMUMPRIORITY`  | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/gcp_pub_sub.md"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 129,
                  "endLine": 19,
                  "endColumn": 138,
                  "snippet": {
                    "text": "--------------- | ---------------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| `gcp.credentials`             | `GCP_CREDENTIALS`             |                  | The base64-encoded JSON key file for the GCP service account                                                                        |\n| `gcp.pubsub.projectid`        | `GCP_PUBSUB_PROJECTID`        |                  | The GCP Project ID containing the Pub/Sub Topic, if not empty, GCP PubSub is **enabled**                                            |\n",
                    "rendered": {
                      "text": "--------------- | ---------------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| `gcp.credentials`             | `GCP_CREDENTIALS`             |                  | The base64-encoded JSON key file for the GCP service account                                                                        |\n| `gcp.pubsub.projectid`        | `GCP_PUBSUB_PROJECTID`        |                  | The GCP Project ID containing the Pub/Sub Topic, if not empty, GCP PubSub is **enabled**                                            |\n",
                      "markdown": "`--------------- | ---------------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| `gcp.credentials`             | `GCP_CREDENTIALS`             |                  | The base64-encoded JSON key file for the GCP service account                                                                        |\n| `gcp.pubsub.projectid`        | `GCP_PUBSUB_PROJECTID`        |                  | The GCP Project ID containing the Pub/Sub Topic, if not empty, GCP PubSub is **enabled**                                            |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/gcp_pub_sub.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 33,
                  "endLine": 17,
                  "endColumn": 38,
                  "snippet": {
                    "text": "able of content\n\n- [GCP PubSub](#gcp-pubsub)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                       | Env var                       | Default value    | Description                                                                                                                         |\n| ----------------------------- | ----------------------------- | ---------------- | ----------------------------------",
                    "rendered": {
                      "text": "able of content\n\n- [GCP PubSub](#gcp-pubsub)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                       | Env var                       | Default value    | Description                                                                                                                         |\n| ----------------------------- | ----------------------------- | ---------------- | ----------------------------------",
                      "markdown": "`able of content\n\n- [GCP PubSub](#gcp-pubsub)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                       | Env var                       | Default value    | Description                                                                                                                         |\n| ----------------------------- | ----------------------------- | ---------------- | ----------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/aws_sqs.md"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 3,
                  "endLine": 30,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `aws.sqs.minimumpriority` | `AWS_SQS_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `aws.sqs.minimumpriority` | `AWS_SQS_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `aws.sqs.minimumpriority` | `AWS_SQS_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/aws_sqs.md"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 29,
                  "endLine": 18,
                  "endColumn": 34,
                  "snippet": {
                    "text": "Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n    - [SQS Sample IAM Policy](#sqs-sample-iam-policy)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                   | Env var                   | Default value    | Description                                                                                                                         |\n| ------------------------- | ------------------------- | ---------------- | ----------------------------------------------",
                    "rendered": {
                      "text": "Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n    - [SQS Sample IAM Policy](#sqs-sample-iam-policy)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                   | Env var                   | Default value    | Description                                                                                                                         |\n| ------------------------- | ------------------------- | ---------------- | ----------------------------------------------",
                      "markdown": "`Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n    - [SQS Sample IAM Policy](#sqs-sample-iam-policy)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                   | Env var                   | Default value    | Description                                                                                                                         |\n| ------------------------- | ------------------------- | ---------------- | ----------------------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/grafana.md"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 3,
                  "endLine": 29,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `grafana.minimumpriority` | `GRAFANA_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `grafana.minimumpriority` | `GRAFANA_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `grafana.minimumpriority` | `GRAFANA_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/grafana.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 29,
                  "endLine": 17,
                  "endColumn": 34,
                  "snippet": {
                    "text": "com/\n\n## Table of content\n\n- [Grafana](#grafana)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                   | Env var                   | Default value    | Description                                                                                                                         |\n| ------------------------- | ------------------------- | ---------------- | ----------------------------------------------",
                    "rendered": {
                      "text": "com/\n\n## Table of content\n\n- [Grafana](#grafana)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                   | Env var                   | Default value    | Description                                                                                                                         |\n| ------------------------- | ------------------------- | ---------------- | ----------------------------------------------",
                      "markdown": "`com/\n\n## Table of content\n\n- [Grafana](#grafana)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                   | Env var                   | Default value    | Description                                                                                                                         |\n| ------------------------- | ------------------------- | ---------------- | ----------------------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/telegram.md"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 3,
                  "endLine": 25,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `telegram.minimumpriority` | `TELEGRAM_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `telegram.minimumpriority` | `TELEGRAM_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `telegram.minimumpriority` | `TELEGRAM_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/telegram.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 30,
                  "endLine": 17,
                  "endColumn": 35,
                  "snippet": {
                    "text": "/\n\n## Table of content\n\n- [Telegram](#telegram)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                    | Env var                    | Default value    | Description                                                                                                                         |\n| -------------------------- | -------------------------- | ---------------- | -------------------------------------------",
                    "rendered": {
                      "text": "/\n\n## Table of content\n\n- [Telegram](#telegram)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                    | Env var                    | Default value    | Description                                                                                                                         |\n| -------------------------- | -------------------------- | ---------------- | -------------------------------------------",
                      "markdown": "`/\n\n## Table of content\n\n- [Telegram](#telegram)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                    | Env var                    | Default value    | Description                                                                                                                         |\n| -------------------------- | -------------------------- | ---------------- | -------------------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/openobserve.md"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 28,
                  "endLine": 40,
                  "endColumn": 36,
                  "snippet": {
                    "text": "  # organizationname: \"default\" # Organization name (default: default)\n  # streamname: \"falco\" # Stream name (default: falco)\n  # username: \"a\" # use this username to authenticate to OpenObserve (default: \"\")\n  # password: \"\" # use this password to authenticate to OpenObserve (default: \"\")\n  # customheaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n",
                    "rendered": {
                      "text": "  # organizationname: \"default\" # Organization name (default: default)\n  # streamname: \"falco\" # Stream name (default: falco)\n  # username: \"a\" # use this username to authenticate to OpenObserve (default: \"\")\n  # password: \"\" # use this password to authenticate to OpenObserve (default: \"\")\n  # customheaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n",
                      "markdown": "`  # organizationname: \"default\" # Organization name (default: default)\n  # streamname: \"falco\" # Stream name (default: falco)\n  # username: \"a\" # use this username to authenticate to OpenObserve (default: \"\")\n  # password: \"\" # use this password to authenticate to OpenObserve (default: \"\")\n  # customheaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/openobserve.md"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 4,
                  "endLine": 40,
                  "endColumn": 12,
                  "snippet": {
                    "text": "  # organizationname: \"default\" # Organization name (default: default)\n  # streamname: \"falco\" # Stream name (default: falco)\n  # username: \"a\" # use this username to authenticate to OpenObserve (default: \"\")\n  # password: \"\" # use this password to authenticate to OpenObserve (default: \"\")\n  # customheaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n",
                    "rendered": {
                      "text": "  # organizationname: \"default\" # Organization name (default: default)\n  # streamname: \"falco\" # Stream name (default: falco)\n  # username: \"a\" # use this username to authenticate to OpenObserve (default: \"\")\n  # password: \"\" # use this password to authenticate to OpenObserve (default: \"\")\n  # customheaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n",
                      "markdown": "`  # organizationname: \"default\" # Organization name (default: default)\n  # streamname: \"falco\" # Stream name (default: falco)\n  # username: \"a\" # use this username to authenticate to OpenObserve (default: \"\")\n  # password: \"\" # use this password to authenticate to OpenObserve (default: \"\")\n  # customheaders: # Custom headers to add in POST, useful for Authentication\n  #   key: value\n  # mutualtls: false # if true, checkcert flag will be ignored (server cert will always be checked)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/openobserve.md"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 96,
                  "endLine": 23,
                  "endColumn": 104,
                  "snippet": {
                    "text": "ername`         | `OPENOBSERVE_USERNAME`         |                  | Use this username to authenticate to OpenObserve                                                                                    |\n| `openobserve.password`         | `OPENOBSERVE_PASSWORD`         |                  | Use this password to authenticate to OpenObserve                                                                                    |\n| `openobserve.customheaders`    | `OPENOBSERVE_CUSTOMHEADERS`    |                  | Custom headers to add in POST, useful for Authentication                                        ",
                    "rendered": {
                      "text": "ername`         | `OPENOBSERVE_USERNAME`         |                  | Use this username to authenticate to OpenObserve                                                                                    |\n| `openobserve.password`         | `OPENOBSERVE_PASSWORD`         |                  | Use this password to authenticate to OpenObserve                                                                                    |\n| `openobserve.customheaders`    | `OPENOBSERVE_CUSTOMHEADERS`    |                  | Custom headers to add in POST, useful for Authentication                                        ",
                      "markdown": "`ername`         | `OPENOBSERVE_USERNAME`         |                  | Use this username to authenticate to OpenObserve                                                                                    |\n| `openobserve.password`         | `OPENOBSERVE_PASSWORD`         |                  | Use this password to authenticate to OpenObserve                                                                                    |\n| `openobserve.customheaders`    | `OPENOBSERVE_CUSTOMHEADERS`    |                  | Custom headers to add in POST, useful for Authentication                                        `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/openobserve.md"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 48,
                  "endLine": 23,
                  "endColumn": 56,
                  "snippet": {
                    "text": "                             |\n| `openobserve.username`         | `OPENOBSERVE_USERNAME`         |                  | Use this username to authenticate to OpenObserve                                                                                    |\n| `openobserve.password`         | `OPENOBSERVE_PASSWORD`         |                  | Use this password to authenticate to OpenObserve                                                                                    |\n| `openobserve.customheaders`    | `OPENOBSERVE_CUSTOMHEADERS`    |                  | Custom headers to add in POST, useful for Authen",
                    "rendered": {
                      "text": "                             |\n| `openobserve.username`         | `OPENOBSERVE_USERNAME`         |                  | Use this username to authenticate to OpenObserve                                                                                    |\n| `openobserve.password`         | `OPENOBSERVE_PASSWORD`         |                  | Use this password to authenticate to OpenObserve                                                                                    |\n| `openobserve.customheaders`    | `OPENOBSERVE_CUSTOMHEADERS`    |                  | Custom headers to add in POST, useful for Authen",
                      "markdown": "`                             |\n| `openobserve.username`         | `OPENOBSERVE_USERNAME`         |                  | Use this username to authenticate to OpenObserve                                                                                    |\n| `openobserve.password`         | `OPENOBSERVE_PASSWORD`         |                  | Use this password to authenticate to OpenObserve                                                                                    |\n| `openobserve.customheaders`    | `OPENOBSERVE_CUSTOMHEADERS`    |                  | Custom headers to add in POST, useful for Authen`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/openobserve.md"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 15,
                  "endLine": 23,
                  "endColumn": 23,
                  "snippet": {
                    "text": "                                                              |\n| `openobserve.username`         | `OPENOBSERVE_USERNAME`         |                  | Use this username to authenticate to OpenObserve                                                                                    |\n| `openobserve.password`         | `OPENOBSERVE_PASSWORD`         |                  | Use this password to authenticate to OpenObserve                                                                                    |\n| `openobserve.customheaders`    | `OPENOBSERVE_CUSTOMHEADERS`    |                  | Custom headers ",
                    "rendered": {
                      "text": "                                                              |\n| `openobserve.username`         | `OPENOBSERVE_USERNAME`         |                  | Use this username to authenticate to OpenObserve                                                                                    |\n| `openobserve.password`         | `OPENOBSERVE_PASSWORD`         |                  | Use this password to authenticate to OpenObserve                                                                                    |\n| `openobserve.customheaders`    | `OPENOBSERVE_CUSTOMHEADERS`    |                  | Custom headers ",
                      "markdown": "`                                                              |\n| `openobserve.username`         | `OPENOBSERVE_USERNAME`         |                  | Use this username to authenticate to OpenObserve                                                                                    |\n| `openobserve.password`         | `OPENOBSERVE_PASSWORD`         |                  | Use this password to authenticate to OpenObserve                                                                                    |\n| `openobserve.customheaders`    | `OPENOBSERVE_CUSTOMHEADERS`    |                  | Custom headers `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/openobserve.md"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 3,
                  "endLine": 30,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `openobserve.minimumpriority`  | `OPENOBSERVE_MINIMUMPRIORITY`  | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `openobserve.minimumpriority`  | `OPENOBSERVE_MINIMUMPRIORITY`  | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `openobserve.minimumpriority`  | `OPENOBSERVE_MINIMUMPRIORITY`  | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/openobserve.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 34,
                  "endLine": 17,
                  "endColumn": 39,
                  "snippet": {
                    "text": "e of content\n\n- [OpenObserve](#openobserve)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                        | Env var                        | Default value    | Description                                                                                                                         |\n| ------------------------------ | ------------------------------ | ---------------- | -------------------------------",
                    "rendered": {
                      "text": "e of content\n\n- [OpenObserve](#openobserve)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                        | Env var                        | Default value    | Description                                                                                                                         |\n| ------------------------------ | ------------------------------ | ---------------- | -------------------------------",
                      "markdown": "`e of content\n\n- [OpenObserve](#openobserve)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                        | Env var                        | Default value    | Description                                                                                                                         |\n| ------------------------------ | ------------------------------ | ---------------- | -------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/policy_report.md"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 24,
                  "endLine": 50,
                  "endColumn": 30,
                  "snippet": {
                    "text": "> [!WARNING]\nInstallation of the Policy Report Custom Resource Definition (CRD) is a prerequisite for using the Policy Report output.\n\nInformation about how to find and install the CRD for the reports can be found [here](https://github.com/kubernetes-sigs/wg-policy-prototypes/tree/master/policy-report#installing). \n\n## Screenshots",
                    "rendered": {
                      "text": "> [!WARNING]\nInstallation of the Policy Report Custom Resource Definition (CRD) is a prerequisite for using the Policy Report output.\n\nInformation about how to find and install the CRD for the reports can be found [here](https://github.com/kubernetes-sigs/wg-policy-prototypes/tree/master/policy-report#installing). \n\n## Screenshots",
                      "markdown": "`> [!WARNING]\nInstallation of the Policy Report Custom Resource Definition (CRD) is a prerequisite for using the Policy Report output.\n\nInformation about how to find and install the CRD for the reports can be found [here](https://github.com/kubernetes-sigs/wg-policy-prototypes/tree/master/policy-report#installing). \n\n## Screenshots`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/policy_report.md"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 3,
                  "endLine": 27,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `policyreport.minimumpriority` | `POLICYREPORT_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `policyreport.minimumpriority` | `POLICYREPORT_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `policyreport.minimumpriority` | `POLICYREPORT_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/policy_report.md"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 45,
                  "endLine": 18,
                  "endColumn": 50,
                  "snippet": {
                    "text": "of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n    - [Installing Policy Report Custom Resource Definition (CRD)](#installing-policy-report-custom-resource-definition-crd)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n|            Setting             |            Env var             |  Default value   |                                                             Description                                                             |\n| ------------------------------ | ------------------------------ | ---------------- | ------------------------------------------",
                    "rendered": {
                      "text": "of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n    - [Installing Policy Report Custom Resource Definition (CRD)](#installing-policy-report-custom-resource-definition-crd)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n|            Setting             |            Env var             |  Default value   |                                                             Description                                                             |\n| ------------------------------ | ------------------------------ | ---------------- | ------------------------------------------",
                      "markdown": "`of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n    - [Installing Policy Report Custom Resource Definition (CRD)](#installing-policy-report-custom-resource-definition-crd)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n|            Setting             |            Env var             |  Default value   |                                                             Description                                                             |\n| ------------------------------ | ------------------------------ | ---------------- | ------------------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/opsgenie.md"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 3,
                  "endLine": 24,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `opsgenie.minimumpriority` | `OPSGENIE_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `opsgenie.minimumpriority` | `OPSGENIE_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `opsgenie.minimumpriority` | `OPSGENIE_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"` |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/opsgenie.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 30,
                  "endLine": 17,
                  "endColumn": 35,
                  "snippet": {
                    "text": "/\n\n## Table of content\n\n- [Opsgenie](#opsgenie)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                    | Env var                    | Default value    | Description                                                                                                                         |\n| -------------------------- | -------------------------- | ---------------- | -------------------------------------------",
                    "rendered": {
                      "text": "/\n\n## Table of content\n\n- [Opsgenie](#opsgenie)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                    | Env var                    | Default value    | Description                                                                                                                         |\n| -------------------------- | -------------------------- | ---------------- | -------------------------------------------",
                      "markdown": "`/\n\n## Table of content\n\n- [Opsgenie](#opsgenie)\n  - [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                    | Env var                    | Default value    | Description                                                                                                                         |\n| -------------------------- | -------------------------- | ---------------- | -------------------------------------------`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/googlechat.md"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 177,
                  "endLine": 51,
                  "endColumn": 185,
                  "snippet": {
                    "text": "                                                                                                                         |\n| `{{ index .OutputFields \\\"<field name>\\\" }}` | A map of additional optional fields emitted depending on the event. These may not be present for every event, in which case they expand to the string `<no value>` |\n\nGo templates also support some basic methods for text manipulation which can be used to improve the clarity of alerts - see the documentation for details.\n\n## Screenshots\n\n(GOOGLECHAT_OUTPUTFORMAT=\"**all**\")\n\n![google chat example](images/google_chat_no_fields.png)\n\n(GO",
                    "rendered": {
                      "text": "                                                                                                                         |\n| `{{ index .OutputFields \\\"<field name>\\\" }}` | A map of additional optional fields emitted depending on the event. These may not be present for every event, in which case they expand to the string `<no value>` |\n\nGo templates also support some basic methods for text manipulation which can be used to improve the clarity of alerts - see the documentation for details.\n\n## Screenshots\n\n(GOOGLECHAT_OUTPUTFORMAT=\"**all**\")\n\n![google chat example](images/google_chat_no_fields.png)\n\n(GO",
                      "markdown": "`                                                                                                                         |\n| `{{ index .OutputFields \\\"<field name>\\\" }}` | A map of additional optional fields emitted depending on the event. These may not be present for every event, in which case they expand to the string `<no value>` |\n\nGo templates also support some basic methods for text manipulation which can be used to improve the clarity of alerts - see the documentation for details.\n\n## Screenshots\n\n(GOOGLECHAT_OUTPUTFORMAT=\"**all**\")\n\n![google chat example](images/google_chat_no_fields.png)\n\n(GO`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/googlechat.md"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 177,
                  "endLine": 51,
                  "endColumn": 185,
                  "snippet": {
                    "text": "                                                                                                                         |\n| `{{ index .OutputFields \\\"<field name>\\\" }}` | A map of additional optional fields emitted depending on the event. These may not be present for every event, in which case they expand to the string `<no value>` |\n\nGo templates also support some basic methods for text manipulation which can be used to improve the clarity of alerts - see the documentation for details.\n\n## Screenshots\n\n(GOOGLECHAT_OUTPUTFORMAT=\"**all**\")\n\n![google chat example](images/google_chat_no_fields.png)\n\n(GO",
                    "rendered": {
                      "text": "                                                                                                                         |\n| `{{ index .OutputFields \\\"<field name>\\\" }}` | A map of additional optional fields emitted depending on the event. These may not be present for every event, in which case they expand to the string `<no value>` |\n\nGo templates also support some basic methods for text manipulation which can be used to improve the clarity of alerts - see the documentation for details.\n\n## Screenshots\n\n(GOOGLECHAT_OUTPUTFORMAT=\"**all**\")\n\n![google chat example](images/google_chat_no_fields.png)\n\n(GO",
                      "markdown": "`                                                                                                                         |\n| `{{ index .OutputFields \\\"<field name>\\\" }}` | A map of additional optional fields emitted depending on the event. These may not be present for every event, in which case they expand to the string `<no value>` |\n\nGo templates also support some basic methods for text manipulation which can be used to improve the clarity of alerts - see the documentation for details.\n\n## Screenshots\n\n(GOOGLECHAT_OUTPUTFORMAT=\"**all**\")\n\n![google chat example](images/google_chat_no_fields.png)\n\n(GO`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/googlechat.md"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 3,
                  "endLine": 26,
                  "endColumn": 8,
                  "snippet": {
                    "text": "| `googlechat.minimumpriority` | `GOOGLECHAT_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"`                                                                                                                      |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                    "rendered": {
                      "text": "| `googlechat.minimumpriority` | `GOOGLECHAT_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"`                                                                                                                      |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n",
                      "markdown": "`| `googlechat.minimumpriority` | `GOOGLECHAT_MINIMUMPRIORITY` | `\"\"` (= `debug`) | Minimum priority of event for using this output, order is `emergency,alert,critical,error,warning,notice,informational,debug or \"\"`                                                                                                                      |\n\n> [!NOTE]\nThe Env var values override the settings from yaml file.\n\n## Example of config.yaml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/docs/outputs/googlechat.md"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 32,
                  "endLine": 18,
                  "endColumn": 37,
                  "snippet": {
                    "text": "- [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n    - [Message Formatting](#message-formatting)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                      | Env var                      | Default value    | Description                                                                                                                                                                                                                                              |\n| -",
                    "rendered": {
                      "text": "- [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n    - [Message Formatting](#message-formatting)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                      | Env var                      | Default value    | Description                                                                                                                                                                                                                                              |\n| -",
                      "markdown": "`- [Table of content](#table-of-content)\n  - [Configuration](#configuration)\n  - [Example of config.yaml](#example-of-configyaml)\n  - [Additional info](#additional-info)\n    - [Message Formatting](#message-formatting)\n  - [Screenshots](#screenshots)\n\n## Configuration\n\n| Setting                      | Env var                      | Default value    | Description                                                                                                                                                                                                                                              |\n| -`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/stats_prometheus_test.go"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 148,
                  "endLine": 27,
                  "endColumn": 156,
                  "snippet": {
                    "text": "\t\tt.Errorf(\"Error getting Metrics from promauto\")\n\t}\n\tmetricDescString := mm.Desc().String()\n\trequire.Equal(t, metricDescString, \"Desc{fqName: \\\"falcosecurity_falcosidekick_falco_events_total\\\", help: \\\"\\\", constLabels: {}, variableLabels: {hostname,rule,priority,priority_raw,source,k8s_ns_name,k8s_pod_name,test}}\")\n}\n",
                    "rendered": {
                      "text": "\t\tt.Errorf(\"Error getting Metrics from promauto\")\n\t}\n\tmetricDescString := mm.Desc().String()\n\trequire.Equal(t, metricDescString, \"Desc{fqName: \\\"falcosecurity_falcosidekick_falco_events_total\\\", help: \\\"\\\", constLabels: {}, variableLabels: {hostname,rule,priority,priority_raw,source,k8s_ns_name,k8s_pod_name,test}}\")\n}\n",
                      "markdown": "`\t\tt.Errorf(\"Error getting Metrics from promauto\")\n\t}\n\tmetricDescString := mm.Desc().String()\n\trequire.Equal(t, metricDescString, \"Desc{fqName: \\\"falcosecurity_falcosidekick_falco_events_total\\\", help: \\\"\\\", constLabels: {}, variableLabels: {hostname,rule,priority,priority_raw,source,k8s_ns_name,k8s_pod_name,test}}\")\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/stats_prometheus_test.go"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 23,
                  "endLine": 21,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\tc.Customfields[\"should*fail\"] = \"bar\"\n\n\tcv := getFalcoNewCounterVec(c)\n\tshouldbe := []string{\"hostname\", \"rule\", \"priority\", \"priority_raw\", \"source\", \"k8s_ns_name\", \"k8s_pod_name\", \"test\"}\n\tmm, err := cv.GetMetricWithLabelValues(shouldbe...)\n\tif err != nil {\n\t\tt.Errorf(\"Error getting Metrics from promauto\")\n",
                    "rendered": {
                      "text": "\tc.Customfields[\"should*fail\"] = \"bar\"\n\n\tcv := getFalcoNewCounterVec(c)\n\tshouldbe := []string{\"hostname\", \"rule\", \"priority\", \"priority_raw\", \"source\", \"k8s_ns_name\", \"k8s_pod_name\", \"test\"}\n\tmm, err := cv.GetMetricWithLabelValues(shouldbe...)\n\tif err != nil {\n\t\tt.Errorf(\"Error getting Metrics from promauto\")\n",
                      "markdown": "`\tc.Customfields[\"should*fail\"] = \"bar\"\n\n\tcv := getFalcoNewCounterVec(c)\n\tshouldbe := []string{\"hostname\", \"rule\", \"priority\", \"priority_raw\", \"source\", \"k8s_ns_name\", \"k8s_pod_name\", \"test\"}\n\tmm, err := cv.GetMetricWithLabelValues(shouldbe...)\n\tif err != nil {\n\t\tt.Errorf(\"Error getting Metrics from promauto\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/handlers.go"
                },
                "region": {
                  "startLine": 171,
                  "startColumn": 14,
                  "endLine": 171,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\tif falcopayload.Hostname != \"\" {\n\t\tpromLabels[\"hostname\"] = falcopayload.Hostname\n\t} else {\n\t\tpromLabels[\"hostname\"] = \"unknown\"\n\t}\n\n\tfor key, value := range config.Customfields {\n",
                    "rendered": {
                      "text": "\tif falcopayload.Hostname != \"\" {\n\t\tpromLabels[\"hostname\"] = falcopayload.Hostname\n\t} else {\n\t\tpromLabels[\"hostname\"] = \"unknown\"\n\t}\n\n\tfor key, value := range config.Customfields {\n",
                      "markdown": "`\tif falcopayload.Hostname != \"\" {\n\t\tpromLabels[\"hostname\"] = falcopayload.Hostname\n\t} else {\n\t\tpromLabels[\"hostname\"] = \"unknown\"\n\t}\n\n\tfor key, value := range config.Customfields {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/handlers.go"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 14,
                  "endLine": 169,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\t\"k8s_pod_name\": kp,\n\t}\n\tif falcopayload.Hostname != \"\" {\n\t\tpromLabels[\"hostname\"] = falcopayload.Hostname\n\t} else {\n\t\tpromLabels[\"hostname\"] = \"unknown\"\n\t}\n",
                    "rendered": {
                      "text": "\t\t\"k8s_pod_name\": kp,\n\t}\n\tif falcopayload.Hostname != \"\" {\n\t\tpromLabels[\"hostname\"] = falcopayload.Hostname\n\t} else {\n\t\tpromLabels[\"hostname\"] = \"unknown\"\n\t}\n",
                      "markdown": "`\t\t\"k8s_pod_name\": kp,\n\t}\n\tif falcopayload.Hostname != \"\" {\n\t\tpromLabels[\"hostname\"] = falcopayload.Hostname\n\t} else {\n\t\tpromLabels[\"hostname\"] = \"unknown\"\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/handlers.go"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 113,
                  "endLine": 84,
                  "endColumn": 121,
                  "snippet": {
                    "text": "\n// testHandler sends a test event to all enabled outputs.\nfunc testHandler(w http.ResponseWriter, r *http.Request) {\n\tr.Body = io.NopCloser(bytes.NewReader([]byte(`{\"output\":\"This is a test from falcosidekick\",\"priority\":\"Debug\",\"hostname\": \"falcosidekick\", \"rule\":\"Test rule\", \"time\":\"` + time.Now().UTC().Format(time.RFC3339) + `\",\"output_fields\": {\"proc.name\":\"falcosidekick\",\"user.name\":\"falcosidekick\"}, \"tags\":[\"test\",\"example\"]}`)))\n\tmainHandler(w, r)\n}\n\n",
                    "rendered": {
                      "text": "\n// testHandler sends a test event to all enabled outputs.\nfunc testHandler(w http.ResponseWriter, r *http.Request) {\n\tr.Body = io.NopCloser(bytes.NewReader([]byte(`{\"output\":\"This is a test from falcosidekick\",\"priority\":\"Debug\",\"hostname\": \"falcosidekick\", \"rule\":\"Test rule\", \"time\":\"` + time.Now().UTC().Format(time.RFC3339) + `\",\"output_fields\": {\"proc.name\":\"falcosidekick\",\"user.name\":\"falcosidekick\"}, \"tags\":[\"test\",\"example\"]}`)))\n\tmainHandler(w, r)\n}\n\n",
                      "markdown": "`\n// testHandler sends a test event to all enabled outputs.\nfunc testHandler(w http.ResponseWriter, r *http.Request) {\n\tr.Body = io.NopCloser(bytes.NewReader([]byte(`{\"output\":\"This is a test from falcosidekick\",\"priority\":\"Debug\",\"hostname\": \"falcosidekick\", \"rule\":\"Test rule\", \"time\":\"` + time.Now().UTC().Format(time.RFC3339) + `\",\"output_fields\": {\"proc.name\":\"falcosidekick\",\"user.name\":\"falcosidekick\"}, \"tags\":[\"test\",\"example\"]}`)))\n\tmainHandler(w, r)\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 12,
                  "endLine": 13,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n* If you plan to do something more involved, first create an issue to discuss your ideas\n\n* Should you wish to work on an issue, please claim it first by commenting on the GitHub issue that you want to work on it. This is to prevent duplicated efforts from contributors on the same issue.\n\n## Pull Request Checklist\n\n",
                    "rendered": {
                      "text": "\n* If you plan to do something more involved, first create an issue to discuss your ideas\n\n* Should you wish to work on an issue, please claim it first by commenting on the GitHub issue that you want to work on it. This is to prevent duplicated efforts from contributors on the same issue.\n\n## Pull Request Checklist\n\n",
                      "markdown": "`\n* If you plan to do something more involved, first create an issue to discuss your ideas\n\n* Should you wish to work on an issue, please claim it first by commenting on the GitHub issue that you want to work on it. This is to prevent duplicated efforts from contributors on the same issue.\n\n## Pull Request Checklist\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/falcosidekick.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 32,
                  "endLine": 3,
                  "endColumn": 38,
                  "snippet": {
                    "text": "# Contributing\n\nFirst off, thanks for taking the time to contribute!\n\n## Steps to Contribute\n\n",
                    "rendered": {
                      "text": "# Contributing\n\nFirst off, thanks for taking the time to contribute!\n\n## Steps to Contribute\n\n",
                      "markdown": "`# Contributing\n\nFirst off, thanks for taking the time to contribute!\n\n## Steps to Contribute\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}