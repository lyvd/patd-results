{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/cap_test.go"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 14,
                  "endLine": 254,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\tif err != nil {\n\t\t\tt.Fatalf(\"failed to get PR_KEEP_CAPS: %v\", err)\n\t\t}\n\t\tif before != expect {\n\t\t\tt.Fatalf(\"invalid initial state: got=%d want=%d\", before, expect)\n\t\t}\n\n",
                    "rendered": {
                      "text": "\t\tif err != nil {\n\t\t\tt.Fatalf(\"failed to get PR_KEEP_CAPS: %v\", err)\n\t\t}\n\t\tif before != expect {\n\t\t\tt.Fatalf(\"invalid initial state: got=%d want=%d\", before, expect)\n\t\t}\n\n",
                      "markdown": "`\t\tif err != nil {\n\t\t\tt.Fatalf(\"failed to get PR_KEEP_CAPS: %v\", err)\n\t\t}\n\t\tif before != expect {\n\t\t\tt.Fatalf(\"invalid initial state: got=%d want=%d\", before, expect)\n\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/cap_test.go"
                },
                "region": {
                  "startLine": 249,
                  "startColumn": 1,
                  "endLine": 249,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t}\n\n\tfor i := 0; i < 100; i++ {\n\t\texpect := i & 1\n\t\tbefore, err := Prctl(prGetKeepCaps)\n\t\tif err != nil {\n\t\t\tt.Fatalf(\"failed to get PR_KEEP_CAPS: %v\", err)\n",
                    "rendered": {
                      "text": "\t}\n\n\tfor i := 0; i < 100; i++ {\n\t\texpect := i & 1\n\t\tbefore, err := Prctl(prGetKeepCaps)\n\t\tif err != nil {\n\t\t\tt.Fatalf(\"failed to get PR_KEEP_CAPS: %v\", err)\n",
                      "markdown": "`\t}\n\n\tfor i := 0; i < 100; i++ {\n\t\texpect := i & 1\n\t\tbefore, err := Prctl(prGetKeepCaps)\n\t\tif err != nil {\n\t\t\tt.Fatalf(\"failed to get PR_KEEP_CAPS: %v\", err)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/cap_test.go"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 5,
                  "endLine": 49,
                  "snippet": {
                    "text": "}\n\nfunc TestString(t *testing.T) {\n\ta := CHOWN\n\tif got, want := a.String(), \"cap_chown\"; got != want {\n\t\tt.Fatalf(\"pretty basic failure: got=%q, want=%q\", got, want)\n\t}\n}\n",
                    "rendered": {
                      "text": "}\n\nfunc TestString(t *testing.T) {\n\ta := CHOWN\n\tif got, want := a.String(), \"cap_chown\"; got != want {\n\t\tt.Fatalf(\"pretty basic failure: got=%q, want=%q\", got, want)\n\t}\n}\n",
                      "markdown": "`}\n\nfunc TestString(t *testing.T) {\n\ta := CHOWN\n\tif got, want := a.String(), \"cap_chown\"; got != want {\n\t\tt.Fatalf(\"pretty basic failure: got=%q, want=%q\", got, want)\n\t}\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/names.go"
                },
                "region": {
                  "startLine": 26,
                  "endLine": 26,
                  "endColumn": 7,
                  "snippet": {
                    "text": "const (\n\t// CHOWN allows a process to arbitrarily change the user and\n\t// group ownership of a file.\n\tCHOWN Value = iota\n\n\t// DAC_OVERRIDE allows a process to override of all Discretionary\n\t// Access Control (DAC) access, including ACL execute\n",
                    "rendered": {
                      "text": "const (\n\t// CHOWN allows a process to arbitrarily change the user and\n\t// group ownership of a file.\n\tCHOWN Value = iota\n\n\t// DAC_OVERRIDE allows a process to override of all Discretionary\n\t// Access Control (DAC) access, including ACL execute\n",
                      "markdown": "`const (\n\t// CHOWN allows a process to arbitrarily change the user and\n\t// group ownership of a file.\n\tCHOWN Value = iota\n\n\t// DAC_OVERRIDE allows a process to override of all Discretionary\n\t// Access Control (DAC) access, including ACL execute\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/convenience.go"
                },
                "region": {
                  "startLine": 319,
                  "startColumn": 7,
                  "endLine": 319,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\tif n := len(args); n > 5 {\n\t\treturn -1, fmt.Errorf(\"prctl supports up to 5 arguments (not %d)\", n)\n\t}\n\tstate, sc := scwStateSC()\n\tdefer scwSetState(launchBlocked, state, -1)\n\tas := make([]uintptr, 5)\n\tcopy(as, args)\n",
                    "rendered": {
                      "text": "\tif n := len(args); n > 5 {\n\t\treturn -1, fmt.Errorf(\"prctl supports up to 5 arguments (not %d)\", n)\n\t}\n\tstate, sc := scwStateSC()\n\tdefer scwSetState(launchBlocked, state, -1)\n\tas := make([]uintptr, 5)\n\tcopy(as, args)\n",
                      "markdown": "`\tif n := len(args); n > 5 {\n\t\treturn -1, fmt.Errorf(\"prctl supports up to 5 arguments (not %d)\", n)\n\t}\n\tstate, sc := scwStateSC()\n\tdefer scwSetState(launchBlocked, state, -1)\n\tas := make([]uintptr, 5)\n\tcopy(as, args)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/convenience.go"
                },
                "region": {
                  "startLine": 301,
                  "startColumn": 7,
                  "endLine": 301,
                  "endColumn": 11,
                  "snippet": {
                    "text": "// completely lower the Effective Flag of the process Set before\n// returning.\nfunc SetGroups(gid int, suppl ...int) error {\n\tstate, sc := scwStateSC()\n\tdefer scwSetState(launchBlocked, state, -1)\n\treturn sc.setGroups(gid, suppl)\n}\n",
                    "rendered": {
                      "text": "// completely lower the Effective Flag of the process Set before\n// returning.\nfunc SetGroups(gid int, suppl ...int) error {\n\tstate, sc := scwStateSC()\n\tdefer scwSetState(launchBlocked, state, -1)\n\treturn sc.setGroups(gid, suppl)\n}\n",
                      "markdown": "`// completely lower the Effective Flag of the process Set before\n// returning.\nfunc SetGroups(gid int, suppl ...int) error {\n\tstate, sc := scwStateSC()\n\tdefer scwSetState(launchBlocked, state, -1)\n\treturn sc.setGroups(gid, suppl)\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/convenience.go"
                },
                "region": {
                  "startLine": 253,
                  "startColumn": 7,
                  "endLine": 253,
                  "endColumn": 11,
                  "snippet": {
                    "text": "// perform any change of UID if cap.SETUID is available, and this\n// operation will not alter the Permitted Flag of the process' Set.\nfunc SetUID(uid int) error {\n\tstate, sc := scwStateSC()\n\tdefer scwSetState(launchBlocked, state, -1)\n\treturn sc.setUID(uid)\n}\n",
                    "rendered": {
                      "text": "// perform any change of UID if cap.SETUID is available, and this\n// operation will not alter the Permitted Flag of the process' Set.\nfunc SetUID(uid int) error {\n\tstate, sc := scwStateSC()\n\tdefer scwSetState(launchBlocked, state, -1)\n\treturn sc.setUID(uid)\n}\n",
                      "markdown": "`// perform any change of UID if cap.SETUID is available, and this\n// operation will not alter the Permitted Flag of the process' Set.\nfunc SetUID(uid int) error {\n\tstate, sc := scwStateSC()\n\tdefer scwSetState(launchBlocked, state, -1)\n\treturn sc.setUID(uid)\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/convenience.go"
                },
                "region": {
                  "startLine": 194,
                  "startColumn": 7,
                  "endLine": 194,
                  "endColumn": 11,
                  "snippet": {
                    "text": "// permission or because (some of) the Secbits are already locked for\n// the current process.\nfunc (m Mode) Set() error {\n\tstate, sc := scwStateSC()\n\tdefer scwSetState(launchBlocked, state, -1)\n\treturn sc.setMode(m)\n}\n",
                    "rendered": {
                      "text": "// permission or because (some of) the Secbits are already locked for\n// the current process.\nfunc (m Mode) Set() error {\n\tstate, sc := scwStateSC()\n\tdefer scwSetState(launchBlocked, state, -1)\n\treturn sc.setMode(m)\n}\n",
                      "markdown": "`// permission or because (some of) the Secbits are already locked for\n// the current process.\nfunc (m Mode) Set() error {\n\tstate, sc := scwStateSC()\n\tdefer scwSetState(launchBlocked, state, -1)\n\treturn sc.setMode(m)\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/convenience.go"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 7,
                  "endLine": 62,
                  "endColumn": 11,
                  "snippet": {
                    "text": "// will raise cap.SETPCAP in order to achieve this operation, and will\n// completely lower the Effective Flag of the process upon returning.\nfunc (s Secbits) Set() error {\n\tstate, sc := scwStateSC()\n\tdefer scwSetState(launchBlocked, state, -1)\n\treturn sc.setSecbits(s)\n}\n",
                    "rendered": {
                      "text": "// will raise cap.SETPCAP in order to achieve this operation, and will\n// completely lower the Effective Flag of the process upon returning.\nfunc (s Secbits) Set() error {\n\tstate, sc := scwStateSC()\n\tdefer scwSetState(launchBlocked, state, -1)\n\treturn sc.setSecbits(s)\n}\n",
                      "markdown": "`// will raise cap.SETPCAP in order to achieve this operation, and will\n// completely lower the Effective Flag of the process upon returning.\nfunc (s Secbits) Set() error {\n\tstate, sc := scwStateSC()\n\tdefer scwSetState(launchBlocked, state, -1)\n\treturn sc.setSecbits(s)\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/syscalls.go"
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 12,
                  "endLine": 121,
                  "snippet": {
                    "text": "\tscwCond.Broadcast()\n\tscwMu.Unlock()\n\n\treturn old, sc\n}\n",
                    "rendered": {
                      "text": "\tscwCond.Broadcast()\n\tscwMu.Unlock()\n\n\treturn old, sc\n}\n",
                      "markdown": "`\tscwCond.Broadcast()\n\tscwMu.Unlock()\n\n\treturn old, sc\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/syscalls.go"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 2,
                  "endLine": 104,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\t}\n\t\truntime.LockOSThread()\n\t\tif scwState == launchActive && scwTIDs[syscall.Gettid()] {\n\t\t\tsc = singlesc\n\t\t\t// note, we don't runtime.UnlockOSThread()\n\t\t\t// here because we have no reason to ever\n\t\t\t// allow this thread to return to normal use -\n",
                    "rendered": {
                      "text": "\t\t}\n\t\truntime.LockOSThread()\n\t\tif scwState == launchActive && scwTIDs[syscall.Gettid()] {\n\t\t\tsc = singlesc\n\t\t\t// note, we don't runtime.UnlockOSThread()\n\t\t\t// here because we have no reason to ever\n\t\t\t// allow this thread to return to normal use -\n",
                      "markdown": "`\t\t}\n\t\truntime.LockOSThread()\n\t\tif scwState == launchActive && scwTIDs[syscall.Gettid()] {\n\t\t\tsc = singlesc\n\t\t\t// note, we don't runtime.UnlockOSThread()\n\t\t\t// here because we have no reason to ever\n\t\t\t// allow this thread to return to normal use -\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/syscalls.go"
                },
                "region": {
                  "startLine": 96,
                  "endLine": 96,
                  "endColumn": 4,
                  "snippet": {
                    "text": "// writes, and then marks launchBlocked. Use scwSetState to perform\n// the reverse transition (blocked->returned state value).\nfunc scwStateSC() (launchState, *syscaller) {\n\tsc := multisc\n\tscwMu.Lock()\n\tfor {\n\t\tif scwState == launchIdle {\n",
                    "rendered": {
                      "text": "// writes, and then marks launchBlocked. Use scwSetState to perform\n// the reverse transition (blocked->returned state value).\nfunc scwStateSC() (launchState, *syscaller) {\n\tsc := multisc\n\tscwMu.Lock()\n\tfor {\n\t\tif scwState == launchIdle {\n",
                      "markdown": "`// writes, and then marks launchBlocked. Use scwSetState to perform\n// the reverse transition (blocked->returned state value).\nfunc scwStateSC() (launchState, *syscaller) {\n\tsc := multisc\n\tscwMu.Lock()\n\tfor {\n\t\tif scwState == launchIdle {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/goapps/captrace/captrace.go"
                },
                "region": {
                  "startLine": 225,
                  "startColumn": 6,
                  "endLine": 226,
                  "snippet": {
                    "text": "\t\tdefer tr.Process.Kill()\n\t\tdefer time.Sleep(1 * time.Second)\n\n\t\ttr = cmd\n\t}\n\n\tmu.Unlock()\n\ttr.Wait()\n",
                    "rendered": {
                      "text": "\t\tdefer tr.Process.Kill()\n\t\tdefer time.Sleep(1 * time.Second)\n\n\t\ttr = cmd\n\t}\n\n\tmu.Unlock()\n\ttr.Wait()\n",
                      "markdown": "`\t\tdefer tr.Process.Kill()\n\t\tdefer time.Sleep(1 * time.Second)\n\n\t\ttr = cmd\n\t}\n\n\tmu.Unlock()\n\ttr.Wait()\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/goapps/captrace/captrace.go"
                },
                "region": {
                  "startLine": 209,
                  "startColumn": 1,
                  "endLine": 209,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\ttids[*pid] = *pid\n\t} else if len(flag.Args()) != 0 {\n\t\targs := flag.Args()\n\t\tcmd := exec.Command(args[0], args[1:]...)\n\t\tcmd.Stdin = os.Stdin\n\t\tcmd.Stdout = os.Stdout\n\t\tcmd.Stderr = os.Stderr\n",
                    "rendered": {
                      "text": "\t\ttids[*pid] = *pid\n\t} else if len(flag.Args()) != 0 {\n\t\targs := flag.Args()\n\t\tcmd := exec.Command(args[0], args[1:]...)\n\t\tcmd.Stdin = os.Stdin\n\t\tcmd.Stdout = os.Stdout\n\t\tcmd.Stderr = os.Stderr\n",
                      "markdown": "`\t\ttids[*pid] = *pid\n\t} else if len(flag.Args()) != 0 {\n\t\targs := flag.Args()\n\t\tcmd := exec.Command(args[0], args[1:]...)\n\t\tcmd.Stdin = os.Stdin\n\t\tcmd.Stdout = os.Stdout\n\t\tcmd.Stderr = os.Stderr\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/goapps/captrace/captrace.go"
                },
                "region": {
                  "startLine": 184,
                  "startColumn": 32,
                  "endLine": 184,
                  "endColumn": 36,
                  "snippet": {
                    "text": "Effective Flag capabilities are checked in a running process{thread}.\nThe monitoring is performed indirectly using the bpftrace tool.\n\nEach line logged has a timestamp at which the tracing program is able to\nsummarize the return value of the check. A return value of \" -> 0\" implies\nthe check succeeded and confirms the process{thread} does have the\nspecified Effective capability.\n",
                    "rendered": {
                      "text": "Effective Flag capabilities are checked in a running process{thread}.\nThe monitoring is performed indirectly using the bpftrace tool.\n\nEach line logged has a timestamp at which the tracing program is able to\nsummarize the return value of the check. A return value of \" -> 0\" implies\nthe check succeeded and confirms the process{thread} does have the\nspecified Effective capability.\n",
                      "markdown": "`Effective Flag capabilities are checked in a running process{thread}.\nThe monitoring is performed indirectly using the bpftrace tool.\n\nEach line logged has a timestamp at which the tracing program is able to\nsummarize the return value of the check. A return value of \" -> 0\" implies\nthe check succeeded and confirms the process{thread} does have the\nspecified Effective capability.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/goapps/captrace/captrace.go"
                },
                "region": {
                  "startLine": 157,
                  "endLine": 157,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n// tracer invokes bpftool it returns an error if the invocation fails.\nfunc tracer() (*exec.Cmd, error) {\n\tcmd := exec.Command(*bpftrace, \"-e\", `kprobe:cap_capable {\n    printf(\"CB %d %d %d %d %s\\n\", pid, tid, arg2, arg3, comm);\n}\nkretprobe:cap_capable {\n",
                    "rendered": {
                      "text": "\n// tracer invokes bpftool it returns an error if the invocation fails.\nfunc tracer() (*exec.Cmd, error) {\n\tcmd := exec.Command(*bpftrace, \"-e\", `kprobe:cap_capable {\n    printf(\"CB %d %d %d %d %s\\n\", pid, tid, arg2, arg3, comm);\n}\nkretprobe:cap_capable {\n",
                      "markdown": "`\n// tracer invokes bpftool it returns an error if the invocation fails.\nfunc tracer() (*exec.Cmd, error) {\n\tcmd := exec.Command(*bpftrace, \"-e\", `kprobe:cap_capable {\n    printf(\"CB %d %d %d %d %s\\n\", pid, tid, arg2, arg3, comm);\n}\nkretprobe:cap_capable {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/goapps/captrace/captrace.go"
                },
                "region": {
                  "startLine": 85,
                  "endLine": 85,
                  "endColumn": 4,
                  "snippet": {
                    "text": "// interest.\nfunc tailTrace(cmd *exec.Cmd, out io.Reader) {\n\tlaunched := false\n\tsc := bufio.NewScanner(out)\n\tfor sc.Scan() {\n\t\tfields := strings.Split(sc.Text(), \" \")\n\t\tif len(fields) < 4 {\n",
                    "rendered": {
                      "text": "// interest.\nfunc tailTrace(cmd *exec.Cmd, out io.Reader) {\n\tlaunched := false\n\tsc := bufio.NewScanner(out)\n\tfor sc.Scan() {\n\t\tfields := strings.Split(sc.Text(), \" \")\n\t\tif len(fields) < 4 {\n",
                      "markdown": "`// interest.\nfunc tailTrace(cmd *exec.Cmd, out io.Reader) {\n\tlaunched := false\n\tsc := bufio.NewScanner(out)\n\tfor sc.Scan() {\n\t\tfields := strings.Split(sc.Text(), \" \")\n\t\tif len(fields) < 4 {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/goapps/captrace/captrace.go"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 48,
                  "endLine": 182,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\nThis tool monitors cap_capable() kernel execution to summarize when\nEffective Flag capabilities are checked in a running process{thread}.\nThe monitoring is performed indirectly using the bpftrace tool.\n\nEach line logged has a timestamp at which the tracing program is able to\nsummarize the return value of the check. A return value of \" -> 0\" implies\n",
                    "rendered": {
                      "text": "\nThis tool monitors cap_capable() kernel execution to summarize when\nEffective Flag capabilities are checked in a running process{thread}.\nThe monitoring is performed indirectly using the bpftrace tool.\n\nEach line logged has a timestamp at which the tracing program is able to\nsummarize the return value of the check. A return value of \" -> 0\" implies\n",
                      "markdown": "`\nThis tool monitors cap_capable() kernel execution to summarize when\nEffective Flag capabilities are checked in a running process{thread}.\nThe monitoring is performed indirectly using the bpftrace tool.\n\nEach line logged has a timestamp at which the tracing program is able to\nsummarize the return value of the check. A return value of \" -> 0\" implies\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/goapps/captrace/captrace.go"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 22,
                  "endLine": 81,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t}\n}\n\n// tailTrace tails the bpftrace command output recognizing lines of\n// interest.\nfunc tailTrace(cmd *exec.Cmd, out io.Reader) {\n\tlaunched := false\n",
                    "rendered": {
                      "text": "\t}\n}\n\n// tailTrace tails the bpftrace command output recognizing lines of\n// interest.\nfunc tailTrace(cmd *exec.Cmd, out io.Reader) {\n\tlaunched := false\n",
                      "markdown": "`\t}\n}\n\n// tailTrace tails the bpftrace command output recognizing lines of\n// interest.\nfunc tailTrace(cmd *exec.Cmd, out io.Reader) {\n\tlaunched := false\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/goapps/captrace/captrace.go"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 27,
                  "endColumn": 10,
                  "snippet": {
                    "text": ")\n\nvar (\n\tbpftrace = flag.String(\"bpftrace\", \"bpftrace\", \"command to launch bpftrace\")\n\tdebug    = flag.Bool(\"debug\", false, \"more output\")\n\tpid      = flag.Int(\"pid\", -1, \"PID of target process to trace (-1 = trace all)\")\n)\n",
                    "rendered": {
                      "text": ")\n\nvar (\n\tbpftrace = flag.String(\"bpftrace\", \"bpftrace\", \"command to launch bpftrace\")\n\tdebug    = flag.Bool(\"debug\", false, \"more output\")\n\tpid      = flag.Int(\"pid\", -1, \"PID of target process to trace (-1 = trace all)\")\n)\n",
                      "markdown": "`)\n\nvar (\n\tbpftrace = flag.String(\"bpftrace\", \"bpftrace\", \"command to launch bpftrace\")\n\tdebug    = flag.Bool(\"debug\", false, \"more output\")\n\tpid      = flag.Int(\"pid\", -1, \"PID of target process to trace (-1 = trace all)\")\n)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/capso/Makefile"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 102,
                  "endLine": 16,
                  "endColumn": 107,
                  "snippet": {
                    "text": "\t$(MAKE) -C ../../libcap loader.txt\n\ncapso.o: capso.c capso.h ../../libcap/execable.h ../../libcap/loader.txt\n\t$(CC) $(CFLAGS) $(CPPFLAGS) -DLIBCAP_VERSION=\\\"libcap-$(VERSION).$(MINOR)\\\" -DSHARED_LOADER=\\\"$(shell cat ../../libcap/loader.txt)\\\" -c capso.c -o $@\n\ncapso.so: capso.o\n\t$(LD) $(LDFLAGS) -o $@ $< $(LIBCAPLIB) -ldl -Wl,-e,__so_start\n",
                    "rendered": {
                      "text": "\t$(MAKE) -C ../../libcap loader.txt\n\ncapso.o: capso.c capso.h ../../libcap/execable.h ../../libcap/loader.txt\n\t$(CC) $(CFLAGS) $(CPPFLAGS) -DLIBCAP_VERSION=\\\"libcap-$(VERSION).$(MINOR)\\\" -DSHARED_LOADER=\\\"$(shell cat ../../libcap/loader.txt)\\\" -c capso.c -o $@\n\ncapso.so: capso.o\n\t$(LD) $(LDFLAGS) -o $@ $< $(LIBCAPLIB) -ldl -Wl,-e,__so_start\n",
                      "markdown": "`\t$(MAKE) -C ../../libcap loader.txt\n\ncapso.o: capso.c capso.h ../../libcap/execable.h ../../libcap/loader.txt\n\t$(CC) $(CFLAGS) $(CPPFLAGS) -DLIBCAP_VERSION=\\\"libcap-$(VERSION).$(MINOR)\\\" -DSHARED_LOADER=\\\"$(shell cat ../../libcap/loader.txt)\\\" -c capso.c -o $@\n\ncapso.so: capso.o\n\t$(LD) $(LDFLAGS) -o $@ $< $(LIBCAPLIB) -ldl -Wl,-e,__so_start\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/bug216610/Dockerfile"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 11,
                  "endLine": 7,
                  "snippet": {
                    "text": "# A directory to share files via.\nRUN mkdir /shared\n\nRUN apt-get update\nRUN apt-get install -y gcc-arm-linux-gnueabi binutils-arm-linux-gnueabi\nRUN apt-get install -y gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu\n\n# create a builder user\n",
                    "rendered": {
                      "text": "# A directory to share files via.\nRUN mkdir /shared\n\nRUN apt-get update\nRUN apt-get install -y gcc-arm-linux-gnueabi binutils-arm-linux-gnueabi\nRUN apt-get install -y gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu\n\n# create a builder user\n",
                      "markdown": "`# A directory to share files via.\nRUN mkdir /shared\n\nRUN apt-get update\nRUN apt-get install -y gcc-arm-linux-gnueabi binutils-arm-linux-gnueabi\nRUN apt-get install -y gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu\n\n# create a builder user\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/bug216610/Dockerfile"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 29,
                  "endLine": 13,
                  "endColumn": 36,
                  "snippet": {
                    "text": "# create a builder user\nRUN echo \"builder:x:1000:1000:,,,:/home/builder:/bin/bash\" >> /etc/passwd\nRUN echo \"builder:*:19289:0:99999:7:::\" >> /etc/shadow\nRUN mkdir -p /home/builder && chown builder.bin /home/builder\n",
                    "rendered": {
                      "text": "# create a builder user\nRUN echo \"builder:x:1000:1000:,,,:/home/builder:/bin/bash\" >> /etc/passwd\nRUN echo \"builder:*:19289:0:99999:7:::\" >> /etc/shadow\nRUN mkdir -p /home/builder && chown builder.bin /home/builder\n",
                      "markdown": "`# create a builder user\nRUN echo \"builder:x:1000:1000:,,,:/home/builder:/bin/bash\" >> /etc/passwd\nRUN echo \"builder:*:19289:0:99999:7:::\" >> /etc/shadow\nRUN mkdir -p /home/builder && chown builder.bin /home/builder\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/bug216610/Dockerfile"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 3,
                  "endLine": 8,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\nRUN apt-get update\nRUN apt-get install -y gcc-arm-linux-gnueabi binutils-arm-linux-gnueabi\nRUN apt-get install -y gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu\n\n# create a builder user\nRUN echo \"builder:x:1000:1000:,,,:/home/builder:/bin/bash\" >> /etc/passwd\n",
                    "rendered": {
                      "text": "\nRUN apt-get update\nRUN apt-get install -y gcc-arm-linux-gnueabi binutils-arm-linux-gnueabi\nRUN apt-get install -y gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu\n\n# create a builder user\nRUN echo \"builder:x:1000:1000:,,,:/home/builder:/bin/bash\" >> /etc/passwd\n",
                      "markdown": "`\nRUN apt-get update\nRUN apt-get install -y gcc-arm-linux-gnueabi binutils-arm-linux-gnueabi\nRUN apt-get install -y gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu\n\n# create a builder user\nRUN echo \"builder:x:1000:1000:,,,:/home/builder:/bin/bash\" >> /etc/passwd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/bug216610/Dockerfile"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 3,
                  "endLine": 7,
                  "endColumn": 12,
                  "snippet": {
                    "text": "RUN mkdir /shared\n\nRUN apt-get update\nRUN apt-get install -y gcc-arm-linux-gnueabi binutils-arm-linux-gnueabi\nRUN apt-get install -y gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu\n\n# create a builder user\n",
                    "rendered": {
                      "text": "RUN mkdir /shared\n\nRUN apt-get update\nRUN apt-get install -y gcc-arm-linux-gnueabi binutils-arm-linux-gnueabi\nRUN apt-get install -y gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu\n\n# create a builder user\n",
                      "markdown": "`RUN mkdir /shared\n\nRUN apt-get update\nRUN apt-get install -y gcc-arm-linux-gnueabi binutils-arm-linux-gnueabi\nRUN apt-get install -y gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu\n\n# create a builder user\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/bug216610/Dockerfile"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3,
                  "endLine": 6,
                  "endColumn": 12,
                  "snippet": {
                    "text": "# A directory to share files via.\nRUN mkdir /shared\n\nRUN apt-get update\nRUN apt-get install -y gcc-arm-linux-gnueabi binutils-arm-linux-gnueabi\nRUN apt-get install -y gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu\n\n",
                    "rendered": {
                      "text": "# A directory to share files via.\nRUN mkdir /shared\n\nRUN apt-get update\nRUN apt-get install -y gcc-arm-linux-gnueabi binutils-arm-linux-gnueabi\nRUN apt-get install -y gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu\n\n",
                      "markdown": "`# A directory to share files via.\nRUN mkdir /shared\n\nRUN apt-get update\nRUN apt-get install -y gcc-arm-linux-gnueabi binutils-arm-linux-gnueabi\nRUN apt-get install -y gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/pam_cap/execable.c"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 36,
                  "endLine": 52,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\t   \"keepcaps      - workaround for apps that setuid without this\\n\"\n\t   \"autoauth      - pam_cap.so to always succeed for the 'auth' phase\\n\"\n\t   \"default=<iab> - fallback IAB value if there is no '*' rule\\n\"\n\t   \"defer         - apply IAB value at pam_exit (not via setcred)\\n\",\n\tcmd);\n}\n",
                    "rendered": {
                      "text": "\t   \"keepcaps      - workaround for apps that setuid without this\\n\"\n\t   \"autoauth      - pam_cap.so to always succeed for the 'auth' phase\\n\"\n\t   \"default=<iab> - fallback IAB value if there is no '*' rule\\n\"\n\t   \"defer         - apply IAB value at pam_exit (not via setcred)\\n\",\n\tcmd);\n}\n",
                      "markdown": "`\t   \"keepcaps      - workaround for apps that setuid without this\\n\"\n\t   \"autoauth      - pam_cap.so to always succeed for the 'auth' phase\\n\"\n\t   \"default=<iab> - fallback IAB value if there is no '*' rule\\n\"\n\t   \"defer         - apply IAB value at pam_exit (not via setcred)\\n\",\n\tcmd);\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/pam_cap/execable.c"
                },
                "region": {
                  "startLine": 23,
                  "endLine": 23,
                  "endColumn": 5,
                  "snippet": {
                    "text": "{\n    const char *cmd = \"<pam_cap.so>\";\n    if (argv != NULL) {\n\tcmd = argv[0];\n    }\n\n    printf(\n",
                    "rendered": {
                      "text": "{\n    const char *cmd = \"<pam_cap.so>\";\n    if (argv != NULL) {\n\tcmd = argv[0];\n    }\n\n    printf(\n",
                      "markdown": "`{\n    const char *cmd = \"<pam_cap.so>\";\n    if (argv != NULL) {\n\tcmd = argv[0];\n    }\n\n    printf(\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/pam_cap/capability.conf"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 7,
                  "endLine": 46,
                  "endColumn": 11,
                  "snippet": {
                    "text": "## reading, you might think this is a security problem waiting to\n## happen, but it defaults to not being so in this sample file!\n## Further, by 'get', we mean 'get in their IAB sets'. That is, if you\n## look at a random process, even one run by root, you will see it has\n## no IAB capabilities (by default):\n##\n##   $ /sbin/capsh --decode=$(grep CapInh /proc/1/status|awk '{print $2}')\n",
                    "rendered": {
                      "text": "## reading, you might think this is a security problem waiting to\n## happen, but it defaults to not being so in this sample file!\n## Further, by 'get', we mean 'get in their IAB sets'. That is, if you\n## look at a random process, even one run by root, you will see it has\n## no IAB capabilities (by default):\n##\n##   $ /sbin/capsh --decode=$(grep CapInh /proc/1/status|awk '{print $2}')\n",
                      "markdown": "`## reading, you might think this is a security problem waiting to\n## happen, but it defaults to not being so in this sample file!\n## Further, by 'get', we mean 'get in their IAB sets'. That is, if you\n## look at a random process, even one run by root, you will see it has\n## no IAB capabilities (by default):\n##\n##   $ /sbin/capsh --decode=$(grep CapInh /proc/1/status|awk '{print $2}')\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/doc/cap_from_text.3"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 68,
                  "endLine": 116,
                  "endColumn": 3,
                  "snippet": {
                    "text": "capability individually.\n.PP\nUnnamed capabilities can also be specified by number. This feature\nensures that libcap can support capabilities that were not allocated\nat the time libcap was compiled. However, generally upgrading libcap\nwill add names for recently allocated capabilities.\n.PP\nThe\n",
                    "rendered": {
                      "text": "capability individually.\n.PP\nUnnamed capabilities can also be specified by number. This feature\nensures that libcap can support capabilities that were not allocated\nat the time libcap was compiled. However, generally upgrading libcap\nwill add names for recently allocated capabilities.\n.PP\nThe\n",
                      "markdown": "`capability individually.\n.PP\nUnnamed capabilities can also be specified by number. This feature\nensures that libcap can support capabilities that were not allocated\nat the time libcap was compiled. However, generally upgrading libcap\nwill add names for recently allocated capabilities.\n.PP\nThe\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/doc/cap_from_text.3"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 6,
                  "endLine": 116,
                  "endColumn": 12,
                  "snippet": {
                    "text": ".PP\nUnnamed capabilities can also be specified by number. This feature\nensures that libcap can support capabilities that were not allocated\nat the time libcap was compiled. However, generally upgrading libcap\nwill add names for recently allocated capabilities.\n.PP\nThe\n",
                    "rendered": {
                      "text": ".PP\nUnnamed capabilities can also be specified by number. This feature\nensures that libcap can support capabilities that were not allocated\nat the time libcap was compiled. However, generally upgrading libcap\nwill add names for recently allocated capabilities.\n.PP\nThe\n",
                      "markdown": "`.PP\nUnnamed capabilities can also be specified by number. This feature\nensures that libcap can support capabilities that were not allocated\nat the time libcap was compiled. However, generally upgrading libcap\nwill add names for recently allocated capabilities.\n.PP\nThe\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/doc/crosslink.sh"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 17,
                  "endLine": 4,
                  "endColumn": 21,
                  "snippet": {
                    "text": "#!/bin/bash\n#\n# So many cross links to maintain. Here is a script that I've used to\n# validate things at least conform to some structure:\n#\nfor x in *.? ; do\n    y=$(grep -F '.so m' ${x} | awk '{print $2}' | sed -e 's/man..//')\n",
                    "rendered": {
                      "text": "#!/bin/bash\n#\n# So many cross links to maintain. Here is a script that I've used to\n# validate things at least conform to some structure:\n#\nfor x in *.? ; do\n    y=$(grep -F '.so m' ${x} | awk '{print $2}' | sed -e 's/man..//')\n",
                      "markdown": "`#!/bin/bash\n#\n# So many cross links to maintain. Here is a script that I've used to\n# validate things at least conform to some structure:\n#\nfor x in *.? ; do\n    y=$(grep -F '.so m' ${x} | awk '{print $2}' | sed -e 's/man..//')\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/doc/crosslink.sh"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 3,
                  "endLine": 14,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    echo\n    echo \"###########\"\n    echo \"${x} => ${y}\"\n    grep -F \"${x%.*}\" \"${y}\"\ndone\n",
                    "rendered": {
                      "text": "    echo\n    echo \"###########\"\n    echo \"${x} => ${y}\"\n    grep -F \"${x%.*}\" \"${y}\"\ndone\n",
                      "markdown": "`    echo\n    echo \"###########\"\n    echo \"${x} => ${y}\"\n    grep -F \"${x%.*}\" \"${y}\"\ndone\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/doc/crosslink.sh"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 49,
                  "endLine": 7,
                  "endColumn": 54,
                  "snippet": {
                    "text": "# validate things at least conform to some structure:\n#\nfor x in *.? ; do\n    y=$(grep -F '.so m' ${x} | awk '{print $2}' | sed -e 's/man..//')\n    if [ -z \"${y}\" ]; then\n\tcontinue\n    fi\n",
                    "rendered": {
                      "text": "# validate things at least conform to some structure:\n#\nfor x in *.? ; do\n    y=$(grep -F '.so m' ${x} | awk '{print $2}' | sed -e 's/man..//')\n    if [ -z \"${y}\" ]; then\n\tcontinue\n    fi\n",
                      "markdown": "`# validate things at least conform to some structure:\n#\nfor x in *.? ; do\n    y=$(grep -F '.so m' ${x} | awk '{print $2}' | sed -e 's/man..//')\n    if [ -z \"${y}\" ]; then\n\tcontinue\n    fi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/doc/crosslink.sh"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 30,
                  "endLine": 7,
                  "endColumn": 35,
                  "snippet": {
                    "text": "# validate things at least conform to some structure:\n#\nfor x in *.? ; do\n    y=$(grep -F '.so m' ${x} | awk '{print $2}' | sed -e 's/man..//')\n    if [ -z \"${y}\" ]; then\n\tcontinue\n    fi\n",
                    "rendered": {
                      "text": "# validate things at least conform to some structure:\n#\nfor x in *.? ; do\n    y=$(grep -F '.so m' ${x} | awk '{print $2}' | sed -e 's/man..//')\n    if [ -z \"${y}\" ]; then\n\tcontinue\n    fi\n",
                      "markdown": "`# validate things at least conform to some structure:\n#\nfor x in *.? ; do\n    y=$(grep -F '.so m' ${x} | awk '{print $2}' | sed -e 's/man..//')\n    if [ -z \"${y}\" ]; then\n\tcontinue\n    fi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/doc/crosslink.sh"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 44,
                  "endLine": 3,
                  "endColumn": 52,
                  "snippet": {
                    "text": "#!/bin/bash\n#\n# So many cross links to maintain. Here is a script that I've used to\n# validate things at least conform to some structure:\n#\nfor x in *.? ; do\n",
                    "rendered": {
                      "text": "#!/bin/bash\n#\n# So many cross links to maintain. Here is a script that I've used to\n# validate things at least conform to some structure:\n#\nfor x in *.? ; do\n",
                      "markdown": "`#!/bin/bash\n#\n# So many cross links to maintain. Here is a script that I've used to\n# validate things at least conform to some structure:\n#\nfor x in *.? ; do\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/capso/capso.c"
                },
                "region": {
                  "startLine": 311,
                  "startColumn": 29,
                  "endLine": 311,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    }\n\n    if (argc != 2 || argv[1] == NULL || !strcmp(argv[1], \"--help\")) {\n\tfprintf(stderr, \"usage: %s <hostname>\\n\", cmd);\n\texit(1);\n    }\n\n",
                    "rendered": {
                      "text": "    }\n\n    if (argc != 2 || argv[1] == NULL || !strcmp(argv[1], \"--help\")) {\n\tfprintf(stderr, \"usage: %s <hostname>\\n\", cmd);\n\texit(1);\n    }\n\n",
                      "markdown": "`    }\n\n    if (argc != 2 || argv[1] == NULL || !strcmp(argv[1], \"--help\")) {\n\tfprintf(stderr, \"usage: %s <hostname>\\n\", cmd);\n\texit(1);\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/capso/capso.c"
                },
                "region": {
                  "startLine": 235,
                  "startColumn": 14,
                  "endLine": 235,
                  "endColumn": 22,
                  "snippet": {
                    "text": "    }\n\n    args[0] = \"bind80-helper\";\n    args[1] = hostname;\n    args[2] = NULL;\n\n    helper = cap_new_launcher(path, args, (void *) environ);\n",
                    "rendered": {
                      "text": "    }\n\n    args[0] = \"bind80-helper\";\n    args[1] = hostname;\n    args[2] = NULL;\n\n    helper = cap_new_launcher(path, args, (void *) environ);\n",
                      "markdown": "`    }\n\n    args[0] = \"bind80-helper\";\n    args[1] = hostname;\n    args[2] = NULL;\n\n    helper = cap_new_launcher(path, args, (void *) environ);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/capso/capso.c"
                },
                "region": {
                  "startLine": 209,
                  "startColumn": 54,
                  "endLine": 209,
                  "endColumn": 62,
                  "snippet": {
                    "text": "    }\n\n#ifdef CAPSO_DEBUG\n    printf(\"application bind80(%s) attempt failed\\n\", hostname);\n    sleep(30);\n#endif\n\n",
                    "rendered": {
                      "text": "    }\n\n#ifdef CAPSO_DEBUG\n    printf(\"application bind80(%s) attempt failed\\n\", hostname);\n    sleep(30);\n#endif\n\n",
                      "markdown": "`    }\n\n#ifdef CAPSO_DEBUG\n    printf(\"application bind80(%s) attempt failed\\n\", hostname);\n    sleep(30);\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/capso/capso.c"
                },
                "region": {
                  "startLine": 203,
                  "startColumn": 20,
                  "endLine": 203,
                  "endColumn": 28,
                  "snippet": {
                    "text": "    struct iovec *iov;\n    struct msghdr *msg;\n\n    fd = try_bind80(hostname);\n    if (fd >= 0) {\n\treturn fd;\n    }\n",
                    "rendered": {
                      "text": "    struct iovec *iov;\n    struct msghdr *msg;\n\n    fd = try_bind80(hostname);\n    if (fd >= 0) {\n\treturn fd;\n    }\n",
                      "markdown": "`    struct iovec *iov;\n    struct msghdr *msg;\n\n    fd = try_bind80(hostname);\n    if (fd >= 0) {\n\treturn fd;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/capso/capso.c"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 23,
                  "endLine": 189,
                  "endColumn": 31,
                  "snippet": {
                    "text": " *\n * fd < 0 in the case of error.\n */\nint bind80(const char *hostname)\n{\n    cap_launch_t helper;\n    pid_t child;\n",
                    "rendered": {
                      "text": " *\n * fd < 0 in the case of error.\n */\nint bind80(const char *hostname)\n{\n    cap_launch_t helper;\n    pid_t child;\n",
                      "markdown": "` *\n * fd < 0 in the case of error.\n */\nint bind80(const char *hostname)\n{\n    cap_launch_t helper;\n    pid_t child;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/capso/capso.c"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 22,
                  "endLine": 130,
                  "endColumn": 30,
                  "snippet": {
                    "text": "    conf->ai_protocol = 0;\n    conf->ai_flags = AI_PASSIVE | AI_ADDRCONFIG;\n\n    err = getaddrinfo(hostname, \"80\", conf, &detail);\n    if (err != 0) {\n\tgoto done;\n    }\n",
                    "rendered": {
                      "text": "    conf->ai_protocol = 0;\n    conf->ai_flags = AI_PASSIVE | AI_ADDRCONFIG;\n\n    err = getaddrinfo(hostname, \"80\", conf, &detail);\n    if (err != 0) {\n\tgoto done;\n    }\n",
                      "markdown": "`    conf->ai_protocol = 0;\n    conf->ai_flags = AI_PASSIVE | AI_ADDRCONFIG;\n\n    err = getaddrinfo(hostname, \"80\", conf, &detail);\n    if (err != 0) {\n\tgoto done;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/capso/capso.c"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 34,
                  "endLine": 115,
                  "endColumn": 42,
                  "snippet": {
                    "text": " * try_bind80 attempts to reuseably bind to port 80 with the given\n * hostname. It returns a bound filedescriptor or -1 on error.\n */\nstatic int try_bind80(const char *hostname)\n{\n    struct addrinfo *conf, *detail = NULL;\n    int err, ret = -1, one = 1;\n",
                    "rendered": {
                      "text": " * try_bind80 attempts to reuseably bind to port 80 with the given\n * hostname. It returns a bound filedescriptor or -1 on error.\n */\nstatic int try_bind80(const char *hostname)\n{\n    struct addrinfo *conf, *detail = NULL;\n    int err, ret = -1, one = 1;\n",
                      "markdown": "` * try_bind80 attempts to reuseably bind to port 80 with the given\n * hostname. It returns a bound filedescriptor or -1 on error.\n */\nstatic int try_bind80(const char *hostname)\n{\n    struct addrinfo *conf, *detail = NULL;\n    int err, ret = -1, one = 1;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/capso/capso.c"
                },
                "region": {
                  "startLine": 307,
                  "endLine": 307,
                  "endColumn": 5,
                  "snippet": {
                    "text": "#endif\n\n    if (argv != NULL) {\n\tcmd = argv[0];\n    }\n\n    if (argc != 2 || argv[1] == NULL || !strcmp(argv[1], \"--help\")) {\n",
                    "rendered": {
                      "text": "#endif\n\n    if (argv != NULL) {\n\tcmd = argv[0];\n    }\n\n    if (argc != 2 || argv[1] == NULL || !strcmp(argv[1], \"--help\")) {\n",
                      "markdown": "`#endif\n\n    if (argv != NULL) {\n\tcmd = argv[0];\n    }\n\n    if (argc != 2 || argv[1] == NULL || !strcmp(argv[1], \"--help\")) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/capso/capso.c"
                },
                "region": {
                  "startLine": 230,
                  "startColumn": 18,
                  "endLine": 230,
                  "endColumn": 24,
                  "snippet": {
                    "text": "     */\n    path = where_am_i();\n    if (path == NULL) {\n\tperror(\"Unable to find self\");\n\tgoto drop_alloc;\n    }\n\n",
                    "rendered": {
                      "text": "     */\n    path = where_am_i();\n    if (path == NULL) {\n\tperror(\"Unable to find self\");\n\tgoto drop_alloc;\n    }\n\n",
                      "markdown": "`     */\n    path = where_am_i();\n    if (path == NULL) {\n\tperror(\"Unable to find self\");\n\tgoto drop_alloc;\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/capso/capso.h"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 30,
                  "endLine": 14,
                  "endColumn": 38,
                  "snippet": {
                    "text": " *\n * fd < 0 in the case of error.\n */\nextern int bind80(const char *hostname);\n\n#endif /* ndef CAPSO_H */\n",
                    "rendered": {
                      "text": " *\n * fd < 0 in the case of error.\n */\nextern int bind80(const char *hostname);\n\n#endif /* ndef CAPSO_H */\n",
                      "markdown": "` *\n * fd < 0 in the case of error.\n */\nextern int bind80(const char *hostname);\n\n#endif /* ndef CAPSO_H */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/bug216610/package_fns.sh"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 55,
                  "endLine": 39,
                  "endColumn": 60,
                  "snippet": {
                    "text": "}\nEOF\n\nfor sym in $(objdump -x \"${syso}\" | grep -F 'g     F' | awk '{print $6}'); do\n    cat<<EOF\n\n//go:linkname _${sym} ${sym}\n",
                    "rendered": {
                      "text": "}\nEOF\n\nfor sym in $(objdump -x \"${syso}\" | grep -F 'g     F' | awk '{print $6}'); do\n    cat<<EOF\n\n//go:linkname _${sym} ${sym}\n",
                      "markdown": "`}\nEOF\n\nfor sym in $(objdump -x \"${syso}\" | grep -F 'g     F' | awk '{print $6}'); do\n    cat<<EOF\n\n//go:linkname _${sym} ${sym}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/bug216610/package_fns.sh"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 35,
                  "endLine": 39,
                  "endColumn": 41,
                  "snippet": {
                    "text": "}\nEOF\n\nfor sym in $(objdump -x \"${syso}\" | grep -F 'g     F' | awk '{print $6}'); do\n    cat<<EOF\n\n//go:linkname _${sym} ${sym}\n",
                    "rendered": {
                      "text": "}\nEOF\n\nfor sym in $(objdump -x \"${syso}\" | grep -F 'g     F' | awk '{print $6}'); do\n    cat<<EOF\n\n//go:linkname _${sym} ${sym}\n",
                      "markdown": "`}\nEOF\n\nfor sym in $(objdump -x \"${syso}\" | grep -F 'g     F' | awk '{print $6}'); do\n    cat<<EOF\n\n//go:linkname _${sym} ${sym}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/bug216610/README.md"
                },
                "region": {
                  "startLine": 114,
                  "endLine": 115,
                  "endColumn": 3,
                  "snippet": {
                    "text": "The generated `fib` binary runs on a 32-bit Raspberry Pi.\n\n## Future thoughts\n\nAt present, this example only works on Linux with `x86_64` and `arm`\nbuild architectures. (In go-speak that is `linux_amd64` and\n`linux_arm`). This is because I have only provided some bridging\nassembly for Go to C calling conventions for those architecture\n",
                    "rendered": {
                      "text": "The generated `fib` binary runs on a 32-bit Raspberry Pi.\n\n## Future thoughts\n\nAt present, this example only works on Linux with `x86_64` and `arm`\nbuild architectures. (In go-speak that is `linux_amd64` and\n`linux_arm`). This is because I have only provided some bridging\nassembly for Go to C calling conventions for those architecture\n",
                      "markdown": "`The generated `fib` binary runs on a 32-bit Raspberry Pi.\n\n## Future thoughts\n\nAt present, this example only works on Linux with `x86_64` and `arm`\nbuild architectures. (In go-speak that is `linux_amd64` and\n`linux_arm`). This is because I have only provided some bridging\nassembly for Go to C calling conventions for those architecture\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/bug216610/README.md"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 41,
                  "endLine": 77,
                  "endColumn": 45,
                  "snippet": {
                    "text": "fib: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, ...\n$\n```\nWhere `<nnnnn>` is the PID of the program at runtime and will be\ndifferent each time the program is invoked.\n\n## Discussion\n",
                    "rendered": {
                      "text": "fib: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, ...\n$\n```\nWhere `<nnnnn>` is the PID of the program at runtime and will be\ndifferent each time the program is invoked.\n\n## Discussion\n",
                      "markdown": "`fib: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, ...\n$\n```\nWhere `<nnnnn>` is the PID of the program at runtime and will be\ndifferent each time the program is invoked.\n\n## Discussion\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/bug216610/README.md"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 1,
                  "endLine": 132,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  common an issue this is. On Fedora, building the arm variants of the\n  .syso file can be performed as follows:\n```\n$ docker run --rm -v $PWD/c:/shared:z -h debian -u $(id -u) -it expt shared/build.sh\n```\n\n## Reporting bugs\n",
                    "rendered": {
                      "text": "  common an issue this is. On Fedora, building the arm variants of the\n  .syso file can be performed as follows:\n```\n$ docker run --rm -v $PWD/c:/shared:z -h debian -u $(id -u) -it expt shared/build.sh\n```\n\n## Reporting bugs\n",
                      "markdown": "`  common an issue this is. On Fedora, building the arm variants of the\n  .syso file can be performed as follows:\n```\n$ docker run --rm -v $PWD/c:/shared:z -h debian -u $(id -u) -it expt shared/build.sh\n```\n\n## Reporting bugs\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/bug216610/README.md"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 62,
                  "endLine": 128,
                  "snippet": {
                    "text": "to test it.\n\n**Note** The Fedora system on which I've been developing this has some\n  SELINUX impediment to naively using the `docker -v ...` bind mount\n  option. I need the `:z` suffix for bind mounting. I don't know how\n  common an issue this is. On Fedora, building the arm variants of the\n  .syso file can be performed as follows:\n```\n",
                    "rendered": {
                      "text": "to test it.\n\n**Note** The Fedora system on which I've been developing this has some\n  SELINUX impediment to naively using the `docker -v ...` bind mount\n  option. I need the `:z` suffix for bind mounting. I don't know how\n  common an issue this is. On Fedora, building the arm variants of the\n  .syso file can be performed as follows:\n```\n",
                      "markdown": "`to test it.\n\n**Note** The Fedora system on which I've been developing this has some\n  SELINUX impediment to naively using the `docker -v ...` bind mount\n  option. I need the `:z` suffix for bind mounting. I don't know how\n  common an issue this is. On Fedora, building the arm variants of the\n  .syso file can be performed as follows:\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/bug216610/README.md"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 11,
                  "endLine": 98,
                  "endColumn": 19,
                  "snippet": {
                    "text": "file, the Go linker seems to [replace this reference with a `0` offset\nto\n`(%rip)`](https://github.com/golang/go/issues/24321#issuecomment-1296084103). What\nour wrapper script does is rewrite the generated assembly to store\nthese data references to the `.text` section. The Go linker has no\nproblem with this _same section_ relative addressing and is able to\nlink the resulting objects without problems.\n",
                    "rendered": {
                      "text": "file, the Go linker seems to [replace this reference with a `0` offset\nto\n`(%rip)`](https://github.com/golang/go/issues/24321#issuecomment-1296084103). What\nour wrapper script does is rewrite the generated assembly to store\nthese data references to the `.text` section. The Go linker has no\nproblem with this _same section_ relative addressing and is able to\nlink the resulting objects without problems.\n",
                      "markdown": "`file, the Go linker seems to [replace this reference with a `0` offset\nto\n`(%rip)`](https://github.com/golang/go/issues/24321#issuecomment-1296084103). What\nour wrapper script does is rewrite the generated assembly to store\nthese data references to the `.text` section. The Go linker has no\nproblem with this _same section_ relative addressing and is able to\nlink the resulting objects without problems.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/bug216610/README.md"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 36,
                  "endLine": 90,
                  "endColumn": 42,
                  "snippet": {
                    "text": "that links to compute kernel of C code.\n\nThe reason we have added the `c/gcc.sh` wrapper for `gcc` is that\nwe've found the Go linker has a hard time digesting the\ncross-sectional `%rip` based data addressing that various optimization\nmodes of gcc like to use. Specifically, in the x86_64/amd64\narchitecture, if a `R_X86_64_PC32` relocation entry made in a `.text`\n",
                    "rendered": {
                      "text": "that links to compute kernel of C code.\n\nThe reason we have added the `c/gcc.sh` wrapper for `gcc` is that\nwe've found the Go linker has a hard time digesting the\ncross-sectional `%rip` based data addressing that various optimization\nmodes of gcc like to use. Specifically, in the x86_64/amd64\narchitecture, if a `R_X86_64_PC32` relocation entry made in a `.text`\n",
                      "markdown": "`that links to compute kernel of C code.\n\nThe reason we have added the `c/gcc.sh` wrapper for `gcc` is that\nwe've found the Go linker has a hard time digesting the\ncross-sectional `%rip` based data addressing that various optimization\nmodes of gcc like to use. Specifically, in the x86_64/amd64\narchitecture, if a `R_X86_64_PC32` relocation entry made in a `.text`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/bug216610/README.md"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 14,
                  "endLine": 78,
                  "endColumn": 20,
                  "snippet": {
                    "text": "$\n```\nWhere `<nnnnn>` is the PID of the program at runtime and will be\ndifferent each time the program is invoked.\n\n## Discussion\n\n",
                    "rendered": {
                      "text": "$\n```\nWhere `<nnnnn>` is the PID of the program at runtime and will be\ndifferent each time the program is invoked.\n\n## Discussion\n\n",
                      "markdown": "`$\n```\nWhere `<nnnnn>` is the PID of the program at runtime and will be\ndifferent each time the program is invoked.\n\n## Discussion\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/bug216610/README.md"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 1,
                  "endLine": 64,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nSet things up with:\n```\n$ git clone git://git.kernel.org/pub/scm/libs/libcap/libcap.git\n$ cd libcap\n$ make all\n$ cd contrib/bug216610\n",
                    "rendered": {
                      "text": "\nSet things up with:\n```\n$ git clone git://git.kernel.org/pub/scm/libs/libcap/libcap.git\n$ cd libcap\n$ make all\n$ cd contrib/bug216610\n",
                      "markdown": "`\nSet things up with:\n```\n$ git clone git://git.kernel.org/pub/scm/libs/libcap/libcap.git\n$ cd libcap\n$ make all\n$ cd contrib/bug216610\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/bug216610/README.md"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 3,
                  "endLine": 58,
                  "endColumn": 8,
                  "snippet": {
                    "text": "expected answers. See the discussion below for what seems to be going\non.\n\n- A top level `Makefile` to build it all.\n\n## Building and running the built binary\n\n",
                    "rendered": {
                      "text": "expected answers. See the discussion below for what seems to be going\non.\n\n- A top level `Makefile` to build it all.\n\n## Building and running the built binary\n\n",
                      "markdown": "`expected answers. See the discussion below for what seems to be going\non.\n\n- A top level `Makefile` to build it all.\n\n## Building and running the built binary\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/bug216610/README.md"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 51,
                  "endLine": 36,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\n*Caveat Emptor*: this example is very fragile. The Go team only\nsupports `cgo` linking against C. That being said, I'd certainly like\nto receive bug fixes, etc for this directory if you find you need to\nevolve it to make it work for your use case.\n\n## Content\n",
                    "rendered": {
                      "text": "\n*Caveat Emptor*: this example is very fragile. The Go team only\nsupports `cgo` linking against C. That being said, I'd certainly like\nto receive bug fixes, etc for this directory if you find you need to\nevolve it to make it work for your use case.\n\n## Content\n",
                      "markdown": "`\n*Caveat Emptor*: this example is very fragile. The Go team only\nsupports `cgo` linking against C. That being said, I'd certainly like\nto receive bug fixes, etc for this directory if you find you need to\nevolve it to make it work for your use case.\n\n## Content\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/psx/License"
                },
                "region": {
                  "startLine": 389,
                  "startColumn": 35,
                  "endLine": 389,
                  "endColumn": 39,
                  "snippet": {
                    "text": "necessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n",
                    "rendered": {
                      "text": "necessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n",
                      "markdown": "`necessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/psx/License"
                },
                "region": {
                  "startLine": 349,
                  "startColumn": 59,
                  "endLine": 349,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n",
                    "rendered": {
                      "text": "\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n",
                      "markdown": "`\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/psx/License"
                },
                "region": {
                  "startLine": 263,
                  "startColumn": 30,
                  "endLine": 263,
                  "endColumn": 34,
                  "snippet": {
                    "text": "excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n",
                    "rendered": {
                      "text": "excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n",
                      "markdown": "`excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/psx/License"
                },
                "region": {
                  "startLine": 217,
                  "startColumn": 63,
                  "endLine": 218,
                  "endColumn": 8,
                  "snippet": {
                    "text": "The source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\n",
                    "rendered": {
                      "text": "The source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\n",
                      "markdown": "`The source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/psx/License"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 51,
                  "endLine": 201,
                  "endColumn": 55,
                  "snippet": {
                    "text": "    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n",
                    "rendered": {
                      "text": "    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n",
                      "markdown": "`    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/psx/License"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 21,
                  "endLine": 185,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\n",
                    "rendered": {
                      "text": "\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\n",
                      "markdown": "`\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/psx/License"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 43,
                  "endLine": 159,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n",
                    "rendered": {
                      "text": "\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n",
                      "markdown": "`\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/psx/License"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 7,
                  "endLine": 147,
                  "endColumn": 11,
                  "snippet": {
                    "text": "along with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\n",
                    "rendered": {
                      "text": "along with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\n",
                      "markdown": "`along with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/psx/License"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 63,
                  "endLine": 113,
                  "endColumn": 67,
                  "snippet": {
                    "text": "patents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n",
                    "rendered": {
                      "text": "patents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n",
                      "markdown": "`patents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/psx/License"
                },
                "region": {
                  "startLine": 309,
                  "startColumn": 12,
                  "endLine": 309,
                  "endColumn": 18,
                  "snippet": {
                    "text": "this License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\n",
                    "rendered": {
                      "text": "this License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\n",
                      "markdown": "`this License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/psx/License"
                },
                "region": {
                  "startLine": 297,
                  "startColumn": 34,
                  "endLine": 297,
                  "endColumn": 40,
                  "snippet": {
                    "text": "the limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n",
                    "rendered": {
                      "text": "the limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n",
                      "markdown": "`the limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/psx/License"
                },
                "region": {
                  "startLine": 248,
                  "startColumn": 9,
                  "endLine": 248,
                  "endColumn": 15,
                  "snippet": {
                    "text": "all its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\n",
                    "rendered": {
                      "text": "all its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\n",
                      "markdown": "`all its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/psx/License"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 12,
                  "endLine": 110,
                  "endColumn": 18,
                  "snippet": {
                    "text": "authors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n",
                    "rendered": {
                      "text": "authors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n",
                      "markdown": "`authors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/psx/License"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 4,
                  "endLine": 83,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n",
                    "rendered": {
                      "text": "  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n",
                      "markdown": "`  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/iab.go"
                },
                "region": {
                  "startLine": 268,
                  "startColumn": 7,
                  "endLine": 268,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\tif err := iab.good(); err != nil {\n\t\treturn err\n\t}\n\tstate, sc := scwStateSC()\n\tdefer scwSetState(launchBlocked, state, -1)\n\tiab.mu.RLock()\n\tdefer iab.mu.RUnlock()\n",
                    "rendered": {
                      "text": "\tif err := iab.good(); err != nil {\n\t\treturn err\n\t}\n\tstate, sc := scwStateSC()\n\tdefer scwSetState(launchBlocked, state, -1)\n\tiab.mu.RLock()\n\tdefer iab.mu.RUnlock()\n",
                      "markdown": "`\tif err := iab.good(); err != nil {\n\t\treturn err\n\t}\n\tstate, sc := scwStateSC()\n\tdefer scwSetState(launchBlocked, state, -1)\n\tiab.mu.RLock()\n\tdefer iab.mu.RUnlock()\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/cap.go"
                },
                "region": {
                  "startLine": 501,
                  "startColumn": 7,
                  "endLine": 501,
                  "endColumn": 11,
                  "snippet": {
                    "text": "// already raised in both the Permitted and Inheritable Set is allowed\n// to be raised by the kernel.\nfunc ResetAmbient() error {\n\tstate, sc := scwStateSC()\n\tdefer scwSetState(launchBlocked, state, -1)\n\treturn sc.resetAmbient()\n}\n",
                    "rendered": {
                      "text": "// already raised in both the Permitted and Inheritable Set is allowed\n// to be raised by the kernel.\nfunc ResetAmbient() error {\n\tstate, sc := scwStateSC()\n\tdefer scwSetState(launchBlocked, state, -1)\n\treturn sc.resetAmbient()\n}\n",
                      "markdown": "`// already raised in both the Permitted and Inheritable Set is allowed\n// to be raised by the kernel.\nfunc ResetAmbient() error {\n\tstate, sc := scwStateSC()\n\tdefer scwSetState(launchBlocked, state, -1)\n\treturn sc.resetAmbient()\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/cap.go"
                },
                "region": {
                  "startLine": 474,
                  "startColumn": 7,
                  "endLine": 474,
                  "endColumn": 11,
                  "snippet": {
                    "text": "// captures all three inheritable vectors in a single type. Consider\n// using that.\nfunc SetAmbient(enable bool, val ...Value) error {\n\tstate, sc := scwStateSC()\n\tdefer scwSetState(launchBlocked, state, -1)\n\treturn sc.setAmbient(enable, val...)\n}\n",
                    "rendered": {
                      "text": "// captures all three inheritable vectors in a single type. Consider\n// using that.\nfunc SetAmbient(enable bool, val ...Value) error {\n\tstate, sc := scwStateSC()\n\tdefer scwSetState(launchBlocked, state, -1)\n\treturn sc.setAmbient(enable, val...)\n}\n",
                      "markdown": "`// captures all three inheritable vectors in a single type. Consider\n// using that.\nfunc SetAmbient(enable bool, val ...Value) error {\n\tstate, sc := scwStateSC()\n\tdefer scwSetState(launchBlocked, state, -1)\n\treturn sc.setAmbient(enable, val...)\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/cap.go"
                },
                "region": {
                  "startLine": 427,
                  "startColumn": 7,
                  "endLine": 427,
                  "endColumn": 11,
                  "snippet": {
                    "text": "// ill-defined state. The caller can determine where things went wrong\n// using GetBound().\nfunc DropBound(val ...Value) error {\n\tstate, sc := scwStateSC()\n\tdefer scwSetState(launchBlocked, state, -1)\n\treturn sc.dropBound(val...)\n}\n",
                    "rendered": {
                      "text": "// ill-defined state. The caller can determine where things went wrong\n// using GetBound().\nfunc DropBound(val ...Value) error {\n\tstate, sc := scwStateSC()\n\tdefer scwSetState(launchBlocked, state, -1)\n\treturn sc.dropBound(val...)\n}\n",
                      "markdown": "`// ill-defined state. The caller can determine where things went wrong\n// using GetBound().\nfunc DropBound(val ...Value) error {\n\tstate, sc := scwStateSC()\n\tdefer scwSetState(launchBlocked, state, -1)\n\treturn sc.dropBound(val...)\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/cap.go"
                },
                "region": {
                  "startLine": 383,
                  "startColumn": 7,
                  "endLine": 383,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\tif err := c.good(); err != nil {\n\t\treturn err\n\t}\n\tstate, sc := scwStateSC()\n\tdefer scwSetState(launchBlocked, state, -1)\n\tc.mu.RLock()\n\tdefer c.mu.RUnlock()\n",
                    "rendered": {
                      "text": "\tif err := c.good(); err != nil {\n\t\treturn err\n\t}\n\tstate, sc := scwStateSC()\n\tdefer scwSetState(launchBlocked, state, -1)\n\tc.mu.RLock()\n\tdefer c.mu.RUnlock()\n",
                      "markdown": "`\tif err := c.good(); err != nil {\n\t\treturn err\n\t}\n\tstate, sc := scwStateSC()\n\tdefer scwSetState(launchBlocked, state, -1)\n\tc.mu.RLock()\n\tdefer c.mu.RUnlock()\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/cap.go"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 16,
                  "endLine": 113,
                  "endColumn": 22,
                  "snippet": {
                    "text": "const (\n\teffectiveDiff   Diff = 1 << Effective\n\tpermittedDiff   Diff = 1 << Permitted\n\tinheritableDiff Diff = 1 << Inheritable\n)\n\n// String identifies a Flag value by its conventional \"e\", \"p\" or \"i\"\n",
                    "rendered": {
                      "text": "const (\n\teffectiveDiff   Diff = 1 << Effective\n\tpermittedDiff   Diff = 1 << Permitted\n\tinheritableDiff Diff = 1 << Inheritable\n)\n\n// String identifies a Flag value by its conventional \"e\", \"p\" or \"i\"\n",
                      "markdown": "`const (\n\teffectiveDiff   Diff = 1 << Effective\n\tpermittedDiff   Diff = 1 << Permitted\n\tinheritableDiff Diff = 1 << Inheritable\n)\n\n// String identifies a Flag value by its conventional \"e\", \"p\" or \"i\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/cap.go"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 16,
                  "endLine": 112,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\nconst (\n\teffectiveDiff   Diff = 1 << Effective\n\tpermittedDiff   Diff = 1 << Permitted\n\tinheritableDiff Diff = 1 << Inheritable\n)\n\n",
                    "rendered": {
                      "text": "\nconst (\n\teffectiveDiff   Diff = 1 << Effective\n\tpermittedDiff   Diff = 1 << Permitted\n\tinheritableDiff Diff = 1 << Inheritable\n)\n\n",
                      "markdown": "`\nconst (\n\teffectiveDiff   Diff = 1 << Effective\n\tpermittedDiff   Diff = 1 << Permitted\n\tinheritableDiff Diff = 1 << Inheritable\n)\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/cap.go"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 16,
                  "endLine": 111,
                  "endColumn": 22,
                  "snippet": {
                    "text": "type Diff uint\n\nconst (\n\teffectiveDiff   Diff = 1 << Effective\n\tpermittedDiff   Diff = 1 << Permitted\n\tinheritableDiff Diff = 1 << Inheritable\n)\n",
                    "rendered": {
                      "text": "type Diff uint\n\nconst (\n\teffectiveDiff   Diff = 1 << Effective\n\tpermittedDiff   Diff = 1 << Permitted\n\tinheritableDiff Diff = 1 << Inheritable\n)\n",
                      "markdown": "`type Diff uint\n\nconst (\n\teffectiveDiff   Diff = 1 << Effective\n\tpermittedDiff   Diff = 1 << Permitted\n\tinheritableDiff Diff = 1 << Inheritable\n)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/cap.go"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 4,
                  "endLine": 108,
                  "endColumn": 10,
                  "snippet": {
                    "text": ")\n\n// Diff summarizes the result of the (*Set).Cf() function.\ntype Diff uint\n\nconst (\n\teffectiveDiff   Diff = 1 << Effective\n",
                    "rendered": {
                      "text": ")\n\n// Diff summarizes the result of the (*Set).Cf() function.\ntype Diff uint\n\nconst (\n\teffectiveDiff   Diff = 1 << Effective\n",
                      "markdown": "`)\n\n// Diff summarizes the result of the (*Set).Cf() function.\ntype Diff uint\n\nconst (\n\teffectiveDiff   Diff = 1 << Effective\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/flags.go"
                },
                "region": {
                  "startLine": 194,
                  "startColumn": 7,
                  "endLine": 195,
                  "snippet": {
                    "text": "\tc.mu.RLock()\n\tdefer c.mu.RUnlock()\n\n\tvar cf Diff\n\tfor i := 0; i < words; i++ {\n\t\tif c.flat[i][Effective]^d.flat[i][Effective] != 0 {\n\t\t\tcf |= effectiveDiff\n\t\t}\n",
                    "rendered": {
                      "text": "\tc.mu.RLock()\n\tdefer c.mu.RUnlock()\n\n\tvar cf Diff\n\tfor i := 0; i < words; i++ {\n\t\tif c.flat[i][Effective]^d.flat[i][Effective] != 0 {\n\t\t\tcf |= effectiveDiff\n\t\t}\n",
                      "markdown": "`\tc.mu.RLock()\n\tdefer c.mu.RUnlock()\n\n\tvar cf Diff\n\tfor i := 0; i < words; i++ {\n\t\tif c.flat[i][Effective]^d.flat[i][Effective] != 0 {\n\t\t\tcf |= effectiveDiff\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/doc/cap_iab.3"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 49,
                  "endLine": 44,
                  "endColumn": 53,
                  "snippet": {
                    "text": "three components of an IAB tuple and the Permitted process capability\nflag. They are: the Inh vector\n.RB ( CAP_IAB_INH )\nis entirely equal to the process Inheritable flag at all times; the\nAmb vector\n.RB ( CAP_IAB_AMB )\ncontains no more capability values than the intersection of\n",
                    "rendered": {
                      "text": "three components of an IAB tuple and the Permitted process capability\nflag. They are: the Inh vector\n.RB ( CAP_IAB_INH )\nis entirely equal to the process Inheritable flag at all times; the\nAmb vector\n.RB ( CAP_IAB_AMB )\ncontains no more capability values than the intersection of\n",
                      "markdown": "`three components of an IAB tuple and the Permitted process capability\nflag. They are: the Inh vector\n.RB ( CAP_IAB_INH )\nis entirely equal to the process Inheritable flag at all times; the\nAmb vector\n.RB ( CAP_IAB_AMB )\ncontains no more capability values than the intersection of\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/goapps/captree/captree.go"
                },
                "region": {
                  "startLine": 97,
                  "endLine": 97,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tviewed   bool\n\tdepth    int\n\tpid      string\n\tcmd      string\n\tcap      *cap.Set\n\tiab      *cap.IAB\n\tparent   string\n",
                    "rendered": {
                      "text": "\tviewed   bool\n\tdepth    int\n\tpid      string\n\tcmd      string\n\tcap      *cap.Set\n\tiab      *cap.IAB\n\tparent   string\n",
                      "markdown": "`\tviewed   bool\n\tdepth    int\n\tpid      string\n\tcmd      string\n\tcap      *cap.Set\n\tiab      *cap.IAB\n\tparent   string\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/seccomp/explore.go"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 68,
                  "endLine": 42,
                  "endColumn": 72,
                  "snippet": {
                    "text": "\nvar (\n\twithPSX = flag.Bool(\"psx\", false, \"use the psx mechanism to invoke prctl syscall\")\n\tdelays  = flag.Bool(\"delays\", false, \"use this to pause the program at various places\")\n\tkill    = flag.Bool(\"kill\", true, \"kill the process if setuid attempted\")\n\terrno   = flag.Int(\"errno\", int(syscall.ENOTSUP), \"if kill is false, block syscall and return this errno\")\n)\n",
                    "rendered": {
                      "text": "\nvar (\n\twithPSX = flag.Bool(\"psx\", false, \"use the psx mechanism to invoke prctl syscall\")\n\tdelays  = flag.Bool(\"delays\", false, \"use this to pause the program at various places\")\n\tkill    = flag.Bool(\"kill\", true, \"kill the process if setuid attempted\")\n\terrno   = flag.Int(\"errno\", int(syscall.ENOTSUP), \"if kill is false, block syscall and return this errno\")\n)\n",
                      "markdown": "`\nvar (\n\twithPSX = flag.Bool(\"psx\", false, \"use the psx mechanism to invoke prctl syscall\")\n\tdelays  = flag.Bool(\"delays\", false, \"use this to pause the program at various places\")\n\tkill    = flag.Bool(\"kill\", true, \"kill the process if setuid attempted\")\n\terrno   = flag.Int(\"errno\", int(syscall.ENOTSUP), \"if kill is false, block syscall and return this errno\")\n)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/seccomp/explore.go"
                },
                "region": {
                  "startLine": 272,
                  "startColumn": 21,
                  "endLine": 272,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t// Ensure we are running on the TID=PID.\n\tlockProcessThread(true)\n\n\tlog.Print(\"Now it is time to try to run something privileged...\")\n\tif _, _, e := syscall.RawSyscall(syscall.SYS_SETUID, 1, 0, 0); e != 0 {\n\t\tlog.Fatalf(\"setuid failed with an error: %v\", e)\n\t}\n",
                    "rendered": {
                      "text": "\t// Ensure we are running on the TID=PID.\n\tlockProcessThread(true)\n\n\tlog.Print(\"Now it is time to try to run something privileged...\")\n\tif _, _, e := syscall.RawSyscall(syscall.SYS_SETUID, 1, 0, 0); e != 0 {\n\t\tlog.Fatalf(\"setuid failed with an error: %v\", e)\n\t}\n",
                      "markdown": "`\t// Ensure we are running on the TID=PID.\n\tlockProcessThread(true)\n\n\tlog.Print(\"Now it is time to try to run something privileged...\")\n\tif _, _, e := syscall.RawSyscall(syscall.SYS_SETUID, 1, 0, 0); e != 0 {\n\t\tlog.Fatalf(\"setuid failed with an error: %v\", e)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/bug216610/Makefile"
                },
                "region": {
                  "startLine": 23,
                  "endLine": 23,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# and arm64 GOARCH values.\narms: Dockerfile Makefile ./c/gcc.sh ./c/build.sh ./c/fib.c\n\tdocker run --rm -v $$PWD/c:/shared:z -h debian -u $$(id -u) -it expt shared/build.sh\n\tmv c/*.syso go/fibber/\n\ttouch arms\n\nclean:\n",
                    "rendered": {
                      "text": "# and arm64 GOARCH values.\narms: Dockerfile Makefile ./c/gcc.sh ./c/build.sh ./c/fib.c\n\tdocker run --rm -v $$PWD/c:/shared:z -h debian -u $$(id -u) -it expt shared/build.sh\n\tmv c/*.syso go/fibber/\n\ttouch arms\n\nclean:\n",
                      "markdown": "`# and arm64 GOARCH values.\narms: Dockerfile Makefile ./c/gcc.sh ./c/build.sh ./c/fib.c\n\tdocker run --rm -v $$PWD/c:/shared:z -h debian -u $$(id -u) -it expt shared/build.sh\n\tmv c/*.syso go/fibber/\n\ttouch arms\n\nclean:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/bug216610/Makefile"
                },
                "region": {
                  "startLine": 22,
                  "endLine": 22,
                  "endColumn": 8,
                  "snippet": {
                    "text": "# Use this build target (make arms) to extend support to include arm\n# and arm64 GOARCH values.\narms: Dockerfile Makefile ./c/gcc.sh ./c/build.sh ./c/fib.c\n\tdocker run --rm -v $$PWD/c:/shared:z -h debian -u $$(id -u) -it expt shared/build.sh\n\tmv c/*.syso go/fibber/\n\ttouch arms\n\n",
                    "rendered": {
                      "text": "# Use this build target (make arms) to extend support to include arm\n# and arm64 GOARCH values.\narms: Dockerfile Makefile ./c/gcc.sh ./c/build.sh ./c/fib.c\n\tdocker run --rm -v $$PWD/c:/shared:z -h debian -u $$(id -u) -it expt shared/build.sh\n\tmv c/*.syso go/fibber/\n\ttouch arms\n\n",
                      "markdown": "`# Use this build target (make arms) to extend support to include arm\n# and arm64 GOARCH values.\narms: Dockerfile Makefile ./c/gcc.sh ./c/build.sh ./c/fib.c\n\tdocker run --rm -v $$PWD/c:/shared:z -h debian -u $$(id -u) -it expt shared/build.sh\n\tmv c/*.syso go/fibber/\n\ttouch arms\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/sucap/sucap.pamconfig"
                },
                "region": {
                  "startLine": 5,
                  "endLine": 5,
                  "endColumn": 8,
                  "snippet": {
                    "text": "auth            required        pam_cap.so config=/etc/security/capability.conf \nauth\t\trequired        pam_unix.so\naccount\t\trequired\tpam_unix.so\npassword\trequired\tpam_unix.so\nsession\t\trequired        pam_unix.so\n",
                    "rendered": {
                      "text": "auth            required        pam_cap.so config=/etc/security/capability.conf \nauth\t\trequired        pam_unix.so\naccount\t\trequired\tpam_unix.so\npassword\trequired\tpam_unix.so\nsession\t\trequired        pam_unix.so\n",
                      "markdown": "`auth            required        pam_cap.so config=/etc/security/capability.conf \nauth\t\trequired        pam_unix.so\naccount\t\trequired\tpam_unix.so\npassword\trequired\tpam_unix.so\nsession\t\trequired        pam_unix.so\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/libcap/psx_exec.c"
                },
                "region": {
                  "startLine": 8,
                  "endLine": 8,
                  "endColumn": 5,
                  "snippet": {
                    "text": "{\n    const char *cmd = \"This library\";\n    if (argv != NULL && argv[0] != NULL) {\n\tcmd = argv[0];\n    }\n    printf(\"%s is the shared library version: \" LIBRARY_VERSION \".\\n\"\n\t   \"See the License file for distribution information.\\n\"\n",
                    "rendered": {
                      "text": "{\n    const char *cmd = \"This library\";\n    if (argv != NULL && argv[0] != NULL) {\n\tcmd = argv[0];\n    }\n    printf(\"%s is the shared library version: \" LIBRARY_VERSION \".\\n\"\n\t   \"See the License file for distribution information.\\n\"\n",
                      "markdown": "`{\n    const char *cmd = \"This library\";\n    if (argv != NULL && argv[0] != NULL) {\n\tcmd = argv[0];\n    }\n    printf(\"%s is the shared library version: \" LIBRARY_VERSION \".\\n\"\n\t   \"See the License file for distribution information.\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/CHANGELOG"
                },
                "region": {
                  "startLine": 11,
                  "endLine": 11,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nOr simply download the source:\n\n\tgit clone git://git.kernel.org/pub/scm/libs/libcap/libcap.git\n\nThe license for this library is here:\n\n",
                    "rendered": {
                      "text": "\nOr simply download the source:\n\n\tgit clone git://git.kernel.org/pub/scm/libs/libcap/libcap.git\n\nThe license for this library is here:\n\n",
                      "markdown": "`\nOr simply download the source:\n\n\tgit clone git://git.kernel.org/pub/scm/libs/libcap/libcap.git\n\nThe license for this library is here:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/CHANGELOG"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 3,
                  "endLine": 5,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n\thttp://sites.google.com/site/fullycapable/\n\nSee GIT repository for detailed source history:\n\n\thttps://git.kernel.org/pub/scm/libs/libcap/libcap.git/\n\n",
                    "rendered": {
                      "text": "\n\thttp://sites.google.com/site/fullycapable/\n\nSee GIT repository for detailed source history:\n\n\thttps://git.kernel.org/pub/scm/libs/libcap/libcap.git/\n\n",
                      "markdown": "`\n\thttp://sites.google.com/site/fullycapable/\n\nSee GIT repository for detailed source history:\n\n\thttps://git.kernel.org/pub/scm/libs/libcap/libcap.git/\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/doc/mkmd.sh"
                },
                "region": {
                  "startLine": 85,
                  "endLine": 86,
                  "endColumn": 4,
                  "snippet": {
                    "text": "if [[ -f \"local-md.postscript\" ]]; then\n    cat \"local-md.postscript\" >> \"${index}\"\nfi\n\ncat >> \"${index}\" <<EOF\n\nFor further information, see the\n[FullyCapable](https://sites.google.com/site/fullycapable/) homepage\n",
                    "rendered": {
                      "text": "if [[ -f \"local-md.postscript\" ]]; then\n    cat \"local-md.postscript\" >> \"${index}\"\nfi\n\ncat >> \"${index}\" <<EOF\n\nFor further information, see the\n[FullyCapable](https://sites.google.com/site/fullycapable/) homepage\n",
                      "markdown": "`if [[ -f \"local-md.postscript\" ]]; then\n    cat \"local-md.postscript\" >> \"${index}\"\nfi\n\ncat >> \"${index}\" <<EOF\n\nFor further information, see the\n[FullyCapable](https://sites.google.com/site/fullycapable/) homepage\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/doc/mkmd.sh"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 3,
                  "endLine": 83,
                  "endColumn": 8,
                  "snippet": {
                    "text": "EOF\n\nif [[ -f \"local-md.postscript\" ]]; then\n    cat \"local-md.postscript\" >> \"${index}\"\nfi\n\ncat >> \"${index}\" <<EOF\n",
                    "rendered": {
                      "text": "EOF\n\nif [[ -f \"local-md.postscript\" ]]; then\n    cat \"local-md.postscript\" >> \"${index}\"\nfi\n\ncat >> \"${index}\" <<EOF\n",
                      "markdown": "`EOF\n\nif [[ -f \"local-md.postscript\" ]]; then\n    cat \"local-md.postscript\" >> \"${index}\"\nfi\n\ncat >> \"${index}\" <<EOF\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/doc/mkmd.sh"
                },
                "region": {
                  "startLine": 75,
                  "endLine": 76,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tdo_page \"${m}\"\n    done\ndone\n\ncat >> \"${index}\" <<EOF\n\n## More information\n\n",
                    "rendered": {
                      "text": "\tdo_page \"${m}\"\n    done\ndone\n\ncat >> \"${index}\" <<EOF\n\n## More information\n\n",
                      "markdown": "`\tdo_page \"${m}\"\n    done\ndone\n\ncat >> \"${index}\" <<EOF\n\n## More information\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/doc/mkmd.sh"
                },
                "region": {
                  "startLine": 66,
                  "endLine": 66,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n# Assumes the m's are listed alphabetically.\nfor n in 1 3 5 8 ; do\n\tcat >> \"${index}\" <<EOF\n\n### Section ${n}\n\n",
                    "rendered": {
                      "text": "\n# Assumes the m's are listed alphabetically.\nfor n in 1 3 5 8 ; do\n\tcat >> \"${index}\" <<EOF\n\n### Section ${n}\n\n",
                      "markdown": "`\n# Assumes the m's are listed alphabetically.\nfor n in 1 3 5 8 ; do\n\tcat >> \"${index}\" <<EOF\n\n### Section ${n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/doc/mkmd.sh"
                },
                "region": {
                  "startLine": 58,
                  "endLine": 59,
                  "endColumn": 4,
                  "snippet": {
                    "text": "if [[ -f \"local-md.preamble\" ]]; then\n    cat \"local-md.preamble\" >> \"${index}\"\nfi\n\ncat >> \"${index}\" <<EOF\n\n## Individual reference pages\nEOF\n",
                    "rendered": {
                      "text": "if [[ -f \"local-md.preamble\" ]]; then\n    cat \"local-md.preamble\" >> \"${index}\"\nfi\n\ncat >> \"${index}\" <<EOF\n\n## Individual reference pages\nEOF\n",
                      "markdown": "`if [[ -f \"local-md.preamble\" ]]; then\n    cat \"local-md.preamble\" >> \"${index}\"\nfi\n\ncat >> \"${index}\" <<EOF\n\n## Individual reference pages\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/doc/mkmd.sh"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 3,
                  "endLine": 56,
                  "endColumn": 8,
                  "snippet": {
                    "text": "EOF\n\nif [[ -f \"local-md.preamble\" ]]; then\n    cat \"local-md.preamble\" >> \"${index}\"\nfi\n\ncat >> \"${index}\" <<EOF\n",
                    "rendered": {
                      "text": "EOF\n\nif [[ -f \"local-md.preamble\" ]]; then\n    cat \"local-md.preamble\" >> \"${index}\"\nfi\n\ncat >> \"${index}\" <<EOF\n",
                      "markdown": "`EOF\n\nif [[ -f \"local-md.preamble\" ]]; then\n    cat \"local-md.preamble\" >> \"${index}\"\nfi\n\ncat >> \"${index}\" <<EOF\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/doc/mkmd.sh"
                },
                "region": {
                  "startLine": 49,
                  "endLine": 50,
                  "endColumn": 4,
                  "snippet": {
                    "text": "    pandoc -f man -t markdown < \"${m}\" | sed 's/\\*\\*\\([^*]\\+\\)\\*\\*(\\([1358]\\+\\))/[\\1(\\2)](\\1-\\2.md)/g' > \"${outdir}/${base}-${sect}.md\"\n    echo \"* [${base}(${sect})](${base}-${sect}.md)\" >> \"${index}\"\n}\n\ncat > \"${index}\" <<EOF\n# Manpages for libcap and libpsx\n\nEOF\n",
                    "rendered": {
                      "text": "    pandoc -f man -t markdown < \"${m}\" | sed 's/\\*\\*\\([^*]\\+\\)\\*\\*(\\([1358]\\+\\))/[\\1(\\2)](\\1-\\2.md)/g' > \"${outdir}/${base}-${sect}.md\"\n    echo \"* [${base}(${sect})](${base}-${sect}.md)\" >> \"${index}\"\n}\n\ncat > \"${index}\" <<EOF\n# Manpages for libcap and libpsx\n\nEOF\n",
                      "markdown": "`    pandoc -f man -t markdown < \"${m}\" | sed 's/\\*\\*\\([^*]\\+\\)\\*\\*(\\([1358]\\+\\))/[\\1(\\2)](\\1-\\2.md)/g' > \"${outdir}/${base}-${sect}.md\"\n    echo \"* [${base}(${sect})](${base}-${sect}.md)\" >> \"${index}\"\n}\n\ncat > \"${index}\" <<EOF\n# Manpages for libcap and libpsx\n\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/doc/mkmd.sh"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 40,
                  "endLine": 46,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\treturn\n    fi\n\n    pandoc -f man -t markdown < \"${m}\" | sed 's/\\*\\*\\([^*]\\+\\)\\*\\*(\\([1358]\\+\\))/[\\1(\\2)](\\1-\\2.md)/g' > \"${outdir}/${base}-${sect}.md\"\n    echo \"* [${base}(${sect})](${base}-${sect}.md)\" >> \"${index}\"\n}\n\n",
                    "rendered": {
                      "text": "\treturn\n    fi\n\n    pandoc -f man -t markdown < \"${m}\" | sed 's/\\*\\*\\([^*]\\+\\)\\*\\*(\\([1358]\\+\\))/[\\1(\\2)](\\1-\\2.md)/g' > \"${outdir}/${base}-${sect}.md\"\n    echo \"* [${base}(${sect})](${base}-${sect}.md)\" >> \"${index}\"\n}\n\n",
                      "markdown": "`\treturn\n    fi\n\n    pandoc -f man -t markdown < \"${m}\" | sed 's/\\*\\*\\([^*]\\+\\)\\*\\*(\\([1358]\\+\\))/[\\1(\\2)](\\1-\\2.md)/g' > \"${outdir}/${base}-${sect}.md\"\n    echo \"* [${base}(${sect})](${base}-${sect}.md)\" >> \"${index}\"\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/doc/mkmd.sh"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 7,
                  "endLine": 3,
                  "endColumn": 15,
                  "snippet": {
                    "text": "#!/bin/bash\n#\n# Handy script to rebuild the markdown version of the man pages.\n# This uses pandoc if it is installed.\n#\n# For rendering the md, we can use a different command:\n",
                    "rendered": {
                      "text": "#!/bin/bash\n#\n# Handy script to rebuild the markdown version of the man pages.\n# This uses pandoc if it is installed.\n#\n# For rendering the md, we can use a different command:\n",
                      "markdown": "`#!/bin/bash\n#\n# Handy script to rebuild the markdown version of the man pages.\n# This uses pandoc if it is installed.\n#\n# For rendering the md, we can use a different command:\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/sucap/su.c"
                },
                "region": {
                  "startLine": 1396,
                  "startColumn": 10,
                  "endLine": 1396,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t}\n    }\n\n    shell_env = pam_getenvlist(pamh);\n    if (shell_env == NULL) {\n\tD((\"failed to obtain environment for child\"));\n\treturn PAM_SYSTEM_ERR;\n",
                    "rendered": {
                      "text": "\t}\n    }\n\n    shell_env = pam_getenvlist(pamh);\n    if (shell_env == NULL) {\n\tD((\"failed to obtain environment for child\"));\n\treturn PAM_SYSTEM_ERR;\n",
                      "markdown": "`\t}\n    }\n\n    shell_env = pam_getenvlist(pamh);\n    if (shell_env == NULL) {\n\tD((\"failed to obtain environment for child\"));\n\treturn PAM_SYSTEM_ERR;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/sucap/su.c"
                },
                "region": {
                  "startLine": 923,
                  "startColumn": 10,
                  "endLine": 923,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t\t      const char **err_descr)\n{\n    int w_tmp_fd;\n    struct flock w_lock;\n    struct sigaction act1, act2;\n    int state;\n    int retval;\n",
                    "rendered": {
                      "text": "\t\t      const char **err_descr)\n{\n    int w_tmp_fd;\n    struct flock w_lock;\n    struct sigaction act1, act2;\n    int state;\n    int retval;\n",
                      "markdown": "`\t\t      const char **err_descr)\n{\n    int w_tmp_fd;\n    struct flock w_lock;\n    struct sigaction act1, act2;\n    int state;\n    int retval;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/sucap/README.md"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 18,
                  "endLine": 29,
                  "endColumn": 24,
                  "snippet": {
                    "text": "The code in this present directory is freely adapted from the above\ntar ball and is thus a derived work from that.\n\n**NOTE** As of the time of writing, this adaptation is likely rife\n  with bugs.\n\nFinally, Andrew would like to apologize to Andrey for removing all of\n",
                    "rendered": {
                      "text": "The code in this present directory is freely adapted from the above\ntar ball and is thus a derived work from that.\n\n**NOTE** As of the time of writing, this adaptation is likely rife\n  with bugs.\n\nFinally, Andrew would like to apologize to Andrey for removing all of\n",
                      "markdown": "`The code in this present directory is freely adapted from the above\ntar ball and is thus a derived work from that.\n\n**NOTE** As of the time of writing, this adaptation is likely rife\n  with bugs.\n\nFinally, Andrew would like to apologize to Andrey for removing all of\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/sucap/README.md"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 67,
                  "endLine": 27,
                  "endColumn": 4,
                  "snippet": {
                    "text": "-  Andrey V. Savochkin\n-  Alexei V. Galatenko\n\nThe code in this present directory is freely adapted from the above\ntar ball and is thus a derived work from that.\n\n**NOTE** As of the time of writing, this adaptation is likely rife\n  with bugs.\n",
                    "rendered": {
                      "text": "-  Andrey V. Savochkin\n-  Alexei V. Galatenko\n\nThe code in this present directory is freely adapted from the above\ntar ball and is thus a derived work from that.\n\n**NOTE** As of the time of writing, this adaptation is likely rife\n  with bugs.\n",
                      "markdown": "`-  Andrey V. Savochkin\n-  Alexei V. Galatenko\n\nThe code in this present directory is freely adapted from the above\ntar ball and is thus a derived work from that.\n\n**NOTE** As of the time of writing, this adaptation is likely rife\n  with bugs.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/Make.Rules"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 57,
                  "endLine": 201,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# Global cleanup stuff\n\nLOCALCLEAN=rm -f *~ core\nDISTCLEAN=@find . \\( -name '*.orig' -o -name '*.rej' \\) | xargs rm -f\n",
                    "rendered": {
                      "text": "# Global cleanup stuff\n\nLOCALCLEAN=rm -f *~ core\nDISTCLEAN=@find . \\( -name '*.orig' -o -name '*.rej' \\) | xargs rm -f\n",
                      "markdown": "`# Global cleanup stuff\n\nLOCALCLEAN=rm -f *~ core\nDISTCLEAN=@find . \\( -name '*.orig' -o -name '*.rej' \\) | xargs rm -f\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/Make.Rules"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 53,
                  "endLine": 143,
                  "endColumn": 58,
                  "snippet": {
                    "text": "ifeq ($(GOLANG),yes)\nGOROOT ?= $(shell $(GO) env GOROOT)\nGOCGO ?= $(shell if [ \"$(shell $(GO) env CGO_ENABLED)\" = 1 ]; then echo yes ; else echo no ; fi)\nGOOSARCH ?= $(shell $(GO) env GOHOSTOS)_$(shell $(GO) env GOHOSTARCH)\nCGO_REQUIRED := $(shell $(topdir)/go/cgo-required.sh $(GO))\nifeq ($(CGO_REQUIRED),1)\n# Strictly speaking go1.15 doesn't need this, but 1.16 is when the\n",
                    "rendered": {
                      "text": "ifeq ($(GOLANG),yes)\nGOROOT ?= $(shell $(GO) env GOROOT)\nGOCGO ?= $(shell if [ \"$(shell $(GO) env CGO_ENABLED)\" = 1 ]; then echo yes ; else echo no ; fi)\nGOOSARCH ?= $(shell $(GO) env GOHOSTOS)_$(shell $(GO) env GOHOSTARCH)\nCGO_REQUIRED := $(shell $(topdir)/go/cgo-required.sh $(GO))\nifeq ($(CGO_REQUIRED),1)\n# Strictly speaking go1.15 doesn't need this, but 1.16 is when the\n",
                      "markdown": "`ifeq ($(GOLANG),yes)\nGOROOT ?= $(shell $(GO) env GOROOT)\nGOCGO ?= $(shell if [ \"$(shell $(GO) env CGO_ENABLED)\" = 1 ]; then echo yes ; else echo no ; fi)\nGOOSARCH ?= $(shell $(GO) env GOHOSTOS)_$(shell $(GO) env GOHOSTARCH)\nCGO_REQUIRED := $(shell $(topdir)/go/cgo-required.sh $(GO))\nifeq ($(CGO_REQUIRED),1)\n# Strictly speaking go1.15 doesn't need this, but 1.16 is when the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/Make.Rules"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 25,
                  "endLine": 143,
                  "endColumn": 30,
                  "snippet": {
                    "text": "ifeq ($(GOLANG),yes)\nGOROOT ?= $(shell $(GO) env GOROOT)\nGOCGO ?= $(shell if [ \"$(shell $(GO) env CGO_ENABLED)\" = 1 ]; then echo yes ; else echo no ; fi)\nGOOSARCH ?= $(shell $(GO) env GOHOSTOS)_$(shell $(GO) env GOHOSTARCH)\nCGO_REQUIRED := $(shell $(topdir)/go/cgo-required.sh $(GO))\nifeq ($(CGO_REQUIRED),1)\n# Strictly speaking go1.15 doesn't need this, but 1.16 is when the\n",
                    "rendered": {
                      "text": "ifeq ($(GOLANG),yes)\nGOROOT ?= $(shell $(GO) env GOROOT)\nGOCGO ?= $(shell if [ \"$(shell $(GO) env CGO_ENABLED)\" = 1 ]; then echo yes ; else echo no ; fi)\nGOOSARCH ?= $(shell $(GO) env GOHOSTOS)_$(shell $(GO) env GOHOSTARCH)\nCGO_REQUIRED := $(shell $(topdir)/go/cgo-required.sh $(GO))\nifeq ($(CGO_REQUIRED),1)\n# Strictly speaking go1.15 doesn't need this, but 1.16 is when the\n",
                      "markdown": "`ifeq ($(GOLANG),yes)\nGOROOT ?= $(shell $(GO) env GOROOT)\nGOCGO ?= $(shell if [ \"$(shell $(GO) env CGO_ENABLED)\" = 1 ]; then echo yes ; else echo no ; fi)\nGOOSARCH ?= $(shell $(GO) env GOHOSTOS)_$(shell $(GO) env GOHOSTARCH)\nCGO_REQUIRED := $(shell $(topdir)/go/cgo-required.sh $(GO))\nifeq ($(CGO_REQUIRED),1)\n# Strictly speaking go1.15 doesn't need this, but 1.16 is when the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/Make.Rules"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 36,
                  "endLine": 142,
                  "endColumn": 41,
                  "snippet": {
                    "text": "GOLANG ?= $(shell if [ -n \"$(shell $(GO) version 2>/dev/null)\" ]; then echo yes ; else echo no ; fi)\nifeq ($(GOLANG),yes)\nGOROOT ?= $(shell $(GO) env GOROOT)\nGOCGO ?= $(shell if [ \"$(shell $(GO) env CGO_ENABLED)\" = 1 ]; then echo yes ; else echo no ; fi)\nGOOSARCH ?= $(shell $(GO) env GOHOSTOS)_$(shell $(GO) env GOHOSTARCH)\nCGO_REQUIRED := $(shell $(topdir)/go/cgo-required.sh $(GO))\nifeq ($(CGO_REQUIRED),1)\n",
                    "rendered": {
                      "text": "GOLANG ?= $(shell if [ -n \"$(shell $(GO) version 2>/dev/null)\" ]; then echo yes ; else echo no ; fi)\nifeq ($(GOLANG),yes)\nGOROOT ?= $(shell $(GO) env GOROOT)\nGOCGO ?= $(shell if [ \"$(shell $(GO) env CGO_ENABLED)\" = 1 ]; then echo yes ; else echo no ; fi)\nGOOSARCH ?= $(shell $(GO) env GOHOSTOS)_$(shell $(GO) env GOHOSTARCH)\nCGO_REQUIRED := $(shell $(topdir)/go/cgo-required.sh $(GO))\nifeq ($(CGO_REQUIRED),1)\n",
                      "markdown": "`GOLANG ?= $(shell if [ -n \"$(shell $(GO) version 2>/dev/null)\" ]; then echo yes ; else echo no ; fi)\nifeq ($(GOLANG),yes)\nGOROOT ?= $(shell $(GO) env GOROOT)\nGOCGO ?= $(shell if [ \"$(shell $(GO) env CGO_ENABLED)\" = 1 ]; then echo yes ; else echo no ; fi)\nGOOSARCH ?= $(shell $(GO) env GOHOSTOS)_$(shell $(GO) env GOHOSTARCH)\nCGO_REQUIRED := $(shell $(topdir)/go/cgo-required.sh $(GO))\nifeq ($(CGO_REQUIRED),1)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/Make.Rules"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 23,
                  "endLine": 141,
                  "endColumn": 28,
                  "snippet": {
                    "text": "GO ?= go\nGOLANG ?= $(shell if [ -n \"$(shell $(GO) version 2>/dev/null)\" ]; then echo yes ; else echo no ; fi)\nifeq ($(GOLANG),yes)\nGOROOT ?= $(shell $(GO) env GOROOT)\nGOCGO ?= $(shell if [ \"$(shell $(GO) env CGO_ENABLED)\" = 1 ]; then echo yes ; else echo no ; fi)\nGOOSARCH ?= $(shell $(GO) env GOHOSTOS)_$(shell $(GO) env GOHOSTARCH)\nCGO_REQUIRED := $(shell $(topdir)/go/cgo-required.sh $(GO))\n",
                    "rendered": {
                      "text": "GO ?= go\nGOLANG ?= $(shell if [ -n \"$(shell $(GO) version 2>/dev/null)\" ]; then echo yes ; else echo no ; fi)\nifeq ($(GOLANG),yes)\nGOROOT ?= $(shell $(GO) env GOROOT)\nGOCGO ?= $(shell if [ \"$(shell $(GO) env CGO_ENABLED)\" = 1 ]; then echo yes ; else echo no ; fi)\nGOOSARCH ?= $(shell $(GO) env GOHOSTOS)_$(shell $(GO) env GOHOSTARCH)\nCGO_REQUIRED := $(shell $(topdir)/go/cgo-required.sh $(GO))\n",
                      "markdown": "`GO ?= go\nGOLANG ?= $(shell if [ -n \"$(shell $(GO) version 2>/dev/null)\" ]; then echo yes ; else echo no ; fi)\nifeq ($(GOLANG),yes)\nGOROOT ?= $(shell $(GO) env GOROOT)\nGOCGO ?= $(shell if [ \"$(shell $(GO) env CGO_ENABLED)\" = 1 ]; then echo yes ; else echo no ; fi)\nGOOSARCH ?= $(shell $(GO) env GOHOSTOS)_$(shell $(GO) env GOHOSTARCH)\nCGO_REQUIRED := $(shell $(topdir)/go/cgo-required.sh $(GO))\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/Make.Rules"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 1,
                  "endLine": 102,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n# Plan to eventually redefine BUILD_GPERF to be the actual gperf tool\n# alias as per above. Typical distributions are upto a year behind\n# HEAD so we'll not do that before 2023-01-01.\nifdef BUILD_GPERF\n$(error BUILD_GPERF is now reserved, please use USE_GPERF=yes or no instead)\nendif\n",
                    "rendered": {
                      "text": "\n# Plan to eventually redefine BUILD_GPERF to be the actual gperf tool\n# alias as per above. Typical distributions are upto a year behind\n# HEAD so we'll not do that before 2023-01-01.\nifdef BUILD_GPERF\n$(error BUILD_GPERF is now reserved, please use USE_GPERF=yes or no instead)\nendif\n",
                      "markdown": "`\n# Plan to eventually redefine BUILD_GPERF to be the actual gperf tool\n# alias as per above. Typical distributions are upto a year behind\n# HEAD so we'll not do that before 2023-01-01.\nifdef BUILD_GPERF\n$(error BUILD_GPERF is now reserved, please use USE_GPERF=yes or no instead)\nendif\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/Make.Rules"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 13,
                  "endLine": 97,
                  "snippet": {
                    "text": "BUILD_CPPFLAGS += -Dlinux $(WARNINGS) $(DEBUG) $(DEFINES) $(LIBCAP_INCLUDES)\nBUILD_LDFLAGS ?= $(LDFLAGS)\nBUILD_SED ?= sed\nBUILD_GREP ?= grep\nBUILD_EGREP ?= $(BUILD_GREP) -E\nBUILD_FGREP ?= $(BUILD_GREP) -F\n\n# Plan to eventually redefine BUILD_GPERF to be the actual gperf tool\n",
                    "rendered": {
                      "text": "BUILD_CPPFLAGS += -Dlinux $(WARNINGS) $(DEBUG) $(DEFINES) $(LIBCAP_INCLUDES)\nBUILD_LDFLAGS ?= $(LDFLAGS)\nBUILD_SED ?= sed\nBUILD_GREP ?= grep\nBUILD_EGREP ?= $(BUILD_GREP) -E\nBUILD_FGREP ?= $(BUILD_GREP) -F\n\n# Plan to eventually redefine BUILD_GPERF to be the actual gperf tool\n",
                      "markdown": "`BUILD_CPPFLAGS += -Dlinux $(WARNINGS) $(DEBUG) $(DEFINES) $(LIBCAP_INCLUDES)\nBUILD_LDFLAGS ?= $(LDFLAGS)\nBUILD_SED ?= sed\nBUILD_GREP ?= grep\nBUILD_EGREP ?= $(BUILD_GREP) -E\nBUILD_FGREP ?= $(BUILD_GREP) -F\n\n# Plan to eventually redefine BUILD_GPERF to be the actual gperf tool\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/Make.Rules"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 12,
                  "endLine": 96,
                  "snippet": {
                    "text": "BUILD_CFLAGS ?= $(BUILD_COPTS)\nBUILD_CPPFLAGS += -Dlinux $(WARNINGS) $(DEBUG) $(DEFINES) $(LIBCAP_INCLUDES)\nBUILD_LDFLAGS ?= $(LDFLAGS)\nBUILD_SED ?= sed\nBUILD_GREP ?= grep\nBUILD_EGREP ?= $(BUILD_GREP) -E\nBUILD_FGREP ?= $(BUILD_GREP) -F\n\n",
                    "rendered": {
                      "text": "BUILD_CFLAGS ?= $(BUILD_COPTS)\nBUILD_CPPFLAGS += -Dlinux $(WARNINGS) $(DEBUG) $(DEFINES) $(LIBCAP_INCLUDES)\nBUILD_LDFLAGS ?= $(LDFLAGS)\nBUILD_SED ?= sed\nBUILD_GREP ?= grep\nBUILD_EGREP ?= $(BUILD_GREP) -E\nBUILD_FGREP ?= $(BUILD_GREP) -F\n\n",
                      "markdown": "`BUILD_CFLAGS ?= $(BUILD_COPTS)\nBUILD_CPPFLAGS += -Dlinux $(WARNINGS) $(DEBUG) $(DEFINES) $(LIBCAP_INCLUDES)\nBUILD_LDFLAGS ?= $(LDFLAGS)\nBUILD_SED ?= sed\nBUILD_GREP ?= grep\nBUILD_EGREP ?= $(BUILD_GREP) -E\nBUILD_FGREP ?= $(BUILD_GREP) -F\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/doc/cap_clear.3"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 14,
                  "endLine": 116,
                  "endColumn": 18,
                  "snippet": {
                    "text": ".BR cap_max_bits ()\nreturns the number of capability values known to the running\nkernel. This may differ from libcap's list known at compilation\ntime. Unnamed, at compilation time, capabilites can be referred to\nnumerically and libcap will handle them appropriately. Note, the\nrunning kernel wins and it gets to define what \"all\" capabilities\nmeans.\n",
                    "rendered": {
                      "text": ".BR cap_max_bits ()\nreturns the number of capability values known to the running\nkernel. This may differ from libcap's list known at compilation\ntime. Unnamed, at compilation time, capabilites can be referred to\nnumerically and libcap will handle them appropriately. Note, the\nrunning kernel wins and it gets to define what \"all\" capabilities\nmeans.\n",
                      "markdown": "`.BR cap_max_bits ()\nreturns the number of capability values known to the running\nkernel. This may differ from libcap's list known at compilation\ntime. Unnamed, at compilation time, capabilites can be referred to\nnumerically and libcap will handle them appropriately. Note, the\nrunning kernel wins and it gets to define what \"all\" capabilities\nmeans.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/doc/cap_clear.3"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 48,
                  "endLine": 115,
                  "endColumn": 52,
                  "snippet": {
                    "text": ".PP\n.BR cap_max_bits ()\nreturns the number of capability values known to the running\nkernel. This may differ from libcap's list known at compilation\ntime. Unnamed, at compilation time, capabilites can be referred to\nnumerically and libcap will handle them appropriately. Note, the\nrunning kernel wins and it gets to define what \"all\" capabilities\n",
                    "rendered": {
                      "text": ".PP\n.BR cap_max_bits ()\nreturns the number of capability values known to the running\nkernel. This may differ from libcap's list known at compilation\ntime. Unnamed, at compilation time, capabilites can be referred to\nnumerically and libcap will handle them appropriately. Note, the\nrunning kernel wins and it gets to define what \"all\" capabilities\n",
                      "markdown": "`.PP\n.BR cap_max_bits ()\nreturns the number of capability values known to the running\nkernel. This may differ from libcap's list known at compilation\ntime. Unnamed, at compilation time, capabilites can be referred to\nnumerically and libcap will handle them appropriately. Note, the\nrunning kernel wins and it gets to define what \"all\" capabilities\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/go/Makefile"
                },
                "region": {
                  "startLine": 175,
                  "startColumn": 5,
                  "endLine": 175,
                  "endColumn": 10,
                  "snippet": {
                    "text": "# part of the install.  Most distribution's packagers skip the Go\n# builds, so it was not well used any way. The new hotness is to just\n# use Go modules and download the packages from a tagged release in\n# the git repository. For an example of how to do this from scratch:\n#\n#   https://sites.google.com/site/fullycapable/getting-started-with-go/building-go-programs-that-manipulate-capabilities\n#\n",
                    "rendered": {
                      "text": "# part of the install.  Most distribution's packagers skip the Go\n# builds, so it was not well used any way. The new hotness is to just\n# use Go modules and download the packages from a tagged release in\n# the git repository. For an example of how to do this from scratch:\n#\n#   https://sites.google.com/site/fullycapable/getting-started-with-go/building-go-programs-that-manipulate-capabilities\n#\n",
                      "markdown": "`# part of the install.  Most distribution's packagers skip the Go\n# builds, so it was not well used any way. The new hotness is to just\n# use Go modules and download the packages from a tagged release in\n# the git repository. For an example of how to do this from scratch:\n#\n#   https://sites.google.com/site/fullycapable/getting-started-with-go/building-go-programs-that-manipulate-capabilities\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/go/Makefile"
                },
                "region": {
                  "startLine": 139,
                  "endLine": 139,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tLD_LIBRARY_PATH=../libcap ./compare-cap\n\t./psx-signals\n\t./mismatch || exit 0 ; exit 1\n\ttimeout 5 ./psx-fd || echo \"this is a known Go bug\"\nifeq ($(CGO_REQUIRED),0)\n\t$(MAKE) psx-signals-cgo mismatch-cgo psx-fd-cgo\n\t./psx-signals-cgo\n",
                    "rendered": {
                      "text": "\tLD_LIBRARY_PATH=../libcap ./compare-cap\n\t./psx-signals\n\t./mismatch || exit 0 ; exit 1\n\ttimeout 5 ./psx-fd || echo \"this is a known Go bug\"\nifeq ($(CGO_REQUIRED),0)\n\t$(MAKE) psx-signals-cgo mismatch-cgo psx-fd-cgo\n\t./psx-signals-cgo\n",
                      "markdown": "`\tLD_LIBRARY_PATH=../libcap ./compare-cap\n\t./psx-signals\n\t./mismatch || exit 0 ; exit 1\n\ttimeout 5 ./psx-fd || echo \"this is a known Go bug\"\nifeq ($(CGO_REQUIRED),0)\n\t$(MAKE) psx-signals-cgo mismatch-cgo psx-fd-cgo\n\t./psx-signals-cgo\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/go/Makefile"
                },
                "region": {
                  "startLine": 49,
                  "endLine": 49,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\ngood-names.go: $(topdir)/libcap/cap_names.h vendor/$(IMPORTDIR)/cap mknames.go\n\tCC=\"$(CC)\" $(GO) run -mod=vendor mknames.go --header=$< --textdir=$(topdir)/doc/values | gofmt > $@ || rm -f $@\n\tdiff -u ../cap/names.go $@\n\nPSXGOPACKAGE: vendor/$(IMPORTDIR)/psx ../psx/*.go $(DEPS)\n\ttouch $@\n",
                    "rendered": {
                      "text": "\ngood-names.go: $(topdir)/libcap/cap_names.h vendor/$(IMPORTDIR)/cap mknames.go\n\tCC=\"$(CC)\" $(GO) run -mod=vendor mknames.go --header=$< --textdir=$(topdir)/doc/values | gofmt > $@ || rm -f $@\n\tdiff -u ../cap/names.go $@\n\nPSXGOPACKAGE: vendor/$(IMPORTDIR)/psx ../psx/*.go $(DEPS)\n\ttouch $@\n",
                      "markdown": "`\ngood-names.go: $(topdir)/libcap/cap_names.h vendor/$(IMPORTDIR)/cap mknames.go\n\tCC=\"$(CC)\" $(GO) run -mod=vendor mknames.go --header=$< --textdir=$(topdir)/doc/values | gofmt > $@ || rm -f $@\n\tdiff -u ../cap/names.go $@\n\nPSXGOPACKAGE: vendor/$(IMPORTDIR)/psx ../psx/*.go $(DEPS)\n\ttouch $@\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/bug216610/go/fibber/fibs_linux_arm.s"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 48,
                  "endLine": 18,
                  "endColumn": 52,
                  "snippet": {
                    "text": "// Header to this function wrapper is the last time we can voluntarily\n// yield to some other goroutine.\n//\n// Conventions: PC == R15, SP == R13, LR == R14, IP (scratch) = R12\nTEXT ·syso(SB),$0-8\n\tMOVW\tcFn+0(FP), R14\n\tMOVW    state+4(FP), R0\n",
                    "rendered": {
                      "text": "// Header to this function wrapper is the last time we can voluntarily\n// yield to some other goroutine.\n//\n// Conventions: PC == R15, SP == R13, LR == R14, IP (scratch) = R12\nTEXT ·syso(SB),$0-8\n\tMOVW\tcFn+0(FP), R14\n\tMOVW    state+4(FP), R0\n",
                      "markdown": "`// Header to this function wrapper is the last time we can voluntarily\n// yield to some other goroutine.\n//\n// Conventions: PC == R15, SP == R13, LR == R14, IP (scratch) = R12\nTEXT ·syso(SB),$0-8\n\tMOVW\tcFn+0(FP), R14\n\tMOVW    state+4(FP), R0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/bug216610/go/fibber/fibs_linux_arm.s"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 46,
                  "endLine": 15,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\n#define FINDEX(n) (8*n)\n\n// Header to this function wrapper is the last time we can voluntarily\n// yield to some other goroutine.\n//\n// Conventions: PC == R15, SP == R13, LR == R14, IP (scratch) = R12\n",
                    "rendered": {
                      "text": "\n#define FINDEX(n) (8*n)\n\n// Header to this function wrapper is the last time we can voluntarily\n// yield to some other goroutine.\n//\n// Conventions: PC == R15, SP == R13, LR == R14, IP (scratch) = R12\n",
                      "markdown": "`\n#define FINDEX(n) (8*n)\n\n// Header to this function wrapper is the last time we can voluntarily\n// yield to some other goroutine.\n//\n// Conventions: PC == R15, SP == R13, LR == R14, IP (scratch) = R12\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/bug216610/go/fibber/fibs_linux_arm.s"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 44,
                  "endLine": 7,
                  "endColumn": 49,
                  "snippet": {
                    "text": "// Ref:\n//   https://stackoverflow.com/questions/261419/what-registers-to-save-in-the-arm-c-calling-convention\n//\n// This is not strictly needed, but it makes gdb debugging less\n// confusing because spacer ends up being an alias for the TEXT\n// section start.\nTEXT ·spacer(SB),$0\n",
                    "rendered": {
                      "text": "// Ref:\n//   https://stackoverflow.com/questions/261419/what-registers-to-save-in-the-arm-c-calling-convention\n//\n// This is not strictly needed, but it makes gdb debugging less\n// confusing because spacer ends up being an alias for the TEXT\n// section start.\nTEXT ·spacer(SB),$0\n",
                      "markdown": "`// Ref:\n//   https://stackoverflow.com/questions/261419/what-registers-to-save-in-the-arm-c-calling-convention\n//\n// This is not strictly needed, but it makes gdb debugging less\n// confusing because spacer ends up being an alias for the TEXT\n// section start.\nTEXT ·spacer(SB),$0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/Makefile"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 16,
                  "endLine": 83,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\tgit tag -u D41A6DF2 -s psx/v$(GOMAJOR).$(VERSION).$(MINOR) -m \"This is the (stable) version tag for the 'psx' Go package associated with libcap-$(VERSION).$(MINOR).\"\n\tgit tag -u D41A6DF2 -s cap/v$(GOMAJOR).$(VERSION).$(MINOR) -m \"This is the (stable) version tag for the 'cap' Go package associated with libcap-$(VERSION).$(MINOR).\"\n\t$(MAKE) release\n\t@echo \"sign the tar file using korg key\"\n\tcd .. && gpg -sba -u E2CCF3F4 libcap-$(VERSION).$(MINOR).tar\n\t$(MAKE) morgangodoc\n",
                    "rendered": {
                      "text": "\tgit tag -u D41A6DF2 -s psx/v$(GOMAJOR).$(VERSION).$(MINOR) -m \"This is the (stable) version tag for the 'psx' Go package associated with libcap-$(VERSION).$(MINOR).\"\n\tgit tag -u D41A6DF2 -s cap/v$(GOMAJOR).$(VERSION).$(MINOR) -m \"This is the (stable) version tag for the 'cap' Go package associated with libcap-$(VERSION).$(MINOR).\"\n\t$(MAKE) release\n\t@echo \"sign the tar file using korg key\"\n\tcd .. && gpg -sba -u E2CCF3F4 libcap-$(VERSION).$(MINOR).tar\n\t$(MAKE) morgangodoc\n",
                      "markdown": "`\tgit tag -u D41A6DF2 -s psx/v$(GOMAJOR).$(VERSION).$(MINOR) -m \"This is the (stable) version tag for the 'psx' Go package associated with libcap-$(VERSION).$(MINOR).\"\n\tgit tag -u D41A6DF2 -s cap/v$(GOMAJOR).$(VERSION).$(MINOR) -m \"This is the (stable) version tag for the 'cap' Go package associated with libcap-$(VERSION).$(MINOR).\"\n\t$(MAKE) release\n\t@echo \"sign the tar file using korg key\"\n\tcd .. && gpg -sba -u E2CCF3F4 libcap-$(VERSION).$(MINOR).tar\n\t$(MAKE) morgangodoc\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/Makefile"
                },
                "region": {
                  "startLine": 81,
                  "endLine": 81,
                  "endColumn": 5,
                  "snippet": {
                    "text": "JOR).$(VERSION).$(MINOR) -m \"This is the version tag for the 'libcap' Go base directory associated with libcap-$(VERSION).$(MINOR).\"\n\tgit tag -u D41A6DF2 -s psx/v$(GOMAJOR).$(VERSION).$(MINOR) -m \"This is the (stable) version tag for the 'psx' Go package associated with libcap-$(VERSION).$(MINOR).\"\n\tgit tag -u D41A6DF2 -s cap/v$(GOMAJOR).$(VERSION).$(MINOR) -m \"This is the (stable) version tag for the 'cap' Go package associated with libcap-$(VERSION).$(MINOR).\"\n\t$(MAKE) release\n\t@echo \"sign the tar file using korg key\"\n\tcd .. && gpg -sba -u E2CCF3F4 libcap-$(VERSION).$(MINOR).tar\n\t$(MAKE) morgango",
                    "rendered": {
                      "text": "JOR).$(VERSION).$(MINOR) -m \"This is the version tag for the 'libcap' Go base directory associated with libcap-$(VERSION).$(MINOR).\"\n\tgit tag -u D41A6DF2 -s psx/v$(GOMAJOR).$(VERSION).$(MINOR) -m \"This is the (stable) version tag for the 'psx' Go package associated with libcap-$(VERSION).$(MINOR).\"\n\tgit tag -u D41A6DF2 -s cap/v$(GOMAJOR).$(VERSION).$(MINOR) -m \"This is the (stable) version tag for the 'cap' Go package associated with libcap-$(VERSION).$(MINOR).\"\n\t$(MAKE) release\n\t@echo \"sign the tar file using korg key\"\n\tcd .. && gpg -sba -u E2CCF3F4 libcap-$(VERSION).$(MINOR).tar\n\t$(MAKE) morgango",
                      "markdown": "`JOR).$(VERSION).$(MINOR) -m \"This is the version tag for the 'libcap' Go base directory associated with libcap-$(VERSION).$(MINOR).\"\n\tgit tag -u D41A6DF2 -s psx/v$(GOMAJOR).$(VERSION).$(MINOR) -m \"This is the (stable) version tag for the 'psx' Go package associated with libcap-$(VERSION).$(MINOR).\"\n\tgit tag -u D41A6DF2 -s cap/v$(GOMAJOR).$(VERSION).$(MINOR) -m \"This is the (stable) version tag for the 'cap' Go package associated with libcap-$(VERSION).$(MINOR).\"\n\t$(MAKE) release\n\t@echo \"sign the tar file using korg key\"\n\tcd .. && gpg -sba -u E2CCF3F4 libcap-$(VERSION).$(MINOR).tar\n\t$(MAKE) morgango`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/Makefile"
                },
                "region": {
                  "startLine": 80,
                  "endLine": 80,
                  "endColumn": 5,
                  "snippet": {
                    "text": "CF3F4 -s libcap-korg-$(VERSION).$(MINOR) -m \"This is libcap-$(VERSION).$(MINOR)\"\n\t@echo \"The following are for the Go module tracking.\"\n\tgit tag -u D41A6DF2 -s v$(GOMAJOR).$(VERSION).$(MINOR) -m \"This is the version tag for the 'libcap' Go base directory associated with libcap-$(VERSION).$(MINOR).\"\n\tgit tag -u D41A6DF2 -s psx/v$(GOMAJOR).$(VERSION).$(MINOR) -m \"This is the (stable) version tag for the 'psx' Go package associated with libcap-$(VERSION).$(MINOR).\"\n\tgit tag -u D41A6DF2 -s cap/v$(GOMAJOR).$(VERSION).$(MINOR) -m \"This is the (stable) version tag for the 'cap' Go package associated with ",
                    "rendered": {
                      "text": "CF3F4 -s libcap-korg-$(VERSION).$(MINOR) -m \"This is libcap-$(VERSION).$(MINOR)\"\n\t@echo \"The following are for the Go module tracking.\"\n\tgit tag -u D41A6DF2 -s v$(GOMAJOR).$(VERSION).$(MINOR) -m \"This is the version tag for the 'libcap' Go base directory associated with libcap-$(VERSION).$(MINOR).\"\n\tgit tag -u D41A6DF2 -s psx/v$(GOMAJOR).$(VERSION).$(MINOR) -m \"This is the (stable) version tag for the 'psx' Go package associated with libcap-$(VERSION).$(MINOR).\"\n\tgit tag -u D41A6DF2 -s cap/v$(GOMAJOR).$(VERSION).$(MINOR) -m \"This is the (stable) version tag for the 'cap' Go package associated with ",
                      "markdown": "`CF3F4 -s libcap-korg-$(VERSION).$(MINOR) -m \"This is libcap-$(VERSION).$(MINOR)\"\n\t@echo \"The following are for the Go module tracking.\"\n\tgit tag -u D41A6DF2 -s v$(GOMAJOR).$(VERSION).$(MINOR) -m \"This is the version tag for the 'libcap' Go base directory associated with libcap-$(VERSION).$(MINOR).\"\n\tgit tag -u D41A6DF2 -s psx/v$(GOMAJOR).$(VERSION).$(MINOR) -m \"This is the (stable) version tag for the 'psx' Go package associated with libcap-$(VERSION).$(MINOR).\"\n\tgit tag -u D41A6DF2 -s cap/v$(GOMAJOR).$(VERSION).$(MINOR) -m \"This is the (stable) version tag for the 'cap' Go package associated with `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/Makefile"
                },
                "region": {
                  "startLine": 79,
                  "endLine": 79,
                  "endColumn": 5,
                  "snippet": {
                    "text": "tag twice: older DSA key; and newer RSA (kernel.org) key\"\n\tgit tag -u D41A6DF2 -s libcap-$(VERSION).$(MINOR) -m \"This is libcap-$(VERSION).$(MINOR)\"\n\tgit tag -u E2CCF3F4 -s libcap-korg-$(VERSION).$(MINOR) -m \"This is libcap-$(VERSION).$(MINOR)\"\n\t@echo \"The following are for the Go module tracking.\"\n\tgit tag -u D41A6DF2 -s v$(GOMAJOR).$(VERSION).$(MINOR) -m \"This is the version tag for the 'libcap' Go base directory associated with libcap-$(VERSION).$(MINOR).\"\n\tgit tag -u D41A6DF2 -s psx/v$(GOMAJOR).$(VERSION).$(MINOR) -m \"This is the (stable) version tag for the 'psx' Go package associated with lib",
                    "rendered": {
                      "text": "tag twice: older DSA key; and newer RSA (kernel.org) key\"\n\tgit tag -u D41A6DF2 -s libcap-$(VERSION).$(MINOR) -m \"This is libcap-$(VERSION).$(MINOR)\"\n\tgit tag -u E2CCF3F4 -s libcap-korg-$(VERSION).$(MINOR) -m \"This is libcap-$(VERSION).$(MINOR)\"\n\t@echo \"The following are for the Go module tracking.\"\n\tgit tag -u D41A6DF2 -s v$(GOMAJOR).$(VERSION).$(MINOR) -m \"This is the version tag for the 'libcap' Go base directory associated with libcap-$(VERSION).$(MINOR).\"\n\tgit tag -u D41A6DF2 -s psx/v$(GOMAJOR).$(VERSION).$(MINOR) -m \"This is the (stable) version tag for the 'psx' Go package associated with lib",
                      "markdown": "`tag twice: older DSA key; and newer RSA (kernel.org) key\"\n\tgit tag -u D41A6DF2 -s libcap-$(VERSION).$(MINOR) -m \"This is libcap-$(VERSION).$(MINOR)\"\n\tgit tag -u E2CCF3F4 -s libcap-korg-$(VERSION).$(MINOR) -m \"This is libcap-$(VERSION).$(MINOR)\"\n\t@echo \"The following are for the Go module tracking.\"\n\tgit tag -u D41A6DF2 -s v$(GOMAJOR).$(VERSION).$(MINOR) -m \"This is the version tag for the 'libcap' Go base directory associated with libcap-$(VERSION).$(MINOR).\"\n\tgit tag -u D41A6DF2 -s psx/v$(GOMAJOR).$(VERSION).$(MINOR) -m \"This is the (stable) version tag for the 'psx' Go package associated with lib`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/Makefile"
                },
                "region": {
                  "startLine": 77,
                  "endLine": 77,
                  "endColumn": 5,
                  "snippet": {
                    "text": "$(GOMAJOR).$(VERSION).$(MINOR)\"\n\t@echo\n\t@echo \"This will cause a go.dev documentation update.\"\n\nmorganrelease: distcheck\n\t@echo \"sign the main library tag twice: older DSA key; and newer RSA (kernel.org) key\"\n\tgit tag -u D41A6DF2 -s libcap-$(VERSION).$(MINOR) -m \"This is libcap-$(VERSION).$(MINOR)\"\n\tgit tag -u E2CCF3F4 -s libcap-korg-$(VERSION).$(MINOR) -m \"This is libcap-$(VERSION).$(MINOR)\"\n\t@echo \"The following are for the Go module tracking.\"\n\tgit tag -u D41A6DF2 -s v$(GOMAJOR).$(VERSION).$(MINOR) -m \"This is the version tag for the 'libcap' Go base directory associated with libcap-$(VERSION).$",
                    "rendered": {
                      "text": "$(GOMAJOR).$(VERSION).$(MINOR)\"\n\t@echo\n\t@echo \"This will cause a go.dev documentation update.\"\n\nmorganrelease: distcheck\n\t@echo \"sign the main library tag twice: older DSA key; and newer RSA (kernel.org) key\"\n\tgit tag -u D41A6DF2 -s libcap-$(VERSION).$(MINOR) -m \"This is libcap-$(VERSION).$(MINOR)\"\n\tgit tag -u E2CCF3F4 -s libcap-korg-$(VERSION).$(MINOR) -m \"This is libcap-$(VERSION).$(MINOR)\"\n\t@echo \"The following are for the Go module tracking.\"\n\tgit tag -u D41A6DF2 -s v$(GOMAJOR).$(VERSION).$(MINOR) -m \"This is the version tag for the 'libcap' Go base directory associated with libcap-$(VERSION).$",
                      "markdown": "`$(GOMAJOR).$(VERSION).$(MINOR)\"\n\t@echo\n\t@echo \"This will cause a go.dev documentation update.\"\n\nmorganrelease: distcheck\n\t@echo \"sign the main library tag twice: older DSA key; and newer RSA (kernel.org) key\"\n\tgit tag -u D41A6DF2 -s libcap-$(VERSION).$(MINOR) -m \"This is libcap-$(VERSION).$(MINOR)\"\n\tgit tag -u E2CCF3F4 -s libcap-korg-$(VERSION).$(MINOR) -m \"This is libcap-$(VERSION).$(MINOR)\"\n\t@echo \"The following are for the Go module tracking.\"\n\tgit tag -u D41A6DF2 -s v$(GOMAJOR).$(VERSION).$(MINOR) -m \"This is the version tag for the 'libcap' Go base directory associated with libcap-$(VERSION).$`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/Makefile"
                },
                "region": {
                  "startLine": 76,
                  "endLine": 76,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nmorganrelease: distcheck\n\t@echo \"sign the main library tag twice: older DSA key; and newer RSA (kernel.org) key\"\n\tgit tag -u D41A6DF2 -s libcap-$(VERSION).$(MINOR) -m \"This is libcap-$(VERSION).$(MINOR)\"\n\tgit tag -u E2CCF3F4 -s libcap-korg-$(VERSION).$(MINOR) -m \"This is libcap-$(VERSION).$(MINOR)\"\n\t@echo \"The following are for the Go module tracking.\"\n\tgit tag -u D41A6DF2 -s v$(GOMAJOR).$(VERSION).$(MINOR) -m \"This is the version tag for the 'libcap' Go base directory associated with libcap-$(VERSION).$(MINOR).\"\n",
                    "rendered": {
                      "text": "\nmorganrelease: distcheck\n\t@echo \"sign the main library tag twice: older DSA key; and newer RSA (kernel.org) key\"\n\tgit tag -u D41A6DF2 -s libcap-$(VERSION).$(MINOR) -m \"This is libcap-$(VERSION).$(MINOR)\"\n\tgit tag -u E2CCF3F4 -s libcap-korg-$(VERSION).$(MINOR) -m \"This is libcap-$(VERSION).$(MINOR)\"\n\t@echo \"The following are for the Go module tracking.\"\n\tgit tag -u D41A6DF2 -s v$(GOMAJOR).$(VERSION).$(MINOR) -m \"This is the version tag for the 'libcap' Go base directory associated with libcap-$(VERSION).$(MINOR).\"\n",
                      "markdown": "`\nmorganrelease: distcheck\n\t@echo \"sign the main library tag twice: older DSA key; and newer RSA (kernel.org) key\"\n\tgit tag -u D41A6DF2 -s libcap-$(VERSION).$(MINOR) -m \"This is libcap-$(VERSION).$(MINOR)\"\n\tgit tag -u E2CCF3F4 -s libcap-korg-$(VERSION).$(MINOR) -m \"This is libcap-$(VERSION).$(MINOR)\"\n\t@echo \"The following are for the Go module tracking.\"\n\tgit tag -u D41A6DF2 -s v$(GOMAJOR).$(VERSION).$(MINOR) -m \"This is the version tag for the 'libcap' Go base directory associated with libcap-$(VERSION).$(MINOR).\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/Makefile"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 52,
                  "endLine": 48,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\t@echo \"All good!\"\n\nrelease: distclean\n\tcd .. && ln -s libcap libcap-$(VERSION).$(MINOR) && tar cvf libcap-$(VERSION).$(MINOR).tar --exclude patches libcap-$(VERSION).$(MINOR)/* && rm libcap-$(VERSION).$(MINOR)\n\nktest: all\n\t$(MAKE) -C kdebug test\n",
                    "rendered": {
                      "text": "\t@echo \"All good!\"\n\nrelease: distclean\n\tcd .. && ln -s libcap libcap-$(VERSION).$(MINOR) && tar cvf libcap-$(VERSION).$(MINOR).tar --exclude patches libcap-$(VERSION).$(MINOR)/* && rm libcap-$(VERSION).$(MINOR)\n\nktest: all\n\t$(MAKE) -C kdebug test\n",
                      "markdown": "`\t@echo \"All good!\"\n\nrelease: distclean\n\tcd .. && ln -s libcap libcap-$(VERSION).$(MINOR) && tar cvf libcap-$(VERSION).$(MINOR).tar --exclude patches libcap-$(VERSION).$(MINOR)/* && rm libcap-$(VERSION).$(MINOR)\n\nktest: all\n\t$(MAKE) -C kdebug test\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/doc/cap_get_proc.3"
                },
                "region": {
                  "startLine": 270,
                  "startColumn": 29,
                  "endLine": 270,
                  "endColumn": 38,
                  "snippet": {
                    "text": ".BR psx_syscall \"(3) and \" psx_syscall6 (3)\nto perform state setting system calls. Notably, this also ensures that\n.BI cap_prctlw ()\ncan be used to ensure process control bits are shared over all threads\nof a single process.\n.SS capgetp() and capsetp()\nThe library also supports the deprecated functions:\n",
                    "rendered": {
                      "text": ".BR psx_syscall \"(3) and \" psx_syscall6 (3)\nto perform state setting system calls. Notably, this also ensures that\n.BI cap_prctlw ()\ncan be used to ensure process control bits are shared over all threads\nof a single process.\n.SS capgetp() and capsetp()\nThe library also supports the deprecated functions:\n",
                      "markdown": "`.BR psx_syscall \"(3) and \" psx_syscall6 (3)\nto perform state setting system calls. Notably, this also ensures that\n.BI cap_prctlw ()\ncan be used to ensure process control bits are shared over all threads\nof a single process.\n.SS capgetp() and capsetp()\nThe library also supports the deprecated functions:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/doc/pam_cap.8"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 40,
                  "endLine": 56,
                  "endColumn": 44,
                  "snippet": {
                    "text": ".IP \"\\[ci]\" 4\n\\fBdefault=\\fR\\fIIAB\\fR: This argument is ignored if the prevailing\nconfiguration file contains a \"\\fB*\\fR\" rule\\. If there is no such\nrule, the \\fIIAB\\fR 3\\-tuple is inserted at the end of the config file\nand applies to all \\fBPAM_USER\\fRs not covered by an earlier\nrule\\. Note, if you want all \\fBPAM_USER\\fRs to be covered by this\ndefault rule, you can supply the module argument\n",
                    "rendered": {
                      "text": ".IP \"\\[ci]\" 4\n\\fBdefault=\\fR\\fIIAB\\fR: This argument is ignored if the prevailing\nconfiguration file contains a \"\\fB*\\fR\" rule\\. If there is no such\nrule, the \\fIIAB\\fR 3\\-tuple is inserted at the end of the config file\nand applies to all \\fBPAM_USER\\fRs not covered by an earlier\nrule\\. Note, if you want all \\fBPAM_USER\\fRs to be covered by this\ndefault rule, you can supply the module argument\n",
                      "markdown": "`.IP \"\\[ci]\" 4\n\\fBdefault=\\fR\\fIIAB\\fR: This argument is ignored if the prevailing\nconfiguration file contains a \"\\fB*\\fR\" rule\\. If there is no such\nrule, the \\fIIAB\\fR 3\\-tuple is inserted at the end of the config file\nand applies to all \\fBPAM_USER\\fRs not covered by an earlier\nrule\\. Note, if you want all \\fBPAM_USER\\fRs to be covered by this\ndefault rule, you can supply the module argument\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/doc/pam_cap.8"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 66,
                  "endLine": 46,
                  "snippet": {
                    "text": ".IP \"\\[ci]\" 4\n\\fBkeepcaps\\fR: This is as much as the \\fBpam_cap\\.so\\fR module can do\nto help an application support use of the \\fIAmbient\\fR capability\nvector\\. The application support for the \\fIAmbient\\fR set is poor at\nthe present time\\.\n.IP \"\\[ci]\" 4\n\\fBautoauth\\fR: This argument causes the \\fBpam_cap\\.so\\fR module to\nreturn \\fBPAM_SUCCESS\\fR if the \\fBPAM_USER\\fR being authenticated\n",
                    "rendered": {
                      "text": ".IP \"\\[ci]\" 4\n\\fBkeepcaps\\fR: This is as much as the \\fBpam_cap\\.so\\fR module can do\nto help an application support use of the \\fIAmbient\\fR capability\nvector\\. The application support for the \\fIAmbient\\fR set is poor at\nthe present time\\.\n.IP \"\\[ci]\" 4\n\\fBautoauth\\fR: This argument causes the \\fBpam_cap\\.so\\fR module to\nreturn \\fBPAM_SUCCESS\\fR if the \\fBPAM_USER\\fR being authenticated\n",
                      "markdown": "`.IP \"\\[ci]\" 4\n\\fBkeepcaps\\fR: This is as much as the \\fBpam_cap\\.so\\fR module can do\nto help an application support use of the \\fIAmbient\\fR capability\nvector\\. The application support for the \\fIAmbient\\fR set is poor at\nthe present time\\.\n.IP \"\\[ci]\" 4\n\\fBautoauth\\fR: This argument causes the \\fBpam_cap\\.so\\fR module to\nreturn \\fBPAM_SUCCESS\\fR if the \\fBPAM_USER\\fR being authenticated\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/doc/pam_cap.8"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 46,
                  "endLine": 35,
                  "endColumn": 50,
                  "snippet": {
                    "text": ".P\nThe module arguments are:\n.IP \"\\[ci]\" 4\n\\fBdebug\\fR: While supported, this is a no\\-op at present\\.\n.IP \"\\[ci]\" 4\n\\fBconfig=\\fR\\fI/path/to/file\\fR: Override the default config for the\nmodule\\. The unspecified default value for this file is\n",
                    "rendered": {
                      "text": ".P\nThe module arguments are:\n.IP \"\\[ci]\" 4\n\\fBdebug\\fR: While supported, this is a no\\-op at present\\.\n.IP \"\\[ci]\" 4\n\\fBconfig=\\fR\\fI/path/to/file\\fR: Override the default config for the\nmodule\\. The unspecified default value for this file is\n",
                      "markdown": "`.P\nThe module arguments are:\n.IP \"\\[ci]\" 4\n\\fBdebug\\fR: While supported, this is a no\\-op at present\\.\n.IP \"\\[ci]\" 4\n\\fBconfig=\\fR\\fI/path/to/file\\fR: Override the default config for the\nmodule\\. The unspecified default value for this file is\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/doc/pam_cap.8"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 4,
                  "endLine": 15,
                  "endColumn": 8,
                  "snippet": {
                    "text": "adding \\fIAmbient\\fR vector capabilities\\.\n.P\nFor general PAM apps to work correctly, the application must be run\nwith at least \\fBCAP_SETPCAP\\fR raised in its \\fIPermitted\\fR\ncapability flag\\. Many PAM applications run as \\fIroot\\fR, which has\nall of the bits in the \\fIBounding\\fR set raised, so this requirement\nis typically met\\. To grant an \\fIAmbient\\fR vector capability, the\n",
                    "rendered": {
                      "text": "adding \\fIAmbient\\fR vector capabilities\\.\n.P\nFor general PAM apps to work correctly, the application must be run\nwith at least \\fBCAP_SETPCAP\\fR raised in its \\fIPermitted\\fR\ncapability flag\\. Many PAM applications run as \\fIroot\\fR, which has\nall of the bits in the \\fIBounding\\fR set raised, so this requirement\nis typically met\\. To grant an \\fIAmbient\\fR vector capability, the\n",
                      "markdown": "`adding \\fIAmbient\\fR vector capabilities\\.\n.P\nFor general PAM apps to work correctly, the application must be run\nwith at least \\fBCAP_SETPCAP\\fR raised in its \\fIPermitted\\fR\ncapability flag\\. Many PAM applications run as \\fIroot\\fR, which has\nall of the bits in the \\fIBounding\\fR set raised, so this requirement\nis typically met\\. To grant an \\fIAmbient\\fR vector capability, the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/goapps/gowns/gowns.go"
                },
                "region": {
                  "startLine": 243,
                  "startColumn": 20,
                  "endLine": 243,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n\tp, err := os.FindProcess(pid)\n\tif err != nil {\n\t\tlog.Fatalf(\"cannot find process: %v\", err)\n\t}\n\tstate, err := p.Wait()\n\tif err != nil {\n",
                    "rendered": {
                      "text": "\n\tp, err := os.FindProcess(pid)\n\tif err != nil {\n\t\tlog.Fatalf(\"cannot find process: %v\", err)\n\t}\n\tstate, err := p.Wait()\n\tif err != nil {\n",
                      "markdown": "`\n\tp, err := os.FindProcess(pid)\n\tif err != nil {\n\t\tlog.Fatalf(\"cannot find process: %v\", err)\n\t}\n\tstate, err := p.Wait()\n\tif err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/kdebug/test-bash.sh"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 1,
                  "endLine": 2,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#!/bin/sh\n# bash is used in various headers so we need a wrapper to invoke sh\n# instead.\nexec sh \"$@\"\n",
                    "rendered": {
                      "text": "#!/bin/sh\n# bash is used in various headers so we need a wrapper to invoke sh\n# instead.\nexec sh \"$@\"\n",
                      "markdown": "`#!/bin/sh\n# bash is used in various headers so we need a wrapper to invoke sh\n# instead.\nexec sh \"$@\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/kdebug/test-bash.sh"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 1,
                  "endLine": 2,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#!/bin/sh\n# bash is used in various headers so we need a wrapper to invoke sh\n# instead.\nexec sh \"$@\"\n",
                    "rendered": {
                      "text": "#!/bin/sh\n# bash is used in various headers so we need a wrapper to invoke sh\n# instead.\nexec sh \"$@\"\n",
                      "markdown": "`#!/bin/sh\n# bash is used in various headers so we need a wrapper to invoke sh\n# instead.\nexec sh \"$@\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/kdebug/test-kernel.sh"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 91,
                  "endLine": 65,
                  "endColumn": 97,
                  "snippet": {
                    "text": "    echo \"file /root/interactive $HERE/interactive 0755 0 0\" >> fs.conf\nfi\n\nCOMMANDS=\"awk cat chmod cp dmesg grep id less ln ls mkdir mount pwd rm rmdir sh sort umount uniq vi\"\nfor f in $COMMANDS; do\n    echo slink /bin/$f /sbin/busybox 0755 0 0 >> fs.conf\ndone\n",
                    "rendered": {
                      "text": "    echo \"file /root/interactive $HERE/interactive 0755 0 0\" >> fs.conf\nfi\n\nCOMMANDS=\"awk cat chmod cp dmesg grep id less ln ls mkdir mount pwd rm rmdir sh sort umount uniq vi\"\nfor f in $COMMANDS; do\n    echo slink /bin/$f /sbin/busybox 0755 0 0 >> fs.conf\ndone\n",
                      "markdown": "`    echo \"file /root/interactive $HERE/interactive 0755 0 0\" >> fs.conf\nfi\n\nCOMMANDS=\"awk cat chmod cp dmesg grep id less ln ls mkdir mount pwd rm rmdir sh sort umount uniq vi\"\nfor f in $COMMANDS; do\n    echo slink /bin/$f /sbin/busybox 0755 0 0 >> fs.conf\ndone\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/kdebug/test-kernel.sh"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 79,
                  "endLine": 65,
                  "endColumn": 85,
                  "snippet": {
                    "text": "    echo \"file /root/interactive $HERE/interactive 0755 0 0\" >> fs.conf\nfi\n\nCOMMANDS=\"awk cat chmod cp dmesg grep id less ln ls mkdir mount pwd rm rmdir sh sort umount uniq vi\"\nfor f in $COMMANDS; do\n    echo slink /bin/$f /sbin/busybox 0755 0 0 >> fs.conf\ndone\n",
                    "rendered": {
                      "text": "    echo \"file /root/interactive $HERE/interactive 0755 0 0\" >> fs.conf\nfi\n\nCOMMANDS=\"awk cat chmod cp dmesg grep id less ln ls mkdir mount pwd rm rmdir sh sort umount uniq vi\"\nfor f in $COMMANDS; do\n    echo slink /bin/$f /sbin/busybox 0755 0 0 >> fs.conf\ndone\n",
                      "markdown": "`    echo \"file /root/interactive $HERE/interactive 0755 0 0\" >> fs.conf\nfi\n\nCOMMANDS=\"awk cat chmod cp dmesg grep id less ln ls mkdir mount pwd rm rmdir sh sort umount uniq vi\"\nfor f in $COMMANDS; do\n    echo slink /bin/$f /sbin/busybox 0755 0 0 >> fs.conf\ndone\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/kdebug/test-kernel.sh"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 57,
                  "endLine": 65,
                  "endColumn": 64,
                  "snippet": {
                    "text": "    echo \"file /root/interactive $HERE/interactive 0755 0 0\" >> fs.conf\nfi\n\nCOMMANDS=\"awk cat chmod cp dmesg grep id less ln ls mkdir mount pwd rm rmdir sh sort umount uniq vi\"\nfor f in $COMMANDS; do\n    echo slink /bin/$f /sbin/busybox 0755 0 0 >> fs.conf\ndone\n",
                    "rendered": {
                      "text": "    echo \"file /root/interactive $HERE/interactive 0755 0 0\" >> fs.conf\nfi\n\nCOMMANDS=\"awk cat chmod cp dmesg grep id less ln ls mkdir mount pwd rm rmdir sh sort umount uniq vi\"\nfor f in $COMMANDS; do\n    echo slink /bin/$f /sbin/busybox 0755 0 0 >> fs.conf\ndone\n",
                      "markdown": "`    echo \"file /root/interactive $HERE/interactive 0755 0 0\" >> fs.conf\nfi\n\nCOMMANDS=\"awk cat chmod cp dmesg grep id less ln ls mkdir mount pwd rm rmdir sh sort umount uniq vi\"\nfor f in $COMMANDS; do\n    echo slink /bin/$f /sbin/busybox 0755 0 0 >> fs.conf\ndone\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/kdebug/test-kernel.sh"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 32,
                  "endLine": 65,
                  "endColumn": 38,
                  "snippet": {
                    "text": "    echo \"file /root/interactive $HERE/interactive 0755 0 0\" >> fs.conf\nfi\n\nCOMMANDS=\"awk cat chmod cp dmesg grep id less ln ls mkdir mount pwd rm rmdir sh sort umount uniq vi\"\nfor f in $COMMANDS; do\n    echo slink /bin/$f /sbin/busybox 0755 0 0 >> fs.conf\ndone\n",
                    "rendered": {
                      "text": "    echo \"file /root/interactive $HERE/interactive 0755 0 0\" >> fs.conf\nfi\n\nCOMMANDS=\"awk cat chmod cp dmesg grep id less ln ls mkdir mount pwd rm rmdir sh sort umount uniq vi\"\nfor f in $COMMANDS; do\n    echo slink /bin/$f /sbin/busybox 0755 0 0 >> fs.conf\ndone\n",
                      "markdown": "`    echo \"file /root/interactive $HERE/interactive 0755 0 0\" >> fs.conf\nfi\n\nCOMMANDS=\"awk cat chmod cp dmesg grep id less ln ls mkdir mount pwd rm rmdir sh sort umount uniq vi\"\nfor f in $COMMANDS; do\n    echo slink /bin/$f /sbin/busybox 0755 0 0 >> fs.conf\ndone\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/kdebug/test-kernel.sh"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 23,
                  "endLine": 65,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    echo \"file /root/interactive $HERE/interactive 0755 0 0\" >> fs.conf\nfi\n\nCOMMANDS=\"awk cat chmod cp dmesg grep id less ln ls mkdir mount pwd rm rmdir sh sort umount uniq vi\"\nfor f in $COMMANDS; do\n    echo slink /bin/$f /sbin/busybox 0755 0 0 >> fs.conf\ndone\n",
                    "rendered": {
                      "text": "    echo \"file /root/interactive $HERE/interactive 0755 0 0\" >> fs.conf\nfi\n\nCOMMANDS=\"awk cat chmod cp dmesg grep id less ln ls mkdir mount pwd rm rmdir sh sort umount uniq vi\"\nfor f in $COMMANDS; do\n    echo slink /bin/$f /sbin/busybox 0755 0 0 >> fs.conf\ndone\n",
                      "markdown": "`    echo \"file /root/interactive $HERE/interactive 0755 0 0\" >> fs.conf\nfi\n\nCOMMANDS=\"awk cat chmod cp dmesg grep id less ln ls mkdir mount pwd rm rmdir sh sort umount uniq vi\"\nfor f in $COMMANDS; do\n    echo slink /bin/$f /sbin/busybox 0755 0 0 >> fs.conf\ndone\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/kdebug/test-kernel.sh"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 13,
                  "endLine": 65,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    echo \"file /root/interactive $HERE/interactive 0755 0 0\" >> fs.conf\nfi\n\nCOMMANDS=\"awk cat chmod cp dmesg grep id less ln ls mkdir mount pwd rm rmdir sh sort umount uniq vi\"\nfor f in $COMMANDS; do\n    echo slink /bin/$f /sbin/busybox 0755 0 0 >> fs.conf\ndone\n",
                    "rendered": {
                      "text": "    echo \"file /root/interactive $HERE/interactive 0755 0 0\" >> fs.conf\nfi\n\nCOMMANDS=\"awk cat chmod cp dmesg grep id less ln ls mkdir mount pwd rm rmdir sh sort umount uniq vi\"\nfor f in $COMMANDS; do\n    echo slink /bin/$f /sbin/busybox 0755 0 0 >> fs.conf\ndone\n",
                      "markdown": "`    echo \"file /root/interactive $HERE/interactive 0755 0 0\" >> fs.conf\nfi\n\nCOMMANDS=\"awk cat chmod cp dmesg grep id less ln ls mkdir mount pwd rm rmdir sh sort umount uniq vi\"\nfor f in $COMMANDS; do\n    echo slink /bin/$f /sbin/busybox 0755 0 0 >> fs.conf\ndone\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/kdebug/test-kernel.sh"
                },
                "region": {
                  "startLine": 28,
                  "endLine": 29,
                  "endColumn": 4,
                  "snippet": {
                    "text": "popd\n\nHERE=$(/bin/pwd)\n\ncat > fs.conf <<EOF\nfile /init test-init.sh 0755 0 0\ndir /etc 0755 0 0\nfile /etc/passwd test-passwd 0444 0 0\n",
                    "rendered": {
                      "text": "popd\n\nHERE=$(/bin/pwd)\n\ncat > fs.conf <<EOF\nfile /init test-init.sh 0755 0 0\ndir /etc 0755 0 0\nfile /etc/passwd test-passwd 0444 0 0\n",
                      "markdown": "`popd\n\nHERE=$(/bin/pwd)\n\ncat > fs.conf <<EOF\nfile /init test-init.sh 0755 0 0\ndir /etc 0755 0 0\nfile /etc/passwd test-passwd 0444 0 0\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/kdebug/test-init.sh"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 23,
                  "endLine": 8,
                  "endColumn": 6,
                  "snippet": {
                    "text": "echo -n \"Mounting filesystems ... \"\nmount -t proc proc /proc\nmount -t devtmpfs dev /dev\nmount -t sysfs sys /sys\nmount -t devpts pts /dev/pts\necho done\n\necho Hello, World\n",
                    "rendered": {
                      "text": "echo -n \"Mounting filesystems ... \"\nmount -t proc proc /proc\nmount -t devtmpfs dev /dev\nmount -t sysfs sys /sys\nmount -t devpts pts /dev/pts\necho done\n\necho Hello, World\n",
                      "markdown": "`echo -n \"Mounting filesystems ... \"\nmount -t proc proc /proc\nmount -t devtmpfs dev /dev\nmount -t sysfs sys /sys\nmount -t devpts pts /dev/pts\necho done\n\necho Hello, World\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/kdebug/test-init.sh"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 26,
                  "endLine": 7,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\necho -n \"Mounting filesystems ... \"\nmount -t proc proc /proc\nmount -t devtmpfs dev /dev\nmount -t sysfs sys /sys\nmount -t devpts pts /dev/pts\necho done\n\n",
                    "rendered": {
                      "text": "\necho -n \"Mounting filesystems ... \"\nmount -t proc proc /proc\nmount -t devtmpfs dev /dev\nmount -t sysfs sys /sys\nmount -t devpts pts /dev/pts\necho done\n\n",
                      "markdown": "`\necho -n \"Mounting filesystems ... \"\nmount -t proc proc /proc\nmount -t devtmpfs dev /dev\nmount -t sysfs sys /sys\nmount -t devpts pts /dev/pts\necho done\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/kdebug/test-init.sh"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 24,
                  "endLine": 6,
                  "endColumn": 6,
                  "snippet": {
                    "text": "PATH=/bin\n\necho -n \"Mounting filesystems ... \"\nmount -t proc proc /proc\nmount -t devtmpfs dev /dev\nmount -t sysfs sys /sys\nmount -t devpts pts /dev/pts\necho done\n",
                    "rendered": {
                      "text": "PATH=/bin\n\necho -n \"Mounting filesystems ... \"\nmount -t proc proc /proc\nmount -t devtmpfs dev /dev\nmount -t sysfs sys /sys\nmount -t devpts pts /dev/pts\necho done\n",
                      "markdown": "`PATH=/bin\n\necho -n \"Mounting filesystems ... \"\nmount -t proc proc /proc\nmount -t devtmpfs dev /dev\nmount -t sysfs sys /sys\nmount -t devpts pts /dev/pts\necho done\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/kdebug/test-init.sh"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 35,
                  "endLine": 5,
                  "endColumn": 6,
                  "snippet": {
                    "text": "#!/bin/sh\nPATH=/bin\n\necho -n \"Mounting filesystems ... \"\nmount -t proc proc /proc\nmount -t devtmpfs dev /dev\nmount -t sysfs sys /sys\nmount -t devpts pts /dev/pts\n",
                    "rendered": {
                      "text": "#!/bin/sh\nPATH=/bin\n\necho -n \"Mounting filesystems ... \"\nmount -t proc proc /proc\nmount -t devtmpfs dev /dev\nmount -t sysfs sys /sys\nmount -t devpts pts /dev/pts\n",
                      "markdown": "`#!/bin/sh\nPATH=/bin\n\necho -n \"Mounting filesystems ... \"\nmount -t proc proc /proc\nmount -t devtmpfs dev /dev\nmount -t sysfs sys /sys\nmount -t devpts pts /dev/pts\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/bug216610/mkdocker.sh"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 11,
                  "endLine": 11,
                  "snippet": {
                    "text": "# A directory to share files via.\nRUN mkdir /shared\n\nRUN apt-get update\nRUN apt-get install -y gcc-arm-linux-gnueabi binutils-arm-linux-gnueabi\nRUN apt-get install -y gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu\n\n# create a builder user\n",
                    "rendered": {
                      "text": "# A directory to share files via.\nRUN mkdir /shared\n\nRUN apt-get update\nRUN apt-get install -y gcc-arm-linux-gnueabi binutils-arm-linux-gnueabi\nRUN apt-get install -y gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu\n\n# create a builder user\n",
                      "markdown": "`# A directory to share files via.\nRUN mkdir /shared\n\nRUN apt-get update\nRUN apt-get install -y gcc-arm-linux-gnueabi binutils-arm-linux-gnueabi\nRUN apt-get install -y gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu\n\n# create a builder user\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/bug216610/mkdocker.sh"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 29,
                  "endLine": 17,
                  "endColumn": 36,
                  "snippet": {
                    "text": "# create a builder user\nRUN echo \"builder:x:$(id -u):$(id -g):,,,:/home/builder:/bin/bash\" >> /etc/passwd\nRUN echo \"builder:*:19289:0:99999:7:::\" >> /etc/shadow\nRUN mkdir -p /home/builder && chown builder.bin /home/builder\nEOF\n",
                    "rendered": {
                      "text": "# create a builder user\nRUN echo \"builder:x:$(id -u):$(id -g):,,,:/home/builder:/bin/bash\" >> /etc/passwd\nRUN echo \"builder:*:19289:0:99999:7:::\" >> /etc/shadow\nRUN mkdir -p /home/builder && chown builder.bin /home/builder\nEOF\n",
                      "markdown": "`# create a builder user\nRUN echo \"builder:x:$(id -u):$(id -g):,,,:/home/builder:/bin/bash\" >> /etc/passwd\nRUN echo \"builder:*:19289:0:99999:7:::\" >> /etc/shadow\nRUN mkdir -p /home/builder && chown builder.bin /home/builder\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/bug216610/mkdocker.sh"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 3,
                  "endLine": 12,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\nRUN apt-get update\nRUN apt-get install -y gcc-arm-linux-gnueabi binutils-arm-linux-gnueabi\nRUN apt-get install -y gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu\n\n# create a builder user\nRUN echo \"builder:x:$(id -u):$(id -g):,,,:/home/builder:/bin/bash\" >> /etc/passwd\n",
                    "rendered": {
                      "text": "\nRUN apt-get update\nRUN apt-get install -y gcc-arm-linux-gnueabi binutils-arm-linux-gnueabi\nRUN apt-get install -y gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu\n\n# create a builder user\nRUN echo \"builder:x:$(id -u):$(id -g):,,,:/home/builder:/bin/bash\" >> /etc/passwd\n",
                      "markdown": "`\nRUN apt-get update\nRUN apt-get install -y gcc-arm-linux-gnueabi binutils-arm-linux-gnueabi\nRUN apt-get install -y gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu\n\n# create a builder user\nRUN echo \"builder:x:$(id -u):$(id -g):,,,:/home/builder:/bin/bash\" >> /etc/passwd\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/bug216610/mkdocker.sh"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 3,
                  "endLine": 11,
                  "endColumn": 12,
                  "snippet": {
                    "text": "RUN mkdir /shared\n\nRUN apt-get update\nRUN apt-get install -y gcc-arm-linux-gnueabi binutils-arm-linux-gnueabi\nRUN apt-get install -y gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu\n\n# create a builder user\n",
                    "rendered": {
                      "text": "RUN mkdir /shared\n\nRUN apt-get update\nRUN apt-get install -y gcc-arm-linux-gnueabi binutils-arm-linux-gnueabi\nRUN apt-get install -y gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu\n\n# create a builder user\n",
                      "markdown": "`RUN mkdir /shared\n\nRUN apt-get update\nRUN apt-get install -y gcc-arm-linux-gnueabi binutils-arm-linux-gnueabi\nRUN apt-get install -y gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu\n\n# create a builder user\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/bug216610/mkdocker.sh"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 3,
                  "endLine": 10,
                  "endColumn": 12,
                  "snippet": {
                    "text": "# A directory to share files via.\nRUN mkdir /shared\n\nRUN apt-get update\nRUN apt-get install -y gcc-arm-linux-gnueabi binutils-arm-linux-gnueabi\nRUN apt-get install -y gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu\n\n",
                    "rendered": {
                      "text": "# A directory to share files via.\nRUN mkdir /shared\n\nRUN apt-get update\nRUN apt-get install -y gcc-arm-linux-gnueabi binutils-arm-linux-gnueabi\nRUN apt-get install -y gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu\n\n",
                      "markdown": "`# A directory to share files via.\nRUN mkdir /shared\n\nRUN apt-get update\nRUN apt-get install -y gcc-arm-linux-gnueabi binutils-arm-linux-gnueabi\nRUN apt-get install -y gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/bug216610/mkdocker.sh"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 69,
                  "endLine": 4,
                  "endColumn": 4,
                  "snippet": {
                    "text": "#!/bin/bash\n#\n# This script generates a Dockerfile to be used for cross-compilation\ncat <<EOF\nFROM debian:latest\n\n# A directory to share files via.\n",
                    "rendered": {
                      "text": "#!/bin/bash\n#\n# This script generates a Dockerfile to be used for cross-compilation\ncat <<EOF\nFROM debian:latest\n\n# A directory to share files via.\n",
                      "markdown": "`#!/bin/bash\n#\n# This script generates a Dockerfile to be used for cross-compilation\ncat <<EOF\nFROM debian:latest\n\n# A directory to share files via.\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/bug216610/mkdocker.sh"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 14,
                  "snippet": {
                    "text": "#!/bin/bash\n#\n# This script generates a Dockerfile to be used for cross-compilation\ncat <<EOF\nFROM debian:latest\n\n",
                    "rendered": {
                      "text": "#!/bin/bash\n#\n# This script generates a Dockerfile to be used for cross-compilation\ncat <<EOF\nFROM debian:latest\n\n",
                      "markdown": "`#!/bin/bash\n#\n# This script generates a Dockerfile to be used for cross-compilation\ncat <<EOF\nFROM debian:latest\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4suid0"
                },
                "region": {
                  "startLine": 193,
                  "startColumn": 60,
                  "endLine": 193,
                  "endColumn": 67,
                  "snippet": {
                    "text": "    echo \"If you are using pam_cap.so, you might want to change the set into the\"\n    echo \"Inherited and Effective set (check for the SET var).\"\n    echo\n    echo \"You need and I will check for the utilities which, chmod and setcap.\"\n    echo\n    echo \"Your Filesystem has to support extended attributes and your kernel must have\"\n    echo \"support for POSIX File Capabilities (CONFIG_SECURITY_FILE_CAPABILITIES).\"\n",
                    "rendered": {
                      "text": "    echo \"If you are using pam_cap.so, you might want to change the set into the\"\n    echo \"Inherited and Effective set (check for the SET var).\"\n    echo\n    echo \"You need and I will check for the utilities which, chmod and setcap.\"\n    echo\n    echo \"Your Filesystem has to support extended attributes and your kernel must have\"\n    echo \"support for POSIX File Capabilities (CONFIG_SECURITY_FILE_CAPABILITIES).\"\n",
                      "markdown": "`    echo \"If you are using pam_cap.so, you might want to change the set into the\"\n    echo \"Inherited and Effective set (check for the SET var).\"\n    echo\n    echo \"You need and I will check for the utilities which, chmod and setcap.\"\n    echo\n    echo \"Your Filesystem has to support extended attributes and your kernel must have\"\n    echo \"support for POSIX File Capabilities (CONFIG_SECURITY_FILE_CAPABILITIES).\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4suid0"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 15,
                  "endLine": 140,
                  "endColumn": 22,
                  "snippet": {
                    "text": "        for i in $APP; do\n            if [ -f \"$i\" -a ! -L $i -a \"$FOUND\"==\"no\" ]; then\n                echo \"reverting $i\"\n                chmod u+s $i\n                setcap -r $i 2>/dev/null\n                FOUND=yes\n            fi\n",
                    "rendered": {
                      "text": "        for i in $APP; do\n            if [ -f \"$i\" -a ! -L $i -a \"$FOUND\"==\"no\" ]; then\n                echo \"reverting $i\"\n                chmod u+s $i\n                setcap -r $i 2>/dev/null\n                FOUND=yes\n            fi\n",
                      "markdown": "`        for i in $APP; do\n            if [ -f \"$i\" -a ! -L $i -a \"$FOUND\"==\"no\" ]; then\n                echo \"reverting $i\"\n                chmod u+s $i\n                setcap -r $i 2>/dev/null\n                FOUND=yes\n            fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4suid0"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 15,
                  "endLine": 114,
                  "endColumn": 22,
                  "snippet": {
                    "text": "            # ... and are looking for symlinks\n            if [ -f \"$i\" -a ! -L $i -a \"$FOUND\"==\"no\" ]; then\n                echo \"converting $i\"\n                chmod u-s $i\n                setcap $2=$SET $i\n                FOUND=yes\n            fi\n",
                    "rendered": {
                      "text": "            # ... and are looking for symlinks\n            if [ -f \"$i\" -a ! -L $i -a \"$FOUND\"==\"no\" ]; then\n                echo \"converting $i\"\n                chmod u-s $i\n                setcap $2=$SET $i\n                FOUND=yes\n            fi\n",
                      "markdown": "`            # ... and are looking for symlinks\n            if [ -f \"$i\" -a ! -L $i -a \"$FOUND\"==\"no\" ]; then\n                echo \"converting $i\"\n                chmod u-s $i\n                setcap $2=$SET $i\n                FOUND=yes\n            fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4suid0"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 32,
                  "endLine": 89,
                  "endColumn": 39,
                  "snippet": {
                    "text": "    CHMOD=`which chmod 2>/dev/null`\n    SETCAP=`which setcap 2>/dev/null`\n    if [ \"$CHMOD\" == \"\" -o \"$SETCAP\" == \"\" ]; then\n        echo \"Sorry, I'm missing chmod or setcap!\"\n        exit\n    fi\n\n",
                    "rendered": {
                      "text": "    CHMOD=`which chmod 2>/dev/null`\n    SETCAP=`which setcap 2>/dev/null`\n    if [ \"$CHMOD\" == \"\" -o \"$SETCAP\" == \"\" ]; then\n        echo \"Sorry, I'm missing chmod or setcap!\"\n        exit\n    fi\n\n",
                      "markdown": "`    CHMOD=`which chmod 2>/dev/null`\n    SETCAP=`which setcap 2>/dev/null`\n    if [ \"$CHMOD\" == \"\" -o \"$SETCAP\" == \"\" ]; then\n        echo \"Sorry, I'm missing chmod or setcap!\"\n        exit\n    fi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4suid0"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 16,
                  "endLine": 86,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    fi\n\n    # we need these apps\n    CHMOD=`which chmod 2>/dev/null`\n    SETCAP=`which setcap 2>/dev/null`\n    if [ \"$CHMOD\" == \"\" -o \"$SETCAP\" == \"\" ]; then\n        echo \"Sorry, I'm missing chmod or setcap!\"\n",
                    "rendered": {
                      "text": "    fi\n\n    # we need these apps\n    CHMOD=`which chmod 2>/dev/null`\n    SETCAP=`which setcap 2>/dev/null`\n    if [ \"$CHMOD\" == \"\" -o \"$SETCAP\" == \"\" ]; then\n        echo \"Sorry, I'm missing chmod or setcap!\"\n",
                      "markdown": "`    fi\n\n    # we need these apps\n    CHMOD=`which chmod 2>/dev/null`\n    SETCAP=`which setcap 2>/dev/null`\n    if [ \"$CHMOD\" == \"\" -o \"$SETCAP\" == \"\" ]; then\n        echo \"Sorry, I'm missing chmod or setcap!\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4suid0"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 67,
                  "endLine": 61,
                  "endColumn": 74,
                  "snippet": {
                    "text": "\n# this apps were converted/reverted\n###################################\nAPPSARRAY=( ping traceroute chsh chfn Xorg chage passwd unix_chkpwd mount umount )\n\n\n# we put it into this set\n",
                    "rendered": {
                      "text": "\n# this apps were converted/reverted\n###################################\nAPPSARRAY=( ping traceroute chsh chfn Xorg chage passwd unix_chkpwd mount umount )\n\n\n# we put it into this set\n",
                      "markdown": "`\n# this apps were converted/reverted\n###################################\nAPPSARRAY=( ping traceroute chsh chfn Xorg chage passwd unix_chkpwd mount umount )\n\n\n# we put it into this set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4suid0"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 1,
                  "endLine": 33,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n###############################################################\n# for example use this find call:\n# find {,/usr}{/bin,/sbin} -perm -4000 -uid 0 -exec ls -l {} \\;\n###############################################################\n\n\n",
                    "rendered": {
                      "text": "#\n###############################################################\n# for example use this find call:\n# find {,/usr}{/bin,/sbin} -perm -4000 -uid 0 -exec ls -l {} \\;\n###############################################################\n\n\n",
                      "markdown": "`#\n###############################################################\n# for example use this find call:\n# find {,/usr}{/bin,/sbin} -perm -4000 -uid 0 -exec ls -l {} \\;\n###############################################################\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4suid0"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 22,
                  "endLine": 32,
                  "endColumn": 28,
                  "snippet": {
                    "text": "#\n#\n###############################################################\n# for example use this find call:\n# find {,/usr}{/bin,/sbin} -perm -4000 -uid 0 -exec ls -l {} \\;\n###############################################################\n\n",
                    "rendered": {
                      "text": "#\n#\n###############################################################\n# for example use this find call:\n# find {,/usr}{/bin,/sbin} -perm -4000 -uid 0 -exec ls -l {} \\;\n###############################################################\n\n",
                      "markdown": "`#\n#\n###############################################################\n# for example use this find call:\n# find {,/usr}{/bin,/sbin} -perm -4000 -uid 0 -exec ls -l {} \\;\n###############################################################\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/libcap/cap_test.c"
                },
                "region": {
                  "startLine": 23,
                  "endLine": 23,
                  "endColumn": 5,
                  "snippet": {
                    "text": "    for (i = 0; vs[i] >= 0; i++) {\n\tcap_value_t ans;\n\n\ttop = vs[i];\n\t_binary_search(ans, cf, 0, __CAP_MAXBITS, -1);\n\tif (ans != top) {\n\t    if (top == 0 && ans == -1) {\n",
                    "rendered": {
                      "text": "    for (i = 0; vs[i] >= 0; i++) {\n\tcap_value_t ans;\n\n\ttop = vs[i];\n\t_binary_search(ans, cf, 0, __CAP_MAXBITS, -1);\n\tif (ans != top) {\n\t    if (top == 0 && ans == -1) {\n",
                      "markdown": "`    for (i = 0; vs[i] >= 0; i++) {\n\tcap_value_t ans;\n\n\ttop = vs[i];\n\t_binary_search(ans, cf, 0, __CAP_MAXBITS, -1);\n\tif (ans != top) {\n\t    if (top == 0 && ans == -1) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/libcap/cap_test.c"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 10,
                  "endLine": 10,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\nstatic int cf(cap_value_t x)\n{\n    return top - x - 1;\n}\n\nstatic int test_cap_bits(void)\n",
                    "rendered": {
                      "text": "\nstatic int cf(cap_value_t x)\n{\n    return top - x - 1;\n}\n\nstatic int test_cap_bits(void)\n",
                      "markdown": "`\nstatic int cf(cap_value_t x)\n{\n    return top - x - 1;\n}\n\nstatic int test_cap_bits(void)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/libcap/Makefile"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 108,
                  "endLine": 130,
                  "endColumn": 113,
                  "snippet": {
                    "text": "\tln -sf $(MAJCAPLIBNAME) $(CAPLIBNAME)\n\npsx_magic.o: execable.h psx_exec.c loader.txt\n\t$(CC) $(CFLAGS) $(CPPFLAGS) -DLIBRARY_VERSION=\\\"$(PSXTITLE)-$(VERSION).$(MINOR)\\\" -DSHARED_LOADER=\\\"$(shell cat loader.txt)\\\" -c psx_exec.c -o $@\n\n$(PSXLIBNAME) $(MAJPSXLIBNAME) $(MINPSXLIBNAME): $(PSXOBJS) include/sys/psx_syscall.h $(PSXMAGICOBJ)\n\t$(LD) $(CFLAGS) $(LDFLAGS) -Wl,-soname,$(MAJPSXLIBNAME) -o $(MINPSXLIBNAME) $(PSXOBJS) $(PSXMAGICOBJ) $(MAGIC) $(PSXLINKFLAGS)\n",
                    "rendered": {
                      "text": "\tln -sf $(MAJCAPLIBNAME) $(CAPLIBNAME)\n\npsx_magic.o: execable.h psx_exec.c loader.txt\n\t$(CC) $(CFLAGS) $(CPPFLAGS) -DLIBRARY_VERSION=\\\"$(PSXTITLE)-$(VERSION).$(MINOR)\\\" -DSHARED_LOADER=\\\"$(shell cat loader.txt)\\\" -c psx_exec.c -o $@\n\n$(PSXLIBNAME) $(MAJPSXLIBNAME) $(MINPSXLIBNAME): $(PSXOBJS) include/sys/psx_syscall.h $(PSXMAGICOBJ)\n\t$(LD) $(CFLAGS) $(LDFLAGS) -Wl,-soname,$(MAJPSXLIBNAME) -o $(MINPSXLIBNAME) $(PSXOBJS) $(PSXMAGICOBJ) $(MAGIC) $(PSXLINKFLAGS)\n",
                      "markdown": "`\tln -sf $(MAJCAPLIBNAME) $(CAPLIBNAME)\n\npsx_magic.o: execable.h psx_exec.c loader.txt\n\t$(CC) $(CFLAGS) $(CPPFLAGS) -DLIBRARY_VERSION=\\\"$(PSXTITLE)-$(VERSION).$(MINOR)\\\" -DSHARED_LOADER=\\\"$(shell cat loader.txt)\\\" -c psx_exec.c -o $@\n\n$(PSXLIBNAME) $(MAJPSXLIBNAME) $(MINPSXLIBNAME): $(PSXOBJS) include/sys/psx_syscall.h $(PSXMAGICOBJ)\n\t$(LD) $(CFLAGS) $(LDFLAGS) -Wl,-soname,$(MAJPSXLIBNAME) -o $(MINPSXLIBNAME) $(PSXOBJS) $(PSXMAGICOBJ) $(MAGIC) $(PSXLINKFLAGS)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/libcap/Makefile"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 108,
                  "endLine": 122,
                  "endColumn": 113,
                  "snippet": {
                    "text": "\t$(OBJCOPY) --dump-section .interp=$@ $< /dev/null\n\ncap_magic.o: execable.h execable.c loader.txt libcap.h\n\t$(CC) $(CFLAGS) $(CPPFLAGS) -DLIBRARY_VERSION=\\\"$(LIBTITLE)-$(VERSION).$(MINOR)\\\" -DSHARED_LOADER=\\\"$(shell cat loader.txt)\\\" -include ./libcap.h -c execable.c -o $@\n\n$(CAPLIBNAME) $(MAJCAPLIBNAME) $(MINCAPLIBNAME): $(CAPOBJS) $(CAPMAGICOBJ)\n\t$(LD) $(CFLAGS) $(LDFLAGS) -Wl,-soname,$(MAJCAPLIBNAME) -o $(MINCAPLIBNAME) $^ $(MAGIC)\n",
                    "rendered": {
                      "text": "\t$(OBJCOPY) --dump-section .interp=$@ $< /dev/null\n\ncap_magic.o: execable.h execable.c loader.txt libcap.h\n\t$(CC) $(CFLAGS) $(CPPFLAGS) -DLIBRARY_VERSION=\\\"$(LIBTITLE)-$(VERSION).$(MINOR)\\\" -DSHARED_LOADER=\\\"$(shell cat loader.txt)\\\" -include ./libcap.h -c execable.c -o $@\n\n$(CAPLIBNAME) $(MAJCAPLIBNAME) $(MINCAPLIBNAME): $(CAPOBJS) $(CAPMAGICOBJ)\n\t$(LD) $(CFLAGS) $(LDFLAGS) -Wl,-soname,$(MAJCAPLIBNAME) -o $(MINCAPLIBNAME) $^ $(MAGIC)\n",
                      "markdown": "`\t$(OBJCOPY) --dump-section .interp=$@ $< /dev/null\n\ncap_magic.o: execable.h execable.c loader.txt libcap.h\n\t$(CC) $(CFLAGS) $(CPPFLAGS) -DLIBRARY_VERSION=\\\"$(LIBTITLE)-$(VERSION).$(MINOR)\\\" -DSHARED_LOADER=\\\"$(shell cat loader.txt)\\\" -include ./libcap.h -c execable.c -o $@\n\n$(CAPLIBNAME) $(MAJCAPLIBNAME) $(MINCAPLIBNAME): $(CAPOBJS) $(CAPMAGICOBJ)\n\t$(LD) $(CFLAGS) $(LDFLAGS) -Wl,-soname,$(MAJCAPLIBNAME) -o $(MINCAPLIBNAME) $^ $(MAGIC)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/README"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 20,
                  "endLine": 16,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\n    http://sites.google.com/site/fullycapable/\n\nThe primary upstream git repository is this one:\n\n    https://git.kernel.org/pub/scm/libs/libcap/libcap.git/\n\n",
                    "rendered": {
                      "text": "\n    http://sites.google.com/site/fullycapable/\n\nThe primary upstream git repository is this one:\n\n    https://git.kernel.org/pub/scm/libs/libcap/libcap.git/\n\n",
                      "markdown": "`\n    http://sites.google.com/site/fullycapable/\n\nThe primary upstream git repository is this one:\n\n    https://git.kernel.org/pub/scm/libs/libcap/libcap.git/\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/README"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 8,
                  "endLine": 11,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    Aleph1, Roland Buresund and Andrew Main, Alexander Kjeldaas.\n\nMore information on capabilities in the Linux kernel, links to the\nofficial git repository for libcap, release notes and how to report\nbugs can be found at:\n\n    http://sites.google.com/site/fullycapable/\n",
                    "rendered": {
                      "text": "    Aleph1, Roland Buresund and Andrew Main, Alexander Kjeldaas.\n\nMore information on capabilities in the Linux kernel, links to the\nofficial git repository for libcap, release notes and how to report\nbugs can be found at:\n\n    http://sites.google.com/site/fullycapable/\n",
                      "markdown": "`    Aleph1, Roland Buresund and Andrew Main, Alexander Kjeldaas.\n\nMore information on capabilities in the Linux kernel, links to the\nofficial git repository for libcap, release notes and how to report\nbugs can be found at:\n\n    http://sites.google.com/site/fullycapable/\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/progs/quicktest.sh"
                },
                "region": {
                  "startLine": 283,
                  "endLine": 283,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\texit 1\n    fi\n    LD_LIBRARY_PATH=../libcap ./compare-cap 2>&1 | \\\n\tgrep \"skipping file cap tests\"\n    if [ $? -eq 0 ]; then\n\techo \"FAILED not engaging file cap tests\"\n\texit 1\n",
                    "rendered": {
                      "text": "\texit 1\n    fi\n    LD_LIBRARY_PATH=../libcap ./compare-cap 2>&1 | \\\n\tgrep \"skipping file cap tests\"\n    if [ $? -eq 0 ]; then\n\techo \"FAILED not engaging file cap tests\"\n\texit 1\n",
                      "markdown": "`\texit 1\n    fi\n    LD_LIBRARY_PATH=../libcap ./compare-cap 2>&1 | \\\n\tgrep \"skipping file cap tests\"\n    if [ $? -eq 0 ]; then\n\techo \"FAILED not engaging file cap tests\"\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/progs/quicktest.sh"
                },
                "region": {
                  "startLine": 276,
                  "startColumn": 3,
                  "endLine": 276,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n# If the build tree compiled the Go cap package.\nif [ -f ../go/compare-cap ]; then\n    cp ../go/compare-cap .\n    LD_LIBRARY_PATH=../libcap ./compare-cap\n    if [ $? -ne 0 ]; then\n\techo \"FAILED to execute go binary\"\n",
                    "rendered": {
                      "text": "\n# If the build tree compiled the Go cap package.\nif [ -f ../go/compare-cap ]; then\n    cp ../go/compare-cap .\n    LD_LIBRARY_PATH=../libcap ./compare-cap\n    if [ $? -ne 0 ]; then\n\techo \"FAILED to execute go binary\"\n",
                      "markdown": "`\n# If the build tree compiled the Go cap package.\nif [ -f ../go/compare-cap ]; then\n    cp ../go/compare-cap .\n    LD_LIBRARY_PATH=../libcap ./compare-cap\n    if [ $? -ne 0 ]; then\n\techo \"FAILED to execute go binary\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/progs/quicktest.sh"
                },
                "region": {
                  "startLine": 259,
                  "startColumn": 32,
                  "endLine": 259,
                  "endColumn": 38,
                  "snippet": {
                    "text": "cp ./tcapsh-static ./nsprivileged && /bin/chmod -s ./nsprivileged\n./setcap -n 1 all=ep ./nsprivileged\nif [ $? -eq 0 ]; then\n    ./getcap -n ./nsprivileged | grep -F \"[rootid=1]\"\n    if [ $? -ne 0 ]; then\n\techo \"FAILED setting ns rootid on file\"\n\texit 1\n",
                    "rendered": {
                      "text": "cp ./tcapsh-static ./nsprivileged && /bin/chmod -s ./nsprivileged\n./setcap -n 1 all=ep ./nsprivileged\nif [ $? -eq 0 ]; then\n    ./getcap -n ./nsprivileged | grep -F \"[rootid=1]\"\n    if [ $? -ne 0 ]; then\n\techo \"FAILED setting ns rootid on file\"\n\texit 1\n",
                      "markdown": "`cp ./tcapsh-static ./nsprivileged && /bin/chmod -s ./nsprivileged\n./setcap -n 1 all=ep ./nsprivileged\nif [ $? -eq 0 ]; then\n    ./getcap -n ./nsprivileged | grep -F \"[rootid=1]\"\n    if [ $? -ne 0 ]; then\n\techo \"FAILED setting ns rootid on file\"\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/progs/quicktest.sh"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 18,
                  "endLine": 256,
                  "endColumn": 3,
                  "snippet": {
                    "text": "\n# nsprivileged capsh will have an ns rootid value (this is\n# the same setup as an earlier test but with a ns file cap).\nrm -f nsprivileged\ncp ./tcapsh-static ./nsprivileged && /bin/chmod -s ./nsprivileged\n./setcap -n 1 all=ep ./nsprivileged\nif [ $? -eq 0 ]; then\n    ./getcap -n ./nsprivileged | grep -F \"[rootid=1]\"\n",
                    "rendered": {
                      "text": "\n# nsprivileged capsh will have an ns rootid value (this is\n# the same setup as an earlier test but with a ns file cap).\nrm -f nsprivileged\ncp ./tcapsh-static ./nsprivileged && /bin/chmod -s ./nsprivileged\n./setcap -n 1 all=ep ./nsprivileged\nif [ $? -eq 0 ]; then\n    ./getcap -n ./nsprivileged | grep -F \"[rootid=1]\"\n",
                      "markdown": "`\n# nsprivileged capsh will have an ns rootid value (this is\n# the same setup as an earlier test but with a ns file cap).\nrm -f nsprivileged\ncp ./tcapsh-static ./nsprivileged && /bin/chmod -s ./nsprivileged\n./setcap -n 1 all=ep ./nsprivileged\nif [ $? -eq 0 ]; then\n    ./getcap -n ./nsprivileged | grep -F \"[rootid=1]\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/progs/quicktest.sh"
                },
                "region": {
                  "startLine": 223,
                  "startColumn": 13,
                  "endLine": 223,
                  "endColumn": 19,
                  "snippet": {
                    "text": "    /bin/rm -f hack.sh\n\n    # Next force the privileged binary to have an empty capability set.\n    # This is sort of the opposite of privileged - it should ensure that\n    # the file can never acquire privilege by the ambient method.\n    ./setcap = ./privileged\n    fail_capsh --keep=1 --uid=$nouid --inh=cap_setuid --addamb=cap_setuid -- \\\n",
                    "rendered": {
                      "text": "    /bin/rm -f hack.sh\n\n    # Next force the privileged binary to have an empty capability set.\n    # This is sort of the opposite of privileged - it should ensure that\n    # the file can never acquire privilege by the ambient method.\n    ./setcap = ./privileged\n    fail_capsh --keep=1 --uid=$nouid --inh=cap_setuid --addamb=cap_setuid -- \\\n",
                      "markdown": "`    /bin/rm -f hack.sh\n\n    # Next force the privileged binary to have an empty capability set.\n    # This is sort of the opposite of privileged - it should ensure that\n    # the file can never acquire privilege by the ambient method.\n    ./setcap = ./privileged\n    fail_capsh --keep=1 --uid=$nouid --inh=cap_setuid --addamb=cap_setuid -- \\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/progs/quicktest.sh"
                },
                "region": {
                  "startLine": 209,
                  "startColumn": 13,
                  "endLine": 209,
                  "endColumn": 21,
                  "snippet": {
                    "text": "mypid=\\$\\$\ncaps=\\$(./getpcaps \\$mypid 2>&1 | /usr/bin/cut -d: -f2)\nif [ \"\\$caps\" != \" = cap_setuid+i\" ]; then\n  echo \"Shell script got [\\$caps]\"\n  exit 0\nfi\nls -l \\$0\n",
                    "rendered": {
                      "text": "mypid=\\$\\$\ncaps=\\$(./getpcaps \\$mypid 2>&1 | /usr/bin/cut -d: -f2)\nif [ \"\\$caps\" != \" = cap_setuid+i\" ]; then\n  echo \"Shell script got [\\$caps]\"\n  exit 0\nfi\nls -l \\$0\n",
                      "markdown": "`mypid=\\$\\$\ncaps=\\$(./getpcaps \\$mypid 2>&1 | /usr/bin/cut -d: -f2)\nif [ \"\\$caps\" != \" = cap_setuid+i\" ]; then\n  echo \"Shell script got [\\$caps]\"\n  exit 0\nfi\nls -l \\$0\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/progs/quicktest.sh"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 13,
                  "endLine": 165,
                  "endColumn": 21,
                  "snippet": {
                    "text": "mypid=\\$\\$\ncaps=\\$(./getpcaps \\$mypid 2>&1 | /usr/bin/cut -d: -f2)\nif [ \"\\$caps\" != \" =\" ]; then\n  echo \"Shell script got [\\$caps] - you should upgrade your kernel\"\n  exit 1\nelse\n  ls -l \\$0\n",
                    "rendered": {
                      "text": "mypid=\\$\\$\ncaps=\\$(./getpcaps \\$mypid 2>&1 | /usr/bin/cut -d: -f2)\nif [ \"\\$caps\" != \" =\" ]; then\n  echo \"Shell script got [\\$caps] - you should upgrade your kernel\"\n  exit 1\nelse\n  ls -l \\$0\n",
                      "markdown": "`mypid=\\$\\$\ncaps=\\$(./getpcaps \\$mypid 2>&1 | /usr/bin/cut -d: -f2)\nif [ \"\\$caps\" != \" =\" ]; then\n  echo \"Shell script got [\\$caps] - you should upgrade your kernel\"\n  exit 1\nelse\n  ls -l \\$0\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/progs/quicktest.sh"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 67,
                  "endLine": 56,
                  "endColumn": 3,
                  "snippet": {
                    "text": "    exit 1\nfi\n\n# Make a local non-setuid-0 version of capsh and call it privileged\ncp ./tcapsh-static ./privileged && /bin/chmod -s ./privileged\nif [ $? -ne 0 ]; then\n    echo \"Failed to copy capsh for capability manipulation\"\n    exit 1\n",
                    "rendered": {
                      "text": "    exit 1\nfi\n\n# Make a local non-setuid-0 version of capsh and call it privileged\ncp ./tcapsh-static ./privileged && /bin/chmod -s ./privileged\nif [ $? -ne 0 ]; then\n    echo \"Failed to copy capsh for capability manipulation\"\n    exit 1\n",
                      "markdown": "`    exit 1\nfi\n\n# Make a local non-setuid-0 version of capsh and call it privileged\ncp ./tcapsh-static ./privileged && /bin/chmod -s ./privileged\nif [ $? -ne 0 ]; then\n    echo \"Failed to copy capsh for capability manipulation\"\n    exit 1\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/progs/capshdoc.c"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 21,
                  "endLine": 186,
                  "endColumn": 29,
                  "snippet": {
                    "text": "    \"  - administration of the random device\",\n    \"  - examination and configuration of disk quotas\",\n    \"  - setting the domainname\",\n    \"  - setting the hostname\",\n    \"  - calling bdflush()\",\n    \"  - mount() and umount(), setting up new SMB connection\",\n    \"  - some autofs root ioctls\",\n",
                    "rendered": {
                      "text": "    \"  - administration of the random device\",\n    \"  - examination and configuration of disk quotas\",\n    \"  - setting the domainname\",\n    \"  - setting the hostname\",\n    \"  - calling bdflush()\",\n    \"  - mount() and umount(), setting up new SMB connection\",\n    \"  - some autofs root ioctls\",\n",
                      "markdown": "`    \"  - administration of the random device\",\n    \"  - examination and configuration of disk quotas\",\n    \"  - setting the domainname\",\n    \"  - setting the hostname\",\n    \"  - calling bdflush()\",\n    \"  - mount() and umount(), setting up new SMB connection\",\n    \"  - some autofs root ioctls\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/progs/capshdoc.c"
                },
                "region": {
                  "startLine": 374,
                  "startColumn": 17,
                  "endLine": 374,
                  "endColumn": 26,
                  "snippet": {
                    "text": "static const char *explanation40[] = {  /* cap_checkpoint_restore = 40 */\n    \"Allows a process to perform checkpoint\",\n    \"and restore operations. Also permits\",\n    \"explicit PID control via clone3() and\",\n    \"also writing to ns_last_pid.\",\n    NULL\n};\n",
                    "rendered": {
                      "text": "static const char *explanation40[] = {  /* cap_checkpoint_restore = 40 */\n    \"Allows a process to perform checkpoint\",\n    \"and restore operations. Also permits\",\n    \"explicit PID control via clone3() and\",\n    \"also writing to ns_last_pid.\",\n    NULL\n};\n",
                      "markdown": "`static const char *explanation40[] = {  /* cap_checkpoint_restore = 40 */\n    \"Allows a process to perform checkpoint\",\n    \"and restore operations. Also permits\",\n    \"explicit PID control via clone3() and\",\n    \"also writing to ns_last_pid.\",\n    NULL\n};\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/progs/capshdoc.c"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 26,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "    \"  - clearing driver statistics\",\n    \"  - multicasing\",\n    \"  - read/write of device-specific registers\",\n    \"  - activation of ATM control sockets\",\n    NULL\n};\nstatic const char *explanation13[] = {  /* cap_net_raw = 13 */\n",
                    "rendered": {
                      "text": "    \"  - clearing driver statistics\",\n    \"  - multicasing\",\n    \"  - read/write of device-specific registers\",\n    \"  - activation of ATM control sockets\",\n    NULL\n};\nstatic const char *explanation13[] = {  /* cap_net_raw = 13 */\n",
                      "markdown": "`    \"  - clearing driver statistics\",\n    \"  - multicasing\",\n    \"  - read/write of device-specific registers\",\n    \"  - activation of ATM control sockets\",\n    NULL\n};\nstatic const char *explanation13[] = {  /* cap_net_raw = 13 */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/progs/capshdoc.c"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 11,
                  "endLine": 15,
                  "endColumn": 20,
                  "snippet": {
                    "text": "};\nstatic const char *explanation1[] = {  /* cap_dac_override = 1 */\n    \"Allows a process to override of all Discretionary\",\n    \"Access Control (DAC) access, including ACL execute\",\n    \"access. That is read, write or execute files that the\",\n    \"process would otherwise not have access to. This\",\n    \"excludes DAC access covered by CAP_LINUX_IMMUTABLE.\",\n",
                    "rendered": {
                      "text": "};\nstatic const char *explanation1[] = {  /* cap_dac_override = 1 */\n    \"Allows a process to override of all Discretionary\",\n    \"Access Control (DAC) access, including ACL execute\",\n    \"access. That is read, write or execute files that the\",\n    \"process would otherwise not have access to. This\",\n    \"excludes DAC access covered by CAP_LINUX_IMMUTABLE.\",\n",
                      "markdown": "`};\nstatic const char *explanation1[] = {  /* cap_dac_override = 1 */\n    \"Allows a process to override of all Discretionary\",\n    \"Access Control (DAC) access, including ACL execute\",\n    \"access. That is read, write or execute files that the\",\n    \"process would otherwise not have access to. This\",\n    \"excludes DAC access covered by CAP_LINUX_IMMUTABLE.\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/progs/capshdoc.c"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 32,
                  "endLine": 254,
                  "endColumn": 38,
                  "snippet": {
                    "text": "    NULL\n};\nstatic const char *explanation25[] = {  /* cap_sys_time = 25 */\n    \"Allows a process to perform time manipulation of clocks:\",\n    \"  - alter the system clock\",\n    \"  - enable irix_stime on MIPS\",\n    \"  - set the real-time clock\",\n",
                    "rendered": {
                      "text": "    NULL\n};\nstatic const char *explanation25[] = {  /* cap_sys_time = 25 */\n    \"Allows a process to perform time manipulation of clocks:\",\n    \"  - alter the system clock\",\n    \"  - enable irix_stime on MIPS\",\n    \"  - set the real-time clock\",\n",
                      "markdown": "`    NULL\n};\nstatic const char *explanation25[] = {  /* cap_sys_time = 25 */\n    \"Allows a process to perform time manipulation of clocks:\",\n    \"  - alter the system clock\",\n    \"  - enable irix_stime on MIPS\",\n    \"  - set the real-time clock\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/progs/capshdoc.c"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 26,
                  "endLine": 115,
                  "endColumn": 30,
                  "snippet": {
                    "text": "    \"Allows a process to perform network configuration\",\n    \"operations:\",\n    \"  - interface configuration\",\n    \"  - administration of IP firewall, masquerading and\",\n    \"    accounting\",\n    \"  - setting debug options on sockets\",\n    \"  - modification of routing tables\",\n",
                    "rendered": {
                      "text": "    \"Allows a process to perform network configuration\",\n    \"operations:\",\n    \"  - interface configuration\",\n    \"  - administration of IP firewall, masquerading and\",\n    \"    accounting\",\n    \"  - setting debug options on sockets\",\n    \"  - modification of routing tables\",\n",
                      "markdown": "`    \"Allows a process to perform network configuration\",\n    \"operations:\",\n    \"  - interface configuration\",\n    \"  - administration of IP firewall, masquerading and\",\n    \"    accounting\",\n    \"  - setting debug options on sockets\",\n    \"  - modification of routing tables\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/progs/getcap.c"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 54,
                  "endLine": 64,
                  "endColumn": 58,
                  "snippet": {
                    "text": "    result = cap_to_text(cap_d, NULL);\n    if (!result) {\n\tfprintf(stderr,\n\t\t\"Failed to get capabilities of human readable format at '%s' (%s)\\n\",\n\t\tfname, strerror(errno));\n\tcap_free(cap_d);\n\treturn 0;\n",
                    "rendered": {
                      "text": "    result = cap_to_text(cap_d, NULL);\n    if (!result) {\n\tfprintf(stderr,\n\t\t\"Failed to get capabilities of human readable format at '%s' (%s)\\n\",\n\t\tfname, strerror(errno));\n\tcap_free(cap_d);\n\treturn 0;\n",
                      "markdown": "`    result = cap_to_text(cap_d, NULL);\n    if (!result) {\n\tfprintf(stderr,\n\t\t\"Failed to get capabilities of human readable format at '%s' (%s)\\n\",\n\t\tfname, strerror(errno));\n\tcap_free(cap_d);\n\treturn 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/progs/capsh.c"
                },
                "region": {
                  "startLine": 1189,
                  "startColumn": 34,
                  "endLine": 1189,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\t\t   \"  --modes        list libcap named modes\\n\"\n\t\t   \"  --no-new-privs set sticky process privilege limiter\\n\"\n\t\t   \"  --noamb        reset (drop) all ambient capabilities\\n\"\n\t\t   \"  --noenv        no fixup of env vars (for --user)\\n\"\n\t\t   \"  --print        display capability relevant state\\n\"\n\t\t   \"  --quiet        if first argument skip max cap check\\n\"\n\t\t   \"  --secbits=<n>  write a new value for securebits\\n\"\n",
                    "rendered": {
                      "text": "\t\t   \"  --modes        list libcap named modes\\n\"\n\t\t   \"  --no-new-privs set sticky process privilege limiter\\n\"\n\t\t   \"  --noamb        reset (drop) all ambient capabilities\\n\"\n\t\t   \"  --noenv        no fixup of env vars (for --user)\\n\"\n\t\t   \"  --print        display capability relevant state\\n\"\n\t\t   \"  --quiet        if first argument skip max cap check\\n\"\n\t\t   \"  --secbits=<n>  write a new value for securebits\\n\"\n",
                      "markdown": "`\t\t   \"  --modes        list libcap named modes\\n\"\n\t\t   \"  --no-new-privs set sticky process privilege limiter\\n\"\n\t\t   \"  --noamb        reset (drop) all ambient capabilities\\n\"\n\t\t   \"  --noenv        no fixup of env vars (for --user)\\n\"\n\t\t   \"  --print        display capability relevant state\\n\"\n\t\t   \"  --quiet        if first argument skip max cap check\\n\"\n\t\t   \"  --secbits=<n>  write a new value for securebits\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/progs/capsh.c"
                },
                "region": {
                  "startLine": 433,
                  "startColumn": 27,
                  "endLine": 433,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t}\n    }\n    if (status) {\n\tfprintf(stderr, \"unable to find executable '%s' in PATH\\n\", arg0);\n\tfree(scratch);\n    }\n\n",
                    "rendered": {
                      "text": "\t}\n    }\n    if (status) {\n\tfprintf(stderr, \"unable to find executable '%s' in PATH\\n\", arg0);\n\tfree(scratch);\n    }\n\n",
                      "markdown": "`\t}\n    }\n    if (status) {\n\tfprintf(stderr, \"unable to find executable '%s' in PATH\\n\", arg0);\n\tfree(scratch);\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/progs/mkcapshdoc.sh"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 3,
                  "endLine": 20,
                  "endColumn": 8,
                  "snippet": {
                    "text": "while [ -f \"../doc/values/${x}.txt\" ]; do\n    name=$(grep -F \",${x}}\" ../libcap/cap_names.list.h|sed -e 's/{\"//' -e 's/\",/ = /' -e 's/},//')\n    echo \"static const char *explanation${x}[] = {  /* ${name} */\"\n    sed -e 's/\"/\\\\\"/g' -e 's/^/    \"/' -e 's/$/\",/' \"../doc/values/${x}.txt\"\n    let x=1+${x}\n    echo \"    NULL\"\n    echo \"};\"\n",
                    "rendered": {
                      "text": "while [ -f \"../doc/values/${x}.txt\" ]; do\n    name=$(grep -F \",${x}}\" ../libcap/cap_names.list.h|sed -e 's/{\"//' -e 's/\",/ = /' -e 's/},//')\n    echo \"static const char *explanation${x}[] = {  /* ${name} */\"\n    sed -e 's/\"/\\\\\"/g' -e 's/^/    \"/' -e 's/$/\",/' \"../doc/values/${x}.txt\"\n    let x=1+${x}\n    echo \"    NULL\"\n    echo \"};\"\n",
                      "markdown": "`while [ -f \"../doc/values/${x}.txt\" ]; do\n    name=$(grep -F \",${x}}\" ../libcap/cap_names.list.h|sed -e 's/{\"//' -e 's/\",/ = /' -e 's/},//')\n    echo \"static const char *explanation${x}[] = {  /* ${name} */\"\n    sed -e 's/\"/\\\\\"/g' -e 's/^/    \"/' -e 's/$/\",/' \"../doc/values/${x}.txt\"\n    let x=1+${x}\n    echo \"    NULL\"\n    echo \"};\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/progs/mkcapshdoc.sh"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 14,
                  "snippet": {
                    "text": "#!/bin/bash\n# This script generates some C code for inclusion in the capsh binary.\n# The Makefile generally only generates the .c code and compares it\n# with the checked in code in the progs directory.\n\n",
                    "rendered": {
                      "text": "#!/bin/bash\n# This script generates some C code for inclusion in the capsh binary.\n# The Makefile generally only generates the .c code and compares it\n# with the checked in code in the progs directory.\n\n",
                      "markdown": "`#!/bin/bash\n# This script generates some C code for inclusion in the capsh binary.\n# The Makefile generally only generates the .c code and compares it\n# with the checked in code in the progs directory.\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/progs/Makefile"
                },
                "region": {
                  "startLine": 69,
                  "endLine": 69,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nuns_test: ../tests/uns_test.c\n\t$(MAKE) -C ../tests uns_test\n\tcp ../tests/uns_test .\n\nsudotest: tcapsh-static uns_test capsh setcap getcap getpcaps tcapsh-static\n\t$(SUDO) $(LDPATH) ./quicktest.sh\n",
                    "rendered": {
                      "text": "\nuns_test: ../tests/uns_test.c\n\t$(MAKE) -C ../tests uns_test\n\tcp ../tests/uns_test .\n\nsudotest: tcapsh-static uns_test capsh setcap getcap getpcaps tcapsh-static\n\t$(SUDO) $(LDPATH) ./quicktest.sh\n",
                      "markdown": "`\nuns_test: ../tests/uns_test.c\n\t$(MAKE) -C ../tests uns_test\n\tcp ../tests/uns_test .\n\nsudotest: tcapsh-static uns_test capsh setcap getcap getpcaps tcapsh-static\n\t$(SUDO) $(LDPATH) ./quicktest.sh\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/progs/Makefile"
                },
                "region": {
                  "startLine": 57,
                  "endLine": 57,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\ncapshdoc.c.cf: capshdoc.c ./mkcapshdoc.sh\n\t./mkcapshdoc.sh > $@\n\tdiff -u capshdoc.c $@ || (rm $@ ; exit 1)\n\ncapsh: capsh.c capshdoc.c.cf capshdoc.h $(DEPS)\n\t$(CC) $(CFLAGS) $(CPPFLAGS) $(CAPSH_SHELL) $(LDFLAGS) $< capshdoc.c $(LIBCAPLIB) $(LDFLAGS_SUFFIX) -o $@\n",
                    "rendered": {
                      "text": "\ncapshdoc.c.cf: capshdoc.c ./mkcapshdoc.sh\n\t./mkcapshdoc.sh > $@\n\tdiff -u capshdoc.c $@ || (rm $@ ; exit 1)\n\ncapsh: capsh.c capshdoc.c.cf capshdoc.h $(DEPS)\n\t$(CC) $(CFLAGS) $(CPPFLAGS) $(CAPSH_SHELL) $(LDFLAGS) $< capshdoc.c $(LIBCAPLIB) $(LDFLAGS_SUFFIX) -o $@\n",
                      "markdown": "`\ncapshdoc.c.cf: capshdoc.c ./mkcapshdoc.sh\n\t./mkcapshdoc.sh > $@\n\tdiff -u capshdoc.c $@ || (rm $@ ; exit 1)\n\ncapsh: capsh.c capshdoc.c.cf capshdoc.h $(DEPS)\n\t$(CC) $(CFLAGS) $(CPPFLAGS) $(CAPSH_SHELL) $(LDFLAGS) $< capshdoc.c $(LIBCAPLIB) $(LDFLAGS_SUFFIX) -o $@\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/doc/old/_setfilecap.2"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 43,
                  "endLine": 47,
                  "endColumn": 47,
                  "snippet": {
                    "text": "Files don't actually have a proper Effective capability set.  Instead they\nhave a single-bit flag, that indicates that the set is either full or\nempty.  When setting a file's capabilities, that flag will be set if\nand only if the Effective set specified has at least one bit set.\n.SH \"RETURN VALUE\"\nOn success, zero is returned.  On error, -1 is returned, and\n.I errno\n",
                    "rendered": {
                      "text": "Files don't actually have a proper Effective capability set.  Instead they\nhave a single-bit flag, that indicates that the set is either full or\nempty.  When setting a file's capabilities, that flag will be set if\nand only if the Effective set specified has at least one bit set.\n.SH \"RETURN VALUE\"\nOn success, zero is returned.  On error, -1 is returned, and\n.I errno\n",
                      "markdown": "`Files don't actually have a proper Effective capability set.  Instead they\nhave a single-bit flag, that indicates that the set is either full or\nempty.  When setting a file's capabilities, that flag will be set if\nand only if the Effective set specified has at least one bit set.\n.SH \"RETURN VALUE\"\nOn success, zero is returned.  On error, -1 is returned, and\n.I errno\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/bug216610/go/fibber/fibs_linux_amd64.s"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 46,
                  "endLine": 15,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\n#define RINDEX(n) (8*n)\n\n// Header to this function wrapper is the last time we can voluntarily\n// yield to some other goroutine.\nTEXT ·syso(SB),$0-16\n\tMOVQ cFn+RINDEX(0)(FP), SI\n",
                    "rendered": {
                      "text": "\n#define RINDEX(n) (8*n)\n\n// Header to this function wrapper is the last time we can voluntarily\n// yield to some other goroutine.\nTEXT ·syso(SB),$0-16\n\tMOVQ cFn+RINDEX(0)(FP), SI\n",
                      "markdown": "`\n#define RINDEX(n) (8*n)\n\n// Header to this function wrapper is the last time we can voluntarily\n// yield to some other goroutine.\nTEXT ·syso(SB),$0-16\n\tMOVQ cFn+RINDEX(0)(FP), SI\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/bug216610/go/fibber/fibs_linux_amd64.s"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 44,
                  "endLine": 7,
                  "endColumn": 49,
                  "snippet": {
                    "text": "// Ref:\n//   https://gitlab.com/x86-psABIs/x86-64-ABI/-/wikis/home\n//\n// This is not strictly needed, but it makes gdb debugging less\n// confusing because spacer ends up being an alias for the TEXT\n// section start.\nTEXT ·spacer(SB),$0\n",
                    "rendered": {
                      "text": "// Ref:\n//   https://gitlab.com/x86-psABIs/x86-64-ABI/-/wikis/home\n//\n// This is not strictly needed, but it makes gdb debugging less\n// confusing because spacer ends up being an alias for the TEXT\n// section start.\nTEXT ·spacer(SB),$0\n",
                      "markdown": "`// Ref:\n//   https://gitlab.com/x86-psABIs/x86-64-ABI/-/wikis/home\n//\n// This is not strictly needed, but it makes gdb debugging less\n// confusing because spacer ends up being an alias for the TEXT\n// section start.\nTEXT ·spacer(SB),$0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/psx/psx.c"
                },
                "region": {
                  "startLine": 492,
                  "startColumn": 15,
                  "endLine": 492,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t\t  void *(*start_routine) (void *), void *arg) {\n    psx_starter_t *starter = calloc(1, sizeof(psx_starter_t));\n    if (starter == NULL) {\n\tperror(\"failed at thread creation\");\n\texit(1);\n    }\n    starter->fn = start_routine;\n",
                    "rendered": {
                      "text": "\t\t\t  void *(*start_routine) (void *), void *arg) {\n    psx_starter_t *starter = calloc(1, sizeof(psx_starter_t));\n    if (starter == NULL) {\n\tperror(\"failed at thread creation\");\n\texit(1);\n    }\n    starter->fn = start_routine;\n",
                      "markdown": "`\t\t\t  void *(*start_routine) (void *), void *arg) {\n    psx_starter_t *starter = calloc(1, sizeof(psx_starter_t));\n    if (starter == NULL) {\n\tperror(\"failed at thread creation\");\n\texit(1);\n    }\n    starter->fn = start_routine;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/gomods.sh"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 3,
                  "endLine": 10,
                  "endColumn": 8,
                  "snippet": {
                    "text": "fi\n\nfor x in $(find . -name 'go.mod'); do\n    sed -i -e 's@kernel.org/\\([^ ]*\\) v.*$@kernel.org/\\1 '\"${version}@\" \"${x}\"\ndone\n",
                    "rendered": {
                      "text": "fi\n\nfor x in $(find . -name 'go.mod'); do\n    sed -i -e 's@kernel.org/\\([^ ]*\\) v.*$@kernel.org/\\1 '\"${version}@\" \"${x}\"\ndone\n",
                      "markdown": "`fi\n\nfor x in $(find . -name 'go.mod'); do\n    sed -i -e 's@kernel.org/\\([^ ]*\\) v.*$@kernel.org/\\1 '\"${version}@\" \"${x}\"\ndone\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/pam_cap/Makefile"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 42,
                  "endLine": 29,
                  "endColumn": 46,
                  "snippet": {
                    "text": "pam_cap.so: pam_cap.o execable.o pam_cap_linkopts LIBCAP\n\tcat pam_cap_linkopts | xargs -e $(LD) $(LDFLAGS) -o $@ pam_cap.o execable.o $(LIBCAPLIB)\n\n# Some distributions force link everything at compile time, and don't\n# take advantage of libpam's dlopen runtime options to resolve ill\n# defined symbols from its own linkage as needed. (As the original\n# author of that part of libpam, I consider this force linking\n",
                    "rendered": {
                      "text": "pam_cap.so: pam_cap.o execable.o pam_cap_linkopts LIBCAP\n\tcat pam_cap_linkopts | xargs -e $(LD) $(LDFLAGS) -o $@ pam_cap.o execable.o $(LIBCAPLIB)\n\n# Some distributions force link everything at compile time, and don't\n# take advantage of libpam's dlopen runtime options to resolve ill\n# defined symbols from its own linkage as needed. (As the original\n# author of that part of libpam, I consider this force linking\n",
                      "markdown": "`pam_cap.so: pam_cap.o execable.o pam_cap_linkopts LIBCAP\n\tcat pam_cap_linkopts | xargs -e $(LD) $(LDFLAGS) -o $@ pam_cap.o execable.o $(LIBCAPLIB)\n\n# Some distributions force link everything at compile time, and don't\n# take advantage of libpam's dlopen runtime options to resolve ill\n# defined symbols from its own linkage as needed. (As the original\n# author of that part of libpam, I consider this force linking\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/pam_cap/Makefile"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 34,
                  "endLine": 74,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\t$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $+ -lpam -ldl $(LIBCAPLIB)\n\nincapable.conf:\n\techo \"^cap_setuid  alpha\" > $@ && chmod o+w $@\n\ntest: testlink test_pam_cap pam_cap.so incapable.conf\n\t./test_pam_cap\n",
                    "rendered": {
                      "text": "\t$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $+ -lpam -ldl $(LIBCAPLIB)\n\nincapable.conf:\n\techo \"^cap_setuid  alpha\" > $@ && chmod o+w $@\n\ntest: testlink test_pam_cap pam_cap.so incapable.conf\n\t./test_pam_cap\n",
                      "markdown": "`\t$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $+ -lpam -ldl $(LIBCAPLIB)\n\nincapable.conf:\n\techo \"^cap_setuid  alpha\" > $@ && chmod o+w $@\n\ntest: testlink test_pam_cap pam_cap.so incapable.conf\n\t./test_pam_cap\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/pam_cap/Makefile"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 82,
                  "endLine": 58,
                  "endColumn": 87,
                  "snippet": {
                    "text": "\t./lazylink.so || echo \"-lpam\" >> $@\n\nlazylink.so: lazylink.c ../libcap/execable.h ../libcap/loader.txt\n\t$(LD) -o $@ $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) lazylink.c -DSHARED_LOADER=\\\"$(shell cat ../libcap/loader.txt)\\\" -Wl,-e,__so_start\nendif\nendif\n\n",
                    "rendered": {
                      "text": "\t./lazylink.so || echo \"-lpam\" >> $@\n\nlazylink.so: lazylink.c ../libcap/execable.h ../libcap/loader.txt\n\t$(LD) -o $@ $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) lazylink.c -DSHARED_LOADER=\\\"$(shell cat ../libcap/loader.txt)\\\" -Wl,-e,__so_start\nendif\nendif\n\n",
                      "markdown": "`\t./lazylink.so || echo \"-lpam\" >> $@\n\nlazylink.so: lazylink.c ../libcap/execable.h ../libcap/loader.txt\n\t$(LD) -o $@ $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) lazylink.c -DSHARED_LOADER=\\\"$(shell cat ../libcap/loader.txt)\\\" -Wl,-e,__so_start\nendif\nendif\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/pam_cap/Makefile"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 23,
                  "endLine": 27,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\ttouch $@\n\npam_cap.so: pam_cap.o execable.o pam_cap_linkopts LIBCAP\n\tcat pam_cap_linkopts | xargs -e $(LD) $(LDFLAGS) -o $@ pam_cap.o execable.o $(LIBCAPLIB)\n\n# Some distributions force link everything at compile time, and don't\n# take advantage of libpam's dlopen runtime options to resolve ill\n",
                    "rendered": {
                      "text": "\ttouch $@\n\npam_cap.so: pam_cap.o execable.o pam_cap_linkopts LIBCAP\n\tcat pam_cap_linkopts | xargs -e $(LD) $(LDFLAGS) -o $@ pam_cap.o execable.o $(LIBCAPLIB)\n\n# Some distributions force link everything at compile time, and don't\n# take advantage of libpam's dlopen runtime options to resolve ill\n",
                      "markdown": "`\ttouch $@\n\npam_cap.so: pam_cap.o execable.o pam_cap_linkopts LIBCAP\n\tcat pam_cap_linkopts | xargs -e $(LD) $(LDFLAGS) -o $@ pam_cap.o execable.o $(LIBCAPLIB)\n\n# Some distributions force link everything at compile time, and don't\n# take advantage of libpam's dlopen runtime options to resolve ill\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/pam_cap/Makefile"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 27,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttouch $@\n\npam_cap.so: pam_cap.o execable.o pam_cap_linkopts LIBCAP\n\tcat pam_cap_linkopts | xargs -e $(LD) $(LDFLAGS) -o $@ pam_cap.o execable.o $(LIBCAPLIB)\n\n# Some distributions force link everything at compile time, and don't\n# take advantage of libpam's dlopen runtime options to resolve ill\n",
                    "rendered": {
                      "text": "\ttouch $@\n\npam_cap.so: pam_cap.o execable.o pam_cap_linkopts LIBCAP\n\tcat pam_cap_linkopts | xargs -e $(LD) $(LDFLAGS) -o $@ pam_cap.o execable.o $(LIBCAPLIB)\n\n# Some distributions force link everything at compile time, and don't\n# take advantage of libpam's dlopen runtime options to resolve ill\n",
                      "markdown": "`\ttouch $@\n\npam_cap.so: pam_cap.o execable.o pam_cap_linkopts LIBCAP\n\tcat pam_cap_linkopts | xargs -e $(LD) $(LDFLAGS) -o $@ pam_cap.o execable.o $(LIBCAPLIB)\n\n# Some distributions force link everything at compile time, and don't\n# take advantage of libpam's dlopen runtime options to resolve ill\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/pam_cap/Makefile"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 102,
                  "endLine": 20,
                  "endColumn": 107,
                  "snippet": {
                    "text": "\t$(MAKE) -C ../libcap loader.txt\n\nexecable.o: execable.c ../libcap/execable.h ../libcap/loader.txt\n\t$(CC) $(CFLAGS) $(CPPFLAGS) -DLIBCAP_VERSION=\\\"libcap-$(VERSION).$(MINOR)\\\" -DSHARED_LOADER=\\\"$(shell cat ../libcap/loader.txt)\\\" -c execable.c -o $@\n\nLIBCAP:\n\t$(MAKE) -C ../libcap all\n",
                    "rendered": {
                      "text": "\t$(MAKE) -C ../libcap loader.txt\n\nexecable.o: execable.c ../libcap/execable.h ../libcap/loader.txt\n\t$(CC) $(CFLAGS) $(CPPFLAGS) -DLIBCAP_VERSION=\\\"libcap-$(VERSION).$(MINOR)\\\" -DSHARED_LOADER=\\\"$(shell cat ../libcap/loader.txt)\\\" -c execable.c -o $@\n\nLIBCAP:\n\t$(MAKE) -C ../libcap all\n",
                      "markdown": "`\t$(MAKE) -C ../libcap loader.txt\n\nexecable.o: execable.c ../libcap/execable.h ../libcap/loader.txt\n\t$(CC) $(CFLAGS) $(CPPFLAGS) -DLIBCAP_VERSION=\\\"libcap-$(VERSION).$(MINOR)\\\" -DSHARED_LOADER=\\\"$(shell cat ../libcap/loader.txt)\\\" -c execable.c -o $@\n\nLIBCAP:\n\t$(MAKE) -C ../libcap all\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/doc/cap_launch.3"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 6,
                  "endLine": 135,
                  "endColumn": 15,
                  "snippet": {
                    "text": "associated directly with the supplied \\fIiab\\fP value, and does not\nmake a copy of it. This iab value is locked to the laucher and cannot\nbe modified while associated with the launcher. Set with NULL to\nregain control over the memory associated with that IAB value,\notherwise the IAB value will be \\fBcap_free\\fI()\\fP'd when the\nlauncher is.\n.sp\n",
                    "rendered": {
                      "text": "associated directly with the supplied \\fIiab\\fP value, and does not\nmake a copy of it. This iab value is locked to the laucher and cannot\nbe modified while associated with the launcher. Set with NULL to\nregain control over the memory associated with that IAB value,\notherwise the IAB value will be \\fBcap_free\\fI()\\fP'd when the\nlauncher is.\n.sp\n",
                      "markdown": "`associated directly with the supplied \\fIiab\\fP value, and does not\nmake a copy of it. This iab value is locked to the laucher and cannot\nbe modified while associated with the launcher. Set with NULL to\nregain control over the memory associated with that IAB value,\notherwise the IAB value will be \\fBcap_free\\fI()\\fP'd when the\nlauncher is.\n.sp\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/doc/cap_launch.3"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 15,
                  "endLine": 86,
                  "endColumn": 20,
                  "snippet": {
                    "text": ".nf\n\n   const char *args[] = { \"echo\", \"hello\", NULL };\n   cap_launch_t cmd = cap_new_launcher(\"/usr/bin/echo\", args, NULL);\n   int *detail = mmap(NULL, sizeof(int), PROT_READ | PROT_WRITE,\n                      MAP_SHARED | MAP_ANONYMOUS, -1, 0);\n   cap_launcher_callback(cmd, &answer_detail_fn);\n",
                    "rendered": {
                      "text": ".nf\n\n   const char *args[] = { \"echo\", \"hello\", NULL };\n   cap_launch_t cmd = cap_new_launcher(\"/usr/bin/echo\", args, NULL);\n   int *detail = mmap(NULL, sizeof(int), PROT_READ | PROT_WRITE,\n                      MAP_SHARED | MAP_ANONYMOUS, -1, 0);\n   cap_launcher_callback(cmd, &answer_detail_fn);\n",
                      "markdown": "`.nf\n\n   const char *args[] = { \"echo\", \"hello\", NULL };\n   cap_launch_t cmd = cap_new_launcher(\"/usr/bin/echo\", args, NULL);\n   int *detail = mmap(NULL, sizeof(int), PROT_READ | PROT_WRITE,\n                      MAP_SHARED | MAP_ANONYMOUS, -1, 0);\n   cap_launcher_callback(cmd, &answer_detail_fn);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/doc/cap_launch.3"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 7,
                  "endLine": 117,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\\fIjust\\fP for executing a file.\n.PP\nThe following functions instruct the launcher to do some common tasks\nof this sort (note some require permitted capability bits to succeed):\n.sp\n.BR cap_launcher_callback ()\ncan be used to install or replace the currently installed callback\n",
                    "rendered": {
                      "text": "\\fIjust\\fP for executing a file.\n.PP\nThe following functions instruct the launcher to do some common tasks\nof this sort (note some require permitted capability bits to succeed):\n.sp\n.BR cap_launcher_callback ()\ncan be used to install or replace the currently installed callback\n",
                      "markdown": "`\\fIjust\\fP for executing a file.\n.PP\nThe following functions instruct the launcher to do some common tasks\nof this sort (note some require permitted capability bits to succeed):\n.sp\n.BR cap_launcher_callback ()\ncan be used to install or replace the currently installed callback\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/doc/capsh.1"
                },
                "region": {
                  "startLine": 260,
                  "startColumn": 42,
                  "endLine": 261,
                  "snippet": {
                    "text": "\\fBcapsh\\fP, and display all descriptions that include \\fIphrase\\fP.\n.TP\n.BI \\-\\-decode= N\nThis is a convenience feature. If you look at\n.B /proc/1/status\nthere are some capability related fields of the following form:\n.nf\n\n",
                    "rendered": {
                      "text": "\\fBcapsh\\fP, and display all descriptions that include \\fIphrase\\fP.\n.TP\n.BI \\-\\-decode= N\nThis is a convenience feature. If you look at\n.B /proc/1/status\nthere are some capability related fields of the following form:\n.nf\n\n",
                      "markdown": "`\\fBcapsh\\fP, and display all descriptions that include \\fIphrase\\fP.\n.TP\n.BI \\-\\-decode= N\nThis is a convenience feature. If you look at\n.B /proc/1/status\nthere are some capability related fields of the following form:\n.nf\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/doc/capsh.1"
                },
                "region": {
                  "startLine": 225,
                  "startColumn": 36,
                  "endLine": 225,
                  "endColumn": 40,
                  "snippet": {
                    "text": "0. The purpose of this command is to support exploring the way\nprocesses are killable in the face of capability changes. See the\n.B \\-\\-killit\ncommand. Only one fork can be active at a time.\n.TP\n.BI \\-\\-killit= sig\nThis commands causes a\n",
                    "rendered": {
                      "text": "0. The purpose of this command is to support exploring the way\nprocesses are killable in the face of capability changes. See the\n.B \\-\\-killit\ncommand. Only one fork can be active at a time.\n.TP\n.BI \\-\\-killit= sig\nThis commands causes a\n",
                      "markdown": "`0. The purpose of this command is to support exploring the way\nprocesses are killable in the face of capability changes. See the\n.B \\-\\-killit\ncommand. Only one fork can be active at a time.\n.TP\n.BI \\-\\-killit= sig\nThis commands causes a\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/doc/capability.md"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 46,
                  "endLine": 52,
                  "endColumn": 54,
                  "snippet": {
                    "text": "type. Being able to bind to any privileged port is still a formidable\nprivilege and can lead to difficult but _interesting_\nman-in-the-middle attacks -- hijack the telnet port for example and\nmasquerade as the login program... Collecting passwords for another\nday.\n\n### The /proc/ filesystem\n",
                    "rendered": {
                      "text": "type. Being able to bind to any privileged port is still a formidable\nprivilege and can lead to difficult but _interesting_\nman-in-the-middle attacks -- hijack the telnet port for example and\nmasquerade as the login program... Collecting passwords for another\nday.\n\n### The /proc/ filesystem\n",
                      "markdown": "`type. Being able to bind to any privileged port is still a formidable\nprivilege and can lead to difficult but _interesting_\nman-in-the-middle attacks -- hijack the telnet port for example and\nmasquerade as the login program... Collecting passwords for another\nday.\n\n### The /proc/ filesystem\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/doc/capability.md"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 53,
                  "endLine": 27,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\nChanging all of the system binaries and directories to be owned by\nsome user that cannot log on. You might like to create a user with\nthe name 'system' who's account is locked with a '*' password. This\nuser can be made the owner of all of the system directories on your\nsystem and critical system binaries too.\n\n",
                    "rendered": {
                      "text": "\nChanging all of the system binaries and directories to be owned by\nsome user that cannot log on. You might like to create a user with\nthe name 'system' who's account is locked with a '*' password. This\nuser can be made the owner of all of the system directories on your\nsystem and critical system binaries too.\n\n",
                      "markdown": "`\nChanging all of the system binaries and directories to be owned by\nsome user that cannot log on. You might like to create a user with\nthe name 'system' who's account is locked with a '*' password. This\nuser can be made the owner of all of the system directories on your\nsystem and critical system binaries too.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/doc/capability.md"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 39,
                  "endLine": 51,
                  "endColumn": 47,
                  "snippet": {
                    "text": "for a potential attacker to exploit a hole in a daemon of this\ntype. Being able to bind to any privileged port is still a formidable\nprivilege and can lead to difficult but _interesting_\nman-in-the-middle attacks -- hijack the telnet port for example and\nmasquerade as the login program... Collecting passwords for another\nday.\n\n",
                    "rendered": {
                      "text": "for a potential attacker to exploit a hole in a daemon of this\ntype. Being able to bind to any privileged port is still a formidable\nprivilege and can lead to difficult but _interesting_\nman-in-the-middle attacks -- hijack the telnet port for example and\nmasquerade as the login program... Collecting passwords for another\nday.\n\n",
                      "markdown": "`for a potential attacker to exploit a hole in a daemon of this\ntype. Being able to bind to any privileged port is still a formidable\nprivilege and can lead to difficult but _interesting_\nman-in-the-middle attacks -- hijack the telnet port for example and\nmasquerade as the login program... Collecting passwords for another\nday.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/go/go-mod-index.html"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 73,
                  "endLine": 5,
                  "endColumn": 78,
                  "snippet": {
                    "text": "<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\n<meta name=\"go-import\" content=\"kernel.org/pub/linux/libs/security/libcap git https://git.kernel.org/pub/scm/libs/libcap/libcap.git\">\n<meta http-equiv=\"refresh\" content=\"10; url=https://sites.google.com/site/fullycapable\">\n</head>\n<body>\n",
                    "rendered": {
                      "text": "<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\n<meta name=\"go-import\" content=\"kernel.org/pub/linux/libs/security/libcap git https://git.kernel.org/pub/scm/libs/libcap/libcap.git\">\n<meta http-equiv=\"refresh\" content=\"10; url=https://sites.google.com/site/fullycapable\">\n</head>\n<body>\n",
                      "markdown": "`<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\n<meta name=\"go-import\" content=\"kernel.org/pub/linux/libs/security/libcap git https://git.kernel.org/pub/scm/libs/libcap/libcap.git\">\n<meta http-equiv=\"refresh\" content=\"10; url=https://sites.google.com/site/fullycapable\">\n</head>\n<body>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 285,
                  "endLine": 285,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tchmod $VERBOSE u-s /usr/sbin/cupsd\n\tsetcap -r /usr/sbin/cupsd\n\tcheckReturnCode\n\tsed -i -e \"{s|^\\(User\\).*|\\1 lp|; s|^\\(Group\\) .*|\\1 sys|}\" /etc/cups/cupsd.conf\n\tuserdel cupsd\n\tgroupdel cupsd\n}\n",
                    "rendered": {
                      "text": "\tchmod $VERBOSE u-s /usr/sbin/cupsd\n\tsetcap -r /usr/sbin/cupsd\n\tcheckReturnCode\n\tsed -i -e \"{s|^\\(User\\).*|\\1 lp|; s|^\\(Group\\) .*|\\1 sys|}\" /etc/cups/cupsd.conf\n\tuserdel cupsd\n\tgroupdel cupsd\n}\n",
                      "markdown": "`\tchmod $VERBOSE u-s /usr/sbin/cupsd\n\tsetcap -r /usr/sbin/cupsd\n\tcheckReturnCode\n\tsed -i -e \"{s|^\\(User\\).*|\\1 lp|; s|^\\(Group\\) .*|\\1 sys|}\" /etc/cups/cupsd.conf\n\tuserdel cupsd\n\tgroupdel cupsd\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 282,
                  "endLine": 282,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tchown $VERBOSE lp:sys /var/run/cups/certs\n\tchmod $VERBOSE 750 /var/run/cups/certs\n\tchown $VERBOSE root:root /usr/sbin/cupsd\n\tchmod $VERBOSE u-s /usr/sbin/cupsd\n\tsetcap -r /usr/sbin/cupsd\n\tcheckReturnCode\n\tsed -i -e \"{s|^\\(User\\).*|\\1 lp|; s|^\\(Group\\) .*|\\1 sys|}\" /etc/cups/cupsd.conf\n",
                    "rendered": {
                      "text": "\tchown $VERBOSE lp:sys /var/run/cups/certs\n\tchmod $VERBOSE 750 /var/run/cups/certs\n\tchown $VERBOSE root:root /usr/sbin/cupsd\n\tchmod $VERBOSE u-s /usr/sbin/cupsd\n\tsetcap -r /usr/sbin/cupsd\n\tcheckReturnCode\n\tsed -i -e \"{s|^\\(User\\).*|\\1 lp|; s|^\\(Group\\) .*|\\1 sys|}\" /etc/cups/cupsd.conf\n",
                      "markdown": "`\tchown $VERBOSE lp:sys /var/run/cups/certs\n\tchmod $VERBOSE 750 /var/run/cups/certs\n\tchown $VERBOSE root:root /usr/sbin/cupsd\n\tchmod $VERBOSE u-s /usr/sbin/cupsd\n\tsetcap -r /usr/sbin/cupsd\n\tcheckReturnCode\n\tsed -i -e \"{s|^\\(User\\).*|\\1 lp|; s|^\\(Group\\) .*|\\1 sys|}\" /etc/cups/cupsd.conf\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 281,
                  "endLine": 281,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tchown $VERBOSE root:lp /var/run/cups\n\tchown $VERBOSE lp:sys /var/run/cups/certs\n\tchmod $VERBOSE 750 /var/run/cups/certs\n\tchown $VERBOSE root:root /usr/sbin/cupsd\n\tchmod $VERBOSE u-s /usr/sbin/cupsd\n\tsetcap -r /usr/sbin/cupsd\n\tcheckReturnCode\n",
                    "rendered": {
                      "text": "\tchown $VERBOSE root:lp /var/run/cups\n\tchown $VERBOSE lp:sys /var/run/cups/certs\n\tchmod $VERBOSE 750 /var/run/cups/certs\n\tchown $VERBOSE root:root /usr/sbin/cupsd\n\tchmod $VERBOSE u-s /usr/sbin/cupsd\n\tsetcap -r /usr/sbin/cupsd\n\tcheckReturnCode\n",
                      "markdown": "`\tchown $VERBOSE root:lp /var/run/cups\n\tchown $VERBOSE lp:sys /var/run/cups/certs\n\tchmod $VERBOSE 750 /var/run/cups/certs\n\tchown $VERBOSE root:root /usr/sbin/cupsd\n\tchmod $VERBOSE u-s /usr/sbin/cupsd\n\tsetcap -r /usr/sbin/cupsd\n\tcheckReturnCode\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 280,
                  "endLine": 280,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tchown $VERBOSE -R root:root /var/spool/cups\n\tchown $VERBOSE root:lp /var/run/cups\n\tchown $VERBOSE lp:sys /var/run/cups/certs\n\tchmod $VERBOSE 750 /var/run/cups/certs\n\tchown $VERBOSE root:root /usr/sbin/cupsd\n\tchmod $VERBOSE u-s /usr/sbin/cupsd\n\tsetcap -r /usr/sbin/cupsd\n",
                    "rendered": {
                      "text": "\tchown $VERBOSE -R root:root /var/spool/cups\n\tchown $VERBOSE root:lp /var/run/cups\n\tchown $VERBOSE lp:sys /var/run/cups/certs\n\tchmod $VERBOSE 750 /var/run/cups/certs\n\tchown $VERBOSE root:root /usr/sbin/cupsd\n\tchmod $VERBOSE u-s /usr/sbin/cupsd\n\tsetcap -r /usr/sbin/cupsd\n",
                      "markdown": "`\tchown $VERBOSE -R root:root /var/spool/cups\n\tchown $VERBOSE root:lp /var/run/cups\n\tchown $VERBOSE lp:sys /var/run/cups/certs\n\tchmod $VERBOSE 750 /var/run/cups/certs\n\tchown $VERBOSE root:root /usr/sbin/cupsd\n\tchmod $VERBOSE u-s /usr/sbin/cupsd\n\tsetcap -r /usr/sbin/cupsd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 279,
                  "endLine": 279,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tchown $VERBOSE -R root:root /var/log/cups\n\tchown $VERBOSE -R root:root /var/spool/cups\n\tchown $VERBOSE root:lp /var/run/cups\n\tchown $VERBOSE lp:sys /var/run/cups/certs\n\tchmod $VERBOSE 750 /var/run/cups/certs\n\tchown $VERBOSE root:root /usr/sbin/cupsd\n\tchmod $VERBOSE u-s /usr/sbin/cupsd\n",
                    "rendered": {
                      "text": "\tchown $VERBOSE -R root:root /var/log/cups\n\tchown $VERBOSE -R root:root /var/spool/cups\n\tchown $VERBOSE root:lp /var/run/cups\n\tchown $VERBOSE lp:sys /var/run/cups/certs\n\tchmod $VERBOSE 750 /var/run/cups/certs\n\tchown $VERBOSE root:root /usr/sbin/cupsd\n\tchmod $VERBOSE u-s /usr/sbin/cupsd\n",
                      "markdown": "`\tchown $VERBOSE -R root:root /var/log/cups\n\tchown $VERBOSE -R root:root /var/spool/cups\n\tchown $VERBOSE root:lp /var/run/cups\n\tchown $VERBOSE lp:sys /var/run/cups/certs\n\tchmod $VERBOSE 750 /var/run/cups/certs\n\tchown $VERBOSE root:root /usr/sbin/cupsd\n\tchmod $VERBOSE u-s /usr/sbin/cupsd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 278,
                  "endLine": 278,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tchown $VERBOSE -R root:lp /var/cache/cups\n\tchown $VERBOSE -R root:root /var/log/cups\n\tchown $VERBOSE -R root:root /var/spool/cups\n\tchown $VERBOSE root:lp /var/run/cups\n\tchown $VERBOSE lp:sys /var/run/cups/certs\n\tchmod $VERBOSE 750 /var/run/cups/certs\n\tchown $VERBOSE root:root /usr/sbin/cupsd\n",
                    "rendered": {
                      "text": "\tchown $VERBOSE -R root:lp /var/cache/cups\n\tchown $VERBOSE -R root:root /var/log/cups\n\tchown $VERBOSE -R root:root /var/spool/cups\n\tchown $VERBOSE root:lp /var/run/cups\n\tchown $VERBOSE lp:sys /var/run/cups/certs\n\tchmod $VERBOSE 750 /var/run/cups/certs\n\tchown $VERBOSE root:root /usr/sbin/cupsd\n",
                      "markdown": "`\tchown $VERBOSE -R root:lp /var/cache/cups\n\tchown $VERBOSE -R root:root /var/log/cups\n\tchown $VERBOSE -R root:root /var/spool/cups\n\tchown $VERBOSE root:lp /var/run/cups\n\tchown $VERBOSE lp:sys /var/run/cups/certs\n\tchmod $VERBOSE 750 /var/run/cups/certs\n\tchown $VERBOSE root:root /usr/sbin/cupsd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 277,
                  "endLine": 277,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tchown $VERBOSE -R root:root /etc/cups\n\tchown $VERBOSE -R root:lp /var/cache/cups\n\tchown $VERBOSE -R root:root /var/log/cups\n\tchown $VERBOSE -R root:root /var/spool/cups\n\tchown $VERBOSE root:lp /var/run/cups\n\tchown $VERBOSE lp:sys /var/run/cups/certs\n\tchmod $VERBOSE 750 /var/run/cups/certs\n",
                    "rendered": {
                      "text": "\tchown $VERBOSE -R root:root /etc/cups\n\tchown $VERBOSE -R root:lp /var/cache/cups\n\tchown $VERBOSE -R root:root /var/log/cups\n\tchown $VERBOSE -R root:root /var/spool/cups\n\tchown $VERBOSE root:lp /var/run/cups\n\tchown $VERBOSE lp:sys /var/run/cups/certs\n\tchmod $VERBOSE 750 /var/run/cups/certs\n",
                      "markdown": "`\tchown $VERBOSE -R root:root /etc/cups\n\tchown $VERBOSE -R root:lp /var/cache/cups\n\tchown $VERBOSE -R root:root /var/log/cups\n\tchown $VERBOSE -R root:root /var/spool/cups\n\tchown $VERBOSE root:lp /var/run/cups\n\tchown $VERBOSE lp:sys /var/run/cups/certs\n\tchmod $VERBOSE 750 /var/run/cups/certs\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 276,
                  "endLine": 276,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tmessage \"reverting cupsd\"\n\tchown $VERBOSE -R root:root /etc/cups\n\tchown $VERBOSE -R root:lp /var/cache/cups\n\tchown $VERBOSE -R root:root /var/log/cups\n\tchown $VERBOSE -R root:root /var/spool/cups\n\tchown $VERBOSE root:lp /var/run/cups\n\tchown $VERBOSE lp:sys /var/run/cups/certs\n",
                    "rendered": {
                      "text": "\tmessage \"reverting cupsd\"\n\tchown $VERBOSE -R root:root /etc/cups\n\tchown $VERBOSE -R root:lp /var/cache/cups\n\tchown $VERBOSE -R root:root /var/log/cups\n\tchown $VERBOSE -R root:root /var/spool/cups\n\tchown $VERBOSE root:lp /var/run/cups\n\tchown $VERBOSE lp:sys /var/run/cups/certs\n",
                      "markdown": "`\tmessage \"reverting cupsd\"\n\tchown $VERBOSE -R root:root /etc/cups\n\tchown $VERBOSE -R root:lp /var/cache/cups\n\tchown $VERBOSE -R root:root /var/log/cups\n\tchown $VERBOSE -R root:root /var/spool/cups\n\tchown $VERBOSE root:lp /var/run/cups\n\tchown $VERBOSE lp:sys /var/run/cups/certs\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 275,
                  "endLine": 275,
                  "endColumn": 7,
                  "snippet": {
                    "text": "cupsd_revert(){\n\tmessage \"reverting cupsd\"\n\tchown $VERBOSE -R root:root /etc/cups\n\tchown $VERBOSE -R root:lp /var/cache/cups\n\tchown $VERBOSE -R root:root /var/log/cups\n\tchown $VERBOSE -R root:root /var/spool/cups\n\tchown $VERBOSE root:lp /var/run/cups\n",
                    "rendered": {
                      "text": "cupsd_revert(){\n\tmessage \"reverting cupsd\"\n\tchown $VERBOSE -R root:root /etc/cups\n\tchown $VERBOSE -R root:lp /var/cache/cups\n\tchown $VERBOSE -R root:root /var/log/cups\n\tchown $VERBOSE -R root:root /var/spool/cups\n\tchown $VERBOSE root:lp /var/run/cups\n",
                      "markdown": "`cupsd_revert(){\n\tmessage \"reverting cupsd\"\n\tchown $VERBOSE -R root:root /etc/cups\n\tchown $VERBOSE -R root:lp /var/cache/cups\n\tchown $VERBOSE -R root:root /var/log/cups\n\tchown $VERBOSE -R root:root /var/spool/cups\n\tchown $VERBOSE root:lp /var/run/cups\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 274,
                  "endLine": 274,
                  "endColumn": 7,
                  "snippet": {
                    "text": "}\ncupsd_revert(){\n\tmessage \"reverting cupsd\"\n\tchown $VERBOSE -R root:root /etc/cups\n\tchown $VERBOSE -R root:lp /var/cache/cups\n\tchown $VERBOSE -R root:root /var/log/cups\n\tchown $VERBOSE -R root:root /var/spool/cups\n",
                    "rendered": {
                      "text": "}\ncupsd_revert(){\n\tmessage \"reverting cupsd\"\n\tchown $VERBOSE -R root:root /etc/cups\n\tchown $VERBOSE -R root:lp /var/cache/cups\n\tchown $VERBOSE -R root:root /var/log/cups\n\tchown $VERBOSE -R root:root /var/spool/cups\n",
                      "markdown": "`}\ncupsd_revert(){\n\tmessage \"reverting cupsd\"\n\tchown $VERBOSE -R root:root /etc/cups\n\tchown $VERBOSE -R root:lp /var/cache/cups\n\tchown $VERBOSE -R root:root /var/log/cups\n\tchown $VERBOSE -R root:root /var/spool/cups\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 268,
                  "endLine": 268,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tchown $VERBOSE -R cupsd:cupsd /var/spool/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/run/cups\n\tchown $VERBOSE cupsd:cupsd /usr/sbin/cupsd\n\tchmod $VERBOSE u+s /usr/sbin/cupsd\n\tsetcap cap_net_bind_service,cap_dac_read_search=ep /usr/sbin/cupsd\n\tcheckReturnCode\n}\n",
                    "rendered": {
                      "text": "\tchown $VERBOSE -R cupsd:cupsd /var/spool/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/run/cups\n\tchown $VERBOSE cupsd:cupsd /usr/sbin/cupsd\n\tchmod $VERBOSE u+s /usr/sbin/cupsd\n\tsetcap cap_net_bind_service,cap_dac_read_search=ep /usr/sbin/cupsd\n\tcheckReturnCode\n}\n",
                      "markdown": "`\tchown $VERBOSE -R cupsd:cupsd /var/spool/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/run/cups\n\tchown $VERBOSE cupsd:cupsd /usr/sbin/cupsd\n\tchmod $VERBOSE u+s /usr/sbin/cupsd\n\tsetcap cap_net_bind_service,cap_dac_read_search=ep /usr/sbin/cupsd\n\tcheckReturnCode\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 267,
                  "endLine": 267,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tchown $VERBOSE -R cupsd:cupsd /var/log/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/spool/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/run/cups\n\tchown $VERBOSE cupsd:cupsd /usr/sbin/cupsd\n\tchmod $VERBOSE u+s /usr/sbin/cupsd\n\tsetcap cap_net_bind_service,cap_dac_read_search=ep /usr/sbin/cupsd\n\tcheckReturnCode\n",
                    "rendered": {
                      "text": "\tchown $VERBOSE -R cupsd:cupsd /var/log/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/spool/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/run/cups\n\tchown $VERBOSE cupsd:cupsd /usr/sbin/cupsd\n\tchmod $VERBOSE u+s /usr/sbin/cupsd\n\tsetcap cap_net_bind_service,cap_dac_read_search=ep /usr/sbin/cupsd\n\tcheckReturnCode\n",
                      "markdown": "`\tchown $VERBOSE -R cupsd:cupsd /var/log/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/spool/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/run/cups\n\tchown $VERBOSE cupsd:cupsd /usr/sbin/cupsd\n\tchmod $VERBOSE u+s /usr/sbin/cupsd\n\tsetcap cap_net_bind_service,cap_dac_read_search=ep /usr/sbin/cupsd\n\tcheckReturnCode\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 266,
                  "endLine": 266,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tchown $VERBOSE -R cupsd:cupsd /var/cache/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/log/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/spool/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/run/cups\n\tchown $VERBOSE cupsd:cupsd /usr/sbin/cupsd\n\tchmod $VERBOSE u+s /usr/sbin/cupsd\n\tsetcap cap_net_bind_service,cap_dac_read_search=ep /usr/sbin/cupsd\n",
                    "rendered": {
                      "text": "\tchown $VERBOSE -R cupsd:cupsd /var/cache/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/log/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/spool/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/run/cups\n\tchown $VERBOSE cupsd:cupsd /usr/sbin/cupsd\n\tchmod $VERBOSE u+s /usr/sbin/cupsd\n\tsetcap cap_net_bind_service,cap_dac_read_search=ep /usr/sbin/cupsd\n",
                      "markdown": "`\tchown $VERBOSE -R cupsd:cupsd /var/cache/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/log/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/spool/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/run/cups\n\tchown $VERBOSE cupsd:cupsd /usr/sbin/cupsd\n\tchmod $VERBOSE u+s /usr/sbin/cupsd\n\tsetcap cap_net_bind_service,cap_dac_read_search=ep /usr/sbin/cupsd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 265,
                  "endLine": 265,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tchown $VERBOSE -R cupsd:cupsd /etc/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/cache/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/log/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/spool/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/run/cups\n\tchown $VERBOSE cupsd:cupsd /usr/sbin/cupsd\n\tchmod $VERBOSE u+s /usr/sbin/cupsd\n",
                    "rendered": {
                      "text": "\tchown $VERBOSE -R cupsd:cupsd /etc/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/cache/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/log/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/spool/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/run/cups\n\tchown $VERBOSE cupsd:cupsd /usr/sbin/cupsd\n\tchmod $VERBOSE u+s /usr/sbin/cupsd\n",
                      "markdown": "`\tchown $VERBOSE -R cupsd:cupsd /etc/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/cache/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/log/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/spool/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/run/cups\n\tchown $VERBOSE cupsd:cupsd /usr/sbin/cupsd\n\tchmod $VERBOSE u+s /usr/sbin/cupsd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 264,
                  "endLine": 264,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tsed -i -e \"{s|^\\(User\\).*|\\1 cupsd|; s|^\\(Group\\) .*|\\1 cupsd|}\" /etc/cups/cupsd.conf\n\tchown $VERBOSE -R cupsd:cupsd /etc/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/cache/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/log/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/spool/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/run/cups\n\tchown $VERBOSE cupsd:cupsd /usr/sbin/cupsd\n",
                    "rendered": {
                      "text": "\tsed -i -e \"{s|^\\(User\\).*|\\1 cupsd|; s|^\\(Group\\) .*|\\1 cupsd|}\" /etc/cups/cupsd.conf\n\tchown $VERBOSE -R cupsd:cupsd /etc/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/cache/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/log/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/spool/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/run/cups\n\tchown $VERBOSE cupsd:cupsd /usr/sbin/cupsd\n",
                      "markdown": "`\tsed -i -e \"{s|^\\(User\\).*|\\1 cupsd|; s|^\\(Group\\) .*|\\1 cupsd|}\" /etc/cups/cupsd.conf\n\tchown $VERBOSE -R cupsd:cupsd /etc/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/cache/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/log/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/spool/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/run/cups\n\tchown $VERBOSE cupsd:cupsd /usr/sbin/cupsd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 263,
                  "endLine": 263,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tfi\n\tsed -i -e \"{s|^\\(User\\).*|\\1 cupsd|; s|^\\(Group\\) .*|\\1 cupsd|}\" /etc/cups/cupsd.conf\n\tchown $VERBOSE -R cupsd:cupsd /etc/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/cache/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/log/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/spool/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/run/cups\n",
                    "rendered": {
                      "text": "\tfi\n\tsed -i -e \"{s|^\\(User\\).*|\\1 cupsd|; s|^\\(Group\\) .*|\\1 cupsd|}\" /etc/cups/cupsd.conf\n\tchown $VERBOSE -R cupsd:cupsd /etc/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/cache/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/log/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/spool/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/run/cups\n",
                      "markdown": "`\tfi\n\tsed -i -e \"{s|^\\(User\\).*|\\1 cupsd|; s|^\\(Group\\) .*|\\1 cupsd|}\" /etc/cups/cupsd.conf\n\tchown $VERBOSE -R cupsd:cupsd /etc/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/cache/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/log/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/spool/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/run/cups\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 262,
                  "endLine": 262,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\tuseradd -g cupsd -d / -u 640 cupsd\n\tfi\n\tsed -i -e \"{s|^\\(User\\).*|\\1 cupsd|; s|^\\(Group\\) .*|\\1 cupsd|}\" /etc/cups/cupsd.conf\n\tchown $VERBOSE -R cupsd:cupsd /etc/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/cache/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/log/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/spool/cups\n",
                    "rendered": {
                      "text": "\t\tuseradd -g cupsd -d / -u 640 cupsd\n\tfi\n\tsed -i -e \"{s|^\\(User\\).*|\\1 cupsd|; s|^\\(Group\\) .*|\\1 cupsd|}\" /etc/cups/cupsd.conf\n\tchown $VERBOSE -R cupsd:cupsd /etc/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/cache/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/log/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/spool/cups\n",
                      "markdown": "`\t\tuseradd -g cupsd -d / -u 640 cupsd\n\tfi\n\tsed -i -e \"{s|^\\(User\\).*|\\1 cupsd|; s|^\\(Group\\) .*|\\1 cupsd|}\" /etc/cups/cupsd.conf\n\tchown $VERBOSE -R cupsd:cupsd /etc/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/cache/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/log/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/spool/cups\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 261,
                  "endLine": 261,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tif [ \"$( id -u cupsd 2>/dev/null )\" == \"\" ]; then\n\t\tuseradd -g cupsd -d / -u 640 cupsd\n\tfi\n\tsed -i -e \"{s|^\\(User\\).*|\\1 cupsd|; s|^\\(Group\\) .*|\\1 cupsd|}\" /etc/cups/cupsd.conf\n\tchown $VERBOSE -R cupsd:cupsd /etc/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/cache/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/log/cups\n",
                    "rendered": {
                      "text": "\tif [ \"$( id -u cupsd 2>/dev/null )\" == \"\" ]; then\n\t\tuseradd -g cupsd -d / -u 640 cupsd\n\tfi\n\tsed -i -e \"{s|^\\(User\\).*|\\1 cupsd|; s|^\\(Group\\) .*|\\1 cupsd|}\" /etc/cups/cupsd.conf\n\tchown $VERBOSE -R cupsd:cupsd /etc/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/cache/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/log/cups\n",
                      "markdown": "`\tif [ \"$( id -u cupsd 2>/dev/null )\" == \"\" ]; then\n\t\tuseradd -g cupsd -d / -u 640 cupsd\n\tfi\n\tsed -i -e \"{s|^\\(User\\).*|\\1 cupsd|; s|^\\(Group\\) .*|\\1 cupsd|}\" /etc/cups/cupsd.conf\n\tchown $VERBOSE -R cupsd:cupsd /etc/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/cache/cups\n\tchown $VERBOSE -R cupsd:cupsd /var/log/cups\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 242,
                  "endLine": 242,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tchown $VERBOSE root:root /etc/dhcpd.conf\n\tchown $VERBOSE -R root:root /var/state/dhcp/\n\tchown $VERBOSE root:root /usr/sbin/dhcpd\n\tchmod $VERBOSE u-s /usr/sbin/dhcpd\n\tsetcap -r /usr/sbin/dhcpd\n\tcheckReturnCode\n\tuserdel dhcpd\n",
                    "rendered": {
                      "text": "\tchown $VERBOSE root:root /etc/dhcpd.conf\n\tchown $VERBOSE -R root:root /var/state/dhcp/\n\tchown $VERBOSE root:root /usr/sbin/dhcpd\n\tchmod $VERBOSE u-s /usr/sbin/dhcpd\n\tsetcap -r /usr/sbin/dhcpd\n\tcheckReturnCode\n\tuserdel dhcpd\n",
                      "markdown": "`\tchown $VERBOSE root:root /etc/dhcpd.conf\n\tchown $VERBOSE -R root:root /var/state/dhcp/\n\tchown $VERBOSE root:root /usr/sbin/dhcpd\n\tchmod $VERBOSE u-s /usr/sbin/dhcpd\n\tsetcap -r /usr/sbin/dhcpd\n\tcheckReturnCode\n\tuserdel dhcpd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 241,
                  "endLine": 241,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tchown $VERBOSE root:root /var/run/dhcpd\n\tchown $VERBOSE root:root /etc/dhcpd.conf\n\tchown $VERBOSE -R root:root /var/state/dhcp/\n\tchown $VERBOSE root:root /usr/sbin/dhcpd\n\tchmod $VERBOSE u-s /usr/sbin/dhcpd\n\tsetcap -r /usr/sbin/dhcpd\n\tcheckReturnCode\n",
                    "rendered": {
                      "text": "\tchown $VERBOSE root:root /var/run/dhcpd\n\tchown $VERBOSE root:root /etc/dhcpd.conf\n\tchown $VERBOSE -R root:root /var/state/dhcp/\n\tchown $VERBOSE root:root /usr/sbin/dhcpd\n\tchmod $VERBOSE u-s /usr/sbin/dhcpd\n\tsetcap -r /usr/sbin/dhcpd\n\tcheckReturnCode\n",
                      "markdown": "`\tchown $VERBOSE root:root /var/run/dhcpd\n\tchown $VERBOSE root:root /etc/dhcpd.conf\n\tchown $VERBOSE -R root:root /var/state/dhcp/\n\tchown $VERBOSE root:root /usr/sbin/dhcpd\n\tchmod $VERBOSE u-s /usr/sbin/dhcpd\n\tsetcap -r /usr/sbin/dhcpd\n\tcheckReturnCode\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 240,
                  "endLine": 240,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tmessage \"reverting dhcpd\"\n\tchown $VERBOSE root:root /var/run/dhcpd\n\tchown $VERBOSE root:root /etc/dhcpd.conf\n\tchown $VERBOSE -R root:root /var/state/dhcp/\n\tchown $VERBOSE root:root /usr/sbin/dhcpd\n\tchmod $VERBOSE u-s /usr/sbin/dhcpd\n\tsetcap -r /usr/sbin/dhcpd\n",
                    "rendered": {
                      "text": "\tmessage \"reverting dhcpd\"\n\tchown $VERBOSE root:root /var/run/dhcpd\n\tchown $VERBOSE root:root /etc/dhcpd.conf\n\tchown $VERBOSE -R root:root /var/state/dhcp/\n\tchown $VERBOSE root:root /usr/sbin/dhcpd\n\tchmod $VERBOSE u-s /usr/sbin/dhcpd\n\tsetcap -r /usr/sbin/dhcpd\n",
                      "markdown": "`\tmessage \"reverting dhcpd\"\n\tchown $VERBOSE root:root /var/run/dhcpd\n\tchown $VERBOSE root:root /etc/dhcpd.conf\n\tchown $VERBOSE -R root:root /var/state/dhcp/\n\tchown $VERBOSE root:root /usr/sbin/dhcpd\n\tchmod $VERBOSE u-s /usr/sbin/dhcpd\n\tsetcap -r /usr/sbin/dhcpd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 239,
                  "endLine": 239,
                  "endColumn": 7,
                  "snippet": {
                    "text": "dhcpd_revert(){\n\tmessage \"reverting dhcpd\"\n\tchown $VERBOSE root:root /var/run/dhcpd\n\tchown $VERBOSE root:root /etc/dhcpd.conf\n\tchown $VERBOSE -R root:root /var/state/dhcp/\n\tchown $VERBOSE root:root /usr/sbin/dhcpd\n\tchmod $VERBOSE u-s /usr/sbin/dhcpd\n",
                    "rendered": {
                      "text": "dhcpd_revert(){\n\tmessage \"reverting dhcpd\"\n\tchown $VERBOSE root:root /var/run/dhcpd\n\tchown $VERBOSE root:root /etc/dhcpd.conf\n\tchown $VERBOSE -R root:root /var/state/dhcp/\n\tchown $VERBOSE root:root /usr/sbin/dhcpd\n\tchmod $VERBOSE u-s /usr/sbin/dhcpd\n",
                      "markdown": "`dhcpd_revert(){\n\tmessage \"reverting dhcpd\"\n\tchown $VERBOSE root:root /var/run/dhcpd\n\tchown $VERBOSE root:root /etc/dhcpd.conf\n\tchown $VERBOSE -R root:root /var/state/dhcp/\n\tchown $VERBOSE root:root /usr/sbin/dhcpd\n\tchmod $VERBOSE u-s /usr/sbin/dhcpd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 238,
                  "endLine": 238,
                  "endColumn": 7,
                  "snippet": {
                    "text": "}\ndhcpd_revert(){\n\tmessage \"reverting dhcpd\"\n\tchown $VERBOSE root:root /var/run/dhcpd\n\tchown $VERBOSE root:root /etc/dhcpd.conf\n\tchown $VERBOSE -R root:root /var/state/dhcp/\n\tchown $VERBOSE root:root /usr/sbin/dhcpd\n",
                    "rendered": {
                      "text": "}\ndhcpd_revert(){\n\tmessage \"reverting dhcpd\"\n\tchown $VERBOSE root:root /var/run/dhcpd\n\tchown $VERBOSE root:root /etc/dhcpd.conf\n\tchown $VERBOSE -R root:root /var/state/dhcp/\n\tchown $VERBOSE root:root /usr/sbin/dhcpd\n",
                      "markdown": "`}\ndhcpd_revert(){\n\tmessage \"reverting dhcpd\"\n\tchown $VERBOSE root:root /var/run/dhcpd\n\tchown $VERBOSE root:root /etc/dhcpd.conf\n\tchown $VERBOSE -R root:root /var/state/dhcp/\n\tchown $VERBOSE root:root /usr/sbin/dhcpd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 232,
                  "endLine": 232,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tchown $VERBOSE dhcpd:dhcpd /etc/dhcpd.conf\n\tchown $VERBOSE -R dhcpd:dhcpd /var/state/dhcp/\n\tchown $VERBOSE dhcpd:dhcpd /usr/sbin/dhcpd\n\tchmod $VERBOSE u+s /usr/sbin/dhcpd\n\tsetcap cap_net_bind_service,cap_net_raw=ep /usr/sbin/dhcpd\n\tcheckReturnCode\n}\n",
                    "rendered": {
                      "text": "\tchown $VERBOSE dhcpd:dhcpd /etc/dhcpd.conf\n\tchown $VERBOSE -R dhcpd:dhcpd /var/state/dhcp/\n\tchown $VERBOSE dhcpd:dhcpd /usr/sbin/dhcpd\n\tchmod $VERBOSE u+s /usr/sbin/dhcpd\n\tsetcap cap_net_bind_service,cap_net_raw=ep /usr/sbin/dhcpd\n\tcheckReturnCode\n}\n",
                      "markdown": "`\tchown $VERBOSE dhcpd:dhcpd /etc/dhcpd.conf\n\tchown $VERBOSE -R dhcpd:dhcpd /var/state/dhcp/\n\tchown $VERBOSE dhcpd:dhcpd /usr/sbin/dhcpd\n\tchmod $VERBOSE u+s /usr/sbin/dhcpd\n\tsetcap cap_net_bind_service,cap_net_raw=ep /usr/sbin/dhcpd\n\tcheckReturnCode\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 231,
                  "endLine": 231,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tchown $VERBOSE dhcpd:dhcpd /var/run/dhcpd\n\tchown $VERBOSE dhcpd:dhcpd /etc/dhcpd.conf\n\tchown $VERBOSE -R dhcpd:dhcpd /var/state/dhcp/\n\tchown $VERBOSE dhcpd:dhcpd /usr/sbin/dhcpd\n\tchmod $VERBOSE u+s /usr/sbin/dhcpd\n\tsetcap cap_net_bind_service,cap_net_raw=ep /usr/sbin/dhcpd\n\tcheckReturnCode\n",
                    "rendered": {
                      "text": "\tchown $VERBOSE dhcpd:dhcpd /var/run/dhcpd\n\tchown $VERBOSE dhcpd:dhcpd /etc/dhcpd.conf\n\tchown $VERBOSE -R dhcpd:dhcpd /var/state/dhcp/\n\tchown $VERBOSE dhcpd:dhcpd /usr/sbin/dhcpd\n\tchmod $VERBOSE u+s /usr/sbin/dhcpd\n\tsetcap cap_net_bind_service,cap_net_raw=ep /usr/sbin/dhcpd\n\tcheckReturnCode\n",
                      "markdown": "`\tchown $VERBOSE dhcpd:dhcpd /var/run/dhcpd\n\tchown $VERBOSE dhcpd:dhcpd /etc/dhcpd.conf\n\tchown $VERBOSE -R dhcpd:dhcpd /var/state/dhcp/\n\tchown $VERBOSE dhcpd:dhcpd /usr/sbin/dhcpd\n\tchmod $VERBOSE u+s /usr/sbin/dhcpd\n\tsetcap cap_net_bind_service,cap_net_raw=ep /usr/sbin/dhcpd\n\tcheckReturnCode\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 230,
                  "endLine": 230,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tfi\n\tchown $VERBOSE dhcpd:dhcpd /var/run/dhcpd\n\tchown $VERBOSE dhcpd:dhcpd /etc/dhcpd.conf\n\tchown $VERBOSE -R dhcpd:dhcpd /var/state/dhcp/\n\tchown $VERBOSE dhcpd:dhcpd /usr/sbin/dhcpd\n\tchmod $VERBOSE u+s /usr/sbin/dhcpd\n\tsetcap cap_net_bind_service,cap_net_raw=ep /usr/sbin/dhcpd\n",
                    "rendered": {
                      "text": "\tfi\n\tchown $VERBOSE dhcpd:dhcpd /var/run/dhcpd\n\tchown $VERBOSE dhcpd:dhcpd /etc/dhcpd.conf\n\tchown $VERBOSE -R dhcpd:dhcpd /var/state/dhcp/\n\tchown $VERBOSE dhcpd:dhcpd /usr/sbin/dhcpd\n\tchmod $VERBOSE u+s /usr/sbin/dhcpd\n\tsetcap cap_net_bind_service,cap_net_raw=ep /usr/sbin/dhcpd\n",
                      "markdown": "`\tfi\n\tchown $VERBOSE dhcpd:dhcpd /var/run/dhcpd\n\tchown $VERBOSE dhcpd:dhcpd /etc/dhcpd.conf\n\tchown $VERBOSE -R dhcpd:dhcpd /var/state/dhcp/\n\tchown $VERBOSE dhcpd:dhcpd /usr/sbin/dhcpd\n\tchmod $VERBOSE u+s /usr/sbin/dhcpd\n\tsetcap cap_net_bind_service,cap_net_raw=ep /usr/sbin/dhcpd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 229,
                  "endLine": 229,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\tuseradd -g dhcpd -d / -u 630 dhcpd\n\tfi\n\tchown $VERBOSE dhcpd:dhcpd /var/run/dhcpd\n\tchown $VERBOSE dhcpd:dhcpd /etc/dhcpd.conf\n\tchown $VERBOSE -R dhcpd:dhcpd /var/state/dhcp/\n\tchown $VERBOSE dhcpd:dhcpd /usr/sbin/dhcpd\n\tchmod $VERBOSE u+s /usr/sbin/dhcpd\n",
                    "rendered": {
                      "text": "\t\tuseradd -g dhcpd -d / -u 630 dhcpd\n\tfi\n\tchown $VERBOSE dhcpd:dhcpd /var/run/dhcpd\n\tchown $VERBOSE dhcpd:dhcpd /etc/dhcpd.conf\n\tchown $VERBOSE -R dhcpd:dhcpd /var/state/dhcp/\n\tchown $VERBOSE dhcpd:dhcpd /usr/sbin/dhcpd\n\tchmod $VERBOSE u+s /usr/sbin/dhcpd\n",
                      "markdown": "`\t\tuseradd -g dhcpd -d / -u 630 dhcpd\n\tfi\n\tchown $VERBOSE dhcpd:dhcpd /var/run/dhcpd\n\tchown $VERBOSE dhcpd:dhcpd /etc/dhcpd.conf\n\tchown $VERBOSE -R dhcpd:dhcpd /var/state/dhcp/\n\tchown $VERBOSE dhcpd:dhcpd /usr/sbin/dhcpd\n\tchmod $VERBOSE u+s /usr/sbin/dhcpd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 228,
                  "endLine": 228,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tif [ \"$( id -u dhcpd 2>/dev/null )\" == \"\" ]; then\n\t\tuseradd -g dhcpd -d / -u 630 dhcpd\n\tfi\n\tchown $VERBOSE dhcpd:dhcpd /var/run/dhcpd\n\tchown $VERBOSE dhcpd:dhcpd /etc/dhcpd.conf\n\tchown $VERBOSE -R dhcpd:dhcpd /var/state/dhcp/\n\tchown $VERBOSE dhcpd:dhcpd /usr/sbin/dhcpd\n",
                    "rendered": {
                      "text": "\tif [ \"$( id -u dhcpd 2>/dev/null )\" == \"\" ]; then\n\t\tuseradd -g dhcpd -d / -u 630 dhcpd\n\tfi\n\tchown $VERBOSE dhcpd:dhcpd /var/run/dhcpd\n\tchown $VERBOSE dhcpd:dhcpd /etc/dhcpd.conf\n\tchown $VERBOSE -R dhcpd:dhcpd /var/state/dhcp/\n\tchown $VERBOSE dhcpd:dhcpd /usr/sbin/dhcpd\n",
                      "markdown": "`\tif [ \"$( id -u dhcpd 2>/dev/null )\" == \"\" ]; then\n\t\tuseradd -g dhcpd -d / -u 630 dhcpd\n\tfi\n\tchown $VERBOSE dhcpd:dhcpd /var/run/dhcpd\n\tchown $VERBOSE dhcpd:dhcpd /etc/dhcpd.conf\n\tchown $VERBOSE -R dhcpd:dhcpd /var/state/dhcp/\n\tchown $VERBOSE dhcpd:dhcpd /usr/sbin/dhcpd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 209,
                  "endLine": 209,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tchown $VERBOSE -R root:root /var/named\n\tchown $VERBOSE root:root /etc/rndc.key\n\tchown $VERBOSE root:root /usr/sbin/named\n\tchmod $VERBOSE u-s /usr/sbin/named\n\tsetcap -r /usr/sbin/named\n\tcheckReturnCode\n\tuserdel bind\n",
                    "rendered": {
                      "text": "\tchown $VERBOSE -R root:root /var/named\n\tchown $VERBOSE root:root /etc/rndc.key\n\tchown $VERBOSE root:root /usr/sbin/named\n\tchmod $VERBOSE u-s /usr/sbin/named\n\tsetcap -r /usr/sbin/named\n\tcheckReturnCode\n\tuserdel bind\n",
                      "markdown": "`\tchown $VERBOSE -R root:root /var/named\n\tchown $VERBOSE root:root /etc/rndc.key\n\tchown $VERBOSE root:root /usr/sbin/named\n\tchmod $VERBOSE u-s /usr/sbin/named\n\tsetcap -r /usr/sbin/named\n\tcheckReturnCode\n\tuserdel bind\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 208,
                  "endLine": 208,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tchown $VERBOSE -R root:root /var/run/named\n\tchown $VERBOSE -R root:root /var/named\n\tchown $VERBOSE root:root /etc/rndc.key\n\tchown $VERBOSE root:root /usr/sbin/named\n\tchmod $VERBOSE u-s /usr/sbin/named\n\tsetcap -r /usr/sbin/named\n\tcheckReturnCode\n",
                    "rendered": {
                      "text": "\tchown $VERBOSE -R root:root /var/run/named\n\tchown $VERBOSE -R root:root /var/named\n\tchown $VERBOSE root:root /etc/rndc.key\n\tchown $VERBOSE root:root /usr/sbin/named\n\tchmod $VERBOSE u-s /usr/sbin/named\n\tsetcap -r /usr/sbin/named\n\tcheckReturnCode\n",
                      "markdown": "`\tchown $VERBOSE -R root:root /var/run/named\n\tchown $VERBOSE -R root:root /var/named\n\tchown $VERBOSE root:root /etc/rndc.key\n\tchown $VERBOSE root:root /usr/sbin/named\n\tchmod $VERBOSE u-s /usr/sbin/named\n\tsetcap -r /usr/sbin/named\n\tcheckReturnCode\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 207,
                  "endLine": 207,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tmessage \"reverting bind\"\n\tchown $VERBOSE -R root:root /var/run/named\n\tchown $VERBOSE -R root:root /var/named\n\tchown $VERBOSE root:root /etc/rndc.key\n\tchown $VERBOSE root:root /usr/sbin/named\n\tchmod $VERBOSE u-s /usr/sbin/named\n\tsetcap -r /usr/sbin/named\n",
                    "rendered": {
                      "text": "\tmessage \"reverting bind\"\n\tchown $VERBOSE -R root:root /var/run/named\n\tchown $VERBOSE -R root:root /var/named\n\tchown $VERBOSE root:root /etc/rndc.key\n\tchown $VERBOSE root:root /usr/sbin/named\n\tchmod $VERBOSE u-s /usr/sbin/named\n\tsetcap -r /usr/sbin/named\n",
                      "markdown": "`\tmessage \"reverting bind\"\n\tchown $VERBOSE -R root:root /var/run/named\n\tchown $VERBOSE -R root:root /var/named\n\tchown $VERBOSE root:root /etc/rndc.key\n\tchown $VERBOSE root:root /usr/sbin/named\n\tchmod $VERBOSE u-s /usr/sbin/named\n\tsetcap -r /usr/sbin/named\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 206,
                  "endLine": 206,
                  "endColumn": 7,
                  "snippet": {
                    "text": "bind_revert(){\n\tmessage \"reverting bind\"\n\tchown $VERBOSE -R root:root /var/run/named\n\tchown $VERBOSE -R root:root /var/named\n\tchown $VERBOSE root:root /etc/rndc.key\n\tchown $VERBOSE root:root /usr/sbin/named\n\tchmod $VERBOSE u-s /usr/sbin/named\n",
                    "rendered": {
                      "text": "bind_revert(){\n\tmessage \"reverting bind\"\n\tchown $VERBOSE -R root:root /var/run/named\n\tchown $VERBOSE -R root:root /var/named\n\tchown $VERBOSE root:root /etc/rndc.key\n\tchown $VERBOSE root:root /usr/sbin/named\n\tchmod $VERBOSE u-s /usr/sbin/named\n",
                      "markdown": "`bind_revert(){\n\tmessage \"reverting bind\"\n\tchown $VERBOSE -R root:root /var/run/named\n\tchown $VERBOSE -R root:root /var/named\n\tchown $VERBOSE root:root /etc/rndc.key\n\tchown $VERBOSE root:root /usr/sbin/named\n\tchmod $VERBOSE u-s /usr/sbin/named\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 205,
                  "endLine": 205,
                  "endColumn": 7,
                  "snippet": {
                    "text": "}\nbind_revert(){\n\tmessage \"reverting bind\"\n\tchown $VERBOSE -R root:root /var/run/named\n\tchown $VERBOSE -R root:root /var/named\n\tchown $VERBOSE root:root /etc/rndc.key\n\tchown $VERBOSE root:root /usr/sbin/named\n",
                    "rendered": {
                      "text": "}\nbind_revert(){\n\tmessage \"reverting bind\"\n\tchown $VERBOSE -R root:root /var/run/named\n\tchown $VERBOSE -R root:root /var/named\n\tchown $VERBOSE root:root /etc/rndc.key\n\tchown $VERBOSE root:root /usr/sbin/named\n",
                      "markdown": "`}\nbind_revert(){\n\tmessage \"reverting bind\"\n\tchown $VERBOSE -R root:root /var/run/named\n\tchown $VERBOSE -R root:root /var/named\n\tchown $VERBOSE root:root /etc/rndc.key\n\tchown $VERBOSE root:root /usr/sbin/named\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 199,
                  "endLine": 199,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tchown $VERBOSE -R bind:bind /var/named\n\tchown $VERBOSE bind:bind /etc/rndc.key\n\tchown $VERBOSE bind:bind /usr/sbin/named\n\tchmod $VERBOSE u+s /usr/sbin/named\n\tsetcap cap_net_bind_service=ep /usr/sbin/named\n\tcheckReturnCode\n}\n",
                    "rendered": {
                      "text": "\tchown $VERBOSE -R bind:bind /var/named\n\tchown $VERBOSE bind:bind /etc/rndc.key\n\tchown $VERBOSE bind:bind /usr/sbin/named\n\tchmod $VERBOSE u+s /usr/sbin/named\n\tsetcap cap_net_bind_service=ep /usr/sbin/named\n\tcheckReturnCode\n}\n",
                      "markdown": "`\tchown $VERBOSE -R bind:bind /var/named\n\tchown $VERBOSE bind:bind /etc/rndc.key\n\tchown $VERBOSE bind:bind /usr/sbin/named\n\tchmod $VERBOSE u+s /usr/sbin/named\n\tsetcap cap_net_bind_service=ep /usr/sbin/named\n\tcheckReturnCode\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 198,
                  "endLine": 198,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tchown $VERBOSE -R bind:bind /var/run/named\n\tchown $VERBOSE -R bind:bind /var/named\n\tchown $VERBOSE bind:bind /etc/rndc.key\n\tchown $VERBOSE bind:bind /usr/sbin/named\n\tchmod $VERBOSE u+s /usr/sbin/named\n\tsetcap cap_net_bind_service=ep /usr/sbin/named\n\tcheckReturnCode\n",
                    "rendered": {
                      "text": "\tchown $VERBOSE -R bind:bind /var/run/named\n\tchown $VERBOSE -R bind:bind /var/named\n\tchown $VERBOSE bind:bind /etc/rndc.key\n\tchown $VERBOSE bind:bind /usr/sbin/named\n\tchmod $VERBOSE u+s /usr/sbin/named\n\tsetcap cap_net_bind_service=ep /usr/sbin/named\n\tcheckReturnCode\n",
                      "markdown": "`\tchown $VERBOSE -R bind:bind /var/run/named\n\tchown $VERBOSE -R bind:bind /var/named\n\tchown $VERBOSE bind:bind /etc/rndc.key\n\tchown $VERBOSE bind:bind /usr/sbin/named\n\tchmod $VERBOSE u+s /usr/sbin/named\n\tsetcap cap_net_bind_service=ep /usr/sbin/named\n\tcheckReturnCode\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 197,
                  "endLine": 197,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tfi\n\tchown $VERBOSE -R bind:bind /var/run/named\n\tchown $VERBOSE -R bind:bind /var/named\n\tchown $VERBOSE bind:bind /etc/rndc.key\n\tchown $VERBOSE bind:bind /usr/sbin/named\n\tchmod $VERBOSE u+s /usr/sbin/named\n\tsetcap cap_net_bind_service=ep /usr/sbin/named\n",
                    "rendered": {
                      "text": "\tfi\n\tchown $VERBOSE -R bind:bind /var/run/named\n\tchown $VERBOSE -R bind:bind /var/named\n\tchown $VERBOSE bind:bind /etc/rndc.key\n\tchown $VERBOSE bind:bind /usr/sbin/named\n\tchmod $VERBOSE u+s /usr/sbin/named\n\tsetcap cap_net_bind_service=ep /usr/sbin/named\n",
                      "markdown": "`\tfi\n\tchown $VERBOSE -R bind:bind /var/run/named\n\tchown $VERBOSE -R bind:bind /var/named\n\tchown $VERBOSE bind:bind /etc/rndc.key\n\tchown $VERBOSE bind:bind /usr/sbin/named\n\tchmod $VERBOSE u+s /usr/sbin/named\n\tsetcap cap_net_bind_service=ep /usr/sbin/named\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 196,
                  "endLine": 196,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\tuseradd -g bind -d / -u 620 bind\n\tfi\n\tchown $VERBOSE -R bind:bind /var/run/named\n\tchown $VERBOSE -R bind:bind /var/named\n\tchown $VERBOSE bind:bind /etc/rndc.key\n\tchown $VERBOSE bind:bind /usr/sbin/named\n\tchmod $VERBOSE u+s /usr/sbin/named\n",
                    "rendered": {
                      "text": "\t\tuseradd -g bind -d / -u 620 bind\n\tfi\n\tchown $VERBOSE -R bind:bind /var/run/named\n\tchown $VERBOSE -R bind:bind /var/named\n\tchown $VERBOSE bind:bind /etc/rndc.key\n\tchown $VERBOSE bind:bind /usr/sbin/named\n\tchmod $VERBOSE u+s /usr/sbin/named\n",
                      "markdown": "`\t\tuseradd -g bind -d / -u 620 bind\n\tfi\n\tchown $VERBOSE -R bind:bind /var/run/named\n\tchown $VERBOSE -R bind:bind /var/named\n\tchown $VERBOSE bind:bind /etc/rndc.key\n\tchown $VERBOSE bind:bind /usr/sbin/named\n\tchmod $VERBOSE u+s /usr/sbin/named\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 195,
                  "endLine": 195,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tif [ \"$( id -u bind 2>/dev/null )\" == \"\" ]; then\n\t\tuseradd -g bind -d / -u 620 bind\n\tfi\n\tchown $VERBOSE -R bind:bind /var/run/named\n\tchown $VERBOSE -R bind:bind /var/named\n\tchown $VERBOSE bind:bind /etc/rndc.key\n\tchown $VERBOSE bind:bind /usr/sbin/named\n",
                    "rendered": {
                      "text": "\tif [ \"$( id -u bind 2>/dev/null )\" == \"\" ]; then\n\t\tuseradd -g bind -d / -u 620 bind\n\tfi\n\tchown $VERBOSE -R bind:bind /var/run/named\n\tchown $VERBOSE -R bind:bind /var/named\n\tchown $VERBOSE bind:bind /etc/rndc.key\n\tchown $VERBOSE bind:bind /usr/sbin/named\n",
                      "markdown": "`\tif [ \"$( id -u bind 2>/dev/null )\" == \"\" ]; then\n\t\tuseradd -g bind -d / -u 620 bind\n\tfi\n\tchown $VERBOSE -R bind:bind /var/run/named\n\tchown $VERBOSE -R bind:bind /var/named\n\tchown $VERBOSE bind:bind /etc/rndc.key\n\tchown $VERBOSE bind:bind /usr/sbin/named\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 174,
                  "endLine": 174,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tchown $VERBOSE -R root:root /var/run/samba\n\tchown $VERBOSE -R root:root /var/cache/samba\n\tchown $VERBOSE root:root /usr/sbin/smbd /usr/sbin/nmbd\n\tchmod $VERBOSE u-s /usr/sbin/smbd /usr/sbin/nmbd\n\tsetcap -r /usr/sbin/smbd\n\tcheckReturnCode\n\tsetcap -r /usr/sbin/nmbd\n",
                    "rendered": {
                      "text": "\tchown $VERBOSE -R root:root /var/run/samba\n\tchown $VERBOSE -R root:root /var/cache/samba\n\tchown $VERBOSE root:root /usr/sbin/smbd /usr/sbin/nmbd\n\tchmod $VERBOSE u-s /usr/sbin/smbd /usr/sbin/nmbd\n\tsetcap -r /usr/sbin/smbd\n\tcheckReturnCode\n\tsetcap -r /usr/sbin/nmbd\n",
                      "markdown": "`\tchown $VERBOSE -R root:root /var/run/samba\n\tchown $VERBOSE -R root:root /var/cache/samba\n\tchown $VERBOSE root:root /usr/sbin/smbd /usr/sbin/nmbd\n\tchmod $VERBOSE u-s /usr/sbin/smbd /usr/sbin/nmbd\n\tsetcap -r /usr/sbin/smbd\n\tcheckReturnCode\n\tsetcap -r /usr/sbin/nmbd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 173,
                  "endLine": 173,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tchown $VERBOSE -R root:root /etc/samba\n\tchown $VERBOSE -R root:root /var/run/samba\n\tchown $VERBOSE -R root:root /var/cache/samba\n\tchown $VERBOSE root:root /usr/sbin/smbd /usr/sbin/nmbd\n\tchmod $VERBOSE u-s /usr/sbin/smbd /usr/sbin/nmbd\n\tsetcap -r /usr/sbin/smbd\n\tcheckReturnCode\n",
                    "rendered": {
                      "text": "\tchown $VERBOSE -R root:root /etc/samba\n\tchown $VERBOSE -R root:root /var/run/samba\n\tchown $VERBOSE -R root:root /var/cache/samba\n\tchown $VERBOSE root:root /usr/sbin/smbd /usr/sbin/nmbd\n\tchmod $VERBOSE u-s /usr/sbin/smbd /usr/sbin/nmbd\n\tsetcap -r /usr/sbin/smbd\n\tcheckReturnCode\n",
                      "markdown": "`\tchown $VERBOSE -R root:root /etc/samba\n\tchown $VERBOSE -R root:root /var/run/samba\n\tchown $VERBOSE -R root:root /var/cache/samba\n\tchown $VERBOSE root:root /usr/sbin/smbd /usr/sbin/nmbd\n\tchmod $VERBOSE u-s /usr/sbin/smbd /usr/sbin/nmbd\n\tsetcap -r /usr/sbin/smbd\n\tcheckReturnCode\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 172,
                  "endLine": 172,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tchown $VERBOSE -R root:root /var/log/samba\n\tchown $VERBOSE -R root:root /etc/samba\n\tchown $VERBOSE -R root:root /var/run/samba\n\tchown $VERBOSE -R root:root /var/cache/samba\n\tchown $VERBOSE root:root /usr/sbin/smbd /usr/sbin/nmbd\n\tchmod $VERBOSE u-s /usr/sbin/smbd /usr/sbin/nmbd\n\tsetcap -r /usr/sbin/smbd\n",
                    "rendered": {
                      "text": "\tchown $VERBOSE -R root:root /var/log/samba\n\tchown $VERBOSE -R root:root /etc/samba\n\tchown $VERBOSE -R root:root /var/run/samba\n\tchown $VERBOSE -R root:root /var/cache/samba\n\tchown $VERBOSE root:root /usr/sbin/smbd /usr/sbin/nmbd\n\tchmod $VERBOSE u-s /usr/sbin/smbd /usr/sbin/nmbd\n\tsetcap -r /usr/sbin/smbd\n",
                      "markdown": "`\tchown $VERBOSE -R root:root /var/log/samba\n\tchown $VERBOSE -R root:root /etc/samba\n\tchown $VERBOSE -R root:root /var/run/samba\n\tchown $VERBOSE -R root:root /var/cache/samba\n\tchown $VERBOSE root:root /usr/sbin/smbd /usr/sbin/nmbd\n\tchmod $VERBOSE u-s /usr/sbin/smbd /usr/sbin/nmbd\n\tsetcap -r /usr/sbin/smbd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 171,
                  "endLine": 171,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tmessage \"reverting samba\"\n\tchown $VERBOSE -R root:root /var/log/samba\n\tchown $VERBOSE -R root:root /etc/samba\n\tchown $VERBOSE -R root:root /var/run/samba\n\tchown $VERBOSE -R root:root /var/cache/samba\n\tchown $VERBOSE root:root /usr/sbin/smbd /usr/sbin/nmbd\n\tchmod $VERBOSE u-s /usr/sbin/smbd /usr/sbin/nmbd\n",
                    "rendered": {
                      "text": "\tmessage \"reverting samba\"\n\tchown $VERBOSE -R root:root /var/log/samba\n\tchown $VERBOSE -R root:root /etc/samba\n\tchown $VERBOSE -R root:root /var/run/samba\n\tchown $VERBOSE -R root:root /var/cache/samba\n\tchown $VERBOSE root:root /usr/sbin/smbd /usr/sbin/nmbd\n\tchmod $VERBOSE u-s /usr/sbin/smbd /usr/sbin/nmbd\n",
                      "markdown": "`\tmessage \"reverting samba\"\n\tchown $VERBOSE -R root:root /var/log/samba\n\tchown $VERBOSE -R root:root /etc/samba\n\tchown $VERBOSE -R root:root /var/run/samba\n\tchown $VERBOSE -R root:root /var/cache/samba\n\tchown $VERBOSE root:root /usr/sbin/smbd /usr/sbin/nmbd\n\tchmod $VERBOSE u-s /usr/sbin/smbd /usr/sbin/nmbd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 170,
                  "endLine": 170,
                  "endColumn": 7,
                  "snippet": {
                    "text": "samba_revert(){\n\tmessage \"reverting samba\"\n\tchown $VERBOSE -R root:root /var/log/samba\n\tchown $VERBOSE -R root:root /etc/samba\n\tchown $VERBOSE -R root:root /var/run/samba\n\tchown $VERBOSE -R root:root /var/cache/samba\n\tchown $VERBOSE root:root /usr/sbin/smbd /usr/sbin/nmbd\n",
                    "rendered": {
                      "text": "samba_revert(){\n\tmessage \"reverting samba\"\n\tchown $VERBOSE -R root:root /var/log/samba\n\tchown $VERBOSE -R root:root /etc/samba\n\tchown $VERBOSE -R root:root /var/run/samba\n\tchown $VERBOSE -R root:root /var/cache/samba\n\tchown $VERBOSE root:root /usr/sbin/smbd /usr/sbin/nmbd\n",
                      "markdown": "`samba_revert(){\n\tmessage \"reverting samba\"\n\tchown $VERBOSE -R root:root /var/log/samba\n\tchown $VERBOSE -R root:root /etc/samba\n\tchown $VERBOSE -R root:root /var/run/samba\n\tchown $VERBOSE -R root:root /var/cache/samba\n\tchown $VERBOSE root:root /usr/sbin/smbd /usr/sbin/nmbd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 169,
                  "endLine": 169,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\nsamba_revert(){\n\tmessage \"reverting samba\"\n\tchown $VERBOSE -R root:root /var/log/samba\n\tchown $VERBOSE -R root:root /etc/samba\n\tchown $VERBOSE -R root:root /var/run/samba\n\tchown $VERBOSE -R root:root /var/cache/samba\n",
                    "rendered": {
                      "text": "\nsamba_revert(){\n\tmessage \"reverting samba\"\n\tchown $VERBOSE -R root:root /var/log/samba\n\tchown $VERBOSE -R root:root /etc/samba\n\tchown $VERBOSE -R root:root /var/run/samba\n\tchown $VERBOSE -R root:root /var/cache/samba\n",
                      "markdown": "`\nsamba_revert(){\n\tmessage \"reverting samba\"\n\tchown $VERBOSE -R root:root /var/log/samba\n\tchown $VERBOSE -R root:root /etc/samba\n\tchown $VERBOSE -R root:root /var/run/samba\n\tchown $VERBOSE -R root:root /var/cache/samba\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 160,
                  "endLine": 160,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tchown $VERBOSE -R samba:samba /var/run/samba\n\tchown $VERBOSE -R samba:samba /var/cache/samba\n\tchown $VERBOSE samba:samba /usr/sbin/smbd /usr/sbin/nmbd\n\tchmod $VERBOSE u+s /usr/sbin/smbd /usr/sbin/nmbd\n\tsetcap cap_net_bind_service,cap_sys_resource,cap_dac_override=ep /usr/sbin/smbd\n\tcheckReturnCode\n\tsetcap cap_net_bind_service=ep /usr/sbin/nmbd\n",
                    "rendered": {
                      "text": "\tchown $VERBOSE -R samba:samba /var/run/samba\n\tchown $VERBOSE -R samba:samba /var/cache/samba\n\tchown $VERBOSE samba:samba /usr/sbin/smbd /usr/sbin/nmbd\n\tchmod $VERBOSE u+s /usr/sbin/smbd /usr/sbin/nmbd\n\tsetcap cap_net_bind_service,cap_sys_resource,cap_dac_override=ep /usr/sbin/smbd\n\tcheckReturnCode\n\tsetcap cap_net_bind_service=ep /usr/sbin/nmbd\n",
                      "markdown": "`\tchown $VERBOSE -R samba:samba /var/run/samba\n\tchown $VERBOSE -R samba:samba /var/cache/samba\n\tchown $VERBOSE samba:samba /usr/sbin/smbd /usr/sbin/nmbd\n\tchmod $VERBOSE u+s /usr/sbin/smbd /usr/sbin/nmbd\n\tsetcap cap_net_bind_service,cap_sys_resource,cap_dac_override=ep /usr/sbin/smbd\n\tcheckReturnCode\n\tsetcap cap_net_bind_service=ep /usr/sbin/nmbd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tchown $VERBOSE -R samba:samba /etc/samba\n\tchown $VERBOSE -R samba:samba /var/run/samba\n\tchown $VERBOSE -R samba:samba /var/cache/samba\n\tchown $VERBOSE samba:samba /usr/sbin/smbd /usr/sbin/nmbd\n\tchmod $VERBOSE u+s /usr/sbin/smbd /usr/sbin/nmbd\n\tsetcap cap_net_bind_service,cap_sys_resource,cap_dac_override=ep /usr/sbin/smbd\n\tcheckReturnCode\n",
                    "rendered": {
                      "text": "\tchown $VERBOSE -R samba:samba /etc/samba\n\tchown $VERBOSE -R samba:samba /var/run/samba\n\tchown $VERBOSE -R samba:samba /var/cache/samba\n\tchown $VERBOSE samba:samba /usr/sbin/smbd /usr/sbin/nmbd\n\tchmod $VERBOSE u+s /usr/sbin/smbd /usr/sbin/nmbd\n\tsetcap cap_net_bind_service,cap_sys_resource,cap_dac_override=ep /usr/sbin/smbd\n\tcheckReturnCode\n",
                      "markdown": "`\tchown $VERBOSE -R samba:samba /etc/samba\n\tchown $VERBOSE -R samba:samba /var/run/samba\n\tchown $VERBOSE -R samba:samba /var/cache/samba\n\tchown $VERBOSE samba:samba /usr/sbin/smbd /usr/sbin/nmbd\n\tchmod $VERBOSE u+s /usr/sbin/smbd /usr/sbin/nmbd\n\tsetcap cap_net_bind_service,cap_sys_resource,cap_dac_override=ep /usr/sbin/smbd\n\tcheckReturnCode\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tchown $VERBOSE -R samba:samba /var/log/samba\n\tchown $VERBOSE -R samba:samba /etc/samba\n\tchown $VERBOSE -R samba:samba /var/run/samba\n\tchown $VERBOSE -R samba:samba /var/cache/samba\n\tchown $VERBOSE samba:samba /usr/sbin/smbd /usr/sbin/nmbd\n\tchmod $VERBOSE u+s /usr/sbin/smbd /usr/sbin/nmbd\n\tsetcap cap_net_bind_service,cap_sys_resource,cap_dac_override=ep /usr/sbin/smbd\n",
                    "rendered": {
                      "text": "\tchown $VERBOSE -R samba:samba /var/log/samba\n\tchown $VERBOSE -R samba:samba /etc/samba\n\tchown $VERBOSE -R samba:samba /var/run/samba\n\tchown $VERBOSE -R samba:samba /var/cache/samba\n\tchown $VERBOSE samba:samba /usr/sbin/smbd /usr/sbin/nmbd\n\tchmod $VERBOSE u+s /usr/sbin/smbd /usr/sbin/nmbd\n\tsetcap cap_net_bind_service,cap_sys_resource,cap_dac_override=ep /usr/sbin/smbd\n",
                      "markdown": "`\tchown $VERBOSE -R samba:samba /var/log/samba\n\tchown $VERBOSE -R samba:samba /etc/samba\n\tchown $VERBOSE -R samba:samba /var/run/samba\n\tchown $VERBOSE -R samba:samba /var/cache/samba\n\tchown $VERBOSE samba:samba /usr/sbin/smbd /usr/sbin/nmbd\n\tchmod $VERBOSE u+s /usr/sbin/smbd /usr/sbin/nmbd\n\tsetcap cap_net_bind_service,cap_sys_resource,cap_dac_override=ep /usr/sbin/smbd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 157,
                  "endLine": 157,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tfi\n\tchown $VERBOSE -R samba:samba /var/log/samba\n\tchown $VERBOSE -R samba:samba /etc/samba\n\tchown $VERBOSE -R samba:samba /var/run/samba\n\tchown $VERBOSE -R samba:samba /var/cache/samba\n\tchown $VERBOSE samba:samba /usr/sbin/smbd /usr/sbin/nmbd\n\tchmod $VERBOSE u+s /usr/sbin/smbd /usr/sbin/nmbd\n",
                    "rendered": {
                      "text": "\tfi\n\tchown $VERBOSE -R samba:samba /var/log/samba\n\tchown $VERBOSE -R samba:samba /etc/samba\n\tchown $VERBOSE -R samba:samba /var/run/samba\n\tchown $VERBOSE -R samba:samba /var/cache/samba\n\tchown $VERBOSE samba:samba /usr/sbin/smbd /usr/sbin/nmbd\n\tchmod $VERBOSE u+s /usr/sbin/smbd /usr/sbin/nmbd\n",
                      "markdown": "`\tfi\n\tchown $VERBOSE -R samba:samba /var/log/samba\n\tchown $VERBOSE -R samba:samba /etc/samba\n\tchown $VERBOSE -R samba:samba /var/run/samba\n\tchown $VERBOSE -R samba:samba /var/cache/samba\n\tchown $VERBOSE samba:samba /usr/sbin/smbd /usr/sbin/nmbd\n\tchmod $VERBOSE u+s /usr/sbin/smbd /usr/sbin/nmbd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 156,
                  "endLine": 156,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\tuseradd -g samba -d / -u 610 samba\n\tfi\n\tchown $VERBOSE -R samba:samba /var/log/samba\n\tchown $VERBOSE -R samba:samba /etc/samba\n\tchown $VERBOSE -R samba:samba /var/run/samba\n\tchown $VERBOSE -R samba:samba /var/cache/samba\n\tchown $VERBOSE samba:samba /usr/sbin/smbd /usr/sbin/nmbd\n",
                    "rendered": {
                      "text": "\t\tuseradd -g samba -d / -u 610 samba\n\tfi\n\tchown $VERBOSE -R samba:samba /var/log/samba\n\tchown $VERBOSE -R samba:samba /etc/samba\n\tchown $VERBOSE -R samba:samba /var/run/samba\n\tchown $VERBOSE -R samba:samba /var/cache/samba\n\tchown $VERBOSE samba:samba /usr/sbin/smbd /usr/sbin/nmbd\n",
                      "markdown": "`\t\tuseradd -g samba -d / -u 610 samba\n\tfi\n\tchown $VERBOSE -R samba:samba /var/log/samba\n\tchown $VERBOSE -R samba:samba /etc/samba\n\tchown $VERBOSE -R samba:samba /var/run/samba\n\tchown $VERBOSE -R samba:samba /var/cache/samba\n\tchown $VERBOSE samba:samba /usr/sbin/smbd /usr/sbin/nmbd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 155,
                  "endLine": 155,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tif [ \"$( id -u samba 2>/dev/null )\" == \"\" ]; then\n\t\tuseradd -g samba -d / -u 610 samba\n\tfi\n\tchown $VERBOSE -R samba:samba /var/log/samba\n\tchown $VERBOSE -R samba:samba /etc/samba\n\tchown $VERBOSE -R samba:samba /var/run/samba\n\tchown $VERBOSE -R samba:samba /var/cache/samba\n",
                    "rendered": {
                      "text": "\tif [ \"$( id -u samba 2>/dev/null )\" == \"\" ]; then\n\t\tuseradd -g samba -d / -u 610 samba\n\tfi\n\tchown $VERBOSE -R samba:samba /var/log/samba\n\tchown $VERBOSE -R samba:samba /etc/samba\n\tchown $VERBOSE -R samba:samba /var/run/samba\n\tchown $VERBOSE -R samba:samba /var/cache/samba\n",
                      "markdown": "`\tif [ \"$( id -u samba 2>/dev/null )\" == \"\" ]; then\n\t\tuseradd -g samba -d / -u 610 samba\n\tfi\n\tchown $VERBOSE -R samba:samba /var/log/samba\n\tchown $VERBOSE -R samba:samba /etc/samba\n\tchown $VERBOSE -R samba:samba /var/run/samba\n\tchown $VERBOSE -R samba:samba /var/cache/samba\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 138,
                  "endLine": 138,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tchmod $VERBOSE u-s /usr/sbin/httpd\n\tsetcap -r /usr/sbin/httpd\n\tcheckReturnCode\n\tsed -i -e \"{s|^\\(User\\).*|\\1 nobody|; s|^\\(Group\\).*|\\1 nogroup|}\" /etc/httpd/httpd.conf\n\tuserdel apache\n\tgroupdel apache\n}\n",
                    "rendered": {
                      "text": "\tchmod $VERBOSE u-s /usr/sbin/httpd\n\tsetcap -r /usr/sbin/httpd\n\tcheckReturnCode\n\tsed -i -e \"{s|^\\(User\\).*|\\1 nobody|; s|^\\(Group\\).*|\\1 nogroup|}\" /etc/httpd/httpd.conf\n\tuserdel apache\n\tgroupdel apache\n}\n",
                      "markdown": "`\tchmod $VERBOSE u-s /usr/sbin/httpd\n\tsetcap -r /usr/sbin/httpd\n\tcheckReturnCode\n\tsed -i -e \"{s|^\\(User\\).*|\\1 nobody|; s|^\\(Group\\).*|\\1 nogroup|}\" /etc/httpd/httpd.conf\n\tuserdel apache\n\tgroupdel apache\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 135,
                  "endLine": 135,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tchown $VERBOSE -R root:root /etc/httpd/\n\tchown $VERBOSE -R root:root /var/log/httpd/\n\tchown $VERBOSE root:root /usr/sbin/httpd\n\tchmod $VERBOSE u-s /usr/sbin/httpd\n\tsetcap -r /usr/sbin/httpd\n\tcheckReturnCode\n\tsed -i -e \"{s|^\\(User\\).*|\\1 nobody|; s|^\\(Group\\).*|\\1 nogroup|}\" /etc/httpd/httpd.conf\n",
                    "rendered": {
                      "text": "\tchown $VERBOSE -R root:root /etc/httpd/\n\tchown $VERBOSE -R root:root /var/log/httpd/\n\tchown $VERBOSE root:root /usr/sbin/httpd\n\tchmod $VERBOSE u-s /usr/sbin/httpd\n\tsetcap -r /usr/sbin/httpd\n\tcheckReturnCode\n\tsed -i -e \"{s|^\\(User\\).*|\\1 nobody|; s|^\\(Group\\).*|\\1 nogroup|}\" /etc/httpd/httpd.conf\n",
                      "markdown": "`\tchown $VERBOSE -R root:root /etc/httpd/\n\tchown $VERBOSE -R root:root /var/log/httpd/\n\tchown $VERBOSE root:root /usr/sbin/httpd\n\tchmod $VERBOSE u-s /usr/sbin/httpd\n\tsetcap -r /usr/sbin/httpd\n\tcheckReturnCode\n\tsed -i -e \"{s|^\\(User\\).*|\\1 nobody|; s|^\\(Group\\).*|\\1 nogroup|}\" /etc/httpd/httpd.conf\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 134,
                  "endLine": 134,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tchown $VERBOSE -R root:root /var/run/httpd/\n\tchown $VERBOSE -R root:root /etc/httpd/\n\tchown $VERBOSE -R root:root /var/log/httpd/\n\tchown $VERBOSE root:root /usr/sbin/httpd\n\tchmod $VERBOSE u-s /usr/sbin/httpd\n\tsetcap -r /usr/sbin/httpd\n\tcheckReturnCode\n",
                    "rendered": {
                      "text": "\tchown $VERBOSE -R root:root /var/run/httpd/\n\tchown $VERBOSE -R root:root /etc/httpd/\n\tchown $VERBOSE -R root:root /var/log/httpd/\n\tchown $VERBOSE root:root /usr/sbin/httpd\n\tchmod $VERBOSE u-s /usr/sbin/httpd\n\tsetcap -r /usr/sbin/httpd\n\tcheckReturnCode\n",
                      "markdown": "`\tchown $VERBOSE -R root:root /var/run/httpd/\n\tchown $VERBOSE -R root:root /etc/httpd/\n\tchown $VERBOSE -R root:root /var/log/httpd/\n\tchown $VERBOSE root:root /usr/sbin/httpd\n\tchmod $VERBOSE u-s /usr/sbin/httpd\n\tsetcap -r /usr/sbin/httpd\n\tcheckReturnCode\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 133,
                  "endLine": 133,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tmessage \"reverting apache2\"\n\tchown $VERBOSE -R root:root /var/run/httpd/\n\tchown $VERBOSE -R root:root /etc/httpd/\n\tchown $VERBOSE -R root:root /var/log/httpd/\n\tchown $VERBOSE root:root /usr/sbin/httpd\n\tchmod $VERBOSE u-s /usr/sbin/httpd\n\tsetcap -r /usr/sbin/httpd\n",
                    "rendered": {
                      "text": "\tmessage \"reverting apache2\"\n\tchown $VERBOSE -R root:root /var/run/httpd/\n\tchown $VERBOSE -R root:root /etc/httpd/\n\tchown $VERBOSE -R root:root /var/log/httpd/\n\tchown $VERBOSE root:root /usr/sbin/httpd\n\tchmod $VERBOSE u-s /usr/sbin/httpd\n\tsetcap -r /usr/sbin/httpd\n",
                      "markdown": "`\tmessage \"reverting apache2\"\n\tchown $VERBOSE -R root:root /var/run/httpd/\n\tchown $VERBOSE -R root:root /etc/httpd/\n\tchown $VERBOSE -R root:root /var/log/httpd/\n\tchown $VERBOSE root:root /usr/sbin/httpd\n\tchmod $VERBOSE u-s /usr/sbin/httpd\n\tsetcap -r /usr/sbin/httpd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 132,
                  "endLine": 132,
                  "endColumn": 7,
                  "snippet": {
                    "text": "apache2_revert(){\n\tmessage \"reverting apache2\"\n\tchown $VERBOSE -R root:root /var/run/httpd/\n\tchown $VERBOSE -R root:root /etc/httpd/\n\tchown $VERBOSE -R root:root /var/log/httpd/\n\tchown $VERBOSE root:root /usr/sbin/httpd\n\tchmod $VERBOSE u-s /usr/sbin/httpd\n",
                    "rendered": {
                      "text": "apache2_revert(){\n\tmessage \"reverting apache2\"\n\tchown $VERBOSE -R root:root /var/run/httpd/\n\tchown $VERBOSE -R root:root /etc/httpd/\n\tchown $VERBOSE -R root:root /var/log/httpd/\n\tchown $VERBOSE root:root /usr/sbin/httpd\n\tchmod $VERBOSE u-s /usr/sbin/httpd\n",
                      "markdown": "`apache2_revert(){\n\tmessage \"reverting apache2\"\n\tchown $VERBOSE -R root:root /var/run/httpd/\n\tchown $VERBOSE -R root:root /etc/httpd/\n\tchown $VERBOSE -R root:root /var/log/httpd/\n\tchown $VERBOSE root:root /usr/sbin/httpd\n\tchmod $VERBOSE u-s /usr/sbin/httpd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 131,
                  "endLine": 131,
                  "endColumn": 7,
                  "snippet": {
                    "text": "}\napache2_revert(){\n\tmessage \"reverting apache2\"\n\tchown $VERBOSE -R root:root /var/run/httpd/\n\tchown $VERBOSE -R root:root /etc/httpd/\n\tchown $VERBOSE -R root:root /var/log/httpd/\n\tchown $VERBOSE root:root /usr/sbin/httpd\n",
                    "rendered": {
                      "text": "}\napache2_revert(){\n\tmessage \"reverting apache2\"\n\tchown $VERBOSE -R root:root /var/run/httpd/\n\tchown $VERBOSE -R root:root /etc/httpd/\n\tchown $VERBOSE -R root:root /var/log/httpd/\n\tchown $VERBOSE root:root /usr/sbin/httpd\n",
                      "markdown": "`}\napache2_revert(){\n\tmessage \"reverting apache2\"\n\tchown $VERBOSE -R root:root /var/run/httpd/\n\tchown $VERBOSE -R root:root /etc/httpd/\n\tchown $VERBOSE -R root:root /var/log/httpd/\n\tchown $VERBOSE root:root /usr/sbin/httpd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 124,
                  "endLine": 124,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tchown $VERBOSE -R apache:apache /etc/httpd/\n\tchown $VERBOSE -R apache:apache /var/log/httpd/\n\tchown $VERBOSE apache:apache /usr/sbin/httpd\n\tchmod $VERBOSE u+s /usr/sbin/httpd\n\t#setfcaps -c cap_net_bind_service=p -e /usr/sbin/httpd\n\tsetcap cap_net_bind_service=ep /usr/sbin/httpd\n\tcheckReturnCode\n",
                    "rendered": {
                      "text": "\tchown $VERBOSE -R apache:apache /etc/httpd/\n\tchown $VERBOSE -R apache:apache /var/log/httpd/\n\tchown $VERBOSE apache:apache /usr/sbin/httpd\n\tchmod $VERBOSE u+s /usr/sbin/httpd\n\t#setfcaps -c cap_net_bind_service=p -e /usr/sbin/httpd\n\tsetcap cap_net_bind_service=ep /usr/sbin/httpd\n\tcheckReturnCode\n",
                      "markdown": "`\tchown $VERBOSE -R apache:apache /etc/httpd/\n\tchown $VERBOSE -R apache:apache /var/log/httpd/\n\tchown $VERBOSE apache:apache /usr/sbin/httpd\n\tchmod $VERBOSE u+s /usr/sbin/httpd\n\t#setfcaps -c cap_net_bind_service=p -e /usr/sbin/httpd\n\tsetcap cap_net_bind_service=ep /usr/sbin/httpd\n\tcheckReturnCode\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 123,
                  "endLine": 123,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tchown $VERBOSE -R apache:apache /var/run/httpd/\n\tchown $VERBOSE -R apache:apache /etc/httpd/\n\tchown $VERBOSE -R apache:apache /var/log/httpd/\n\tchown $VERBOSE apache:apache /usr/sbin/httpd\n\tchmod $VERBOSE u+s /usr/sbin/httpd\n\t#setfcaps -c cap_net_bind_service=p -e /usr/sbin/httpd\n\tsetcap cap_net_bind_service=ep /usr/sbin/httpd\n",
                    "rendered": {
                      "text": "\tchown $VERBOSE -R apache:apache /var/run/httpd/\n\tchown $VERBOSE -R apache:apache /etc/httpd/\n\tchown $VERBOSE -R apache:apache /var/log/httpd/\n\tchown $VERBOSE apache:apache /usr/sbin/httpd\n\tchmod $VERBOSE u+s /usr/sbin/httpd\n\t#setfcaps -c cap_net_bind_service=p -e /usr/sbin/httpd\n\tsetcap cap_net_bind_service=ep /usr/sbin/httpd\n",
                      "markdown": "`\tchown $VERBOSE -R apache:apache /var/run/httpd/\n\tchown $VERBOSE -R apache:apache /etc/httpd/\n\tchown $VERBOSE -R apache:apache /var/log/httpd/\n\tchown $VERBOSE apache:apache /usr/sbin/httpd\n\tchmod $VERBOSE u+s /usr/sbin/httpd\n\t#setfcaps -c cap_net_bind_service=p -e /usr/sbin/httpd\n\tsetcap cap_net_bind_service=ep /usr/sbin/httpd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 122,
                  "endLine": 122,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tsed -i -e \"{s|^\\(User\\).*|\\1 apache|; s|^\\(Group\\) .*|\\1 apache|}\" /etc/httpd/httpd.conf\n\tchown $VERBOSE -R apache:apache /var/run/httpd/\n\tchown $VERBOSE -R apache:apache /etc/httpd/\n\tchown $VERBOSE -R apache:apache /var/log/httpd/\n\tchown $VERBOSE apache:apache /usr/sbin/httpd\n\tchmod $VERBOSE u+s /usr/sbin/httpd\n\t#setfcaps -c cap_net_bind_service=p -e /usr/sbin/httpd\n",
                    "rendered": {
                      "text": "\tsed -i -e \"{s|^\\(User\\).*|\\1 apache|; s|^\\(Group\\) .*|\\1 apache|}\" /etc/httpd/httpd.conf\n\tchown $VERBOSE -R apache:apache /var/run/httpd/\n\tchown $VERBOSE -R apache:apache /etc/httpd/\n\tchown $VERBOSE -R apache:apache /var/log/httpd/\n\tchown $VERBOSE apache:apache /usr/sbin/httpd\n\tchmod $VERBOSE u+s /usr/sbin/httpd\n\t#setfcaps -c cap_net_bind_service=p -e /usr/sbin/httpd\n",
                      "markdown": "`\tsed -i -e \"{s|^\\(User\\).*|\\1 apache|; s|^\\(Group\\) .*|\\1 apache|}\" /etc/httpd/httpd.conf\n\tchown $VERBOSE -R apache:apache /var/run/httpd/\n\tchown $VERBOSE -R apache:apache /etc/httpd/\n\tchown $VERBOSE -R apache:apache /var/log/httpd/\n\tchown $VERBOSE apache:apache /usr/sbin/httpd\n\tchmod $VERBOSE u+s /usr/sbin/httpd\n\t#setfcaps -c cap_net_bind_service=p -e /usr/sbin/httpd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 121,
                  "endLine": 121,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tfi\n\tsed -i -e \"{s|^\\(User\\).*|\\1 apache|; s|^\\(Group\\) .*|\\1 apache|}\" /etc/httpd/httpd.conf\n\tchown $VERBOSE -R apache:apache /var/run/httpd/\n\tchown $VERBOSE -R apache:apache /etc/httpd/\n\tchown $VERBOSE -R apache:apache /var/log/httpd/\n\tchown $VERBOSE apache:apache /usr/sbin/httpd\n\tchmod $VERBOSE u+s /usr/sbin/httpd\n",
                    "rendered": {
                      "text": "\tfi\n\tsed -i -e \"{s|^\\(User\\).*|\\1 apache|; s|^\\(Group\\) .*|\\1 apache|}\" /etc/httpd/httpd.conf\n\tchown $VERBOSE -R apache:apache /var/run/httpd/\n\tchown $VERBOSE -R apache:apache /etc/httpd/\n\tchown $VERBOSE -R apache:apache /var/log/httpd/\n\tchown $VERBOSE apache:apache /usr/sbin/httpd\n\tchmod $VERBOSE u+s /usr/sbin/httpd\n",
                      "markdown": "`\tfi\n\tsed -i -e \"{s|^\\(User\\).*|\\1 apache|; s|^\\(Group\\) .*|\\1 apache|}\" /etc/httpd/httpd.conf\n\tchown $VERBOSE -R apache:apache /var/run/httpd/\n\tchown $VERBOSE -R apache:apache /etc/httpd/\n\tchown $VERBOSE -R apache:apache /var/log/httpd/\n\tchown $VERBOSE apache:apache /usr/sbin/httpd\n\tchmod $VERBOSE u+s /usr/sbin/httpd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 120,
                  "endLine": 120,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\tuseradd -g apache -d / -u 600 apache\n\tfi\n\tsed -i -e \"{s|^\\(User\\).*|\\1 apache|; s|^\\(Group\\) .*|\\1 apache|}\" /etc/httpd/httpd.conf\n\tchown $VERBOSE -R apache:apache /var/run/httpd/\n\tchown $VERBOSE -R apache:apache /etc/httpd/\n\tchown $VERBOSE -R apache:apache /var/log/httpd/\n\tchown $VERBOSE apache:apache /usr/sbin/httpd\n",
                    "rendered": {
                      "text": "\t\tuseradd -g apache -d / -u 600 apache\n\tfi\n\tsed -i -e \"{s|^\\(User\\).*|\\1 apache|; s|^\\(Group\\) .*|\\1 apache|}\" /etc/httpd/httpd.conf\n\tchown $VERBOSE -R apache:apache /var/run/httpd/\n\tchown $VERBOSE -R apache:apache /etc/httpd/\n\tchown $VERBOSE -R apache:apache /var/log/httpd/\n\tchown $VERBOSE apache:apache /usr/sbin/httpd\n",
                      "markdown": "`\t\tuseradd -g apache -d / -u 600 apache\n\tfi\n\tsed -i -e \"{s|^\\(User\\).*|\\1 apache|; s|^\\(Group\\) .*|\\1 apache|}\" /etc/httpd/httpd.conf\n\tchown $VERBOSE -R apache:apache /var/run/httpd/\n\tchown $VERBOSE -R apache:apache /etc/httpd/\n\tchown $VERBOSE -R apache:apache /var/log/httpd/\n\tchown $VERBOSE apache:apache /usr/sbin/httpd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 119,
                  "endLine": 119,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tif [ \"$( id -u apache 2>/dev/null )\" == \"\" ]; then\n\t\tuseradd -g apache -d / -u 600 apache\n\tfi\n\tsed -i -e \"{s|^\\(User\\).*|\\1 apache|; s|^\\(Group\\) .*|\\1 apache|}\" /etc/httpd/httpd.conf\n\tchown $VERBOSE -R apache:apache /var/run/httpd/\n\tchown $VERBOSE -R apache:apache /etc/httpd/\n\tchown $VERBOSE -R apache:apache /var/log/httpd/\n",
                    "rendered": {
                      "text": "\tif [ \"$( id -u apache 2>/dev/null )\" == \"\" ]; then\n\t\tuseradd -g apache -d / -u 600 apache\n\tfi\n\tsed -i -e \"{s|^\\(User\\).*|\\1 apache|; s|^\\(Group\\) .*|\\1 apache|}\" /etc/httpd/httpd.conf\n\tchown $VERBOSE -R apache:apache /var/run/httpd/\n\tchown $VERBOSE -R apache:apache /etc/httpd/\n\tchown $VERBOSE -R apache:apache /var/log/httpd/\n",
                      "markdown": "`\tif [ \"$( id -u apache 2>/dev/null )\" == \"\" ]; then\n\t\tuseradd -g apache -d / -u 600 apache\n\tfi\n\tsed -i -e \"{s|^\\(User\\).*|\\1 apache|; s|^\\(Group\\) .*|\\1 apache|}\" /etc/httpd/httpd.conf\n\tchown $VERBOSE -R apache:apache /var/run/httpd/\n\tchown $VERBOSE -R apache:apache /etc/httpd/\n\tchown $VERBOSE -R apache:apache /var/log/httpd/\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 102,
                  "endLine": 102,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tchmod $VERBOSE u-s /usr/sbin/httpd\n\tsetcap -r /usr/sbin/httpd\n\tcheckReturnCode\n\tsed -i -e \"{s|^\\(User\\).*|\\1 nobody|; s|^\\(Group\\).*|\\1 nogroup|}\" /etc/apache/httpd.conf\n\tuserdel apache\n\tgroupdel apache\n}\n",
                    "rendered": {
                      "text": "\tchmod $VERBOSE u-s /usr/sbin/httpd\n\tsetcap -r /usr/sbin/httpd\n\tcheckReturnCode\n\tsed -i -e \"{s|^\\(User\\).*|\\1 nobody|; s|^\\(Group\\).*|\\1 nogroup|}\" /etc/apache/httpd.conf\n\tuserdel apache\n\tgroupdel apache\n}\n",
                      "markdown": "`\tchmod $VERBOSE u-s /usr/sbin/httpd\n\tsetcap -r /usr/sbin/httpd\n\tcheckReturnCode\n\tsed -i -e \"{s|^\\(User\\).*|\\1 nobody|; s|^\\(Group\\).*|\\1 nogroup|}\" /etc/apache/httpd.conf\n\tuserdel apache\n\tgroupdel apache\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 99,
                  "endLine": 99,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tchown $VERBOSE -R root:root /etc/apache/\n\tchown $VERBOSE -R root:root /var/log/apache/\n\tchown $VERBOSE root:root /usr/sbin/httpd\n\tchmod $VERBOSE u-s /usr/sbin/httpd\n\tsetcap -r /usr/sbin/httpd\n\tcheckReturnCode\n\tsed -i -e \"{s|^\\(User\\).*|\\1 nobody|; s|^\\(Group\\).*|\\1 nogroup|}\" /etc/apache/httpd.conf\n",
                    "rendered": {
                      "text": "\tchown $VERBOSE -R root:root /etc/apache/\n\tchown $VERBOSE -R root:root /var/log/apache/\n\tchown $VERBOSE root:root /usr/sbin/httpd\n\tchmod $VERBOSE u-s /usr/sbin/httpd\n\tsetcap -r /usr/sbin/httpd\n\tcheckReturnCode\n\tsed -i -e \"{s|^\\(User\\).*|\\1 nobody|; s|^\\(Group\\).*|\\1 nogroup|}\" /etc/apache/httpd.conf\n",
                      "markdown": "`\tchown $VERBOSE -R root:root /etc/apache/\n\tchown $VERBOSE -R root:root /var/log/apache/\n\tchown $VERBOSE root:root /usr/sbin/httpd\n\tchmod $VERBOSE u-s /usr/sbin/httpd\n\tsetcap -r /usr/sbin/httpd\n\tcheckReturnCode\n\tsed -i -e \"{s|^\\(User\\).*|\\1 nobody|; s|^\\(Group\\).*|\\1 nogroup|}\" /etc/apache/httpd.conf\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 98,
                  "endLine": 98,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tchown $VERBOSE -R root:root /var/run/apache/\n\tchown $VERBOSE -R root:root /etc/apache/\n\tchown $VERBOSE -R root:root /var/log/apache/\n\tchown $VERBOSE root:root /usr/sbin/httpd\n\tchmod $VERBOSE u-s /usr/sbin/httpd\n\tsetcap -r /usr/sbin/httpd\n\tcheckReturnCode\n",
                    "rendered": {
                      "text": "\tchown $VERBOSE -R root:root /var/run/apache/\n\tchown $VERBOSE -R root:root /etc/apache/\n\tchown $VERBOSE -R root:root /var/log/apache/\n\tchown $VERBOSE root:root /usr/sbin/httpd\n\tchmod $VERBOSE u-s /usr/sbin/httpd\n\tsetcap -r /usr/sbin/httpd\n\tcheckReturnCode\n",
                      "markdown": "`\tchown $VERBOSE -R root:root /var/run/apache/\n\tchown $VERBOSE -R root:root /etc/apache/\n\tchown $VERBOSE -R root:root /var/log/apache/\n\tchown $VERBOSE root:root /usr/sbin/httpd\n\tchmod $VERBOSE u-s /usr/sbin/httpd\n\tsetcap -r /usr/sbin/httpd\n\tcheckReturnCode\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 97,
                  "endLine": 97,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tmessage \"reverting apache1\"\n\tchown $VERBOSE -R root:root /var/run/apache/\n\tchown $VERBOSE -R root:root /etc/apache/\n\tchown $VERBOSE -R root:root /var/log/apache/\n\tchown $VERBOSE root:root /usr/sbin/httpd\n\tchmod $VERBOSE u-s /usr/sbin/httpd\n\tsetcap -r /usr/sbin/httpd\n",
                    "rendered": {
                      "text": "\tmessage \"reverting apache1\"\n\tchown $VERBOSE -R root:root /var/run/apache/\n\tchown $VERBOSE -R root:root /etc/apache/\n\tchown $VERBOSE -R root:root /var/log/apache/\n\tchown $VERBOSE root:root /usr/sbin/httpd\n\tchmod $VERBOSE u-s /usr/sbin/httpd\n\tsetcap -r /usr/sbin/httpd\n",
                      "markdown": "`\tmessage \"reverting apache1\"\n\tchown $VERBOSE -R root:root /var/run/apache/\n\tchown $VERBOSE -R root:root /etc/apache/\n\tchown $VERBOSE -R root:root /var/log/apache/\n\tchown $VERBOSE root:root /usr/sbin/httpd\n\tchmod $VERBOSE u-s /usr/sbin/httpd\n\tsetcap -r /usr/sbin/httpd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 96,
                  "endLine": 96,
                  "endColumn": 7,
                  "snippet": {
                    "text": "apache1_revert(){\n\tmessage \"reverting apache1\"\n\tchown $VERBOSE -R root:root /var/run/apache/\n\tchown $VERBOSE -R root:root /etc/apache/\n\tchown $VERBOSE -R root:root /var/log/apache/\n\tchown $VERBOSE root:root /usr/sbin/httpd\n\tchmod $VERBOSE u-s /usr/sbin/httpd\n",
                    "rendered": {
                      "text": "apache1_revert(){\n\tmessage \"reverting apache1\"\n\tchown $VERBOSE -R root:root /var/run/apache/\n\tchown $VERBOSE -R root:root /etc/apache/\n\tchown $VERBOSE -R root:root /var/log/apache/\n\tchown $VERBOSE root:root /usr/sbin/httpd\n\tchmod $VERBOSE u-s /usr/sbin/httpd\n",
                      "markdown": "`apache1_revert(){\n\tmessage \"reverting apache1\"\n\tchown $VERBOSE -R root:root /var/run/apache/\n\tchown $VERBOSE -R root:root /etc/apache/\n\tchown $VERBOSE -R root:root /var/log/apache/\n\tchown $VERBOSE root:root /usr/sbin/httpd\n\tchmod $VERBOSE u-s /usr/sbin/httpd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 95,
                  "endLine": 95,
                  "endColumn": 7,
                  "snippet": {
                    "text": "}\napache1_revert(){\n\tmessage \"reverting apache1\"\n\tchown $VERBOSE -R root:root /var/run/apache/\n\tchown $VERBOSE -R root:root /etc/apache/\n\tchown $VERBOSE -R root:root /var/log/apache/\n\tchown $VERBOSE root:root /usr/sbin/httpd\n",
                    "rendered": {
                      "text": "}\napache1_revert(){\n\tmessage \"reverting apache1\"\n\tchown $VERBOSE -R root:root /var/run/apache/\n\tchown $VERBOSE -R root:root /etc/apache/\n\tchown $VERBOSE -R root:root /var/log/apache/\n\tchown $VERBOSE root:root /usr/sbin/httpd\n",
                      "markdown": "`}\napache1_revert(){\n\tmessage \"reverting apache1\"\n\tchown $VERBOSE -R root:root /var/run/apache/\n\tchown $VERBOSE -R root:root /etc/apache/\n\tchown $VERBOSE -R root:root /var/log/apache/\n\tchown $VERBOSE root:root /usr/sbin/httpd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 89,
                  "endLine": 89,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tchown $VERBOSE -R apache:apache /etc/apache/\n\tchown $VERBOSE -R apache:apache /var/log/apache/\n\tchown $VERBOSE apache:apache /usr/sbin/httpd\n\tchmod $VERBOSE u+s /usr/sbin/httpd\n\tsetcap cap_net_bind_service=ep /usr/sbin/httpd\n\tcheckReturnCode\n}\n",
                    "rendered": {
                      "text": "\tchown $VERBOSE -R apache:apache /etc/apache/\n\tchown $VERBOSE -R apache:apache /var/log/apache/\n\tchown $VERBOSE apache:apache /usr/sbin/httpd\n\tchmod $VERBOSE u+s /usr/sbin/httpd\n\tsetcap cap_net_bind_service=ep /usr/sbin/httpd\n\tcheckReturnCode\n}\n",
                      "markdown": "`\tchown $VERBOSE -R apache:apache /etc/apache/\n\tchown $VERBOSE -R apache:apache /var/log/apache/\n\tchown $VERBOSE apache:apache /usr/sbin/httpd\n\tchmod $VERBOSE u+s /usr/sbin/httpd\n\tsetcap cap_net_bind_service=ep /usr/sbin/httpd\n\tcheckReturnCode\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 88,
                  "endLine": 88,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tchown $VERBOSE -R apache:apache /var/run/apache/\n\tchown $VERBOSE -R apache:apache /etc/apache/\n\tchown $VERBOSE -R apache:apache /var/log/apache/\n\tchown $VERBOSE apache:apache /usr/sbin/httpd\n\tchmod $VERBOSE u+s /usr/sbin/httpd\n\tsetcap cap_net_bind_service=ep /usr/sbin/httpd\n\tcheckReturnCode\n",
                    "rendered": {
                      "text": "\tchown $VERBOSE -R apache:apache /var/run/apache/\n\tchown $VERBOSE -R apache:apache /etc/apache/\n\tchown $VERBOSE -R apache:apache /var/log/apache/\n\tchown $VERBOSE apache:apache /usr/sbin/httpd\n\tchmod $VERBOSE u+s /usr/sbin/httpd\n\tsetcap cap_net_bind_service=ep /usr/sbin/httpd\n\tcheckReturnCode\n",
                      "markdown": "`\tchown $VERBOSE -R apache:apache /var/run/apache/\n\tchown $VERBOSE -R apache:apache /etc/apache/\n\tchown $VERBOSE -R apache:apache /var/log/apache/\n\tchown $VERBOSE apache:apache /usr/sbin/httpd\n\tchmod $VERBOSE u+s /usr/sbin/httpd\n\tsetcap cap_net_bind_service=ep /usr/sbin/httpd\n\tcheckReturnCode\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 87,
                  "endLine": 87,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tsed -i -e \"{s|^\\(User\\).*|\\1 apache|; s|^\\(Group\\) .*|\\1 apache|}\" /etc/apache/httpd.conf\n\tchown $VERBOSE -R apache:apache /var/run/apache/\n\tchown $VERBOSE -R apache:apache /etc/apache/\n\tchown $VERBOSE -R apache:apache /var/log/apache/\n\tchown $VERBOSE apache:apache /usr/sbin/httpd\n\tchmod $VERBOSE u+s /usr/sbin/httpd\n\tsetcap cap_net_bind_service=ep /usr/sbin/httpd\n",
                    "rendered": {
                      "text": "\tsed -i -e \"{s|^\\(User\\).*|\\1 apache|; s|^\\(Group\\) .*|\\1 apache|}\" /etc/apache/httpd.conf\n\tchown $VERBOSE -R apache:apache /var/run/apache/\n\tchown $VERBOSE -R apache:apache /etc/apache/\n\tchown $VERBOSE -R apache:apache /var/log/apache/\n\tchown $VERBOSE apache:apache /usr/sbin/httpd\n\tchmod $VERBOSE u+s /usr/sbin/httpd\n\tsetcap cap_net_bind_service=ep /usr/sbin/httpd\n",
                      "markdown": "`\tsed -i -e \"{s|^\\(User\\).*|\\1 apache|; s|^\\(Group\\) .*|\\1 apache|}\" /etc/apache/httpd.conf\n\tchown $VERBOSE -R apache:apache /var/run/apache/\n\tchown $VERBOSE -R apache:apache /etc/apache/\n\tchown $VERBOSE -R apache:apache /var/log/apache/\n\tchown $VERBOSE apache:apache /usr/sbin/httpd\n\tchmod $VERBOSE u+s /usr/sbin/httpd\n\tsetcap cap_net_bind_service=ep /usr/sbin/httpd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 86,
                  "endLine": 86,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tfi\n\tsed -i -e \"{s|^\\(User\\).*|\\1 apache|; s|^\\(Group\\) .*|\\1 apache|}\" /etc/apache/httpd.conf\n\tchown $VERBOSE -R apache:apache /var/run/apache/\n\tchown $VERBOSE -R apache:apache /etc/apache/\n\tchown $VERBOSE -R apache:apache /var/log/apache/\n\tchown $VERBOSE apache:apache /usr/sbin/httpd\n\tchmod $VERBOSE u+s /usr/sbin/httpd\n",
                    "rendered": {
                      "text": "\tfi\n\tsed -i -e \"{s|^\\(User\\).*|\\1 apache|; s|^\\(Group\\) .*|\\1 apache|}\" /etc/apache/httpd.conf\n\tchown $VERBOSE -R apache:apache /var/run/apache/\n\tchown $VERBOSE -R apache:apache /etc/apache/\n\tchown $VERBOSE -R apache:apache /var/log/apache/\n\tchown $VERBOSE apache:apache /usr/sbin/httpd\n\tchmod $VERBOSE u+s /usr/sbin/httpd\n",
                      "markdown": "`\tfi\n\tsed -i -e \"{s|^\\(User\\).*|\\1 apache|; s|^\\(Group\\) .*|\\1 apache|}\" /etc/apache/httpd.conf\n\tchown $VERBOSE -R apache:apache /var/run/apache/\n\tchown $VERBOSE -R apache:apache /etc/apache/\n\tchown $VERBOSE -R apache:apache /var/log/apache/\n\tchown $VERBOSE apache:apache /usr/sbin/httpd\n\tchmod $VERBOSE u+s /usr/sbin/httpd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 85,
                  "endLine": 85,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\tuseradd -g apache -d / -u 600 apache\n\tfi\n\tsed -i -e \"{s|^\\(User\\).*|\\1 apache|; s|^\\(Group\\) .*|\\1 apache|}\" /etc/apache/httpd.conf\n\tchown $VERBOSE -R apache:apache /var/run/apache/\n\tchown $VERBOSE -R apache:apache /etc/apache/\n\tchown $VERBOSE -R apache:apache /var/log/apache/\n\tchown $VERBOSE apache:apache /usr/sbin/httpd\n",
                    "rendered": {
                      "text": "\t\tuseradd -g apache -d / -u 600 apache\n\tfi\n\tsed -i -e \"{s|^\\(User\\).*|\\1 apache|; s|^\\(Group\\) .*|\\1 apache|}\" /etc/apache/httpd.conf\n\tchown $VERBOSE -R apache:apache /var/run/apache/\n\tchown $VERBOSE -R apache:apache /etc/apache/\n\tchown $VERBOSE -R apache:apache /var/log/apache/\n\tchown $VERBOSE apache:apache /usr/sbin/httpd\n",
                      "markdown": "`\t\tuseradd -g apache -d / -u 600 apache\n\tfi\n\tsed -i -e \"{s|^\\(User\\).*|\\1 apache|; s|^\\(Group\\) .*|\\1 apache|}\" /etc/apache/httpd.conf\n\tchown $VERBOSE -R apache:apache /var/run/apache/\n\tchown $VERBOSE -R apache:apache /etc/apache/\n\tchown $VERBOSE -R apache:apache /var/log/apache/\n\tchown $VERBOSE apache:apache /usr/sbin/httpd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 84,
                  "endLine": 84,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tif [ \"$( id -u apache 2>/dev/null )\" == \"\" ]; then\n\t\tuseradd -g apache -d / -u 600 apache\n\tfi\n\tsed -i -e \"{s|^\\(User\\).*|\\1 apache|; s|^\\(Group\\) .*|\\1 apache|}\" /etc/apache/httpd.conf\n\tchown $VERBOSE -R apache:apache /var/run/apache/\n\tchown $VERBOSE -R apache:apache /etc/apache/\n\tchown $VERBOSE -R apache:apache /var/log/apache/\n",
                    "rendered": {
                      "text": "\tif [ \"$( id -u apache 2>/dev/null )\" == \"\" ]; then\n\t\tuseradd -g apache -d / -u 600 apache\n\tfi\n\tsed -i -e \"{s|^\\(User\\).*|\\1 apache|; s|^\\(Group\\) .*|\\1 apache|}\" /etc/apache/httpd.conf\n\tchown $VERBOSE -R apache:apache /var/run/apache/\n\tchown $VERBOSE -R apache:apache /etc/apache/\n\tchown $VERBOSE -R apache:apache /var/log/apache/\n",
                      "markdown": "`\tif [ \"$( id -u apache 2>/dev/null )\" == \"\" ]; then\n\t\tuseradd -g apache -d / -u 600 apache\n\tfi\n\tsed -i -e \"{s|^\\(User\\).*|\\1 apache|; s|^\\(Group\\) .*|\\1 apache|}\" /etc/apache/httpd.conf\n\tchown $VERBOSE -R apache:apache /var/run/apache/\n\tchown $VERBOSE -R apache:apache /etc/apache/\n\tchown $VERBOSE -R apache:apache /var/log/apache/\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 16,
                  "endLine": 45,
                  "endColumn": 21,
                  "snippet": {
                    "text": "}\n\nprintGreenMessage(){\n\t# print message red and turn back to white\n\techo -e \"\\033[00;32m $1 ...\\033[00;00m\\n\"\n\tsleep 0.5\n}\n",
                    "rendered": {
                      "text": "}\n\nprintGreenMessage(){\n\t# print message red and turn back to white\n\techo -e \"\\033[00;32m $1 ...\\033[00;00m\\n\"\n\tsleep 0.5\n}\n",
                      "markdown": "`}\n\nprintGreenMessage(){\n\t# print message red and turn back to white\n\techo -e \"\\033[00;32m $1 ...\\033[00;00m\\n\"\n\tsleep 0.5\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/pcaps4server"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 16,
                  "endLine": 40,
                  "endColumn": 21,
                  "snippet": {
                    "text": "}\n\nprintRedMessage(){\n\t# print message red and turn back to white\n\techo -e \"\\n\\033[00;31m $1 ...\\033[00;00m\\n\"\n}\n\n",
                    "rendered": {
                      "text": "}\n\nprintRedMessage(){\n\t# print message red and turn back to white\n\techo -e \"\\n\\033[00;31m $1 ...\\033[00;00m\\n\"\n}\n\n",
                      "markdown": "`}\n\nprintRedMessage(){\n\t# print message red and turn back to white\n\techo -e \"\\n\\033[00;31m $1 ...\\033[00;00m\\n\"\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/distcheck.sh"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 146,
                  "endLine": 3,
                  "endColumn": 152,
                  "snippet": {
                    "text": "#!/bin/bash\n\nactual=$(wget -o/dev/null -O/dev/stdout https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/plain/include/uapi/linux/capability.h | grep \"#define.CAP_LAST_CAP\"|awk '{print $3}')\nworking=$(grep \"#define.CAP_LAST_CAP\" libcap/include/uapi/linux/capability.h|awk '{print $3}')\n\nif [[ ${actual} = ${working} ]]; then\n",
                    "rendered": {
                      "text": "#!/bin/bash\n\nactual=$(wget -o/dev/null -O/dev/stdout https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/plain/include/uapi/linux/capability.h | grep \"#define.CAP_LAST_CAP\"|awk '{print $3}')\nworking=$(grep \"#define.CAP_LAST_CAP\" libcap/include/uapi/linux/capability.h|awk '{print $3}')\n\nif [[ ${actual} = ${working} ]]; then\n",
                      "markdown": "`#!/bin/bash\n\nactual=$(wget -o/dev/null -O/dev/stdout https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/plain/include/uapi/linux/capability.h | grep \"#define.CAP_LAST_CAP\"|awk '{print $3}')\nworking=$(grep \"#define.CAP_LAST_CAP\" libcap/include/uapi/linux/capability.h|awk '{print $3}')\n\nif [[ ${actual} = ${working} ]]; then\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/launch.go"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 45,
                  "endLine": 47,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\n// NewLauncher returns a new launcher for the specified program path\n// and args with the specified environment.\nfunc NewLauncher(path string, args []string, env []string) *Launcher {\n\treturn &Launcher{\n\t\tpath: path,\n\t\targs: args,\n",
                    "rendered": {
                      "text": "\n// NewLauncher returns a new launcher for the specified program path\n// and args with the specified environment.\nfunc NewLauncher(path string, args []string, env []string) *Launcher {\n\treturn &Launcher{\n\t\tpath: path,\n\t\targs: args,\n",
                      "markdown": "`\n// NewLauncher returns a new launcher for the specified program path\n// and args with the specified environment.\nfunc NewLauncher(path string, args []string, env []string) *Launcher {\n\treturn &Launcher{\n\t\tpath: path,\n\t\targs: args,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/launch.go"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 44,
                  "endLine": 47,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\n// NewLauncher returns a new launcher for the specified program path\n// and args with the specified environment.\nfunc NewLauncher(path string, args []string, env []string) *Launcher {\n\treturn &Launcher{\n\t\tpath: path,\n\t\targs: args,\n",
                    "rendered": {
                      "text": "\n// NewLauncher returns a new launcher for the specified program path\n// and args with the specified environment.\nfunc NewLauncher(path string, args []string, env []string) *Launcher {\n\treturn &Launcher{\n\t\tpath: path,\n\t\targs: args,\n",
                      "markdown": "`\n// NewLauncher returns a new launcher for the specified program path\n// and args with the specified environment.\nfunc NewLauncher(path string, args []string, env []string) *Launcher {\n\treturn &Launcher{\n\t\tpath: path,\n\t\targs: args,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/launch.go"
                },
                "region": {
                  "startLine": 25,
                  "endLine": 25,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t// both be empty. In such cases .Launch() will error out.\n\tpath string\n\targs []string\n\tenv  []string\n\n\tcallbackFn func(pa *syscall.ProcAttr, data interface{}) error\n\n",
                    "rendered": {
                      "text": "\t// both be empty. In such cases .Launch() will error out.\n\tpath string\n\targs []string\n\tenv  []string\n\n\tcallbackFn func(pa *syscall.ProcAttr, data interface{}) error\n\n",
                      "markdown": "`\t// both be empty. In such cases .Launch() will error out.\n\tpath string\n\targs []string\n\tenv  []string\n\n\tcallbackFn func(pa *syscall.ProcAttr, data interface{}) error\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/License"
                },
                "region": {
                  "startLine": 389,
                  "startColumn": 35,
                  "endLine": 389,
                  "endColumn": 39,
                  "snippet": {
                    "text": "necessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n",
                    "rendered": {
                      "text": "necessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n",
                      "markdown": "`necessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/License"
                },
                "region": {
                  "startLine": 349,
                  "startColumn": 59,
                  "endLine": 349,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n",
                    "rendered": {
                      "text": "\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n",
                      "markdown": "`\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/License"
                },
                "region": {
                  "startLine": 263,
                  "startColumn": 30,
                  "endLine": 263,
                  "endColumn": 34,
                  "snippet": {
                    "text": "excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n",
                    "rendered": {
                      "text": "excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n",
                      "markdown": "`excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/License"
                },
                "region": {
                  "startLine": 217,
                  "startColumn": 63,
                  "endLine": 218,
                  "endColumn": 8,
                  "snippet": {
                    "text": "The source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\n",
                    "rendered": {
                      "text": "The source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\n",
                      "markdown": "`The source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/License"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 51,
                  "endLine": 201,
                  "endColumn": 55,
                  "snippet": {
                    "text": "    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n",
                    "rendered": {
                      "text": "    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n",
                      "markdown": "`    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/License"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 21,
                  "endLine": 185,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\n",
                    "rendered": {
                      "text": "\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\n",
                      "markdown": "`\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/License"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 43,
                  "endLine": 159,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n",
                    "rendered": {
                      "text": "\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n",
                      "markdown": "`\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/License"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 7,
                  "endLine": 147,
                  "endColumn": 11,
                  "snippet": {
                    "text": "along with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\n",
                    "rendered": {
                      "text": "along with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\n",
                      "markdown": "`along with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/License"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 63,
                  "endLine": 113,
                  "endColumn": 67,
                  "snippet": {
                    "text": "patents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n",
                    "rendered": {
                      "text": "patents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n",
                      "markdown": "`patents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/License"
                },
                "region": {
                  "startLine": 309,
                  "startColumn": 12,
                  "endLine": 309,
                  "endColumn": 18,
                  "snippet": {
                    "text": "this License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\n",
                    "rendered": {
                      "text": "this License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\n",
                      "markdown": "`this License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/License"
                },
                "region": {
                  "startLine": 297,
                  "startColumn": 34,
                  "endLine": 297,
                  "endColumn": 40,
                  "snippet": {
                    "text": "the limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n",
                    "rendered": {
                      "text": "the limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n",
                      "markdown": "`the limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/License"
                },
                "region": {
                  "startLine": 248,
                  "startColumn": 9,
                  "endLine": 248,
                  "endColumn": 15,
                  "snippet": {
                    "text": "all its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\n",
                    "rendered": {
                      "text": "all its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\n",
                      "markdown": "`all its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/License"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 12,
                  "endLine": 110,
                  "endColumn": 18,
                  "snippet": {
                    "text": "authors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n",
                    "rendered": {
                      "text": "authors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n",
                      "markdown": "`authors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/cap/License"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 4,
                  "endLine": 83,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n",
                    "rendered": {
                      "text": "  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n",
                      "markdown": "`  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/go/compare-cap.go"
                },
                "region": {
                  "startLine": 263,
                  "startColumn": 3,
                  "endLine": 263,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n\t// Validate that it can be imported in binary in C\n\tiC := C.cap_copy_int_check(unsafe.Pointer(&iE[0]), C.ssize_t(len(iE)))\n\tif iC == nil {\n\t\tlog.Fatal(\"c failed to import go binary\")\n\t}\n\tdefer C.cap_free(unsafe.Pointer(iC))\n",
                    "rendered": {
                      "text": "\n\t// Validate that it can be imported in binary in C\n\tiC := C.cap_copy_int_check(unsafe.Pointer(&iE[0]), C.ssize_t(len(iE)))\n\tif iC == nil {\n\t\tlog.Fatal(\"c failed to import go binary\")\n\t}\n\tdefer C.cap_free(unsafe.Pointer(iC))\n",
                      "markdown": "`\n\t// Validate that it can be imported in binary in C\n\tiC := C.cap_copy_int_check(unsafe.Pointer(&iE[0]), C.ssize_t(len(iE)))\n\tif iC == nil {\n\t\tlog.Fatal(\"c failed to import go binary\")\n\t}\n\tdefer C.cap_free(unsafe.Pointer(iC))\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/go/compare-cap.go"
                },
                "region": {
                  "startLine": 262,
                  "endLine": 262,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\t}\n\n\t// Validate that it can be imported in binary in C\n\tiC := C.cap_copy_int_check(unsafe.Pointer(&iE[0]), C.ssize_t(len(iE)))\n\tif iC == nil {\n\t\tlog.Fatal(\"c failed to import go binary\")\n\t}\n",
                    "rendered": {
                      "text": "\t}\n\n\t// Validate that it can be imported in binary in C\n\tiC := C.cap_copy_int_check(unsafe.Pointer(&iE[0]), C.ssize_t(len(iE)))\n\tif iC == nil {\n\t\tlog.Fatal(\"c failed to import go binary\")\n\t}\n",
                      "markdown": "`\t}\n\n\t// Validate that it can be imported in binary in C\n\tiC := C.cap_copy_int_check(unsafe.Pointer(&iE[0]), C.ssize_t(len(iE)))\n\tif iC == nil {\n\t\tlog.Fatal(\"c failed to import go binary\")\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/bug216610/c/gcc.sh"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 31,
                  "endLine": 11,
                  "endColumn": 35,
                  "snippet": {
                    "text": "# Go (internal) linker.\n#\n# As a workaround for this, we can modify the assembly source code\n# generated by GCC to not point at problematic '.rodata.*' sections,\n# and place this data in the good old '.text' section where Go's\n# linker can make sense of it.\n#\n",
                    "rendered": {
                      "text": "# Go (internal) linker.\n#\n# As a workaround for this, we can modify the assembly source code\n# generated by GCC to not point at problematic '.rodata.*' sections,\n# and place this data in the good old '.text' section where Go's\n# linker can make sense of it.\n#\n",
                      "markdown": "`# Go (internal) linker.\n#\n# As a workaround for this, we can modify the assembly source code\n# generated by GCC to not point at problematic '.rodata.*' sections,\n# and place this data in the good old '.text' section where Go's\n# linker can make sense of it.\n#\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/bug216610/c/gcc.sh"
                },
                "region": {
                  "startLine": 41,
                  "endLine": 41,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tsetup=1\n\ts=\"${arg%.*}.s\"\n\t\"${GCC}\" \"${args[@]}\" -S -o \"${s}\" \"${arg}\"\n\tsed -i -e 's/.*\\.rodata\\..*/\\t.text/' \"${s}\"\n\tfinal+=(\"${s}\")\n\tses+=(\"${s}\")\n    else\n",
                    "rendered": {
                      "text": "\tsetup=1\n\ts=\"${arg%.*}.s\"\n\t\"${GCC}\" \"${args[@]}\" -S -o \"${s}\" \"${arg}\"\n\tsed -i -e 's/.*\\.rodata\\..*/\\t.text/' \"${s}\"\n\tfinal+=(\"${s}\")\n\tses+=(\"${s}\")\n    else\n",
                      "markdown": "`\tsetup=1\n\ts=\"${arg%.*}.s\"\n\t\"${GCC}\" \"${args[@]}\" -S -o \"${s}\" \"${arg}\"\n\tsed -i -e 's/.*\\.rodata\\..*/\\t.text/' \"${s}\"\n\tfinal+=(\"${s}\")\n\tses+=(\"${s}\")\n    else\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/bug216610/c/gcc.sh"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 36,
                  "endLine": 21,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# compilation for the collection of the '*.s' files. Upon success, it\n# purges the intermediate '*.s' files.\n#\n# The fragile aspect of this present script is which compiler\n# arguments should be used for the compilation from '.c' -> '.s'\n# files. What we do is accumulate arguments until we encounter our\n# first '*.c' file and use those to perform the '.c' -> '.s'\n",
                    "rendered": {
                      "text": "# compilation for the collection of the '*.s' files. Upon success, it\n# purges the intermediate '*.s' files.\n#\n# The fragile aspect of this present script is which compiler\n# arguments should be used for the compilation from '.c' -> '.s'\n# files. What we do is accumulate arguments until we encounter our\n# first '*.c' file and use those to perform the '.c' -> '.s'\n",
                      "markdown": "`# compilation for the collection of the '*.s' files. Upon success, it\n# purges the intermediate '*.s' files.\n#\n# The fragile aspect of this present script is which compiler\n# arguments should be used for the compilation from '.c' -> '.s'\n# files. What we do is accumulate arguments until we encounter our\n# first '*.c' file and use those to perform the '.c' -> '.s'\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/contrib/bug216610/c/gcc.sh"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 6,
                  "endLine": 15,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# and place this data in the good old '.text' section where Go's\n# linker can make sense of it.\n#\n# This script exists to generate a '.syso' file from some '*.c' files.\n# It works by recognizing the '*.c' command line arguments and\n# converting them into fixed-up '*.s' files. It then performs the\n# compilation for the collection of the '*.s' files. Upon success, it\n",
                    "rendered": {
                      "text": "# and place this data in the good old '.text' section where Go's\n# linker can make sense of it.\n#\n# This script exists to generate a '.syso' file from some '*.c' files.\n# It works by recognizing the '*.c' command line arguments and\n# converting them into fixed-up '*.s' files. It then performs the\n# compilation for the collection of the '*.s' files. Upon success, it\n",
                      "markdown": "`# and place this data in the good old '.text' section where Go's\n# linker can make sense of it.\n#\n# This script exists to generate a '.syso' file from some '*.c' files.\n# It works by recognizing the '*.c' command line arguments and\n# converting them into fixed-up '*.s' files. It then performs the\n# compilation for the collection of the '*.s' files. Upon success, it\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/libcap/execable.c"
                },
                "region": {
                  "startLine": 46,
                  "endLine": 46,
                  "endColumn": 5,
                  "snippet": {
                    "text": "    const char *cmd = \"This library\";\n\n    if (argv != NULL && argv[0] != NULL) {\n\tcmd = argv[0];\n    }\n    printf(\"%s is the shared library version: \" LIBRARY_VERSION \".\\n\"\n\t   \"See the License file for distribution information.\\n\"\n",
                    "rendered": {
                      "text": "    const char *cmd = \"This library\";\n\n    if (argv != NULL && argv[0] != NULL) {\n\tcmd = argv[0];\n    }\n    printf(\"%s is the shared library version: \" LIBRARY_VERSION \".\\n\"\n\t   \"See the License file for distribution information.\\n\"\n",
                      "markdown": "`    const char *cmd = \"This library\";\n\n    if (argv != NULL && argv[0] != NULL) {\n\tcmd = argv[0];\n    }\n    printf(\"%s is the shared library version: \" LIBRARY_VERSION \".\\n\"\n\t   \"See the License file for distribution information.\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/License"
                },
                "region": {
                  "startLine": 387,
                  "startColumn": 35,
                  "endLine": 387,
                  "endColumn": 39,
                  "snippet": {
                    "text": "necessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n",
                    "rendered": {
                      "text": "necessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n",
                      "markdown": "`necessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/License"
                },
                "region": {
                  "startLine": 347,
                  "startColumn": 59,
                  "endLine": 347,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n",
                    "rendered": {
                      "text": "\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n",
                      "markdown": "`\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/License"
                },
                "region": {
                  "startLine": 261,
                  "startColumn": 30,
                  "endLine": 261,
                  "endColumn": 34,
                  "snippet": {
                    "text": "excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n",
                    "rendered": {
                      "text": "excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n",
                      "markdown": "`excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/License"
                },
                "region": {
                  "startLine": 215,
                  "startColumn": 63,
                  "endLine": 216,
                  "endColumn": 8,
                  "snippet": {
                    "text": "The source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\n",
                    "rendered": {
                      "text": "The source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\n",
                      "markdown": "`The source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/License"
                },
                "region": {
                  "startLine": 199,
                  "startColumn": 51,
                  "endLine": 199,
                  "endColumn": 55,
                  "snippet": {
                    "text": "    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n",
                    "rendered": {
                      "text": "    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n",
                      "markdown": "`    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/License"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 21,
                  "endLine": 183,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\n",
                    "rendered": {
                      "text": "\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\n",
                      "markdown": "`\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/License"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 43,
                  "endLine": 157,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n",
                    "rendered": {
                      "text": "\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n",
                      "markdown": "`\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/License"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 7,
                  "endLine": 145,
                  "endColumn": 11,
                  "snippet": {
                    "text": "along with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\n",
                    "rendered": {
                      "text": "along with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\n",
                      "markdown": "`along with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/License"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 63,
                  "endLine": 111,
                  "endColumn": 67,
                  "snippet": {
                    "text": "patents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n",
                    "rendered": {
                      "text": "patents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n",
                      "markdown": "`patents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/License"
                },
                "region": {
                  "startLine": 307,
                  "startColumn": 12,
                  "endLine": 307,
                  "endColumn": 18,
                  "snippet": {
                    "text": "this License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\n",
                    "rendered": {
                      "text": "this License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\n",
                      "markdown": "`this License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/License"
                },
                "region": {
                  "startLine": 295,
                  "startColumn": 34,
                  "endLine": 295,
                  "endColumn": 40,
                  "snippet": {
                    "text": "the limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n",
                    "rendered": {
                      "text": "the limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n",
                      "markdown": "`the limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/License"
                },
                "region": {
                  "startLine": 246,
                  "startColumn": 9,
                  "endLine": 246,
                  "endColumn": 15,
                  "snippet": {
                    "text": "all its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\n",
                    "rendered": {
                      "text": "all its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\n",
                      "markdown": "`all its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/License"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 12,
                  "endLine": 108,
                  "endColumn": 18,
                  "snippet": {
                    "text": "authors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n",
                    "rendered": {
                      "text": "authors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n",
                      "markdown": "`authors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libcap.zip/License"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 4,
                  "endLine": 81,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n",
                    "rendered": {
                      "text": "  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n",
                      "markdown": "`  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}