{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/age.go"
                },
                "region": {
                  "startLine": 252,
                  "startColumn": 45,
                  "endLine": 252,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\t\tstdinInUse = true\n\t\tif decryptFlag && term.IsTerminal(int(os.Stdin.Fd())) {\n\t\t\t// If the input comes from a TTY, assume it's armored, and buffer up\n\t\t\t// to the END line (or EOF/EOT) so that a password prompt or the\n\t\t\t// output don't get in the way of typing the input. See Issue 364.\n\t\t\tbuf, err := bufferTerminalInput(in)\n\t\t\tif err != nil {\n",
                    "rendered": {
                      "text": "\t\tstdinInUse = true\n\t\tif decryptFlag && term.IsTerminal(int(os.Stdin.Fd())) {\n\t\t\t// If the input comes from a TTY, assume it's armored, and buffer up\n\t\t\t// to the END line (or EOF/EOT) so that a password prompt or the\n\t\t\t// output don't get in the way of typing the input. See Issue 364.\n\t\t\tbuf, err := bufferTerminalInput(in)\n\t\t\tif err != nil {\n",
                      "markdown": "`\t\tstdinInUse = true\n\t\tif decryptFlag && term.IsTerminal(int(os.Stdin.Fd())) {\n\t\t\t// If the input comes from a TTY, assume it's armored, and buffer up\n\t\t\t// to the END line (or EOF/EOT) so that a password prompt or the\n\t\t\t// output don't get in the way of typing the input. See Issue 364.\n\t\t\tbuf, err := bufferTerminalInput(in)\n\t\t\tif err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/age.go"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 15,
                  "endLine": 197,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\t}\n\t\tif passFlag {\n\t\t\terrorWithHint(\"-p/--passphrase can't be used with -d/--decrypt\",\n\t\t\t\t\"note that password protected files are detected automatically\")\n\t\t}\n\t\tif len(recipientFlags) > 0 {\n\t\t\terrorWithHint(\"-r/--recipient can't be used with -d/--decrypt\",\n",
                    "rendered": {
                      "text": "\t\t}\n\t\tif passFlag {\n\t\t\terrorWithHint(\"-p/--passphrase can't be used with -d/--decrypt\",\n\t\t\t\t\"note that password protected files are detected automatically\")\n\t\t}\n\t\tif len(recipientFlags) > 0 {\n\t\t\terrorWithHint(\"-r/--recipient can't be used with -d/--decrypt\",\n",
                      "markdown": "`\t\t}\n\t\tif passFlag {\n\t\t\terrorWithHint(\"-p/--passphrase can't be used with -d/--decrypt\",\n\t\t\t\t\"note that password protected files are detected automatically\")\n\t\t}\n\t\tif len(recipientFlags) > 0 {\n\t\t\terrorWithHint(\"-r/--recipient can't be used with -d/--decrypt\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/age.go"
                },
                "region": {
                  "startLine": 180,
                  "startColumn": 67,
                  "endLine": 180,
                  "endColumn": 71,
                  "snippet": {
                    "text": "\t\t\t\thints = append(hints, \"    \"+strings.Join(newArgs, \" \"))\n\t\t\t}\n\t\t} else {\n\t\t\thints = append(hints, \"only a single input file may be specified at a time\")\n\t\t}\n\n\t\terrorWithHint(\"too many INPUT arguments: \"+quotedArgs, hints...)\n",
                    "rendered": {
                      "text": "\t\t\t\thints = append(hints, \"    \"+strings.Join(newArgs, \" \"))\n\t\t\t}\n\t\t} else {\n\t\t\thints = append(hints, \"only a single input file may be specified at a time\")\n\t\t}\n\n\t\terrorWithHint(\"too many INPUT arguments: \"+quotedArgs, hints...)\n",
                      "markdown": "`\t\t\t\thints = append(hints, \"    \"+strings.Join(newArgs, \" \"))\n\t\t\t}\n\t\t} else {\n\t\t\thints = append(hints, \"only a single input file may be specified at a time\")\n\t\t}\n\n\t\terrorWithHint(\"too many INPUT arguments: \"+quotedArgs, hints...)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/age.go"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 21,
                  "endLine": 66,
                  "endColumn": 25,
                  "snippet": {
                    "text": "    $ tar cvz ~/data | age -r age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p > data.tar.gz.age\n    $ age --decrypt -i key.txt -o data.tar.gz data.tar.gz.age`\n\n// Version can be set at link time to override debug.BuildInfo.Main.Version,\n// which is \"(devel)\" when building from within the module. See\n// golang.org/issue/29814 and golang.org/issue/29228.\nvar Version string\n",
                    "rendered": {
                      "text": "    $ tar cvz ~/data | age -r age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p > data.tar.gz.age\n    $ age --decrypt -i key.txt -o data.tar.gz data.tar.gz.age`\n\n// Version can be set at link time to override debug.BuildInfo.Main.Version,\n// which is \"(devel)\" when building from within the module. See\n// golang.org/issue/29814 and golang.org/issue/29228.\nvar Version string\n",
                      "markdown": "`    $ tar cvz ~/data | age -r age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p > data.tar.gz.age\n    $ age --decrypt -i key.txt -o data.tar.gz data.tar.gz.age`\n\n// Version can be set at link time to override debug.BuildInfo.Main.Version,\n// which is \"(devel)\" when building from within the module. See\n// golang.org/issue/29814 and golang.org/issue/29228.\nvar Version string\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/age.go"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 53,
                  "endLine": 39,
                  "endColumn": 57,
                  "snippet": {
                    "text": "    -p, --passphrase            Encrypt with a passphrase.\n    -r, --recipient RECIPIENT   Encrypt to the specified RECIPIENT. Can be repeated.\n    -R, --recipients-file PATH  Encrypt to recipients listed at PATH. Can be repeated.\n    -i, --identity PATH         Use the identity file at PATH. Can be repeated.\n\nINPUT defaults to standard input, and OUTPUT defaults to standard output.\nIf OUTPUT exists, it will be overwritten.\n",
                    "rendered": {
                      "text": "    -p, --passphrase            Encrypt with a passphrase.\n    -r, --recipient RECIPIENT   Encrypt to the specified RECIPIENT. Can be repeated.\n    -R, --recipients-file PATH  Encrypt to recipients listed at PATH. Can be repeated.\n    -i, --identity PATH         Use the identity file at PATH. Can be repeated.\n\nINPUT defaults to standard input, and OUTPUT defaults to standard output.\nIf OUTPUT exists, it will be overwritten.\n",
                      "markdown": "`    -p, --passphrase            Encrypt with a passphrase.\n    -r, --recipient RECIPIENT   Encrypt to the specified RECIPIENT. Can be repeated.\n    -R, --recipients-file PATH  Encrypt to recipients listed at PATH. Can be repeated.\n    -i, --identity PATH         Use the identity file at PATH. Can be repeated.\n\nINPUT defaults to standard input, and OUTPUT defaults to standard output.\nIf OUTPUT exists, it will be overwritten.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/age.go"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 60,
                  "endLine": 38,
                  "endColumn": 64,
                  "snippet": {
                    "text": "    -a, --armor                 Encrypt to a PEM encoded format.\n    -p, --passphrase            Encrypt with a passphrase.\n    -r, --recipient RECIPIENT   Encrypt to the specified RECIPIENT. Can be repeated.\n    -R, --recipients-file PATH  Encrypt to recipients listed at PATH. Can be repeated.\n    -i, --identity PATH         Use the identity file at PATH. Can be repeated.\n\nINPUT defaults to standard input, and OUTPUT defaults to standard output.\n",
                    "rendered": {
                      "text": "    -a, --armor                 Encrypt to a PEM encoded format.\n    -p, --passphrase            Encrypt with a passphrase.\n    -r, --recipient RECIPIENT   Encrypt to the specified RECIPIENT. Can be repeated.\n    -R, --recipients-file PATH  Encrypt to recipients listed at PATH. Can be repeated.\n    -i, --identity PATH         Use the identity file at PATH. Can be repeated.\n\nINPUT defaults to standard input, and OUTPUT defaults to standard output.\n",
                      "markdown": "`    -a, --armor                 Encrypt to a PEM encoded format.\n    -p, --passphrase            Encrypt with a passphrase.\n    -r, --recipient RECIPIENT   Encrypt to the specified RECIPIENT. Can be repeated.\n    -R, --recipients-file PATH  Encrypt to recipients listed at PATH. Can be repeated.\n    -i, --identity PATH         Use the identity file at PATH. Can be repeated.\n\nINPUT defaults to standard input, and OUTPUT defaults to standard output.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/age.go"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 60,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "Options:\n    -e, --encrypt               Encrypt the input to the output. Default if omitted.\n    -d, --decrypt               Decrypt the input to the output.\n    -o, --output OUTPUT         Write the result to the file at path OUTPUT.\n    -a, --armor                 Encrypt to a PEM encoded format.\n    -p, --passphrase            Encrypt with a passphrase.\n    -r, --recipient RECIPIENT   Encrypt to the specified RECIPIENT. Can be repeated.\n",
                    "rendered": {
                      "text": "Options:\n    -e, --encrypt               Encrypt the input to the output. Default if omitted.\n    -d, --decrypt               Decrypt the input to the output.\n    -o, --output OUTPUT         Write the result to the file at path OUTPUT.\n    -a, --armor                 Encrypt to a PEM encoded format.\n    -p, --passphrase            Encrypt with a passphrase.\n    -r, --recipient RECIPIENT   Encrypt to the specified RECIPIENT. Can be repeated.\n",
                      "markdown": "`Options:\n    -e, --encrypt               Encrypt the input to the output. Default if omitted.\n    -d, --decrypt               Decrypt the input to the output.\n    -o, --output OUTPUT         Write the result to the file at path OUTPUT.\n    -a, --armor                 Encrypt to a PEM encoded format.\n    -p, --passphrase            Encrypt with a passphrase.\n    -r, --recipient RECIPIENT   Encrypt to the specified RECIPIENT. Can be repeated.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/age.go"
                },
                "region": {
                  "startLine": 341,
                  "startColumn": 8,
                  "endLine": 341,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\t\tr, err := parseRecipient(arg)\n\t\tif err, ok := err.(gitHubRecipientError); ok {\n\t\t\terrorWithHint(err.Error(), \"instead, use recipient files like\",\n\t\t\t\t\"    curl -O https://github.com/\"+err.username+\".keys\",\n\t\t\t\t\"    age -R \"+err.username+\".keys\")\n\t\t}\n\t\tif err != nil {\n",
                    "rendered": {
                      "text": "\t\tr, err := parseRecipient(arg)\n\t\tif err, ok := err.(gitHubRecipientError); ok {\n\t\t\terrorWithHint(err.Error(), \"instead, use recipient files like\",\n\t\t\t\t\"    curl -O https://github.com/\"+err.username+\".keys\",\n\t\t\t\t\"    age -R \"+err.username+\".keys\")\n\t\t}\n\t\tif err != nil {\n",
                      "markdown": "`\t\tr, err := parseRecipient(arg)\n\t\tif err, ok := err.(gitHubRecipientError); ok {\n\t\t\terrorWithHint(err.Error(), \"instead, use recipient files like\",\n\t\t\t\t\"    curl -O https://github.com/\"+err.username+\".keys\",\n\t\t\t\t\"    age -R \"+err.username+\".keys\")\n\t\t}\n\t\tif err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/age.go"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 29,
                  "endLine": 66,
                  "endColumn": 35,
                  "snippet": {
                    "text": "    $ tar cvz ~/data | age -r age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p > data.tar.gz.age\n    $ age --decrypt -i key.txt -o data.tar.gz data.tar.gz.age`\n\n// Version can be set at link time to override debug.BuildInfo.Main.Version,\n// which is \"(devel)\" when building from within the module. See\n// golang.org/issue/29814 and golang.org/issue/29228.\nvar Version string\n",
                    "rendered": {
                      "text": "    $ tar cvz ~/data | age -r age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p > data.tar.gz.age\n    $ age --decrypt -i key.txt -o data.tar.gz data.tar.gz.age`\n\n// Version can be set at link time to override debug.BuildInfo.Main.Version,\n// which is \"(devel)\" when building from within the module. See\n// golang.org/issue/29814 and golang.org/issue/29228.\nvar Version string\n",
                      "markdown": "`    $ tar cvz ~/data | age -r age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p > data.tar.gz.age\n    $ age --decrypt -i key.txt -o data.tar.gz data.tar.gz.age`\n\n// Version can be set at link time to override debug.BuildInfo.Main.Version,\n// which is \"(devel)\" when building from within the module. See\n// golang.org/issue/29814 and golang.org/issue/29228.\nvar Version string\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/age.go"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 5,
                  "endLine": 63,
                  "endColumn": 10,
                  "snippet": {
                    "text": "Example:\n    $ age-keygen -o key.txt\n    Public key: age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p\n    $ tar cvz ~/data | age -r age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p > data.tar.gz.age\n    $ age --decrypt -i key.txt -o data.tar.gz data.tar.gz.age`\n\n// Version can be set at link time to override debug.BuildInfo.Main.Version,\n",
                    "rendered": {
                      "text": "Example:\n    $ age-keygen -o key.txt\n    Public key: age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p\n    $ tar cvz ~/data | age -r age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p > data.tar.gz.age\n    $ age --decrypt -i key.txt -o data.tar.gz data.tar.gz.age`\n\n// Version can be set at link time to override debug.BuildInfo.Main.Version,\n",
                      "markdown": "`Example:\n    $ age-keygen -o key.txt\n    Public key: age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p\n    $ tar cvz ~/data | age -r age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p > data.tar.gz.age\n    $ age --decrypt -i key.txt -o data.tar.gz data.tar.gz.age`\n\n// Version can be set at link time to override debug.BuildInfo.Main.Version,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/age.go"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 19,
                  "endLine": 52,
                  "endColumn": 24,
                  "snippet": {
                    "text": "read recipients from standard input.\n\nIdentity files contain one or more secret keys (\"AGE-SECRET-KEY-1...\"),\none per line, or an SSH key. Empty lines and lines starting with \"#\" are\nignored as comments. Passphrase encrypted age files can be used as\nidentity files. Multiple key files can be provided, and any unused ones\nwill be ignored. \"-\" may be used to read identities from standard input.\n",
                    "rendered": {
                      "text": "read recipients from standard input.\n\nIdentity files contain one or more secret keys (\"AGE-SECRET-KEY-1...\"),\none per line, or an SSH key. Empty lines and lines starting with \"#\" are\nignored as comments. Passphrase encrypted age files can be used as\nidentity files. Multiple key files can be provided, and any unused ones\nwill be ignored. \"-\" may be used to read identities from standard input.\n",
                      "markdown": "`read recipients from standard input.\n\nIdentity files contain one or more secret keys (\"AGE-SECRET-KEY-1...\"),\none per line, or an SSH key. Empty lines and lines starting with \"#\" are\nignored as comments. Passphrase encrypted age files can be used as\nidentity files. Multiple key files can be provided, and any unused ones\nwill be ignored. \"-\" may be used to read identities from standard input.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/age.go"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 5,
                  "endLine": 45,
                  "endColumn": 10,
                  "snippet": {
                    "text": "If OUTPUT exists, it will be overwritten.\n\nRECIPIENT can be an age public key generated by age-keygen (\"age1...\")\nor an SSH public key (\"ssh-ed25519 AAAA...\", \"ssh-rsa AAAA...\").\n\nRecipient files contain one or more recipients, one per line. Empty lines\nand lines starting with \"#\" are ignored as comments. \"-\" may be used to\n",
                    "rendered": {
                      "text": "If OUTPUT exists, it will be overwritten.\n\nRECIPIENT can be an age public key generated by age-keygen (\"age1...\")\nor an SSH public key (\"ssh-ed25519 AAAA...\", \"ssh-rsa AAAA...\").\n\nRecipient files contain one or more recipients, one per line. Empty lines\nand lines starting with \"#\" are ignored as comments. \"-\" may be used to\n",
                      "markdown": "`If OUTPUT exists, it will be overwritten.\n\nRECIPIENT can be an age public key generated by age-keygen (\"age1...\")\nor an SSH public key (\"ssh-ed25519 AAAA...\", \"ssh-rsa AAAA...\").\n\nRecipient files contain one or more recipients, one per line. Empty lines\nand lines starting with \"#\" are ignored as comments. \"-\" may be used to\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/wordlist.go"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 12291,
                  "endLine": 29,
                  "endColumn": 12299,
                  "snippet": {
                    "text": "trip trophy trouble truck true truly trumpet trust truth try tube tuition tumble tuna tunnel turkey turn turtle twelve twenty twice twin twist two type typical ugly umbrella unable unaware uncle uncover under undo unfair unfold unhappy uniform unique unit universe unknown unlock until unusual unveil update upgrade uphold upon upper upset urban urge usage use used useful useless usual utility vacant vacuum vague valid valley valve van vanish vapor various vast vault vehicle velvet vendor venture venue verb verify version very vessel veteran viable vibrant vicious victory video view village vintage viol",
                    "rendered": {
                      "text": "trip trophy trouble truck true truly trumpet trust truth try tube tuition tumble tuna tunnel turkey turn turtle twelve twenty twice twin twist two type typical ugly umbrella unable unaware uncle uncover under undo unfair unfold unhappy uniform unique unit universe unknown unlock until unusual unveil update upgrade uphold upon upper upset urban urge usage use used useful useless usual utility vacant vacuum vague valid valley valve van vanish vapor various vast vault vehicle velvet vendor venture venue verb verify version very vessel veteran viable vibrant vicious victory video view village vintage viol",
                      "markdown": "`trip trophy trouble truck true truly trumpet trust truth try tube tuition tumble tuna tunnel turkey turn turtle twelve twenty twice twin twist two type typical ugly umbrella unable unaware uncle uncover under undo unfair unfold unhappy uniform unique unit universe unknown unlock until unusual unveil update upgrade uphold upon upper upset urban urge usage use used useful useless usual utility vacant vacuum vague valid valley valve van vanish vapor various vast vault vehicle velvet vendor venture venue verb verify version very vessel veteran viable vibrant vicious victory video view village vintage viol`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/wordlist.go"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 10920,
                  "endLine": 29,
                  "endColumn": 10930,
                  "snippet": {
                    "text": "w soap soccer social sock soda soft solar soldier solid solution solve someone song soon sorry sort soul sound soup source south space spare spatial spawn speak special speed spell spend sphere spice spider spike spin spirit split spoil sponsor spoon sport spot spray spread spring spy square squeeze squirrel stable stadium staff stage stairs stamp stand start state stay steak steel stem step stereo stick still sting stock stomach stone stool story stove strategy street strike strong struggle student stuff stumble style subject submit subway success such sudden suffer sugar suggest suit summer sun sunny ",
                    "rendered": {
                      "text": "w soap soccer social sock soda soft solar soldier solid solution solve someone song soon sorry sort soul sound soup source south space spare spatial spawn speak special speed spell spend sphere spice spider spike spin spirit split spoil sponsor spoon sport spot spray spread spring spy square squeeze squirrel stable stadium staff stage stairs stamp stand start state stay steak steel stem step stereo stick still sting stock stomach stone stool story stove strategy street strike strong struggle student stuff stumble style subject submit subway success such sudden suffer sugar suggest suit summer sun sunny ",
                      "markdown": "`w soap soccer social sock soda soft solar soldier solid solution solve someone song soon sorry sort soul sound soup source south space spare spatial spawn speak special speed spell spend sphere spice spider spike spin spirit split spoil sponsor spoon sport spot spray spread spring spy square squeeze squirrel stable stadium staff stage stairs stamp stand start state stay steak steel stem step stereo stick still sting stock stomach stone stool story stove strategy street strike strong struggle student stuff stumble style subject submit subway success such sudden suffer sugar suggest suit summer sun sunny `"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/wordlist.go"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 4245,
                  "endLine": 29,
                  "endColumn": 4253,
                  "snippet": {
                    "text": "oy enlist enough enrich enroll ensure enter entire entry envelope episode equal equip era erase erode erosion error erupt escape essay essence estate eternal ethics evidence evil evoke evolve exact example excess exchange excite exclude excuse execute exercise exhaust exhibit exile exist exit exotic expand expect expire explain expose express extend extra eye eyebrow fabric face faculty fade faint faith fall false fame family famous fan fancy fantasy farm fashion fat fatal father fatigue fault favorite feature february federal fee feed feel female fence festival fetch fever few fiber fiction field fig",
                    "rendered": {
                      "text": "oy enlist enough enrich enroll ensure enter entire entry envelope episode equal equip era erase erode erosion error erupt escape essay essence estate eternal ethics evidence evil evoke evolve exact example excess exchange excite exclude excuse execute exercise exhaust exhibit exile exist exit exotic expand expect expire explain expose express extend extra eye eyebrow fabric face faculty fade faint faith fall false fame family famous fan fancy fantasy farm fashion fat fatal father fatigue fault favorite feature february federal fee feed feel female fence festival fetch fever few fiber fiction field fig",
                      "markdown": "`oy enlist enough enrich enroll ensure enter entire entry envelope episode equal equip era erase erode erosion error erupt escape essay essence estate eternal ethics evidence evil evoke evolve exact example excess exchange excite exclude excuse execute exercise exhaust exhibit exile exist exit exotic expand expect expire explain expose express extend extra eye eyebrow fabric face faculty fade faint faith fall false fame family famous fan fancy fantasy farm fashion fat fatal father fatigue fault favorite feature february federal fee feed feel female fence festival fetch fever few fiber fiction field fig`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/wordlist.go"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 2497,
                  "endLine": 29,
                  "endColumn": 2506,
                  "snippet": {
                    "text": "claim clap clarify claw clay clean clerk clever click client cliff climb clinic clip clock clog close cloth cloud clown club clump cluster clutch coach coast coconut code coffee coil coin collect color column combine come comfort comic common company concert conduct confirm congress connect consider control convince cook cool copper copy coral core corn correct cost cotton couch country couple course cousin cover coyote crack cradle craft cram crane crash crater crawl crazy cream credit creek crew cricket crime crisp critic crop cross crouch crowd crucial cruel cruise crumble crunch crush cry crystal c",
                    "rendered": {
                      "text": "claim clap clarify claw clay clean clerk clever click client cliff climb clinic clip clock clog close cloth cloud clown club clump cluster clutch coach coast coconut code coffee coil coin collect color column combine come comfort comic common company concert conduct confirm congress connect consider control convince cook cool copper copy coral core corn correct cost cotton couch country couple course cousin cover coyote crack cradle craft cram crane crash crater crawl crazy cream credit creek crew cricket crime crisp critic crop cross crouch crowd crucial cruel cruise crumble crunch crush cry crystal c",
                      "markdown": "`claim clap clarify claw clay clean clerk clever click client cliff climb clinic clip clock clog close cloth cloud clown club clump cluster clutch coach coast coconut code coffee coil coin collect color column combine come comfort comic common company concert conduct confirm congress connect consider control convince cook cool copper copy coral core corn correct cost cotton couch country couple course cousin cover coyote crack cradle craft cram crane crash crater crawl crazy cream credit creek crew cricket crime crisp critic crop cross crouch crowd crucial cruel cruise crumble crunch crush cry crystal c`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/wordlist.go"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 12986,
                  "endLine": 29,
                  "endColumn": 12992,
                  "snippet": {
                    "text": "age wage wagon wait walk wall walnut want warfare warm warrior wash wasp waste water wave way wealth weapon wear weasel weather web wedding weekend weird welcome west wet whale what wheat wheel when where whip whisper wide width wife wild will win window wine wing wink winner winter wire wisdom wise wish witness wolf woman wonder wood wool word work world worry worth wrap wreck wrestle wrist write wrong yard year yellow you young youth zebra zero zone zoo`, \" \")\n",
                    "rendered": {
                      "text": "age wage wagon wait walk wall walnut want warfare warm warrior wash wasp waste water wave way wealth weapon wear weasel weather web wedding weekend weird welcome west wet whale what wheat wheel when where whip whisper wide width wife wild will win window wine wing wink winner winter wire wisdom wise wish witness wolf woman wonder wood wool word work world worry worth wrap wreck wrestle wrist write wrong yard year yellow you young youth zebra zero zone zoo`, \" \")\n",
                      "markdown": "`age wage wagon wait walk wall walnut want warfare warm warrior wash wasp waste water wave way wealth weapon wear weasel weather web wedding weekend weird welcome west wet whale what wheat wheel when where whip whisper wide width wife wild will win window wine wing wink winner winter wire wisdom wise wish witness wolf woman wonder wood wool word work world worry worth wrap wreck wrestle wrist write wrong yard year yellow you young youth zebra zero zone zoo`, \" \")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/wordlist.go"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 11796,
                  "endLine": 29,
                  "endColumn": 11801,
                  "snippet": {
                    "text": "m tell ten tenant tennis tent term test text thank that theme then theory there they thing this thought three thrive throw thumb thunder ticket tide tiger tilt timber time tiny tip tired tissue title toast tobacco today toddler toe together toilet token tomato tomorrow tone tongue tonight tool tooth top topic topple torch tornado tortoise toss total tourist toward tower town toy track trade traffic tragic train transfer trap trash travel tray treat tree trend trial tribe trick trigger trim trip trophy trouble truck true truly trumpet trust truth try tube tuition tumble tuna tunnel turkey turn turtl",
                    "rendered": {
                      "text": "m tell ten tenant tennis tent term test text thank that theme then theory there they thing this thought three thrive throw thumb thunder ticket tide tiger tilt timber time tiny tip tired tissue title toast tobacco today toddler toe together toilet token tomato tomorrow tone tongue tonight tool tooth top topic topple torch tornado tortoise toss total tourist toward tower town toy track trade traffic tragic train transfer trap trash travel tray treat tree trend trial tribe trick trigger trim trip trophy trouble truck true truly trumpet trust truth try tube tuition tumble tuna tunnel turkey turn turtl",
                      "markdown": "`m tell ten tenant tennis tent term test text thank that theme then theory there they thing this thought three thrive throw thumb thunder ticket tide tiger tilt timber time tiny tip tired tissue title toast tobacco today toddler toe together toilet token tomato tomorrow tone tongue tonight tool tooth top topic topple torch tornado tortoise toss total tourist toward tower town toy track trade traffic tragic train transfer trap trash travel tray treat tree trend trial tribe trick trigger trim trip trophy trouble truck true truly trumpet trust truth try tube tuition tumble tuna tunnel turkey turn turtl`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/wordlist.go"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 11662,
                  "endLine": 29,
                  "endColumn": 11668,
                  "snippet": {
                    "text": "wim swing switch sword symbol symptom syrup system table tackle tag tail talent talk tank tape target task taste tattoo taxi teach team tell ten tenant tennis tent term test text thank that theme then theory there they thing this thought three thrive throw thumb thunder ticket tide tiger tilt timber time tiny tip tired tissue title toast tobacco today toddler toe together toilet token tomato tomorrow tone tongue tonight tool tooth top topic topple torch tornado tortoise toss total tourist toward tower town toy track trade traffic tragic train transfer trap trash travel tray treat tree trend trial tr",
                    "rendered": {
                      "text": "wim swing switch sword symbol symptom syrup system table tackle tag tail talent talk tank tape target task taste tattoo taxi teach team tell ten tenant tennis tent term test text thank that theme then theory there they thing this thought three thrive throw thumb thunder ticket tide tiger tilt timber time tiny tip tired tissue title toast tobacco today toddler toe together toilet token tomato tomorrow tone tongue tonight tool tooth top topic topple torch tornado tortoise toss total tourist toward tower town toy track trade traffic tragic train transfer trap trash travel tray treat tree trend trial tr",
                      "markdown": "`wim swing switch sword symbol symptom syrup system table tackle tag tail talent talk tank tape target task taste tattoo taxi teach team tell ten tenant tennis tent term test text thank that theme then theory there they thing this thought three thrive throw thumb thunder ticket tide tiger tilt timber time tiny tip tired tissue title toast tobacco today toddler toe together toilet token tomato tomorrow tone tongue tonight tool tooth top topic topple torch tornado tortoise toss total tourist toward tower town toy track trade traffic tragic train transfer trap trash travel tray treat tree trend trial tr`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/wordlist.go"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 11429,
                  "endLine": 29,
                  "endColumn": 11435,
                  "snippet": {
                    "text": "f stumble style subject submit subway success such sudden suffer sugar suggest suit summer sun sunny sunset super supply supreme sure surface surge surprise surround survey suspect sustain swallow swamp swap swarm swear sweet swift swim swing switch sword symbol symptom syrup system table tackle tag tail talent talk tank tape target task taste tattoo taxi teach team tell ten tenant tennis tent term test text thank that theme then theory there they thing this thought three thrive throw thumb thunder ticket tide tiger tilt timber time tiny tip tired tissue title toast tobacco today toddler toe togethe",
                    "rendered": {
                      "text": "f stumble style subject submit subway success such sudden suffer sugar suggest suit summer sun sunny sunset super supply supreme sure surface surge surprise surround survey suspect sustain swallow swamp swap swarm swear sweet swift swim swing switch sword symbol symptom syrup system table tackle tag tail talent talk tank tape target task taste tattoo taxi teach team tell ten tenant tennis tent term test text thank that theme then theory there they thing this thought three thrive throw thumb thunder ticket tide tiger tilt timber time tiny tip tired tissue title toast tobacco today toddler toe togethe",
                      "markdown": "`f stumble style subject submit subway success such sudden suffer sugar suggest suit summer sun sunny sunset super supply supreme sure surface surge surprise surround survey suspect sustain swallow swamp swap swarm swear sweet swift swim swing switch sword symbol symptom syrup system table tackle tag tail talent talk tank tape target task taste tattoo taxi teach team tell ten tenant tennis tent term test text thank that theme then theory there they thing this thought three thrive throw thumb thunder ticket tide tiger tilt timber time tiny tip tired tissue title toast tobacco today toddler toe togethe`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/wordlist.go"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 10714,
                  "endLine": 29,
                  "endColumn": 10720,
                  "snippet": {
                    "text": "ce sing siren sister situate six size skate sketch ski skill skin skirt skull slab slam sleep slender slice slide slight slim slogan slot slow slush small smart smile smoke smooth snack snake snap sniff snow soap soccer social sock soda soft solar soldier solid solution solve someone song soon sorry sort soul sound soup source south space spare spatial spawn speak special speed spell spend sphere spice spider spike spin spirit split spoil sponsor spoon sport spot spray spread spring spy square squeeze squirrel stable stadium staff stage stairs stamp stand start state stay steak steel stem step stere",
                    "rendered": {
                      "text": "ce sing siren sister situate six size skate sketch ski skill skin skirt skull slab slam sleep slender slice slide slight slim slogan slot slow slush small smart smile smoke smooth snack snake snap sniff snow soap soccer social sock soda soft solar soldier solid solution solve someone song soon sorry sort soul sound soup source south space spare spatial spawn speak special speed spell spend sphere spice spider spike spin spirit split spoil sponsor spoon sport spot spray spread spring spy square squeeze squirrel stable stadium staff stage stairs stamp stand start state stay steak steel stem step stere",
                      "markdown": "`ce sing siren sister situate six size skate sketch ski skill skin skirt skull slab slam sleep slender slice slide slight slim slogan slot slow slush small smart smile smoke smooth snack snake snap sniff snow soap soccer social sock soda soft solar soldier solid solution solve someone song soon sorry sort soul sound soup source south space spare spatial spawn speak special speed spell spend sphere spice spider spike spin spirit split spoil sponsor spoon sport spot spray spread spring spy square squeeze squirrel stable stadium staff stage stairs stamp stand start state stay steak steel stem step stere`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/wordlist.go"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 10155,
                  "endLine": 29,
                  "endColumn": 10164,
                  "snippet": {
                    "text": "on salon salt salute same sample sand satisfy satoshi sauce sausage save say scale scan scare scatter scene scheme school science scissors scorpion scout scrap screen script scrub sea search season seat second secret section security seed seek segment select sell seminar senior sense sentence series service session settle setup seven shadow shaft shallow share shed shell sheriff shield shift shine ship shiver shock shoe shoot shop short shoulder shove shrimp shrug shuffle shy sibling sick side siege sight sign silent silk silly silver similar simple since sing siren sister situate six size skate sketch",
                    "rendered": {
                      "text": "on salon salt salute same sample sand satisfy satoshi sauce sausage save say scale scan scare scatter scene scheme school science scissors scorpion scout scrap screen script scrub sea search season seat second secret section security seed seek segment select sell seminar senior sense sentence series service session settle setup seven shadow shaft shallow share shed shell sheriff shield shift shine ship shiver shock shoe shoot shop short shoulder shove shrimp shrug shuffle shy sibling sick side siege sight sign silent silk silly silver similar simple since sing siren sister situate six size skate sketch",
                      "markdown": "`on salon salt salute same sample sand satisfy satoshi sauce sausage save say scale scan scare scatter scene scheme school science scissors scorpion scout scrap screen script scrub sea search season seat second secret section security seed seek segment select sell seminar senior sense sentence series service session settle setup seven shadow shaft shallow share shed shell sheriff shield shift shine ship shiver shock shoe shoot shop short shoulder shove shrimp shrug shuffle shy sibling sick side siege sight sign silent silk silly silver similar simple since sing siren sister situate six size skate sketch`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/wordlist.go"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 10014,
                  "endLine": 29,
                  "endColumn": 10022,
                  "snippet": {
                    "text": "et romance roof rookie room rose rotate rough round route royal rubber rude rug rule run runway rural sad saddle sadness safe sail salad salmon salon salt salute same sample sand satisfy satoshi sauce sausage save say scale scan scare scatter scene scheme school science scissors scorpion scout scrap screen script scrub sea search season seat second secret section security seed seek segment select sell seminar senior sense sentence series service session settle setup seven shadow shaft shallow share shed shell sheriff shield shift shine ship shiver shock shoe shoot shop short shoulder shove shrimp shru",
                    "rendered": {
                      "text": "et romance roof rookie room rose rotate rough round route royal rubber rude rug rule run runway rural sad saddle sadness safe sail salad salmon salon salt salute same sample sand satisfy satoshi sauce sausage save say scale scan scare scatter scene scheme school science scissors scorpion scout scrap screen script scrub sea search season seat second secret section security seed seek segment select sell seminar senior sense sentence series service session settle setup seven shadow shaft shallow share shed shell sheriff shield shift shine ship shiver shock shoe shoot shop short shoulder shove shrimp shru",
                      "markdown": "`et romance roof rookie room rose rotate rough round route royal rubber rude rug rule run runway rural sad saddle sadness safe sail salad salmon salon salt salute same sample sand satisfy satoshi sauce sausage save say scale scan scare scatter scene scheme school science scissors scorpion scout scrap screen script scrub sea search season seat second secret section security seed seek segment select sell seminar senior sense sentence series service session settle setup seven shadow shaft shallow share shed shell sheriff shield shift shine ship shiver shock shoe shoot shop short shoulder shove shrimp shru`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/wordlist.go"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 7720,
                  "endLine": 29,
                  "endColumn": 7726,
                  "snippet": {
                    "text": " moral more morning mosquito mother motion motor mountain mouse move movie much muffin mule multiply muscle museum mushroom music must mutual myself mystery myth naive name napkin narrow nasty nation nature near neck need negative neglect neither nephew nerve nest net network neutral never news next nice night noble noise nominee noodle normal north nose notable note nothing notice novel now nuclear number nurse nut oak obey object oblige obscure observe obtain obvious occur ocean october odor off offer office often oil okay old olive olympic omit once one onion online only open opera opinion oppose",
                    "rendered": {
                      "text": " moral more morning mosquito mother motion motor mountain mouse move movie much muffin mule multiply muscle museum mushroom music must mutual myself mystery myth naive name napkin narrow nasty nation nature near neck need negative neglect neither nephew nerve nest net network neutral never news next nice night noble noise nominee noodle normal north nose notable note nothing notice novel now nuclear number nurse nut oak obey object oblige obscure observe obtain obvious occur ocean october odor off offer office often oil okay old olive olympic omit once one onion online only open opera opinion oppose",
                      "markdown": "` moral more morning mosquito mother motion motor mountain mouse move movie much muffin mule multiply muscle museum mushroom music must mutual myself mystery myth naive name napkin narrow nasty nation nature near neck need negative neglect neither nephew nerve nest net network neutral never news next nice night noble noise nominee noodle normal north nose notable note nothing notice novel now nuclear number nurse nut oak obey object oblige obscure observe obtain obvious occur ocean october odor off offer office often oil okay old olive olympic omit once one onion online only open opera opinion oppose`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/wordlist.go"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 6925,
                  "endLine": 29,
                  "endColumn": 6931,
                  "snippet": {
                    "text": "ength lens leopard lesson letter level liar liberty library license life lift light like limb limit link lion liquid list little live lizard load loan lobster local lock logic lonely long loop lottery loud lounge love loyal lucky luggage lumber lunar lunch luxury lyrics machine mad magic magnet maid mail main major make mammal man manage mandate mango mansion manual maple marble march margin marine market marriage mask mass master match material math matrix matter maximum maze meadow mean measure meat mechanic medal media melody melt member memory mention menu mercy merge merit merry mesh message me",
                    "rendered": {
                      "text": "ength lens leopard lesson letter level liar liberty library license life lift light like limb limit link lion liquid list little live lizard load loan lobster local lock logic lonely long loop lottery loud lounge love loyal lucky luggage lumber lunar lunch luxury lyrics machine mad magic magnet maid mail main major make mammal man manage mandate mango mansion manual maple marble march margin marine market marriage mask mass master match material math matrix matter maximum maze meadow mean measure meat mechanic medal media melody melt member memory mention menu mercy merge merit merry mesh message me",
                      "markdown": "`ength lens leopard lesson letter level liar liberty library license life lift light like limb limit link lion liquid list little live lizard load loan lobster local lock logic lonely long loop lottery loud lounge love loyal lucky luggage lumber lunar lunch luxury lyrics machine mad magic magnet maid mail main major make mammal man manage mandate mango mansion manual maple marble march margin marine market marriage mask mass master match material math matrix matter maximum maze meadow mean measure meat mechanic medal media melody melt member memory mention menu mercy merge merit merry mesh message me`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/wordlist.go"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 5518,
                  "endLine": 29,
                  "endColumn": 5524,
                  "snippet": {
                    "text": "ove glow glue goat goddess gold good goose gorilla gospel gossip govern gown grab grace grain grant grape grass gravity great green grid grief grit grocery group grow grunt guard guess guide guilt guitar gun gym habit hair half hammer hamster hand happy harbor hard harsh harvest hat have hawk hazard head health heart heavy hedgehog height hello helmet help hen hero hidden high hill hint hip hire history hobby hockey hold hole holiday hollow home honey hood hope horn horror horse hospital host hotel hour hover hub huge human humble humor hundred hungry hunt hurdle hurry hurt husband hybrid ice icon i",
                    "rendered": {
                      "text": "ove glow glue goat goddess gold good goose gorilla gospel gossip govern gown grab grace grain grant grape grass gravity great green grid grief grit grocery group grow grunt guard guess guide guilt guitar gun gym habit hair half hammer hamster hand happy harbor hard harsh harvest hat have hawk hazard head health heart heavy hedgehog height hello helmet help hen hero hidden high hill hint hip hire history hobby hockey hold hole holiday hollow home honey hood hope horn horror horse hospital host hotel hour hover hub huge human humble humor hundred hungry hunt hurdle hurry hurt husband hybrid ice icon i",
                      "markdown": "`ove glow glue goat goddess gold good goose gorilla gospel gossip govern gown grab grace grain grant grape grass gravity great green grid grief grit grocery group grow grunt guard guess guide guilt guitar gun gym habit hair half hammer hamster hand happy harbor hard harsh harvest hat have hawk hazard head health heart heavy hedgehog height hello helmet help hen hero hidden high hill hint hip hire history hobby hockey hold hole holiday hollow home honey hood hope horn horror horse hospital host hotel hour hover hub huge human humble humor hundred hungry hunt hurdle hurry hurt husband hybrid ice icon i`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/wordlist.go"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 4699,
                  "endLine": 29,
                  "endColumn": 4706,
                  "snippet": {
                    "text": " farm fashion fat fatal father fatigue fault favorite feature february federal fee feed feel female fence festival fetch fever few fiber fiction field figure file film filter final find fine finger finish fire firm first fiscal fish fit fitness fix flag flame flash flat flavor flee flight flip float flock floor flower fluid flush fly foam focus fog foil fold follow food foot force forest forget fork fortune forum forward fossil foster found fox fragile frame frequent fresh friend fringe frog front frost frown frozen fruit fuel fun funny furnace fury future gadget gain galaxy gallery game gap garage g",
                    "rendered": {
                      "text": " farm fashion fat fatal father fatigue fault favorite feature february federal fee feed feel female fence festival fetch fever few fiber fiction field figure file film filter final find fine finger finish fire firm first fiscal fish fit fitness fix flag flame flash flat flavor flee flight flip float flock floor flower fluid flush fly foam focus fog foil fold follow food foot force forest forget fork fortune forum forward fossil foster found fox fragile frame frequent fresh friend fringe frog front frost frown frozen fruit fuel fun funny furnace fury future gadget gain galaxy gallery game gap garage g",
                      "markdown": "` farm fashion fat fatal father fatigue fault favorite feature february federal fee feed feel female fence festival fetch fever few fiber fiction field figure file film filter final find fine finger finish fire firm first fiscal fish fit fitness fix flag flame flash flat flavor flee flight flip float flock floor flower fluid flush fly foam focus fog foil fold follow food foot force forest forget fork fortune forum forward fossil foster found fox fragile frame frequent fresh friend fringe frog front frost frown frozen fruit fuel fun funny furnace fury future gadget gain galaxy gallery game gap garage g`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/wordlist.go"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 4589,
                  "endLine": 29,
                  "endColumn": 4597,
                  "snippet": {
                    "text": " extend extra eye eyebrow fabric face faculty fade faint faith fall false fame family famous fan fancy fantasy farm fashion fat fatal father fatigue fault favorite feature february federal fee feed feel female fence festival fetch fever few fiber fiction field figure file film filter final find fine finger finish fire firm first fiscal fish fit fitness fix flag flame flash flat flavor flee flight flip float flock floor flower fluid flush fly foam focus fog foil fold follow food foot force forest forget fork fortune forum forward fossil foster found fox fragile frame frequent fresh friend fringe frog f",
                    "rendered": {
                      "text": " extend extra eye eyebrow fabric face faculty fade faint faith fall false fame family famous fan fancy fantasy farm fashion fat fatal father fatigue fault favorite feature february federal fee feed feel female fence festival fetch fever few fiber fiction field figure file film filter final find fine finger finish fire firm first fiscal fish fit fitness fix flag flame flash flat flavor flee flight flip float flock floor flower fluid flush fly foam focus fog foil fold follow food foot force forest forget fork fortune forum forward fossil foster found fox fragile frame frequent fresh friend fringe frog f",
                      "markdown": "` extend extra eye eyebrow fabric face faculty fade faint faith fall false fame family famous fan fancy fantasy farm fashion fat fatal father fatigue fault favorite feature february federal fee feed feel female fence festival fetch fever few fiber fiction field figure file film filter final find fine finger finish fire firm first fiscal fish fit fitness fix flag flame flash flat flavor flee flight flip float flock floor flower fluid flush fly foam focus fog foil fold follow food foot force forest forget fork fortune forum forward fossil foster found fox fragile frame frequent fresh friend fringe frog f`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/wordlist.go"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 4579,
                  "endLine": 29,
                  "endColumn": 4585,
                  "snippet": {
                    "text": "se express extend extra eye eyebrow fabric face faculty fade faint faith fall false fame family famous fan fancy fantasy farm fashion fat fatal father fatigue fault favorite feature february federal fee feed feel female fence festival fetch fever few fiber fiction field figure file film filter final find fine finger finish fire firm first fiscal fish fit fitness fix flag flame flash flat flavor flee flight flip float flock floor flower fluid flush fly foam focus fog foil fold follow food foot force forest forget fork fortune forum forward fossil foster found fox fragile frame frequent fresh friend f",
                    "rendered": {
                      "text": "se express extend extra eye eyebrow fabric face faculty fade faint faith fall false fame family famous fan fancy fantasy farm fashion fat fatal father fatigue fault favorite feature february federal fee feed feel female fence festival fetch fever few fiber fiction field figure file film filter final find fine finger finish fire firm first fiscal fish fit fitness fix flag flame flash flat flavor flee flight flip float flock floor flower fluid flush fly foam focus fog foil fold follow food foot force forest forget fork fortune forum forward fossil foster found fox fragile frame frequent fresh friend f",
                      "markdown": "`se express extend extra eye eyebrow fabric face faculty fade faint faith fall false fame family famous fan fancy fantasy farm fashion fat fatal father fatigue fault favorite feature february federal fee feed feel female fence festival fetch fever few fiber fiction field figure file film filter final find fine finger finish fire firm first fiscal fish fit fitness fix flag flame flash flat flavor flee flight flip float flock floor flower fluid flush fly foam focus fog foil fold follow food foot force forest forget fork fortune forum forward fossil foster found fox fragile frame frequent fresh friend f`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/wordlist.go"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 4245,
                  "endLine": 29,
                  "endColumn": 4253,
                  "snippet": {
                    "text": "oy enlist enough enrich enroll ensure enter entire entry envelope episode equal equip era erase erode erosion error erupt escape essay essence estate eternal ethics evidence evil evoke evolve exact example excess exchange excite exclude excuse execute exercise exhaust exhibit exile exist exit exotic expand expect expire explain expose express extend extra eye eyebrow fabric face faculty fade faint faith fall false fame family famous fan fancy fantasy farm fashion fat fatal father fatigue fault favorite feature february federal fee feed feel female fence festival fetch fever few fiber fiction field fig",
                    "rendered": {
                      "text": "oy enlist enough enrich enroll ensure enter entire entry envelope episode equal equip era erase erode erosion error erupt escape essay essence estate eternal ethics evidence evil evoke evolve exact example excess exchange excite exclude excuse execute exercise exhaust exhibit exile exist exit exotic expand expect expire explain expose express extend extra eye eyebrow fabric face faculty fade faint faith fall false fame family famous fan fancy fantasy farm fashion fat fatal father fatigue fault favorite feature february federal fee feed feel female fence festival fetch fever few fiber fiction field fig",
                      "markdown": "`oy enlist enough enrich enroll ensure enter entire entry envelope episode equal equip era erase erode erosion error erupt escape essay essence estate eternal ethics evidence evil evoke evolve exact example excess exchange excite exclude excuse execute exercise exhaust exhibit exile exist exit exotic expand expect expire explain expose express extend extra eye eyebrow fabric face faculty fade faint faith fall false fame family famous fan fancy fantasy farm fashion fat fatal father fatigue fault favorite feature february federal fee feed feel female fence festival fetch fever few fiber fiction field fig`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/wordlist.go"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 2922,
                  "endLine": 29,
                  "endColumn": 2928,
                  "snippet": {
                    "text": "rack cradle craft cram crane crash crater crawl crazy cream credit creek crew cricket crime crisp critic crop cross crouch crowd crucial cruel cruise crumble crunch crush cry crystal cube culture cup cupboard curious current curtain curve cushion custom cute cycle dad damage damp dance danger daring dash daughter dawn day deal debate debris decade december decide decline decorate decrease deer defense define defy degree delay deliver demand demise denial dentist deny depart depend deposit depth deputy derive describe desert design desk despair destroy detail detect develop device devote diagram dial",
                    "rendered": {
                      "text": "rack cradle craft cram crane crash crater crawl crazy cream credit creek crew cricket crime crisp critic crop cross crouch crowd crucial cruel cruise crumble crunch crush cry crystal cube culture cup cupboard curious current curtain curve cushion custom cute cycle dad damage damp dance danger daring dash daughter dawn day deal debate debris decade december decide decline decorate decrease deer defense define defy degree delay deliver demand demise denial dentist deny depart depend deposit depth deputy derive describe desert design desk despair destroy detail detect develop device devote diagram dial",
                      "markdown": "`rack cradle craft cram crane crash crater crawl crazy cream credit creek crew cricket crime crisp critic crop cross crouch crowd crucial cruel cruise crumble crunch crush cry crystal cube culture cup cupboard curious current curtain curve cushion custom cute cycle dad damage damp dance danger daring dash daughter dawn day deal debate debris decade december decide decline decorate decrease deer defense define defy degree delay deliver demand demise denial dentist deny depart depend deposit depth deputy derive describe desert design desk despair destroy detail detect develop device devote diagram dial`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/wordlist.go"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 1876,
                  "endLine": 29,
                  "endColumn": 1881,
                  "snippet": {
                    "text": "alo build bulb bulk bullet bundle bunker burden burger burst bus business busy butter buyer buzz cabbage cabin cable cactus cage cake call calm camera camp can canal cancel candy cannon canoe canvas canyon capable capital captain car carbon card cargo carpet carry cart case cash casino castle casual cat catalog catch category cattle caught cause caution cave ceiling celery cement census century cereal certain chair chalk champion change chaos chapter charge chase chat cheap check cheese chef cherry chest chicken chief child chimney choice choose chronic chuckle chunk churn cigar cinnamon circle cit",
                    "rendered": {
                      "text": "alo build bulb bulk bullet bundle bunker burden burger burst bus business busy butter buyer buzz cabbage cabin cable cactus cage cake call calm camera camp can canal cancel candy cannon canoe canvas canyon capable capital captain car carbon card cargo carpet carry cart case cash casino castle casual cat catalog catch category cattle caught cause caution cave ceiling celery cement census century cereal certain chair chalk champion change chaos chapter charge chase chat cheap check cheese chef cherry chest chicken chief child chimney choice choose chronic chuckle chunk churn cigar cinnamon circle cit",
                      "markdown": "`alo build bulb bulk bullet bundle bunker burden burger burst bus business busy butter buyer buzz cabbage cabin cable cactus cage cake call calm camera camp can canal cancel candy cannon canoe canvas canyon capable capital captain car carbon card cargo carpet carry cart case cash casino castle casual cat catalog catch category cattle caught cause caution cave ceiling celery cement census century cereal certain chair chalk champion change chaos chapter charge chase chat cheap check cheese chef cherry chest chicken chief child chimney choice choose chronic chuckle chunk churn cigar cinnamon circle cit`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.ronn"
                },
                "region": {
                  "startLine": 295,
                  "startColumn": 18,
                  "endLine": 295,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\n    $ age -R ~/.ssh/id_ed25519.pub example.jpg > example.jpg.age\n\n    $ age -d -i ~/.ssh/id_ed25519 example.jpg.age > example.jpg\n\nEncrypt and decrypt with age-plugin-yubikey:\n\n",
                    "rendered": {
                      "text": "\n    $ age -R ~/.ssh/id_ed25519.pub example.jpg > example.jpg.age\n\n    $ age -d -i ~/.ssh/id_ed25519 example.jpg.age > example.jpg\n\nEncrypt and decrypt with age-plugin-yubikey:\n\n",
                      "markdown": "`\n    $ age -R ~/.ssh/id_ed25519.pub example.jpg > example.jpg.age\n\n    $ age -d -i ~/.ssh/id_ed25519 example.jpg.age > example.jpg\n\nEncrypt and decrypt with age-plugin-yubikey:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.ronn"
                },
                "region": {
                  "startLine": 293,
                  "startColumn": 15,
                  "endLine": 293,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\nEncrypt and decrypt with an SSH public key:\n\n    $ age -R ~/.ssh/id_ed25519.pub example.jpg > example.jpg.age\n\n    $ age -d -i ~/.ssh/id_ed25519 example.jpg.age > example.jpg\n\n",
                    "rendered": {
                      "text": "\nEncrypt and decrypt with an SSH public key:\n\n    $ age -R ~/.ssh/id_ed25519.pub example.jpg > example.jpg.age\n\n    $ age -d -i ~/.ssh/id_ed25519 example.jpg.age > example.jpg\n\n",
                      "markdown": "`\nEncrypt and decrypt with an SSH public key:\n\n    $ age -R ~/.ssh/id_ed25519.pub example.jpg > example.jpg.age\n\n    $ age -d -i ~/.ssh/id_ed25519 example.jpg.age > example.jpg\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.ronn"
                },
                "region": {
                  "startLine": 223,
                  "startColumn": 30,
                  "endLine": 223,
                  "endColumn": 38,
                  "snippet": {
                    "text": "(such as a symmetric encryption plugin) may generate only an `IDENTITY` and\ninstruct the user to perform encryption with the `-e`/`--encrypt` and\n`-i`/`--identity` flags. Plugins for which the concept of separate identities\ndoesn't make sense (such as a password-encryption plugin) may instruct the user\nto use the `-j` flag.\n\n## EXIT STATUS\n",
                    "rendered": {
                      "text": "(such as a symmetric encryption plugin) may generate only an `IDENTITY` and\ninstruct the user to perform encryption with the `-e`/`--encrypt` and\n`-i`/`--identity` flags. Plugins for which the concept of separate identities\ndoesn't make sense (such as a password-encryption plugin) may instruct the user\nto use the `-j` flag.\n\n## EXIT STATUS\n",
                      "markdown": "`(such as a symmetric encryption plugin) may generate only an `IDENTITY` and\ninstruct the user to perform encryption with the `-e`/`--encrypt` and\n`-i`/`--identity` flags. Plugins for which the concept of separate identities\ndoesn't make sense (such as a password-encryption plugin) may instruct the user\nto use the `-j` flag.\n\n## EXIT STATUS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.ronn"
                },
                "region": {
                  "startLine": 196,
                  "startColumn": 15,
                  "endLine": 196,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nAn encrypted file _can_ be linked to the SSH public key it was encrypted to.\nThis is so that `age` can identify the correct SSH private key before\nrequesting its password, if any.\n\n### Plugins\n\n",
                    "rendered": {
                      "text": "\nAn encrypted file _can_ be linked to the SSH public key it was encrypted to.\nThis is so that `age` can identify the correct SSH private key before\nrequesting its password, if any.\n\n### Plugins\n\n",
                      "markdown": "`\nAn encrypted file _can_ be linked to the SSH public key it was encrypted to.\nThis is so that `age` can identify the correct SSH private key before\nrequesting its password, if any.\n\n### Plugins\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.ronn"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 1,
                  "endLine": 188,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\nIn recipient files passed to `-R`/`--recipients-file`, unsupported but valid\nSSH public keys are ignored with a warning, to facilitate using\n`authorized_keys` or GitHub `.keys` files. (See [EXAMPLES][].)\n\nAn `IDENTITY` is an SSH private key _file_ passed individually to\n`-i`/`--identity`. Note that keys held on hardware tokens such as YubiKeys\n",
                    "rendered": {
                      "text": "\nIn recipient files passed to `-R`/`--recipients-file`, unsupported but valid\nSSH public keys are ignored with a warning, to facilitate using\n`authorized_keys` or GitHub `.keys` files. (See [EXAMPLES][].)\n\nAn `IDENTITY` is an SSH private key _file_ passed individually to\n`-i`/`--identity`. Note that keys held on hardware tokens such as YubiKeys\n",
                      "markdown": "`\nIn recipient files passed to `-R`/`--recipients-file`, unsupported but valid\nSSH public keys are ignored with a warning, to facilitate using\n`authorized_keys` or GitHub `.keys` files. (See [EXAMPLES][].)\n\nAn `IDENTITY` is an SSH private key _file_ passed individually to\n`-i`/`--identity`. Note that keys held on hardware tokens such as YubiKeys\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.ronn"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 10,
                  "endLine": 178,
                  "endColumn": 25,
                  "snippet": {
                    "text": "recipient, since they are revokable when used only for authentication.\n\nA `RECIPIENT` encoding is an SSH public key in `authorized_keys` format\n(see the `AUTHORIZED_KEYS FILE FORMAT` section of sshd(8)), starting with\n`ssh-rsa` or `ssh-ed25519`, like the following:\n\n    ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDULTit0KUehbi[...]GU4BtElAbzh8=\n",
                    "rendered": {
                      "text": "recipient, since they are revokable when used only for authentication.\n\nA `RECIPIENT` encoding is an SSH public key in `authorized_keys` format\n(see the `AUTHORIZED_KEYS FILE FORMAT` section of sshd(8)), starting with\n`ssh-rsa` or `ssh-ed25519`, like the following:\n\n    ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDULTit0KUehbi[...]GU4BtElAbzh8=\n",
                      "markdown": "`recipient, since they are revokable when used only for authentication.\n\nA `RECIPIENT` encoding is an SSH public key in `authorized_keys` format\n(see the `AUTHORIZED_KEYS FILE FORMAT` section of sshd(8)), starting with\n`ssh-rsa` or `ssh-ed25519`, like the following:\n\n    ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDULTit0KUehbi[...]GU4BtElAbzh8=\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.ronn"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 48,
                  "endLine": 177,
                  "endColumn": 63,
                  "snippet": {
                    "text": "for the recipient. Note that SSH keys might not be protected long-term by the\nrecipient, since they are revokable when used only for authentication.\n\nA `RECIPIENT` encoding is an SSH public key in `authorized_keys` format\n(see the `AUTHORIZED_KEYS FILE FORMAT` section of sshd(8)), starting with\n`ssh-rsa` or `ssh-ed25519`, like the following:\n\n",
                    "rendered": {
                      "text": "for the recipient. Note that SSH keys might not be protected long-term by the\nrecipient, since they are revokable when used only for authentication.\n\nA `RECIPIENT` encoding is an SSH public key in `authorized_keys` format\n(see the `AUTHORIZED_KEYS FILE FORMAT` section of sshd(8)), starting with\n`ssh-rsa` or `ssh-ed25519`, like the following:\n\n",
                      "markdown": "`for the recipient. Note that SSH keys might not be protected long-term by the\nrecipient, since they are revokable when used only for authentication.\n\nA `RECIPIENT` encoding is an SSH public key in `authorized_keys` format\n(see the `AUTHORIZED_KEYS FILE FORMAT` section of sshd(8)), starting with\n`ssh-rsa` or `ssh-ed25519`, like the following:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.ronn"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 50,
                  "endLine": 127,
                  "endColumn": 58,
                  "snippet": {
                    "text": "    encrypted identity file implies access to the whole system.\n\n    c\\. An SSH private key file, in PKCS#1, PKCS#8, or OpenSSH format.\n    If the private key is password-protected, the password is requested\n    interactively only if the SSH identity matches the file. See the\n    [SSH keys][] section for more information, including supported key types.\n\n",
                    "rendered": {
                      "text": "    encrypted identity file implies access to the whole system.\n\n    c\\. An SSH private key file, in PKCS#1, PKCS#8, or OpenSSH format.\n    If the private key is password-protected, the password is requested\n    interactively only if the SSH identity matches the file. See the\n    [SSH keys][] section for more information, including supported key types.\n\n",
                      "markdown": "`    encrypted identity file implies access to the whole system.\n\n    c\\. An SSH private key file, in PKCS#1, PKCS#8, or OpenSSH format.\n    If the private key is password-protected, the password is requested\n    interactively only if the SSH identity matches the file. See the\n    [SSH keys][] section for more information, including supported key types.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.ronn"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 26,
                  "endLine": 127,
                  "endColumn": 34,
                  "snippet": {
                    "text": "    encrypted identity file implies access to the whole system.\n\n    c\\. An SSH private key file, in PKCS#1, PKCS#8, or OpenSSH format.\n    If the private key is password-protected, the password is requested\n    interactively only if the SSH identity matches the file. See the\n    [SSH keys][] section for more information, including supported key types.\n\n",
                    "rendered": {
                      "text": "    encrypted identity file implies access to the whole system.\n\n    c\\. An SSH private key file, in PKCS#1, PKCS#8, or OpenSSH format.\n    If the private key is password-protected, the password is requested\n    interactively only if the SSH identity matches the file. See the\n    [SSH keys][] section for more information, including supported key types.\n\n",
                      "markdown": "`    encrypted identity file implies access to the whole system.\n\n    c\\. An SSH private key file, in PKCS#1, PKCS#8, or OpenSSH format.\n    If the private key is password-protected, the password is requested\n    interactively only if the SSH identity matches the file. See the\n    [SSH keys][] section for more information, including supported key types.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.ronn"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 23,
                  "endLine": 74,
                  "endColumn": 29,
                  "snippet": {
                    "text": "    Encrypt to an ASCII-only \"armored\" encoding.\n\n    `age` armor is a strict version of PEM with type `AGE ENCRYPTED FILE`,\n    canonical \"strict\" Base64, no headers, and no support for leading and\n    trailing extra data.\n\n    Decryption transparently detects and decodes ASCII armoring.\n",
                    "rendered": {
                      "text": "    Encrypt to an ASCII-only \"armored\" encoding.\n\n    `age` armor is a strict version of PEM with type `AGE ENCRYPTED FILE`,\n    canonical \"strict\" Base64, no headers, and no support for leading and\n    trailing extra data.\n\n    Decryption transparently detects and decodes ASCII armoring.\n",
                      "markdown": "`    Encrypt to an ASCII-only \"armored\" encoding.\n\n    `age` armor is a strict version of PEM with type `AGE ENCRYPTED FILE`,\n    canonical \"strict\" Base64, no headers, and no support for leading and\n    trailing extra data.\n\n    Decryption transparently detects and decodes ASCII armoring.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.ronn"
                },
                "region": {
                  "startLine": 184,
                  "startColumn": 11,
                  "endLine": 184,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDULTit0KUehbi[...]GU4BtElAbzh8=\n    ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIH9pO5pz22JZEas[...]l1uZc31FGYMXa\n\nThe comment at the end of the line, if present, is ignored.\n\nIn recipient files passed to `-R`/`--recipients-file`, unsupported but valid\nSSH public keys are ignored with a warning, to facilitate using\n",
                    "rendered": {
                      "text": "    ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDULTit0KUehbi[...]GU4BtElAbzh8=\n    ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIH9pO5pz22JZEas[...]l1uZc31FGYMXa\n\nThe comment at the end of the line, if present, is ignored.\n\nIn recipient files passed to `-R`/`--recipients-file`, unsupported but valid\nSSH public keys are ignored with a warning, to facilitate using\n",
                      "markdown": "`    ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDULTit0KUehbi[...]GU4BtElAbzh8=\n    ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIH9pO5pz22JZEas[...]l1uZc31FGYMXa\n\nThe comment at the end of the line, if present, is ignored.\n\nIn recipient files passed to `-R`/`--recipients-file`, unsupported but valid\nSSH public keys are ignored with a warning, to facilitate using\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.ronn"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 29,
                  "endLine": 172,
                  "endColumn": 33,
                  "snippet": {
                    "text": "### SSH keys\n\nAs a convenience feature, `age` also supports encrypting to RSA or Ed25519\nssh(1) keys. RSA keys must be at least 2048 bits. This feature employs more\ncomplex cryptography, and should only be used when a native key is not available\nfor the recipient. Note that SSH keys might not be protected long-term by the\nrecipient, since they are revokable when used only for authentication.\n",
                    "rendered": {
                      "text": "### SSH keys\n\nAs a convenience feature, `age` also supports encrypting to RSA or Ed25519\nssh(1) keys. RSA keys must be at least 2048 bits. This feature employs more\ncomplex cryptography, and should only be used when a native key is not available\nfor the recipient. Note that SSH keys might not be protected long-term by the\nrecipient, since they are revokable when used only for authentication.\n",
                      "markdown": "`### SSH keys\n\nAs a convenience feature, `age` also supports encrypting to RSA or Ed25519\nssh(1) keys. RSA keys must be at least 2048 bits. This feature employs more\ncomplex cryptography, and should only be used when a native key is not available\nfor the recipient. Note that SSH keys might not be protected long-term by the\nrecipient, since they are revokable when used only for authentication.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.ronn"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 61,
                  "endLine": 113,
                  "endColumn": 65,
                  "snippet": {
                    "text": "    ASCII armoring is transparently detected and decoded.\n\n* `-i`, `--identity`=<PATH>:\n    Decrypt using the [IDENTITIES][RECIPIENTS AND IDENTITIES] at <PATH>.\n\n    <PATH> may be one of the following:\n\n",
                    "rendered": {
                      "text": "    ASCII armoring is transparently detected and decoded.\n\n* `-i`, `--identity`=<PATH>:\n    Decrypt using the [IDENTITIES][RECIPIENTS AND IDENTITIES] at <PATH>.\n\n    <PATH> may be one of the following:\n\n",
                      "markdown": "`    ASCII armoring is transparently detected and decoded.\n\n* `-i`, `--identity`=<PATH>:\n    Decrypt using the [IDENTITIES][RECIPIENTS AND IDENTITIES] at <PATH>.\n\n    <PATH> may be one of the following:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.ronn"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 40,
                  "endLine": 82,
                  "endColumn": 44,
                  "snippet": {
                    "text": "* `-i`, `--identity`=<PATH>:\n    Encrypt to the [RECIPIENTS][RECIPIENTS AND IDENTITIES] corresponding to the\n    [IDENTITIES][RECIPIENTS AND IDENTITIES] listed in the file at <PATH>. This\n    is equivalent to converting the file at <PATH> to a recipients file with\n    `age-keygen -y` and then passing that to `-R`/`--recipients-file`.\n\n    For the format of <PATH>, see the definition of `-i`/`--identity` in the\n",
                    "rendered": {
                      "text": "* `-i`, `--identity`=<PATH>:\n    Encrypt to the [RECIPIENTS][RECIPIENTS AND IDENTITIES] corresponding to the\n    [IDENTITIES][RECIPIENTS AND IDENTITIES] listed in the file at <PATH>. This\n    is equivalent to converting the file at <PATH> to a recipients file with\n    `age-keygen -y` and then passing that to `-R`/`--recipients-file`.\n\n    For the format of <PATH>, see the definition of `-i`/`--identity` in the\n",
                      "markdown": "`* `-i`, `--identity`=<PATH>:\n    Encrypt to the [RECIPIENTS][RECIPIENTS AND IDENTITIES] corresponding to the\n    [IDENTITIES][RECIPIENTS AND IDENTITIES] listed in the file at <PATH>. This\n    is equivalent to converting the file at <PATH> to a recipients file with\n    `age-keygen -y` and then passing that to `-R`/`--recipients-file`.\n\n    For the format of <PATH>, see the definition of `-i`/`--identity` in the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.ronn"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 62,
                  "endLine": 81,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\n* `-i`, `--identity`=<PATH>:\n    Encrypt to the [RECIPIENTS][RECIPIENTS AND IDENTITIES] corresponding to the\n    [IDENTITIES][RECIPIENTS AND IDENTITIES] listed in the file at <PATH>. This\n    is equivalent to converting the file at <PATH> to a recipients file with\n    `age-keygen -y` and then passing that to `-R`/`--recipients-file`.\n\n",
                    "rendered": {
                      "text": "\n* `-i`, `--identity`=<PATH>:\n    Encrypt to the [RECIPIENTS][RECIPIENTS AND IDENTITIES] corresponding to the\n    [IDENTITIES][RECIPIENTS AND IDENTITIES] listed in the file at <PATH>. This\n    is equivalent to converting the file at <PATH> to a recipients file with\n    `age-keygen -y` and then passing that to `-R`/`--recipients-file`.\n\n",
                      "markdown": "`\n* `-i`, `--identity`=<PATH>:\n    Encrypt to the [RECIPIENTS][RECIPIENTS AND IDENTITIES] corresponding to the\n    [IDENTITIES][RECIPIENTS AND IDENTITIES] listed in the file at <PATH>. This\n    is equivalent to converting the file at <PATH> to a recipients file with\n    `age-keygen -y` and then passing that to `-R`/`--recipients-file`.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.ronn"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 8,
                  "endLine": 55,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n* `-R`, `--recipients-file`=<PATH>:\n    Encrypt to the [RECIPIENTS][RECIPIENTS AND IDENTITIES] listed in the\n    file at <PATH>, one per line. Empty lines and lines starting with `#`\n    are ignored as comments.\n\n    If <PATH> is `-`, the recipients are read from standard input. In\n",
                    "rendered": {
                      "text": "\n* `-R`, `--recipients-file`=<PATH>:\n    Encrypt to the [RECIPIENTS][RECIPIENTS AND IDENTITIES] listed in the\n    file at <PATH>, one per line. Empty lines and lines starting with `#`\n    are ignored as comments.\n\n    If <PATH> is `-`, the recipients are read from standard input. In\n",
                      "markdown": "`\n* `-R`, `--recipients-file`=<PATH>:\n    Encrypt to the [RECIPIENTS][RECIPIENTS AND IDENTITIES] listed in the\n    file at <PATH>, one per line. Empty lines and lines starting with `#`\n    are ignored as comments.\n\n    If <PATH> is `-`, the recipients are read from standard input. In\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.ronn"
                },
                "region": {
                  "startLine": 307,
                  "startColumn": 5,
                  "endLine": 307,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\nEncrypt to the SSH keys of a GitHub user:\n\n    $ curl https://github.com/benjojo.keys | age -R - example.jpg > example.jpg.age\n\n## SEE ALSO\n\n",
                    "rendered": {
                      "text": "\nEncrypt to the SSH keys of a GitHub user:\n\n    $ curl https://github.com/benjojo.keys | age -R - example.jpg > example.jpg.age\n\n## SEE ALSO\n\n",
                      "markdown": "`\nEncrypt to the SSH keys of a GitHub user:\n\n    $ curl https://github.com/benjojo.keys | age -R - example.jpg > example.jpg.age\n\n## SEE ALSO\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.ronn"
                },
                "region": {
                  "startLine": 305,
                  "startColumn": 14,
                  "endLine": 305,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\n    $ age -d -i age-yubikey-identity-388178f3.txt secrets.txt.age\n\nEncrypt to the SSH keys of a GitHub user:\n\n    $ curl https://github.com/benjojo.keys | age -R - example.jpg > example.jpg.age\n\n",
                    "rendered": {
                      "text": "\n    $ age -d -i age-yubikey-identity-388178f3.txt secrets.txt.age\n\nEncrypt to the SSH keys of a GitHub user:\n\n    $ curl https://github.com/benjojo.keys | age -R - example.jpg > example.jpg.age\n\n",
                      "markdown": "`\n    $ age -d -i age-yubikey-identity-388178f3.txt secrets.txt.age\n\nEncrypt to the SSH keys of a GitHub user:\n\n    $ curl https://github.com/benjojo.keys | age -R - example.jpg > example.jpg.age\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.ronn"
                },
                "region": {
                  "startLine": 291,
                  "startColumn": 27,
                  "endLine": 291,
                  "endColumn": 32,
                  "snippet": {
                    "text": "    $ age -d -i key.age secrets.txt.age > secrets.txt\n    Enter passphrase for identity file \"key.age\":\n\nEncrypt and decrypt with an SSH public key:\n\n    $ age -R ~/.ssh/id_ed25519.pub example.jpg > example.jpg.age\n\n",
                    "rendered": {
                      "text": "    $ age -d -i key.age secrets.txt.age > secrets.txt\n    Enter passphrase for identity file \"key.age\":\n\nEncrypt and decrypt with an SSH public key:\n\n    $ age -R ~/.ssh/id_ed25519.pub example.jpg > example.jpg.age\n\n",
                      "markdown": "`    $ age -d -i key.age secrets.txt.age > secrets.txt\n    Enter passphrase for identity file \"key.age\":\n\nEncrypt and decrypt with an SSH public key:\n\n    $ age -R ~/.ssh/id_ed25519.pub example.jpg > example.jpg.age\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.ronn"
                },
                "region": {
                  "startLine": 262,
                  "startColumn": 5,
                  "endLine": 262,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\nEncrypt to a list of recipients:\n\n    $ cat > recipients.txt\n    # Alice\n    age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p\n    # Bob\n",
                    "rendered": {
                      "text": "\nEncrypt to a list of recipients:\n\n    $ cat > recipients.txt\n    # Alice\n    age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p\n    # Bob\n",
                      "markdown": "`\nEncrypt to a list of recipients:\n\n    $ cat > recipients.txt\n    # Alice\n    age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p\n    # Bob\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.ronn"
                },
                "region": {
                  "startLine": 251,
                  "startColumn": 5,
                  "endLine": 251,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    $ age-keygen -o key.txt\n    Public key: age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p\n\n    $ tar cvz ~/data | age -r age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p > data.tar.gz.age\n\n    $ age -d -o data.tar.gz -i key.txt data.tar.gz.age\n\n",
                    "rendered": {
                      "text": "    $ age-keygen -o key.txt\n    Public key: age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p\n\n    $ tar cvz ~/data | age -r age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p > data.tar.gz.age\n\n    $ age -d -o data.tar.gz -i key.txt data.tar.gz.age\n\n",
                      "markdown": "`    $ age-keygen -o key.txt\n    Public key: age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p\n\n    $ tar cvz ~/data | age -r age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p > data.tar.gz.age\n\n    $ age -d -o data.tar.gz -i key.txt data.tar.gz.age\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.ronn"
                },
                "region": {
                  "startLine": 195,
                  "startColumn": 46,
                  "endLine": 195,
                  "endColumn": 51,
                  "snippet": {
                    "text": "or accessed via ssh-agent(1) are not supported.\n\nAn encrypted file _can_ be linked to the SSH public key it was encrypted to.\nThis is so that `age` can identify the correct SSH private key before\nrequesting its password, if any.\n\n### Plugins\n",
                    "rendered": {
                      "text": "or accessed via ssh-agent(1) are not supported.\n\nAn encrypted file _can_ be linked to the SSH public key it was encrypted to.\nThis is so that `age` can identify the correct SSH private key before\nrequesting its password, if any.\n\n### Plugins\n",
                      "markdown": "`or accessed via ssh-agent(1) are not supported.\n\nAn encrypted file _can_ be linked to the SSH public key it was encrypted to.\nThis is so that `age` can identify the correct SSH private key before\nrequesting its password, if any.\n\n### Plugins\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.ronn"
                },
                "region": {
                  "startLine": 194,
                  "startColumn": 40,
                  "endLine": 194,
                  "endColumn": 45,
                  "snippet": {
                    "text": "`-i`/`--identity`. Note that keys held on hardware tokens such as YubiKeys\nor accessed via ssh-agent(1) are not supported.\n\nAn encrypted file _can_ be linked to the SSH public key it was encrypted to.\nThis is so that `age` can identify the correct SSH private key before\nrequesting its password, if any.\n\n",
                    "rendered": {
                      "text": "`-i`/`--identity`. Note that keys held on hardware tokens such as YubiKeys\nor accessed via ssh-agent(1) are not supported.\n\nAn encrypted file _can_ be linked to the SSH public key it was encrypted to.\nThis is so that `age` can identify the correct SSH private key before\nrequesting its password, if any.\n\n",
                      "markdown": "``-i`/`--identity`. Note that keys held on hardware tokens such as YubiKeys\nor accessed via ssh-agent(1) are not supported.\n\nAn encrypted file _can_ be linked to the SSH public key it was encrypted to.\nThis is so that `age` can identify the correct SSH private key before\nrequesting its password, if any.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.ronn"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 19,
                  "endLine": 190,
                  "endColumn": 24,
                  "snippet": {
                    "text": "SSH public keys are ignored with a warning, to facilitate using\n`authorized_keys` or GitHub `.keys` files. (See [EXAMPLES][].)\n\nAn `IDENTITY` is an SSH private key _file_ passed individually to\n`-i`/`--identity`. Note that keys held on hardware tokens such as YubiKeys\nor accessed via ssh-agent(1) are not supported.\n\n",
                    "rendered": {
                      "text": "SSH public keys are ignored with a warning, to facilitate using\n`authorized_keys` or GitHub `.keys` files. (See [EXAMPLES][].)\n\nAn `IDENTITY` is an SSH private key _file_ passed individually to\n`-i`/`--identity`. Note that keys held on hardware tokens such as YubiKeys\nor accessed via ssh-agent(1) are not supported.\n\n",
                      "markdown": "`SSH public keys are ignored with a warning, to facilitate using\n`authorized_keys` or GitHub `.keys` files. (See [EXAMPLES][].)\n\nAn `IDENTITY` is an SSH private key _file_ passed individually to\n`-i`/`--identity`. Note that keys held on hardware tokens such as YubiKeys\nor accessed via ssh-agent(1) are not supported.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.ronn"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 76,
                  "endLine": 187,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nThe comment at the end of the line, if present, is ignored.\n\nIn recipient files passed to `-R`/`--recipients-file`, unsupported but valid\nSSH public keys are ignored with a warning, to facilitate using\n`authorized_keys` or GitHub `.keys` files. (See [EXAMPLES][].)\n\nAn `IDENTITY` is an SSH private key _file_ passed individually to\n",
                    "rendered": {
                      "text": "\nThe comment at the end of the line, if present, is ignored.\n\nIn recipient files passed to `-R`/`--recipients-file`, unsupported but valid\nSSH public keys are ignored with a warning, to facilitate using\n`authorized_keys` or GitHub `.keys` files. (See [EXAMPLES][].)\n\nAn `IDENTITY` is an SSH private key _file_ passed individually to\n",
                      "markdown": "`\nThe comment at the end of the line, if present, is ignored.\n\nIn recipient files passed to `-R`/`--recipients-file`, unsupported but valid\nSSH public keys are ignored with a warning, to facilitate using\n`authorized_keys` or GitHub `.keys` files. (See [EXAMPLES][].)\n\nAn `IDENTITY` is an SSH private key _file_ passed individually to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.ronn"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 28,
                  "endLine": 177,
                  "endColumn": 33,
                  "snippet": {
                    "text": "for the recipient. Note that SSH keys might not be protected long-term by the\nrecipient, since they are revokable when used only for authentication.\n\nA `RECIPIENT` encoding is an SSH public key in `authorized_keys` format\n(see the `AUTHORIZED_KEYS FILE FORMAT` section of sshd(8)), starting with\n`ssh-rsa` or `ssh-ed25519`, like the following:\n\n",
                    "rendered": {
                      "text": "for the recipient. Note that SSH keys might not be protected long-term by the\nrecipient, since they are revokable when used only for authentication.\n\nA `RECIPIENT` encoding is an SSH public key in `authorized_keys` format\n(see the `AUTHORIZED_KEYS FILE FORMAT` section of sshd(8)), starting with\n`ssh-rsa` or `ssh-ed25519`, like the following:\n\n",
                      "markdown": "`for the recipient. Note that SSH keys might not be protected long-term by the\nrecipient, since they are revokable when used only for authentication.\n\nA `RECIPIENT` encoding is an SSH public key in `authorized_keys` format\n(see the `AUTHORIZED_KEYS FILE FORMAT` section of sshd(8)), starting with\n`ssh-rsa` or `ssh-ed25519`, like the following:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.ronn"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 28,
                  "endLine": 174,
                  "endColumn": 33,
                  "snippet": {
                    "text": "As a convenience feature, `age` also supports encrypting to RSA or Ed25519\nssh(1) keys. RSA keys must be at least 2048 bits. This feature employs more\ncomplex cryptography, and should only be used when a native key is not available\nfor the recipient. Note that SSH keys might not be protected long-term by the\nrecipient, since they are revokable when used only for authentication.\n\nA `RECIPIENT` encoding is an SSH public key in `authorized_keys` format\n",
                    "rendered": {
                      "text": "As a convenience feature, `age` also supports encrypting to RSA or Ed25519\nssh(1) keys. RSA keys must be at least 2048 bits. This feature employs more\ncomplex cryptography, and should only be used when a native key is not available\nfor the recipient. Note that SSH keys might not be protected long-term by the\nrecipient, since they are revokable when used only for authentication.\n\nA `RECIPIENT` encoding is an SSH public key in `authorized_keys` format\n",
                      "markdown": "`As a convenience feature, `age` also supports encrypting to RSA or Ed25519\nssh(1) keys. RSA keys must be at least 2048 bits. This feature employs more\ncomplex cryptography, and should only be used when a native key is not available\nfor the recipient. Note that SSH keys might not be protected long-term by the\nrecipient, since they are revokable when used only for authentication.\n\nA `RECIPIENT` encoding is an SSH public key in `authorized_keys` format\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.ronn"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 3,
                  "endLine": 169,
                  "endColumn": 8,
                  "snippet": {
                    "text": "An encrypted file can't be linked to the native recipient it's encrypted to\nwithout access to the corresponding identity.\n\n### SSH keys\n\nAs a convenience feature, `age` also supports encrypting to RSA or Ed25519\nssh(1) keys. RSA keys must be at least 2048 bits. This feature employs more\n",
                    "rendered": {
                      "text": "An encrypted file can't be linked to the native recipient it's encrypted to\nwithout access to the corresponding identity.\n\n### SSH keys\n\nAs a convenience feature, `age` also supports encrypting to RSA or Ed25519\nssh(1) keys. RSA keys must be at least 2048 bits. This feature employs more\n",
                      "markdown": "`An encrypted file can't be linked to the native recipient it's encrypted to\nwithout access to the corresponding identity.\n\n### SSH keys\n\nAs a convenience feature, `age` also supports encrypting to RSA or Ed25519\nssh(1) keys. RSA keys must be at least 2048 bits. This feature employs more\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.ronn"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 29,
                  "endLine": 128,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n    c\\. An SSH private key file, in PKCS#1, PKCS#8, or OpenSSH format.\n    If the private key is password-protected, the password is requested\n    interactively only if the SSH identity matches the file. See the\n    [SSH keys][] section for more information, including supported key types.\n\n    d\\. \"`-`\", causing one of the options above to be read from standard input.\n",
                    "rendered": {
                      "text": "\n    c\\. An SSH private key file, in PKCS#1, PKCS#8, or OpenSSH format.\n    If the private key is password-protected, the password is requested\n    interactively only if the SSH identity matches the file. See the\n    [SSH keys][] section for more information, including supported key types.\n\n    d\\. \"`-`\", causing one of the options above to be read from standard input.\n",
                      "markdown": "`\n    c\\. An SSH private key file, in PKCS#1, PKCS#8, or OpenSSH format.\n    If the private key is password-protected, the password is requested\n    interactively only if the SSH identity matches the file. See the\n    [SSH keys][] section for more information, including supported key types.\n\n    d\\. \"`-`\", causing one of the options above to be read from standard input.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.ronn"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 10,
                  "endLine": 126,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    identity files are not necessary for most use cases, where access to the\n    encrypted identity file implies access to the whole system.\n\n    c\\. An SSH private key file, in PKCS#1, PKCS#8, or OpenSSH format.\n    If the private key is password-protected, the password is requested\n    interactively only if the SSH identity matches the file. See the\n    [SSH keys][] section for more information, including supported key types.\n",
                    "rendered": {
                      "text": "    identity files are not necessary for most use cases, where access to the\n    encrypted identity file implies access to the whole system.\n\n    c\\. An SSH private key file, in PKCS#1, PKCS#8, or OpenSSH format.\n    If the private key is password-protected, the password is requested\n    interactively only if the SSH identity matches the file. See the\n    [SSH keys][] section for more information, including supported key types.\n",
                      "markdown": "`    identity files are not necessary for most use cases, where access to the\n    encrypted identity file implies access to the whole system.\n\n    c\\. An SSH private key file, in PKCS#1, PKCS#8, or OpenSSH format.\n    If the private key is password-protected, the password is requested\n    interactively only if the SSH identity matches the file. See the\n    [SSH keys][] section for more information, including supported key types.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/internal/bech32/bech32.go"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 43,
                  "endLine": 149,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\t}\n\tpos := strings.LastIndex(s, \"1\")\n\tif pos < 1 || pos+7 > len(s) {\n\t\treturn \"\", nil, fmt.Errorf(\"separator '1' at invalid position: pos=%d, len=%d\", pos, len(s))\n\t}\n\thrp = s[:pos]\n\tfor p, c := range hrp {\n",
                    "rendered": {
                      "text": "\t}\n\tpos := strings.LastIndex(s, \"1\")\n\tif pos < 1 || pos+7 > len(s) {\n\t\treturn \"\", nil, fmt.Errorf(\"separator '1' at invalid position: pos=%d, len=%d\", pos, len(s))\n\t}\n\thrp = s[:pos]\n\tfor p, c := range hrp {\n",
                      "markdown": "`\t}\n\tpos := strings.LastIndex(s, \"1\")\n\tif pos < 1 || pos+7 > len(s) {\n\t\treturn \"\", nil, fmt.Errorf(\"separator '1' at invalid position: pos=%d, len=%d\", pos, len(s))\n\t}\n\thrp = s[:pos]\n\tfor p, c := range hrp {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/internal/bech32/bech32.go"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 9,
                  "endLine": 41,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\t\tchk = (chk & 0x1ffffff) << 5\n\t\tchk = chk ^ uint32(v)\n\t\tfor i := 0; i < 5; i++ {\n\t\t\tbit := top >> i & 1\n\t\t\tif bit == 1 {\n\t\t\t\tchk ^= generator[i]\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\tchk = (chk & 0x1ffffff) << 5\n\t\tchk = chk ^ uint32(v)\n\t\tfor i := 0; i < 5; i++ {\n\t\t\tbit := top >> i & 1\n\t\t\tif bit == 1 {\n\t\t\t\tchk ^= generator[i]\n\t\t\t}\n",
                      "markdown": "`\t\tchk = (chk & 0x1ffffff) << 5\n\t\tchk = chk ^ uint32(v)\n\t\tfor i := 0; i < 5; i++ {\n\t\t\tbit := top >> i & 1\n\t\t\tif bit == 1 {\n\t\t\t\tchk ^= generator[i]\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/internal/bech32/bech32.go"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 1,
                  "endLine": 37,
                  "endColumn": 6,
                  "snippet": {
                    "text": "func polymod(values []byte) uint32 {\n\tchk := uint32(1)\n\tfor _, v := range values {\n\t\ttop := chk >> 25\n\t\tchk = (chk & 0x1ffffff) << 5\n\t\tchk = chk ^ uint32(v)\n\t\tfor i := 0; i < 5; i++ {\n",
                    "rendered": {
                      "text": "func polymod(values []byte) uint32 {\n\tchk := uint32(1)\n\tfor _, v := range values {\n\t\ttop := chk >> 25\n\t\tchk = (chk & 0x1ffffff) << 5\n\t\tchk = chk ^ uint32(v)\n\t\tfor i := 0; i < 5; i++ {\n",
                      "markdown": "`func polymod(values []byte) uint32 {\n\tchk := uint32(1)\n\tfor _, v := range values {\n\t\ttop := chk >> 25\n\t\tchk = (chk & 0x1ffffff) << 5\n\t\tchk = chk ^ uint32(v)\n\t\tfor i := 0; i < 5; i++ {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/age_test.go"
                },
                "region": {
                  "startLine": 175,
                  "startColumn": 33,
                  "endLine": 175,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\t\tt.Fatal(err)\n\t}\n\n\ti, err := age.NewScryptIdentity(password)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n",
                    "rendered": {
                      "text": "\t\tt.Fatal(err)\n\t}\n\n\ti, err := age.NewScryptIdentity(password)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n",
                      "markdown": "`\t\tt.Fatal(err)\n\t}\n\n\ti, err := age.NewScryptIdentity(password)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/age_test.go"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 34,
                  "endLine": 158,
                  "endColumn": 42,
                  "snippet": {
                    "text": "func TestEncryptDecryptScrypt(t *testing.T) {\n\tpassword := \"twitch.tv/filosottile\"\n\n\tr, err := age.NewScryptRecipient(password)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n",
                    "rendered": {
                      "text": "func TestEncryptDecryptScrypt(t *testing.T) {\n\tpassword := \"twitch.tv/filosottile\"\n\n\tr, err := age.NewScryptRecipient(password)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n",
                      "markdown": "`func TestEncryptDecryptScrypt(t *testing.T) {\n\tpassword := \"twitch.tv/filosottile\"\n\n\tr, err := age.NewScryptRecipient(password)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/age_test.go"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 1,
                  "endLine": 156,
                  "endColumn": 9,
                  "snippet": {
                    "text": "}\n\nfunc TestEncryptDecryptScrypt(t *testing.T) {\n\tpassword := \"twitch.tv/filosottile\"\n\n\tr, err := age.NewScryptRecipient(password)\n\tif err != nil {\n",
                    "rendered": {
                      "text": "}\n\nfunc TestEncryptDecryptScrypt(t *testing.T) {\n\tpassword := \"twitch.tv/filosottile\"\n\n\tr, err := age.NewScryptRecipient(password)\n\tif err != nil {\n",
                      "markdown": "`}\n\nfunc TestEncryptDecryptScrypt(t *testing.T) {\n\tpassword := \"twitch.tv/filosottile\"\n\n\tr, err := age.NewScryptRecipient(password)\n\tif err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/age_test.go"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 42,
                  "endLine": 53,
                  "endColumn": 52,
                  "snippet": {
                    "text": "}\n\nfunc ExampleDecrypt() {\n\tidentity, err := age.ParseX25519Identity(privateKey)\n\tif err != nil {\n\t\tlog.Fatalf(\"Failed to parse private key: %v\", err)\n\t}\n",
                    "rendered": {
                      "text": "}\n\nfunc ExampleDecrypt() {\n\tidentity, err := age.ParseX25519Identity(privateKey)\n\tif err != nil {\n\t\tlog.Fatalf(\"Failed to parse private key: %v\", err)\n\t}\n",
                      "markdown": "`}\n\nfunc ExampleDecrypt() {\n\tidentity, err := age.ParseX25519Identity(privateKey)\n\tif err != nil {\n\t\tlog.Fatalf(\"Failed to parse private key: %v\", err)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/age_test.go"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 1,
                  "endLine": 49,
                  "endColumn": 11,
                  "snippet": {
                    "text": "var privateKey string\n\nfunc init() {\n\tprivateKey = \"AGE-SECRET-KEY-184JMZMVQH3E6U0PSL869004Y3U2NYV7R30EU99CSEDNPH02YUVFSZW44VU\"\n}\n\nfunc ExampleDecrypt() {\n",
                    "rendered": {
                      "text": "var privateKey string\n\nfunc init() {\n\tprivateKey = \"AGE-SECRET-KEY-184JMZMVQH3E6U0PSL869004Y3U2NYV7R30EU99CSEDNPH02YUVFSZW44VU\"\n}\n\nfunc ExampleDecrypt() {\n",
                      "markdown": "`var privateKey string\n\nfunc init() {\n\tprivateKey = \"AGE-SECRET-KEY-184JMZMVQH3E6U0PSL869004Y3U2NYV7R30EU99CSEDNPH02YUVFSZW44VU\"\n}\n\nfunc ExampleDecrypt() {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/age_test.go"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 4,
                  "endLine": 46,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\n// DO NOT hardcode the private key. Store it in a secret storage solution,\n// on disk if the local machine is trusted, or have the user provide it.\nvar privateKey string\n\nfunc init() {\n\tprivateKey = \"AGE-SECRET-KEY-184JMZMVQH3E6U0PSL869004Y3U2NYV7R30EU99CSEDNPH02YUVFSZW44VU\"\n",
                    "rendered": {
                      "text": "\n// DO NOT hardcode the private key. Store it in a secret storage solution,\n// on disk if the local machine is trusted, or have the user provide it.\nvar privateKey string\n\nfunc init() {\n\tprivateKey = \"AGE-SECRET-KEY-184JMZMVQH3E6U0PSL869004Y3U2NYV7R30EU99CSEDNPH02YUVFSZW44VU\"\n",
                      "markdown": "`\n// DO NOT hardcode the private key. Store it in a secret storage solution,\n// on disk if the local machine is trusted, or have the user provide it.\nvar privateKey string\n\nfunc init() {\n\tprivateKey = \"AGE-SECRET-KEY-184JMZMVQH3E6U0PSL869004Y3U2NYV7R30EU99CSEDNPH02YUVFSZW44VU\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/age_test.go"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 14,
                  "endLine": 20,
                  "endColumn": 78,
                  "snippet": {
                    "text": ")\n\nfunc ExampleEncrypt() {\n\tpublicKey := \"age1cy0su9fwf3gf9mw868g5yut09p6nytfmmnktexz2ya5uqg9vl9sss4euqm\"\n\trecipient, err := age.ParseX25519Recipient(publicKey)\n\tif err != nil {\n\t\tlog.Fatalf(\"Failed to parse public key %q: %v\", publicKey, err)\n",
                    "rendered": {
                      "text": ")\n\nfunc ExampleEncrypt() {\n\tpublicKey := \"age1cy0su9fwf3gf9mw868g5yut09p6nytfmmnktexz2ya5uqg9vl9sss4euqm\"\n\trecipient, err := age.ParseX25519Recipient(publicKey)\n\tif err != nil {\n\t\tlog.Fatalf(\"Failed to parse public key %q: %v\", publicKey, err)\n",
                      "markdown": "`)\n\nfunc ExampleEncrypt() {\n\tpublicKey := \"age1cy0su9fwf3gf9mw868g5yut09p6nytfmmnktexz2ya5uqg9vl9sss4euqm\"\n\trecipient, err := age.ParseX25519Recipient(publicKey)\n\tif err != nil {\n\t\tlog.Fatalf(\"Failed to parse public key %q: %v\", publicKey, err)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/README.md"
                },
                "region": {
                  "startLine": 291,
                  "startColumn": 14,
                  "endLine": 291,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n```\n$ age -R ~/.ssh/id_ed25519.pub example.jpg > example.jpg.age\n$ age -d -i ~/.ssh/id_ed25519 example.jpg.age > example.jpg\n```\n\nNote that SSH key support employs more complex cryptography, and embeds a public key tag in the encrypted file, making it possible to track files that are encrypted to a specific public key.\n",
                    "rendered": {
                      "text": "\n```\n$ age -R ~/.ssh/id_ed25519.pub example.jpg > example.jpg.age\n$ age -d -i ~/.ssh/id_ed25519 example.jpg.age > example.jpg\n```\n\nNote that SSH key support employs more complex cryptography, and embeds a public key tag in the encrypted file, making it possible to track files that are encrypted to a specific public key.\n",
                      "markdown": "`\n```\n$ age -R ~/.ssh/id_ed25519.pub example.jpg > example.jpg.age\n$ age -d -i ~/.ssh/id_ed25519 example.jpg.age > example.jpg\n```\n\nNote that SSH key support employs more complex cryptography, and embeds a public key tag in the encrypted file, making it possible to track files that are encrypted to a specific public key.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/README.md"
                },
                "region": {
                  "startLine": 290,
                  "startColumn": 11,
                  "endLine": 290,
                  "endColumn": 15,
                  "snippet": {
                    "text": "As a convenience feature, age also supports encrypting to `ssh-rsa` and `ssh-ed25519` SSH public keys, and decrypting with the respective private key file. (`ssh-agent` is not supported.)\n\n```\n$ age -R ~/.ssh/id_ed25519.pub example.jpg > example.jpg.age\n$ age -d -i ~/.ssh/id_ed25519 example.jpg.age > example.jpg\n```\n\n",
                    "rendered": {
                      "text": "As a convenience feature, age also supports encrypting to `ssh-rsa` and `ssh-ed25519` SSH public keys, and decrypting with the respective private key file. (`ssh-agent` is not supported.)\n\n```\n$ age -R ~/.ssh/id_ed25519.pub example.jpg > example.jpg.age\n$ age -d -i ~/.ssh/id_ed25519 example.jpg.age > example.jpg\n```\n\n",
                      "markdown": "`As a convenience feature, age also supports encrypting to `ssh-rsa` and `ssh-ed25519` SSH public keys, and decrypting with the respective private key file. (`ssh-agent` is not supported.)\n\n```\n$ age -R ~/.ssh/id_ed25519.pub example.jpg > example.jpg.age\n$ age -d -i ~/.ssh/id_ed25519 example.jpg.age > example.jpg\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/README.md"
                },
                "region": {
                  "startLine": 259,
                  "startColumn": 186,
                  "endLine": 259,
                  "endColumn": 190,
                  "snippet": {
                    "text": "\n### Passphrases\n\nFiles can be encrypted with a passphrase by using `-p/--passphrase`. By default age will automatically generate a secure passphrase. Passphrase protected files are automatically detected at decrypt time.\n\n```\n$ age -p secrets.txt > secrets.txt.age\n",
                    "rendered": {
                      "text": "\n### Passphrases\n\nFiles can be encrypted with a passphrase by using `-p/--passphrase`. By default age will automatically generate a secure passphrase. Passphrase protected files are automatically detected at decrypt time.\n\n```\n$ age -p secrets.txt > secrets.txt.age\n",
                      "markdown": "`\n### Passphrases\n\nFiles can be encrypted with a passphrase by using `-p/--passphrase`. By default age will automatically generate a secure passphrase. Passphrase protected files are automatically detected at decrypt time.\n\n```\n$ age -p secrets.txt > secrets.txt.age\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/README.md"
                },
                "region": {
                  "startLine": 211,
                  "startColumn": 53,
                  "endLine": 211,
                  "endColumn": 57,
                  "snippet": {
                    "text": "    -p, --passphrase            Encrypt with a passphrase.\n    -r, --recipient RECIPIENT   Encrypt to the specified RECIPIENT. Can be repeated.\n    -R, --recipients-file PATH  Encrypt to recipients listed at PATH. Can be repeated.\n    -i, --identity PATH         Use the identity file at PATH. Can be repeated.\n\nINPUT defaults to standard input, and OUTPUT defaults to standard output.\nIf OUTPUT exists, it will be overwritten.\n",
                    "rendered": {
                      "text": "    -p, --passphrase            Encrypt with a passphrase.\n    -r, --recipient RECIPIENT   Encrypt to the specified RECIPIENT. Can be repeated.\n    -R, --recipients-file PATH  Encrypt to recipients listed at PATH. Can be repeated.\n    -i, --identity PATH         Use the identity file at PATH. Can be repeated.\n\nINPUT defaults to standard input, and OUTPUT defaults to standard output.\nIf OUTPUT exists, it will be overwritten.\n",
                      "markdown": "`    -p, --passphrase            Encrypt with a passphrase.\n    -r, --recipient RECIPIENT   Encrypt to the specified RECIPIENT. Can be repeated.\n    -R, --recipients-file PATH  Encrypt to recipients listed at PATH. Can be repeated.\n    -i, --identity PATH         Use the identity file at PATH. Can be repeated.\n\nINPUT defaults to standard input, and OUTPUT defaults to standard output.\nIf OUTPUT exists, it will be overwritten.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/README.md"
                },
                "region": {
                  "startLine": 210,
                  "startColumn": 60,
                  "endLine": 210,
                  "endColumn": 64,
                  "snippet": {
                    "text": "    -a, --armor                 Encrypt to a PEM encoded format.\n    -p, --passphrase            Encrypt with a passphrase.\n    -r, --recipient RECIPIENT   Encrypt to the specified RECIPIENT. Can be repeated.\n    -R, --recipients-file PATH  Encrypt to recipients listed at PATH. Can be repeated.\n    -i, --identity PATH         Use the identity file at PATH. Can be repeated.\n\nINPUT defaults to standard input, and OUTPUT defaults to standard output.\n",
                    "rendered": {
                      "text": "    -a, --armor                 Encrypt to a PEM encoded format.\n    -p, --passphrase            Encrypt with a passphrase.\n    -r, --recipient RECIPIENT   Encrypt to the specified RECIPIENT. Can be repeated.\n    -R, --recipients-file PATH  Encrypt to recipients listed at PATH. Can be repeated.\n    -i, --identity PATH         Use the identity file at PATH. Can be repeated.\n\nINPUT defaults to standard input, and OUTPUT defaults to standard output.\n",
                      "markdown": "`    -a, --armor                 Encrypt to a PEM encoded format.\n    -p, --passphrase            Encrypt with a passphrase.\n    -r, --recipient RECIPIENT   Encrypt to the specified RECIPIENT. Can be repeated.\n    -R, --recipients-file PATH  Encrypt to recipients listed at PATH. Can be repeated.\n    -i, --identity PATH         Use the identity file at PATH. Can be repeated.\n\nINPUT defaults to standard input, and OUTPUT defaults to standard output.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/README.md"
                },
                "region": {
                  "startLine": 206,
                  "startColumn": 60,
                  "endLine": 206,
                  "endColumn": 64,
                  "snippet": {
                    "text": "Options:\n    -e, --encrypt               Encrypt the input to the output. Default if omitted.\n    -d, --decrypt               Decrypt the input to the output.\n    -o, --output OUTPUT         Write the result to the file at path OUTPUT.\n    -a, --armor                 Encrypt to a PEM encoded format.\n    -p, --passphrase            Encrypt with a passphrase.\n    -r, --recipient RECIPIENT   Encrypt to the specified RECIPIENT. Can be repeated.\n",
                    "rendered": {
                      "text": "Options:\n    -e, --encrypt               Encrypt the input to the output. Default if omitted.\n    -d, --decrypt               Decrypt the input to the output.\n    -o, --output OUTPUT         Write the result to the file at path OUTPUT.\n    -a, --armor                 Encrypt to a PEM encoded format.\n    -p, --passphrase            Encrypt with a passphrase.\n    -r, --recipient RECIPIENT   Encrypt to the specified RECIPIENT. Can be repeated.\n",
                      "markdown": "`Options:\n    -e, --encrypt               Encrypt the input to the output. Default if omitted.\n    -d, --decrypt               Decrypt the input to the output.\n    -o, --output OUTPUT         Write the result to the file at path OUTPUT.\n    -a, --armor                 Encrypt to a PEM encoded format.\n    -p, --passphrase            Encrypt with a passphrase.\n    -r, --recipient RECIPIENT   Encrypt to the specified RECIPIENT. Can be repeated.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/README.md"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 64,
                  "endLine": 28,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\n📬 Follow the maintenance of this project by subscribing to [Maintainer Dispatches](https://filippo.io/newsletter)!\n\n🦀 An alternative interoperable Rust implementation is available at [github.com/str4d/rage](https://github.com/str4d/rage).\n\n🔑 Hardware PIV tokens such as YubiKeys are supported through the [age-plugin-yubikey](https://github.com/str4d/age-plugin-yubikey) plugin.\n\n",
                    "rendered": {
                      "text": "\n📬 Follow the maintenance of this project by subscribing to [Maintainer Dispatches](https://filippo.io/newsletter)!\n\n🦀 An alternative interoperable Rust implementation is available at [github.com/str4d/rage](https://github.com/str4d/rage).\n\n🔑 Hardware PIV tokens such as YubiKeys are supported through the [age-plugin-yubikey](https://github.com/str4d/age-plugin-yubikey) plugin.\n\n",
                      "markdown": "`\n📬 Follow the maintenance of this project by subscribing to [Maintainer Dispatches](https://filippo.io/newsletter)!\n\n🦀 An alternative interoperable Rust implementation is available at [github.com/str4d/rage](https://github.com/str4d/rage).\n\n🔑 Hardware PIV tokens such as YubiKeys are supported through the [age-plugin-yubikey](https://github.com/str4d/age-plugin-yubikey) plugin.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/README.md"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 30,
                  "endLine": 24,
                  "endColumn": 34,
                  "snippet": {
                    "text": "$ age --decrypt -i key.txt data.tar.gz.age > data.tar.gz\n```\n\n📜 The format specification is at [age-encryption.org/v1](https://age-encryption.org/v1). age was designed by [@Benjojo12](https://twitter.com/Benjojo12) and [@FiloSottile](https://twitter.com/FiloSottile).\n\n📬 Follow the maintenance of this project by subscribing to [Maintainer Dispatches](https://filippo.io/newsletter)!\n\n",
                    "rendered": {
                      "text": "$ age --decrypt -i key.txt data.tar.gz.age > data.tar.gz\n```\n\n📜 The format specification is at [age-encryption.org/v1](https://age-encryption.org/v1). age was designed by [@Benjojo12](https://twitter.com/Benjojo12) and [@FiloSottile](https://twitter.com/FiloSottile).\n\n📬 Follow the maintenance of this project by subscribing to [Maintainer Dispatches](https://filippo.io/newsletter)!\n\n",
                      "markdown": "`$ age --decrypt -i key.txt data.tar.gz.age > data.tar.gz\n```\n\n📜 The format specification is at [age-encryption.org/v1](https://age-encryption.org/v1). age was designed by [@Benjojo12](https://twitter.com/Benjojo12) and [@FiloSottile](https://twitter.com/FiloSottile).\n\n📬 Follow the maintenance of this project by subscribing to [Maintainer Dispatches](https://filippo.io/newsletter)!\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/README.md"
                },
                "region": {
                  "startLine": 304,
                  "startColumn": 131,
                  "endLine": 304,
                  "endColumn": 136,
                  "snippet": {
                    "text": "$ curl https://github.com/benjojo.keys | age -R - example.jpg > example.jpg.age\n```\n\nKeep in mind that people might not protect SSH keys long-term, since they are revokable when used only for authentication, and that SSH keys held on YubiKeys can't be used to decrypt files.\n",
                    "rendered": {
                      "text": "$ curl https://github.com/benjojo.keys | age -R - example.jpg > example.jpg.age\n```\n\nKeep in mind that people might not protect SSH keys long-term, since they are revokable when used only for authentication, and that SSH keys held on YubiKeys can't be used to decrypt files.\n",
                      "markdown": "`$ curl https://github.com/benjojo.keys | age -R - example.jpg > example.jpg.age\n```\n\nKeep in mind that people might not protect SSH keys long-term, since they are revokable when used only for authentication, and that SSH keys held on YubiKeys can't be used to decrypt files.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/README.md"
                },
                "region": {
                  "startLine": 304,
                  "startColumn": 42,
                  "endLine": 304,
                  "endColumn": 47,
                  "snippet": {
                    "text": "$ curl https://github.com/benjojo.keys | age -R - example.jpg > example.jpg.age\n```\n\nKeep in mind that people might not protect SSH keys long-term, since they are revokable when used only for authentication, and that SSH keys held on YubiKeys can't be used to decrypt files.\n",
                    "rendered": {
                      "text": "$ curl https://github.com/benjojo.keys | age -R - example.jpg > example.jpg.age\n```\n\nKeep in mind that people might not protect SSH keys long-term, since they are revokable when used only for authentication, and that SSH keys held on YubiKeys can't be used to decrypt files.\n",
                      "markdown": "`$ curl https://github.com/benjojo.keys | age -R - example.jpg > example.jpg.age\n```\n\nKeep in mind that people might not protect SSH keys long-term, since they are revokable when used only for authentication, and that SSH keys held on YubiKeys can't be used to decrypt files.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/README.md"
                },
                "region": {
                  "startLine": 301,
                  "startColumn": 1,
                  "endLine": 301,
                  "endColumn": 7,
                  "snippet": {
                    "text": "Combining SSH key support and `-R`, you can easily encrypt a file to the SSH keys listed on a GitHub profile.\n\n```\n$ curl https://github.com/benjojo.keys | age -R - example.jpg > example.jpg.age\n```\n\nKeep in mind that people might not protect SSH keys long-term, since they are revokable when used only for authentication, and that SSH keys held on YubiKeys can't be used to decrypt files.\n",
                    "rendered": {
                      "text": "Combining SSH key support and `-R`, you can easily encrypt a file to the SSH keys listed on a GitHub profile.\n\n```\n$ curl https://github.com/benjojo.keys | age -R - example.jpg > example.jpg.age\n```\n\nKeep in mind that people might not protect SSH keys long-term, since they are revokable when used only for authentication, and that SSH keys held on YubiKeys can't be used to decrypt files.\n",
                      "markdown": "`Combining SSH key support and `-R`, you can easily encrypt a file to the SSH keys listed on a GitHub profile.\n\n```\n$ curl https://github.com/benjojo.keys | age -R - example.jpg > example.jpg.age\n```\n\nKeep in mind that people might not protect SSH keys long-term, since they are revokable when used only for authentication, and that SSH keys held on YubiKeys can't be used to decrypt files.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/README.md"
                },
                "region": {
                  "startLine": 298,
                  "startColumn": 72,
                  "endLine": 298,
                  "endColumn": 77,
                  "snippet": {
                    "text": "\n#### Encrypting to a GitHub user\n\nCombining SSH key support and `-R`, you can easily encrypt a file to the SSH keys listed on a GitHub profile.\n\n```\n$ curl https://github.com/benjojo.keys | age -R - example.jpg > example.jpg.age\n",
                    "rendered": {
                      "text": "\n#### Encrypting to a GitHub user\n\nCombining SSH key support and `-R`, you can easily encrypt a file to the SSH keys listed on a GitHub profile.\n\n```\n$ curl https://github.com/benjojo.keys | age -R - example.jpg > example.jpg.age\n",
                      "markdown": "`\n#### Encrypting to a GitHub user\n\nCombining SSH key support and `-R`, you can easily encrypt a file to the SSH keys listed on a GitHub profile.\n\n```\n$ curl https://github.com/benjojo.keys | age -R - example.jpg > example.jpg.age\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/README.md"
                },
                "region": {
                  "startLine": 298,
                  "startColumn": 9,
                  "endLine": 298,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\n#### Encrypting to a GitHub user\n\nCombining SSH key support and `-R`, you can easily encrypt a file to the SSH keys listed on a GitHub profile.\n\n```\n$ curl https://github.com/benjojo.keys | age -R - example.jpg > example.jpg.age\n",
                    "rendered": {
                      "text": "\n#### Encrypting to a GitHub user\n\nCombining SSH key support and `-R`, you can easily encrypt a file to the SSH keys listed on a GitHub profile.\n\n```\n$ curl https://github.com/benjojo.keys | age -R - example.jpg > example.jpg.age\n",
                      "markdown": "`\n#### Encrypting to a GitHub user\n\nCombining SSH key support and `-R`, you can easily encrypt a file to the SSH keys listed on a GitHub profile.\n\n```\n$ curl https://github.com/benjojo.keys | age -R - example.jpg > example.jpg.age\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/README.md"
                },
                "region": {
                  "startLine": 294,
                  "startColumn": 9,
                  "endLine": 294,
                  "endColumn": 14,
                  "snippet": {
                    "text": "$ age -d -i ~/.ssh/id_ed25519 example.jpg.age > example.jpg\n```\n\nNote that SSH key support employs more complex cryptography, and embeds a public key tag in the encrypted file, making it possible to track files that are encrypted to a specific public key.\n\n#### Encrypting to a GitHub user\n\n",
                    "rendered": {
                      "text": "$ age -d -i ~/.ssh/id_ed25519 example.jpg.age > example.jpg\n```\n\nNote that SSH key support employs more complex cryptography, and embeds a public key tag in the encrypted file, making it possible to track files that are encrypted to a specific public key.\n\n#### Encrypting to a GitHub user\n\n",
                      "markdown": "`$ age -d -i ~/.ssh/id_ed25519 example.jpg.age > example.jpg\n```\n\nNote that SSH key support employs more complex cryptography, and embeds a public key tag in the encrypted file, making it possible to track files that are encrypted to a specific public key.\n\n#### Encrypting to a GitHub user\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/README.md"
                },
                "region": {
                  "startLine": 287,
                  "startColumn": 85,
                  "endLine": 287,
                  "endColumn": 90,
                  "snippet": {
                    "text": "\n### SSH keys\n\nAs a convenience feature, age also supports encrypting to `ssh-rsa` and `ssh-ed25519` SSH public keys, and decrypting with the respective private key file. (`ssh-agent` is not supported.)\n\n```\n$ age -R ~/.ssh/id_ed25519.pub example.jpg > example.jpg.age\n",
                    "rendered": {
                      "text": "\n### SSH keys\n\nAs a convenience feature, age also supports encrypting to `ssh-rsa` and `ssh-ed25519` SSH public keys, and decrypting with the respective private key file. (`ssh-agent` is not supported.)\n\n```\n$ age -R ~/.ssh/id_ed25519.pub example.jpg > example.jpg.age\n",
                      "markdown": "`\n### SSH keys\n\nAs a convenience feature, age also supports encrypting to `ssh-rsa` and `ssh-ed25519` SSH public keys, and decrypting with the respective private key file. (`ssh-agent` is not supported.)\n\n```\n$ age -R ~/.ssh/id_ed25519.pub example.jpg > example.jpg.age\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/README.md"
                },
                "region": {
                  "startLine": 285,
                  "startColumn": 3,
                  "endLine": 285,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nPassphrase-protected identity files are not necessary for most use cases, where access to the encrypted identity file implies access to the whole system. However, they can be useful if the identity file is stored remotely.\n\n### SSH keys\n\nAs a convenience feature, age also supports encrypting to `ssh-rsa` and `ssh-ed25519` SSH public keys, and decrypting with the respective private key file. (`ssh-agent` is not supported.)\n\n",
                    "rendered": {
                      "text": "\nPassphrase-protected identity files are not necessary for most use cases, where access to the encrypted identity file implies access to the whole system. However, they can be useful if the identity file is stored remotely.\n\n### SSH keys\n\nAs a convenience feature, age also supports encrypting to `ssh-rsa` and `ssh-ed25519` SSH public keys, and decrypting with the respective private key file. (`ssh-agent` is not supported.)\n\n",
                      "markdown": "`\nPassphrase-protected identity files are not necessary for most use cases, where access to the encrypted identity file implies access to the whole system. However, they can be useful if the identity file is stored remotely.\n\n### SSH keys\n\nAs a convenience feature, age also supports encrypting to `ssh-rsa` and `ssh-ed25519` SSH public keys, and decrypting with the respective private key file. (`ssh-agent` is not supported.)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/README.md"
                },
                "region": {
                  "startLine": 247,
                  "startColumn": 1,
                  "endLine": 247,
                  "endColumn": 6,
                  "snippet": {
                    "text": "Multiple recipients can also be listed one per line in one or more files passed with the `-R/--recipients-file` flag.\n\n```\n$ cat recipients.txt\n# Alice\nage1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p\n# Bob\n",
                    "rendered": {
                      "text": "Multiple recipients can also be listed one per line in one or more files passed with the `-R/--recipients-file` flag.\n\n```\n$ cat recipients.txt\n# Alice\nage1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p\n# Bob\n",
                      "markdown": "`Multiple recipients can also be listed one per line in one or more files passed with the `-R/--recipients-file` flag.\n\n```\n$ cat recipients.txt\n# Alice\nage1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p\n# Bob\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/README.md"
                },
                "region": {
                  "startLine": 224,
                  "startColumn": 19,
                  "endLine": 224,
                  "endColumn": 24,
                  "snippet": {
                    "text": "read recipients from standard input.\n\nIdentity files contain one or more secret keys (\"AGE-SECRET-KEY-1...\"),\none per line, or an SSH key. Empty lines and lines starting with \"#\" are\nignored as comments. Passphrase encrypted age files can be used as\nidentity files. Multiple key files can be provided, and any unused ones\nwill be ignored. \"-\" may be used to read identities from standard input.\n",
                    "rendered": {
                      "text": "read recipients from standard input.\n\nIdentity files contain one or more secret keys (\"AGE-SECRET-KEY-1...\"),\none per line, or an SSH key. Empty lines and lines starting with \"#\" are\nignored as comments. Passphrase encrypted age files can be used as\nidentity files. Multiple key files can be provided, and any unused ones\nwill be ignored. \"-\" may be used to read identities from standard input.\n",
                      "markdown": "`read recipients from standard input.\n\nIdentity files contain one or more secret keys (\"AGE-SECRET-KEY-1...\"),\none per line, or an SSH key. Empty lines and lines starting with \"#\" are\nignored as comments. Passphrase encrypted age files can be used as\nidentity files. Multiple key files can be provided, and any unused ones\nwill be ignored. \"-\" may be used to read identities from standard input.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/README.md"
                },
                "region": {
                  "startLine": 217,
                  "startColumn": 5,
                  "endLine": 217,
                  "endColumn": 10,
                  "snippet": {
                    "text": "If OUTPUT exists, it will be overwritten.\n\nRECIPIENT can be an age public key generated by age-keygen (\"age1...\")\nor an SSH public key (\"ssh-ed25519 AAAA...\", \"ssh-rsa AAAA...\").\n\nRecipient files contain one or more recipients, one per line. Empty lines\nand lines starting with \"#\" are ignored as comments. \"-\" may be used to\n",
                    "rendered": {
                      "text": "If OUTPUT exists, it will be overwritten.\n\nRECIPIENT can be an age public key generated by age-keygen (\"age1...\")\nor an SSH public key (\"ssh-ed25519 AAAA...\", \"ssh-rsa AAAA...\").\n\nRecipient files contain one or more recipients, one per line. Empty lines\nand lines starting with \"#\" are ignored as comments. \"-\" may be used to\n",
                      "markdown": "`If OUTPUT exists, it will be overwritten.\n\nRECIPIENT can be an age public key generated by age-keygen (\"age1...\")\nor an SSH public key (\"ssh-ed25519 AAAA...\", \"ssh-rsa AAAA...\").\n\nRecipient files contain one or more recipients, one per line. Empty lines\nand lines starting with \"#\" are ignored as comments. \"-\" may be used to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/README.md"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 61,
                  "endLine": 183,
                  "endColumn": 5,
                  "snippet": {
                    "text": "quorum demo-quorum-rule\nEOF\n\ncurl -JLO \"https://dl.filippo.io/age/v1.2.0?for=darwin/arm64\"\ncurl -JLO \"https://dl.filippo.io/age/v1.2.0?for=darwin/arm64&proof\"\n\ngo install sigsum.org/sigsum-go/cmd/sigsum-verify@v0.8.0\nsigsum-verify -k age-sigsum-key.pub -p sigsum-trust-policy.txt \\\n",
                    "rendered": {
                      "text": "quorum demo-quorum-rule\nEOF\n\ncurl -JLO \"https://dl.filippo.io/age/v1.2.0?for=darwin/arm64\"\ncurl -JLO \"https://dl.filippo.io/age/v1.2.0?for=darwin/arm64&proof\"\n\ngo install sigsum.org/sigsum-go/cmd/sigsum-verify@v0.8.0\nsigsum-verify -k age-sigsum-key.pub -p sigsum-trust-policy.txt \\\n",
                      "markdown": "`quorum demo-quorum-rule\nEOF\n\ncurl -JLO \"https://dl.filippo.io/age/v1.2.0?for=darwin/arm64\"\ncurl -JLO \"https://dl.filippo.io/age/v1.2.0?for=darwin/arm64&proof\"\n\ngo install sigsum.org/sigsum-go/cmd/sigsum-verify@v0.8.0\nsigsum-verify -k age-sigsum-key.pub -p sigsum-trust-policy.txt \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/README.md"
                },
                "region": {
                  "startLine": 181,
                  "endLine": 182,
                  "endColumn": 5,
                  "snippet": {
                    "text": "group  demo-quorum-rule all poc.sigsum.org/nisse rgdd.se/poc-witness\nquorum demo-quorum-rule\nEOF\n\ncurl -JLO \"https://dl.filippo.io/age/v1.2.0?for=darwin/arm64\"\ncurl -JLO \"https://dl.filippo.io/age/v1.2.0?for=darwin/arm64&proof\"\n\ngo install sigsum.org/sigsum-go/cmd/sigsum-verify@v0.8.0\n",
                    "rendered": {
                      "text": "group  demo-quorum-rule all poc.sigsum.org/nisse rgdd.se/poc-witness\nquorum demo-quorum-rule\nEOF\n\ncurl -JLO \"https://dl.filippo.io/age/v1.2.0?for=darwin/arm64\"\ncurl -JLO \"https://dl.filippo.io/age/v1.2.0?for=darwin/arm64&proof\"\n\ngo install sigsum.org/sigsum-go/cmd/sigsum-verify@v0.8.0\n",
                      "markdown": "`group  demo-quorum-rule all poc.sigsum.org/nisse rgdd.se/poc-witness\nquorum demo-quorum-rule\nEOF\n\ncurl -JLO \"https://dl.filippo.io/age/v1.2.0?for=darwin/arm64\"\ncurl -JLO \"https://dl.filippo.io/age/v1.2.0?for=darwin/arm64&proof\"\n\ngo install sigsum.org/sigsum-go/cmd/sigsum-verify@v0.8.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/README.md"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 3,
                  "endLine": 174,
                  "endColumn": 4,
                  "snippet": {
                    "text": "cat << EOF > age-sigsum-key.pub\nssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIM1WpnEswJLPzvXJDiswowy48U+G+G1kmgwUE2eaRHZG\nssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAz2WM5CyPLqiNjk7CLl4roDXwKhQ0QExXLebukZEZFS\nEOF\ncat << EOF > sigsum-trust-policy.txt\nlog 154f49976b59ff09a123675f58cb3e346e0455753c3c3b15d465dcb4f6512b0b https://poc.sigsum.org/jellyfish\nwitness poc.sigsum.org/nisse 1c25f8a44c635457e2e391d1efbca7d4c2951a0aef06225a881e46b98962ac6c\nwitness rgdd.se/poc-witness  28c92a5a3a054d317c86fc2eeb6a7ab2054d6217100d0be67ded5b74323c5806\n",
                    "rendered": {
                      "text": "cat << EOF > age-sigsum-key.pub\nssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIM1WpnEswJLPzvXJDiswowy48U+G+G1kmgwUE2eaRHZG\nssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAz2WM5CyPLqiNjk7CLl4roDXwKhQ0QExXLebukZEZFS\nEOF\ncat << EOF > sigsum-trust-policy.txt\nlog 154f49976b59ff09a123675f58cb3e346e0455753c3c3b15d465dcb4f6512b0b https://poc.sigsum.org/jellyfish\nwitness poc.sigsum.org/nisse 1c25f8a44c635457e2e391d1efbca7d4c2951a0aef06225a881e46b98962ac6c\nwitness rgdd.se/poc-witness  28c92a5a3a054d317c86fc2eeb6a7ab2054d6217100d0be67ded5b74323c5806\n",
                      "markdown": "`cat << EOF > age-sigsum-key.pub\nssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIM1WpnEswJLPzvXJDiswowy48U+G+G1kmgwUE2eaRHZG\nssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAz2WM5CyPLqiNjk7CLl4roDXwKhQ0QExXLebukZEZFS\nEOF\ncat << EOF > sigsum-trust-policy.txt\nlog 154f49976b59ff09a123675f58cb3e346e0455753c3c3b15d465dcb4f6512b0b https://poc.sigsum.org/jellyfish\nwitness poc.sigsum.org/nisse 1c25f8a44c635457e2e391d1efbca7d4c2951a0aef06225a881e46b98962ac6c\nwitness rgdd.se/poc-witness  28c92a5a3a054d317c86fc2eeb6a7ab2054d6217100d0be67ded5b74323c5806\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/README.md"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 3,
                  "endLine": 170,
                  "endColumn": 4,
                  "snippet": {
                    "text": "binary release we ever produced. This is similar to what the [Go Checksum\nDatabase](https://go.dev/blog/module-mirror-launch) provides.\n\n```\ncat << EOF > age-sigsum-key.pub\nssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIM1WpnEswJLPzvXJDiswowy48U+G+G1kmgwUE2eaRHZG\nssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAz2WM5CyPLqiNjk7CLl4roDXwKhQ0QExXLebukZEZFS\nEOF\n",
                    "rendered": {
                      "text": "binary release we ever produced. This is similar to what the [Go Checksum\nDatabase](https://go.dev/blog/module-mirror-launch) provides.\n\n```\ncat << EOF > age-sigsum-key.pub\nssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIM1WpnEswJLPzvXJDiswowy48U+G+G1kmgwUE2eaRHZG\nssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAz2WM5CyPLqiNjk7CLl4roDXwKhQ0QExXLebukZEZFS\nEOF\n",
                      "markdown": "`binary release we ever produced. This is similar to what the [Go Checksum\nDatabase](https://go.dev/blog/module-mirror-launch) provides.\n\n```\ncat << EOF > age-sigsum-key.pub\nssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIM1WpnEswJLPzvXJDiswowy48U+G+G1kmgwUE2eaRHZG\nssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAz2WM5CyPLqiNjk7CLl4roDXwKhQ0QExXLebukZEZFS\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/README.md"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 1,
                  "endLine": 20,
                  "endColumn": 6,
                  "snippet": {
                    "text": "```\n$ age-keygen -o key.txt\nPublic key: age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p\n$ tar cvz ~/data | age -r age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p > data.tar.gz.age\n$ age --decrypt -i key.txt data.tar.gz.age > data.tar.gz\n```\n\n",
                    "rendered": {
                      "text": "```\n$ age-keygen -o key.txt\nPublic key: age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p\n$ tar cvz ~/data | age -r age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p > data.tar.gz.age\n$ age --decrypt -i key.txt data.tar.gz.age > data.tar.gz\n```\n\n",
                      "markdown": "````\n$ age-keygen -o key.txt\nPublic key: age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p\n$ tar cvz ~/data | age -r age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p > data.tar.gz.age\n$ age --decrypt -i key.txt data.tar.gz.age > data.tar.gz\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/testdata/scrypt.txt"
                },
                "region": {
                  "startLine": 50,
                  "endLine": 50,
                  "endColumn": 8,
                  "snippet": {
                    "text": "password\n-- wrong --\nPASSWORD\npassword\n-- input --\ntest\n-- key.txt --\n",
                    "rendered": {
                      "text": "password\n-- wrong --\nPASSWORD\npassword\n-- input --\ntest\n-- key.txt --\n",
                      "markdown": "`password\n-- wrong --\nPASSWORD\npassword\n-- input --\ntest\n-- key.txt --\n`"
                    }
                  },
                  "sourceLanguage": "plaintext"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/testdata/scrypt.txt"
                },
                "region": {
                  "startLine": 49,
                  "endLine": 49,
                  "endColumn": 8,
                  "snippet": {
                    "text": "password\npassword\n-- wrong --\nPASSWORD\npassword\n-- input --\ntest\n",
                    "rendered": {
                      "text": "password\npassword\n-- wrong --\nPASSWORD\npassword\n-- input --\ntest\n",
                      "markdown": "`password\npassword\n-- wrong --\nPASSWORD\npassword\n-- input --\ntest\n`"
                    }
                  },
                  "sourceLanguage": "plaintext"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/testdata/scrypt.txt"
                },
                "region": {
                  "startLine": 47,
                  "endLine": 47,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n-- terminal --\npassword\npassword\n-- wrong --\nPASSWORD\npassword\n",
                    "rendered": {
                      "text": "\n-- terminal --\npassword\npassword\n-- wrong --\nPASSWORD\npassword\n",
                      "markdown": "`\n-- terminal --\npassword\npassword\n-- wrong --\nPASSWORD\npassword\n`"
                    }
                  },
                  "sourceLanguage": "plaintext"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/testdata/scrypt.txt"
                },
                "region": {
                  "startLine": 46,
                  "endLine": 46,
                  "endColumn": 8,
                  "snippet": {
                    "text": "! exists fail.age\n\n-- terminal --\npassword\npassword\n-- wrong --\nPASSWORD\n",
                    "rendered": {
                      "text": "! exists fail.age\n\n-- terminal --\npassword\npassword\n-- wrong --\nPASSWORD\n",
                      "markdown": "`! exists fail.age\n\n-- terminal --\npassword\npassword\n-- wrong --\nPASSWORD\n`"
                    }
                  },
                  "sourceLanguage": "plaintext"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/tui.go"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 20,
                  "endLine": 127,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\terr = withTerminal(func(in, out *os.File) error {\n\t\tfmt.Fprintf(out, \"%s \", prompt)\n\t\tdefer clearLine(out)\n\t\ts, err = term.ReadPassword(int(in.Fd()))\n\t\treturn err\n\t})\n\treturn\n",
                    "rendered": {
                      "text": "\terr = withTerminal(func(in, out *os.File) error {\n\t\tfmt.Fprintf(out, \"%s \", prompt)\n\t\tdefer clearLine(out)\n\t\ts, err = term.ReadPassword(int(in.Fd()))\n\t\treturn err\n\t})\n\treturn\n",
                      "markdown": "`\terr = withTerminal(func(in, out *os.File) error {\n\t\tfmt.Fprintf(out, \"%s \", prompt)\n\t\tdefer clearLine(out)\n\t\ts, err = term.ReadPassword(int(in.Fd()))\n\t\treturn err\n\t})\n\treturn\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/tui.go"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 53,
                  "endLine": 85,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\t// (We use CRLF instead of LF to work around an apparent bug in WSL2's\n\t// handling of CONOUT$. Only when running a Windows binary from WSL2, the\n\t// cursor would not go back to the start of the line with a simple LF.\n\t// Honestly, it's impressive CONIN$ and CONOUT$ work at all inside WSL2.)\n\tfmt.Fprintf(out, \"\\r\\n\"+CPL+EL)\n}\n\n",
                    "rendered": {
                      "text": "\t// (We use CRLF instead of LF to work around an apparent bug in WSL2's\n\t// handling of CONOUT$. Only when running a Windows binary from WSL2, the\n\t// cursor would not go back to the start of the line with a simple LF.\n\t// Honestly, it's impressive CONIN$ and CONOUT$ work at all inside WSL2.)\n\tfmt.Fprintf(out, \"\\r\\n\"+CPL+EL)\n}\n\n",
                      "markdown": "`\t// (We use CRLF instead of LF to work around an apparent bug in WSL2's\n\t// handling of CONOUT$. Only when running a Windows binary from WSL2, the\n\t// cursor would not go back to the start of the line with a simple LF.\n\t// Honestly, it's impressive CONIN$ and CONOUT$ work at all inside WSL2.)\n\tfmt.Fprintf(out, \"\\r\\n\"+CPL+EL)\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/tui.go"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 20,
                  "endLine": 74,
                  "endColumn": 29,
                  "snippet": {
                    "text": "// terminal escape codes don't work.\nfunc clearLine(out io.Writer) {\n\tconst (\n\t\tCUI = \"\\033[\"   // Control Sequence Introducer\n\t\tCPL = CUI + \"F\" // Cursor Previous Line\n\t\tEL  = CUI + \"K\" // Erase in Line\n\t)\n",
                    "rendered": {
                      "text": "// terminal escape codes don't work.\nfunc clearLine(out io.Writer) {\n\tconst (\n\t\tCUI = \"\\033[\"   // Control Sequence Introducer\n\t\tCPL = CUI + \"F\" // Cursor Previous Line\n\t\tEL  = CUI + \"K\" // Erase in Line\n\t)\n",
                      "markdown": "`// terminal escape codes don't work.\nfunc clearLine(out io.Writer) {\n\tconst (\n\t\tCUI = \"\\033[\"   // Control Sequence Introducer\n\t\tCPL = CUI + \"F\" // Cursor Previous Line\n\t\tEL  = CUI + \"K\" // Erase in Line\n\t)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/tui.go"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 53,
                  "endLine": 52,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\tfor _, hint := range hints {\n\t\tl.Printf(\"age: hint: %s\", hint)\n\t}\n\tl.Printf(\"age: report unexpected or unhelpful errors at https://filippo.io/age/report\")\n\texit(1)\n}\n\n",
                    "rendered": {
                      "text": "\tfor _, hint := range hints {\n\t\tl.Printf(\"age: hint: %s\", hint)\n\t}\n\tl.Printf(\"age: report unexpected or unhelpful errors at https://filippo.io/age/report\")\n\texit(1)\n}\n\n",
                      "markdown": "`\tfor _, hint := range hints {\n\t\tl.Printf(\"age: hint: %s\", hint)\n\t}\n\tl.Printf(\"age: report unexpected or unhelpful errors at https://filippo.io/age/report\")\n\texit(1)\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/tui.go"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 53,
                  "endLine": 39,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\nfunc errorf(format string, v ...interface{}) {\n\tl.Printf(\"age: error: \"+format, v...)\n\tl.Printf(\"age: report unexpected or unhelpful errors at https://filippo.io/age/report\")\n\texit(1)\n}\n\n",
                    "rendered": {
                      "text": "\nfunc errorf(format string, v ...interface{}) {\n\tl.Printf(\"age: error: \"+format, v...)\n\tl.Printf(\"age: report unexpected or unhelpful errors at https://filippo.io/age/report\")\n\texit(1)\n}\n\n",
                      "markdown": "`\nfunc errorf(format string, v ...interface{}) {\n\tl.Printf(\"age: error: \"+format, v...)\n\tl.Printf(\"age: report unexpected or unhelpful errors at https://filippo.io/age/report\")\n\texit(1)\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/tui.go"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 45,
                  "endLine": 14,
                  "endColumn": 49,
                  "snippet": {
                    "text": "//     to replace with a pinentry with no output or UX changes.\n//\n//   - Everything else goes to standard error with an \"age:\" prefix.\n//     No capitalized initials and no periods at the end.\n\nimport (\n\t\"bytes\"\n",
                    "rendered": {
                      "text": "//     to replace with a pinentry with no output or UX changes.\n//\n//   - Everything else goes to standard error with an \"age:\" prefix.\n//     No capitalized initials and no periods at the end.\n\nimport (\n\t\"bytes\"\n",
                      "markdown": "`//     to replace with a pinentry with no output or UX changes.\n//\n//   - Everything else goes to standard error with an \"age:\" prefix.\n//     No capitalized initials and no periods at the end.\n\nimport (\n\t\"bytes\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/parse.go"
                },
                "region": {
                  "startLine": 213,
                  "startColumn": 47,
                  "endLine": 213,
                  "endColumn": 57,
                  "snippet": {
                    "text": "func parseIdentities(f io.Reader) ([]age.Identity, error) {\n\tconst privateKeySizeLimit = 1 << 24 // 16 MiB\n\tvar ids []age.Identity\n\tscanner := bufio.NewScanner(io.LimitReader(f, privateKeySizeLimit))\n\tvar n int\n\tfor scanner.Scan() {\n\t\tn++\n",
                    "rendered": {
                      "text": "func parseIdentities(f io.Reader) ([]age.Identity, error) {\n\tconst privateKeySizeLimit = 1 << 24 // 16 MiB\n\tvar ids []age.Identity\n\tscanner := bufio.NewScanner(io.LimitReader(f, privateKeySizeLimit))\n\tvar n int\n\tfor scanner.Scan() {\n\t\tn++\n",
                      "markdown": "`func parseIdentities(f io.Reader) ([]age.Identity, error) {\n\tconst privateKeySizeLimit = 1 << 24 // 16 MiB\n\tvar ids []age.Identity\n\tscanner := bufio.NewScanner(io.LimitReader(f, privateKeySizeLimit))\n\tvar n int\n\tfor scanner.Scan() {\n\t\tn++\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/parse.go"
                },
                "region": {
                  "startLine": 211,
                  "startColumn": 7,
                  "endLine": 211,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n// parseIdentities is like age.ParseIdentities, but supports plugin identities.\nfunc parseIdentities(f io.Reader) ([]age.Identity, error) {\n\tconst privateKeySizeLimit = 1 << 24 // 16 MiB\n\tvar ids []age.Identity\n\tscanner := bufio.NewScanner(io.LimitReader(f, privateKeySizeLimit))\n\tvar n int\n",
                    "rendered": {
                      "text": "\n// parseIdentities is like age.ParseIdentities, but supports plugin identities.\nfunc parseIdentities(f io.Reader) ([]age.Identity, error) {\n\tconst privateKeySizeLimit = 1 << 24 // 16 MiB\n\tvar ids []age.Identity\n\tscanner := bufio.NewScanner(io.LimitReader(f, privateKeySizeLimit))\n\tvar n int\n",
                      "markdown": "`\n// parseIdentities is like age.ParseIdentities, but supports plugin identities.\nfunc parseIdentities(f io.Reader) ([]age.Identity, error) {\n\tconst privateKeySizeLimit = 1 << 24 // 16 MiB\n\tvar ids []age.Identity\n\tscanner := bufio.NewScanner(io.LimitReader(f, privateKeySizeLimit))\n\tvar n int\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/parse.go"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 22,
                  "endLine": 183,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"failed to read %q: %v\", name, err)\n\t\t}\n\t\tif len(contents) == privateKeySizeLimit {\n\t\t\treturn nil, fmt.Errorf(\"failed to read %q: file too long\", name)\n\t\t}\n\t\treturn parseSSHIdentity(name, contents)\n",
                    "rendered": {
                      "text": "\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"failed to read %q: %v\", name, err)\n\t\t}\n\t\tif len(contents) == privateKeySizeLimit {\n\t\t\treturn nil, fmt.Errorf(\"failed to read %q: file too long\", name)\n\t\t}\n\t\treturn parseSSHIdentity(name, contents)\n",
                      "markdown": "`\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"failed to read %q: %v\", name, err)\n\t\t}\n\t\tif len(contents) == privateKeySizeLimit {\n\t\t\treturn nil, fmt.Errorf(\"failed to read %q: file too long\", name)\n\t\t}\n\t\treturn parseSSHIdentity(name, contents)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/parse.go"
                },
                "region": {
                  "startLine": 179,
                  "startColumn": 48,
                  "endLine": 179,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\t// Another PEM file, possibly an SSH private key.\n\tcase strings.HasPrefix(peeked, \"-----BEGIN\"):\n\t\tconst privateKeySizeLimit = 1 << 14 // 16 KiB\n\t\tcontents, err := io.ReadAll(io.LimitReader(b, privateKeySizeLimit))\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"failed to read %q: %v\", name, err)\n\t\t}\n",
                    "rendered": {
                      "text": "\t// Another PEM file, possibly an SSH private key.\n\tcase strings.HasPrefix(peeked, \"-----BEGIN\"):\n\t\tconst privateKeySizeLimit = 1 << 14 // 16 KiB\n\t\tcontents, err := io.ReadAll(io.LimitReader(b, privateKeySizeLimit))\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"failed to read %q: %v\", name, err)\n\t\t}\n",
                      "markdown": "`\t// Another PEM file, possibly an SSH private key.\n\tcase strings.HasPrefix(peeked, \"-----BEGIN\"):\n\t\tconst privateKeySizeLimit = 1 << 14 // 16 KiB\n\t\tcontents, err := io.ReadAll(io.LimitReader(b, privateKeySizeLimit))\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"failed to read %q: %v\", name, err)\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/parse.go"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 8,
                  "endLine": 178,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n\t// Another PEM file, possibly an SSH private key.\n\tcase strings.HasPrefix(peeked, \"-----BEGIN\"):\n\t\tconst privateKeySizeLimit = 1 << 14 // 16 KiB\n\t\tcontents, err := io.ReadAll(io.LimitReader(b, privateKeySizeLimit))\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"failed to read %q: %v\", name, err)\n",
                    "rendered": {
                      "text": "\n\t// Another PEM file, possibly an SSH private key.\n\tcase strings.HasPrefix(peeked, \"-----BEGIN\"):\n\t\tconst privateKeySizeLimit = 1 << 14 // 16 KiB\n\t\tcontents, err := io.ReadAll(io.LimitReader(b, privateKeySizeLimit))\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"failed to read %q: %v\", name, err)\n",
                      "markdown": "`\n\t// Another PEM file, possibly an SSH private key.\n\tcase strings.HasPrefix(peeked, \"-----BEGIN\"):\n\t\tconst privateKeySizeLimit = 1 << 14 // 16 KiB\n\t\tcontents, err := io.ReadAll(io.LimitReader(b, privateKeySizeLimit))\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"failed to read %q: %v\", name, err)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/parse.go"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 22,
                  "endLine": 159,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"failed to read %q: %v\", name, err)\n\t\t}\n\t\tif len(contents) == privateKeySizeLimit {\n\t\t\treturn nil, fmt.Errorf(\"failed to read %q: file too long\", name)\n\t\t}\n\t\treturn []age.Identity{&EncryptedIdentity{\n",
                    "rendered": {
                      "text": "\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"failed to read %q: %v\", name, err)\n\t\t}\n\t\tif len(contents) == privateKeySizeLimit {\n\t\t\treturn nil, fmt.Errorf(\"failed to read %q: file too long\", name)\n\t\t}\n\t\treturn []age.Identity{&EncryptedIdentity{\n",
                      "markdown": "`\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"failed to read %q: %v\", name, err)\n\t\t}\n\t\tif len(contents) == privateKeySizeLimit {\n\t\t\treturn nil, fmt.Errorf(\"failed to read %q: file too long\", name)\n\t\t}\n\t\treturn []age.Identity{&EncryptedIdentity{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/parse.go"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 48,
                  "endLine": 155,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\t\t\tr = armor.NewReader(r)\n\t\t}\n\t\tconst privateKeySizeLimit = 1 << 24 // 16 MiB\n\t\tcontents, err := io.ReadAll(io.LimitReader(r, privateKeySizeLimit))\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"failed to read %q: %v\", name, err)\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t\tr = armor.NewReader(r)\n\t\t}\n\t\tconst privateKeySizeLimit = 1 << 24 // 16 MiB\n\t\tcontents, err := io.ReadAll(io.LimitReader(r, privateKeySizeLimit))\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"failed to read %q: %v\", name, err)\n\t\t}\n",
                      "markdown": "`\t\t\tr = armor.NewReader(r)\n\t\t}\n\t\tconst privateKeySizeLimit = 1 << 24 // 16 MiB\n\t\tcontents, err := io.ReadAll(io.LimitReader(r, privateKeySizeLimit))\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"failed to read %q: %v\", name, err)\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/parse.go"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 8,
                  "endLine": 154,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t\tif peeked == \"-----BEGIN AGE\" {\n\t\t\tr = armor.NewReader(r)\n\t\t}\n\t\tconst privateKeySizeLimit = 1 << 24 // 16 MiB\n\t\tcontents, err := io.ReadAll(io.LimitReader(r, privateKeySizeLimit))\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"failed to read %q: %v\", name, err)\n",
                    "rendered": {
                      "text": "\t\tif peeked == \"-----BEGIN AGE\" {\n\t\t\tr = armor.NewReader(r)\n\t\t}\n\t\tconst privateKeySizeLimit = 1 << 24 // 16 MiB\n\t\tcontents, err := io.ReadAll(io.LimitReader(r, privateKeySizeLimit))\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"failed to read %q: %v\", name, err)\n",
                      "markdown": "`\t\tif peeked == \"-----BEGIN AGE\" {\n\t\t\tr = armor.NewReader(r)\n\t\t}\n\t\tconst privateKeySizeLimit = 1 << 24 // 16 MiB\n\t\tcontents, err := io.ReadAll(io.LimitReader(r, privateKeySizeLimit))\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"failed to read %q: %v\", name, err)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/parse.go"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 13,
                  "endLine": 107,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\tif len(fields) < 2 {\n\t\treturn \"\", false\n\t}\n\tkey, err := base64.StdEncoding.DecodeString(fields[1])\n\tif err != nil {\n\t\treturn \"\", false\n\t}\n",
                    "rendered": {
                      "text": "\tif len(fields) < 2 {\n\t\treturn \"\", false\n\t}\n\tkey, err := base64.StdEncoding.DecodeString(fields[1])\n\tif err != nil {\n\t\treturn \"\", false\n\t}\n",
                      "markdown": "`\tif len(fields) < 2 {\n\t\treturn \"\", false\n\t}\n\tkey, err := base64.StdEncoding.DecodeString(fields[1])\n\tif err != nil {\n\t\treturn \"\", false\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/parse.go"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 11,
                  "endLine": 9,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\nimport (\n\t\"bufio\"\n\t\"encoding/base64\"\n\t\"fmt\"\n\t\"io\"\n\t\"os\"\n",
                    "rendered": {
                      "text": "\nimport (\n\t\"bufio\"\n\t\"encoding/base64\"\n\t\"fmt\"\n\t\"io\"\n\t\"os\"\n",
                      "markdown": "`\nimport (\n\t\"bufio\"\n\t\"encoding/base64\"\n\t\"fmt\"\n\t\"io\"\n\t\"os\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/parse.go"
                },
                "region": {
                  "startLine": 224,
                  "startColumn": 32,
                  "endLine": 224,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\n\t\ti, err := parseIdentity(line)\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"error at line %d: %v\", n, err)\n\t\t}\n\t\tids = append(ids, i)\n\n",
                    "rendered": {
                      "text": "\n\t\ti, err := parseIdentity(line)\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"error at line %d: %v\", n, err)\n\t\t}\n\t\tids = append(ids, i)\n\n",
                      "markdown": "`\n\t\ti, err := parseIdentity(line)\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"error at line %d: %v\", n, err)\n\t\t}\n\t\tids = append(ids, i)\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/parse.go"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 50,
                  "endLine": 87,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t\t}\n\t\t\t// Hide the error since it might unintentionally leak the contents\n\t\t\t// of confidential files.\n\t\t\treturn nil, fmt.Errorf(\"%q: malformed recipient at line %d\", name, n)\n\t\t}\n\t\trecs = append(recs, r)\n\t}\n",
                    "rendered": {
                      "text": "\t\t\t}\n\t\t\t// Hide the error since it might unintentionally leak the contents\n\t\t\t// of confidential files.\n\t\t\treturn nil, fmt.Errorf(\"%q: malformed recipient at line %d\", name, n)\n\t\t}\n\t\trecs = append(recs, r)\n\t}\n",
                      "markdown": "`\t\t\t}\n\t\t\t// Hide the error since it might unintentionally leak the contents\n\t\t\t// of confidential files.\n\t\t\treturn nil, fmt.Errorf(\"%q: malformed recipient at line %d\", name, n)\n\t\t}\n\t\trecs = append(recs, r)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/parse.go"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 73,
                  "endLine": 82,
                  "endColumn": 77,
                  "snippet": {
                    "text": "\t\tif err != nil {\n\t\t\tif t, ok := sshKeyType(line); ok {\n\t\t\t\t// Skip unsupported but valid SSH public keys with a warning.\n\t\t\t\twarningf(\"recipients file %q: ignoring unsupported SSH key of type %q at line %d\", name, t, n)\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\t// Hide the error since it might unintentionally leak the contents\n",
                    "rendered": {
                      "text": "\t\tif err != nil {\n\t\t\tif t, ok := sshKeyType(line); ok {\n\t\t\t\t// Skip unsupported but valid SSH public keys with a warning.\n\t\t\t\twarningf(\"recipients file %q: ignoring unsupported SSH key of type %q at line %d\", name, t, n)\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\t// Hide the error since it might unintentionally leak the contents\n",
                      "markdown": "`\t\tif err != nil {\n\t\t\tif t, ok := sshKeyType(line); ok {\n\t\t\t\t// Skip unsupported but valid SSH public keys with a warning.\n\t\t\t\twarningf(\"recipients file %q: ignoring unsupported SSH key of type %q at line %d\", name, t, n)\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\t// Hide the error since it might unintentionally leak the contents\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/parse.go"
                },
                "region": {
                  "startLine": 276,
                  "startColumn": 60,
                  "endLine": 276,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\t}\n\tf, err := os.Open(name + \".pub\")\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(`failed to obtain public key for %q SSH key: %v\n\nEnsure %q exists, or convert the private key %q to a modern format with \"ssh-keygen -p -m RFC4716\"`, name, err, name+\".pub\", name)\n\t}\n",
                    "rendered": {
                      "text": "\t}\n\tf, err := os.Open(name + \".pub\")\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(`failed to obtain public key for %q SSH key: %v\n\nEnsure %q exists, or convert the private key %q to a modern format with \"ssh-keygen -p -m RFC4716\"`, name, err, name+\".pub\", name)\n\t}\n",
                      "markdown": "`\t}\n\tf, err := os.Open(name + \".pub\")\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(`failed to obtain public key for %q SSH key: %v\n\nEnsure %q exists, or convert the private key %q to a modern format with \"ssh-keygen -p -m RFC4716\"`, name, err, name+\".pub\", name)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/parse.go"
                },
                "region": {
                  "startLine": 270,
                  "startColumn": 61,
                  "endLine": 270,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\nfunc readPubFile(name string) (ssh.PublicKey, error) {\n\tif name == \"-\" {\n\t\treturn nil, fmt.Errorf(`failed to obtain public key for \"-\" SSH key\n\nUse a file for which the corresponding \".pub\" file exists, or convert the private key to a modern format with \"ssh-keygen -p -m RFC4716\"`)\n\t}\n",
                    "rendered": {
                      "text": "\nfunc readPubFile(name string) (ssh.PublicKey, error) {\n\tif name == \"-\" {\n\t\treturn nil, fmt.Errorf(`failed to obtain public key for \"-\" SSH key\n\nUse a file for which the corresponding \".pub\" file exists, or convert the private key to a modern format with \"ssh-keygen -p -m RFC4716\"`)\n\t}\n",
                      "markdown": "`\nfunc readPubFile(name string) (ssh.PublicKey, error) {\n\tif name == \"-\" {\n\t\treturn nil, fmt.Errorf(`failed to obtain public key for \"-\" SSH key\n\nUse a file for which the corresponding \".pub\" file exists, or convert the private key to a modern format with \"ssh-keygen -p -m RFC4716\"`)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/parse.go"
                },
                "region": {
                  "startLine": 262,
                  "startColumn": 35,
                  "endLine": 262,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\t\treturn []age.Identity{i}, nil\n\t}\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"malformed SSH identity in %q: %v\", name, err)\n\t}\n\n\treturn []age.Identity{id}, nil\n",
                    "rendered": {
                      "text": "\t\treturn []age.Identity{i}, nil\n\t}\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"malformed SSH identity in %q: %v\", name, err)\n\t}\n\n\treturn []age.Identity{id}, nil\n",
                      "markdown": "`\t\treturn []age.Identity{i}, nil\n\t}\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"malformed SSH identity in %q: %v\", name, err)\n\t}\n\n\treturn []age.Identity{id}, nil\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/parse.go"
                },
                "region": {
                  "startLine": 176,
                  "startColumn": 33,
                  "endLine": 176,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t\t\t},\n\t\t}}, nil\n\n\t// Another PEM file, possibly an SSH private key.\n\tcase strings.HasPrefix(peeked, \"-----BEGIN\"):\n\t\tconst privateKeySizeLimit = 1 << 14 // 16 KiB\n\t\tcontents, err := io.ReadAll(io.LimitReader(b, privateKeySizeLimit))\n",
                    "rendered": {
                      "text": "\t\t\t},\n\t\t}}, nil\n\n\t// Another PEM file, possibly an SSH private key.\n\tcase strings.HasPrefix(peeked, \"-----BEGIN\"):\n\t\tconst privateKeySizeLimit = 1 << 14 // 16 KiB\n\t\tcontents, err := io.ReadAll(io.LimitReader(b, privateKeySizeLimit))\n",
                      "markdown": "`\t\t\t},\n\t\t}}, nil\n\n\t// Another PEM file, possibly an SSH private key.\n\tcase strings.HasPrefix(peeked, \"-----BEGIN\"):\n\t\tconst privateKeySizeLimit = 1 << 14 // 16 KiB\n\t\tcontents, err := io.ReadAll(io.LimitReader(b, privateKeySizeLimit))\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/parse.go"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 57,
                  "endLine": 123,
                  "endColumn": 62,
                  "snippet": {
                    "text": "\treturn \"\", false\n}\n\n// parseIdentitiesFile parses a file that contains age or SSH keys. It returns\n// one or more of *age.X25519Identity, *agessh.RSAIdentity, *agessh.Ed25519Identity,\n// *agessh.EncryptedSSHIdentity, or *EncryptedIdentity.\nfunc parseIdentitiesFile(name string) ([]age.Identity, error) {\n",
                    "rendered": {
                      "text": "\treturn \"\", false\n}\n\n// parseIdentitiesFile parses a file that contains age or SSH keys. It returns\n// one or more of *age.X25519Identity, *agessh.RSAIdentity, *agessh.Ed25519Identity,\n// *agessh.EncryptedSSHIdentity, or *EncryptedIdentity.\nfunc parseIdentitiesFile(name string) ([]age.Identity, error) {\n",
                      "markdown": "`\treturn \"\", false\n}\n\n// parseIdentitiesFile parses a file that contains age or SSH keys. It returns\n// one or more of *age.X25519Identity, *agessh.RSAIdentity, *agessh.Ed25519Identity,\n// *agessh.EncryptedSSHIdentity, or *EncryptedIdentity.\nfunc parseIdentitiesFile(name string) ([]age.Identity, error) {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/parse.go"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 54,
                  "endLine": 82,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\t\tif err != nil {\n\t\t\tif t, ok := sshKeyType(line); ok {\n\t\t\t\t// Skip unsupported but valid SSH public keys with a warning.\n\t\t\t\twarningf(\"recipients file %q: ignoring unsupported SSH key of type %q at line %d\", name, t, n)\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\t// Hide the error since it might unintentionally leak the contents\n",
                    "rendered": {
                      "text": "\t\tif err != nil {\n\t\t\tif t, ok := sshKeyType(line); ok {\n\t\t\t\t// Skip unsupported but valid SSH public keys with a warning.\n\t\t\t\twarningf(\"recipients file %q: ignoring unsupported SSH key of type %q at line %d\", name, t, n)\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\t// Hide the error since it might unintentionally leak the contents\n",
                      "markdown": "`\t\tif err != nil {\n\t\t\tif t, ok := sshKeyType(line); ok {\n\t\t\t\t// Skip unsupported but valid SSH public keys with a warning.\n\t\t\t\twarningf(\"recipients file %q: ignoring unsupported SSH key of type %q at line %d\", name, t, n)\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\t// Hide the error since it might unintentionally leak the contents\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/parse.go"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 33,
                  "endLine": 81,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t\tr, err := parseRecipient(line)\n\t\tif err != nil {\n\t\t\tif t, ok := sshKeyType(line); ok {\n\t\t\t\t// Skip unsupported but valid SSH public keys with a warning.\n\t\t\t\twarningf(\"recipients file %q: ignoring unsupported SSH key of type %q at line %d\", name, t, n)\n\t\t\t\tcontinue\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\tr, err := parseRecipient(line)\n\t\tif err != nil {\n\t\t\tif t, ok := sshKeyType(line); ok {\n\t\t\t\t// Skip unsupported but valid SSH public keys with a warning.\n\t\t\t\twarningf(\"recipients file %q: ignoring unsupported SSH key of type %q at line %d\", name, t, n)\n\t\t\t\tcontinue\n\t\t\t}\n",
                      "markdown": "`\t\tr, err := parseRecipient(line)\n\t\tif err != nil {\n\t\t\tif t, ok := sshKeyType(line); ok {\n\t\t\t\t// Skip unsupported but valid SSH public keys with a warning.\n\t\t\t\twarningf(\"recipients file %q: ignoring unsupported SSH key of type %q at line %d\", name, t, n)\n\t\t\t\tcontinue\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.html"
                },
                "region": {
                  "startLine": 408,
                  "startColumn": 14,
                  "endLine": 408,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n<pre><code>$ age -R ~/.ssh/id_ed25519.pub example.jpg &gt; example.jpg.age\n\n$ age -d -i ~/.ssh/id_ed25519 example.jpg.age &gt; example.jpg\n</code></pre>\n\n<p>Encrypt and decrypt with age-plugin-yubikey:</p>\n",
                    "rendered": {
                      "text": "\n<pre><code>$ age -R ~/.ssh/id_ed25519.pub example.jpg &gt; example.jpg.age\n\n$ age -d -i ~/.ssh/id_ed25519 example.jpg.age &gt; example.jpg\n</code></pre>\n\n<p>Encrypt and decrypt with age-plugin-yubikey:</p>\n",
                      "markdown": "`\n<pre><code>$ age -R ~/.ssh/id_ed25519.pub example.jpg &gt; example.jpg.age\n\n$ age -d -i ~/.ssh/id_ed25519 example.jpg.age &gt; example.jpg\n</code></pre>\n\n<p>Encrypt and decrypt with age-plugin-yubikey:</p>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.html"
                },
                "region": {
                  "startLine": 406,
                  "startColumn": 22,
                  "endLine": 406,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n<p>Encrypt and decrypt with an SSH public key:</p>\n\n<pre><code>$ age -R ~/.ssh/id_ed25519.pub example.jpg &gt; example.jpg.age\n\n$ age -d -i ~/.ssh/id_ed25519 example.jpg.age &gt; example.jpg\n</code></pre>\n",
                    "rendered": {
                      "text": "\n<p>Encrypt and decrypt with an SSH public key:</p>\n\n<pre><code>$ age -R ~/.ssh/id_ed25519.pub example.jpg &gt; example.jpg.age\n\n$ age -d -i ~/.ssh/id_ed25519 example.jpg.age &gt; example.jpg\n</code></pre>\n",
                      "markdown": "`\n<p>Encrypt and decrypt with an SSH public key:</p>\n\n<pre><code>$ age -R ~/.ssh/id_ed25519.pub example.jpg &gt; example.jpg.age\n\n$ age -d -i ~/.ssh/id_ed25519 example.jpg.age &gt; example.jpg\n</code></pre>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.html"
                },
                "region": {
                  "startLine": 331,
                  "startColumn": 30,
                  "endLine": 331,
                  "endColumn": 38,
                  "snippet": {
                    "text": "(such as a symmetric encryption plugin) may generate only an <code>IDENTITY</code> and\ninstruct the user to perform encryption with the <code>-e</code>/<code>--encrypt</code> and\n<code>-i</code>/<code>--identity</code> flags. Plugins for which the concept of separate identities\ndoesn't make sense (such as a password-encryption plugin) may instruct the user\nto use the <code>-j</code> flag.</p>\n\n<h2 id=\"EXIT-STATUS\">EXIT STATUS</h2>\n",
                    "rendered": {
                      "text": "(such as a symmetric encryption plugin) may generate only an <code>IDENTITY</code> and\ninstruct the user to perform encryption with the <code>-e</code>/<code>--encrypt</code> and\n<code>-i</code>/<code>--identity</code> flags. Plugins for which the concept of separate identities\ndoesn't make sense (such as a password-encryption plugin) may instruct the user\nto use the <code>-j</code> flag.</p>\n\n<h2 id=\"EXIT-STATUS\">EXIT STATUS</h2>\n",
                      "markdown": "`(such as a symmetric encryption plugin) may generate only an <code>IDENTITY</code> and\ninstruct the user to perform encryption with the <code>-e</code>/<code>--encrypt</code> and\n<code>-i</code>/<code>--identity</code> flags. Plugins for which the concept of separate identities\ndoesn't make sense (such as a password-encryption plugin) may instruct the user\nto use the <code>-j</code> flag.</p>\n\n<h2 id=\"EXIT-STATUS\">EXIT STATUS</h2>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.html"
                },
                "region": {
                  "startLine": 304,
                  "startColumn": 15,
                  "endLine": 304,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n<p>An encrypted file <em>can</em> be linked to the SSH public key it was encrypted to.\nThis is so that <code>age</code> can identify the correct SSH private key before\nrequesting its password, if any.</p>\n\n<h3 id=\"Plugins\">Plugins</h3>\n\n",
                    "rendered": {
                      "text": "\n<p>An encrypted file <em>can</em> be linked to the SSH public key it was encrypted to.\nThis is so that <code>age</code> can identify the correct SSH private key before\nrequesting its password, if any.</p>\n\n<h3 id=\"Plugins\">Plugins</h3>\n\n",
                      "markdown": "`\n<p>An encrypted file <em>can</em> be linked to the SSH public key it was encrypted to.\nThis is so that <code>age</code> can identify the correct SSH private key before\nrequesting its password, if any.</p>\n\n<h3 id=\"Plugins\">Plugins</h3>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.html"
                },
                "region": {
                  "startLine": 296,
                  "startColumn": 6,
                  "endLine": 296,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\n<p>In recipient files passed to <code>-R</code>/<code>--recipients-file</code>, unsupported but valid\nSSH public keys are ignored with a warning, to facilitate using\n<code>authorized_keys</code> or GitHub <code>.keys</code> files. (See <a href=\"#EXAMPLES\" title=\"EXAMPLES\" data-bare-link=\"true\">EXAMPLES</a>.)</p>\n\n<p>An <code>IDENTITY</code> is an SSH private key <em>file</em> passed individually to\n<code>-i</code>/<code>--identity</code>. Note that keys held on hardware tokens such as YubiKeys\n",
                    "rendered": {
                      "text": "\n<p>In recipient files passed to <code>-R</code>/<code>--recipients-file</code>, unsupported but valid\nSSH public keys are ignored with a warning, to facilitate using\n<code>authorized_keys</code> or GitHub <code>.keys</code> files. (See <a href=\"#EXAMPLES\" title=\"EXAMPLES\" data-bare-link=\"true\">EXAMPLES</a>.)</p>\n\n<p>An <code>IDENTITY</code> is an SSH private key <em>file</em> passed individually to\n<code>-i</code>/<code>--identity</code>. Note that keys held on hardware tokens such as YubiKeys\n",
                      "markdown": "`\n<p>In recipient files passed to <code>-R</code>/<code>--recipients-file</code>, unsupported but valid\nSSH public keys are ignored with a warning, to facilitate using\n<code>authorized_keys</code> or GitHub <code>.keys</code> files. (See <a href=\"#EXAMPLES\" title=\"EXAMPLES\" data-bare-link=\"true\">EXAMPLES</a>.)</p>\n\n<p>An <code>IDENTITY</code> is an SSH private key <em>file</em> passed individually to\n<code>-i</code>/<code>--identity</code>. Note that keys held on hardware tokens such as YubiKeys\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.html"
                },
                "region": {
                  "startLine": 285,
                  "startColumn": 15,
                  "endLine": 285,
                  "endColumn": 30,
                  "snippet": {
                    "text": "recipient, since they are revokable when used only for authentication.</p>\n\n<p>A <code>RECIPIENT</code> encoding is an SSH public key in <code>authorized_keys</code> format\n(see the <code>AUTHORIZED_KEYS FILE FORMAT</code> section of <span class=\"man-ref\">sshd<span class=\"s\">(8)</span></span>), starting with\n<code>ssh-rsa</code> or <code>ssh-ed25519</code>, like the following:</p>\n\n<pre><code>ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDULTit0KUehbi[...]GU4BtElAbzh8=\n",
                    "rendered": {
                      "text": "recipient, since they are revokable when used only for authentication.</p>\n\n<p>A <code>RECIPIENT</code> encoding is an SSH public key in <code>authorized_keys</code> format\n(see the <code>AUTHORIZED_KEYS FILE FORMAT</code> section of <span class=\"man-ref\">sshd<span class=\"s\">(8)</span></span>), starting with\n<code>ssh-rsa</code> or <code>ssh-ed25519</code>, like the following:</p>\n\n<pre><code>ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDULTit0KUehbi[...]GU4BtElAbzh8=\n",
                      "markdown": "`recipient, since they are revokable when used only for authentication.</p>\n\n<p>A <code>RECIPIENT</code> encoding is an SSH public key in <code>authorized_keys</code> format\n(see the <code>AUTHORIZED_KEYS FILE FORMAT</code> section of <span class=\"man-ref\">sshd<span class=\"s\">(8)</span></span>), starting with\n<code>ssh-rsa</code> or <code>ssh-ed25519</code>, like the following:</p>\n\n<pre><code>ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDULTit0KUehbi[...]GU4BtElAbzh8=\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.html"
                },
                "region": {
                  "startLine": 284,
                  "startColumn": 67,
                  "endLine": 284,
                  "endColumn": 82,
                  "snippet": {
                    "text": "for the recipient. Note that SSH keys might not be protected long-term by the\nrecipient, since they are revokable when used only for authentication.</p>\n\n<p>A <code>RECIPIENT</code> encoding is an SSH public key in <code>authorized_keys</code> format\n(see the <code>AUTHORIZED_KEYS FILE FORMAT</code> section of <span class=\"man-ref\">sshd<span class=\"s\">(8)</span></span>), starting with\n<code>ssh-rsa</code> or <code>ssh-ed25519</code>, like the following:</p>\n\n",
                    "rendered": {
                      "text": "for the recipient. Note that SSH keys might not be protected long-term by the\nrecipient, since they are revokable when used only for authentication.</p>\n\n<p>A <code>RECIPIENT</code> encoding is an SSH public key in <code>authorized_keys</code> format\n(see the <code>AUTHORIZED_KEYS FILE FORMAT</code> section of <span class=\"man-ref\">sshd<span class=\"s\">(8)</span></span>), starting with\n<code>ssh-rsa</code> or <code>ssh-ed25519</code>, like the following:</p>\n\n",
                      "markdown": "`for the recipient. Note that SSH keys might not be protected long-term by the\nrecipient, since they are revokable when used only for authentication.</p>\n\n<p>A <code>RECIPIENT</code> encoding is an SSH public key in <code>authorized_keys</code> format\n(see the <code>AUTHORIZED_KEYS FILE FORMAT</code> section of <span class=\"man-ref\">sshd<span class=\"s\">(8)</span></span>), starting with\n<code>ssh-rsa</code> or <code>ssh-ed25519</code>, like the following:</p>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.html"
                },
                "region": {
                  "startLine": 228,
                  "startColumn": 48,
                  "endLine": 228,
                  "endColumn": 56,
                  "snippet": {
                    "text": "  encrypted identity file implies access to the whole system.</p>\n\n    <p>c. An SSH private key file, in PKCS#1, PKCS#8, or OpenSSH format.\n  If the private key is password-protected, the password is requested\n  interactively only if the SSH identity matches the file. See the\n  <a href=\"#SSH-keys\" title=\"SSH keys\" data-bare-link=\"true\">SSH keys</a> section for more information, including supported key types.</p>\n\n",
                    "rendered": {
                      "text": "  encrypted identity file implies access to the whole system.</p>\n\n    <p>c. An SSH private key file, in PKCS#1, PKCS#8, or OpenSSH format.\n  If the private key is password-protected, the password is requested\n  interactively only if the SSH identity matches the file. See the\n  <a href=\"#SSH-keys\" title=\"SSH keys\" data-bare-link=\"true\">SSH keys</a> section for more information, including supported key types.</p>\n\n",
                      "markdown": "`  encrypted identity file implies access to the whole system.</p>\n\n    <p>c. An SSH private key file, in PKCS#1, PKCS#8, or OpenSSH format.\n  If the private key is password-protected, the password is requested\n  interactively only if the SSH identity matches the file. See the\n  <a href=\"#SSH-keys\" title=\"SSH keys\" data-bare-link=\"true\">SSH keys</a> section for more information, including supported key types.</p>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.html"
                },
                "region": {
                  "startLine": 228,
                  "startColumn": 24,
                  "endLine": 228,
                  "endColumn": 32,
                  "snippet": {
                    "text": "  encrypted identity file implies access to the whole system.</p>\n\n    <p>c. An SSH private key file, in PKCS#1, PKCS#8, or OpenSSH format.\n  If the private key is password-protected, the password is requested\n  interactively only if the SSH identity matches the file. See the\n  <a href=\"#SSH-keys\" title=\"SSH keys\" data-bare-link=\"true\">SSH keys</a> section for more information, including supported key types.</p>\n\n",
                    "rendered": {
                      "text": "  encrypted identity file implies access to the whole system.</p>\n\n    <p>c. An SSH private key file, in PKCS#1, PKCS#8, or OpenSSH format.\n  If the private key is password-protected, the password is requested\n  interactively only if the SSH identity matches the file. See the\n  <a href=\"#SSH-keys\" title=\"SSH keys\" data-bare-link=\"true\">SSH keys</a> section for more information, including supported key types.</p>\n\n",
                      "markdown": "`  encrypted identity file implies access to the whole system.</p>\n\n    <p>c. An SSH private key file, in PKCS#1, PKCS#8, or OpenSSH format.\n  If the private key is password-protected, the password is requested\n  interactively only if the SSH identity matches the file. See the\n  <a href=\"#SSH-keys\" title=\"SSH keys\" data-bare-link=\"true\">SSH keys</a> section for more information, including supported key types.</p>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.html"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 21,
                  "endLine": 164,
                  "endColumn": 27,
                  "snippet": {
                    "text": "<dd>  Encrypt to an ASCII-only \"armored\" encoding.\n\n    <p><code>age</code> armor is a strict version of PEM with type <code>AGE ENCRYPTED FILE</code>,\n  canonical \"strict\" Base64, no headers, and no support for leading and\n  trailing extra data.</p>\n\n    <p>Decryption transparently detects and decodes ASCII armoring.</p>\n",
                    "rendered": {
                      "text": "<dd>  Encrypt to an ASCII-only \"armored\" encoding.\n\n    <p><code>age</code> armor is a strict version of PEM with type <code>AGE ENCRYPTED FILE</code>,\n  canonical \"strict\" Base64, no headers, and no support for leading and\n  trailing extra data.</p>\n\n    <p>Decryption transparently detects and decodes ASCII armoring.</p>\n",
                      "markdown": "`<dd>  Encrypt to an ASCII-only \"armored\" encoding.\n\n    <p><code>age</code> armor is a strict version of PEM with type <code>AGE ENCRYPTED FILE</code>,\n  canonical \"strict\" Base64, no headers, and no support for leading and\n  trailing extra data.</p>\n\n    <p>Decryption transparently detects and decodes ASCII armoring.</p>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.html"
                },
                "region": {
                  "startLine": 292,
                  "startColumn": 14,
                  "endLine": 292,
                  "endColumn": 18,
                  "snippet": {
                    "text": "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIH9pO5pz22JZEas[...]l1uZc31FGYMXa\n</code></pre>\n\n<p>The comment at the end of the line, if present, is ignored.</p>\n\n<p>In recipient files passed to <code>-R</code>/<code>--recipients-file</code>, unsupported but valid\nSSH public keys are ignored with a warning, to facilitate using\n",
                    "rendered": {
                      "text": "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIH9pO5pz22JZEas[...]l1uZc31FGYMXa\n</code></pre>\n\n<p>The comment at the end of the line, if present, is ignored.</p>\n\n<p>In recipient files passed to <code>-R</code>/<code>--recipients-file</code>, unsupported but valid\nSSH public keys are ignored with a warning, to facilitate using\n",
                      "markdown": "`ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIH9pO5pz22JZEas[...]l1uZc31FGYMXa\n</code></pre>\n\n<p>The comment at the end of the line, if present, is ignored.</p>\n\n<p>In recipient files passed to <code>-R</code>/<code>--recipients-file</code>, unsupported but valid\nSSH public keys are ignored with a warning, to facilitate using\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.html"
                },
                "region": {
                  "startLine": 279,
                  "startColumn": 81,
                  "endLine": 279,
                  "endColumn": 85,
                  "snippet": {
                    "text": "<h3 id=\"SSH-keys\">SSH keys</h3>\n\n<p>As a convenience feature, <code>age</code> also supports encrypting to RSA or Ed25519\n<span class=\"man-ref\">ssh<span class=\"s\">(1)</span></span> keys. RSA keys must be at least 2048 bits. This feature employs more\ncomplex cryptography, and should only be used when a native key is not available\nfor the recipient. Note that SSH keys might not be protected long-term by the\nrecipient, since they are revokable when used only for authentication.</p>\n",
                    "rendered": {
                      "text": "<h3 id=\"SSH-keys\">SSH keys</h3>\n\n<p>As a convenience feature, <code>age</code> also supports encrypting to RSA or Ed25519\n<span class=\"man-ref\">ssh<span class=\"s\">(1)</span></span> keys. RSA keys must be at least 2048 bits. This feature employs more\ncomplex cryptography, and should only be used when a native key is not available\nfor the recipient. Note that SSH keys might not be protected long-term by the\nrecipient, since they are revokable when used only for authentication.</p>\n",
                      "markdown": "`<h3 id=\"SSH-keys\">SSH keys</h3>\n\n<p>As a convenience feature, <code>age</code> also supports encrypting to RSA or Ed25519\n<span class=\"man-ref\">ssh<span class=\"s\">(1)</span></span> keys. RSA keys must be at least 2048 bits. This feature employs more\ncomplex cryptography, and should only be used when a native key is not available\nfor the recipient. Note that SSH keys might not be protected long-term by the\nrecipient, since they are revokable when used only for authentication.</p>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.html"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 131,
                  "endLine": 214,
                  "endColumn": 135,
                  "snippet": {
                    "text": "<dt>\n<code>-i</code>, <code>--identity</code>=<var>PATH</var>\n</dt>\n<dd>  Decrypt using the <a href=\"#RECIPIENTS-AND-IDENTITIES\" title=\"RECIPIENTS AND IDENTITIES\" data-bare-link=\"true\">IDENTITIES</a> at <var>PATH</var>.\n\n    <p><var>PATH</var> may be one of the following:</p>\n\n",
                    "rendered": {
                      "text": "<dt>\n<code>-i</code>, <code>--identity</code>=<var>PATH</var>\n</dt>\n<dd>  Decrypt using the <a href=\"#RECIPIENTS-AND-IDENTITIES\" title=\"RECIPIENTS AND IDENTITIES\" data-bare-link=\"true\">IDENTITIES</a> at <var>PATH</var>.\n\n    <p><var>PATH</var> may be one of the following:</p>\n\n",
                      "markdown": "`<dt>\n<code>-i</code>, <code>--identity</code>=<var>PATH</var>\n</dt>\n<dd>  Decrypt using the <a href=\"#RECIPIENTS-AND-IDENTITIES\" title=\"RECIPIENTS AND IDENTITIES\" data-bare-link=\"true\">IDENTITIES</a> at <var>PATH</var>.\n\n    <p><var>PATH</var> may be one of the following:</p>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.html"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 38,
                  "endLine": 174,
                  "endColumn": 42,
                  "snippet": {
                    "text": "AND-IDENTITIES\" title=\"RECIPIENTS AND IDENTITIES\" data-bare-link=\"true\">RECIPIENTS</a> corresponding to the\n  <a href=\"#RECIPIENTS-AND-IDENTITIES\" title=\"RECIPIENTS AND IDENTITIES\" data-bare-link=\"true\">IDENTITIES</a> listed in the file at <var>PATH</var>. This\n  is equivalent to converting the file at <var>PATH</var> to a recipients file with\n  <code>age-keygen -y</code> and then passing that to <code>-R</code>/<code>--recipients-file</code>.\n\n    <p>For the format of <var>PATH</var>, see the definition of <code>-i</code>/<code>--identity</code> in the\n  <a href=\"#Decryption-options\" title=\"Decry",
                    "rendered": {
                      "text": "AND-IDENTITIES\" title=\"RECIPIENTS AND IDENTITIES\" data-bare-link=\"true\">RECIPIENTS</a> corresponding to the\n  <a href=\"#RECIPIENTS-AND-IDENTITIES\" title=\"RECIPIENTS AND IDENTITIES\" data-bare-link=\"true\">IDENTITIES</a> listed in the file at <var>PATH</var>. This\n  is equivalent to converting the file at <var>PATH</var> to a recipients file with\n  <code>age-keygen -y</code> and then passing that to <code>-R</code>/<code>--recipients-file</code>.\n\n    <p>For the format of <var>PATH</var>, see the definition of <code>-i</code>/<code>--identity</code> in the\n  <a href=\"#Decryption-options\" title=\"Decry",
                      "markdown": "`AND-IDENTITIES\" title=\"RECIPIENTS AND IDENTITIES\" data-bare-link=\"true\">RECIPIENTS</a> corresponding to the\n  <a href=\"#RECIPIENTS-AND-IDENTITIES\" title=\"RECIPIENTS AND IDENTITIES\" data-bare-link=\"true\">IDENTITIES</a> listed in the file at <var>PATH</var>. This\n  is equivalent to converting the file at <var>PATH</var> to a recipients file with\n  <code>age-keygen -y</code> and then passing that to <code>-R</code>/<code>--recipients-file</code>.\n\n    <p>For the format of <var>PATH</var>, see the definition of <code>-i</code>/<code>--identity</code> in the\n  <a href=\"#Decryption-options\" title=\"Decry`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.html"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 128,
                  "endLine": 173,
                  "endColumn": 132,
                  "snippet": {
                    "text": "<code>-i</code>, <code>--identity</code>=<var>PATH</var>\n</dt>\n<dd>  Encrypt to the <a href=\"#RECIPIENTS-AND-IDENTITIES\" title=\"RECIPIENTS AND IDENTITIES\" data-bare-link=\"true\">RECIPIENTS</a> corresponding to the\n  <a href=\"#RECIPIENTS-AND-IDENTITIES\" title=\"RECIPIENTS AND IDENTITIES\" data-bare-link=\"true\">IDENTITIES</a> listed in the file at <var>PATH</var>. This\n  is equivalent to converting the file at <var>PATH</var> to a recipients file with\n  <code>age-keygen -y</code> and then passing that to <code>-R</code>/<code>--recipients-file</code>.\n\n",
                    "rendered": {
                      "text": "<code>-i</code>, <code>--identity</code>=<var>PATH</var>\n</dt>\n<dd>  Encrypt to the <a href=\"#RECIPIENTS-AND-IDENTITIES\" title=\"RECIPIENTS AND IDENTITIES\" data-bare-link=\"true\">RECIPIENTS</a> corresponding to the\n  <a href=\"#RECIPIENTS-AND-IDENTITIES\" title=\"RECIPIENTS AND IDENTITIES\" data-bare-link=\"true\">IDENTITIES</a> listed in the file at <var>PATH</var>. This\n  is equivalent to converting the file at <var>PATH</var> to a recipients file with\n  <code>age-keygen -y</code> and then passing that to <code>-R</code>/<code>--recipients-file</code>.\n\n",
                      "markdown": "`<code>-i</code>, <code>--identity</code>=<var>PATH</var>\n</dt>\n<dd>  Encrypt to the <a href=\"#RECIPIENTS-AND-IDENTITIES\" title=\"RECIPIENTS AND IDENTITIES\" data-bare-link=\"true\">RECIPIENTS</a> corresponding to the\n  <a href=\"#RECIPIENTS-AND-IDENTITIES\" title=\"RECIPIENTS AND IDENTITIES\" data-bare-link=\"true\">IDENTITIES</a> listed in the file at <var>PATH</var>. This\n  is equivalent to converting the file at <var>PATH</var> to a recipients file with\n  <code>age-keygen -y</code> and then passing that to <code>-R</code>/<code>--recipients-file</code>.\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.html"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 6,
                  "endLine": 141,
                  "endColumn": 10,
                  "snippet": {
                    "text": "<code>-R</code>, <code>--recipients-file</code>=<var>PATH</var>\n</dt>\n<dd>  Encrypt to the <a href=\"#RECIPIENTS-AND-IDENTITIES\" title=\"RECIPIENTS AND IDENTITIES\" data-bare-link=\"true\">RECIPIENTS</a> listed in the\n  file at <var>PATH</var>, one per line. Empty lines and lines starting with <code>#</code>\n  are ignored as comments.\n\n    <p>If <var>PATH</var> is <code>-</code>, the recipients are read from standard input. In\n",
                    "rendered": {
                      "text": "<code>-R</code>, <code>--recipients-file</code>=<var>PATH</var>\n</dt>\n<dd>  Encrypt to the <a href=\"#RECIPIENTS-AND-IDENTITIES\" title=\"RECIPIENTS AND IDENTITIES\" data-bare-link=\"true\">RECIPIENTS</a> listed in the\n  file at <var>PATH</var>, one per line. Empty lines and lines starting with <code>#</code>\n  are ignored as comments.\n\n    <p>If <var>PATH</var> is <code>-</code>, the recipients are read from standard input. In\n",
                      "markdown": "`<code>-R</code>, <code>--recipients-file</code>=<var>PATH</var>\n</dt>\n<dd>  Encrypt to the <a href=\"#RECIPIENTS-AND-IDENTITIES\" title=\"RECIPIENTS AND IDENTITIES\" data-bare-link=\"true\">RECIPIENTS</a> listed in the\n  file at <var>PATH</var>, one per line. Empty lines and lines starting with <code>#</code>\n  are ignored as comments.\n\n    <p>If <var>PATH</var> is <code>-</code>, the recipients are read from standard input. In\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.html"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 57,
                  "endLine": 46,
                  "endColumn": 61,
                  "snippet": {
                    "text": "  </style>\n</head>\n<!--\n  The following styles are deprecated and will be removed at some point:\n  div#man, div#man ol.man, div#man ol.head, div#man ol.man.\n\n  The .man-page, .man-decor, .man-head, .man-foot, .man-title, and\n",
                    "rendered": {
                      "text": "  </style>\n</head>\n<!--\n  The following styles are deprecated and will be removed at some point:\n  div#man, div#man ol.man, div#man ol.head, div#man ol.man.\n\n  The .man-page, .man-decor, .man-head, .man-foot, .man-title, and\n",
                      "markdown": "`  </style>\n</head>\n<!--\n  The following styles are deprecated and will be removed at some point:\n  div#man, div#man ol.man, div#man ol.head, div#man ol.man.\n\n  The .man-page, .man-decor, .man-head, .man-foot, .man-title, and\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.html"
                },
                "region": {
                  "startLine": 422,
                  "startColumn": 12,
                  "endLine": 422,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n<p>Encrypt to the SSH keys of a GitHub user:</p>\n\n<pre><code>$ curl https://github.com/benjojo.keys | age -R - example.jpg &gt; example.jpg.age\n</code></pre>\n\n<h2 id=\"SEE-ALSO\">SEE ALSO</h2>\n",
                    "rendered": {
                      "text": "\n<p>Encrypt to the SSH keys of a GitHub user:</p>\n\n<pre><code>$ curl https://github.com/benjojo.keys | age -R - example.jpg &gt; example.jpg.age\n</code></pre>\n\n<h2 id=\"SEE-ALSO\">SEE ALSO</h2>\n",
                      "markdown": "`\n<p>Encrypt to the SSH keys of a GitHub user:</p>\n\n<pre><code>$ curl https://github.com/benjojo.keys | age -R - example.jpg &gt; example.jpg.age\n</code></pre>\n\n<h2 id=\"SEE-ALSO\">SEE ALSO</h2>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.html"
                },
                "region": {
                  "startLine": 420,
                  "startColumn": 17,
                  "endLine": 420,
                  "endColumn": 22,
                  "snippet": {
                    "text": "$ age -d -i age-yubikey-identity-388178f3.txt secrets.txt.age\n</code></pre>\n\n<p>Encrypt to the SSH keys of a GitHub user:</p>\n\n<pre><code>$ curl https://github.com/benjojo.keys | age -R - example.jpg &gt; example.jpg.age\n</code></pre>\n",
                    "rendered": {
                      "text": "$ age -d -i age-yubikey-identity-388178f3.txt secrets.txt.age\n</code></pre>\n\n<p>Encrypt to the SSH keys of a GitHub user:</p>\n\n<pre><code>$ curl https://github.com/benjojo.keys | age -R - example.jpg &gt; example.jpg.age\n</code></pre>\n",
                      "markdown": "`$ age -d -i age-yubikey-identity-388178f3.txt secrets.txt.age\n</code></pre>\n\n<p>Encrypt to the SSH keys of a GitHub user:</p>\n\n<pre><code>$ curl https://github.com/benjojo.keys | age -R - example.jpg &gt; example.jpg.age\n</code></pre>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.html"
                },
                "region": {
                  "startLine": 404,
                  "startColumn": 30,
                  "endLine": 404,
                  "endColumn": 35,
                  "snippet": {
                    "text": "Enter passphrase for identity file \"key.age\":\n</code></pre>\n\n<p>Encrypt and decrypt with an SSH public key:</p>\n\n<pre><code>$ age -R ~/.ssh/id_ed25519.pub example.jpg &gt; example.jpg.age\n\n",
                    "rendered": {
                      "text": "Enter passphrase for identity file \"key.age\":\n</code></pre>\n\n<p>Encrypt and decrypt with an SSH public key:</p>\n\n<pre><code>$ age -R ~/.ssh/id_ed25519.pub example.jpg &gt; example.jpg.age\n\n",
                      "markdown": "`Enter passphrase for identity file \"key.age\":\n</code></pre>\n\n<p>Encrypt and decrypt with an SSH public key:</p>\n\n<pre><code>$ age -R ~/.ssh/id_ed25519.pub example.jpg &gt; example.jpg.age\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.html"
                },
                "region": {
                  "startLine": 372,
                  "startColumn": 12,
                  "endLine": 372,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n<p>Encrypt to a list of recipients:</p>\n\n<pre><code>$ cat &gt; recipients.txt\n# Alice\nage1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p\n# Bob\n",
                    "rendered": {
                      "text": "\n<p>Encrypt to a list of recipients:</p>\n\n<pre><code>$ cat &gt; recipients.txt\n# Alice\nage1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p\n# Bob\n",
                      "markdown": "`\n<p>Encrypt to a list of recipients:</p>\n\n<pre><code>$ cat &gt; recipients.txt\n# Alice\nage1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p\n# Bob\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.html"
                },
                "region": {
                  "startLine": 359,
                  "startColumn": 1,
                  "endLine": 359,
                  "endColumn": 6,
                  "snippet": {
                    "text": "<pre><code>$ age-keygen -o key.txt\nPublic key: age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p\n\n$ tar cvz ~/data | age -r age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p &gt; data.tar.gz.age\n\n$ age -d -o data.tar.gz -i key.txt data.tar.gz.age\n</code></pre>\n",
                    "rendered": {
                      "text": "<pre><code>$ age-keygen -o key.txt\nPublic key: age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p\n\n$ tar cvz ~/data | age -r age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p &gt; data.tar.gz.age\n\n$ age -d -o data.tar.gz -i key.txt data.tar.gz.age\n</code></pre>\n",
                      "markdown": "`<pre><code>$ age-keygen -o key.txt\nPublic key: age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p\n\n$ tar cvz ~/data | age -r age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p &gt; data.tar.gz.age\n\n$ age -d -o data.tar.gz -i key.txt data.tar.gz.age\n</code></pre>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.html"
                },
                "region": {
                  "startLine": 303,
                  "startColumn": 57,
                  "endLine": 303,
                  "endColumn": 62,
                  "snippet": {
                    "text": "or accessed via <span class=\"man-ref\">ssh-agent<span class=\"s\">(1)</span></span> are not supported.</p>\n\n<p>An encrypted file <em>can</em> be linked to the SSH public key it was encrypted to.\nThis is so that <code>age</code> can identify the correct SSH private key before\nrequesting its password, if any.</p>\n\n<h3 id=\"Plugins\">Plugins</h3>\n",
                    "rendered": {
                      "text": "or accessed via <span class=\"man-ref\">ssh-agent<span class=\"s\">(1)</span></span> are not supported.</p>\n\n<p>An encrypted file <em>can</em> be linked to the SSH public key it was encrypted to.\nThis is so that <code>age</code> can identify the correct SSH private key before\nrequesting its password, if any.</p>\n\n<h3 id=\"Plugins\">Plugins</h3>\n",
                      "markdown": "`or accessed via <span class=\"man-ref\">ssh-agent<span class=\"s\">(1)</span></span> are not supported.</p>\n\n<p>An encrypted file <em>can</em> be linked to the SSH public key it was encrypted to.\nThis is so that <code>age</code> can identify the correct SSH private key before\nrequesting its password, if any.</p>\n\n<h3 id=\"Plugins\">Plugins</h3>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.html"
                },
                "region": {
                  "startLine": 302,
                  "startColumn": 50,
                  "endLine": 302,
                  "endColumn": 55,
                  "snippet": {
                    "text": "<code>-i</code>/<code>--identity</code>. Note that keys held on hardware tokens such as YubiKeys\nor accessed via <span class=\"man-ref\">ssh-agent<span class=\"s\">(1)</span></span> are not supported.</p>\n\n<p>An encrypted file <em>can</em> be linked to the SSH public key it was encrypted to.\nThis is so that <code>age</code> can identify the correct SSH private key before\nrequesting its password, if any.</p>\n\n",
                    "rendered": {
                      "text": "<code>-i</code>/<code>--identity</code>. Note that keys held on hardware tokens such as YubiKeys\nor accessed via <span class=\"man-ref\">ssh-agent<span class=\"s\">(1)</span></span> are not supported.</p>\n\n<p>An encrypted file <em>can</em> be linked to the SSH public key it was encrypted to.\nThis is so that <code>age</code> can identify the correct SSH private key before\nrequesting its password, if any.</p>\n\n",
                      "markdown": "`<code>-i</code>/<code>--identity</code>. Note that keys held on hardware tokens such as YubiKeys\nor accessed via <span class=\"man-ref\">ssh-agent<span class=\"s\">(1)</span></span> are not supported.</p>\n\n<p>An encrypted file <em>can</em> be linked to the SSH public key it was encrypted to.\nThis is so that <code>age</code> can identify the correct SSH private key before\nrequesting its password, if any.</p>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.html"
                },
                "region": {
                  "startLine": 298,
                  "startColumn": 33,
                  "endLine": 298,
                  "endColumn": 38,
                  "snippet": {
                    "text": "SSH public keys are ignored with a warning, to facilitate using\n<code>authorized_keys</code> or GitHub <code>.keys</code> files. (See <a href=\"#EXAMPLES\" title=\"EXAMPLES\" data-bare-link=\"true\">EXAMPLES</a>.)</p>\n\n<p>An <code>IDENTITY</code> is an SSH private key <em>file</em> passed individually to\n<code>-i</code>/<code>--identity</code>. Note that keys held on hardware tokens such as YubiKeys\nor accessed via <span class=\"man-ref\">ssh-agent<span class=\"s\">(1)</span></span> are not supported.</p>\n\n",
                    "rendered": {
                      "text": "SSH public keys are ignored with a warning, to facilitate using\n<code>authorized_keys</code> or GitHub <code>.keys</code> files. (See <a href=\"#EXAMPLES\" title=\"EXAMPLES\" data-bare-link=\"true\">EXAMPLES</a>.)</p>\n\n<p>An <code>IDENTITY</code> is an SSH private key <em>file</em> passed individually to\n<code>-i</code>/<code>--identity</code>. Note that keys held on hardware tokens such as YubiKeys\nor accessed via <span class=\"man-ref\">ssh-agent<span class=\"s\">(1)</span></span> are not supported.</p>\n\n",
                      "markdown": "`SSH public keys are ignored with a warning, to facilitate using\n<code>authorized_keys</code> or GitHub <code>.keys</code> files. (See <a href=\"#EXAMPLES\" title=\"EXAMPLES\" data-bare-link=\"true\">EXAMPLES</a>.)</p>\n\n<p>An <code>IDENTITY</code> is an SSH private key <em>file</em> passed individually to\n<code>-i</code>/<code>--identity</code>. Note that keys held on hardware tokens such as YubiKeys\nor accessed via <span class=\"man-ref\">ssh-agent<span class=\"s\">(1)</span></span> are not supported.</p>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.html"
                },
                "region": {
                  "startLine": 294,
                  "startColumn": 101,
                  "endLine": 295,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n<p>The comment at the end of the line, if present, is ignored.</p>\n\n<p>In recipient files passed to <code>-R</code>/<code>--recipients-file</code>, unsupported but valid\nSSH public keys are ignored with a warning, to facilitate using\n<code>authorized_keys</code> or GitHub <code>.keys</code> files. (See <a href=\"#EXAMPLES\" title=\"EXAMPLES\" data-bare-link=\"true\">EXAMPLES</a>.)</p>\n\n<p>An <code>IDENTITY</code> is an SSH private key <em>file</em> passed individually to\n",
                    "rendered": {
                      "text": "\n<p>The comment at the end of the line, if present, is ignored.</p>\n\n<p>In recipient files passed to <code>-R</code>/<code>--recipients-file</code>, unsupported but valid\nSSH public keys are ignored with a warning, to facilitate using\n<code>authorized_keys</code> or GitHub <code>.keys</code> files. (See <a href=\"#EXAMPLES\" title=\"EXAMPLES\" data-bare-link=\"true\">EXAMPLES</a>.)</p>\n\n<p>An <code>IDENTITY</code> is an SSH private key <em>file</em> passed individually to\n",
                      "markdown": "`\n<p>The comment at the end of the line, if present, is ignored.</p>\n\n<p>In recipient files passed to <code>-R</code>/<code>--recipients-file</code>, unsupported but valid\nSSH public keys are ignored with a warning, to facilitate using\n<code>authorized_keys</code> or GitHub <code>.keys</code> files. (See <a href=\"#EXAMPLES\" title=\"EXAMPLES\" data-bare-link=\"true\">EXAMPLES</a>.)</p>\n\n<p>An <code>IDENTITY</code> is an SSH private key <em>file</em> passed individually to\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.html"
                },
                "region": {
                  "startLine": 284,
                  "startColumn": 42,
                  "endLine": 284,
                  "endColumn": 47,
                  "snippet": {
                    "text": "for the recipient. Note that SSH keys might not be protected long-term by the\nrecipient, since they are revokable when used only for authentication.</p>\n\n<p>A <code>RECIPIENT</code> encoding is an SSH public key in <code>authorized_keys</code> format\n(see the <code>AUTHORIZED_KEYS FILE FORMAT</code> section of <span class=\"man-ref\">sshd<span class=\"s\">(8)</span></span>), starting with\n<code>ssh-rsa</code> or <code>ssh-ed25519</code>, like the following:</p>\n\n",
                    "rendered": {
                      "text": "for the recipient. Note that SSH keys might not be protected long-term by the\nrecipient, since they are revokable when used only for authentication.</p>\n\n<p>A <code>RECIPIENT</code> encoding is an SSH public key in <code>authorized_keys</code> format\n(see the <code>AUTHORIZED_KEYS FILE FORMAT</code> section of <span class=\"man-ref\">sshd<span class=\"s\">(8)</span></span>), starting with\n<code>ssh-rsa</code> or <code>ssh-ed25519</code>, like the following:</p>\n\n",
                      "markdown": "`for the recipient. Note that SSH keys might not be protected long-term by the\nrecipient, since they are revokable when used only for authentication.</p>\n\n<p>A <code>RECIPIENT</code> encoding is an SSH public key in <code>authorized_keys</code> format\n(see the <code>AUTHORIZED_KEYS FILE FORMAT</code> section of <span class=\"man-ref\">sshd<span class=\"s\">(8)</span></span>), starting with\n<code>ssh-rsa</code> or <code>ssh-ed25519</code>, like the following:</p>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.html"
                },
                "region": {
                  "startLine": 281,
                  "startColumn": 28,
                  "endLine": 281,
                  "endColumn": 33,
                  "snippet": {
                    "text": "<p>As a convenience feature, <code>age</code> also supports encrypting to RSA or Ed25519\n<span class=\"man-ref\">ssh<span class=\"s\">(1)</span></span> keys. RSA keys must be at least 2048 bits. This feature employs more\ncomplex cryptography, and should only be used when a native key is not available\nfor the recipient. Note that SSH keys might not be protected long-term by the\nrecipient, since they are revokable when used only for authentication.</p>\n\n<p>A <code>RECIPIENT</code> encoding is an SSH public key in <code>authorized_keys</code> format\n",
                    "rendered": {
                      "text": "<p>As a convenience feature, <code>age</code> also supports encrypting to RSA or Ed25519\n<span class=\"man-ref\">ssh<span class=\"s\">(1)</span></span> keys. RSA keys must be at least 2048 bits. This feature employs more\ncomplex cryptography, and should only be used when a native key is not available\nfor the recipient. Note that SSH keys might not be protected long-term by the\nrecipient, since they are revokable when used only for authentication.</p>\n\n<p>A <code>RECIPIENT</code> encoding is an SSH public key in <code>authorized_keys</code> format\n",
                      "markdown": "`<p>As a convenience feature, <code>age</code> also supports encrypting to RSA or Ed25519\n<span class=\"man-ref\">ssh<span class=\"s\">(1)</span></span> keys. RSA keys must be at least 2048 bits. This feature employs more\ncomplex cryptography, and should only be used when a native key is not available\nfor the recipient. Note that SSH keys might not be protected long-term by the\nrecipient, since they are revokable when used only for authentication.</p>\n\n<p>A <code>RECIPIENT</code> encoding is an SSH public key in <code>authorized_keys</code> format\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.html"
                },
                "region": {
                  "startLine": 229,
                  "startColumn": 27,
                  "endLine": 229,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\n    <p>c. An SSH private key file, in PKCS#1, PKCS#8, or OpenSSH format.\n  If the private key is password-protected, the password is requested\n  interactively only if the SSH identity matches the file. See the\n  <a href=\"#SSH-keys\" title=\"SSH keys\" data-bare-link=\"true\">SSH keys</a> section for more information, including supported key types.</p>\n\n    <p>d. \"<code>-</code>\", causing one of the options above to be read from standard input.\n",
                    "rendered": {
                      "text": "\n    <p>c. An SSH private key file, in PKCS#1, PKCS#8, or OpenSSH format.\n  If the private key is password-protected, the password is requested\n  interactively only if the SSH identity matches the file. See the\n  <a href=\"#SSH-keys\" title=\"SSH keys\" data-bare-link=\"true\">SSH keys</a> section for more information, including supported key types.</p>\n\n    <p>d. \"<code>-</code>\", causing one of the options above to be read from standard input.\n",
                      "markdown": "`\n    <p>c. An SSH private key file, in PKCS#1, PKCS#8, or OpenSSH format.\n  If the private key is password-protected, the password is requested\n  interactively only if the SSH identity matches the file. See the\n  <a href=\"#SSH-keys\" title=\"SSH keys\" data-bare-link=\"true\">SSH keys</a> section for more information, including supported key types.</p>\n\n    <p>d. \"<code>-</code>\", causing one of the options above to be read from standard input.\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.html"
                },
                "region": {
                  "startLine": 227,
                  "startColumn": 12,
                  "endLine": 227,
                  "endColumn": 17,
                  "snippet": {
                    "text": "  identity files are not necessary for most use cases, where access to the\n  encrypted identity file implies access to the whole system.</p>\n\n    <p>c. An SSH private key file, in PKCS#1, PKCS#8, or OpenSSH format.\n  If the private key is password-protected, the password is requested\n  interactively only if the SSH identity matches the file. See the\n  <a href=\"#SSH-keys\" title=\"SSH keys\" data-bare-link=\"true\">SSH keys</a> section for more information, including supported key types.</p>\n",
                    "rendered": {
                      "text": "  identity files are not necessary for most use cases, where access to the\n  encrypted identity file implies access to the whole system.</p>\n\n    <p>c. An SSH private key file, in PKCS#1, PKCS#8, or OpenSSH format.\n  If the private key is password-protected, the password is requested\n  interactively only if the SSH identity matches the file. See the\n  <a href=\"#SSH-keys\" title=\"SSH keys\" data-bare-link=\"true\">SSH keys</a> section for more information, including supported key types.</p>\n",
                      "markdown": "`  identity files are not necessary for most use cases, where access to the\n  encrypted identity file implies access to the whole system.</p>\n\n    <p>c. An SSH private key file, in PKCS#1, PKCS#8, or OpenSSH format.\n  If the private key is password-protected, the password is requested\n  interactively only if the SSH identity matches the file. See the\n  <a href=\"#SSH-keys\" title=\"SSH keys\" data-bare-link=\"true\">SSH keys</a> section for more information, including supported key types.</p>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1.html"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 5,
                  "endLine": 17,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  .mp h3 {margin:0 0 0 4ex}\n  .mp dt {margin:0;clear:left}\n  .mp dt.flush {float:left;width:8ex}\n  .mp dd {margin:0 0 0 9ex}\n  .mp h1,.mp h2,.mp h3,.mp h4 {clear:left}\n  .mp pre {margin-bottom:20px}\n  .mp pre+h2,.mp pre+h3 {margin-top:22px}\n",
                    "rendered": {
                      "text": "  .mp h3 {margin:0 0 0 4ex}\n  .mp dt {margin:0;clear:left}\n  .mp dt.flush {float:left;width:8ex}\n  .mp dd {margin:0 0 0 9ex}\n  .mp h1,.mp h2,.mp h3,.mp h4 {clear:left}\n  .mp pre {margin-bottom:20px}\n  .mp pre+h2,.mp pre+h3 {margin-top:22px}\n",
                      "markdown": "`  .mp h3 {margin:0 0 0 4ex}\n  .mp dt {margin:0;clear:left}\n  .mp dt.flush {float:left;width:8ex}\n  .mp dd {margin:0 0 0 9ex}\n  .mp h1,.mp h2,.mp h3,.mp h4 {clear:left}\n  .mp pre {margin-bottom:20px}\n  .mp pre+h2,.mp pre+h3 {margin-top:22px}\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age-keygen.1.ronn"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 11,
                  "endLine": 13,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n`age-keygen` generates a new native age(1) key pair, and outputs the identity to\nstandard output or to the <OUTPUT> file. The output includes the public key and\nthe current time as comments.\n\nIf the output is not going to a terminal, `age-keygen` prints the public key to\nstandard error.\n",
                    "rendered": {
                      "text": "\n`age-keygen` generates a new native age(1) key pair, and outputs the identity to\nstandard output or to the <OUTPUT> file. The output includes the public key and\nthe current time as comments.\n\nIf the output is not going to a terminal, `age-keygen` prints the public key to\nstandard error.\n",
                      "markdown": "`\n`age-keygen` generates a new native age(1) key pair, and outputs the identity to\nstandard output or to the <OUTPUT> file. The output includes the public key and\nthe current time as comments.\n\nIf the output is not going to a terminal, `age-keygen` prints the public key to\nstandard error.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age-keygen.1"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 182,
                  "endLine": 12,
                  "endColumn": 188,
                  "snippet": {
                    "text": "\\fBage\\-keygen\\fR \\fB\\-y\\fR [\\fB\\-o\\fR \\fIOUTPUT\\fR] [\\fIINPUT\\fR]\n.br\n.SH \"DESCRIPTION\"\n\\fBage\\-keygen\\fR generates a new native age(1) key pair, and outputs the identity to standard output or to the \\fIOUTPUT\\fR file\\. The output includes the public key and the current time as comments\\.\n.P\nIf the output is not going to a terminal, \\fBage\\-keygen\\fR prints the public key to standard error\\.\n.SH \"OPTIONS\"\n",
                    "rendered": {
                      "text": "\\fBage\\-keygen\\fR \\fB\\-y\\fR [\\fB\\-o\\fR \\fIOUTPUT\\fR] [\\fIINPUT\\fR]\n.br\n.SH \"DESCRIPTION\"\n\\fBage\\-keygen\\fR generates a new native age(1) key pair, and outputs the identity to standard output or to the \\fIOUTPUT\\fR file\\. The output includes the public key and the current time as comments\\.\n.P\nIf the output is not going to a terminal, \\fBage\\-keygen\\fR prints the public key to standard error\\.\n.SH \"OPTIONS\"\n",
                      "markdown": "`\\fBage\\-keygen\\fR \\fB\\-y\\fR [\\fB\\-o\\fR \\fIOUTPUT\\fR] [\\fIINPUT\\fR]\n.br\n.SH \"DESCRIPTION\"\n\\fBage\\-keygen\\fR generates a new native age(1) key pair, and outputs the identity to standard output or to the \\fIOUTPUT\\fR file\\. The output includes the public key and the current time as comments\\.\n.P\nIf the output is not going to a terminal, \\fBage\\-keygen\\fR prints the public key to standard error\\.\n.SH \"OPTIONS\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age-keygen.1.html"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 57,
                  "endLine": 46,
                  "endColumn": 61,
                  "snippet": {
                    "text": "  </style>\n</head>\n<!--\n  The following styles are deprecated and will be removed at some point:\n  div#man, div#man ol.man, div#man ol.head, div#man ol.man.\n\n  The .man-page, .man-decor, .man-head, .man-foot, .man-title, and\n",
                    "rendered": {
                      "text": "  </style>\n</head>\n<!--\n  The following styles are deprecated and will be removed at some point:\n  div#man, div#man ol.man, div#man ol.head, div#man ol.man.\n\n  The .man-page, .man-decor, .man-head, .man-foot, .man-title, and\n",
                      "markdown": "`  </style>\n</head>\n<!--\n  The following styles are deprecated and will be removed at some point:\n  div#man, div#man ol.man, div#man ol.head, div#man ol.man.\n\n  The .man-page, .man-decor, .man-head, .man-foot, .man-title, and\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age-keygen.1.html"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 11,
                  "endLine": 86,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n<p><code>age-keygen</code> generates a new native <a class=\"man-ref\" href=\"age.1.html\">age<span class=\"s\">(1)</span></a> key pair, and outputs the identity to\nstandard output or to the <var>OUTPUT</var> file. The output includes the public key and\nthe current time as comments.</p>\n\n<p>If the output is not going to a terminal, <code>age-keygen</code> prints the public key to\nstandard error.</p>\n",
                    "rendered": {
                      "text": "\n<p><code>age-keygen</code> generates a new native <a class=\"man-ref\" href=\"age.1.html\">age<span class=\"s\">(1)</span></a> key pair, and outputs the identity to\nstandard output or to the <var>OUTPUT</var> file. The output includes the public key and\nthe current time as comments.</p>\n\n<p>If the output is not going to a terminal, <code>age-keygen</code> prints the public key to\nstandard error.</p>\n",
                      "markdown": "`\n<p><code>age-keygen</code> generates a new native <a class=\"man-ref\" href=\"age.1.html\">age<span class=\"s\">(1)</span></a> key pair, and outputs the identity to\nstandard output or to the <var>OUTPUT</var> file. The output includes the public key and\nthe current time as comments.</p>\n\n<p>If the output is not going to a terminal, <code>age-keygen</code> prints the public key to\nstandard error.</p>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age-keygen.1.html"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 5,
                  "endLine": 17,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  .mp h3 {margin:0 0 0 4ex}\n  .mp dt {margin:0;clear:left}\n  .mp dt.flush {float:left;width:8ex}\n  .mp dd {margin:0 0 0 9ex}\n  .mp h1,.mp h2,.mp h3,.mp h4 {clear:left}\n  .mp pre {margin-bottom:20px}\n  .mp pre+h2,.mp pre+h3 {margin-top:22px}\n",
                    "rendered": {
                      "text": "  .mp h3 {margin:0 0 0 4ex}\n  .mp dt {margin:0;clear:left}\n  .mp dt.flush {float:left;width:8ex}\n  .mp dd {margin:0 0 0 9ex}\n  .mp h1,.mp h2,.mp h3,.mp h4 {clear:left}\n  .mp pre {margin-bottom:20px}\n  .mp pre+h2,.mp pre+h3 {margin-top:22px}\n",
                      "markdown": "`  .mp h3 {margin:0 0 0 4ex}\n  .mp dt {margin:0;clear:left}\n  .mp dt.flush {float:left;width:8ex}\n  .mp dd {margin:0 0 0 9ex}\n  .mp h1,.mp h2,.mp h3,.mp h4 {clear:left}\n  .mp pre {margin-bottom:20px}\n  .mp pre+h2,.mp pre+h3 {margin-top:22px}\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.github/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 210,
                  "endLine": 13,
                  "endColumn": 214,
                  "snippet": {
                    "text": "ll enough that such a time investment is unlikely to pay off over ongoing contributions.\n\nTherefore, **be prepared for your change to get reimplemented rather than merged**, and please don't be offended if that happens. PRs are still appreciated as a way to clarify the intended behavior, but are not at all required: prefer focusing on providing detailed context in an issue report instead.\n\nTo learn more, please see my [maintenance policy](https://github.com/FiloSottile/FiloSottile/blob/main/maintenance.md).\n\n<!-- ## Feature requests\n\nage is small, simple, and config-free by design. A lot of effort",
                    "rendered": {
                      "text": "ll enough that such a time investment is unlikely to pay off over ongoing contributions.\n\nTherefore, **be prepared for your change to get reimplemented rather than merged**, and please don't be offended if that happens. PRs are still appreciated as a way to clarify the intended behavior, but are not at all required: prefer focusing on providing detailed context in an issue report instead.\n\nTo learn more, please see my [maintenance policy](https://github.com/FiloSottile/FiloSottile/blob/main/maintenance.md).\n\n<!-- ## Feature requests\n\nage is small, simple, and config-free by design. A lot of effort",
                      "markdown": "`ll enough that such a time investment is unlikely to pay off over ongoing contributions.\n\nTherefore, **be prepared for your change to get reimplemented rather than merged**, and please don't be offended if that happens. PRs are still appreciated as a way to clarify the intended behavior, but are not at all required: prefer focusing on providing detailed context in an issue report instead.\n\nTo learn more, please see my [maintenance policy](https://github.com/FiloSottile/FiloSottile/blob/main/maintenance.md).\n\n<!-- ## Feature requests\n\nage is small, simple, and config-free by design. A lot of effort`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.github/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 1,
                  "endLine": 30,
                  "endColumn": 8,
                  "snippet": {
                    "text": "n't use age is because they haven't heard about it and existing tutorials present more complex alternatives.\n* Integrate age into existing projects that might use it, for example replacing legacy alternatives.\n* Build and maintain an [age plugin](https://c2sp.org/age-plugin) for a KMS or platform.\n* Watch the [discussions](https://github.com/FiloSottile/age/discussions) and help other users.\n* Provide bindings in a language or framework that doesn't support age well.\n* Package age for an ecosystem that doesn't have packages yet.\n\nIf you build or write something related to age, [let me know](https://g",
                    "rendered": {
                      "text": "n't use age is because they haven't heard about it and existing tutorials present more complex alternatives.\n* Integrate age into existing projects that might use it, for example replacing legacy alternatives.\n* Build and maintain an [age plugin](https://c2sp.org/age-plugin) for a KMS or platform.\n* Watch the [discussions](https://github.com/FiloSottile/age/discussions) and help other users.\n* Provide bindings in a language or framework that doesn't support age well.\n* Package age for an ecosystem that doesn't have packages yet.\n\nIf you build or write something related to age, [let me know](https://g",
                      "markdown": "`n't use age is because they haven't heard about it and existing tutorials present more complex alternatives.\n* Integrate age into existing projects that might use it, for example replacing legacy alternatives.\n* Build and maintain an [age plugin](https://c2sp.org/age-plugin) for a KMS or platform.\n* Watch the [discussions](https://github.com/FiloSottile/age/discussions) and help other users.\n* Provide bindings in a language or framework that doesn't support age well.\n* Package age for an ecosystem that doesn't have packages yet.\n\nIf you build or write something related to age, [let me know](https://g`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.github/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 264,
                  "endLine": 11,
                  "endColumn": 270,
                  "snippet": {
                    "text": "er in aggregate.\n\n## Pull requests\n\nage is a little unusual in how it is maintained. I like to keep the code style consistent and complexity to a minimum, and going through many iterations of code review is a significant toil on both contributors and maintainers. age is also small enough that such a time investment is unlikely to pay off over ongoing contributions.\n\nTherefore, **be prepared for your change to get reimplemented rather than merged**, and please don't be offended if that happens. PRs are still appreciated as a way to clarify the intended behavior, but are not at all required: prefer fo",
                    "rendered": {
                      "text": "er in aggregate.\n\n## Pull requests\n\nage is a little unusual in how it is maintained. I like to keep the code style consistent and complexity to a minimum, and going through many iterations of code review is a significant toil on both contributors and maintainers. age is also small enough that such a time investment is unlikely to pay off over ongoing contributions.\n\nTherefore, **be prepared for your change to get reimplemented rather than merged**, and please don't be offended if that happens. PRs are still appreciated as a way to clarify the intended behavior, but are not at all required: prefer fo",
                      "markdown": "`er in aggregate.\n\n## Pull requests\n\nage is a little unusual in how it is maintained. I like to keep the code style consistent and complexity to a minimum, and going through many iterations of code review is a significant toil on both contributors and maintainers. age is also small enough that such a time investment is unlikely to pay off over ongoing contributions.\n\nTherefore, **be prepared for your change to get reimplemented rather than merged**, and please don't be offended if that happens. PRs are still appreciated as a way to clarify the intended behavior, but are not at all required: prefer fo`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/logo/README.md"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 62,
                  "endLine": 7,
                  "endColumn": 66,
                  "snippet": {
                    "text": "combined with other text or graphic, and are not used to imply your project is\nendorsed by or affiliated with the age project.\n\nThis permission can be revoked or rescinded for any reason and at any time,\nselectively or otherwise.\n\nIf you require different terms, please email age-logo@filippo.io.\n",
                    "rendered": {
                      "text": "combined with other text or graphic, and are not used to imply your project is\nendorsed by or affiliated with the age project.\n\nThis permission can be revoked or rescinded for any reason and at any time,\nselectively or otherwise.\n\nIf you require different terms, please email age-logo@filippo.io.\n",
                      "markdown": "`combined with other text or graphic, and are not used to imply your project is\nendorsed by or affiliated with the age project.\n\nThis permission can be revoked or rescinded for any reason and at any time,\nselectively or otherwise.\n\nIf you require different terms, please email age-logo@filippo.io.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/internal/stream/stream_test.go"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 23,
                  "endLine": 88,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tif !bytes.Equal(readBuf[:nn], src[n:n+nn]) {\n\t\t\tt.Errorf(\"wrong data at indexes %d - %d\", n, n+nn)\n\t\t}\n\n\t\tn += nn\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\tif !bytes.Equal(readBuf[:nn], src[n:n+nn]) {\n\t\t\tt.Errorf(\"wrong data at indexes %d - %d\", n, n+nn)\n\t\t}\n\n\t\tn += nn\n",
                      "markdown": "`\t\t}\n\n\t\tif !bytes.Equal(readBuf[:nn], src[n:n+nn]) {\n\t\t\tt.Errorf(\"wrong data at indexes %d - %d\", n, n+nn)\n\t\t}\n\n\t\tn += nn\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/internal/stream/stream_test.go"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 23,
                  "endLine": 84,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\tfor n < length {\n\t\tnn, err := r.Read(readBuf)\n\t\tif err != nil {\n\t\t\tt.Fatalf(\"Read error at index %d: %v\", n, err)\n\t\t}\n\n\t\tif !bytes.Equal(readBuf[:nn], src[n:n+nn]) {\n",
                    "rendered": {
                      "text": "\tfor n < length {\n\t\tnn, err := r.Read(readBuf)\n\t\tif err != nil {\n\t\t\tt.Fatalf(\"Read error at index %d: %v\", n, err)\n\t\t}\n\n\t\tif !bytes.Equal(readBuf[:nn], src[n:n+nn]) {\n",
                      "markdown": "`\tfor n < length {\n\t\tnn, err := r.Read(readBuf)\n\t\tif err != nil {\n\t\t\tt.Fatalf(\"Read error at index %d: %v\", n, err)\n\t\t}\n\n\t\tif !bytes.Equal(readBuf[:nn], src[n:n+nn]) {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/x25519.go"
                },
                "region": {
                  "startLine": 206,
                  "startColumn": 44,
                  "endLine": 206,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\n// String returns the Bech32 private key encoding of i.\nfunc (i *X25519Identity) String() string {\n\ts, _ := bech32.Encode(\"AGE-SECRET-KEY-\", i.secretKey)\n\treturn strings.ToUpper(s)\n}\n",
                    "rendered": {
                      "text": "\n// String returns the Bech32 private key encoding of i.\nfunc (i *X25519Identity) String() string {\n\ts, _ := bech32.Encode(\"AGE-SECRET-KEY-\", i.secretKey)\n\treturn strings.ToUpper(s)\n}\n",
                      "markdown": "`\n// String returns the Bech32 private key encoding of i.\nfunc (i *X25519Identity) String() string {\n\ts, _ := bech32.Encode(\"AGE-SECRET-KEY-\", i.secretKey)\n\treturn strings.ToUpper(s)\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/x25519.go"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 42,
                  "endLine": 174,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\t\treturn nil, errors.New(\"invalid X25519 recipient block\")\n\t}\n\n\tsharedSecret, err := curve25519.X25519(i.secretKey, publicKey)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"invalid X25519 recipient: %v\", err)\n\t}\n",
                    "rendered": {
                      "text": "\t\treturn nil, errors.New(\"invalid X25519 recipient block\")\n\t}\n\n\tsharedSecret, err := curve25519.X25519(i.secretKey, publicKey)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"invalid X25519 recipient: %v\", err)\n\t}\n",
                      "markdown": "`\t\treturn nil, errors.New(\"invalid X25519 recipient block\")\n\t}\n\n\tsharedSecret, err := curve25519.X25519(i.secretKey, publicKey)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"invalid X25519 recipient: %v\", err)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/x25519.go"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 36,
                  "endLine": 135,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\tif _, err := rand.Read(secretKey); err != nil {\n\t\treturn nil, fmt.Errorf(\"internal error: %v\", err)\n\t}\n\treturn newX25519IdentityFromScalar(secretKey)\n}\n\n// ParseX25519Identity returns a new X25519Identity from a Bech32 private key\n",
                    "rendered": {
                      "text": "\tif _, err := rand.Read(secretKey); err != nil {\n\t\treturn nil, fmt.Errorf(\"internal error: %v\", err)\n\t}\n\treturn newX25519IdentityFromScalar(secretKey)\n}\n\n// ParseX25519Identity returns a new X25519Identity from a Bech32 private key\n",
                      "markdown": "`\tif _, err := rand.Read(secretKey); err != nil {\n\t\treturn nil, fmt.Errorf(\"internal error: %v\", err)\n\t}\n\treturn newX25519IdentityFromScalar(secretKey)\n}\n\n// ParseX25519Identity returns a new X25519Identity from a Bech32 private key\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/x25519.go"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 24,
                  "endLine": 132,
                  "endColumn": 33,
                  "snippet": {
                    "text": "// GenerateX25519Identity randomly generates a new X25519Identity.\nfunc GenerateX25519Identity() (*X25519Identity, error) {\n\tsecretKey := make([]byte, curve25519.ScalarSize)\n\tif _, err := rand.Read(secretKey); err != nil {\n\t\treturn nil, fmt.Errorf(\"internal error: %v\", err)\n\t}\n\treturn newX25519IdentityFromScalar(secretKey)\n",
                    "rendered": {
                      "text": "// GenerateX25519Identity randomly generates a new X25519Identity.\nfunc GenerateX25519Identity() (*X25519Identity, error) {\n\tsecretKey := make([]byte, curve25519.ScalarSize)\n\tif _, err := rand.Read(secretKey); err != nil {\n\t\treturn nil, fmt.Errorf(\"internal error: %v\", err)\n\t}\n\treturn newX25519IdentityFromScalar(secretKey)\n",
                      "markdown": "`// GenerateX25519Identity randomly generates a new X25519Identity.\nfunc GenerateX25519Identity() (*X25519Identity, error) {\n\tsecretKey := make([]byte, curve25519.ScalarSize)\n\tif _, err := rand.Read(secretKey); err != nil {\n\t\treturn nil, fmt.Errorf(\"internal error: %v\", err)\n\t}\n\treturn newX25519IdentityFromScalar(secretKey)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/x25519.go"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 1,
                  "endLine": 131,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n// GenerateX25519Identity randomly generates a new X25519Identity.\nfunc GenerateX25519Identity() (*X25519Identity, error) {\n\tsecretKey := make([]byte, curve25519.ScalarSize)\n\tif _, err := rand.Read(secretKey); err != nil {\n\t\treturn nil, fmt.Errorf(\"internal error: %v\", err)\n\t}\n",
                    "rendered": {
                      "text": "\n// GenerateX25519Identity randomly generates a new X25519Identity.\nfunc GenerateX25519Identity() (*X25519Identity, error) {\n\tsecretKey := make([]byte, curve25519.ScalarSize)\n\tif _, err := rand.Read(secretKey); err != nil {\n\t\treturn nil, fmt.Errorf(\"internal error: %v\", err)\n\t}\n",
                      "markdown": "`\n// GenerateX25519Identity randomly generates a new X25519Identity.\nfunc GenerateX25519Identity() (*X25519Identity, error) {\n\tsecretKey := make([]byte, curve25519.ScalarSize)\n\tif _, err := rand.Read(secretKey); err != nil {\n\t\treturn nil, fmt.Errorf(\"internal error: %v\", err)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/x25519.go"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 41,
                  "endLine": 125,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\t\tsecretKey: make([]byte, curve25519.ScalarSize),\n\t}\n\tcopy(i.secretKey, secretKey)\n\ti.ourPublicKey, _ = curve25519.X25519(i.secretKey, curve25519.Basepoint)\n\treturn i, nil\n}\n\n",
                    "rendered": {
                      "text": "\t\tsecretKey: make([]byte, curve25519.ScalarSize),\n\t}\n\tcopy(i.secretKey, secretKey)\n\ti.ourPublicKey, _ = curve25519.X25519(i.secretKey, curve25519.Basepoint)\n\treturn i, nil\n}\n\n",
                      "markdown": "`\t\tsecretKey: make([]byte, curve25519.ScalarSize),\n\t}\n\tcopy(i.secretKey, secretKey)\n\ti.ourPublicKey, _ = curve25519.X25519(i.secretKey, curve25519.Basepoint)\n\treturn i, nil\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/x25519.go"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 19,
                  "endLine": 124,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\ti := &X25519Identity{\n\t\tsecretKey: make([]byte, curve25519.ScalarSize),\n\t}\n\tcopy(i.secretKey, secretKey)\n\ti.ourPublicKey, _ = curve25519.X25519(i.secretKey, curve25519.Basepoint)\n\treturn i, nil\n}\n",
                    "rendered": {
                      "text": "\ti := &X25519Identity{\n\t\tsecretKey: make([]byte, curve25519.ScalarSize),\n\t}\n\tcopy(i.secretKey, secretKey)\n\ti.ourPublicKey, _ = curve25519.X25519(i.secretKey, curve25519.Basepoint)\n\treturn i, nil\n}\n",
                      "markdown": "`\ti := &X25519Identity{\n\t\tsecretKey: make([]byte, curve25519.ScalarSize),\n\t}\n\tcopy(i.secretKey, secretKey)\n\ti.ourPublicKey, _ = curve25519.X25519(i.secretKey, curve25519.Basepoint)\n\treturn i, nil\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/x25519.go"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 8,
                  "endLine": 124,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\ti := &X25519Identity{\n\t\tsecretKey: make([]byte, curve25519.ScalarSize),\n\t}\n\tcopy(i.secretKey, secretKey)\n\ti.ourPublicKey, _ = curve25519.X25519(i.secretKey, curve25519.Basepoint)\n\treturn i, nil\n}\n",
                    "rendered": {
                      "text": "\ti := &X25519Identity{\n\t\tsecretKey: make([]byte, curve25519.ScalarSize),\n\t}\n\tcopy(i.secretKey, secretKey)\n\ti.ourPublicKey, _ = curve25519.X25519(i.secretKey, curve25519.Basepoint)\n\treturn i, nil\n}\n",
                      "markdown": "`\ti := &X25519Identity{\n\t\tsecretKey: make([]byte, curve25519.ScalarSize),\n\t}\n\tcopy(i.secretKey, secretKey)\n\ti.ourPublicKey, _ = curve25519.X25519(i.secretKey, curve25519.Basepoint)\n\treturn i, nil\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/x25519.go"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 2,
                  "endLine": 122,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\treturn nil, errors.New(\"invalid X25519 secret key\")\n\t}\n\ti := &X25519Identity{\n\t\tsecretKey: make([]byte, curve25519.ScalarSize),\n\t}\n\tcopy(i.secretKey, secretKey)\n\ti.ourPublicKey, _ = curve25519.X25519(i.secretKey, curve25519.Basepoint)\n",
                    "rendered": {
                      "text": "\t\treturn nil, errors.New(\"invalid X25519 secret key\")\n\t}\n\ti := &X25519Identity{\n\t\tsecretKey: make([]byte, curve25519.ScalarSize),\n\t}\n\tcopy(i.secretKey, secretKey)\n\ti.ourPublicKey, _ = curve25519.X25519(i.secretKey, curve25519.Basepoint)\n",
                      "markdown": "`\t\treturn nil, errors.New(\"invalid X25519 secret key\")\n\t}\n\ti := &X25519Identity{\n\t\tsecretKey: make([]byte, curve25519.ScalarSize),\n\t}\n\tcopy(i.secretKey, secretKey)\n\ti.ourPublicKey, _ = curve25519.X25519(i.secretKey, curve25519.Basepoint)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/x25519.go"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 8,
                  "endLine": 118,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n// newX25519IdentityFromScalar returns a new X25519Identity from a raw Curve25519 scalar.\nfunc newX25519IdentityFromScalar(secretKey []byte) (*X25519Identity, error) {\n\tif len(secretKey) != curve25519.ScalarSize {\n\t\treturn nil, errors.New(\"invalid X25519 secret key\")\n\t}\n\ti := &X25519Identity{\n",
                    "rendered": {
                      "text": "\n// newX25519IdentityFromScalar returns a new X25519Identity from a raw Curve25519 scalar.\nfunc newX25519IdentityFromScalar(secretKey []byte) (*X25519Identity, error) {\n\tif len(secretKey) != curve25519.ScalarSize {\n\t\treturn nil, errors.New(\"invalid X25519 secret key\")\n\t}\n\ti := &X25519Identity{\n",
                      "markdown": "`\n// newX25519IdentityFromScalar returns a new X25519Identity from a raw Curve25519 scalar.\nfunc newX25519IdentityFromScalar(secretKey []byte) (*X25519Identity, error) {\n\tif len(secretKey) != curve25519.ScalarSize {\n\t\treturn nil, errors.New(\"invalid X25519 secret key\")\n\t}\n\ti := &X25519Identity{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/x25519.go"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 33,
                  "endLine": 117,
                  "endColumn": 42,
                  "snippet": {
                    "text": "var _ Identity = &X25519Identity{}\n\n// newX25519IdentityFromScalar returns a new X25519Identity from a raw Curve25519 scalar.\nfunc newX25519IdentityFromScalar(secretKey []byte) (*X25519Identity, error) {\n\tif len(secretKey) != curve25519.ScalarSize {\n\t\treturn nil, errors.New(\"invalid X25519 secret key\")\n\t}\n",
                    "rendered": {
                      "text": "var _ Identity = &X25519Identity{}\n\n// newX25519IdentityFromScalar returns a new X25519Identity from a raw Curve25519 scalar.\nfunc newX25519IdentityFromScalar(secretKey []byte) (*X25519Identity, error) {\n\tif len(secretKey) != curve25519.ScalarSize {\n\t\treturn nil, errors.New(\"invalid X25519 secret key\")\n\t}\n",
                      "markdown": "`var _ Identity = &X25519Identity{}\n\n// newX25519IdentityFromScalar returns a new X25519Identity from a raw Curve25519 scalar.\nfunc newX25519IdentityFromScalar(secretKey []byte) (*X25519Identity, error) {\n\tif len(secretKey) != curve25519.ScalarSize {\n\t\treturn nil, errors.New(\"invalid X25519 secret key\")\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/x25519.go"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 1,
                  "endLine": 111,
                  "endColumn": 10,
                  "snippet": {
                    "text": "// X25519Identity is the standard age private key, which can decrypt messages\n// encrypted to the corresponding X25519Recipient.\ntype X25519Identity struct {\n\tsecretKey, ourPublicKey []byte\n}\n\nvar _ Identity = &X25519Identity{}\n",
                    "rendered": {
                      "text": "// X25519Identity is the standard age private key, which can decrypt messages\n// encrypted to the corresponding X25519Recipient.\ntype X25519Identity struct {\n\tsecretKey, ourPublicKey []byte\n}\n\nvar _ Identity = &X25519Identity{}\n",
                      "markdown": "`// X25519Identity is the standard age private key, which can decrypt messages\n// encrypted to the corresponding X25519Recipient.\ntype X25519Identity struct {\n\tsecretKey, ourPublicKey []byte\n}\n\nvar _ Identity = &X25519Identity{}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/primitives.go"
                },
                "region": {
                  "startLine": 58,
                  "endLine": 58,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tif _, err := io.ReadFull(h, hmacKey); err != nil {\n\t\treturn nil, err\n\t}\n\thh := hmac.New(sha256.New, hmacKey)\n\tif err := hdr.MarshalWithoutMAC(hh); err != nil {\n\t\treturn nil, err\n\t}\n",
                    "rendered": {
                      "text": "\tif _, err := io.ReadFull(h, hmacKey); err != nil {\n\t\treturn nil, err\n\t}\n\thh := hmac.New(sha256.New, hmacKey)\n\tif err := hdr.MarshalWithoutMAC(hh); err != nil {\n\t\treturn nil, err\n\t}\n",
                      "markdown": "`\tif _, err := io.ReadFull(h, hmacKey); err != nil {\n\t\treturn nil, err\n\t}\n\thh := hmac.New(sha256.New, hmacKey)\n\tif err := hdr.MarshalWithoutMAC(hh); err != nil {\n\t\treturn nil, err\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/testkit_test.go"
                },
                "region": {
                  "startLine": 205,
                  "startColumn": 2,
                  "endLine": 205,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t\t\t// leading spaces are allowed and won't round-trip.\n\t\t\texpect := bytes.Replace(v.file, []byte(\"\\r\\n\"), []byte(\"\\n\"), -1)\n\t\t\texpect = bytes.TrimSpace(expect)\n\t\t\texpect = append(expect, '\\n')\n\t\t\tif !bytes.Equal(buf.Bytes(), expect) {\n\t\t\t\tt.Error(\"got a different armor encoding\")\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t// leading spaces are allowed and won't round-trip.\n\t\t\texpect := bytes.Replace(v.file, []byte(\"\\r\\n\"), []byte(\"\\n\"), -1)\n\t\t\texpect = bytes.TrimSpace(expect)\n\t\t\texpect = append(expect, '\\n')\n\t\t\tif !bytes.Equal(buf.Bytes(), expect) {\n\t\t\t\tt.Error(\"got a different armor encoding\")\n\t\t\t}\n",
                      "markdown": "`\t\t\t// leading spaces are allowed and won't round-trip.\n\t\t\texpect := bytes.Replace(v.file, []byte(\"\\r\\n\"), []byte(\"\\n\"), -1)\n\t\t\texpect = bytes.TrimSpace(expect)\n\t\t\texpect = append(expect, '\\n')\n\t\t\tif !bytes.Equal(buf.Bytes(), expect) {\n\t\t\t\tt.Error(\"got a different armor encoding\")\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/testkit_test.go"
                },
                "region": {
                  "startLine": 204,
                  "startColumn": 2,
                  "endLine": 204,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t\t\t// Armor format is not perfectly strict: CRLF ↔ LF and trailing and\n\t\t\t// leading spaces are allowed and won't round-trip.\n\t\t\texpect := bytes.Replace(v.file, []byte(\"\\r\\n\"), []byte(\"\\n\"), -1)\n\t\t\texpect = bytes.TrimSpace(expect)\n\t\t\texpect = append(expect, '\\n')\n\t\t\tif !bytes.Equal(buf.Bytes(), expect) {\n\t\t\t\tt.Error(\"got a different armor encoding\")\n",
                    "rendered": {
                      "text": "\t\t\t// Armor format is not perfectly strict: CRLF ↔ LF and trailing and\n\t\t\t// leading spaces are allowed and won't round-trip.\n\t\t\texpect := bytes.Replace(v.file, []byte(\"\\r\\n\"), []byte(\"\\n\"), -1)\n\t\t\texpect = bytes.TrimSpace(expect)\n\t\t\texpect = append(expect, '\\n')\n\t\t\tif !bytes.Equal(buf.Bytes(), expect) {\n\t\t\t\tt.Error(\"got a different armor encoding\")\n",
                      "markdown": "`\t\t\t// Armor format is not perfectly strict: CRLF ↔ LF and trailing and\n\t\t\t// leading spaces are allowed and won't round-trip.\n\t\t\texpect := bytes.Replace(v.file, []byte(\"\\r\\n\"), []byte(\"\\n\"), -1)\n\t\t\texpect = bytes.TrimSpace(expect)\n\t\t\texpect = append(expect, '\\n')\n\t\t\tif !bytes.Equal(buf.Bytes(), expect) {\n\t\t\t\tt.Error(\"got a different armor encoding\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/testkit_test.go"
                },
                "region": {
                  "startLine": 203,
                  "startColumn": 2,
                  "endLine": 203,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t\t\t}\n\t\t\t// Armor format is not perfectly strict: CRLF ↔ LF and trailing and\n\t\t\t// leading spaces are allowed and won't round-trip.\n\t\t\texpect := bytes.Replace(v.file, []byte(\"\\r\\n\"), []byte(\"\\n\"), -1)\n\t\t\texpect = bytes.TrimSpace(expect)\n\t\t\texpect = append(expect, '\\n')\n\t\t\tif !bytes.Equal(buf.Bytes(), expect) {\n",
                    "rendered": {
                      "text": "\t\t\t}\n\t\t\t// Armor format is not perfectly strict: CRLF ↔ LF and trailing and\n\t\t\t// leading spaces are allowed and won't round-trip.\n\t\t\texpect := bytes.Replace(v.file, []byte(\"\\r\\n\"), []byte(\"\\n\"), -1)\n\t\t\texpect = bytes.TrimSpace(expect)\n\t\t\texpect = append(expect, '\\n')\n\t\t\tif !bytes.Equal(buf.Bytes(), expect) {\n",
                      "markdown": "`\t\t\t}\n\t\t\t// Armor format is not perfectly strict: CRLF ↔ LF and trailing and\n\t\t\t// leading spaces are allowed and won't round-trip.\n\t\t\texpect := bytes.Replace(v.file, []byte(\"\\r\\n\"), []byte(\"\\n\"), -1)\n\t\t\texpect = bytes.TrimSpace(expect)\n\t\t\texpect = append(expect, '\\n')\n\t\t\tif !bytes.Equal(buf.Bytes(), expect) {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/testkit_test.go"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 39,
                  "endLine": 79,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\t\t\tcase \"payload failure\":\n\t\t\tcase \"no match\":\n\t\t\tdefault:\n\t\t\t\tt.Fatal(\"invalid test file: unknown expect value:\", value)\n\t\t\t}\n\t\t\tv.expect = value\n\t\tcase \"payload\":\n",
                    "rendered": {
                      "text": "\t\t\tcase \"payload failure\":\n\t\t\tcase \"no match\":\n\t\t\tdefault:\n\t\t\t\tt.Fatal(\"invalid test file: unknown expect value:\", value)\n\t\t\t}\n\t\t\tv.expect = value\n\t\tcase \"payload\":\n",
                      "markdown": "`\t\t\tcase \"payload failure\":\n\t\t\tcase \"no match\":\n\t\t\tdefault:\n\t\t\t\tt.Fatal(\"invalid test file: unknown expect value:\", value)\n\t\t\t}\n\t\t\tv.expect = value\n\t\tcase \"payload\":\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/testkit_test.go"
                },
                "region": {
                  "startLine": 49,
                  "endLine": 49,
                  "endColumn": 8,
                  "snippet": {
                    "text": "}\n\ntype vector struct {\n\texpect      string\n\tpayloadHash *[32]byte\n\tfileKey     *[16]byte\n\tidentities  []age.Identity\n",
                    "rendered": {
                      "text": "}\n\ntype vector struct {\n\texpect      string\n\tpayloadHash *[32]byte\n\tfileKey     *[16]byte\n\tidentities  []age.Identity\n",
                      "markdown": "`}\n\ntype vector struct {\n\texpect      string\n\tpayloadHash *[32]byte\n\tfileKey     *[16]byte\n\tidentities  []age.Identity\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age-keygen/keygen.go"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 62,
                  "endLine": 157,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\nfunc errorf(format string, v ...interface{}) {\n\tlog.Printf(\"age-keygen: error: \"+format, v...)\n\tlog.Fatalf(\"age-keygen: report unexpected or unhelpful errors at https://filippo.io/age/report\")\n}\n\nfunc warning(msg string) {\n",
                    "rendered": {
                      "text": "\nfunc errorf(format string, v ...interface{}) {\n\tlog.Printf(\"age-keygen: error: \"+format, v...)\n\tlog.Fatalf(\"age-keygen: report unexpected or unhelpful errors at https://filippo.io/age/report\")\n}\n\nfunc warning(msg string) {\n",
                      "markdown": "`\nfunc errorf(format string, v ...interface{}) {\n\tlog.Printf(\"age-keygen: error: \"+format, v...)\n\tlog.Fatalf(\"age-keygen: report unexpected or unhelpful errors at https://filippo.io/age/report\")\n}\n\nfunc warning(msg string) {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age-keygen/keygen.go"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 58,
                  "endLine": 25,
                  "endColumn": 62,
                  "snippet": {
                    "text": "    age-keygen -y [-o OUTPUT] [INPUT]\n\nOptions:\n    -o, --output OUTPUT       Write the result to the file at path OUTPUT.\n    -y                        Convert an identity file to a recipients file.\n\nage-keygen generates a new native X25519 key pair, and outputs it to\n",
                    "rendered": {
                      "text": "    age-keygen -y [-o OUTPUT] [INPUT]\n\nOptions:\n    -o, --output OUTPUT       Write the result to the file at path OUTPUT.\n    -y                        Convert an identity file to a recipients file.\n\nage-keygen generates a new native X25519 key pair, and outputs it to\n",
                      "markdown": "`    age-keygen -y [-o OUTPUT] [INPUT]\n\nOptions:\n    -o, --output OUTPUT       Write the result to the file at path OUTPUT.\n    -y                        Convert an identity file to a recipients file.\n\nage-keygen generates a new native X25519 key pair, and outputs it to\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/testdata/output_file.txt"
                },
                "region": {
                  "startLine": 65,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n-- terminal --\npassword\npassword\n-- terminalwrong --\nwrong\n-- input --\n",
                    "rendered": {
                      "text": "\n-- terminal --\npassword\npassword\n-- terminalwrong --\nwrong\n-- input --\n",
                      "markdown": "`\n-- terminal --\npassword\npassword\n-- terminalwrong --\nwrong\n-- input --\n`"
                    }
                  },
                  "sourceLanguage": "plaintext"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/testdata/output_file.txt"
                },
                "region": {
                  "startLine": 64,
                  "endLine": 64,
                  "endColumn": 8,
                  "snippet": {
                    "text": "! exists test.out\n\n-- terminal --\npassword\npassword\n-- terminalwrong --\nwrong\n",
                    "rendered": {
                      "text": "! exists test.out\n\n-- terminal --\npassword\npassword\n-- terminalwrong --\nwrong\n",
                      "markdown": "`! exists test.out\n\n-- terminal --\npassword\npassword\n-- terminalwrong --\nwrong\n`"
                    }
                  },
                  "sourceLanguage": "plaintext"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/testdata/encrypted_keys.txt"
                },
                "region": {
                  "startLine": 66,
                  "endLine": 66,
                  "endColumn": 8,
                  "snippet": {
                    "text": "-- input --\ntest\n-- terminal --\npassword\n-- key_ed25519 --\n-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAACmFlczI1Ni1jdHIAAAAGYmNyeXB0AAAAGAAAABCuvb97i7\n",
                    "rendered": {
                      "text": "-- input --\ntest\n-- terminal --\npassword\n-- key_ed25519 --\n-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAACmFlczI1Ni1jdHIAAAAGYmNyeXB0AAAAGAAAABCuvb97i7\n",
                      "markdown": "`-- input --\ntest\n-- terminal --\npassword\n-- key_ed25519 --\n-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAACmFlczI1Ni1jdHIAAAAGYmNyeXB0AAAAGAAAABCuvb97i7\n`"
                    }
                  },
                  "sourceLanguage": "plaintext"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/testdata/encrypted_keys.txt"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 55,
                  "endLine": 56,
                  "endColumn": 63,
                  "snippet": {
                    "text": "# buffer armored ciphertext before prompting if stdin is the terminal\nttyin terminal\nage -e -i key_ed25519 -a -o test.age input\nexec cat test.age terminal # concatenated ciphertext + password\nttyin -stdin stdout\nage -d -i key_ed25519\nttyout 'Enter passphrase'\n",
                    "rendered": {
                      "text": "# buffer armored ciphertext before prompting if stdin is the terminal\nttyin terminal\nage -e -i key_ed25519 -a -o test.age input\nexec cat test.age terminal # concatenated ciphertext + password\nttyin -stdin stdout\nage -d -i key_ed25519\nttyout 'Enter passphrase'\n",
                      "markdown": "`# buffer armored ciphertext before prompting if stdin is the terminal\nttyin terminal\nage -e -i key_ed25519 -a -o test.age input\nexec cat test.age terminal # concatenated ciphertext + password\nttyin -stdin stdout\nage -d -i key_ed25519\nttyout 'Enter passphrase'\n`"
                    }
                  },
                  "sourceLanguage": "plaintext"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/testdata/encrypted_keys.txt"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 57,
                  "endLine": 21,
                  "endColumn": 65,
                  "snippet": {
                    "text": "age -d -i key_ed25519 ed25519.age\ncmp stdout input\n\n# a file encrypted to the wrong key does not ask for the password\nage -R key_ed25519_other.pub -o ed25519_other.age input\n! age -d -i key_ed25519 ed25519_other.age\nstderr 'no identity matched any of the recipients'\n",
                    "rendered": {
                      "text": "age -d -i key_ed25519 ed25519.age\ncmp stdout input\n\n# a file encrypted to the wrong key does not ask for the password\nage -R key_ed25519_other.pub -o ed25519_other.age input\n! age -d -i key_ed25519 ed25519_other.age\nstderr 'no identity matched any of the recipients'\n",
                      "markdown": "`age -d -i key_ed25519 ed25519.age\ncmp stdout input\n\n# a file encrypted to the wrong key does not ask for the password\nage -R key_ed25519_other.pub -o ed25519_other.age input\n! age -d -i key_ed25519 ed25519_other.age\nstderr 'no identity matched any of the recipients'\n`"
                    }
                  },
                  "sourceLanguage": "plaintext"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/testdata/encrypted_keys.txt"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 11,
                  "endLine": 2,
                  "endColumn": 19,
                  "snippet": {
                    "text": "# TODO: age-encrypted private keys, multiple identities, -i ordering, -e -i,\n# age file password prompt during encryption\n\n[!linux] [!darwin] skip # no pty support\n[darwin] [go1.20] skip # https://go.dev/issue/61779\n",
                    "rendered": {
                      "text": "# TODO: age-encrypted private keys, multiple identities, -i ordering, -e -i,\n# age file password prompt during encryption\n\n[!linux] [!darwin] skip # no pty support\n[darwin] [go1.20] skip # https://go.dev/issue/61779\n",
                      "markdown": "`# TODO: age-encrypted private keys, multiple identities, -i ordering, -e -i,\n# age file password prompt during encryption\n\n[!linux] [!darwin] skip # no pty support\n[darwin] [go1.20] skip # https://go.dev/issue/61779\n`"
                    }
                  },
                  "sourceLanguage": "plaintext"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/testdata/terminal.txt"
                },
                "region": {
                  "startLine": 55,
                  "endLine": 55,
                  "endColumn": 8,
                  "snippet": {
                    "text": "test\n-- terminal --\npassword\npassword\n-- empty --\n\n",
                    "rendered": {
                      "text": "test\n-- terminal --\npassword\npassword\n-- empty --\n\n",
                      "markdown": "`test\n-- terminal --\npassword\npassword\n-- empty --\n\n`"
                    }
                  },
                  "sourceLanguage": "plaintext"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/testdata/terminal.txt"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 8,
                  "snippet": {
                    "text": "-- input --\ntest\n-- terminal --\npassword\npassword\n-- empty --\n\n",
                    "rendered": {
                      "text": "-- input --\ntest\n-- terminal --\npassword\npassword\n-- empty --\n\n",
                      "markdown": "`-- input --\ntest\n-- terminal --\npassword\npassword\n-- empty --\n\n`"
                    }
                  },
                  "sourceLanguage": "plaintext"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/testdata/terminal.txt"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 55,
                  "endLine": 44,
                  "endColumn": 63,
                  "snippet": {
                    "text": "# buffer armored ciphertext before prompting if stdin is the terminal\nttyin terminal\nage -p -a -o test.age input\nexec cat test.age terminal # concatenated ciphertext + password\nttyin -stdin stdout\nage -d\nttyout 'Enter passphrase'\n",
                    "rendered": {
                      "text": "# buffer armored ciphertext before prompting if stdin is the terminal\nttyin terminal\nage -p -a -o test.age input\nexec cat test.age terminal # concatenated ciphertext + password\nttyin -stdin stdout\nage -d\nttyout 'Enter passphrase'\n",
                      "markdown": "`# buffer armored ciphertext before prompting if stdin is the terminal\nttyin terminal\nage -p -a -o test.age input\nexec cat test.age terminal # concatenated ciphertext + password\nttyin -stdin stdout\nage -d\nttyout 'Enter passphrase'\n`"
                    }
                  },
                  "sourceLanguage": "plaintext"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/testdata/terminal.txt"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 39,
                  "endLine": 31,
                  "endColumn": 47,
                  "snippet": {
                    "text": "# stderr 'standard input is not a terminal'\n\n# prompt for password before plaintext if stdin is the terminal\nexec cat terminal input # concatenated password + input\nttyin -stdin stdout\nage -p -a -o test.age\nttyout 'Enter passphrase'\n",
                    "rendered": {
                      "text": "# stderr 'standard input is not a terminal'\n\n# prompt for password before plaintext if stdin is the terminal\nexec cat terminal input # concatenated password + input\nttyin -stdin stdout\nage -p -a -o test.age\nttyout 'Enter passphrase'\n",
                      "markdown": "`# stderr 'standard input is not a terminal'\n\n# prompt for password before plaintext if stdin is the terminal\nexec cat terminal input # concatenated password + input\nttyin -stdin stdout\nage -p -a -o test.age\nttyout 'Enter passphrase'\n`"
                    }
                  },
                  "sourceLanguage": "plaintext"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/cmd/age/testdata/terminal.txt"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 13,
                  "endLine": 30,
                  "endColumn": 21,
                  "snippet": {
                    "text": "# ! age -p -o test.age input\n# stderr 'standard input is not a terminal'\n\n# prompt for password before plaintext if stdin is the terminal\nexec cat terminal input # concatenated password + input\nttyin -stdin stdout\nage -p -a -o test.age\n",
                    "rendered": {
                      "text": "# ! age -p -o test.age input\n# stderr 'standard input is not a terminal'\n\n# prompt for password before plaintext if stdin is the terminal\nexec cat terminal input # concatenated password + input\nttyin -stdin stdout\nage -p -a -o test.age\n",
                      "markdown": "`# ! age -p -o test.age input\n# stderr 'standard input is not a terminal'\n\n# prompt for password before plaintext if stdin is the terminal\nexec cat terminal input # concatenated password + input\nttyin -stdin stdout\nage -p -a -o test.age\n`"
                    }
                  },
                  "sourceLanguage": "plaintext"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1"
                },
                "region": {
                  "startLine": 224,
                  "startColumn": 17,
                  "endLine": 224,
                  "endColumn": 21,
                  "snippet": {
                    "text": ".nf\n$ age \\-R ~/\\.ssh/id_ed25519\\.pub example\\.jpg > example\\.jpg\\.age\n\n$ age \\-d \\-i ~/\\.ssh/id_ed25519 example\\.jpg\\.age > example\\.jpg\n.fi\n.IP \"\" 0\n.P\n",
                    "rendered": {
                      "text": ".nf\n$ age \\-R ~/\\.ssh/id_ed25519\\.pub example\\.jpg > example\\.jpg\\.age\n\n$ age \\-d \\-i ~/\\.ssh/id_ed25519 example\\.jpg\\.age > example\\.jpg\n.fi\n.IP \"\" 0\n.P\n",
                      "markdown": "`.nf\n$ age \\-R ~/\\.ssh/id_ed25519\\.pub example\\.jpg > example\\.jpg\\.age\n\n$ age \\-d \\-i ~/\\.ssh/id_ed25519 example\\.jpg\\.age > example\\.jpg\n.fi\n.IP \"\" 0\n.P\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 13,
                  "endLine": 222,
                  "endColumn": 17,
                  "snippet": {
                    "text": "Encrypt and decrypt with an SSH public key:\n.IP \"\" 4\n.nf\n$ age \\-R ~/\\.ssh/id_ed25519\\.pub example\\.jpg > example\\.jpg\\.age\n\n$ age \\-d \\-i ~/\\.ssh/id_ed25519 example\\.jpg\\.age > example\\.jpg\n.fi\n",
                    "rendered": {
                      "text": "Encrypt and decrypt with an SSH public key:\n.IP \"\" 4\n.nf\n$ age \\-R ~/\\.ssh/id_ed25519\\.pub example\\.jpg > example\\.jpg\\.age\n\n$ age \\-d \\-i ~/\\.ssh/id_ed25519 example\\.jpg\\.age > example\\.jpg\n.fi\n",
                      "markdown": "`Encrypt and decrypt with an SSH public key:\n.IP \"\" 4\n.nf\n$ age \\-R ~/\\.ssh/id_ed25519\\.pub example\\.jpg > example\\.jpg\\.age\n\n$ age \\-d \\-i ~/\\.ssh/id_ed25519 example\\.jpg\\.age > example\\.jpg\n.fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 365,
                  "endLine": 149,
                  "endColumn": 373,
                  "snippet": {
                    "text": "doesn't make sense (such as a symmetric encryption plugin) may generate only an \\fBIDENTITY\\fR and instruct the user to perform encryption with the \\fB\\-e\\fR/\\fB\\-\\-encrypt\\fR and \\fB\\-i\\fR/\\fB\\-\\-identity\\fR flags\\. Plugins for which the concept of separate identities doesn't make sense (such as a password\\-encryption plugin) may instruct the user to use the \\fB\\-j\\fR flag\\.\n.SH \"EXIT STATUS\"\n\\fBage\\fR will exit 0 if and only if encryption or decryption are successful for the full length of the input\\.\n.P\nIf an error occurs during decryption, partial output might still be generated, but only if it wa",
                    "rendered": {
                      "text": "doesn't make sense (such as a symmetric encryption plugin) may generate only an \\fBIDENTITY\\fR and instruct the user to perform encryption with the \\fB\\-e\\fR/\\fB\\-\\-encrypt\\fR and \\fB\\-i\\fR/\\fB\\-\\-identity\\fR flags\\. Plugins for which the concept of separate identities doesn't make sense (such as a password\\-encryption plugin) may instruct the user to use the \\fB\\-j\\fR flag\\.\n.SH \"EXIT STATUS\"\n\\fBage\\fR will exit 0 if and only if encryption or decryption are successful for the full length of the input\\.\n.P\nIf an error occurs during decryption, partial output might still be generated, but only if it wa",
                      "markdown": "`doesn't make sense (such as a symmetric encryption plugin) may generate only an \\fBIDENTITY\\fR and instruct the user to perform encryption with the \\fB\\-e\\fR/\\fB\\-\\-encrypt\\fR and \\fB\\-i\\fR/\\fB\\-\\-identity\\fR flags\\. Plugins for which the concept of separate identities doesn't make sense (such as a password\\-encryption plugin) may instruct the user to use the \\fB\\-j\\fR flag\\.\n.SH \"EXIT STATUS\"\n\\fBage\\fR will exit 0 if and only if encryption or decryption are successful for the full length of the input\\.\n.P\nIf an error occurs during decryption, partial output might still be generated, but only if it wa`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 171,
                  "endLine": 137,
                  "endColumn": 179,
                  "snippet": {
                    "text": "fB\\-\\-identity\\fR\\. Note that keys held on hardware tokens such as YubiKeys or accessed via ssh\\-agent(1) are not supported\\.\n.P\nAn encrypted file \\fIcan\\fR be linked to the SSH public key it was encrypted to\\. This is so that \\fBage\\fR can identify the correct SSH private key before requesting its password, if any\\.\n.SS \"Plugins\"\n\\fBage\\fR can be extended through plugins\\. A plugin is only loaded if a corresponding \\fBRECIPIENT\\fR or \\fBIDENTITY\\fR is specified\\. (Simply decrypting a file encrypted with a plugin will not cause it to load, for security reasons among others\\.)\n.P\nA \\fBRECIPIENT\\fR for ",
                    "rendered": {
                      "text": "fB\\-\\-identity\\fR\\. Note that keys held on hardware tokens such as YubiKeys or accessed via ssh\\-agent(1) are not supported\\.\n.P\nAn encrypted file \\fIcan\\fR be linked to the SSH public key it was encrypted to\\. This is so that \\fBage\\fR can identify the correct SSH private key before requesting its password, if any\\.\n.SS \"Plugins\"\n\\fBage\\fR can be extended through plugins\\. A plugin is only loaded if a corresponding \\fBRECIPIENT\\fR or \\fBIDENTITY\\fR is specified\\. (Simply decrypting a file encrypted with a plugin will not cause it to load, for security reasons among others\\.)\n.P\nA \\fBRECIPIENT\\fR for ",
                      "markdown": "`fB\\-\\-identity\\fR\\. Note that keys held on hardware tokens such as YubiKeys or accessed via ssh\\-agent(1) are not supported\\.\n.P\nAn encrypted file \\fIcan\\fR be linked to the SSH public key it was encrypted to\\. This is so that \\fBage\\fR can identify the correct SSH private key before requesting its password, if any\\.\n.SS \"Plugins\"\n\\fBage\\fR can be extended through plugins\\. A plugin is only loaded if a corresponding \\fBRECIPIENT\\fR or \\fBIDENTITY\\fR is specified\\. (Simply decrypting a file encrypted with a plugin will not cause it to load, for security reasons among others\\.)\n.P\nA \\fBRECIPIENT\\fR for `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 156,
                  "endLine": 133,
                  "endColumn": 171,
                  "snippet": {
                    "text": ".P\nThe comment at the end of the line, if present, is ignored\\.\n.P\nIn recipient files passed to \\fB\\-R\\fR/\\fB\\-\\-recipients\\-file\\fR, unsupported but valid SSH public keys are ignored with a warning, to facilitate using \\fBauthorized_keys\\fR or GitHub \\fB\\.keys\\fR files\\. (See \\fIEXAMPLES\\fR\\.)\n.P\nAn \\fBIDENTITY\\fR is an SSH private key \\fIfile\\fR passed individually to \\fB\\-i\\fR/\\fB\\-\\-identity\\fR\\. Note that keys held on hardware tokens such as YubiKeys or accessed via ssh\\-agent(1) are not supported\\.\n.P\n",
                    "rendered": {
                      "text": ".P\nThe comment at the end of the line, if present, is ignored\\.\n.P\nIn recipient files passed to \\fB\\-R\\fR/\\fB\\-\\-recipients\\-file\\fR, unsupported but valid SSH public keys are ignored with a warning, to facilitate using \\fBauthorized_keys\\fR or GitHub \\fB\\.keys\\fR files\\. (See \\fIEXAMPLES\\fR\\.)\n.P\nAn \\fBIDENTITY\\fR is an SSH private key \\fIfile\\fR passed individually to \\fB\\-i\\fR/\\fB\\-\\-identity\\fR\\. Note that keys held on hardware tokens such as YubiKeys or accessed via ssh\\-agent(1) are not supported\\.\n.P\n",
                      "markdown": "`.P\nThe comment at the end of the line, if present, is ignored\\.\n.P\nIn recipient files passed to \\fB\\-R\\fR/\\fB\\-\\-recipients\\-file\\fR, unsupported but valid SSH public keys are ignored with a warning, to facilitate using \\fBauthorized_keys\\fR or GitHub \\fB\\.keys\\fR files\\. (See \\fIEXAMPLES\\fR\\.)\n.P\nAn \\fBIDENTITY\\fR is an SSH private key \\fIfile\\fR passed individually to \\fB\\-i\\fR/\\fB\\-\\-identity\\fR\\. Note that keys held on hardware tokens such as YubiKeys or accessed via ssh\\-agent(1) are not supported\\.\n.P\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 92,
                  "endLine": 123,
                  "endColumn": 107,
                  "snippet": {
                    "text": "ould only be used when a native key is not available for the recipient\\. Note that SSH keys might not be protected long\\-term by the recipient, since they are revokable when used only for authentication\\.\n.P\nA \\fBRECIPIENT\\fR encoding is an SSH public key in \\fBauthorized_keys\\fR format (see the \\fBAUTHORIZED_KEYS FILE FORMAT\\fR section of sshd(8)), starting with \\fBssh\\-rsa\\fR or \\fBssh\\-ed25519\\fR, like the following:\n.IP \"\" 4\n.nf\nssh\\-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDULTit0KUehbi[\\|\\.\\|\\.\\|\\.]GU4BtElAbzh8=\nssh\\-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIH9pO5pz22JZEas[\\|\\.\\|\\.\\|\\.]l1uZc31FGYMXa\n.fi\n.IP \"\" 0\n.P\nTh",
                    "rendered": {
                      "text": "ould only be used when a native key is not available for the recipient\\. Note that SSH keys might not be protected long\\-term by the recipient, since they are revokable when used only for authentication\\.\n.P\nA \\fBRECIPIENT\\fR encoding is an SSH public key in \\fBauthorized_keys\\fR format (see the \\fBAUTHORIZED_KEYS FILE FORMAT\\fR section of sshd(8)), starting with \\fBssh\\-rsa\\fR or \\fBssh\\-ed25519\\fR, like the following:\n.IP \"\" 4\n.nf\nssh\\-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDULTit0KUehbi[\\|\\.\\|\\.\\|\\.]GU4BtElAbzh8=\nssh\\-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIH9pO5pz22JZEas[\\|\\.\\|\\.\\|\\.]l1uZc31FGYMXa\n.fi\n.IP \"\" 0\n.P\nTh",
                      "markdown": "`ould only be used when a native key is not available for the recipient\\. Note that SSH keys might not be protected long\\-term by the recipient, since they are revokable when used only for authentication\\.\n.P\nA \\fBRECIPIENT\\fR encoding is an SSH public key in \\fBauthorized_keys\\fR format (see the \\fBAUTHORIZED_KEYS FILE FORMAT\\fR section of sshd(8)), starting with \\fBssh\\-rsa\\fR or \\fBssh\\-ed25519\\fR, like the following:\n.IP \"\" 4\n.nf\nssh\\-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDULTit0KUehbi[\\|\\.\\|\\.\\|\\.]GU4BtElAbzh8=\nssh\\-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIH9pO5pz22JZEas[\\|\\.\\|\\.\\|\\.]l1uZc31FGYMXa\n.fi\n.IP \"\" 0\n.P\nTh`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 54,
                  "endLine": 123,
                  "endColumn": 69,
                  "snippet": {
                    "text": "loys more complex cryptography, and should only be used when a native key is not available for the recipient\\. Note that SSH keys might not be protected long\\-term by the recipient, since they are revokable when used only for authentication\\.\n.P\nA \\fBRECIPIENT\\fR encoding is an SSH public key in \\fBauthorized_keys\\fR format (see the \\fBAUTHORIZED_KEYS FILE FORMAT\\fR section of sshd(8)), starting with \\fBssh\\-rsa\\fR or \\fBssh\\-ed25519\\fR, like the following:\n.IP \"\" 4\n.nf\nssh\\-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDULTit0KUehbi[\\|\\.\\|\\.\\|\\.]GU4BtElAbzh8=\nssh\\-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIH9pO5pz22JZEas[\\|\\.\\|\\",
                    "rendered": {
                      "text": "loys more complex cryptography, and should only be used when a native key is not available for the recipient\\. Note that SSH keys might not be protected long\\-term by the recipient, since they are revokable when used only for authentication\\.\n.P\nA \\fBRECIPIENT\\fR encoding is an SSH public key in \\fBauthorized_keys\\fR format (see the \\fBAUTHORIZED_KEYS FILE FORMAT\\fR section of sshd(8)), starting with \\fBssh\\-rsa\\fR or \\fBssh\\-ed25519\\fR, like the following:\n.IP \"\" 4\n.nf\nssh\\-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDULTit0KUehbi[\\|\\.\\|\\.\\|\\.]GU4BtElAbzh8=\nssh\\-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIH9pO5pz22JZEas[\\|\\.\\|\\",
                      "markdown": "`loys more complex cryptography, and should only be used when a native key is not available for the recipient\\. Note that SSH keys might not be protected long\\-term by the recipient, since they are revokable when used only for authentication\\.\n.P\nA \\fBRECIPIENT\\fR encoding is an SSH public key in \\fBauthorized_keys\\fR format (see the \\fBAUTHORIZED_KEYS FILE FORMAT\\fR section of sshd(8)), starting with \\fBssh\\-rsa\\fR or \\fBssh\\-ed25519\\fR, like the following:\n.IP \"\" 4\n.nf\nssh\\-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDULTit0KUehbi[\\|\\.\\|\\.\\|\\.]GU4BtElAbzh8=\nssh\\-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIH9pO5pz22JZEas[\\|\\.\\|\\`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 115,
                  "endLine": 90,
                  "endColumn": 123,
                  "snippet": {
                    "text": "nteractively\\. Note that passphrase\\-protected identity files are not necessary for most use cases, where access to the encrypted identity file implies access to the whole system\\.\n.IP\nc\\. An SSH private key file, in PKCS#1, PKCS#8, or OpenSSH format\\. If the private key is password\\-protected, the password is requested interactively only if the SSH identity matches the file\\. See the \\fISSH keys\\fR section for more information, including supported key types\\.\n.IP\nd\\. \"\\fB\\-\\fR\", causing one of the options above to be read from standard input\\. In this case, the \\fIINPUT\\fR argument must be specified\\",
                    "rendered": {
                      "text": "nteractively\\. Note that passphrase\\-protected identity files are not necessary for most use cases, where access to the encrypted identity file implies access to the whole system\\.\n.IP\nc\\. An SSH private key file, in PKCS#1, PKCS#8, or OpenSSH format\\. If the private key is password\\-protected, the password is requested interactively only if the SSH identity matches the file\\. See the \\fISSH keys\\fR section for more information, including supported key types\\.\n.IP\nd\\. \"\\fB\\-\\fR\", causing one of the options above to be read from standard input\\. In this case, the \\fIINPUT\\fR argument must be specified\\",
                      "markdown": "`nteractively\\. Note that passphrase\\-protected identity files are not necessary for most use cases, where access to the encrypted identity file implies access to the whole system\\.\n.IP\nc\\. An SSH private key file, in PKCS#1, PKCS#8, or OpenSSH format\\. If the private key is password\\-protected, the password is requested interactively only if the SSH identity matches the file\\. See the \\fISSH keys\\fR section for more information, including supported key types\\.\n.IP\nd\\. \"\\fB\\-\\fR\", causing one of the options above to be read from standard input\\. In this case, the \\fIINPUT\\fR argument must be specified\\`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 90,
                  "endLine": 90,
                  "endColumn": 98,
                  "snippet": {
                    "text": "passphrase is requested interactively\\. Note that passphrase\\-protected identity files are not necessary for most use cases, where access to the encrypted identity file implies access to the whole system\\.\n.IP\nc\\. An SSH private key file, in PKCS#1, PKCS#8, or OpenSSH format\\. If the private key is password\\-protected, the password is requested interactively only if the SSH identity matches the file\\. See the \\fISSH keys\\fR section for more information, including supported key types\\.\n.IP\nd\\. \"\\fB\\-\\fR\", causing one of the options above to be read from standard input\\. In this case, the \\fIINPUT\\fR ar",
                    "rendered": {
                      "text": "passphrase is requested interactively\\. Note that passphrase\\-protected identity files are not necessary for most use cases, where access to the encrypted identity file implies access to the whole system\\.\n.IP\nc\\. An SSH private key file, in PKCS#1, PKCS#8, or OpenSSH format\\. If the private key is password\\-protected, the password is requested interactively only if the SSH identity matches the file\\. See the \\fISSH keys\\fR section for more information, including supported key types\\.\n.IP\nd\\. \"\\fB\\-\\fR\", causing one of the options above to be read from standard input\\. In this case, the \\fIINPUT\\fR ar",
                      "markdown": "`passphrase is requested interactively\\. Note that passphrase\\-protected identity files are not necessary for most use cases, where access to the encrypted identity file implies access to the whole system\\.\n.IP\nc\\. An SSH private key file, in PKCS#1, PKCS#8, or OpenSSH format\\. If the private key is password\\-protected, the password is requested interactively only if the SSH identity matches the file\\. See the \\fISSH keys\\fR section for more information, including supported key types\\.\n.IP\nd\\. \"\\fB\\-\\fR\", causing one of the options above to be read from standard input\\. In this case, the \\fIINPUT\\fR ar`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 98,
                  "endLine": 55,
                  "endColumn": 104,
                  "snippet": {
                    "text": "\\fB\\-a\\fR, \\fB\\-\\-armor\\fR\nEncrypt to an ASCII\\-only \"armored\" encoding\\.\n.IP\n\\fBage\\fR armor is a strict version of PEM with type \\fBAGE ENCRYPTED FILE\\fR, canonical \"strict\" Base64, no headers, and no support for leading and trailing extra data\\.\n.IP\nDecryption transparently detects and decodes ASCII armoring\\.\n.TP\n",
                    "rendered": {
                      "text": "\\fB\\-a\\fR, \\fB\\-\\-armor\\fR\nEncrypt to an ASCII\\-only \"armored\" encoding\\.\n.IP\n\\fBage\\fR armor is a strict version of PEM with type \\fBAGE ENCRYPTED FILE\\fR, canonical \"strict\" Base64, no headers, and no support for leading and trailing extra data\\.\n.IP\nDecryption transparently detects and decodes ASCII armoring\\.\n.TP\n",
                      "markdown": "`\\fB\\-a\\fR, \\fB\\-\\-armor\\fR\nEncrypt to an ASCII\\-only \"armored\" encoding\\.\n.IP\n\\fBage\\fR armor is a strict version of PEM with type \\fBAGE ENCRYPTED FILE\\fR, canonical \"strict\" Base64, no headers, and no support for leading and trailing extra data\\.\n.IP\nDecryption transparently detects and decodes ASCII armoring\\.\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 11,
                  "endLine": 131,
                  "endColumn": 15,
                  "snippet": {
                    "text": ".fi\n.IP \"\" 0\n.P\nThe comment at the end of the line, if present, is ignored\\.\n.P\nIn recipient files passed to \\fB\\-R\\fR/\\fB\\-\\-recipients\\-file\\fR, unsupported but valid SSH public keys are ignored with a warning, to facilitate using \\fBauthorized_keys\\fR or GitHub \\fB\\.keys\\fR files\\. (See \\fIEXAMPLES\\fR\\.)\n.P\n",
                    "rendered": {
                      "text": ".fi\n.IP \"\" 0\n.P\nThe comment at the end of the line, if present, is ignored\\.\n.P\nIn recipient files passed to \\fB\\-R\\fR/\\fB\\-\\-recipients\\-file\\fR, unsupported but valid SSH public keys are ignored with a warning, to facilitate using \\fBauthorized_keys\\fR or GitHub \\fB\\.keys\\fR files\\. (See \\fIEXAMPLES\\fR\\.)\n.P\n",
                      "markdown": "`.fi\n.IP \"\" 0\n.P\nThe comment at the end of the line, if present, is ignored\\.\n.P\nIn recipient files passed to \\fB\\-R\\fR/\\fB\\-\\-recipients\\-file\\fR, unsupported but valid SSH public keys are ignored with a warning, to facilitate using \\fBauthorized_keys\\fR or GitHub \\fB\\.keys\\fR files\\. (See \\fIEXAMPLES\\fR\\.)\n.P\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 109,
                  "endLine": 121,
                  "endColumn": 113,
                  "snippet": {
                    "text": "KZ9HWWCDSKUGXXNUQDWZ7XXT5YK5LSF3UTKQ\n.fi\n.IP \"\" 0\n.P\nAn encrypted file can't be linked to the native recipient it's encrypted to without access to the corresponding identity\\.\n.SS \"SSH keys\"\nAs a convenience feature, \\fBage\\fR also supports encrypting to RSA or Ed25519 ssh(1) keys\\. RSA keys must be at least 2048 bits\\. This feature employs more complex cryptography, and should only be used when a native key is not available for the recipient\\. Note that SSH keys might not be protected long\\-term by the recipient, since they are revokable when used only for authentication\\.\n.P\nA \\fBRECIPIENT\\fR en",
                    "rendered": {
                      "text": "KZ9HWWCDSKUGXXNUQDWZ7XXT5YK5LSF3UTKQ\n.fi\n.IP \"\" 0\n.P\nAn encrypted file can't be linked to the native recipient it's encrypted to without access to the corresponding identity\\.\n.SS \"SSH keys\"\nAs a convenience feature, \\fBage\\fR also supports encrypting to RSA or Ed25519 ssh(1) keys\\. RSA keys must be at least 2048 bits\\. This feature employs more complex cryptography, and should only be used when a native key is not available for the recipient\\. Note that SSH keys might not be protected long\\-term by the recipient, since they are revokable when used only for authentication\\.\n.P\nA \\fBRECIPIENT\\fR en",
                      "markdown": "`KZ9HWWCDSKUGXXNUQDWZ7XXT5YK5LSF3UTKQ\n.fi\n.IP \"\" 0\n.P\nAn encrypted file can't be linked to the native recipient it's encrypted to without access to the corresponding identity\\.\n.SS \"SSH keys\"\nAs a convenience feature, \\fBage\\fR also supports encrypting to RSA or Ed25519 ssh(1) keys\\. RSA keys must be at least 2048 bits\\. This feature employs more complex cryptography, and should only be used when a native key is not available for the recipient\\. Note that SSH keys might not be protected long\\-term by the recipient, since they are revokable when used only for authentication\\.\n.P\nA \\fBRECIPIENT\\fR en`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 34,
                  "endLine": 82,
                  "endColumn": 38,
                  "snippet": {
                    "text": "ASCII armoring is transparently detected and decoded\\.\n.TP\n\\fB\\-i\\fR, \\fB\\-\\-identity\\fR=\\fIPATH\\fR\nDecrypt using the \\fIIDENTITIES\\fR at \\fIPATH\\fR\\.\n.IP\n\\fIPATH\\fR may be one of the following:\n.IP\n",
                    "rendered": {
                      "text": "ASCII armoring is transparently detected and decoded\\.\n.TP\n\\fB\\-i\\fR, \\fB\\-\\-identity\\fR=\\fIPATH\\fR\nDecrypt using the \\fIIDENTITIES\\fR at \\fIPATH\\fR\\.\n.IP\n\\fIPATH\\fR may be one of the following:\n.IP\n",
                      "markdown": "`ASCII armoring is transparently detected and decoded\\.\n.TP\n\\fB\\-i\\fR, \\fB\\-\\-identity\\fR=\\fIPATH\\fR\nDecrypt using the \\fIIDENTITIES\\fR at \\fIPATH\\fR\\.\n.IP\n\\fIPATH\\fR may be one of the following:\n.IP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 146,
                  "endLine": 60,
                  "endColumn": 150,
                  "snippet": {
                    "text": "Decryption transparently detects and decodes ASCII armoring\\.\n.TP\n\\fB\\-i\\fR, \\fB\\-\\-identity\\fR=\\fIPATH\\fR\nEncrypt to the \\fIRECIPIENTS\\fR corresponding to the \\fIIDENTITIES\\fR listed in the file at \\fIPATH\\fR\\. This is equivalent to converting the file at \\fIPATH\\fR to a recipients file with \\fBage\\-keygen \\-y\\fR and then passing that to \\fB\\-R\\fR/\\fB\\-\\-recipients\\-file\\fR\\.\n.IP\nFor the format of \\fIPATH\\fR, see the definition of \\fB\\-i\\fR/\\fB\\-\\-identity\\fR in the \\fIDecryption options\\fR section\\.\n.IP\n",
                    "rendered": {
                      "text": "Decryption transparently detects and decodes ASCII armoring\\.\n.TP\n\\fB\\-i\\fR, \\fB\\-\\-identity\\fR=\\fIPATH\\fR\nEncrypt to the \\fIRECIPIENTS\\fR corresponding to the \\fIIDENTITIES\\fR listed in the file at \\fIPATH\\fR\\. This is equivalent to converting the file at \\fIPATH\\fR to a recipients file with \\fBage\\-keygen \\-y\\fR and then passing that to \\fB\\-R\\fR/\\fB\\-\\-recipients\\-file\\fR\\.\n.IP\nFor the format of \\fIPATH\\fR, see the definition of \\fB\\-i\\fR/\\fB\\-\\-identity\\fR in the \\fIDecryption options\\fR section\\.\n.IP\n",
                      "markdown": "`Decryption transparently detects and decodes ASCII armoring\\.\n.TP\n\\fB\\-i\\fR, \\fB\\-\\-identity\\fR=\\fIPATH\\fR\nEncrypt to the \\fIRECIPIENTS\\fR corresponding to the \\fIIDENTITIES\\fR listed in the file at \\fIPATH\\fR\\. This is equivalent to converting the file at \\fIPATH\\fR to a recipients file with \\fBage\\-keygen \\-y\\fR and then passing that to \\fB\\-R\\fR/\\fB\\-\\-recipients\\-file\\fR\\.\n.IP\nFor the format of \\fIPATH\\fR, see the definition of \\fB\\-i\\fR/\\fB\\-\\-identity\\fR in the \\fIDecryption options\\fR section\\.\n.IP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 88,
                  "endLine": 60,
                  "endColumn": 92,
                  "snippet": {
                    "text": "Decryption transparently detects and decodes ASCII armoring\\.\n.TP\n\\fB\\-i\\fR, \\fB\\-\\-identity\\fR=\\fIPATH\\fR\nEncrypt to the \\fIRECIPIENTS\\fR corresponding to the \\fIIDENTITIES\\fR listed in the file at \\fIPATH\\fR\\. This is equivalent to converting the file at \\fIPATH\\fR to a recipients file with \\fBage\\-keygen \\-y\\fR and then passing that to \\fB\\-R\\fR/\\fB\\-\\-recipients\\-file\\fR\\.\n.IP\nFor the format of \\fIPATH\\fR, see the definition of \\fB\\-i\\fR/\\fB\\-\\-identity\\fR in the \\fIDecryption options\\fR section\\.\n.IP\n",
                    "rendered": {
                      "text": "Decryption transparently detects and decodes ASCII armoring\\.\n.TP\n\\fB\\-i\\fR, \\fB\\-\\-identity\\fR=\\fIPATH\\fR\nEncrypt to the \\fIRECIPIENTS\\fR corresponding to the \\fIIDENTITIES\\fR listed in the file at \\fIPATH\\fR\\. This is equivalent to converting the file at \\fIPATH\\fR to a recipients file with \\fBage\\-keygen \\-y\\fR and then passing that to \\fB\\-R\\fR/\\fB\\-\\-recipients\\-file\\fR\\.\n.IP\nFor the format of \\fIPATH\\fR, see the definition of \\fB\\-i\\fR/\\fB\\-\\-identity\\fR in the \\fIDecryption options\\fR section\\.\n.IP\n",
                      "markdown": "`Decryption transparently detects and decodes ASCII armoring\\.\n.TP\n\\fB\\-i\\fR, \\fB\\-\\-identity\\fR=\\fIPATH\\fR\nEncrypt to the \\fIRECIPIENTS\\fR corresponding to the \\fIIDENTITIES\\fR listed in the file at \\fIPATH\\fR\\. This is equivalent to converting the file at \\fIPATH\\fR to a recipients file with \\fBage\\-keygen \\-y\\fR and then passing that to \\fB\\-R\\fR/\\fB\\-\\-recipients\\-file\\fR\\.\n.IP\nFor the format of \\fIPATH\\fR, see the definition of \\fB\\-i\\fR/\\fB\\-\\-identity\\fR in the \\fIDecryption options\\fR section\\.\n.IP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 50,
                  "endLine": 41,
                  "endColumn": 54,
                  "snippet": {
                    "text": "This option can be repeated and combined with other recipient flags, and the file can be decrypted by all provided recipients independently\\.\n.TP\n\\fB\\-R\\fR, \\fB\\-\\-recipients\\-file\\fR=\\fIPATH\\fR\nEncrypt to the \\fIRECIPIENTS\\fR listed in the file at \\fIPATH\\fR, one per line\\. Empty lines and lines starting with \\fB#\\fR are ignored as comments\\.\n.IP\nIf \\fIPATH\\fR is \\fB\\-\\fR, the recipients are read from standard input\\. In this case, the \\fIINPUT\\fR argument must be specified\\.\n.IP\n",
                    "rendered": {
                      "text": "This option can be repeated and combined with other recipient flags, and the file can be decrypted by all provided recipients independently\\.\n.TP\n\\fB\\-R\\fR, \\fB\\-\\-recipients\\-file\\fR=\\fIPATH\\fR\nEncrypt to the \\fIRECIPIENTS\\fR listed in the file at \\fIPATH\\fR, one per line\\. Empty lines and lines starting with \\fB#\\fR are ignored as comments\\.\n.IP\nIf \\fIPATH\\fR is \\fB\\-\\fR, the recipients are read from standard input\\. In this case, the \\fIINPUT\\fR argument must be specified\\.\n.IP\n",
                      "markdown": "`This option can be repeated and combined with other recipient flags, and the file can be decrypted by all provided recipients independently\\.\n.TP\n\\fB\\-R\\fR, \\fB\\-\\-recipients\\-file\\fR=\\fIPATH\\fR\nEncrypt to the \\fIRECIPIENTS\\fR listed in the file at \\fIPATH\\fR, one per line\\. Empty lines and lines starting with \\fB#\\fR are ignored as comments\\.\n.IP\nIf \\fIPATH\\fR is \\fB\\-\\fR, the recipients are read from standard input\\. In this case, the \\fIINPUT\\fR argument must be specified\\.\n.IP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1"
                },
                "region": {
                  "startLine": 242,
                  "startColumn": 1,
                  "endLine": 242,
                  "endColumn": 7,
                  "snippet": {
                    "text": "Encrypt to the SSH keys of a GitHub user:\n.IP \"\" 4\n.nf\n$ curl https://github\\.com/benjojo\\.keys | age \\-R \\- example\\.jpg > example\\.jpg\\.age\n.fi\n.IP \"\" 0\n.SH \"SEE ALSO\"\n",
                    "rendered": {
                      "text": "Encrypt to the SSH keys of a GitHub user:\n.IP \"\" 4\n.nf\n$ curl https://github\\.com/benjojo\\.keys | age \\-R \\- example\\.jpg > example\\.jpg\\.age\n.fi\n.IP \"\" 0\n.SH \"SEE ALSO\"\n",
                      "markdown": "`Encrypt to the SSH keys of a GitHub user:\n.IP \"\" 4\n.nf\n$ curl https://github\\.com/benjojo\\.keys | age \\-R \\- example\\.jpg > example\\.jpg\\.age\n.fi\n.IP \"\" 0\n.SH \"SEE ALSO\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1"
                },
                "region": {
                  "startLine": 239,
                  "startColumn": 14,
                  "endLine": 239,
                  "endColumn": 19,
                  "snippet": {
                    "text": ".fi\n.IP \"\" 0\n.P\nEncrypt to the SSH keys of a GitHub user:\n.IP \"\" 4\n.nf\n$ curl https://github\\.com/benjojo\\.keys | age \\-R \\- example\\.jpg > example\\.jpg\\.age\n",
                    "rendered": {
                      "text": ".fi\n.IP \"\" 0\n.P\nEncrypt to the SSH keys of a GitHub user:\n.IP \"\" 4\n.nf\n$ curl https://github\\.com/benjojo\\.keys | age \\-R \\- example\\.jpg > example\\.jpg\\.age\n",
                      "markdown": "`.fi\n.IP \"\" 0\n.P\nEncrypt to the SSH keys of a GitHub user:\n.IP \"\" 4\n.nf\n$ curl https://github\\.com/benjojo\\.keys | age \\-R \\- example\\.jpg > example\\.jpg\\.age\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1"
                },
                "region": {
                  "startLine": 219,
                  "startColumn": 27,
                  "endLine": 219,
                  "endColumn": 32,
                  "snippet": {
                    "text": ".fi\n.IP \"\" 0\n.P\nEncrypt and decrypt with an SSH public key:\n.IP \"\" 4\n.nf\n$ age \\-R ~/\\.ssh/id_ed25519\\.pub example\\.jpg > example\\.jpg\\.age\n",
                    "rendered": {
                      "text": ".fi\n.IP \"\" 0\n.P\nEncrypt and decrypt with an SSH public key:\n.IP \"\" 4\n.nf\n$ age \\-R ~/\\.ssh/id_ed25519\\.pub example\\.jpg > example\\.jpg\\.age\n",
                      "markdown": "`.fi\n.IP \"\" 0\n.P\nEncrypt and decrypt with an SSH public key:\n.IP \"\" 4\n.nf\n$ age \\-R ~/\\.ssh/id_ed25519\\.pub example\\.jpg > example\\.jpg\\.age\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 1,
                  "endLine": 182,
                  "endColumn": 6,
                  "snippet": {
                    "text": "Encrypt to a list of recipients:\n.IP \"\" 4\n.nf\n$ cat > recipients\\.txt\n# Alice\nage1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p\n# Bob\n",
                    "rendered": {
                      "text": "Encrypt to a list of recipients:\n.IP \"\" 4\n.nf\n$ cat > recipients\\.txt\n# Alice\nage1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p\n# Bob\n",
                      "markdown": "`Encrypt to a list of recipients:\n.IP \"\" 4\n.nf\n$ cat > recipients\\.txt\n# Alice\nage1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p\n# Bob\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 1,
                  "endLine": 165,
                  "endColumn": 6,
                  "snippet": {
                    "text": "$ age\\-keygen \\-o key\\.txt\nPublic key: age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p\n\n$ tar cvz ~/data | age \\-r age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p > data\\.tar\\.gz\\.age\n\n$ age \\-d \\-o data\\.tar\\.gz \\-i key\\.txt data\\.tar\\.gz\\.age\n.fi\n",
                    "rendered": {
                      "text": "$ age\\-keygen \\-o key\\.txt\nPublic key: age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p\n\n$ tar cvz ~/data | age \\-r age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p > data\\.tar\\.gz\\.age\n\n$ age \\-d \\-o data\\.tar\\.gz \\-i key\\.txt data\\.tar\\.gz\\.age\n.fi\n",
                      "markdown": "`$ age\\-keygen \\-o key\\.txt\nPublic key: age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p\n\n$ tar cvz ~/data | age \\-r age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p > data\\.tar\\.gz\\.age\n\n$ age \\-d \\-o data\\.tar\\.gz \\-i key\\.txt data\\.tar\\.gz\\.age\n.fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 132,
                  "endLine": 137,
                  "endColumn": 137,
                  "snippet": {
                    "text": "e\\fR passed individually to \\fB\\-i\\fR/\\fB\\-\\-identity\\fR\\. Note that keys held on hardware tokens such as YubiKeys or accessed via ssh\\-agent(1) are not supported\\.\n.P\nAn encrypted file \\fIcan\\fR be linked to the SSH public key it was encrypted to\\. This is so that \\fBage\\fR can identify the correct SSH private key before requesting its password, if any\\.\n.SS \"Plugins\"\n\\fBage\\fR can be extended through plugins\\. A plugin is only loaded if a corresponding \\fBRECIPIENT\\fR or \\fBIDENTITY\\fR is specified\\. (Simply decrypting a file encrypted with a plugin will not cause it to load, for security reasons",
                    "rendered": {
                      "text": "e\\fR passed individually to \\fB\\-i\\fR/\\fB\\-\\-identity\\fR\\. Note that keys held on hardware tokens such as YubiKeys or accessed via ssh\\-agent(1) are not supported\\.\n.P\nAn encrypted file \\fIcan\\fR be linked to the SSH public key it was encrypted to\\. This is so that \\fBage\\fR can identify the correct SSH private key before requesting its password, if any\\.\n.SS \"Plugins\"\n\\fBage\\fR can be extended through plugins\\. A plugin is only loaded if a corresponding \\fBRECIPIENT\\fR or \\fBIDENTITY\\fR is specified\\. (Simply decrypting a file encrypted with a plugin will not cause it to load, for security reasons",
                      "markdown": "`e\\fR passed individually to \\fB\\-i\\fR/\\fB\\-\\-identity\\fR\\. Note that keys held on hardware tokens such as YubiKeys or accessed via ssh\\-agent(1) are not supported\\.\n.P\nAn encrypted file \\fIcan\\fR be linked to the SSH public key it was encrypted to\\. This is so that \\fBage\\fR can identify the correct SSH private key before requesting its password, if any\\.\n.SS \"Plugins\"\n\\fBage\\fR can be extended through plugins\\. A plugin is only loaded if a corresponding \\fBRECIPIENT\\fR or \\fBIDENTITY\\fR is specified\\. (Simply decrypting a file encrypted with a plugin will not cause it to load, for security reasons`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 44,
                  "endLine": 137,
                  "endColumn": 49,
                  "snippet": {
                    "text": "keys\\fR files\\. (See \\fIEXAMPLES\\fR\\.)\n.P\nAn \\fBIDENTITY\\fR is an SSH private key \\fIfile\\fR passed individually to \\fB\\-i\\fR/\\fB\\-\\-identity\\fR\\. Note that keys held on hardware tokens such as YubiKeys or accessed via ssh\\-agent(1) are not supported\\.\n.P\nAn encrypted file \\fIcan\\fR be linked to the SSH public key it was encrypted to\\. This is so that \\fBage\\fR can identify the correct SSH private key before requesting its password, if any\\.\n.SS \"Plugins\"\n\\fBage\\fR can be extended through plugins\\. A plugin is only loaded if a corresponding \\fBRECIPIENT\\fR or \\fBIDENTITY\\fR is specified\\. (Simply d",
                    "rendered": {
                      "text": "keys\\fR files\\. (See \\fIEXAMPLES\\fR\\.)\n.P\nAn \\fBIDENTITY\\fR is an SSH private key \\fIfile\\fR passed individually to \\fB\\-i\\fR/\\fB\\-\\-identity\\fR\\. Note that keys held on hardware tokens such as YubiKeys or accessed via ssh\\-agent(1) are not supported\\.\n.P\nAn encrypted file \\fIcan\\fR be linked to the SSH public key it was encrypted to\\. This is so that \\fBage\\fR can identify the correct SSH private key before requesting its password, if any\\.\n.SS \"Plugins\"\n\\fBage\\fR can be extended through plugins\\. A plugin is only loaded if a corresponding \\fBRECIPIENT\\fR or \\fBIDENTITY\\fR is specified\\. (Simply d",
                      "markdown": "`keys\\fR files\\. (See \\fIEXAMPLES\\fR\\.)\n.P\nAn \\fBIDENTITY\\fR is an SSH private key \\fIfile\\fR passed individually to \\fB\\-i\\fR/\\fB\\-\\-identity\\fR\\. Note that keys held on hardware tokens such as YubiKeys or accessed via ssh\\-agent(1) are not supported\\.\n.P\nAn encrypted file \\fIcan\\fR be linked to the SSH public key it was encrypted to\\. This is so that \\fBage\\fR can identify the correct SSH private key before requesting its password, if any\\.\n.SS \"Plugins\"\n\\fBage\\fR can be extended through plugins\\. A plugin is only loaded if a corresponding \\fBRECIPIENT\\fR or \\fBIDENTITY\\fR is specified\\. (Simply d`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 23,
                  "endLine": 135,
                  "endColumn": 28,
                  "snippet": {
                    "text": "end of the line, if present, is ignored\\.\n.P\nIn recipient files passed to \\fB\\-R\\fR/\\fB\\-\\-recipients\\-file\\fR, unsupported but valid SSH public keys are ignored with a warning, to facilitate using \\fBauthorized_keys\\fR or GitHub \\fB\\.keys\\fR files\\. (See \\fIEXAMPLES\\fR\\.)\n.P\nAn \\fBIDENTITY\\fR is an SSH private key \\fIfile\\fR passed individually to \\fB\\-i\\fR/\\fB\\-\\-identity\\fR\\. Note that keys held on hardware tokens such as YubiKeys or accessed via ssh\\-agent(1) are not supported\\.\n.P\nAn encrypted file \\fIcan\\fR be linked to the SSH public key it was encrypted to\\. This is so that \\fBage\\fR can id",
                    "rendered": {
                      "text": "end of the line, if present, is ignored\\.\n.P\nIn recipient files passed to \\fB\\-R\\fR/\\fB\\-\\-recipients\\-file\\fR, unsupported but valid SSH public keys are ignored with a warning, to facilitate using \\fBauthorized_keys\\fR or GitHub \\fB\\.keys\\fR files\\. (See \\fIEXAMPLES\\fR\\.)\n.P\nAn \\fBIDENTITY\\fR is an SSH private key \\fIfile\\fR passed individually to \\fB\\-i\\fR/\\fB\\-\\-identity\\fR\\. Note that keys held on hardware tokens such as YubiKeys or accessed via ssh\\-agent(1) are not supported\\.\n.P\nAn encrypted file \\fIcan\\fR be linked to the SSH public key it was encrypted to\\. This is so that \\fBage\\fR can id",
                      "markdown": "`end of the line, if present, is ignored\\.\n.P\nIn recipient files passed to \\fB\\-R\\fR/\\fB\\-\\-recipients\\-file\\fR, unsupported but valid SSH public keys are ignored with a warning, to facilitate using \\fBauthorized_keys\\fR or GitHub \\fB\\.keys\\fR files\\. (See \\fIEXAMPLES\\fR\\.)\n.P\nAn \\fBIDENTITY\\fR is an SSH private key \\fIfile\\fR passed individually to \\fB\\-i\\fR/\\fB\\-\\-identity\\fR\\. Note that keys held on hardware tokens such as YubiKeys or accessed via ssh\\-agent(1) are not supported\\.\n.P\nAn encrypted file \\fIcan\\fR be linked to the SSH public key it was encrypted to\\. This is so that \\fBage\\fR can id`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 88,
                  "endLine": 133,
                  "endColumn": 93,
                  "snippet": {
                    "text": ".P\nThe comment at the end of the line, if present, is ignored\\.\n.P\nIn recipient files passed to \\fB\\-R\\fR/\\fB\\-\\-recipients\\-file\\fR, unsupported but valid SSH public keys are ignored with a warning, to facilitate using \\fBauthorized_keys\\fR or GitHub \\fB\\.keys\\fR files\\. (See \\fIEXAMPLES\\fR\\.)\n.P\nAn \\fBIDENTITY\\fR is an SSH private key \\fIfile\\fR passed individually to \\fB\\-i\\fR/\\fB\\-\\-identity\\fR\\. Note that keys held on hardware tokens such as YubiKeys or accessed via ssh\\-agent(1) are not supported\\.\n.P\n",
                    "rendered": {
                      "text": ".P\nThe comment at the end of the line, if present, is ignored\\.\n.P\nIn recipient files passed to \\fB\\-R\\fR/\\fB\\-\\-recipients\\-file\\fR, unsupported but valid SSH public keys are ignored with a warning, to facilitate using \\fBauthorized_keys\\fR or GitHub \\fB\\.keys\\fR files\\. (See \\fIEXAMPLES\\fR\\.)\n.P\nAn \\fBIDENTITY\\fR is an SSH private key \\fIfile\\fR passed individually to \\fB\\-i\\fR/\\fB\\-\\-identity\\fR\\. Note that keys held on hardware tokens such as YubiKeys or accessed via ssh\\-agent(1) are not supported\\.\n.P\n",
                      "markdown": "`.P\nThe comment at the end of the line, if present, is ignored\\.\n.P\nIn recipient files passed to \\fB\\-R\\fR/\\fB\\-\\-recipients\\-file\\fR, unsupported but valid SSH public keys are ignored with a warning, to facilitate using \\fBauthorized_keys\\fR or GitHub \\fB\\.keys\\fR files\\. (See \\fIEXAMPLES\\fR\\.)\n.P\nAn \\fBIDENTITY\\fR is an SSH private key \\fIfile\\fR passed individually to \\fB\\-i\\fR/\\fB\\-\\-identity\\fR\\. Note that keys held on hardware tokens such as YubiKeys or accessed via ssh\\-agent(1) are not supported\\.\n.P\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 32,
                  "endLine": 123,
                  "endColumn": 37,
                  "snippet": {
                    "text": "its\\. This feature employs more complex cryptography, and should only be used when a native key is not available for the recipient\\. Note that SSH keys might not be protected long\\-term by the recipient, since they are revokable when used only for authentication\\.\n.P\nA \\fBRECIPIENT\\fR encoding is an SSH public key in \\fBauthorized_keys\\fR format (see the \\fBAUTHORIZED_KEYS FILE FORMAT\\fR section of sshd(8)), starting with \\fBssh\\-rsa\\fR or \\fBssh\\-ed25519\\fR, like the following:\n.IP \"\" 4\n.nf\nssh\\-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDULTit0KUehbi[\\|\\.\\|\\.\\|\\.]GU4BtElAbzh8=\nssh\\-ed25519 AAAAC3NzaC1lZDI",
                    "rendered": {
                      "text": "its\\. This feature employs more complex cryptography, and should only be used when a native key is not available for the recipient\\. Note that SSH keys might not be protected long\\-term by the recipient, since they are revokable when used only for authentication\\.\n.P\nA \\fBRECIPIENT\\fR encoding is an SSH public key in \\fBauthorized_keys\\fR format (see the \\fBAUTHORIZED_KEYS FILE FORMAT\\fR section of sshd(8)), starting with \\fBssh\\-rsa\\fR or \\fBssh\\-ed25519\\fR, like the following:\n.IP \"\" 4\n.nf\nssh\\-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDULTit0KUehbi[\\|\\.\\|\\.\\|\\.]GU4BtElAbzh8=\nssh\\-ed25519 AAAAC3NzaC1lZDI",
                      "markdown": "`its\\. This feature employs more complex cryptography, and should only be used when a native key is not available for the recipient\\. Note that SSH keys might not be protected long\\-term by the recipient, since they are revokable when used only for authentication\\.\n.P\nA \\fBRECIPIENT\\fR encoding is an SSH public key in \\fBauthorized_keys\\fR format (see the \\fBAUTHORIZED_KEYS FILE FORMAT\\fR section of sshd(8)), starting with \\fBssh\\-rsa\\fR or \\fBssh\\-ed25519\\fR, like the following:\n.IP \"\" 4\n.nf\nssh\\-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDULTit0KUehbi[\\|\\.\\|\\.\\|\\.]GU4BtElAbzh8=\nssh\\-ed25519 AAAAC3NzaC1lZDI`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 267,
                  "endLine": 121,
                  "endColumn": 272,
                  "snippet": {
                    "text": "onding identity\\.\n.SS \"SSH keys\"\nAs a convenience feature, \\fBage\\fR also supports encrypting to RSA or Ed25519 ssh(1) keys\\. RSA keys must be at least 2048 bits\\. This feature employs more complex cryptography, and should only be used when a native key is not available for the recipient\\. Note that SSH keys might not be protected long\\-term by the recipient, since they are revokable when used only for authentication\\.\n.P\nA \\fBRECIPIENT\\fR encoding is an SSH public key in \\fBauthorized_keys\\fR format (see the \\fBAUTHORIZED_KEYS FILE FORMAT\\fR section of sshd(8)), starting with \\fBssh\\-rsa\\fR or \\fB",
                    "rendered": {
                      "text": "onding identity\\.\n.SS \"SSH keys\"\nAs a convenience feature, \\fBage\\fR also supports encrypting to RSA or Ed25519 ssh(1) keys\\. RSA keys must be at least 2048 bits\\. This feature employs more complex cryptography, and should only be used when a native key is not available for the recipient\\. Note that SSH keys might not be protected long\\-term by the recipient, since they are revokable when used only for authentication\\.\n.P\nA \\fBRECIPIENT\\fR encoding is an SSH public key in \\fBauthorized_keys\\fR format (see the \\fBAUTHORIZED_KEYS FILE FORMAT\\fR section of sshd(8)), starting with \\fBssh\\-rsa\\fR or \\fB",
                      "markdown": "`onding identity\\.\n.SS \"SSH keys\"\nAs a convenience feature, \\fBage\\fR also supports encrypting to RSA or Ed25519 ssh(1) keys\\. RSA keys must be at least 2048 bits\\. This feature employs more complex cryptography, and should only be used when a native key is not available for the recipient\\. Note that SSH keys might not be protected long\\-term by the recipient, since they are revokable when used only for authentication\\.\n.P\nA \\fBRECIPIENT\\fR encoding is an SSH public key in \\fBauthorized_keys\\fR format (see the \\fBAUTHORIZED_KEYS FILE FORMAT\\fR section of sshd(8)), starting with \\fBssh\\-rsa\\fR or \\fB`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 162,
                  "endLine": 90,
                  "endColumn": 167,
                  "snippet": {
                    "text": "identity files are not necessary for most use cases, where access to the encrypted identity file implies access to the whole system\\.\n.IP\nc\\. An SSH private key file, in PKCS#1, PKCS#8, or OpenSSH format\\. If the private key is password\\-protected, the password is requested interactively only if the SSH identity matches the file\\. See the \\fISSH keys\\fR section for more information, including supported key types\\.\n.IP\nd\\. \"\\fB\\-\\fR\", causing one of the options above to be read from standard input\\. In this case, the \\fIINPUT\\fR argument must be specified\\.\n.IP\nThis option can be repeated\\. Identiti",
                    "rendered": {
                      "text": "identity files are not necessary for most use cases, where access to the encrypted identity file implies access to the whole system\\.\n.IP\nc\\. An SSH private key file, in PKCS#1, PKCS#8, or OpenSSH format\\. If the private key is password\\-protected, the password is requested interactively only if the SSH identity matches the file\\. See the \\fISSH keys\\fR section for more information, including supported key types\\.\n.IP\nd\\. \"\\fB\\-\\fR\", causing one of the options above to be read from standard input\\. In this case, the \\fIINPUT\\fR argument must be specified\\.\n.IP\nThis option can be repeated\\. Identiti",
                      "markdown": "`identity files are not necessary for most use cases, where access to the encrypted identity file implies access to the whole system\\.\n.IP\nc\\. An SSH private key file, in PKCS#1, PKCS#8, or OpenSSH format\\. If the private key is password\\-protected, the password is requested interactively only if the SSH identity matches the file\\. See the \\fISSH keys\\fR section for more information, including supported key types\\.\n.IP\nd\\. \"\\fB\\-\\fR\", causing one of the options above to be read from standard input\\. In this case, the \\fIINPUT\\fR argument must be specified\\.\n.IP\nThis option can be repeated\\. Identiti`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/doc/age.1"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 6,
                  "endLine": 90,
                  "endColumn": 11,
                  "snippet": {
                    "text": "hrase encrypted age file, containing \\fIIDENTITIES\\fR one per line like above\\. The passphrase is requested interactively\\. Note that passphrase\\-protected identity files are not necessary for most use cases, where access to the encrypted identity file implies access to the whole system\\.\n.IP\nc\\. An SSH private key file, in PKCS#1, PKCS#8, or OpenSSH format\\. If the private key is password\\-protected, the password is requested interactively only if the SSH identity matches the file\\. See the \\fISSH keys\\fR section for more information, including supported key types\\.\n.IP\nd\\. \"\\fB\\-\\fR\", causing one",
                    "rendered": {
                      "text": "hrase encrypted age file, containing \\fIIDENTITIES\\fR one per line like above\\. The passphrase is requested interactively\\. Note that passphrase\\-protected identity files are not necessary for most use cases, where access to the encrypted identity file implies access to the whole system\\.\n.IP\nc\\. An SSH private key file, in PKCS#1, PKCS#8, or OpenSSH format\\. If the private key is password\\-protected, the password is requested interactively only if the SSH identity matches the file\\. See the \\fISSH keys\\fR section for more information, including supported key types\\.\n.IP\nd\\. \"\\fB\\-\\fR\", causing one",
                      "markdown": "`hrase encrypted age file, containing \\fIIDENTITIES\\fR one per line like above\\. The passphrase is requested interactively\\. Note that passphrase\\-protected identity files are not necessary for most use cases, where access to the encrypted identity file implies access to the whole system\\.\n.IP\nc\\. An SSH private key file, in PKCS#1, PKCS#8, or OpenSSH format\\. If the private key is password\\-protected, the password is requested interactively only if the SSH identity matches the file\\. See the \\fISSH keys\\fR section for more information, including supported key types\\.\n.IP\nd\\. \"\\fB\\-\\fR\", causing one`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/encrypted_keys.go"
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 11,
                  "endLine": 120,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\tcase ed25519.PrivateKey:\n\t\ti.decrypted, err = NewEd25519Identity(k)\n\t\tpubKey = k.Public().(ed25519.PublicKey)\n\tcase *rsa.PrivateKey:\n\t\ti.decrypted, err = NewRSAIdentity(k)\n\t\tpubKey = &k.PublicKey\n\tdefault:\n",
                    "rendered": {
                      "text": "\tcase ed25519.PrivateKey:\n\t\ti.decrypted, err = NewEd25519Identity(k)\n\t\tpubKey = k.Public().(ed25519.PublicKey)\n\tcase *rsa.PrivateKey:\n\t\ti.decrypted, err = NewRSAIdentity(k)\n\t\tpubKey = &k.PublicKey\n\tdefault:\n",
                      "markdown": "`\tcase ed25519.PrivateKey:\n\t\ti.decrypted, err = NewEd25519Identity(k)\n\t\tpubKey = k.Public().(ed25519.PublicKey)\n\tcase *rsa.PrivateKey:\n\t\ti.decrypted, err = NewRSAIdentity(k)\n\t\tpubKey = &k.PublicKey\n\tdefault:\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/encrypted_keys.go"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 14,
                  "endLine": 117,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\ti.decrypted, err = NewEd25519Identity(*k)\n\t\tpubKey = k.Public().(ed25519.PublicKey)\n\t// ParseRawPrivateKey returns inconsistent types. See Issue 429.\n\tcase ed25519.PrivateKey:\n\t\ti.decrypted, err = NewEd25519Identity(k)\n\t\tpubKey = k.Public().(ed25519.PublicKey)\n\tcase *rsa.PrivateKey:\n",
                    "rendered": {
                      "text": "\t\ti.decrypted, err = NewEd25519Identity(*k)\n\t\tpubKey = k.Public().(ed25519.PublicKey)\n\t// ParseRawPrivateKey returns inconsistent types. See Issue 429.\n\tcase ed25519.PrivateKey:\n\t\ti.decrypted, err = NewEd25519Identity(k)\n\t\tpubKey = k.Public().(ed25519.PublicKey)\n\tcase *rsa.PrivateKey:\n",
                      "markdown": "`\t\ti.decrypted, err = NewEd25519Identity(*k)\n\t\tpubKey = k.Public().(ed25519.PublicKey)\n\t// ParseRawPrivateKey returns inconsistent types. See Issue 429.\n\tcase ed25519.PrivateKey:\n\t\ti.decrypted, err = NewEd25519Identity(k)\n\t\tpubKey = k.Public().(ed25519.PublicKey)\n\tcase *rsa.PrivateKey:\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/encrypted_keys.go"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 12,
                  "endLine": 116,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\tcase *ed25519.PrivateKey:\n\t\ti.decrypted, err = NewEd25519Identity(*k)\n\t\tpubKey = k.Public().(ed25519.PublicKey)\n\t// ParseRawPrivateKey returns inconsistent types. See Issue 429.\n\tcase ed25519.PrivateKey:\n\t\ti.decrypted, err = NewEd25519Identity(k)\n\t\tpubKey = k.Public().(ed25519.PublicKey)\n",
                    "rendered": {
                      "text": "\tcase *ed25519.PrivateKey:\n\t\ti.decrypted, err = NewEd25519Identity(*k)\n\t\tpubKey = k.Public().(ed25519.PublicKey)\n\t// ParseRawPrivateKey returns inconsistent types. See Issue 429.\n\tcase ed25519.PrivateKey:\n\t\ti.decrypted, err = NewEd25519Identity(k)\n\t\tpubKey = k.Public().(ed25519.PublicKey)\n",
                      "markdown": "`\tcase *ed25519.PrivateKey:\n\t\ti.decrypted, err = NewEd25519Identity(*k)\n\t\tpubKey = k.Public().(ed25519.PublicKey)\n\t// ParseRawPrivateKey returns inconsistent types. See Issue 429.\n\tcase ed25519.PrivateKey:\n\t\ti.decrypted, err = NewEd25519Identity(k)\n\t\tpubKey = k.Public().(ed25519.PublicKey)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/encrypted_keys.go"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 15,
                  "endLine": 113,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\tEqual(x crypto.PublicKey) bool\n\t}\n\tswitch k := k.(type) {\n\tcase *ed25519.PrivateKey:\n\t\ti.decrypted, err = NewEd25519Identity(*k)\n\t\tpubKey = k.Public().(ed25519.PublicKey)\n\t// ParseRawPrivateKey returns inconsistent types. See Issue 429.\n",
                    "rendered": {
                      "text": "\t\tEqual(x crypto.PublicKey) bool\n\t}\n\tswitch k := k.(type) {\n\tcase *ed25519.PrivateKey:\n\t\ti.decrypted, err = NewEd25519Identity(*k)\n\t\tpubKey = k.Public().(ed25519.PublicKey)\n\t// ParseRawPrivateKey returns inconsistent types. See Issue 429.\n",
                      "markdown": "`\t\tEqual(x crypto.PublicKey) bool\n\t}\n\tswitch k := k.(type) {\n\tcase *ed25519.PrivateKey:\n\t\ti.decrypted, err = NewEd25519Identity(*k)\n\t\tpubKey = k.Public().(ed25519.PublicKey)\n\t// ParseRawPrivateKey returns inconsistent types. See Issue 429.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/encrypted_keys.go"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 23,
                  "endLine": 104,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to obtain passphrase: %v\", err)\n\t}\n\tk, err := ssh.ParseRawPrivateKeyWithPassphrase(i.pemBytes, passphrase)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to decrypt SSH key file: %v\", err)\n\t}\n",
                    "rendered": {
                      "text": "\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to obtain passphrase: %v\", err)\n\t}\n\tk, err := ssh.ParseRawPrivateKeyWithPassphrase(i.pemBytes, passphrase)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to decrypt SSH key file: %v\", err)\n\t}\n",
                      "markdown": "`\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to obtain passphrase: %v\", err)\n\t}\n\tk, err := ssh.ParseRawPrivateKeyWithPassphrase(i.pemBytes, passphrase)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to decrypt SSH key file: %v\", err)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/encrypted_keys.go"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 49,
                  "endLine": 40,
                  "endColumn": 59,
                  "snippet": {
                    "text": "// can be extracted from an ssh.PassphraseMissingError, otherwise it can often\n// be found in \".pub\" files.\n//\n// pemBytes must be a valid input to ssh.ParseRawPrivateKeyWithPassphrase.\n// passphrase is a callback that will be invoked by Unwrap when the passphrase\n// is necessary.\nfunc NewEncryptedSSHIdentity(pubKey ssh.PublicKey, pemBytes []byte, passphrase func() ([]byte, error)) (*EncryptedSSHIdentity, error) {\n",
                    "rendered": {
                      "text": "// can be extracted from an ssh.PassphraseMissingError, otherwise it can often\n// be found in \".pub\" files.\n//\n// pemBytes must be a valid input to ssh.ParseRawPrivateKeyWithPassphrase.\n// passphrase is a callback that will be invoked by Unwrap when the passphrase\n// is necessary.\nfunc NewEncryptedSSHIdentity(pubKey ssh.PublicKey, pemBytes []byte, passphrase func() ([]byte, error)) (*EncryptedSSHIdentity, error) {\n",
                      "markdown": "`// can be extracted from an ssh.PassphraseMissingError, otherwise it can often\n// be found in \".pub\" files.\n//\n// pemBytes must be a valid input to ssh.ParseRawPrivateKeyWithPassphrase.\n// passphrase is a callback that will be invoked by Unwrap when the passphrase\n// is necessary.\nfunc NewEncryptedSSHIdentity(pubKey ssh.PublicKey, pemBytes []byte, passphrase func() ([]byte, error)) (*EncryptedSSHIdentity, error) {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/encrypted_keys.go"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 39,
                  "endLine": 22,
                  "endColumn": 49,
                  "snippet": {
                    "text": "//\n// It requests the passphrase only if the public key matches a recipient stanza.\n// If the application knows it will always have to decrypt the private key, it\n// would be simpler to use ssh.ParseRawPrivateKeyWithPassphrase directly and\n// pass the result to NewEd25519Identity or NewRSAIdentity.\ntype EncryptedSSHIdentity struct {\n\tpubKey     ssh.PublicKey\n",
                    "rendered": {
                      "text": "//\n// It requests the passphrase only if the public key matches a recipient stanza.\n// If the application knows it will always have to decrypt the private key, it\n// would be simpler to use ssh.ParseRawPrivateKeyWithPassphrase directly and\n// pass the result to NewEd25519Identity or NewRSAIdentity.\ntype EncryptedSSHIdentity struct {\n\tpubKey     ssh.PublicKey\n",
                      "markdown": "`//\n// It requests the passphrase only if the public key matches a recipient stanza.\n// If the application knows it will always have to decrypt the private key, it\n// would be simpler to use ssh.ParseRawPrivateKeyWithPassphrase directly and\n// pass the result to NewEd25519Identity or NewRSAIdentity.\ntype EncryptedSSHIdentity struct {\n\tpubKey     ssh.PublicKey\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/encrypted_keys.go"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 55,
                  "endLine": 131,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\t}\n\n\tif exp := i.pubKey.(ssh.CryptoPublicKey).CryptoPublicKey(); !pubKey.Equal(exp) {\n\t\treturn nil, fmt.Errorf(\"mismatched private and public SSH key\")\n\t}\n\n\treturn i.decrypted.Unwrap(stanzas)\n",
                    "rendered": {
                      "text": "\t}\n\n\tif exp := i.pubKey.(ssh.CryptoPublicKey).CryptoPublicKey(); !pubKey.Equal(exp) {\n\t\treturn nil, fmt.Errorf(\"mismatched private and public SSH key\")\n\t}\n\n\treturn i.decrypted.Unwrap(stanzas)\n",
                      "markdown": "`\t}\n\n\tif exp := i.pubKey.(ssh.CryptoPublicKey).CryptoPublicKey(); !pubKey.Equal(exp) {\n\t\treturn nil, fmt.Errorf(\"mismatched private and public SSH key\")\n\t}\n\n\treturn i.decrypted.Unwrap(stanzas)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/encrypted_keys.go"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 33,
                  "endLine": 127,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t\treturn nil, fmt.Errorf(\"unexpected SSH key type: %T\", k)\n\t}\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"invalid SSH key: %v\", err)\n\t}\n\n\tif exp := i.pubKey.(ssh.CryptoPublicKey).CryptoPublicKey(); !pubKey.Equal(exp) {\n",
                    "rendered": {
                      "text": "\t\treturn nil, fmt.Errorf(\"unexpected SSH key type: %T\", k)\n\t}\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"invalid SSH key: %v\", err)\n\t}\n\n\tif exp := i.pubKey.(ssh.CryptoPublicKey).CryptoPublicKey(); !pubKey.Equal(exp) {\n",
                      "markdown": "`\t\treturn nil, fmt.Errorf(\"unexpected SSH key type: %T\", k)\n\t}\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"invalid SSH key: %v\", err)\n\t}\n\n\tif exp := i.pubKey.(ssh.CryptoPublicKey).CryptoPublicKey(); !pubKey.Equal(exp) {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/encrypted_keys.go"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 36,
                  "endLine": 124,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\t\ti.decrypted, err = NewRSAIdentity(k)\n\t\tpubKey = &k.PublicKey\n\tdefault:\n\t\treturn nil, fmt.Errorf(\"unexpected SSH key type: %T\", k)\n\t}\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"invalid SSH key: %v\", err)\n",
                    "rendered": {
                      "text": "\t\ti.decrypted, err = NewRSAIdentity(k)\n\t\tpubKey = &k.PublicKey\n\tdefault:\n\t\treturn nil, fmt.Errorf(\"unexpected SSH key type: %T\", k)\n\t}\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"invalid SSH key: %v\", err)\n",
                      "markdown": "`\t\ti.decrypted, err = NewRSAIdentity(k)\n\t\tpubKey = &k.PublicKey\n\tdefault:\n\t\treturn nil, fmt.Errorf(\"unexpected SSH key type: %T\", k)\n\t}\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"invalid SSH key: %v\", err)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/encrypted_keys.go"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 43,
                  "endLine": 106,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t}\n\tk, err := ssh.ParseRawPrivateKeyWithPassphrase(i.pemBytes, passphrase)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to decrypt SSH key file: %v\", err)\n\t}\n\n\tvar pubKey interface {\n",
                    "rendered": {
                      "text": "\t}\n\tk, err := ssh.ParseRawPrivateKeyWithPassphrase(i.pemBytes, passphrase)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to decrypt SSH key file: %v\", err)\n\t}\n\n\tvar pubKey interface {\n",
                      "markdown": "`\t}\n\tk, err := ssh.ParseRawPrivateKeyWithPassphrase(i.pemBytes, passphrase)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to decrypt SSH key file: %v\", err)\n\t}\n\n\tvar pubKey interface {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/encrypted_keys.go"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 37,
                  "endLine": 63,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\t\t}\n\t\ti.recipient = r\n\tdefault:\n\t\treturn nil, fmt.Errorf(\"unsupported SSH key type: %v\", t)\n\t}\n\treturn i, nil\n}\n",
                    "rendered": {
                      "text": "\t\t}\n\t\ti.recipient = r\n\tdefault:\n\t\treturn nil, fmt.Errorf(\"unsupported SSH key type: %v\", t)\n\t}\n\treturn i, nil\n}\n",
                      "markdown": "`\t\t}\n\t\ti.recipient = r\n\tdefault:\n\t\treturn nil, fmt.Errorf(\"unsupported SSH key type: %v\", t)\n\t}\n\treturn i, nil\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/agessh.go"
                },
                "region": {
                  "startLine": 330,
                  "startColumn": 34,
                  "endLine": 330,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t}\n\n\ttweak := make([]byte, curve25519.ScalarSize)\n\ttH := hkdf.New(sha256.New, nil, i.sshKey.Marshal(), []byte(ed25519Label))\n\tif _, err := io.ReadFull(tH, tweak); err != nil {\n\t\treturn nil, err\n\t}\n",
                    "rendered": {
                      "text": "\t}\n\n\ttweak := make([]byte, curve25519.ScalarSize)\n\ttH := hkdf.New(sha256.New, nil, i.sshKey.Marshal(), []byte(ed25519Label))\n\tif _, err := io.ReadFull(tH, tweak); err != nil {\n\t\treturn nil, err\n\t}\n",
                      "markdown": "`\t}\n\n\ttweak := make([]byte, curve25519.ScalarSize)\n\ttH := hkdf.New(sha256.New, nil, i.sshKey.Marshal(), []byte(ed25519Label))\n\tif _, err := io.ReadFull(tH, tweak); err != nil {\n\t\treturn nil, err\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/agessh.go"
                },
                "region": {
                  "startLine": 324,
                  "startColumn": 42,
                  "endLine": 324,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\t\treturn nil, age.ErrIncorrectIdentity\n\t}\n\n\tsharedSecret, err := curve25519.X25519(i.secretKey, publicKey)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"invalid X25519 recipient: %v\", err)\n\t}\n",
                    "rendered": {
                      "text": "\t\treturn nil, age.ErrIncorrectIdentity\n\t}\n\n\tsharedSecret, err := curve25519.X25519(i.secretKey, publicKey)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"invalid X25519 recipient: %v\", err)\n\t}\n",
                      "markdown": "`\t\treturn nil, age.ErrIncorrectIdentity\n\t}\n\n\tsharedSecret, err := curve25519.X25519(i.secretKey, publicKey)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"invalid X25519 recipient: %v\", err)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/agessh.go"
                },
                "region": {
                  "startLine": 320,
                  "startColumn": 37,
                  "endLine": 320,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\t\treturn nil, errors.New(\"invalid ssh-ed25519 recipient block\")\n\t}\n\n\tif block.Args[0] != sshFingerprint(i.sshKey) {\n\t\treturn nil, age.ErrIncorrectIdentity\n\t}\n\n",
                    "rendered": {
                      "text": "\t\treturn nil, errors.New(\"invalid ssh-ed25519 recipient block\")\n\t}\n\n\tif block.Args[0] != sshFingerprint(i.sshKey) {\n\t\treturn nil, age.ErrIncorrectIdentity\n\t}\n\n",
                      "markdown": "`\t\treturn nil, errors.New(\"invalid ssh-ed25519 recipient block\")\n\t}\n\n\tif block.Args[0] != sshFingerprint(i.sshKey) {\n\t\treturn nil, age.ErrIncorrectIdentity\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/agessh.go"
                },
                "region": {
                  "startLine": 296,
                  "startColumn": 19,
                  "endLine": 296,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nfunc (i *Ed25519Identity) Recipient() *Ed25519Recipient {\n\treturn &Ed25519Recipient{\n\t\tsshKey:         i.sshKey,\n\t\ttheirPublicKey: i.ourPublicKey,\n\t}\n}\n",
                    "rendered": {
                      "text": "\nfunc (i *Ed25519Identity) Recipient() *Ed25519Recipient {\n\treturn &Ed25519Recipient{\n\t\tsshKey:         i.sshKey,\n\t\ttheirPublicKey: i.ourPublicKey,\n\t}\n}\n",
                      "markdown": "`\nfunc (i *Ed25519Identity) Recipient() *Ed25519Recipient {\n\treturn &Ed25519Recipient{\n\t\tsshKey:         i.sshKey,\n\t\ttheirPublicKey: i.ourPublicKey,\n\t}\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/agessh.go"
                },
                "region": {
                  "startLine": 287,
                  "startColumn": 46,
                  "endLine": 287,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\treturn nil, fmt.Errorf(\"unsupported SSH identity type: %T\", k)\n}\n\nfunc ed25519PrivateKeyToCurve25519(pk ed25519.PrivateKey) []byte {\n\th := sha512.New()\n\th.Write(pk.Seed())\n\tout := h.Sum(nil)\n",
                    "rendered": {
                      "text": "\treturn nil, fmt.Errorf(\"unsupported SSH identity type: %T\", k)\n}\n\nfunc ed25519PrivateKeyToCurve25519(pk ed25519.PrivateKey) []byte {\n\th := sha512.New()\n\th.Write(pk.Seed())\n\tout := h.Sum(nil)\n",
                      "markdown": "`\treturn nil, fmt.Errorf(\"unsupported SSH identity type: %T\", k)\n}\n\nfunc ed25519PrivateKeyToCurve25519(pk ed25519.PrivateKey) []byte {\n\th := sha512.New()\n\th.Write(pk.Seed())\n\tout := h.Sum(nil)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/agessh.go"
                },
                "region": {
                  "startLine": 287,
                  "startColumn": 12,
                  "endLine": 287,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\treturn nil, fmt.Errorf(\"unsupported SSH identity type: %T\", k)\n}\n\nfunc ed25519PrivateKeyToCurve25519(pk ed25519.PrivateKey) []byte {\n\th := sha512.New()\n\th.Write(pk.Seed())\n\tout := h.Sum(nil)\n",
                    "rendered": {
                      "text": "\treturn nil, fmt.Errorf(\"unsupported SSH identity type: %T\", k)\n}\n\nfunc ed25519PrivateKeyToCurve25519(pk ed25519.PrivateKey) []byte {\n\th := sha512.New()\n\th.Write(pk.Seed())\n\tout := h.Sum(nil)\n",
                      "markdown": "`\treturn nil, fmt.Errorf(\"unsupported SSH identity type: %T\", k)\n}\n\nfunc ed25519PrivateKeyToCurve25519(pk ed25519.PrivateKey) []byte {\n\th := sha512.New()\n\th.Write(pk.Seed())\n\tout := h.Sum(nil)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/agessh.go"
                },
                "region": {
                  "startLine": 280,
                  "startColumn": 11,
                  "endLine": 280,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t// ParseRawPrivateKey returns inconsistent types. See Issue 429.\n\tcase ed25519.PrivateKey:\n\t\treturn NewEd25519Identity(k)\n\tcase *rsa.PrivateKey:\n\t\treturn NewRSAIdentity(k)\n\t}\n\n",
                    "rendered": {
                      "text": "\t// ParseRawPrivateKey returns inconsistent types. See Issue 429.\n\tcase ed25519.PrivateKey:\n\t\treturn NewEd25519Identity(k)\n\tcase *rsa.PrivateKey:\n\t\treturn NewRSAIdentity(k)\n\t}\n\n",
                      "markdown": "`\t// ParseRawPrivateKey returns inconsistent types. See Issue 429.\n\tcase ed25519.PrivateKey:\n\t\treturn NewEd25519Identity(k)\n\tcase *rsa.PrivateKey:\n\t\treturn NewRSAIdentity(k)\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/agessh.go"
                },
                "region": {
                  "startLine": 278,
                  "startColumn": 14,
                  "endLine": 278,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\tcase *ed25519.PrivateKey:\n\t\treturn NewEd25519Identity(*k)\n\t// ParseRawPrivateKey returns inconsistent types. See Issue 429.\n\tcase ed25519.PrivateKey:\n\t\treturn NewEd25519Identity(k)\n\tcase *rsa.PrivateKey:\n\t\treturn NewRSAIdentity(k)\n",
                    "rendered": {
                      "text": "\tcase *ed25519.PrivateKey:\n\t\treturn NewEd25519Identity(*k)\n\t// ParseRawPrivateKey returns inconsistent types. See Issue 429.\n\tcase ed25519.PrivateKey:\n\t\treturn NewEd25519Identity(k)\n\tcase *rsa.PrivateKey:\n\t\treturn NewRSAIdentity(k)\n",
                      "markdown": "`\tcase *ed25519.PrivateKey:\n\t\treturn NewEd25519Identity(*k)\n\t// ParseRawPrivateKey returns inconsistent types. See Issue 429.\n\tcase ed25519.PrivateKey:\n\t\treturn NewEd25519Identity(k)\n\tcase *rsa.PrivateKey:\n\t\treturn NewRSAIdentity(k)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/agessh.go"
                },
                "region": {
                  "startLine": 277,
                  "startColumn": 12,
                  "endLine": 277,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\tswitch k := k.(type) {\n\tcase *ed25519.PrivateKey:\n\t\treturn NewEd25519Identity(*k)\n\t// ParseRawPrivateKey returns inconsistent types. See Issue 429.\n\tcase ed25519.PrivateKey:\n\t\treturn NewEd25519Identity(k)\n\tcase *rsa.PrivateKey:\n",
                    "rendered": {
                      "text": "\tswitch k := k.(type) {\n\tcase *ed25519.PrivateKey:\n\t\treturn NewEd25519Identity(*k)\n\t// ParseRawPrivateKey returns inconsistent types. See Issue 429.\n\tcase ed25519.PrivateKey:\n\t\treturn NewEd25519Identity(k)\n\tcase *rsa.PrivateKey:\n",
                      "markdown": "`\tswitch k := k.(type) {\n\tcase *ed25519.PrivateKey:\n\t\treturn NewEd25519Identity(*k)\n\t// ParseRawPrivateKey returns inconsistent types. See Issue 429.\n\tcase ed25519.PrivateKey:\n\t\treturn NewEd25519Identity(k)\n\tcase *rsa.PrivateKey:\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/agessh.go"
                },
                "region": {
                  "startLine": 275,
                  "startColumn": 15,
                  "endLine": 275,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t}\n\n\tswitch k := k.(type) {\n\tcase *ed25519.PrivateKey:\n\t\treturn NewEd25519Identity(*k)\n\t// ParseRawPrivateKey returns inconsistent types. See Issue 429.\n\tcase ed25519.PrivateKey:\n",
                    "rendered": {
                      "text": "\t}\n\n\tswitch k := k.(type) {\n\tcase *ed25519.PrivateKey:\n\t\treturn NewEd25519Identity(*k)\n\t// ParseRawPrivateKey returns inconsistent types. See Issue 429.\n\tcase ed25519.PrivateKey:\n",
                      "markdown": "`\t}\n\n\tswitch k := k.(type) {\n\tcase *ed25519.PrivateKey:\n\t\treturn NewEd25519Identity(*k)\n\t// ParseRawPrivateKey returns inconsistent types. See Issue 429.\n\tcase ed25519.PrivateKey:\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/agessh.go"
                },
                "region": {
                  "startLine": 269,
                  "startColumn": 23,
                  "endLine": 269,
                  "endColumn": 33,
                  "snippet": {
                    "text": "}\n\nfunc ParseIdentity(pemBytes []byte) (age.Identity, error) {\n\tk, err := ssh.ParseRawPrivateKey(pemBytes)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n",
                    "rendered": {
                      "text": "}\n\nfunc ParseIdentity(pemBytes []byte) (age.Identity, error) {\n\tk, err := ssh.ParseRawPrivateKey(pemBytes)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n",
                      "markdown": "`}\n\nfunc ParseIdentity(pemBytes []byte) (age.Identity, error) {\n\tk, err := ssh.ParseRawPrivateKey(pemBytes)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/agessh.go"
                },
                "region": {
                  "startLine": 264,
                  "startColumn": 41,
                  "endLine": 264,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\t\tsshKey:    s.PublicKey(),\n\t\tsecretKey: ed25519PrivateKeyToCurve25519(key),\n\t}\n\ti.ourPublicKey, _ = curve25519.X25519(i.secretKey, curve25519.Basepoint)\n\treturn i, nil\n}\n\n",
                    "rendered": {
                      "text": "\t\tsshKey:    s.PublicKey(),\n\t\tsecretKey: ed25519PrivateKeyToCurve25519(key),\n\t}\n\ti.ourPublicKey, _ = curve25519.X25519(i.secretKey, curve25519.Basepoint)\n\treturn i, nil\n}\n\n",
                      "markdown": "`\t\tsshKey:    s.PublicKey(),\n\t\tsecretKey: ed25519PrivateKeyToCurve25519(key),\n\t}\n\ti.ourPublicKey, _ = curve25519.X25519(i.secretKey, curve25519.Basepoint)\n\treturn i, nil\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/agessh.go"
                },
                "region": {
                  "startLine": 262,
                  "startColumn": 20,
                  "endLine": 262,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t}\n\ti := &Ed25519Identity{\n\t\tsshKey:    s.PublicKey(),\n\t\tsecretKey: ed25519PrivateKeyToCurve25519(key),\n\t}\n\ti.ourPublicKey, _ = curve25519.X25519(i.secretKey, curve25519.Basepoint)\n\treturn i, nil\n",
                    "rendered": {
                      "text": "\t}\n\ti := &Ed25519Identity{\n\t\tsshKey:    s.PublicKey(),\n\t\tsecretKey: ed25519PrivateKeyToCurve25519(key),\n\t}\n\ti.ourPublicKey, _ = curve25519.X25519(i.secretKey, curve25519.Basepoint)\n\treturn i, nil\n",
                      "markdown": "`\t}\n\ti := &Ed25519Identity{\n\t\tsshKey:    s.PublicKey(),\n\t\tsecretKey: ed25519PrivateKeyToCurve25519(key),\n\t}\n\ti.ourPublicKey, _ = curve25519.X25519(i.secretKey, curve25519.Basepoint)\n\treturn i, nil\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/agessh.go"
                },
                "region": {
                  "startLine": 262,
                  "startColumn": 2,
                  "endLine": 262,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t}\n\ti := &Ed25519Identity{\n\t\tsshKey:    s.PublicKey(),\n\t\tsecretKey: ed25519PrivateKeyToCurve25519(key),\n\t}\n\ti.ourPublicKey, _ = curve25519.X25519(i.secretKey, curve25519.Basepoint)\n\treturn i, nil\n",
                    "rendered": {
                      "text": "\t}\n\ti := &Ed25519Identity{\n\t\tsshKey:    s.PublicKey(),\n\t\tsecretKey: ed25519PrivateKeyToCurve25519(key),\n\t}\n\ti.ourPublicKey, _ = curve25519.X25519(i.secretKey, curve25519.Basepoint)\n\treturn i, nil\n",
                      "markdown": "`\t}\n\ti := &Ed25519Identity{\n\t\tsshKey:    s.PublicKey(),\n\t\tsecretKey: ed25519PrivateKeyToCurve25519(key),\n\t}\n\ti.ourPublicKey, _ = curve25519.X25519(i.secretKey, curve25519.Basepoint)\n\treturn i, nil\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/agessh.go"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 36,
                  "endLine": 255,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\nvar _ age.Identity = &Ed25519Identity{}\n\nfunc NewEd25519Identity(key ed25519.PrivateKey) (*Ed25519Identity, error) {\n\ts, err := ssh.NewSignerFromKey(key)\n\tif err != nil {\n\t\treturn nil, err\n",
                    "rendered": {
                      "text": "\nvar _ age.Identity = &Ed25519Identity{}\n\nfunc NewEd25519Identity(key ed25519.PrivateKey) (*Ed25519Identity, error) {\n\ts, err := ssh.NewSignerFromKey(key)\n\tif err != nil {\n\t\treturn nil, err\n",
                      "markdown": "`\nvar _ age.Identity = &Ed25519Identity{}\n\nfunc NewEd25519Identity(key ed25519.PrivateKey) (*Ed25519Identity, error) {\n\ts, err := ssh.NewSignerFromKey(key)\n\tif err != nil {\n\t\treturn nil, err\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/agessh.go"
                },
                "region": {
                  "startLine": 249,
                  "startColumn": 1,
                  "endLine": 249,
                  "endColumn": 10,
                  "snippet": {
                    "text": "}\n\ntype Ed25519Identity struct {\n\tsecretKey, ourPublicKey []byte\n\tsshKey                  ssh.PublicKey\n}\n\n",
                    "rendered": {
                      "text": "}\n\ntype Ed25519Identity struct {\n\tsecretKey, ourPublicKey []byte\n\tsshKey                  ssh.PublicKey\n}\n\n",
                      "markdown": "`}\n\ntype Ed25519Identity struct {\n\tsecretKey, ourPublicKey []byte\n\tsshKey                  ssh.PublicKey\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/agessh.go"
                },
                "region": {
                  "startLine": 226,
                  "startColumn": 33,
                  "endLine": 226,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\n\tl := &age.Stanza{\n\t\tType: \"ssh-ed25519\",\n\t\tArgs: []string{sshFingerprint(r.sshKey),\n\t\t\tformat.EncodeToString(ourPublicKey[:])},\n\t}\n\n",
                    "rendered": {
                      "text": "\n\tl := &age.Stanza{\n\t\tType: \"ssh-ed25519\",\n\t\tArgs: []string{sshFingerprint(r.sshKey),\n\t\t\tformat.EncodeToString(ourPublicKey[:])},\n\t}\n\n",
                      "markdown": "`\n\tl := &age.Stanza{\n\t\tType: \"ssh-ed25519\",\n\t\tArgs: []string{sshFingerprint(r.sshKey),\n\t\t\tformat.EncodeToString(ourPublicKey[:])},\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/agessh.go"
                },
                "region": {
                  "startLine": 218,
                  "startColumn": 34,
                  "endLine": 218,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t}\n\n\ttweak := make([]byte, curve25519.ScalarSize)\n\ttH := hkdf.New(sha256.New, nil, r.sshKey.Marshal(), []byte(ed25519Label))\n\tif _, err := io.ReadFull(tH, tweak); err != nil {\n\t\treturn nil, err\n\t}\n",
                    "rendered": {
                      "text": "\t}\n\n\ttweak := make([]byte, curve25519.ScalarSize)\n\ttH := hkdf.New(sha256.New, nil, r.sshKey.Marshal(), []byte(ed25519Label))\n\tif _, err := io.ReadFull(tH, tweak); err != nil {\n\t\treturn nil, err\n\t}\n",
                      "markdown": "`\t}\n\n\ttweak := make([]byte, curve25519.ScalarSize)\n\ttH := hkdf.New(sha256.New, nil, r.sshKey.Marshal(), []byte(ed25519Label))\n\tif _, err := io.ReadFull(tH, tweak); err != nil {\n\t\treturn nil, err\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/agessh.go"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 37,
                  "endLine": 125,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\t\treturn nil, errors.New(\"invalid ssh-rsa recipient block\")\n\t}\n\n\tif block.Args[0] != sshFingerprint(i.sshKey) {\n\t\treturn nil, age.ErrIncorrectIdentity\n\t}\n\n",
                    "rendered": {
                      "text": "\t\treturn nil, errors.New(\"invalid ssh-rsa recipient block\")\n\t}\n\n\tif block.Args[0] != sshFingerprint(i.sshKey) {\n\t\treturn nil, age.ErrIncorrectIdentity\n\t}\n\n",
                      "markdown": "`\t\treturn nil, errors.New(\"invalid ssh-rsa recipient block\")\n\t}\n\n\tif block.Args[0] != sshFingerprint(i.sshKey) {\n\t\treturn nil, age.ErrIncorrectIdentity\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/agessh.go"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 11,
                  "endLine": 108,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\nfunc (i *RSAIdentity) Recipient() *RSARecipient {\n\treturn &RSARecipient{\n\t\tsshKey: i.sshKey,\n\t\tpubKey: &i.k.PublicKey,\n\t}\n}\n",
                    "rendered": {
                      "text": "\nfunc (i *RSAIdentity) Recipient() *RSARecipient {\n\treturn &RSARecipient{\n\t\tsshKey: i.sshKey,\n\t\tpubKey: &i.k.PublicKey,\n\t}\n}\n",
                      "markdown": "`\nfunc (i *RSAIdentity) Recipient() *RSARecipient {\n\treturn &RSARecipient{\n\t\tsshKey: i.sshKey,\n\t\tpubKey: &i.k.PublicKey,\n\t}\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/agessh.go"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 29,
                  "endLine": 95,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\nvar _ age.Identity = &RSAIdentity{}\n\nfunc NewRSAIdentity(key *rsa.PrivateKey) (*RSAIdentity, error) {\n\ts, err := ssh.NewSignerFromKey(key)\n\tif err != nil {\n\t\treturn nil, err\n",
                    "rendered": {
                      "text": "\nvar _ age.Identity = &RSAIdentity{}\n\nfunc NewRSAIdentity(key *rsa.PrivateKey) (*RSAIdentity, error) {\n\ts, err := ssh.NewSignerFromKey(key)\n\tif err != nil {\n\t\treturn nil, err\n",
                      "markdown": "`\nvar _ age.Identity = &RSAIdentity{}\n\nfunc NewRSAIdentity(key *rsa.PrivateKey) (*RSAIdentity, error) {\n\ts, err := ssh.NewSignerFromKey(key)\n\tif err != nil {\n\t\treturn nil, err\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/agessh.go"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 13,
                  "endLine": 89,
                  "endColumn": 23,
                  "snippet": {
                    "text": "}\n\ntype RSAIdentity struct {\n\tk      *rsa.PrivateKey\n\tsshKey ssh.PublicKey\n}\n\n",
                    "rendered": {
                      "text": "}\n\ntype RSAIdentity struct {\n\tk      *rsa.PrivateKey\n\tsshKey ssh.PublicKey\n}\n\n",
                      "markdown": "`}\n\ntype RSAIdentity struct {\n\tk      *rsa.PrivateKey\n\tsshKey ssh.PublicKey\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/agessh.go"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 33,
                  "endLine": 75,
                  "endColumn": 37,
                  "snippet": {
                    "text": "func (r *RSARecipient) Wrap(fileKey []byte) ([]*age.Stanza, error) {\n\tl := &age.Stanza{\n\t\tType: \"ssh-rsa\",\n\t\tArgs: []string{sshFingerprint(r.sshKey)},\n\t}\n\n\twrappedKey, err := rsa.EncryptOAEP(sha256.New(), rand.Reader,\n",
                    "rendered": {
                      "text": "func (r *RSARecipient) Wrap(fileKey []byte) ([]*age.Stanza, error) {\n\tl := &age.Stanza{\n\t\tType: \"ssh-rsa\",\n\t\tArgs: []string{sshFingerprint(r.sshKey)},\n\t}\n\n\twrappedKey, err := rsa.EncryptOAEP(sha256.New(), rand.Reader,\n",
                      "markdown": "`func (r *RSARecipient) Wrap(fileKey []byte) ([]*age.Stanza, error) {\n\tl := &age.Stanza{\n\t\tType: \"ssh-rsa\",\n\t\tArgs: []string{sshFingerprint(r.sshKey)},\n\t}\n\n\twrappedKey, err := rsa.EncryptOAEP(sha256.New(), rand.Reader,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/agessh.go"
                },
                "region": {
                  "startLine": 284,
                  "startColumn": 36,
                  "endLine": 284,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\t\treturn NewRSAIdentity(k)\n\t}\n\n\treturn nil, fmt.Errorf(\"unsupported SSH identity type: %T\", k)\n}\n\nfunc ed25519PrivateKeyToCurve25519(pk ed25519.PrivateKey) []byte {\n",
                    "rendered": {
                      "text": "\t\treturn NewRSAIdentity(k)\n\t}\n\n\treturn nil, fmt.Errorf(\"unsupported SSH identity type: %T\", k)\n}\n\nfunc ed25519PrivateKeyToCurve25519(pk ed25519.PrivateKey) []byte {\n",
                      "markdown": "`\t\treturn NewRSAIdentity(k)\n\t}\n\n\treturn nil, fmt.Errorf(\"unsupported SSH identity type: %T\", k)\n}\n\nfunc ed25519PrivateKeyToCurve25519(pk ed25519.PrivateKey) []byte {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/agessh.go"
                },
                "region": {
                  "startLine": 184,
                  "startColumn": 35,
                  "endLine": 184,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\t\treturn nil, fmt.Errorf(\"unknown SSH recipient type: %q\", t)\n\t}\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"malformed SSH recipient: %q: %v\", s, err)\n\t}\n\n\treturn r, nil\n",
                    "rendered": {
                      "text": "\t\treturn nil, fmt.Errorf(\"unknown SSH recipient type: %q\", t)\n\t}\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"malformed SSH recipient: %q: %v\", s, err)\n\t}\n\n\treturn r, nil\n",
                      "markdown": "`\t\treturn nil, fmt.Errorf(\"unknown SSH recipient type: %q\", t)\n\t}\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"malformed SSH recipient: %q: %v\", s, err)\n\t}\n\n\treturn r, nil\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/agessh.go"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 33,
                  "endLine": 181,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\tcase \"ssh-ed25519\":\n\t\tr, err = NewEd25519Recipient(pubKey)\n\tdefault:\n\t\treturn nil, fmt.Errorf(\"unknown SSH recipient type: %q\", t)\n\t}\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"malformed SSH recipient: %q: %v\", s, err)\n",
                    "rendered": {
                      "text": "\tcase \"ssh-ed25519\":\n\t\tr, err = NewEd25519Recipient(pubKey)\n\tdefault:\n\t\treturn nil, fmt.Errorf(\"unknown SSH recipient type: %q\", t)\n\t}\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"malformed SSH recipient: %q: %v\", s, err)\n",
                      "markdown": "`\tcase \"ssh-ed25519\":\n\t\tr, err = NewEd25519Recipient(pubKey)\n\tdefault:\n\t\treturn nil, fmt.Errorf(\"unknown SSH recipient type: %q\", t)\n\t}\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"malformed SSH recipient: %q: %v\", s, err)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/agessh.go"
                },
                "region": {
                  "startLine": 171,
                  "startColumn": 35,
                  "endLine": 171,
                  "endColumn": 40,
                  "snippet": {
                    "text": "func ParseRecipient(s string) (age.Recipient, error) {\n\tpubKey, _, _, _, err := ssh.ParseAuthorizedKey([]byte(s))\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"malformed SSH recipient: %q: %v\", s, err)\n\t}\n\n\tvar r age.Recipient\n",
                    "rendered": {
                      "text": "func ParseRecipient(s string) (age.Recipient, error) {\n\tpubKey, _, _, _, err := ssh.ParseAuthorizedKey([]byte(s))\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"malformed SSH recipient: %q: %v\", s, err)\n\t}\n\n\tvar r age.Recipient\n",
                      "markdown": "`func ParseRecipient(s string) (age.Recipient, error) {\n\tpubKey, _, _, _, err := ssh.ParseAuthorizedKey([]byte(s))\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"malformed SSH recipient: %q: %v\", s, err)\n\t}\n\n\tvar r age.Recipient\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/agessh/agessh.go"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 66,
                  "endLine": 6,
                  "endColumn": 71,
                  "snippet": {
                    "text": "// license that can be found in the LICENSE file.\n\n// Package agessh provides age.Identity and age.Recipient implementations of\n// types \"ssh-rsa\" and \"ssh-ed25519\", which allow reusing existing SSH keys for\n// encryption with age-encryption.org/v1.\n//\n// These recipient types should only be used for compatibility with existing\n",
                    "rendered": {
                      "text": "// license that can be found in the LICENSE file.\n\n// Package agessh provides age.Identity and age.Recipient implementations of\n// types \"ssh-rsa\" and \"ssh-ed25519\", which allow reusing existing SSH keys for\n// encryption with age-encryption.org/v1.\n//\n// These recipient types should only be used for compatibility with existing\n",
                      "markdown": "`// license that can be found in the LICENSE file.\n\n// Package agessh provides age.Identity and age.Recipient implementations of\n// types \"ssh-rsa\" and \"ssh-ed25519\", which allow reusing existing SSH keys for\n// encryption with age-encryption.org/v1.\n//\n// These recipient types should only be used for compatibility with existing\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/armor/armor.go"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 11,
                  "endLine": 147,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t\treturn 0, r.setErr(errors.New(\"column limit exceeded\"))\n\t}\n\tr.unread = r.buf[:]\n\tn, err := base64.StdEncoding.Strict().Decode(r.unread, line)\n\tif err != nil {\n\t\treturn 0, r.setErr(err)\n\t}\n",
                    "rendered": {
                      "text": "\t\treturn 0, r.setErr(errors.New(\"column limit exceeded\"))\n\t}\n\tr.unread = r.buf[:]\n\tn, err := base64.StdEncoding.Strict().Decode(r.unread, line)\n\tif err != nil {\n\t\treturn 0, r.setErr(err)\n\t}\n",
                      "markdown": "`\t\treturn 0, r.setErr(errors.New(\"column limit exceeded\"))\n\t}\n\tr.unread = r.buf[:]\n\tn, err := base64.StdEncoding.Strict().Decode(r.unread, line)\n\tif err != nil {\n\t\treturn 0, r.setErr(err)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/armor/armor.go"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 42,
                  "endLine": 64,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t// TODO: write a test with aligned and misaligned sizes, and 8 and 10 steps.\n\treturn &armoredWriter{\n\t\tdst:     dst,\n\t\tencoder: format.NewWrappedBase64Encoder(base64.StdEncoding, dst),\n\t}\n}\n\n",
                    "rendered": {
                      "text": "\t// TODO: write a test with aligned and misaligned sizes, and 8 and 10 steps.\n\treturn &armoredWriter{\n\t\tdst:     dst,\n\t\tencoder: format.NewWrappedBase64Encoder(base64.StdEncoding, dst),\n\t}\n}\n\n",
                      "markdown": "`\t// TODO: write a test with aligned and misaligned sizes, and 8 and 10 steps.\n\treturn &armoredWriter{\n\t\tdst:     dst,\n\t\tencoder: format.NewWrappedBase64Encoder(base64.StdEncoding, dst),\n\t}\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/armor/armor.go"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 11,
                  "endLine": 15,
                  "endColumn": 17,
                  "snippet": {
                    "text": "import (\n\t\"bufio\"\n\t\"bytes\"\n\t\"encoding/base64\"\n\t\"errors\"\n\t\"fmt\"\n\t\"io\"\n",
                    "rendered": {
                      "text": "import (\n\t\"bufio\"\n\t\"bytes\"\n\t\"encoding/base64\"\n\t\"errors\"\n\t\"fmt\"\n\t\"io\"\n",
                      "markdown": "`import (\n\t\"bufio\"\n\t\"bytes\"\n\t\"encoding/base64\"\n\t\"errors\"\n\t\"fmt\"\n\t\"io\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/armor/armor_test.go"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 51,
                  "endLine": 73,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\t// on disk if the local machine is trusted, or have the user provide it.\n\tidentity, err := age.ParseX25519Identity(privateKey)\n\tif err != nil {\n\t\tlog.Fatalf(\"Failed to parse private key %q: %v\", privateKey, err)\n\t}\n\n\tout := &bytes.Buffer{}\n",
                    "rendered": {
                      "text": "\t// on disk if the local machine is trusted, or have the user provide it.\n\tidentity, err := age.ParseX25519Identity(privateKey)\n\tif err != nil {\n\t\tlog.Fatalf(\"Failed to parse private key %q: %v\", privateKey, err)\n\t}\n\n\tout := &bytes.Buffer{}\n",
                      "markdown": "`\t// on disk if the local machine is trusted, or have the user provide it.\n\tidentity, err := age.ParseX25519Identity(privateKey)\n\tif err != nil {\n\t\tlog.Fatalf(\"Failed to parse private key %q: %v\", privateKey, err)\n\t}\n\n\tout := &bytes.Buffer{}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/armor/armor_test.go"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 42,
                  "endLine": 71,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\n\t// DO NOT hardcode the private key. Store it in a secret storage solution,\n\t// on disk if the local machine is trusted, or have the user provide it.\n\tidentity, err := age.ParseX25519Identity(privateKey)\n\tif err != nil {\n\t\tlog.Fatalf(\"Failed to parse private key %q: %v\", privateKey, err)\n\t}\n",
                    "rendered": {
                      "text": "\n\t// DO NOT hardcode the private key. Store it in a secret storage solution,\n\t// on disk if the local machine is trusted, or have the user provide it.\n\tidentity, err := age.ParseX25519Identity(privateKey)\n\tif err != nil {\n\t\tlog.Fatalf(\"Failed to parse private key %q: %v\", privateKey, err)\n\t}\n",
                      "markdown": "`\n\t// DO NOT hardcode the private key. Store it in a secret storage solution,\n\t// on disk if the local machine is trusted, or have the user provide it.\n\tidentity, err := age.ParseX25519Identity(privateKey)\n\tif err != nil {\n\t\tlog.Fatalf(\"Failed to parse private key %q: %v\", privateKey, err)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/armor/armor_test.go"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 4,
                  "endLine": 58,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\t// [...]\n}\n\nvar privateKey = \"AGE-SECRET-KEY-184JMZMVQH3E6U0PSL869004Y3U2NYV7R30EU99CSEDNPH02YUVFSZW44VU\"\n\nfunc ExampleNewReader() {\n\tfileContents := `-----BEGIN AGE ENCRYPTED FILE-----\n",
                    "rendered": {
                      "text": "\t// [...]\n}\n\nvar privateKey = \"AGE-SECRET-KEY-184JMZMVQH3E6U0PSL869004Y3U2NYV7R30EU99CSEDNPH02YUVFSZW44VU\"\n\nfunc ExampleNewReader() {\n\tfileContents := `-----BEGIN AGE ENCRYPTED FILE-----\n",
                      "markdown": "`\t// [...]\n}\n\nvar privateKey = \"AGE-SECRET-KEY-184JMZMVQH3E6U0PSL869004Y3U2NYV7R30EU99CSEDNPH02YUVFSZW44VU\"\n\nfunc ExampleNewReader() {\n\tfileContents := `-----BEGIN AGE ENCRYPTED FILE-----\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/armor/armor_test.go"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 14,
                  "endLine": 28,
                  "endColumn": 78,
                  "snippet": {
                    "text": ")\n\nfunc ExampleNewWriter() {\n\tpublicKey := \"age1cy0su9fwf3gf9mw868g5yut09p6nytfmmnktexz2ya5uqg9vl9sss4euqm\"\n\trecipient, err := age.ParseX25519Recipient(publicKey)\n\tif err != nil {\n\t\tlog.Fatalf(\"Failed to parse public key %q: %v\", publicKey, err)\n",
                    "rendered": {
                      "text": ")\n\nfunc ExampleNewWriter() {\n\tpublicKey := \"age1cy0su9fwf3gf9mw868g5yut09p6nytfmmnktexz2ya5uqg9vl9sss4euqm\"\n\trecipient, err := age.ParseX25519Recipient(publicKey)\n\tif err != nil {\n\t\tlog.Fatalf(\"Failed to parse public key %q: %v\", publicKey, err)\n",
                      "markdown": "`)\n\nfunc ExampleNewWriter() {\n\tpublicKey := \"age1cy0su9fwf3gf9mw868g5yut09p6nytfmmnktexz2ya5uqg9vl9sss4euqm\"\n\trecipient, err := age.ParseX25519Recipient(publicKey)\n\tif err != nil {\n\t\tlog.Fatalf(\"Failed to parse public key %q: %v\", publicKey, err)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/plugin/client.go"
                },
                "region": {
                  "startLine": 396,
                  "endLine": 396,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tif testOnlyPluginPath != \"\" {\n\t\tpath = filepath.Join(testOnlyPluginPath, path)\n\t}\n\tcmd := exec.Command(path, \"--age-plugin=\"+protocol)\n\n\tstdout, err := cmd.StdoutPipe()\n\tif err != nil {\n",
                    "rendered": {
                      "text": "\tif testOnlyPluginPath != \"\" {\n\t\tpath = filepath.Join(testOnlyPluginPath, path)\n\t}\n\tcmd := exec.Command(path, \"--age-plugin=\"+protocol)\n\n\tstdout, err := cmd.StdoutPipe()\n\tif err != nil {\n",
                      "markdown": "`\tif testOnlyPluginPath != \"\" {\n\t\tpath = filepath.Join(testOnlyPluginPath, path)\n\t}\n\tcmd := exec.Command(path, \"--age-plugin=\"+protocol)\n\n\tstdout, err := cmd.StdoutPipe()\n\tif err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/plugin/client.go"
                },
                "region": {
                  "startLine": 382,
                  "endLine": 382,
                  "endColumn": 5,
                  "snippet": {
                    "text": "}\n\ntype clientConnection struct {\n\tcmd       *exec.Cmd\n\tio.Reader // stdout\n\tio.Writer // stdin\n\tstderr    bytes.Buffer\n",
                    "rendered": {
                      "text": "}\n\ntype clientConnection struct {\n\tcmd       *exec.Cmd\n\tio.Reader // stdout\n\tio.Writer // stdin\n\tstderr    bytes.Buffer\n",
                      "markdown": "`}\n\ntype clientConnection struct {\n\tcmd       *exec.Cmd\n\tio.Reader // stdout\n\tio.Writer // stdin\n\tstderr    bytes.Buffer\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 24,
                  "endLine": 43,
                  "endColumn": 32,
                  "snippet": {
                    "text": "          cp \"$RUNNER_TEMP/LICENSE\" \"$DIR/age\"\n          go build -o \"$DIR/age\" -ldflags \"-X main.Version=$VERSION\" -trimpath ./cmd/...\n          if [ \"$GOOS\" == \"windows\" ]; then\n            sudo apt-get update && sudo apt-get install -y osslsigncode\n            if [ -n \"${{ secrets.SIGN_PASS }}\" ]; then\n              for exe in \"$DIR\"/age/*.exe; do\n                /usr/bin/osslsigncode sign -t \"http://timestamp.comodoca.com\" \\\n",
                    "rendered": {
                      "text": "          cp \"$RUNNER_TEMP/LICENSE\" \"$DIR/age\"\n          go build -o \"$DIR/age\" -ldflags \"-X main.Version=$VERSION\" -trimpath ./cmd/...\n          if [ \"$GOOS\" == \"windows\" ]; then\n            sudo apt-get update && sudo apt-get install -y osslsigncode\n            if [ -n \"${{ secrets.SIGN_PASS }}\" ]; then\n              for exe in \"$DIR\"/age/*.exe; do\n                /usr/bin/osslsigncode sign -t \"http://timestamp.comodoca.com\" \\\n",
                      "markdown": "`          cp \"$RUNNER_TEMP/LICENSE\" \"$DIR/age\"\n          go build -o \"$DIR/age\" -ldflags \"-X main.Version=$VERSION\" -trimpath ./cmd/...\n          if [ \"$GOOS\" == \"windows\" ]; then\n            sudo apt-get update && sudo apt-get install -y osslsigncode\n            if [ -n \"${{ secrets.SIGN_PASS }}\" ]; then\n              for exe in \"$DIR\"/age/*.exe; do\n                /usr/bin/osslsigncode sign -t \"http://timestamp.comodoca.com\" \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 11,
                  "endLine": 57,
                  "endColumn": 16,
                  "snippet": {
                    "text": "            ( cd \"$DIR\"; zip age.zip -r age )\n            mv \"$DIR/age.zip\" \"age-$VERSION-$GOOS-$GOARCH.zip\"\n          else\n            tar -cvzf \"age-$VERSION-$GOOS-$GOARCH.tar.gz\" -C \"$DIR\" age\n          fi\n        env:\n          CGO_ENABLED: 0\n",
                    "rendered": {
                      "text": "            ( cd \"$DIR\"; zip age.zip -r age )\n            mv \"$DIR/age.zip\" \"age-$VERSION-$GOOS-$GOARCH.zip\"\n          else\n            tar -cvzf \"age-$VERSION-$GOOS-$GOARCH.tar.gz\" -C \"$DIR\" age\n          fi\n        env:\n          CGO_ENABLED: 0\n",
                      "markdown": "`            ( cd \"$DIR\"; zip age.zip -r age )\n            mv \"$DIR/age.zip\" \"age-$VERSION-$GOOS-$GOARCH.zip\"\n          else\n            tar -cvzf \"age-$VERSION-$GOOS-$GOARCH.tar.gz\" -C \"$DIR\" age\n          fi\n        env:\n          CGO_ENABLED: 0\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 11,
                  "endLine": 55,
                  "endColumn": 15,
                  "snippet": {
                    "text": "              done\n            fi\n            ( cd \"$DIR\"; zip age.zip -r age )\n            mv \"$DIR/age.zip\" \"age-$VERSION-$GOOS-$GOARCH.zip\"\n          else\n            tar -cvzf \"age-$VERSION-$GOOS-$GOARCH.tar.gz\" -C \"$DIR\" age\n          fi\n",
                    "rendered": {
                      "text": "              done\n            fi\n            ( cd \"$DIR\"; zip age.zip -r age )\n            mv \"$DIR/age.zip\" \"age-$VERSION-$GOOS-$GOARCH.zip\"\n          else\n            tar -cvzf \"age-$VERSION-$GOOS-$GOARCH.tar.gz\" -C \"$DIR\" age\n          fi\n",
                      "markdown": "`              done\n            fi\n            ( cd \"$DIR\"; zip age.zip -r age )\n            mv \"$DIR/age.zip\" \"age-$VERSION-$GOOS-$GOARCH.zip\"\n          else\n            tar -cvzf \"age-$VERSION-$GOOS-$GOARCH.tar.gz\" -C \"$DIR\" age\n          fi\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 15,
                  "endLine": 51,
                  "endColumn": 19,
                  "snippet": {
                    "text": "                  -key .github/workflows/certs/uitacllc.key \\\n                  -pass \"${{ secrets.SIGN_PASS }}\" \\\n                  -n age -in \"$exe\" -out \"$exe.signed\"\n                mv \"$exe.signed\" \"$exe\"\n              done\n            fi\n            ( cd \"$DIR\"; zip age.zip -r age )\n",
                    "rendered": {
                      "text": "                  -key .github/workflows/certs/uitacllc.key \\\n                  -pass \"${{ secrets.SIGN_PASS }}\" \\\n                  -n age -in \"$exe\" -out \"$exe.signed\"\n                mv \"$exe.signed\" \"$exe\"\n              done\n            fi\n            ( cd \"$DIR\"; zip age.zip -r age )\n",
                      "markdown": "`                  -key .github/workflows/certs/uitacllc.key \\\n                  -pass \"${{ secrets.SIGN_PASS }}\" \\\n                  -n age -in \"$exe\" -out \"$exe.signed\"\n                mv \"$exe.signed\" \"$exe\"\n              done\n            fi\n            ( cd \"$DIR\"; zip age.zip -r age )\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 39,
                  "endLine": 43,
                  "endColumn": 48,
                  "snippet": {
                    "text": "          cp \"$RUNNER_TEMP/LICENSE\" \"$DIR/age\"\n          go build -o \"$DIR/age\" -ldflags \"-X main.Version=$VERSION\" -trimpath ./cmd/...\n          if [ \"$GOOS\" == \"windows\" ]; then\n            sudo apt-get update && sudo apt-get install -y osslsigncode\n            if [ -n \"${{ secrets.SIGN_PASS }}\" ]; then\n              for exe in \"$DIR\"/age/*.exe; do\n                /usr/bin/osslsigncode sign -t \"http://timestamp.comodoca.com\" \\\n",
                    "rendered": {
                      "text": "          cp \"$RUNNER_TEMP/LICENSE\" \"$DIR/age\"\n          go build -o \"$DIR/age\" -ldflags \"-X main.Version=$VERSION\" -trimpath ./cmd/...\n          if [ \"$GOOS\" == \"windows\" ]; then\n            sudo apt-get update && sudo apt-get install -y osslsigncode\n            if [ -n \"${{ secrets.SIGN_PASS }}\" ]; then\n              for exe in \"$DIR\"/age/*.exe; do\n                /usr/bin/osslsigncode sign -t \"http://timestamp.comodoca.com\" \\\n",
                      "markdown": "`          cp \"$RUNNER_TEMP/LICENSE\" \"$DIR/age\"\n          go build -o \"$DIR/age\" -ldflags \"-X main.Version=$VERSION\" -trimpath ./cmd/...\n          if [ \"$GOOS\" == \"windows\" ]; then\n            sudo apt-get update && sudo apt-get install -y osslsigncode\n            if [ -n \"${{ secrets.SIGN_PASS }}\" ]; then\n              for exe in \"$DIR\"/age/*.exe; do\n                /usr/bin/osslsigncode sign -t \"http://timestamp.comodoca.com\" \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 16,
                  "endLine": 43,
                  "endColumn": 25,
                  "snippet": {
                    "text": "          cp \"$RUNNER_TEMP/LICENSE\" \"$DIR/age\"\n          go build -o \"$DIR/age\" -ldflags \"-X main.Version=$VERSION\" -trimpath ./cmd/...\n          if [ \"$GOOS\" == \"windows\" ]; then\n            sudo apt-get update && sudo apt-get install -y osslsigncode\n            if [ -n \"${{ secrets.SIGN_PASS }}\" ]; then\n              for exe in \"$DIR\"/age/*.exe; do\n                /usr/bin/osslsigncode sign -t \"http://timestamp.comodoca.com\" \\\n",
                    "rendered": {
                      "text": "          cp \"$RUNNER_TEMP/LICENSE\" \"$DIR/age\"\n          go build -o \"$DIR/age\" -ldflags \"-X main.Version=$VERSION\" -trimpath ./cmd/...\n          if [ \"$GOOS\" == \"windows\" ]; then\n            sudo apt-get update && sudo apt-get install -y osslsigncode\n            if [ -n \"${{ secrets.SIGN_PASS }}\" ]; then\n              for exe in \"$DIR\"/age/*.exe; do\n                /usr/bin/osslsigncode sign -t \"http://timestamp.comodoca.com\" \\\n",
                      "markdown": "`          cp \"$RUNNER_TEMP/LICENSE\" \"$DIR/age\"\n          go build -o \"$DIR/age\" -ldflags \"-X main.Version=$VERSION\" -trimpath ./cmd/...\n          if [ \"$GOOS\" == \"windows\" ]; then\n            sudo apt-get update && sudo apt-get install -y osslsigncode\n            if [ -n \"${{ secrets.SIGN_PASS }}\" ]; then\n              for exe in \"$DIR\"/age/*.exe; do\n                /usr/bin/osslsigncode sign -t \"http://timestamp.comodoca.com\" \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 9,
                  "endLine": 40,
                  "endColumn": 13,
                  "snippet": {
                    "text": "          VERSION=\"$(git describe --tags)\"\n          DIR=\"$(mktemp -d)\"\n          mkdir \"$DIR/age\"\n          cp \"$RUNNER_TEMP/LICENSE\" \"$DIR/age\"\n          go build -o \"$DIR/age\" -ldflags \"-X main.Version=$VERSION\" -trimpath ./cmd/...\n          if [ \"$GOOS\" == \"windows\" ]; then\n            sudo apt-get update && sudo apt-get install -y osslsigncode\n",
                    "rendered": {
                      "text": "          VERSION=\"$(git describe --tags)\"\n          DIR=\"$(mktemp -d)\"\n          mkdir \"$DIR/age\"\n          cp \"$RUNNER_TEMP/LICENSE\" \"$DIR/age\"\n          go build -o \"$DIR/age\" -ldflags \"-X main.Version=$VERSION\" -trimpath ./cmd/...\n          if [ \"$GOOS\" == \"windows\" ]; then\n            sudo apt-get update && sudo apt-get install -y osslsigncode\n",
                      "markdown": "`          VERSION=\"$(git describe --tags)\"\n          DIR=\"$(mktemp -d)\"\n          mkdir \"$DIR/age\"\n          cp \"$RUNNER_TEMP/LICENSE\" \"$DIR/age\"\n          go build -o \"$DIR/age\" -ldflags \"-X main.Version=$VERSION\" -trimpath ./cmd/...\n          if [ \"$GOOS\" == \"windows\" ]; then\n            sudo apt-get update && sudo apt-get install -y osslsigncode\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 9,
                  "endLine": 36,
                  "endColumn": 15,
                  "snippet": {
                    "text": "        run: |\n          cp LICENSE \"$RUNNER_TEMP/LICENSE\"\n          echo -e \"\\n---\\n\" >> \"$RUNNER_TEMP/LICENSE\"\n          curl -L \"https://go.dev/LICENSE?m=text\" >> \"$RUNNER_TEMP/LICENSE\"\n          VERSION=\"$(git describe --tags)\"\n          DIR=\"$(mktemp -d)\"\n          mkdir \"$DIR/age\"\n",
                    "rendered": {
                      "text": "        run: |\n          cp LICENSE \"$RUNNER_TEMP/LICENSE\"\n          echo -e \"\\n---\\n\" >> \"$RUNNER_TEMP/LICENSE\"\n          curl -L \"https://go.dev/LICENSE?m=text\" >> \"$RUNNER_TEMP/LICENSE\"\n          VERSION=\"$(git describe --tags)\"\n          DIR=\"$(mktemp -d)\"\n          mkdir \"$DIR/age\"\n",
                      "markdown": "`        run: |\n          cp LICENSE \"$RUNNER_TEMP/LICENSE\"\n          echo -e \"\\n---\\n\" >> \"$RUNNER_TEMP/LICENSE\"\n          curl -L \"https://go.dev/LICENSE?m=text\" >> \"$RUNNER_TEMP/LICENSE\"\n          VERSION=\"$(git describe --tags)\"\n          DIR=\"$(mktemp -d)\"\n          mkdir \"$DIR/age\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 9,
                  "endLine": 34,
                  "endColumn": 13,
                  "snippet": {
                    "text": "          fetch-depth: 0\n      - name: Build binary\n        run: |\n          cp LICENSE \"$RUNNER_TEMP/LICENSE\"\n          echo -e \"\\n---\\n\" >> \"$RUNNER_TEMP/LICENSE\"\n          curl -L \"https://go.dev/LICENSE?m=text\" >> \"$RUNNER_TEMP/LICENSE\"\n          VERSION=\"$(git describe --tags)\"\n",
                    "rendered": {
                      "text": "          fetch-depth: 0\n      - name: Build binary\n        run: |\n          cp LICENSE \"$RUNNER_TEMP/LICENSE\"\n          echo -e \"\\n---\\n\" >> \"$RUNNER_TEMP/LICENSE\"\n          curl -L \"https://go.dev/LICENSE?m=text\" >> \"$RUNNER_TEMP/LICENSE\"\n          VERSION=\"$(git describe --tags)\"\n",
                      "markdown": "`          fetch-depth: 0\n      - name: Build binary\n        run: |\n          cp LICENSE \"$RUNNER_TEMP/LICENSE\"\n          echo -e \"\\n---\\n\" >> \"$RUNNER_TEMP/LICENSE\"\n          curl -L \"https://go.dev/LICENSE?m=text\" >> \"$RUNNER_TEMP/LICENSE\"\n          VERSION=\"$(git describe --tags)\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.github/workflows/ronn.yml"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 12,
                  "endLine": 21,
                  "endColumn": 18,
                  "snippet": {
                    "text": "      - name: Install ronn\n        run: sudo apt-get update && sudo apt-get install -y ronn\n      - name: Run ronn\n        run: bash -O globstar -c 'ronn **/*.ronn'\n      - name: Undo email mangling\n        # rdiscount randomizes the output for no good reason, which causes\n        # changes to always get committed. Sigh.\n",
                    "rendered": {
                      "text": "      - name: Install ronn\n        run: sudo apt-get update && sudo apt-get install -y ronn\n      - name: Run ronn\n        run: bash -O globstar -c 'ronn **/*.ronn'\n      - name: Undo email mangling\n        # rdiscount randomizes the output for no good reason, which causes\n        # changes to always get committed. Sigh.\n",
                      "markdown": "`      - name: Install ronn\n        run: sudo apt-get update && sudo apt-get install -y ronn\n      - name: Run ronn\n        run: bash -O globstar -c 'ronn **/*.ronn'\n      - name: Undo email mangling\n        # rdiscount randomizes the output for no good reason, which causes\n        # changes to always get committed. Sigh.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.github/workflows/ronn.yml"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 25,
                  "endLine": 19,
                  "endColumn": 33,
                  "snippet": {
                    "text": "      - name: Checkout\n        uses: actions/checkout@v4\n      - name: Install ronn\n        run: sudo apt-get update && sudo apt-get install -y ronn\n      - name: Run ronn\n        run: bash -O globstar -c 'ronn **/*.ronn'\n      - name: Undo email mangling\n",
                    "rendered": {
                      "text": "      - name: Checkout\n        uses: actions/checkout@v4\n      - name: Install ronn\n        run: sudo apt-get update && sudo apt-get install -y ronn\n      - name: Run ronn\n        run: bash -O globstar -c 'ronn **/*.ronn'\n      - name: Undo email mangling\n",
                      "markdown": "`      - name: Checkout\n        uses: actions/checkout@v4\n      - name: Install ronn\n        run: sudo apt-get update && sudo apt-get install -y ronn\n      - name: Run ronn\n        run: bash -O globstar -c 'ronn **/*.ronn'\n      - name: Undo email mangling\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.github/workflows/ronn.yml"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 9,
                  "endLine": 58,
                  "endColumn": 14,
                  "snippet": {
                    "text": "          git config user.email \"actions@users.noreply.github.com\"\n          git add doc/\n          git commit -m \"doc: regenerate groff and html man pages\" || exit 0\n          git push\n",
                    "rendered": {
                      "text": "          git config user.email \"actions@users.noreply.github.com\"\n          git add doc/\n          git commit -m \"doc: regenerate groff and html man pages\" || exit 0\n          git push\n",
                      "markdown": "`          git config user.email \"actions@users.noreply.github.com\"\n          git add doc/\n          git commit -m \"doc: regenerate groff and html man pages\" || exit 0\n          git push\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.github/workflows/ronn.yml"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 9,
                  "endLine": 57,
                  "endColumn": 14,
                  "snippet": {
                    "text": "          git config user.name \"GitHub Actions\"\n          git config user.email \"actions@users.noreply.github.com\"\n          git add doc/\n          git commit -m \"doc: regenerate groff and html man pages\" || exit 0\n          git push\n",
                    "rendered": {
                      "text": "          git config user.name \"GitHub Actions\"\n          git config user.email \"actions@users.noreply.github.com\"\n          git add doc/\n          git commit -m \"doc: regenerate groff and html man pages\" || exit 0\n          git push\n",
                      "markdown": "`          git config user.name \"GitHub Actions\"\n          git config user.email \"actions@users.noreply.github.com\"\n          git add doc/\n          git commit -m \"doc: regenerate groff and html man pages\" || exit 0\n          git push\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.github/workflows/ronn.yml"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 9,
                  "endLine": 56,
                  "endColumn": 14,
                  "snippet": {
                    "text": "        run: |-\n          git config user.name \"GitHub Actions\"\n          git config user.email \"actions@users.noreply.github.com\"\n          git add doc/\n          git commit -m \"doc: regenerate groff and html man pages\" || exit 0\n          git push\n",
                    "rendered": {
                      "text": "        run: |-\n          git config user.name \"GitHub Actions\"\n          git config user.email \"actions@users.noreply.github.com\"\n          git add doc/\n          git commit -m \"doc: regenerate groff and html man pages\" || exit 0\n          git push\n",
                      "markdown": "`        run: |-\n          git config user.name \"GitHub Actions\"\n          git config user.email \"actions@users.noreply.github.com\"\n          git add doc/\n          git commit -m \"doc: regenerate groff and html man pages\" || exit 0\n          git push\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.github/workflows/ronn.yml"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 9,
                  "endLine": 55,
                  "endColumn": 14,
                  "snippet": {
                    "text": "      - name: Commit and push if changed\n        run: |-\n          git config user.name \"GitHub Actions\"\n          git config user.email \"actions@users.noreply.github.com\"\n          git add doc/\n          git commit -m \"doc: regenerate groff and html man pages\" || exit 0\n          git push\n",
                    "rendered": {
                      "text": "      - name: Commit and push if changed\n        run: |-\n          git config user.name \"GitHub Actions\"\n          git config user.email \"actions@users.noreply.github.com\"\n          git add doc/\n          git commit -m \"doc: regenerate groff and html man pages\" || exit 0\n          git push\n",
                      "markdown": "`      - name: Commit and push if changed\n        run: |-\n          git config user.name \"GitHub Actions\"\n          git config user.email \"actions@users.noreply.github.com\"\n          git add doc/\n          git commit -m \"doc: regenerate groff and html man pages\" || exit 0\n          git push\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.github/workflows/ronn.yml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 9,
                  "endLine": 54,
                  "endColumn": 14,
                  "snippet": {
                    "text": "          path: doc/\n      - name: Commit and push if changed\n        run: |-\n          git config user.name \"GitHub Actions\"\n          git config user.email \"actions@users.noreply.github.com\"\n          git add doc/\n          git commit -m \"doc: regenerate groff and html man pages\" || exit 0\n",
                    "rendered": {
                      "text": "          path: doc/\n      - name: Commit and push if changed\n        run: |-\n          git config user.name \"GitHub Actions\"\n          git config user.email \"actions@users.noreply.github.com\"\n          git add doc/\n          git commit -m \"doc: regenerate groff and html man pages\" || exit 0\n",
                      "markdown": "`          path: doc/\n      - name: Commit and push if changed\n        run: |-\n          git config user.name \"GitHub Actions\"\n          git config user.email \"actions@users.noreply.github.com\"\n          git add doc/\n          git commit -m \"doc: regenerate groff and html man pages\" || exit 0\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.github/workflows/ronn.yml"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 11,
                  "endLine": 29,
                  "endColumn": 15,
                  "snippet": {
                    "text": "        run: |-\n          for f in doc/*.html; do\n            awk '/Filippo Valsorda/ { $0 = \"<p>Filippo Valsorda <a href=\\\"mailto:age@filippo.io\\\" data-bare-link=\\\"true\\\">age@filippo.io</a></p>\" } { print }' \"$f\" > \"$f.tmp\"\n            mv \"$f.tmp\" \"$f\"\n          done\n      - name: Upload generated files\n        uses: actions/upload-artifact@v4\n",
                    "rendered": {
                      "text": "        run: |-\n          for f in doc/*.html; do\n            awk '/Filippo Valsorda/ { $0 = \"<p>Filippo Valsorda <a href=\\\"mailto:age@filippo.io\\\" data-bare-link=\\\"true\\\">age@filippo.io</a></p>\" } { print }' \"$f\" > \"$f.tmp\"\n            mv \"$f.tmp\" \"$f\"\n          done\n      - name: Upload generated files\n        uses: actions/upload-artifact@v4\n",
                      "markdown": "`        run: |-\n          for f in doc/*.html; do\n            awk '/Filippo Valsorda/ { $0 = \"<p>Filippo Valsorda <a href=\\\"mailto:age@filippo.io\\\" data-bare-link=\\\"true\\\">age@filippo.io</a></p>\" } { print }' \"$f\" > \"$f.tmp\"\n            mv \"$f.tmp\" \"$f\"\n          done\n      - name: Upload generated files\n        uses: actions/upload-artifact@v4\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.github/workflows/ronn.yml"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 11,
                  "endLine": 28,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        # https://github.com/davidfstr/rdiscount/blob/6b1471ec3/ext/generate.c#L781-L795\n        run: |-\n          for f in doc/*.html; do\n            awk '/Filippo Valsorda/ { $0 = \"<p>Filippo Valsorda <a href=\\\"mailto:age@filippo.io\\\" data-bare-link=\\\"true\\\">age@filippo.io</a></p>\" } { print }' \"$f\" > \"$f.tmp\"\n            mv \"$f.tmp\" \"$f\"\n          done\n      - name: Upload generated files\n",
                    "rendered": {
                      "text": "        # https://github.com/davidfstr/rdiscount/blob/6b1471ec3/ext/generate.c#L781-L795\n        run: |-\n          for f in doc/*.html; do\n            awk '/Filippo Valsorda/ { $0 = \"<p>Filippo Valsorda <a href=\\\"mailto:age@filippo.io\\\" data-bare-link=\\\"true\\\">age@filippo.io</a></p>\" } { print }' \"$f\" > \"$f.tmp\"\n            mv \"$f.tmp\" \"$f\"\n          done\n      - name: Upload generated files\n",
                      "markdown": "`        # https://github.com/davidfstr/rdiscount/blob/6b1471ec3/ext/generate.c#L781-L795\n        run: |-\n          for f in doc/*.html; do\n            awk '/Filippo Valsorda/ { $0 = \"<p>Filippo Valsorda <a href=\\\"mailto:age@filippo.io\\\" data-bare-link=\\\"true\\\">age@filippo.io</a></p>\" } { print }' \"$f\" > \"$f.tmp\"\n            mv \"$f.tmp\" \"$f\"\n          done\n      - name: Upload generated files\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.github/workflows/ronn.yml"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 12,
                  "endLine": 21,
                  "endColumn": 18,
                  "snippet": {
                    "text": "      - name: Install ronn\n        run: sudo apt-get update && sudo apt-get install -y ronn\n      - name: Run ronn\n        run: bash -O globstar -c 'ronn **/*.ronn'\n      - name: Undo email mangling\n        # rdiscount randomizes the output for no good reason, which causes\n        # changes to always get committed. Sigh.\n",
                    "rendered": {
                      "text": "      - name: Install ronn\n        run: sudo apt-get update && sudo apt-get install -y ronn\n      - name: Run ronn\n        run: bash -O globstar -c 'ronn **/*.ronn'\n      - name: Undo email mangling\n        # rdiscount randomizes the output for no good reason, which causes\n        # changes to always get committed. Sigh.\n",
                      "markdown": "`      - name: Install ronn\n        run: sudo apt-get update && sudo apt-get install -y ronn\n      - name: Run ronn\n        run: bash -O globstar -c 'ronn **/*.ronn'\n      - name: Undo email mangling\n        # rdiscount randomizes the output for no good reason, which causes\n        # changes to always get committed. Sigh.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.github/workflows/ronn.yml"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 40,
                  "endLine": 19,
                  "endColumn": 49,
                  "snippet": {
                    "text": "      - name: Checkout\n        uses: actions/checkout@v4\n      - name: Install ronn\n        run: sudo apt-get update && sudo apt-get install -y ronn\n      - name: Run ronn\n        run: bash -O globstar -c 'ronn **/*.ronn'\n      - name: Undo email mangling\n",
                    "rendered": {
                      "text": "      - name: Checkout\n        uses: actions/checkout@v4\n      - name: Install ronn\n        run: sudo apt-get update && sudo apt-get install -y ronn\n      - name: Run ronn\n        run: bash -O globstar -c 'ronn **/*.ronn'\n      - name: Undo email mangling\n",
                      "markdown": "`      - name: Checkout\n        uses: actions/checkout@v4\n      - name: Install ronn\n        run: sudo apt-get update && sudo apt-get install -y ronn\n      - name: Run ronn\n        run: bash -O globstar -c 'ronn **/*.ronn'\n      - name: Undo email mangling\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.github/workflows/ronn.yml"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 17,
                  "endLine": 19,
                  "endColumn": 26,
                  "snippet": {
                    "text": "      - name: Checkout\n        uses: actions/checkout@v4\n      - name: Install ronn\n        run: sudo apt-get update && sudo apt-get install -y ronn\n      - name: Run ronn\n        run: bash -O globstar -c 'ronn **/*.ronn'\n      - name: Undo email mangling\n",
                    "rendered": {
                      "text": "      - name: Checkout\n        uses: actions/checkout@v4\n      - name: Install ronn\n        run: sudo apt-get update && sudo apt-get install -y ronn\n      - name: Run ronn\n        run: bash -O globstar -c 'ronn **/*.ronn'\n      - name: Undo email mangling\n",
                      "markdown": "`      - name: Checkout\n        uses: actions/checkout@v4\n      - name: Install ronn\n        run: sudo apt-get update && sudo apt-get install -y ronn\n      - name: Run ronn\n        run: bash -O globstar -c 'ronn **/*.ronn'\n      - name: Undo email mangling\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.github/workflows/test.yml"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 55,
                  "endLine": 48,
                  "endColumn": 75,
                  "snippet": {
                    "text": "        run: |\n          git clone --filter=tree:0 https://go.googlesource.com/go $HOME/gotip\n          cd $HOME/gotip/src && ./make.bat\n          echo \"$HOME/gotip/bin\" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append\n      - name: Checkout repository\n        uses: actions/checkout@v4\n        with:\n",
                    "rendered": {
                      "text": "        run: |\n          git clone --filter=tree:0 https://go.googlesource.com/go $HOME/gotip\n          cd $HOME/gotip/src && ./make.bat\n          echo \"$HOME/gotip/bin\" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append\n      - name: Checkout repository\n        uses: actions/checkout@v4\n        with:\n",
                      "markdown": "`        run: |\n          git clone --filter=tree:0 https://go.googlesource.com/go $HOME/gotip\n          cd $HOME/gotip/src && ./make.bat\n          echo \"$HOME/gotip/bin\" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append\n      - name: Checkout repository\n        uses: actions/checkout@v4\n        with:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.github/workflows/test.yml"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 9,
                  "endLine": 46,
                  "endColumn": 14,
                  "snippet": {
                    "text": "      - name: Install Go tip (Windows)\n        if: runner.os == 'Windows'\n        run: |\n          git clone --filter=tree:0 https://go.googlesource.com/go $HOME/gotip\n          cd $HOME/gotip/src && ./make.bat\n          echo \"$HOME/gotip/bin\" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append\n      - name: Checkout repository\n",
                    "rendered": {
                      "text": "      - name: Install Go tip (Windows)\n        if: runner.os == 'Windows'\n        run: |\n          git clone --filter=tree:0 https://go.googlesource.com/go $HOME/gotip\n          cd $HOME/gotip/src && ./make.bat\n          echo \"$HOME/gotip/bin\" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append\n      - name: Checkout repository\n",
                      "markdown": "`      - name: Install Go tip (Windows)\n        if: runner.os == 'Windows'\n        run: |\n          git clone --filter=tree:0 https://go.googlesource.com/go $HOME/gotip\n          cd $HOME/gotip/src && ./make.bat\n          echo \"$HOME/gotip/bin\" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append\n      - name: Checkout repository\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/.github/workflows/test.yml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 9,
                  "endLine": 40,
                  "endColumn": 14,
                  "snippet": {
                    "text": "      - name: Install Go tip (UNIX)\n        if: runner.os != 'Windows'\n        run: |\n          git clone --filter=tree:0 https://go.googlesource.com/go $HOME/gotip\n          cd $HOME/gotip/src && ./make.bash\n          echo \"$HOME/gotip/bin\" >> $GITHUB_PATH\n      - name: Install Go tip (Windows)\n",
                    "rendered": {
                      "text": "      - name: Install Go tip (UNIX)\n        if: runner.os != 'Windows'\n        run: |\n          git clone --filter=tree:0 https://go.googlesource.com/go $HOME/gotip\n          cd $HOME/gotip/src && ./make.bash\n          echo \"$HOME/gotip/bin\" >> $GITHUB_PATH\n      - name: Install Go tip (Windows)\n",
                      "markdown": "`      - name: Install Go tip (UNIX)\n        if: runner.os != 'Windows'\n        run: |\n          git clone --filter=tree:0 https://go.googlesource.com/go $HOME/gotip\n          cd $HOME/gotip/src && ./make.bash\n          echo \"$HOME/gotip/bin\" >> $GITHUB_PATH\n      - name: Install Go tip (Windows)\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/internal/format/format.go"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 9,
                  "endLine": 50,
                  "endColumn": 15,
                  "snippet": {
                    "text": "// NewWrappedBase64Encoder returns a WrappedBase64Encoder that writes to dst.\nfunc NewWrappedBase64Encoder(enc *base64.Encoding, dst io.Writer) *WrappedBase64Encoder {\n\tw := &WrappedBase64Encoder{dst: dst}\n\tw.enc = base64.NewEncoder(enc, WriterFunc(w.writeWrapped))\n\treturn w\n}\n\n",
                    "rendered": {
                      "text": "// NewWrappedBase64Encoder returns a WrappedBase64Encoder that writes to dst.\nfunc NewWrappedBase64Encoder(enc *base64.Encoding, dst io.Writer) *WrappedBase64Encoder {\n\tw := &WrappedBase64Encoder{dst: dst}\n\tw.enc = base64.NewEncoder(enc, WriterFunc(w.writeWrapped))\n\treturn w\n}\n\n",
                      "markdown": "`// NewWrappedBase64Encoder returns a WrappedBase64Encoder that writes to dst.\nfunc NewWrappedBase64Encoder(enc *base64.Encoding, dst io.Writer) *WrappedBase64Encoder {\n\tw := &WrappedBase64Encoder{dst: dst}\n\tw.enc = base64.NewEncoder(enc, WriterFunc(w.writeWrapped))\n\treturn w\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/internal/format/format.go"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 34,
                  "endLine": 48,
                  "endColumn": 40,
                  "snippet": {
                    "text": "const BytesPerLine = ColumnsPerLine / 4 * 3\n\n// NewWrappedBase64Encoder returns a WrappedBase64Encoder that writes to dst.\nfunc NewWrappedBase64Encoder(enc *base64.Encoding, dst io.Writer) *WrappedBase64Encoder {\n\tw := &WrappedBase64Encoder{dst: dst}\n\tw.enc = base64.NewEncoder(enc, WriterFunc(w.writeWrapped))\n\treturn w\n",
                    "rendered": {
                      "text": "const BytesPerLine = ColumnsPerLine / 4 * 3\n\n// NewWrappedBase64Encoder returns a WrappedBase64Encoder that writes to dst.\nfunc NewWrappedBase64Encoder(enc *base64.Encoding, dst io.Writer) *WrappedBase64Encoder {\n\tw := &WrappedBase64Encoder{dst: dst}\n\tw.enc = base64.NewEncoder(enc, WriterFunc(w.writeWrapped))\n\treturn w\n",
                      "markdown": "`const BytesPerLine = ColumnsPerLine / 4 * 3\n\n// NewWrappedBase64Encoder returns a WrappedBase64Encoder that writes to dst.\nfunc NewWrappedBase64Encoder(enc *base64.Encoding, dst io.Writer) *WrappedBase64Encoder {\n\tw := &WrappedBase64Encoder{dst: dst}\n\tw.enc = base64.NewEncoder(enc, WriterFunc(w.writeWrapped))\n\treturn w\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/internal/format/format.go"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 10,
                  "endLine": 31,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\tBody []byte\n}\n\nvar b64 = base64.RawStdEncoding.Strict()\n\nfunc DecodeString(s string) ([]byte, error) {\n\t// CR and LF are ignored by DecodeString, but we don't want any malleability.\n",
                    "rendered": {
                      "text": "\tBody []byte\n}\n\nvar b64 = base64.RawStdEncoding.Strict()\n\nfunc DecodeString(s string) ([]byte, error) {\n\t// CR and LF are ignored by DecodeString, but we don't want any malleability.\n",
                      "markdown": "`\tBody []byte\n}\n\nvar b64 = base64.RawStdEncoding.Strict()\n\nfunc DecodeString(s string) ([]byte, error) {\n\t// CR and LF are ignored by DecodeString, but we don't want any malleability.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/internal/format/format.go"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 11,
                  "endLine": 11,
                  "endColumn": 17,
                  "snippet": {
                    "text": "import (\n\t\"bufio\"\n\t\"bytes\"\n\t\"encoding/base64\"\n\t\"errors\"\n\t\"fmt\"\n\t\"io\"\n",
                    "rendered": {
                      "text": "import (\n\t\"bufio\"\n\t\"bytes\"\n\t\"encoding/base64\"\n\t\"errors\"\n\t\"fmt\"\n\t\"io\"\n",
                      "markdown": "`import (\n\t\"bufio\"\n\t\"bytes\"\n\t\"encoding/base64\"\n\t\"errors\"\n\t\"fmt\"\n\t\"io\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/internal/bech32/bech32_test.go"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 3,
                  "endLine": 50,
                  "endColumn": 96,
                  "snippet": {
                    "text": "rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7qfcsvr0\", true},\n\t\t{\"an84characterslonghumanreadablepartthatcontainsthenumber1andtheexcludedcharactersbio1569pvx\", true},\n\n\t\t// BIP 173 invalid vectors.\n\t\t{\"pzry9x0s0muk\", false},\n\t\t{\"1pzry9x0s0muk\", false},\n\t\t{\"x1b4n0q5v\", false},\n\t\t{\"li1dgmt3\", false},\n\t\t{\"de1lg7wt\\xff\", false},\n\t\t{\"A1G7SGD8\", false},\n\t\t{\"10a06t8\", false},\n\t\t{\"1qzzfhee\", false},\n\t}\n\n\tfor _, test := range tests {\n\t\tstr := test.str\n\t\thrp, deco",
                    "rendered": {
                      "text": "rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7qfcsvr0\", true},\n\t\t{\"an84characterslonghumanreadablepartthatcontainsthenumber1andtheexcludedcharactersbio1569pvx\", true},\n\n\t\t// BIP 173 invalid vectors.\n\t\t{\"pzry9x0s0muk\", false},\n\t\t{\"1pzry9x0s0muk\", false},\n\t\t{\"x1b4n0q5v\", false},\n\t\t{\"li1dgmt3\", false},\n\t\t{\"de1lg7wt\\xff\", false},\n\t\t{\"A1G7SGD8\", false},\n\t\t{\"10a06t8\", false},\n\t\t{\"1qzzfhee\", false},\n\t}\n\n\tfor _, test := range tests {\n\t\tstr := test.str\n\t\thrp, deco",
                      "markdown": "`rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7qfcsvr0\", true},\n\t\t{\"an84characterslonghumanreadablepartthatcontainsthenumber1andtheexcludedcharactersbio1569pvx\", true},\n\n\t\t// BIP 173 invalid vectors.\n\t\t{\"pzry9x0s0muk\", false},\n\t\t{\"1pzry9x0s0muk\", false},\n\t\t{\"x1b4n0q5v\", false},\n\t\t{\"li1dgmt3\", false},\n\t\t{\"de1lg7wt\\xff\", false},\n\t\t{\"A1G7SGD8\", false},\n\t\t{\"10a06t8\", false},\n\t\t{\"1qzzfhee\", false},\n\t}\n\n\tfor _, test := range tests {\n\t\tstr := test.str\n\t\thrp, deco`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/internal/bech32/bech32_test.go"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 3,
                  "endLine": 49,
                  "endColumn": 1655,
                  "snippet": {
                    "text": "\t\t{\"spl\" + string(rune(127)) + \"t1checkupstagehandshakeupstreamerranterredcaperred2y9e3w\", false},\n\n\t\t// long vectors that we do accept despite the spec, see Issue 453\n\t\t{\"long10pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7qfcsvr0\", true},\n\t\t{\"an84characterslonghumanreadablepartthatcontainsthenumber1andtheexcludedcharactersbio1569pvx\", true},\n\n\t\t// BIP 173 invalid vectors.\n",
                    "rendered": {
                      "text": "\t\t{\"spl\" + string(rune(127)) + \"t1checkupstagehandshakeupstreamerranterredcaperred2y9e3w\", false},\n\n\t\t// long vectors that we do accept despite the spec, see Issue 453\n\t\t{\"long10pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7qfcsvr0\", true},\n\t\t{\"an84characterslonghumanreadablepartthatcontainsthenumber1andtheexcludedcharactersbio1569pvx\", true},\n\n\t\t// BIP 173 invalid vectors.\n",
                      "markdown": "`\t\t{\"spl\" + string(rune(127)) + \"t1checkupstagehandshakeupstreamerranterredcaperred2y9e3w\", false},\n\n\t\t// long vectors that we do accept despite the spec, see Issue 453\n\t\t{\"long10pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7qfcsvr0\", true},\n\t\t{\"an84characterslonghumanreadablepartthatcontainsthenumber1andtheexcludedcharactersbio1569pvx\", true},\n\n\t\t// BIP 173 invalid vectors.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/internal/bech32/bech32_test.go"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 31,
                  "endLine": 46,
                  "endColumn": 89,
                  "snippet": {
                    "text": "edcaperredp8hs2p\", false},\n\t\t{\"split1cheo2y9e2w\", false}, // invalid character (o) in data part\n\t\t{\"split1a2y9w\", false},      // too short data part\n\t\t{\"1checkupstagehandshakeupstreamerranterredcaperred2y9e3w\", false}, // empty hrp\n\t\t// invalid character (DEL) in hrp\n\t\t{\"spl\" + string(rune(127)) + \"t1checkupstagehandshakeupstreamerranterredcaperred2y9e3w\", false},\n\n\t\t// long vectors that we do accept despite the spec, see Issue 453\n\t\t{\"long10pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8",
                    "rendered": {
                      "text": "edcaperredp8hs2p\", false},\n\t\t{\"split1cheo2y9e2w\", false}, // invalid character (o) in data part\n\t\t{\"split1a2y9w\", false},      // too short data part\n\t\t{\"1checkupstagehandshakeupstreamerranterredcaperred2y9e3w\", false}, // empty hrp\n\t\t// invalid character (DEL) in hrp\n\t\t{\"spl\" + string(rune(127)) + \"t1checkupstagehandshakeupstreamerranterredcaperred2y9e3w\", false},\n\n\t\t// long vectors that we do accept despite the spec, see Issue 453\n\t\t{\"long10pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8",
                      "markdown": "`edcaperredp8hs2p\", false},\n\t\t{\"split1cheo2y9e2w\", false}, // invalid character (o) in data part\n\t\t{\"split1a2y9w\", false},      // too short data part\n\t\t{\"1checkupstagehandshakeupstreamerranterredcaperred2y9e3w\", false}, // empty hrp\n\t\t// invalid character (DEL) in hrp\n\t\t{\"spl\" + string(rune(127)) + \"t1checkupstagehandshakeupstreamerranterredcaperred2y9e3w\", false},\n\n\t\t// long vectors that we do accept despite the spec, see Issue 453\n\t\t{\"long10pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8s7rc0pu8`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/internal/bech32/bech32_test.go"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 3,
                  "endLine": 44,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\t\t{\"s lit1checkupstagehandshakeupstreamerranterredcaperredp8hs2p\", false},\n\t\t{\"split1cheo2y9e2w\", false}, // invalid character (o) in data part\n\t\t{\"split1a2y9w\", false},      // too short data part\n\t\t{\"1checkupstagehandshakeupstreamerranterredcaperred2y9e3w\", false}, // empty hrp\n\t\t// invalid character (DEL) in hrp\n\t\t{\"spl\" + string(rune(127)) + \"t1checkupstagehandshakeupstreamerranterredcaperred2y9e3w\", false},\n\n",
                    "rendered": {
                      "text": "\t\t{\"s lit1checkupstagehandshakeupstreamerranterredcaperredp8hs2p\", false},\n\t\t{\"split1cheo2y9e2w\", false}, // invalid character (o) in data part\n\t\t{\"split1a2y9w\", false},      // too short data part\n\t\t{\"1checkupstagehandshakeupstreamerranterredcaperred2y9e3w\", false}, // empty hrp\n\t\t// invalid character (DEL) in hrp\n\t\t{\"spl\" + string(rune(127)) + \"t1checkupstagehandshakeupstreamerranterredcaperred2y9e3w\", false},\n\n",
                      "markdown": "`\t\t{\"s lit1checkupstagehandshakeupstreamerranterredcaperredp8hs2p\", false},\n\t\t{\"split1cheo2y9e2w\", false}, // invalid character (o) in data part\n\t\t{\"split1a2y9w\", false},      // too short data part\n\t\t{\"1checkupstagehandshakeupstreamerranterredcaperred2y9e3w\", false}, // empty hrp\n\t\t// invalid character (DEL) in hrp\n\t\t{\"spl\" + string(rune(127)) + \"t1checkupstagehandshakeupstreamerranterredcaperred2y9e3w\", false},\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/internal/bech32/bech32_test.go"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 3,
                  "endLine": 39,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\t\t{\"split1checkupstagehandshakeupstreamerranterredcaperred2y9e3w\", true},\n\n\t\t// invalid checksum\n\t\t{\"split1checkupstagehandshakeupstreamerranterredcaperred2y9e2w\", false},\n\t\t// invalid character (space) in hrp\n\t\t{\"s lit1checkupstagehandshakeupstreamerranterredcaperredp8hs2p\", false},\n\t\t{\"split1cheo2y9e2w\", false}, // invalid character (o) in data part\n",
                    "rendered": {
                      "text": "\t\t{\"split1checkupstagehandshakeupstreamerranterredcaperred2y9e3w\", true},\n\n\t\t// invalid checksum\n\t\t{\"split1checkupstagehandshakeupstreamerranterredcaperred2y9e2w\", false},\n\t\t// invalid character (space) in hrp\n\t\t{\"s lit1checkupstagehandshakeupstreamerranterredcaperredp8hs2p\", false},\n\t\t{\"split1cheo2y9e2w\", false}, // invalid character (o) in data part\n",
                      "markdown": "`\t\t{\"split1checkupstagehandshakeupstreamerranterredcaperred2y9e3w\", true},\n\n\t\t// invalid checksum\n\t\t{\"split1checkupstagehandshakeupstreamerranterredcaperred2y9e2w\", false},\n\t\t// invalid character (space) in hrp\n\t\t{\"s lit1checkupstagehandshakeupstreamerranterredcaperredp8hs2p\", false},\n\t\t{\"split1cheo2y9e2w\", false}, // invalid character (o) in data part\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/internal/bech32/bech32_test.go"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 3,
                  "endLine": 36,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\t\t{\"an83characterlonghumanreadablepartthatcontainsthenumber1andtheexcludedcharactersbio1tt5tgs\", true},\n\t\t{\"abcdef1qpzry9x8gf2tvdw0s3jn54khce6mua7lmqqqxw\", true},\n\t\t{\"11qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqc8247j\", true},\n\t\t{\"split1checkupstagehandshakeupstreamerranterredcaperred2y9e3w\", true},\n\n\t\t// invalid checksum\n\t\t{\"split1checkupstagehandshakeupstreamerranterredcaperred2y9e2w\", false},\n",
                    "rendered": {
                      "text": "\t\t{\"an83characterlonghumanreadablepartthatcontainsthenumber1andtheexcludedcharactersbio1tt5tgs\", true},\n\t\t{\"abcdef1qpzry9x8gf2tvdw0s3jn54khce6mua7lmqqqxw\", true},\n\t\t{\"11qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqc8247j\", true},\n\t\t{\"split1checkupstagehandshakeupstreamerranterredcaperred2y9e3w\", true},\n\n\t\t// invalid checksum\n\t\t{\"split1checkupstagehandshakeupstreamerranterredcaperred2y9e2w\", false},\n",
                      "markdown": "`\t\t{\"an83characterlonghumanreadablepartthatcontainsthenumber1andtheexcludedcharactersbio1tt5tgs\", true},\n\t\t{\"abcdef1qpzry9x8gf2tvdw0s3jn54khce6mua7lmqqqxw\", true},\n\t\t{\"11qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqc8247j\", true},\n\t\t{\"split1checkupstagehandshakeupstreamerranterredcaperred2y9e3w\", true},\n\n\t\t// invalid checksum\n\t\t{\"split1checkupstagehandshakeupstreamerranterredcaperred2y9e2w\", false},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/internal/bech32/bech32_test.go"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 3,
                  "endLine": 35,
                  "endColumn": 95,
                  "snippet": {
                    "text": "\t\t{\"a12uel5l\", true},\n\t\t{\"an83characterlonghumanreadablepartthatcontainsthenumber1andtheexcludedcharactersbio1tt5tgs\", true},\n\t\t{\"abcdef1qpzry9x8gf2tvdw0s3jn54khce6mua7lmqqqxw\", true},\n\t\t{\"11qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqc8247j\", true},\n\t\t{\"split1checkupstagehandshakeupstreamerranterredcaperred2y9e3w\", true},\n\n\t\t// invalid checksum\n",
                    "rendered": {
                      "text": "\t\t{\"a12uel5l\", true},\n\t\t{\"an83characterlonghumanreadablepartthatcontainsthenumber1andtheexcludedcharactersbio1tt5tgs\", true},\n\t\t{\"abcdef1qpzry9x8gf2tvdw0s3jn54khce6mua7lmqqqxw\", true},\n\t\t{\"11qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqc8247j\", true},\n\t\t{\"split1checkupstagehandshakeupstreamerranterredcaperred2y9e3w\", true},\n\n\t\t// invalid checksum\n",
                      "markdown": "`\t\t{\"a12uel5l\", true},\n\t\t{\"an83characterlonghumanreadablepartthatcontainsthenumber1andtheexcludedcharactersbio1tt5tgs\", true},\n\t\t{\"abcdef1qpzry9x8gf2tvdw0s3jn54khce6mua7lmqqqxw\", true},\n\t\t{\"11qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqc8247j\", true},\n\t\t{\"split1checkupstagehandshakeupstreamerranterredcaperred2y9e3w\", true},\n\n\t\t// invalid checksum\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/internal/bech32/bech32_test.go"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 3,
                  "endLine": 34,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\t\t{\"A12UEL5L\", true}, // empty\n\t\t{\"a12uel5l\", true},\n\t\t{\"an83characterlonghumanreadablepartthatcontainsthenumber1andtheexcludedcharactersbio1tt5tgs\", true},\n\t\t{\"abcdef1qpzry9x8gf2tvdw0s3jn54khce6mua7lmqqqxw\", true},\n\t\t{\"11qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqc8247j\", true},\n\t\t{\"split1checkupstagehandshakeupstreamerranterredcaperred2y9e3w\", true},\n\n",
                    "rendered": {
                      "text": "\t\t{\"A12UEL5L\", true}, // empty\n\t\t{\"a12uel5l\", true},\n\t\t{\"an83characterlonghumanreadablepartthatcontainsthenumber1andtheexcludedcharactersbio1tt5tgs\", true},\n\t\t{\"abcdef1qpzry9x8gf2tvdw0s3jn54khce6mua7lmqqqxw\", true},\n\t\t{\"11qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqc8247j\", true},\n\t\t{\"split1checkupstagehandshakeupstreamerranterredcaperred2y9e3w\", true},\n\n",
                      "markdown": "`\t\t{\"A12UEL5L\", true}, // empty\n\t\t{\"a12uel5l\", true},\n\t\t{\"an83characterlonghumanreadablepartthatcontainsthenumber1andtheexcludedcharactersbio1tt5tgs\", true},\n\t\t{\"abcdef1qpzry9x8gf2tvdw0s3jn54khce6mua7lmqqqxw\", true},\n\t\t{\"11qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqc8247j\", true},\n\t\t{\"split1checkupstagehandshakeupstreamerranterredcaperred2y9e3w\", true},\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/internal/bech32/bech32_test.go"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 3,
                  "endLine": 33,
                  "endColumn": 95,
                  "snippet": {
                    "text": "\t}{\n\t\t{\"A12UEL5L\", true}, // empty\n\t\t{\"a12uel5l\", true},\n\t\t{\"an83characterlonghumanreadablepartthatcontainsthenumber1andtheexcludedcharactersbio1tt5tgs\", true},\n\t\t{\"abcdef1qpzry9x8gf2tvdw0s3jn54khce6mua7lmqqqxw\", true},\n\t\t{\"11qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqc8247j\", true},\n\t\t{\"split1checkupstagehandshakeupstreamerranterredcaperred2y9e3w\", true},\n",
                    "rendered": {
                      "text": "\t}{\n\t\t{\"A12UEL5L\", true}, // empty\n\t\t{\"a12uel5l\", true},\n\t\t{\"an83characterlonghumanreadablepartthatcontainsthenumber1andtheexcludedcharactersbio1tt5tgs\", true},\n\t\t{\"abcdef1qpzry9x8gf2tvdw0s3jn54khce6mua7lmqqqxw\", true},\n\t\t{\"11qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqc8247j\", true},\n\t\t{\"split1checkupstagehandshakeupstreamerranterredcaperred2y9e3w\", true},\n",
                      "markdown": "`\t}{\n\t\t{\"A12UEL5L\", true}, // empty\n\t\t{\"a12uel5l\", true},\n\t\t{\"an83characterlonghumanreadablepartthatcontainsthenumber1andtheexcludedcharactersbio1tt5tgs\", true},\n\t\t{\"abcdef1qpzry9x8gf2tvdw0s3jn54khce6mua7lmqqqxw\", true},\n\t\t{\"11qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqc8247j\", true},\n\t\t{\"split1checkupstagehandshakeupstreamerranterredcaperred2y9e3w\", true},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/parse.go"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 47,
                  "endLine": 26,
                  "endColumn": 57,
                  "snippet": {
                    "text": "func ParseIdentities(f io.Reader) ([]Identity, error) {\n\tconst privateKeySizeLimit = 1 << 24 // 16 MiB\n\tvar ids []Identity\n\tscanner := bufio.NewScanner(io.LimitReader(f, privateKeySizeLimit))\n\tvar n int\n\tfor scanner.Scan() {\n\t\tn++\n",
                    "rendered": {
                      "text": "func ParseIdentities(f io.Reader) ([]Identity, error) {\n\tconst privateKeySizeLimit = 1 << 24 // 16 MiB\n\tvar ids []Identity\n\tscanner := bufio.NewScanner(io.LimitReader(f, privateKeySizeLimit))\n\tvar n int\n\tfor scanner.Scan() {\n\t\tn++\n",
                      "markdown": "`func ParseIdentities(f io.Reader) ([]Identity, error) {\n\tconst privateKeySizeLimit = 1 << 24 // 16 MiB\n\tvar ids []Identity\n\tscanner := bufio.NewScanner(io.LimitReader(f, privateKeySizeLimit))\n\tvar n int\n\tfor scanner.Scan() {\n\t\tn++\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/parse.go"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 7,
                  "endLine": 24,
                  "endColumn": 17,
                  "snippet": {
                    "text": "// Currently, all returned values are of type *X25519Identity, but different\n// types might be returned in the future.\nfunc ParseIdentities(f io.Reader) ([]Identity, error) {\n\tconst privateKeySizeLimit = 1 << 24 // 16 MiB\n\tvar ids []Identity\n\tscanner := bufio.NewScanner(io.LimitReader(f, privateKeySizeLimit))\n\tvar n int\n",
                    "rendered": {
                      "text": "// Currently, all returned values are of type *X25519Identity, but different\n// types might be returned in the future.\nfunc ParseIdentities(f io.Reader) ([]Identity, error) {\n\tconst privateKeySizeLimit = 1 << 24 // 16 MiB\n\tvar ids []Identity\n\tscanner := bufio.NewScanner(io.LimitReader(f, privateKeySizeLimit))\n\tvar n int\n",
                      "markdown": "`// Currently, all returned values are of type *X25519Identity, but different\n// types might be returned in the future.\nfunc ParseIdentities(f io.Reader) ([]Identity, error) {\n\tconst privateKeySizeLimit = 1 << 24 // 16 MiB\n\tvar ids []Identity\n\tscanner := bufio.NewScanner(io.LimitReader(f, privateKeySizeLimit))\n\tvar n int\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/parse.go"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 46,
                  "endLine": 73,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\t\tif err != nil {\n\t\t\t// Hide the error since it might unintentionally leak the contents\n\t\t\t// of confidential files.\n\t\t\treturn nil, fmt.Errorf(\"malformed recipient at line %d\", n)\n\t\t}\n\t\trecs = append(recs, r)\n\t}\n",
                    "rendered": {
                      "text": "\t\tif err != nil {\n\t\t\t// Hide the error since it might unintentionally leak the contents\n\t\t\t// of confidential files.\n\t\t\treturn nil, fmt.Errorf(\"malformed recipient at line %d\", n)\n\t\t}\n\t\trecs = append(recs, r)\n\t}\n",
                      "markdown": "`\t\tif err != nil {\n\t\t\t// Hide the error since it might unintentionally leak the contents\n\t\t\t// of confidential files.\n\t\t\treturn nil, fmt.Errorf(\"malformed recipient at line %d\", n)\n\t\t}\n\t\trecs = append(recs, r)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/parse.go"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 32,
                  "endLine": 36,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t\t}\n\t\ti, err := ParseX25519Identity(line)\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"error at line %d: %v\", n, err)\n\t\t}\n\t\tids = append(ids, i)\n\t}\n",
                    "rendered": {
                      "text": "\t\t}\n\t\ti, err := ParseX25519Identity(line)\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"error at line %d: %v\", n, err)\n\t\t}\n\t\tids = append(ids, i)\n\t}\n",
                      "markdown": "`\t\t}\n\t\ti, err := ParseX25519Identity(line)\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"error at line %d: %v\", n, err)\n\t\t}\n\t\tids = append(ids, i)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/parse.go"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 23,
                  "endLine": 53,
                  "endColumn": 28,
                  "snippet": {
                    "text": "// line. Empty lines and lines starting with \"#\" are ignored.\n//\n// This is the same syntax as the recipients files accepted by the CLI, except\n// the CLI also accepts SSH recipients, which are not recommended for the\n// average application.\n//\n// Currently, all returned values are of type *X25519Recipient, but different\n",
                    "rendered": {
                      "text": "// line. Empty lines and lines starting with \"#\" are ignored.\n//\n// This is the same syntax as the recipients files accepted by the CLI, except\n// the CLI also accepts SSH recipients, which are not recommended for the\n// average application.\n//\n// Currently, all returned values are of type *X25519Recipient, but different\n",
                      "markdown": "`// line. Empty lines and lines starting with \"#\" are ignored.\n//\n// This is the same syntax as the recipients files accepted by the CLI, except\n// the CLI also accepts SSH recipients, which are not recommended for the\n// average application.\n//\n// Currently, all returned values are of type *X25519Recipient, but different\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/parse.go"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 23,
                  "endLine": 18,
                  "endColumn": 28,
                  "snippet": {
                    "text": "// line. Empty lines and lines starting with \"#\" are ignored.\n//\n// This is the same syntax as the private key files accepted by the CLI, except\n// the CLI also accepts SSH private keys, which are not recommended for the\n// average application.\n//\n// Currently, all returned values are of type *X25519Identity, but different\n",
                    "rendered": {
                      "text": "// line. Empty lines and lines starting with \"#\" are ignored.\n//\n// This is the same syntax as the private key files accepted by the CLI, except\n// the CLI also accepts SSH private keys, which are not recommended for the\n// average application.\n//\n// Currently, all returned values are of type *X25519Identity, but different\n",
                      "markdown": "`// line. Empty lines and lines starting with \"#\" are ignored.\n//\n// This is the same syntax as the private key files accepted by the CLI, except\n// the CLI also accepts SSH private keys, which are not recommended for the\n// average application.\n//\n// Currently, all returned values are of type *X25519Identity, but different\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/scrypt.go"
                },
                "region": {
                  "startLine": 187,
                  "startColumn": 24,
                  "endLine": 187,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t}\n\n\tsalt = append([]byte(scryptLabel), salt...)\n\tk, err := scrypt.Key(i.password, salt, 1<<logN, 8, 1, chacha20poly1305.KeySize)\n\tif err != nil { // unreachable\n\t\treturn nil, fmt.Errorf(\"failed to generate scrypt hash: %v\", err)\n\t}\n",
                    "rendered": {
                      "text": "\t}\n\n\tsalt = append([]byte(scryptLabel), salt...)\n\tk, err := scrypt.Key(i.password, salt, 1<<logN, 8, 1, chacha20poly1305.KeySize)\n\tif err != nil { // unreachable\n\t\treturn nil, fmt.Errorf(\"failed to generate scrypt hash: %v\", err)\n\t}\n",
                      "markdown": "`\t}\n\n\tsalt = append([]byte(scryptLabel), salt...)\n\tk, err := scrypt.Key(i.password, salt, 1<<logN, 8, 1, chacha20poly1305.KeySize)\n\tif err != nil { // unreachable\n\t\treturn nil, fmt.Errorf(\"failed to generate scrypt hash: %v\", err)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/scrypt.go"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 24,
                  "endLine": 128,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t\treturn nil, errors.New(\"passphrase can't be empty\")\n\t}\n\ti := &ScryptIdentity{\n\t\tpassword:      []byte(password),\n\t\tmaxWorkFactor: 22, // 15s on a modern machine\n\t}\n\treturn i, nil\n",
                    "rendered": {
                      "text": "\t\treturn nil, errors.New(\"passphrase can't be empty\")\n\t}\n\ti := &ScryptIdentity{\n\t\tpassword:      []byte(password),\n\t\tmaxWorkFactor: 22, // 15s on a modern machine\n\t}\n\treturn i, nil\n",
                      "markdown": "`\t\treturn nil, errors.New(\"passphrase can't be empty\")\n\t}\n\ti := &ScryptIdentity{\n\t\tpassword:      []byte(password),\n\t\tmaxWorkFactor: 22, // 15s on a modern machine\n\t}\n\treturn i, nil\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/scrypt.go"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 2,
                  "endLine": 128,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t\treturn nil, errors.New(\"passphrase can't be empty\")\n\t}\n\ti := &ScryptIdentity{\n\t\tpassword:      []byte(password),\n\t\tmaxWorkFactor: 22, // 15s on a modern machine\n\t}\n\treturn i, nil\n",
                    "rendered": {
                      "text": "\t\treturn nil, errors.New(\"passphrase can't be empty\")\n\t}\n\ti := &ScryptIdentity{\n\t\tpassword:      []byte(password),\n\t\tmaxWorkFactor: 22, // 15s on a modern machine\n\t}\n\treturn i, nil\n",
                      "markdown": "`\t\treturn nil, errors.New(\"passphrase can't be empty\")\n\t}\n\ti := &ScryptIdentity{\n\t\tpassword:      []byte(password),\n\t\tmaxWorkFactor: 22, // 15s on a modern machine\n\t}\n\treturn i, nil\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/scrypt.go"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 8,
                  "endLine": 124,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\n// NewScryptIdentity returns a new ScryptIdentity with the provided password.\nfunc NewScryptIdentity(password string) (*ScryptIdentity, error) {\n\tif len(password) == 0 {\n\t\treturn nil, errors.New(\"passphrase can't be empty\")\n\t}\n\ti := &ScryptIdentity{\n",
                    "rendered": {
                      "text": "\n// NewScryptIdentity returns a new ScryptIdentity with the provided password.\nfunc NewScryptIdentity(password string) (*ScryptIdentity, error) {\n\tif len(password) == 0 {\n\t\treturn nil, errors.New(\"passphrase can't be empty\")\n\t}\n\ti := &ScryptIdentity{\n",
                      "markdown": "`\n// NewScryptIdentity returns a new ScryptIdentity with the provided password.\nfunc NewScryptIdentity(password string) (*ScryptIdentity, error) {\n\tif len(password) == 0 {\n\t\treturn nil, errors.New(\"passphrase can't be empty\")\n\t}\n\ti := &ScryptIdentity{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/scrypt.go"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 23,
                  "endLine": 123,
                  "endColumn": 31,
                  "snippet": {
                    "text": "var _ Identity = &ScryptIdentity{}\n\n// NewScryptIdentity returns a new ScryptIdentity with the provided password.\nfunc NewScryptIdentity(password string) (*ScryptIdentity, error) {\n\tif len(password) == 0 {\n\t\treturn nil, errors.New(\"passphrase can't be empty\")\n\t}\n",
                    "rendered": {
                      "text": "var _ Identity = &ScryptIdentity{}\n\n// NewScryptIdentity returns a new ScryptIdentity with the provided password.\nfunc NewScryptIdentity(password string) (*ScryptIdentity, error) {\n\tif len(password) == 0 {\n\t\treturn nil, errors.New(\"passphrase can't be empty\")\n\t}\n",
                      "markdown": "`var _ Identity = &ScryptIdentity{}\n\n// NewScryptIdentity returns a new ScryptIdentity with the provided password.\nfunc NewScryptIdentity(password string) (*ScryptIdentity, error) {\n\tif len(password) == 0 {\n\t\treturn nil, errors.New(\"passphrase can't be empty\")\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/scrypt.go"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 68,
                  "endLine": 122,
                  "endColumn": 76,
                  "snippet": {
                    "text": "\nvar _ Identity = &ScryptIdentity{}\n\n// NewScryptIdentity returns a new ScryptIdentity with the provided password.\nfunc NewScryptIdentity(password string) (*ScryptIdentity, error) {\n\tif len(password) == 0 {\n\t\treturn nil, errors.New(\"passphrase can't be empty\")\n",
                    "rendered": {
                      "text": "\nvar _ Identity = &ScryptIdentity{}\n\n// NewScryptIdentity returns a new ScryptIdentity with the provided password.\nfunc NewScryptIdentity(password string) (*ScryptIdentity, error) {\n\tif len(password) == 0 {\n\t\treturn nil, errors.New(\"passphrase can't be empty\")\n",
                      "markdown": "`\nvar _ Identity = &ScryptIdentity{}\n\n// NewScryptIdentity returns a new ScryptIdentity with the provided password.\nfunc NewScryptIdentity(password string) (*ScryptIdentity, error) {\n\tif len(password) == 0 {\n\t\treturn nil, errors.New(\"passphrase can't be empty\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/scrypt.go"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 1,
                  "endLine": 116,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n// ScryptIdentity is a password-based identity.\ntype ScryptIdentity struct {\n\tpassword      []byte\n\tmaxWorkFactor int\n}\n\n",
                    "rendered": {
                      "text": "\n// ScryptIdentity is a password-based identity.\ntype ScryptIdentity struct {\n\tpassword      []byte\n\tmaxWorkFactor int\n}\n\n",
                      "markdown": "`\n// ScryptIdentity is a password-based identity.\ntype ScryptIdentity struct {\n\tpassword      []byte\n\tmaxWorkFactor int\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/scrypt.go"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 23,
                  "endLine": 114,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\treturn\n}\n\n// ScryptIdentity is a password-based identity.\ntype ScryptIdentity struct {\n\tpassword      []byte\n\tmaxWorkFactor int\n",
                    "rendered": {
                      "text": "\treturn\n}\n\n// ScryptIdentity is a password-based identity.\ntype ScryptIdentity struct {\n\tpassword      []byte\n\tmaxWorkFactor int\n",
                      "markdown": "`\treturn\n}\n\n// ScryptIdentity is a password-based identity.\ntype ScryptIdentity struct {\n\tpassword      []byte\n\tmaxWorkFactor int\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/scrypt.go"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 24,
                  "endLine": 77,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t}\n\n\tsalt = append([]byte(scryptLabel), salt...)\n\tk, err := scrypt.Key(r.password, salt, 1<<logN, 8, 1, chacha20poly1305.KeySize)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to generate scrypt hash: %v\", err)\n\t}\n",
                    "rendered": {
                      "text": "\t}\n\n\tsalt = append([]byte(scryptLabel), salt...)\n\tk, err := scrypt.Key(r.password, salt, 1<<logN, 8, 1, chacha20poly1305.KeySize)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to generate scrypt hash: %v\", err)\n\t}\n",
                      "markdown": "`\t}\n\n\tsalt = append([]byte(scryptLabel), salt...)\n\tk, err := scrypt.Key(r.password, salt, 1<<logN, 8, 1, chacha20poly1305.KeySize)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to generate scrypt hash: %v\", err)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/scrypt.go"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 19,
                  "endLine": 44,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\treturn nil, errors.New(\"passphrase can't be empty\")\n\t}\n\tr := &ScryptRecipient{\n\t\tpassword: []byte(password),\n\t\t// TODO: automatically scale this to 1s (with a min) in the CLI.\n\t\tworkFactor: 18, // 1s on a modern machine\n\t}\n",
                    "rendered": {
                      "text": "\t\treturn nil, errors.New(\"passphrase can't be empty\")\n\t}\n\tr := &ScryptRecipient{\n\t\tpassword: []byte(password),\n\t\t// TODO: automatically scale this to 1s (with a min) in the CLI.\n\t\tworkFactor: 18, // 1s on a modern machine\n\t}\n",
                      "markdown": "`\t\treturn nil, errors.New(\"passphrase can't be empty\")\n\t}\n\tr := &ScryptRecipient{\n\t\tpassword: []byte(password),\n\t\t// TODO: automatically scale this to 1s (with a min) in the CLI.\n\t\tworkFactor: 18, // 1s on a modern machine\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/scrypt.go"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 2,
                  "endLine": 44,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t\treturn nil, errors.New(\"passphrase can't be empty\")\n\t}\n\tr := &ScryptRecipient{\n\t\tpassword: []byte(password),\n\t\t// TODO: automatically scale this to 1s (with a min) in the CLI.\n\t\tworkFactor: 18, // 1s on a modern machine\n\t}\n",
                    "rendered": {
                      "text": "\t\treturn nil, errors.New(\"passphrase can't be empty\")\n\t}\n\tr := &ScryptRecipient{\n\t\tpassword: []byte(password),\n\t\t// TODO: automatically scale this to 1s (with a min) in the CLI.\n\t\tworkFactor: 18, // 1s on a modern machine\n\t}\n",
                      "markdown": "`\t\treturn nil, errors.New(\"passphrase can't be empty\")\n\t}\n\tr := &ScryptRecipient{\n\t\tpassword: []byte(password),\n\t\t// TODO: automatically scale this to 1s (with a min) in the CLI.\n\t\tworkFactor: 18, // 1s on a modern machine\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/scrypt.go"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 8,
                  "endLine": 40,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\n// NewScryptRecipient returns a new ScryptRecipient with the provided password.\nfunc NewScryptRecipient(password string) (*ScryptRecipient, error) {\n\tif len(password) == 0 {\n\t\treturn nil, errors.New(\"passphrase can't be empty\")\n\t}\n\tr := &ScryptRecipient{\n",
                    "rendered": {
                      "text": "\n// NewScryptRecipient returns a new ScryptRecipient with the provided password.\nfunc NewScryptRecipient(password string) (*ScryptRecipient, error) {\n\tif len(password) == 0 {\n\t\treturn nil, errors.New(\"passphrase can't be empty\")\n\t}\n\tr := &ScryptRecipient{\n",
                      "markdown": "`\n// NewScryptRecipient returns a new ScryptRecipient with the provided password.\nfunc NewScryptRecipient(password string) (*ScryptRecipient, error) {\n\tif len(password) == 0 {\n\t\treturn nil, errors.New(\"passphrase can't be empty\")\n\t}\n\tr := &ScryptRecipient{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/scrypt.go"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 24,
                  "endLine": 39,
                  "endColumn": 32,
                  "snippet": {
                    "text": "var _ Recipient = &ScryptRecipient{}\n\n// NewScryptRecipient returns a new ScryptRecipient with the provided password.\nfunc NewScryptRecipient(password string) (*ScryptRecipient, error) {\n\tif len(password) == 0 {\n\t\treturn nil, errors.New(\"passphrase can't be empty\")\n\t}\n",
                    "rendered": {
                      "text": "var _ Recipient = &ScryptRecipient{}\n\n// NewScryptRecipient returns a new ScryptRecipient with the provided password.\nfunc NewScryptRecipient(password string) (*ScryptRecipient, error) {\n\tif len(password) == 0 {\n\t\treturn nil, errors.New(\"passphrase can't be empty\")\n\t}\n",
                      "markdown": "`var _ Recipient = &ScryptRecipient{}\n\n// NewScryptRecipient returns a new ScryptRecipient with the provided password.\nfunc NewScryptRecipient(password string) (*ScryptRecipient, error) {\n\tif len(password) == 0 {\n\t\treturn nil, errors.New(\"passphrase can't be empty\")\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/scrypt.go"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 70,
                  "endLine": 38,
                  "endColumn": 78,
                  "snippet": {
                    "text": "\nvar _ Recipient = &ScryptRecipient{}\n\n// NewScryptRecipient returns a new ScryptRecipient with the provided password.\nfunc NewScryptRecipient(password string) (*ScryptRecipient, error) {\n\tif len(password) == 0 {\n\t\treturn nil, errors.New(\"passphrase can't be empty\")\n",
                    "rendered": {
                      "text": "\nvar _ Recipient = &ScryptRecipient{}\n\n// NewScryptRecipient returns a new ScryptRecipient with the provided password.\nfunc NewScryptRecipient(password string) (*ScryptRecipient, error) {\n\tif len(password) == 0 {\n\t\treturn nil, errors.New(\"passphrase can't be empty\")\n",
                      "markdown": "`\nvar _ Recipient = &ScryptRecipient{}\n\n// NewScryptRecipient returns a new ScryptRecipient with the provided password.\nfunc NewScryptRecipient(password string) (*ScryptRecipient, error) {\n\tif len(password) == 0 {\n\t\treturn nil, errors.New(\"passphrase can't be empty\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/scrypt.go"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 1,
                  "endLine": 32,
                  "endColumn": 9,
                  "snippet": {
                    "text": "// Its use is not recommended for automated systems, which should prefer\n// X25519Recipient.\ntype ScryptRecipient struct {\n\tpassword   []byte\n\tworkFactor int\n}\n\n",
                    "rendered": {
                      "text": "// Its use is not recommended for automated systems, which should prefer\n// X25519Recipient.\ntype ScryptRecipient struct {\n\tpassword   []byte\n\tworkFactor int\n}\n\n",
                      "markdown": "`// Its use is not recommended for automated systems, which should prefer\n// X25519Recipient.\ntype ScryptRecipient struct {\n\tpassword   []byte\n\tworkFactor int\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/scrypt.go"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 66,
                  "endLine": 22,
                  "endColumn": 74,
                  "snippet": {
                    "text": "\nconst scryptLabel = \"age-encryption.org/v1/scrypt\"\n\n// ScryptRecipient is a password-based recipient. Anyone with the password can\n// decrypt the message.\n//\n// If a ScryptRecipient is used, it must be the only recipient for the file: it\n",
                    "rendered": {
                      "text": "\nconst scryptLabel = \"age-encryption.org/v1/scrypt\"\n\n// ScryptRecipient is a password-based recipient. Anyone with the password can\n// decrypt the message.\n//\n// If a ScryptRecipient is used, it must be the only recipient for the file: it\n",
                      "markdown": "`\nconst scryptLabel = \"age-encryption.org/v1/scrypt\"\n\n// ScryptRecipient is a password-based recipient. Anyone with the password can\n// decrypt the message.\n//\n// If a ScryptRecipient is used, it must be the only recipient for the file: it\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/scrypt.go"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 24,
                  "endLine": 22,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\nconst scryptLabel = \"age-encryption.org/v1/scrypt\"\n\n// ScryptRecipient is a password-based recipient. Anyone with the password can\n// decrypt the message.\n//\n// If a ScryptRecipient is used, it must be the only recipient for the file: it\n",
                    "rendered": {
                      "text": "\nconst scryptLabel = \"age-encryption.org/v1/scrypt\"\n\n// ScryptRecipient is a password-based recipient. Anyone with the password can\n// decrypt the message.\n//\n// If a ScryptRecipient is used, it must be the only recipient for the file: it\n",
                      "markdown": "`\nconst scryptLabel = \"age-encryption.org/v1/scrypt\"\n\n// ScryptRecipient is a password-based recipient. Anyone with the password can\n// decrypt the message.\n//\n// If a ScryptRecipient is used, it must be the only recipient for the file: it\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/recipients_test.go"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 33,
                  "endLine": 60,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\t\tt.Fatal(err)\n\t}\n\tr.SetWorkFactor(15)\n\ti, err := age.NewScryptIdentity(password)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n",
                    "rendered": {
                      "text": "\t\tt.Fatal(err)\n\t}\n\tr.SetWorkFactor(15)\n\ti, err := age.NewScryptIdentity(password)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n",
                      "markdown": "`\t\tt.Fatal(err)\n\t}\n\tr.SetWorkFactor(15)\n\ti, err := age.NewScryptIdentity(password)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/recipients_test.go"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 34,
                  "endLine": 55,
                  "endColumn": 42,
                  "snippet": {
                    "text": "func TestScryptRoundTrip(t *testing.T) {\n\tpassword := \"twitch.tv/filosottile\"\n\n\tr, err := age.NewScryptRecipient(password)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n",
                    "rendered": {
                      "text": "func TestScryptRoundTrip(t *testing.T) {\n\tpassword := \"twitch.tv/filosottile\"\n\n\tr, err := age.NewScryptRecipient(password)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n",
                      "markdown": "`func TestScryptRoundTrip(t *testing.T) {\n\tpassword := \"twitch.tv/filosottile\"\n\n\tr, err := age.NewScryptRecipient(password)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/age.zip/recipients_test.go"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 1,
                  "endLine": 53,
                  "endColumn": 9,
                  "snippet": {
                    "text": "}\n\nfunc TestScryptRoundTrip(t *testing.T) {\n\tpassword := \"twitch.tv/filosottile\"\n\n\tr, err := age.NewScryptRecipient(password)\n\tif err != nil {\n",
                    "rendered": {
                      "text": "}\n\nfunc TestScryptRoundTrip(t *testing.T) {\n\tpassword := \"twitch.tv/filosottile\"\n\n\tr, err := age.NewScryptRecipient(password)\n\tif err != nil {\n",
                      "markdown": "`}\n\nfunc TestScryptRoundTrip(t *testing.T) {\n\tpassword := \"twitch.tv/filosottile\"\n\n\tr, err := age.NewScryptRecipient(password)\n\tif err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}