{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/ids/README.md"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 74,
                  "endLine": 4,
                  "endColumn": 3,
                  "snippet": {
                    "text": "This is an experimental Intrusion Detection System (IDS) plugin. It's goal\nis to either identify or react to suspicious activity. This is a work in\nprogress and is subject to either be completed or dropped in it's entirety\nat its author's descretion.\n\nSo, if you would like to test it and report issues or even contribute code\nfeel free to do so. But please discuss the contribution first to ensure\n",
                    "rendered": {
                      "text": "This is an experimental Intrusion Detection System (IDS) plugin. It's goal\nis to either identify or react to suspicious activity. This is a work in\nprogress and is subject to either be completed or dropped in it's entirety\nat its author's descretion.\n\nSo, if you would like to test it and report issues or even contribute code\nfeel free to do so. But please discuss the contribution first to ensure\n",
                      "markdown": "`This is an experimental Intrusion Detection System (IDS) plugin. It's goal\nis to either identify or react to suspicious activity. This is a work in\nprogress and is subject to either be completed or dropped in it's entirety\nat its author's descretion.\n\nSo, if you would like to test it and report issues or even contribute code\nfeel free to do so. But please discuss the contribution first to ensure\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/ids/README.md"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 23,
                  "endLine": 9,
                  "endColumn": 29,
                  "snippet": {
                    "text": "So, if you would like to test it and report issues or even contribute code\nfeel free to do so. But please discuss the contribution first to ensure\nthat its acceptable. This project uses the Linux Kernel Style Guideline.\nPlease follow it if you wish to contribute.\n",
                    "rendered": {
                      "text": "So, if you would like to test it and report issues or even contribute code\nfeel free to do so. But please discuss the contribution first to ensure\nthat its acceptable. This project uses the Linux Kernel Style Guideline.\nPlease follow it if you wish to contribute.\n",
                      "markdown": "`So, if you would like to test it and report issues or even contribute code\nfeel free to do so. But please discuss the contribution first to ensure\nthat its acceptable. This project uses the Linux Kernel Style Guideline.\nPlease follow it if you wish to contribute.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/ausearch_cur_event.3"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 155,
                  "endLine": 11,
                  "endColumn": 159,
                  "snippet": {
                    "text": "\n.SH \"DESCRIPTION\"\n\nausearch_cur_event will scan the input source and evaluate whether any record in the current event contains the data being searched for. Evaluation is done at the record level. If a match is found, the cursor is repositioned; otherwise, it remains on the last successfully parsed record within the current event.\n\n.SH \"RETURN VALUE\"\n\n",
                    "rendered": {
                      "text": "\n.SH \"DESCRIPTION\"\n\nausearch_cur_event will scan the input source and evaluate whether any record in the current event contains the data being searched for. Evaluation is done at the record level. If a match is found, the cursor is repositioned; otherwise, it remains on the last successfully parsed record within the current event.\n\n.SH \"RETURN VALUE\"\n\n",
                      "markdown": "`\n.SH \"DESCRIPTION\"\n\nausearch_cur_event will scan the input source and evaluate whether any record in the current event contains the data being searched for. Evaluation is done at the record level. If a match is found, the cursor is repositioned; otherwise, it remains on the last successfully parsed record within the current event.\n\n.SH \"RETURN VALUE\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/libev/ev_linuxaio.c"
                },
                "region": {
                  "startLine": 521,
                  "startColumn": 11,
                  "endLine": 521,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                backend_poll   = epoll_poll;\n              }\n\n            timeout = EV_TS_CONST (0.);\n            /* it's easiest to handle this mess in another iteration */\n            return;\n          }\n",
                    "rendered": {
                      "text": "                backend_poll   = epoll_poll;\n              }\n\n            timeout = EV_TS_CONST (0.);\n            /* it's easiest to handle this mess in another iteration */\n            return;\n          }\n",
                      "markdown": "`                backend_poll   = epoll_poll;\n              }\n\n            timeout = EV_TS_CONST (0.);\n            /* it's easiest to handle this mess in another iteration */\n            return;\n          }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/libev/ev_linuxaio.c"
                },
                "region": {
                  "startLine": 441,
                  "startColumn": 5,
                  "endLine": 441,
                  "endColumn": 14,
                  "snippet": {
                    "text": "      else\n        break; /* no events from the kernel, we are done */\n\n      timeout = EV_TS_CONST (0.); /* only wait in the first iteration */\n    }\n}\n\n",
                    "rendered": {
                      "text": "      else\n        break; /* no events from the kernel, we are done */\n\n      timeout = EV_TS_CONST (0.); /* only wait in the first iteration */\n    }\n}\n\n",
                      "markdown": "`      else\n        break; /* no events from the kernel, we are done */\n\n      timeout = EV_TS_CONST (0.); /* only wait in the first iteration */\n    }\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/libev/ev_linuxaio.c"
                },
                "region": {
                  "startLine": 353,
                  "startColumn": 56,
                  "endLine": 353,
                  "endColumn": 62,
                  "snippet": {
                    "text": "\n  /* parse all available events, but only once, to avoid starvation */\n  if (ecb_expect_true (tail > head)) /* normal case around */\n    linuxaio_parse_events (EV_A_ ring->io_events + head, tail - head);\n  else /* wrapped around */\n    {\n      linuxaio_parse_events (EV_A_ ring->io_events + head, ring->nr - head);\n",
                    "rendered": {
                      "text": "\n  /* parse all available events, but only once, to avoid starvation */\n  if (ecb_expect_true (tail > head)) /* normal case around */\n    linuxaio_parse_events (EV_A_ ring->io_events + head, tail - head);\n  else /* wrapped around */\n    {\n      linuxaio_parse_events (EV_A_ ring->io_events + head, ring->nr - head);\n",
                      "markdown": "`\n  /* parse all available events, but only once, to avoid starvation */\n  if (ecb_expect_true (tail > head)) /* normal case around */\n    linuxaio_parse_events (EV_A_ ring->io_events + head, tail - head);\n  else /* wrapped around */\n    {\n      linuxaio_parse_events (EV_A_ ring->io_events + head, ring->nr - head);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/libev/ev_linuxaio.c"
                },
                "region": {
                  "startLine": 346,
                  "startColumn": 1,
                  "endLine": 346,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  /* both makes reads atomic and once-only */\n  head = *(volatile unsigned *)&ring->head;\n  ECB_MEMORY_FENCE_ACQUIRE;\n  tail = *(volatile unsigned *)&ring->tail;\n\n  if (head == tail)\n    return 0;\n",
                    "rendered": {
                      "text": "  /* both makes reads atomic and once-only */\n  head = *(volatile unsigned *)&ring->head;\n  ECB_MEMORY_FENCE_ACQUIRE;\n  tail = *(volatile unsigned *)&ring->tail;\n\n  if (head == tail)\n    return 0;\n",
                      "markdown": "`  /* both makes reads atomic and once-only */\n  head = *(volatile unsigned *)&ring->head;\n  ECB_MEMORY_FENCE_ACQUIRE;\n  tail = *(volatile unsigned *)&ring->tail;\n\n  if (head == tail)\n    return 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/libev/ev_linuxaio.c"
                },
                "region": {
                  "startLine": 344,
                  "startColumn": 1,
                  "endLine": 344,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  /* the kernel reads and writes both of these variables, */\n  /* as a C extension, we assume that volatile use here */\n  /* both makes reads atomic and once-only */\n  head = *(volatile unsigned *)&ring->head;\n  ECB_MEMORY_FENCE_ACQUIRE;\n  tail = *(volatile unsigned *)&ring->tail;\n\n",
                    "rendered": {
                      "text": "  /* the kernel reads and writes both of these variables, */\n  /* as a C extension, we assume that volatile use here */\n  /* both makes reads atomic and once-only */\n  head = *(volatile unsigned *)&ring->head;\n  ECB_MEMORY_FENCE_ACQUIRE;\n  tail = *(volatile unsigned *)&ring->tail;\n\n",
                      "markdown": "`  /* the kernel reads and writes both of these variables, */\n  /* as a C extension, we assume that volatile use here */\n  /* both makes reads atomic and once-only */\n  head = *(volatile unsigned *)&ring->head;\n  ECB_MEMORY_FENCE_ACQUIRE;\n  tail = *(volatile unsigned *)&ring->tail;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-checkpt.c"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 9,
                  "endLine": 185,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\tif (sscanf(rest, TIME_T_SPECIFIER \".%03u:%lu 0x%X\", &e->sec, &e->milli,\n\t\t\t\t\t\t&e->serial, &e->type) != 4) {\n\t\tfprintf(stderr, \"Malformed output/event checkpoint line \"\n\t\t\t\"after node - [%s]\\n\", lbuf);\n\t\tcheckpt_failure |= CP_STATUSBAD;\n\t\treturn 1;\n\t}\n",
                    "rendered": {
                      "text": "\tif (sscanf(rest, TIME_T_SPECIFIER \".%03u:%lu 0x%X\", &e->sec, &e->milli,\n\t\t\t\t\t\t&e->serial, &e->type) != 4) {\n\t\tfprintf(stderr, \"Malformed output/event checkpoint line \"\n\t\t\t\"after node - [%s]\\n\", lbuf);\n\t\tcheckpt_failure |= CP_STATUSBAD;\n\t\treturn 1;\n\t}\n",
                      "markdown": "`\tif (sscanf(rest, TIME_T_SPECIFIER \".%03u:%lu 0x%X\", &e->sec, &e->milli,\n\t\t\t\t\t\t&e->serial, &e->type) != 4) {\n\t\tfprintf(stderr, \"Malformed output/event checkpoint line \"\n\t\t\t\"after node - [%s]\\n\", lbuf);\n\t\tcheckpt_failure |= CP_STATUSBAD;\n\t\treturn 1;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-checkpt.c"
                },
                "region": {
                  "startLine": 176,
                  "startColumn": 33,
                  "endLine": 176,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\telse {\n\t\te->node = strdup(&lbuf[ndix]);\n\t\tif (e->node == NULL) {\n\t\t\tfprintf(stderr, \"No memory for node when loading \"\n\t\t\t\t\t\"checkpoint line - [%s]\\n\", lbuf);\n\t\t\tcheckpt_failure |= CP_NOMEM;\n\t\t\treturn 1;\n",
                    "rendered": {
                      "text": "\telse {\n\t\te->node = strdup(&lbuf[ndix]);\n\t\tif (e->node == NULL) {\n\t\t\tfprintf(stderr, \"No memory for node when loading \"\n\t\t\t\t\t\"checkpoint line - [%s]\\n\", lbuf);\n\t\t\tcheckpt_failure |= CP_NOMEM;\n\t\t\treturn 1;\n",
                      "markdown": "`\telse {\n\t\te->node = strdup(&lbuf[ndix]);\n\t\tif (e->node == NULL) {\n\t\t\tfprintf(stderr, \"No memory for node when loading \"\n\t\t\t\t\t\"checkpoint line - [%s]\\n\", lbuf);\n\t\t\tcheckpt_failure |= CP_NOMEM;\n\t\t\treturn 1;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-checkpt.c"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 9,
                  "endLine": 165,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\trest = strchr(&lbuf[ndix], ' ');\n\tif (rest == NULL) {\n\t\tfprintf(stderr, \"Malformed output/event checkpoint line \"\n\t\t\t\t\"near node - [%s]\\n\", lbuf);\n\t\tcheckpt_failure |= CP_STATUSBAD;\n\t\treturn 1;\n\t}\n",
                    "rendered": {
                      "text": "\trest = strchr(&lbuf[ndix], ' ');\n\tif (rest == NULL) {\n\t\tfprintf(stderr, \"Malformed output/event checkpoint line \"\n\t\t\t\t\"near node - [%s]\\n\", lbuf);\n\t\tcheckpt_failure |= CP_STATUSBAD;\n\t\treturn 1;\n\t}\n",
                      "markdown": "`\trest = strchr(&lbuf[ndix], ' ');\n\tif (rest == NULL) {\n\t\tfprintf(stderr, \"Malformed output/event checkpoint line \"\n\t\t\t\t\"near node - [%s]\\n\", lbuf);\n\t\tcheckpt_failure |= CP_STATUSBAD;\n\t\treturn 1;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-checkpt.c"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 27,
                  "endLine": 94,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t\t\tlast_event.node = strdup(e->node);\n\t\tif (last_event.node == NULL) {\n\t\t\tfprintf(stderr, \"No memory to allocate \"\n\t\t\t\t\t\"checkpoint last event node name\\n\");\n\t\t\treturn 1;\n\t\t}\n\t} else {\n",
                    "rendered": {
                      "text": "\t\t\tlast_event.node = strdup(e->node);\n\t\tif (last_event.node == NULL) {\n\t\t\tfprintf(stderr, \"No memory to allocate \"\n\t\t\t\t\t\"checkpoint last event node name\\n\");\n\t\t\treturn 1;\n\t\t}\n\t} else {\n",
                      "markdown": "`\t\t\tlast_event.node = strdup(e->node);\n\t\tif (last_event.node == NULL) {\n\t\t\tfprintf(stderr, \"No memory to allocate \"\n\t\t\t\t\t\"checkpoint last event node name\\n\");\n\t\t\treturn 1;\n\t\t}\n\t} else {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/common/Makefile.am"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 21,
                  "endLine": 2,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# Makefile.am-- \n# Copyright 2018-2023 Red Hat Inc.\n# All Rights Reserved.\n#\n# This program is free software; you can redistribute it and/or modify\n",
                    "rendered": {
                      "text": "# Makefile.am-- \n# Copyright 2018-2023 Red Hat Inc.\n# All Rights Reserved.\n#\n# This program is free software; you can redistribute it and/or modify\n",
                      "markdown": "`# Makefile.am-- \n# Copyright 2018-2023 Red Hat Inc.\n# All Rights Reserved.\n#\n# This program is free software; you can redistribute it and/or modify\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/statsd/audisp-statsd.conf"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 5,
                  "endLine": 2,
                  "endColumn": 11,
                  "snippet": {
                    "text": "# This file points audisp-statsd to the statsd server. The interval is\n# the time in seconds between updates.\naddress = localhost\nport = 8125\ninterval = 15\n",
                    "rendered": {
                      "text": "# This file points audisp-statsd to the statsd server. The interval is\n# the time in seconds between updates.\naddress = localhost\nport = 8125\ninterval = 15\n",
                      "markdown": "`# This file points audisp-statsd to the statsd server. The interval is\n# the time in seconds between updates.\naddress = localhost\nport = 8125\ninterval = 15\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/statsd/audisp-statsd.8"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 108,
                  "endLine": 8,
                  "endColumn": 117,
                  "snippet": {
                    "text": ".B audisp-statsd\n[ \\fIOPTIONS\\fP ]\n.SH DESCRIPTION\n\\fBaudisp-statsd\\fP is a plugin for the audit event dispatcher that pushes various audit metrics to a statsd service using UDP. Currently it collects the following metrics as gauges:\n.RS\n.TP\n.B backlog\n",
                    "rendered": {
                      "text": ".B audisp-statsd\n[ \\fIOPTIONS\\fP ]\n.SH DESCRIPTION\n\\fBaudisp-statsd\\fP is a plugin for the audit event dispatcher that pushes various audit metrics to a statsd service using UDP. Currently it collects the following metrics as gauges:\n.RS\n.TP\n.B backlog\n",
                      "markdown": "`.B audisp-statsd\n[ \\fIOPTIONS\\fP ]\n.SH DESCRIPTION\n\\fBaudisp-statsd\\fP is a plugin for the audit event dispatcher that pushes various audit metrics to a statsd service using UDP. Currently it collects the following metrics as gauges:\n.RS\n.TP\n.B backlog\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/statsd/audisp-statsd.8"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 57,
                  "endLine": 4,
                  "snippet": {
                    "text": ".TH AUDISP-STATSD \"8\" \"February 2021\" \"Red Hat\" \"System Administration Utilities\"\n.SH NAME\naudisp-statsd \\- plugin to push audit metrics to a statsd service\n.SH SYNOPSIS\n.B audisp-statsd\n[ \\fIOPTIONS\\fP ]\n.SH DESCRIPTION\n",
                    "rendered": {
                      "text": ".TH AUDISP-STATSD \"8\" \"February 2021\" \"Red Hat\" \"System Administration Utilities\"\n.SH NAME\naudisp-statsd \\- plugin to push audit metrics to a statsd service\n.SH SYNOPSIS\n.B audisp-statsd\n[ \\fIOPTIONS\\fP ]\n.SH DESCRIPTION\n",
                      "markdown": "`.TH AUDISP-STATSD \"8\" \"February 2021\" \"Red Hat\" \"System Administration Utilities\"\n.SH NAME\naudisp-statsd \\- plugin to push audit metrics to a statsd service\n.SH SYNOPSIS\n.B audisp-statsd\n[ \\fIOPTIONS\\fP ]\n.SH DESCRIPTION\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/af_unix/audisp-af_unix.c"
                },
                "region": {
                  "startLine": 111,
                  "endLine": 111,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t\treturn -1;\n\t}\n\t// Put socket in nonblock mode and don't leak the descriptor\n\tcmd = fcntl(sock, F_GETFL);\n\tfcntl(sock, F_SETFL, cmd|FNDELAY|FD_CLOEXEC);\n\n\t// Make socket listening...won't block\n",
                    "rendered": {
                      "text": "\t\treturn -1;\n\t}\n\t// Put socket in nonblock mode and don't leak the descriptor\n\tcmd = fcntl(sock, F_GETFL);\n\tfcntl(sock, F_SETFL, cmd|FNDELAY|FD_CLOEXEC);\n\n\t// Make socket listening...won't block\n",
                      "markdown": "`\t\treturn -1;\n\t}\n\t// Put socket in nonblock mode and don't leak the descriptor\n\tcmd = fcntl(sock, F_GETFL);\n\tfcntl(sock, F_SETFL, cmd|FNDELAY|FD_CLOEXEC);\n\n\t// Make socket listening...won't block\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/af_unix/audisp-af_unix.c"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 27,
                  "endLine": 104,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\t}\n\trc = chmod(spath, mode);\n\tif (rc < 0) {\n\t\tsyslog(LOG_ERR, \"Couldn't chmod %s to %04o (%s)\",\n\t\t       spath, mode, strerror(errno));\n\t\tclose(sock);\n\t\tunlink(spath);\n",
                    "rendered": {
                      "text": "\t}\n\trc = chmod(spath, mode);\n\tif (rc < 0) {\n\t\tsyslog(LOG_ERR, \"Couldn't chmod %s to %04o (%s)\",\n\t\t       spath, mode, strerror(errno));\n\t\tclose(sock);\n\t\tunlink(spath);\n",
                      "markdown": "`\t}\n\trc = chmod(spath, mode);\n\tif (rc < 0) {\n\t\tsyslog(LOG_ERR, \"Couldn't chmod %s to %04o (%s)\",\n\t\t       spath, mode, strerror(errno));\n\t\tclose(sock);\n\t\tunlink(spath);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/af_unix/Makefile.am"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 16,
                  "endLine": 2,
                  "endColumn": 21,
                  "snippet": {
                    "text": "# Makefile.am--\n# Copyright 2023 Red Hat Inc.\n# All Rights Reserved.\n#\n# This program is free software; you can redistribute it and/or modify\n",
                    "rendered": {
                      "text": "# Makefile.am--\n# Copyright 2023 Red Hat Inc.\n# All Rights Reserved.\n#\n# This program is free software; you can redistribute it and/or modify\n",
                      "markdown": "`# Makefile.am--\n# Copyright 2023 Red Hat Inc.\n# All Rights Reserved.\n#\n# This program is free software; you can redistribute it and/or modify\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/filter/filter.conf"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 26,
                  "endLine": 8,
                  "endColumn": 34,
                  "snippet": {
                    "text": "# based on specified criteria before they are e.g. forwarded\n# to syslog or sent to a remote destination for analysis.\n# The filter is generic and is designed to work in tandem\n# with other plugins which expect audit messages on their\n# standard input.\n# See audisp-filter(8)\n\n",
                    "rendered": {
                      "text": "# based on specified criteria before they are e.g. forwarded\n# to syslog or sent to a remote destination for analysis.\n# The filter is generic and is designed to work in tandem\n# with other plugins which expect audit messages on their\n# standard input.\n# See audisp-filter(8)\n\n",
                      "markdown": "`# based on specified criteria before they are e.g. forwarded\n# to syslog or sent to a remote destination for analysis.\n# The filter is generic and is designed to work in tandem\n# with other plugins which expect audit messages on their\n# standard input.\n# See audisp-filter(8)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/filter/Makefile.am"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 16,
                  "endLine": 2,
                  "endColumn": 21,
                  "snippet": {
                    "text": "# Makefile.am --\n# Copyright 2024 Red Hat Inc., Durham, North Carolina.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                    "rendered": {
                      "text": "# Makefile.am --\n# Copyright 2024 Red Hat Inc., Durham, North Carolina.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                      "markdown": "`# Makefile.am --\n# Copyright 2024 Red Hat Inc., Durham, North Carolina.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000703"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Username)",
            "id": "BD000703"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/ids/rules/25-recon.rules"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 68,
                  "endLine": 9,
                  "endColumn": 74,
                  "snippet": {
                    "text": "uid!=-1 -F perm=x -F path=/usr/bin/dnf -F key=ids-recon\n-a always,exit -F auid>=1000 -F auid!=-1 -F perm=x -F path=/usr/bin/w -F key=ids-recon\n-a always,exit -F auid>=1000 -F auid!=-1 -F perm=x -F path=/usr/bin/who -F key=ids-recon\n-a always,exit -F auid>=1000 -F auid!=-1 -F perm=x -F path=/usr/bin/whoami -F key=ids-recon\n#-a always,exit -F auid>=1000 -F auid!=-1 -F perm=x -F path=/usr/bin/id -F key=ids-recon\n-a always,exit -F auid>=1000 -F auid!=-1 -F perm=x -F path=/usr/bin/netstat -F key=ids-recon\n-a always,exit -F auid>=1000 -F auid!=-1 -F perm=x -F path=/usr/bin/ss -F key=ids-recon\n-a always,ex",
                    "rendered": {
                      "text": "uid!=-1 -F perm=x -F path=/usr/bin/dnf -F key=ids-recon\n-a always,exit -F auid>=1000 -F auid!=-1 -F perm=x -F path=/usr/bin/w -F key=ids-recon\n-a always,exit -F auid>=1000 -F auid!=-1 -F perm=x -F path=/usr/bin/who -F key=ids-recon\n-a always,exit -F auid>=1000 -F auid!=-1 -F perm=x -F path=/usr/bin/whoami -F key=ids-recon\n#-a always,exit -F auid>=1000 -F auid!=-1 -F perm=x -F path=/usr/bin/id -F key=ids-recon\n-a always,exit -F auid>=1000 -F auid!=-1 -F perm=x -F path=/usr/bin/netstat -F key=ids-recon\n-a always,exit -F auid>=1000 -F auid!=-1 -F perm=x -F path=/usr/bin/ss -F key=ids-recon\n-a always,ex",
                      "markdown": "`uid!=-1 -F perm=x -F path=/usr/bin/dnf -F key=ids-recon\n-a always,exit -F auid>=1000 -F auid!=-1 -F perm=x -F path=/usr/bin/w -F key=ids-recon\n-a always,exit -F auid>=1000 -F auid!=-1 -F perm=x -F path=/usr/bin/who -F key=ids-recon\n-a always,exit -F auid>=1000 -F auid!=-1 -F perm=x -F path=/usr/bin/whoami -F key=ids-recon\n#-a always,exit -F auid>=1000 -F auid!=-1 -F perm=x -F path=/usr/bin/id -F key=ids-recon\n-a always,exit -F auid>=1000 -F auid!=-1 -F perm=x -F path=/usr/bin/netstat -F key=ids-recon\n-a always,exit -F auid>=1000 -F auid!=-1 -F perm=x -F path=/usr/bin/ss -F key=ids-recon\n-a always,ex`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/ids/model_bad_event.c"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 37,
                  "endLine": 96,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\t\t\tacct = NULL;\n\t\t// otherwise we have a strange daemon login\n\t\t} else if (debug)\n\t\t    my_printf(\"start_session: can't find session in serial %s\",\n\t\t\t\tauparse_get_type_name(au));\n\t}\n\tfree((void *)acct);\n",
                    "rendered": {
                      "text": "\t\t\tacct = NULL;\n\t\t// otherwise we have a strange daemon login\n\t\t} else if (debug)\n\t\t    my_printf(\"start_session: can't find session in serial %s\",\n\t\t\t\tauparse_get_type_name(au));\n\t}\n\tfree((void *)acct);\n",
                      "markdown": "`\t\t\tacct = NULL;\n\t\t// otherwise we have a strange daemon login\n\t\t} else if (debug)\n\t\t    my_printf(\"start_session: can't find session in serial %s\",\n\t\t\t\tauparse_get_type_name(au));\n\t}\n\tfree((void *)acct);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/zos-remote/zos-remote.conf"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 16,
                  "endLine": 8,
                  "endColumn": 24,
                  "snippet": {
                    "text": "server = zos_server.localdomain\nport = 389\nuser = RACF_ID\npassword = racf_password\ntimeout = 15\nq_depth = 64\n",
                    "rendered": {
                      "text": "server = zos_server.localdomain\nport = 389\nuser = RACF_ID\npassword = racf_password\ntimeout = 15\nq_depth = 64\n",
                      "markdown": "`server = zos_server.localdomain\nport = 389\nuser = RACF_ID\npassword = racf_password\ntimeout = 15\nq_depth = 64\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/zos-remote/zos-remote.conf"
                },
                "region": {
                  "startLine": 8,
                  "endLine": 8,
                  "endColumn": 8,
                  "snippet": {
                    "text": "server = zos_server.localdomain\nport = 389\nuser = RACF_ID\npassword = racf_password\ntimeout = 15\nq_depth = 64\n",
                    "rendered": {
                      "text": "server = zos_server.localdomain\nport = 389\nuser = RACF_ID\npassword = racf_password\ntimeout = 15\nq_depth = 64\n",
                      "markdown": "`server = zos_server.localdomain\nport = 389\nuser = RACF_ID\npassword = racf_password\ntimeout = 15\nq_depth = 64\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/zos-remote/zos-remote.conf"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 24,
                  "endLine": 9,
                  "endColumn": 8,
                  "snippet": {
                    "text": "server = zos_server.localdomain\nport = 389\nuser = RACF_ID\npassword = racf_password\ntimeout = 15\nq_depth = 64\n",
                    "rendered": {
                      "text": "server = zos_server.localdomain\nport = 389\nuser = RACF_ID\npassword = racf_password\ntimeout = 15\nq_depth = 64\n",
                      "markdown": "`server = zos_server.localdomain\nport = 389\nuser = RACF_ID\npassword = racf_password\ntimeout = 15\nq_depth = 64\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/zos-remote/zos-remote-plugin.c"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 31,
                  "endLine": 108,
                  "endColumn": 39,
                  "snippet": {
                    "text": "        \n        rc = zos_remote_init(&zos_remote_inst, conf.server, \n                          conf.port, conf.user,\n                          conf.password,\n                          conf.timeout);\n                          \n        if (rc != ICTX_SUCCESS) {\n",
                    "rendered": {
                      "text": "        \n        rc = zos_remote_init(&zos_remote_inst, conf.server, \n                          conf.port, conf.user,\n                          conf.password,\n                          conf.timeout);\n                          \n        if (rc != ICTX_SUCCESS) {\n",
                      "markdown": "`        \n        rc = zos_remote_init(&zos_remote_inst, conf.server, \n                          conf.port, conf.user,\n                          conf.password,\n                          conf.timeout);\n                          \n        if (rc != ICTX_SUCCESS) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/zos-remote/zos-remote-config.c"
                },
                "region": {
                  "startLine": 441,
                  "startColumn": 25,
                  "endLine": 441,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n        free((void *) c->server);\n        free((void *) c->user);\n        free((void *) c->password);\n        free((void *) c->name);\n}\n",
                    "rendered": {
                      "text": "\n        free((void *) c->server);\n        free((void *) c->user);\n        free((void *) c->password);\n        free((void *) c->name);\n}\n",
                      "markdown": "`\n        free((void *) c->server);\n        free((void *) c->user);\n        free((void *) c->password);\n        free((void *) c->name);\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/zos-remote/zos-remote-config.c"
                },
                "region": {
                  "startLine": 422,
                  "startColumn": 36,
                  "endLine": 422,
                  "endColumn": 44,
                  "snippet": {
                    "text": "        }\n\n        if (!c->password) {\n                log_err(\"Error - no password given\");\n                return 1;\n        }\n        \n",
                    "rendered": {
                      "text": "        }\n\n        if (!c->password) {\n                log_err(\"Error - no password given\");\n                return 1;\n        }\n        \n",
                      "markdown": "`        }\n\n        if (!c->password) {\n                log_err(\"Error - no password given\");\n                return 1;\n        }\n        \n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/zos-remote/zos-remote-config.c"
                },
                "region": {
                  "startLine": 421,
                  "startColumn": 16,
                  "endLine": 421,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                return 1;\n        }\n\n        if (!c->password) {\n                log_err(\"Error - no password given\");\n                return 1;\n        }\n",
                    "rendered": {
                      "text": "                return 1;\n        }\n\n        if (!c->password) {\n                log_err(\"Error - no password given\");\n                return 1;\n        }\n",
                      "markdown": "`                return 1;\n        }\n\n        if (!c->password) {\n                log_err(\"Error - no password given\");\n                return 1;\n        }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/zos-remote/zos-remote-config.c"
                },
                "region": {
                  "startLine": 367,
                  "startColumn": 19,
                  "endLine": 367,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        if (nv->value == NULL)\n                c->password = NULL;\n        else\n                c->password = strdup(nv->value);\n\n        return 0;\n}\n",
                    "rendered": {
                      "text": "        if (nv->value == NULL)\n                c->password = NULL;\n        else\n                c->password = strdup(nv->value);\n\n        return 0;\n}\n",
                      "markdown": "`        if (nv->value == NULL)\n                c->password = NULL;\n        else\n                c->password = strdup(nv->value);\n\n        return 0;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/zos-remote/zos-remote-config.c"
                },
                "region": {
                  "startLine": 365,
                  "startColumn": 19,
                  "endLine": 365,
                  "endColumn": 27,
                  "snippet": {
                    "text": "{\n\tUNUSED(line);\n        if (nv->value == NULL)\n                c->password = NULL;\n        else\n                c->password = strdup(nv->value);\n\n",
                    "rendered": {
                      "text": "{\n\tUNUSED(line);\n        if (nv->value == NULL)\n                c->password = NULL;\n        else\n                c->password = strdup(nv->value);\n\n",
                      "markdown": "`{\n\tUNUSED(line);\n        if (nv->value == NULL)\n                c->password = NULL;\n        else\n                c->password = strdup(nv->value);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/zos-remote/zos-remote-config.c"
                },
                "region": {
                  "startLine": 361,
                  "startColumn": 11,
                  "endLine": 361,
                  "endColumn": 19,
                  "snippet": {
                    "text": "        return 0;\n}\n\nstatic int password_parser(struct nv_pair *nv, int line, plugin_conf_t * c)\n{\n\tUNUSED(line);\n        if (nv->value == NULL)\n",
                    "rendered": {
                      "text": "        return 0;\n}\n\nstatic int password_parser(struct nv_pair *nv, int line, plugin_conf_t * c)\n{\n\tUNUSED(line);\n        if (nv->value == NULL)\n",
                      "markdown": "`        return 0;\n}\n\nstatic int password_parser(struct nv_pair *nv, int line, plugin_conf_t * c)\n{\n\tUNUSED(line);\n        if (nv->value == NULL)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/zos-remote/zos-remote-config.c"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 11,
                  "endLine": 89,
                  "endColumn": 19,
                  "snippet": {
                    "text": "        c->server = NULL;\n        c->port = 0;\n        c->user = NULL;\n        c->password = NULL;\n        c->timeout = 15;\n        c->q_depth = 64;\n        /* not re-setting counter */\n",
                    "rendered": {
                      "text": "        c->server = NULL;\n        c->port = 0;\n        c->user = NULL;\n        c->password = NULL;\n        c->timeout = 15;\n        c->q_depth = 64;\n        /* not re-setting counter */\n",
                      "markdown": "`        c->server = NULL;\n        c->port = 0;\n        c->user = NULL;\n        c->password = NULL;\n        c->timeout = 15;\n        c->q_depth = 64;\n        /* not re-setting counter */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/zos-remote/zos-remote-config.c"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 21,
                  "endLine": 74,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        {\"port\", port_parser, 0},\n        {\"timeout\", timeout_parser, 0},\n        {\"user\", user_parser, 0},\n        {\"password\", password_parser, 0},\n        {\"q_depth\", q_depth_parser, 0},\n        {NULL, NULL, 0}\n};\n",
                    "rendered": {
                      "text": "        {\"port\", port_parser, 0},\n        {\"timeout\", timeout_parser, 0},\n        {\"user\", user_parser, 0},\n        {\"password\", password_parser, 0},\n        {\"q_depth\", q_depth_parser, 0},\n        {NULL, NULL, 0}\n};\n",
                      "markdown": "`        {\"port\", port_parser, 0},\n        {\"timeout\", timeout_parser, 0},\n        {\"user\", user_parser, 0},\n        {\"password\", password_parser, 0},\n        {\"q_depth\", q_depth_parser, 0},\n        {NULL, NULL, 0}\n};\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/zos-remote/zos-remote-config.c"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 10,
                  "endLine": 74,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        {\"port\", port_parser, 0},\n        {\"timeout\", timeout_parser, 0},\n        {\"user\", user_parser, 0},\n        {\"password\", password_parser, 0},\n        {\"q_depth\", q_depth_parser, 0},\n        {NULL, NULL, 0}\n};\n",
                    "rendered": {
                      "text": "        {\"port\", port_parser, 0},\n        {\"timeout\", timeout_parser, 0},\n        {\"user\", user_parser, 0},\n        {\"password\", password_parser, 0},\n        {\"q_depth\", q_depth_parser, 0},\n        {NULL, NULL, 0}\n};\n",
                      "markdown": "`        {\"port\", port_parser, 0},\n        {\"timeout\", timeout_parser, 0},\n        {\"user\", user_parser, 0},\n        {\"password\", password_parser, 0},\n        {\"q_depth\", q_depth_parser, 0},\n        {NULL, NULL, 0}\n};\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/zos-remote/zos-remote-config.c"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 11,
                  "endLine": 65,
                  "endColumn": 19,
                  "snippet": {
                    "text": "static int port_parser(struct nv_pair *, int, plugin_conf_t *);\nstatic int timeout_parser(struct nv_pair *, int, plugin_conf_t *);\nstatic int user_parser(struct nv_pair *, int, plugin_conf_t *);\nstatic int password_parser(struct nv_pair *, int, plugin_conf_t *);\nstatic int q_depth_parser(struct nv_pair *, int, plugin_conf_t *);\nstatic int sanity_check(plugin_conf_t *);\n\n",
                    "rendered": {
                      "text": "static int port_parser(struct nv_pair *, int, plugin_conf_t *);\nstatic int timeout_parser(struct nv_pair *, int, plugin_conf_t *);\nstatic int user_parser(struct nv_pair *, int, plugin_conf_t *);\nstatic int password_parser(struct nv_pair *, int, plugin_conf_t *);\nstatic int q_depth_parser(struct nv_pair *, int, plugin_conf_t *);\nstatic int sanity_check(plugin_conf_t *);\n\n",
                      "markdown": "`static int port_parser(struct nv_pair *, int, plugin_conf_t *);\nstatic int timeout_parser(struct nv_pair *, int, plugin_conf_t *);\nstatic int user_parser(struct nv_pair *, int, plugin_conf_t *);\nstatic int password_parser(struct nv_pair *, int, plugin_conf_t *);\nstatic int q_depth_parser(struct nv_pair *, int, plugin_conf_t *);\nstatic int sanity_check(plugin_conf_t *);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/zos-remote/zos-remote-config.c"
                },
                "region": {
                  "startLine": 412,
                  "startColumn": 43,
                  "endLine": 412,
                  "endColumn": 51,
                  "snippet": {
                    "text": "{\n        /* Error checking */\n        if (!c->server) {\n                log_err(\"Error - no server hostname given\");\n                return 1;\n        }\n\n",
                    "rendered": {
                      "text": "{\n        /* Error checking */\n        if (!c->server) {\n                log_err(\"Error - no server hostname given\");\n                return 1;\n        }\n\n",
                      "markdown": "`{\n        /* Error checking */\n        if (!c->server) {\n                log_err(\"Error - no server hostname given\");\n                return 1;\n        }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/zos-remote/zos-remote-config.c"
                },
                "region": {
                  "startLine": 427,
                  "startColumn": 32,
                  "endLine": 427,
                  "endColumn": 41,
                  "snippet": {
                    "text": "        }\n        \n        if (!c->timeout) {\n                log_err(\"Error - timeout can't be zero\");\n                return 1;\n        }\n        return 0;\n",
                    "rendered": {
                      "text": "        }\n        \n        if (!c->timeout) {\n                log_err(\"Error - timeout can't be zero\");\n                return 1;\n        }\n        return 0;\n",
                      "markdown": "`        }\n        \n        if (!c->timeout) {\n                log_err(\"Error - timeout can't be zero\");\n                return 1;\n        }\n        return 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/zos-remote/zos-remote-ldap.c"
                },
                "region": {
                  "startLine": 279,
                  "startColumn": 41,
                  "endLine": 279,
                  "endColumn": 49,
                  "snippet": {
                    "text": "                  bindusr);\n\n        cred.bv_val = (char *) zos_remote->password;\n        cred.bv_len = strlen(zos_remote->password);\n        \n        rc = ldap_sasl_bind_s(zos_remote->ld, bindusr,\n                              LDAP_SASL_SIMPLE, &cred,\n",
                    "rendered": {
                      "text": "                  bindusr);\n\n        cred.bv_val = (char *) zos_remote->password;\n        cred.bv_len = strlen(zos_remote->password);\n        \n        rc = ldap_sasl_bind_s(zos_remote->ld, bindusr,\n                              LDAP_SASL_SIMPLE, &cred,\n",
                      "markdown": "`                  bindusr);\n\n        cred.bv_val = (char *) zos_remote->password;\n        cred.bv_len = strlen(zos_remote->password);\n        \n        rc = ldap_sasl_bind_s(zos_remote->ld, bindusr,\n                              LDAP_SASL_SIMPLE, &cred,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/zos-remote/zos-remote-ldap.c"
                },
                "region": {
                  "startLine": 278,
                  "startColumn": 43,
                  "endLine": 278,
                  "endColumn": 51,
                  "snippet": {
                    "text": "        log_debug(\"Attempting BIND. User '%s', password '<not shown>'\",\n                  bindusr);\n\n        cred.bv_val = (char *) zos_remote->password;\n        cred.bv_len = strlen(zos_remote->password);\n        \n        rc = ldap_sasl_bind_s(zos_remote->ld, bindusr,\n",
                    "rendered": {
                      "text": "        log_debug(\"Attempting BIND. User '%s', password '<not shown>'\",\n                  bindusr);\n\n        cred.bv_val = (char *) zos_remote->password;\n        cred.bv_len = strlen(zos_remote->password);\n        \n        rc = ldap_sasl_bind_s(zos_remote->ld, bindusr,\n",
                      "markdown": "`        log_debug(\"Attempting BIND. User '%s', password '<not shown>'\",\n                  bindusr);\n\n        cred.bv_val = (char *) zos_remote->password;\n        cred.bv_len = strlen(zos_remote->password);\n        \n        rc = ldap_sasl_bind_s(zos_remote->ld, bindusr,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/zos-remote/zos-remote-ldap.c"
                },
                "region": {
                  "startLine": 275,
                  "startColumn": 47,
                  "endLine": 275,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\n        snprintf(bindusr, 255, \"racfid=%s,cn=ictx\", zos_remote->user);\n\n        log_debug(\"Attempting BIND. User '%s', password '<not shown>'\",\n                  bindusr);\n\n        cred.bv_val = (char *) zos_remote->password;\n",
                    "rendered": {
                      "text": "\n        snprintf(bindusr, 255, \"racfid=%s,cn=ictx\", zos_remote->user);\n\n        log_debug(\"Attempting BIND. User '%s', password '<not shown>'\",\n                  bindusr);\n\n        cred.bv_val = (char *) zos_remote->password;\n",
                      "markdown": "`\n        snprintf(bindusr, 255, \"racfid=%s,cn=ictx\", zos_remote->user);\n\n        log_debug(\"Attempting BIND. User '%s', password '<not shown>'\",\n                  bindusr);\n\n        cred.bv_val = (char *) zos_remote->password;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/zos-remote/zos-remote-ldap.c"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 25,
                  "endLine": 163,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n        free(zos_remote->server);\n        free(zos_remote->user);\n        free(zos_remote->password);\n}\n\nchar *zos_remote_err2string(int err)\n",
                    "rendered": {
                      "text": "\n        free(zos_remote->server);\n        free(zos_remote->user);\n        free(zos_remote->password);\n}\n\nchar *zos_remote_err2string(int err)\n",
                      "markdown": "`\n        free(zos_remote->server);\n        free(zos_remote->user);\n        free(zos_remote->password);\n}\n\nchar *zos_remote_err2string(int err)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/zos-remote/zos-remote-ldap.c"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 69,
                  "endLine": 149,
                  "endColumn": 77,
                  "snippet": {
                    "text": "        zos_remote->timeout = timeout;\n        zos_remote->connected = 0;\n\n        if (!zos_remote->server || !zos_remote->user || !zos_remote->password) {\n                log_err(\"Error allocating memory for session members\");\n                return ICTX_E_FATAL;\n        }\n",
                    "rendered": {
                      "text": "        zos_remote->timeout = timeout;\n        zos_remote->connected = 0;\n\n        if (!zos_remote->server || !zos_remote->user || !zos_remote->password) {\n                log_err(\"Error allocating memory for session members\");\n                return ICTX_E_FATAL;\n        }\n",
                      "markdown": "`        zos_remote->timeout = timeout;\n        zos_remote->connected = 0;\n\n        if (!zos_remote->server || !zos_remote->user || !zos_remote->password) {\n                log_err(\"Error allocating memory for session members\");\n                return ICTX_E_FATAL;\n        }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/zos-remote/zos-remote-ldap.c"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 38,
                  "endLine": 145,
                  "endColumn": 46,
                  "snippet": {
                    "text": "        zos_remote->server = strdup(server);\n        zos_remote->port = port;\n        zos_remote->user = strdup(user);\n        zos_remote->password = strdup(password);\n        zos_remote->timeout = timeout;\n        zos_remote->connected = 0;\n\n",
                    "rendered": {
                      "text": "        zos_remote->server = strdup(server);\n        zos_remote->port = port;\n        zos_remote->user = strdup(user);\n        zos_remote->password = strdup(password);\n        zos_remote->timeout = timeout;\n        zos_remote->connected = 0;\n\n",
                      "markdown": "`        zos_remote->server = strdup(server);\n        zos_remote->port = port;\n        zos_remote->user = strdup(user);\n        zos_remote->password = strdup(password);\n        zos_remote->timeout = timeout;\n        zos_remote->connected = 0;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/zos-remote/zos-remote-ldap.c"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 20,
                  "endLine": 145,
                  "endColumn": 28,
                  "snippet": {
                    "text": "        zos_remote->server = strdup(server);\n        zos_remote->port = port;\n        zos_remote->user = strdup(user);\n        zos_remote->password = strdup(password);\n        zos_remote->timeout = timeout;\n        zos_remote->connected = 0;\n\n",
                    "rendered": {
                      "text": "        zos_remote->server = strdup(server);\n        zos_remote->port = port;\n        zos_remote->user = strdup(user);\n        zos_remote->password = strdup(password);\n        zos_remote->timeout = timeout;\n        zos_remote->connected = 0;\n\n",
                      "markdown": "`        zos_remote->server = strdup(server);\n        zos_remote->port = port;\n        zos_remote->user = strdup(user);\n        zos_remote->password = strdup(password);\n        zos_remote->timeout = timeout;\n        zos_remote->connected = 0;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/zos-remote/zos-remote-ldap.c"
                },
                "region": {
                  "startLine": 138,
                  "startColumn": 46,
                  "endLine": 138,
                  "endColumn": 54,
                  "snippet": {
                    "text": "int zos_remote_init(ZOS_REMOTE *zos_remote, const char *server, int port,\n              const char *user, const char *password, int timeout)\n{\n        if (server == NULL || user == NULL || password == NULL) {\n           log_err(\"Error: required parameters are not present in config file\");\n           return ICTX_E_FATAL;\n        }\n",
                    "rendered": {
                      "text": "int zos_remote_init(ZOS_REMOTE *zos_remote, const char *server, int port,\n              const char *user, const char *password, int timeout)\n{\n        if (server == NULL || user == NULL || password == NULL) {\n           log_err(\"Error: required parameters are not present in config file\");\n           return ICTX_E_FATAL;\n        }\n",
                      "markdown": "`int zos_remote_init(ZOS_REMOTE *zos_remote, const char *server, int port,\n              const char *user, const char *password, int timeout)\n{\n        if (server == NULL || user == NULL || password == NULL) {\n           log_err(\"Error: required parameters are not present in config file\");\n           return ICTX_E_FATAL;\n        }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/zos-remote/zos-remote-ldap.c"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 44,
                  "endLine": 136,
                  "endColumn": 52,
                  "snippet": {
                    "text": "}\n\nint zos_remote_init(ZOS_REMOTE *zos_remote, const char *server, int port,\n              const char *user, const char *password, int timeout)\n{\n        if (server == NULL || user == NULL || password == NULL) {\n           log_err(\"Error: required parameters are not present in config file\");\n",
                    "rendered": {
                      "text": "}\n\nint zos_remote_init(ZOS_REMOTE *zos_remote, const char *server, int port,\n              const char *user, const char *password, int timeout)\n{\n        if (server == NULL || user == NULL || password == NULL) {\n           log_err(\"Error: required parameters are not present in config file\");\n",
                      "markdown": "`}\n\nint zos_remote_init(ZOS_REMOTE *zos_remote, const char *server, int port,\n              const char *user, const char *password, int timeout)\n{\n        if (server == NULL || user == NULL || password == NULL) {\n           log_err(\"Error: required parameters are not present in config file\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/zos-remote/zos-remote-ldap.c"
                },
                "region": {
                  "startLine": 212,
                  "startColumn": 68,
                  "endLine": 212,
                  "endColumn": 72,
                  "snippet": {
                    "text": "                goto end;\n        }\n\n        log_debug(\"Initializing z/OS Remote-services LDAP connection at %s\", uri);\n        /* Get a handle to an LDAP connection */\n        rc = ldap_initialize(&zos_remote->ld, uri);\n        if (rc != LDAP_SUCCESS) {\n",
                    "rendered": {
                      "text": "                goto end;\n        }\n\n        log_debug(\"Initializing z/OS Remote-services LDAP connection at %s\", uri);\n        /* Get a handle to an LDAP connection */\n        rc = ldap_initialize(&zos_remote->ld, uri);\n        if (rc != LDAP_SUCCESS) {\n",
                      "markdown": "`                goto end;\n        }\n\n        log_debug(\"Initializing z/OS Remote-services LDAP connection at %s\", uri);\n        /* Get a handle to an LDAP connection */\n        rc = ldap_initialize(&zos_remote->ld, uri);\n        if (rc != LDAP_SUCCESS) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/zos-remote/zos-remote-ldap.c"
                },
                "region": {
                  "startLine": 187,
                  "startColumn": 68,
                  "endLine": 187,
                  "endColumn": 72,
                  "snippet": {
                    "text": "            \n#ifdef LDAP_DEPRECATED\n\n        log_debug(\"Initializing z/OS Remote-services LDAP connection at ldap://%s:%d\",\n                  zos_remote->server, zos_remote->port);\n        zos_remote->ld = ldap_init(zos_remote->server\n                             zos_remote->port ? zos_remote->port : LDAP_PORT);\n",
                    "rendered": {
                      "text": "            \n#ifdef LDAP_DEPRECATED\n\n        log_debug(\"Initializing z/OS Remote-services LDAP connection at ldap://%s:%d\",\n                  zos_remote->server, zos_remote->port);\n        zos_remote->ld = ldap_init(zos_remote->server\n                             zos_remote->port ? zos_remote->port : LDAP_PORT);\n",
                      "markdown": "`            \n#ifdef LDAP_DEPRECATED\n\n        log_debug(\"Initializing z/OS Remote-services LDAP connection at ldap://%s:%d\",\n                  zos_remote->server, zos_remote->port);\n        zos_remote->ld = ldap_init(zos_remote->server\n                             zos_remote->port ? zos_remote->port : LDAP_PORT);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/zos-remote/zos-remote-ldap.c"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 64,
                  "endLine": 69,
                  "endColumn": 73,
                  "snippet": {
                    "text": "REQ,       \"NOTREQ - No logging required\"},\n        {ZOS_REMOTE_MAJOR_UNDETERMINED, \"UNDETERMINED - Undetermined result\"},\n        {ZOS_REMOTE_MAJOR_UNAUTHORIZED, \"UNAUTHORIZED - The user does not have authority the R_auditx service\"},\n        {ZOS_REMOTE_MAJOR_RACROUTE,     \"RACROUTE - The R_auditx service returned an unexpected error\"},\n        {ZOS_REMOTE_MAJOR_VAL_ERR,      \"VAL_ERR - Value error in request\"},\n        {ZOS_REMOTE_MAJOR_ENC_ERR,      \"ENC_ERR - DER decoding error in request\"},\n        {ZOS_REMOTE_MAJOR_UNSUF_AUTH,   \"UNSUF_AUTH - The user has insufficient authority for the requested",
                    "rendered": {
                      "text": "REQ,       \"NOTREQ - No logging required\"},\n        {ZOS_REMOTE_MAJOR_UNDETERMINED, \"UNDETERMINED - Undetermined result\"},\n        {ZOS_REMOTE_MAJOR_UNAUTHORIZED, \"UNAUTHORIZED - The user does not have authority the R_auditx service\"},\n        {ZOS_REMOTE_MAJOR_RACROUTE,     \"RACROUTE - The R_auditx service returned an unexpected error\"},\n        {ZOS_REMOTE_MAJOR_VAL_ERR,      \"VAL_ERR - Value error in request\"},\n        {ZOS_REMOTE_MAJOR_ENC_ERR,      \"ENC_ERR - DER decoding error in request\"},\n        {ZOS_REMOTE_MAJOR_UNSUF_AUTH,   \"UNSUF_AUTH - The user has insufficient authority for the requested",
                      "markdown": "`REQ,       \"NOTREQ - No logging required\"},\n        {ZOS_REMOTE_MAJOR_UNDETERMINED, \"UNDETERMINED - Undetermined result\"},\n        {ZOS_REMOTE_MAJOR_UNAUTHORIZED, \"UNAUTHORIZED - The user does not have authority the R_auditx service\"},\n        {ZOS_REMOTE_MAJOR_RACROUTE,     \"RACROUTE - The R_auditx service returned an unexpected error\"},\n        {ZOS_REMOTE_MAJOR_VAL_ERR,      \"VAL_ERR - Value error in request\"},\n        {ZOS_REMOTE_MAJOR_ENC_ERR,      \"ENC_ERR - DER decoding error in request\"},\n        {ZOS_REMOTE_MAJOR_UNSUF_AUTH,   \"UNSUF_AUTH - The user has insufficient authority for the requested`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/zos-remote/Makefile.am"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 26,
                  "endLine": 3,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# Makefile.am--\n# Copyright (C) 2007,2008 International Business Machines  Corp.\n# Copyright (C) 2011, 2015 Red Hat., Durham, North Carolina.\n# All Rights Reserved.\n#\n# This program is free software; you can redistribute it and/or modify\n",
                    "rendered": {
                      "text": "# Makefile.am--\n# Copyright (C) 2007,2008 International Business Machines  Corp.\n# Copyright (C) 2011, 2015 Red Hat., Durham, North Carolina.\n# All Rights Reserved.\n#\n# This program is free software; you can redistribute it and/or modify\n",
                      "markdown": "`# Makefile.am--\n# Copyright (C) 2007,2008 International Business Machines  Corp.\n# Copyright (C) 2011, 2015 Red Hat., Durham, North Carolina.\n# All Rights Reserved.\n#\n# This program is free software; you can redistribute it and/or modify\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/zos-remote/zos-remote-ldap.h"
                },
                "region": {
                  "startLine": 294,
                  "startColumn": 27,
                  "endLine": 294,
                  "endColumn": 35,
                  "snippet": {
                    "text": " * Initializes z/OS Remote-services (LDAP to ITDS) connection,\n * binds to ITDS Server using configured RACF ID\n * Args are:\n * server, bind user, bind password, server port, timeout\n * Caller must call zos_remote_destroy() to free memory allocation\n */\nint zos_remote_init(ZOS_REMOTE *, const char *, int, const char *, \n",
                    "rendered": {
                      "text": " * Initializes z/OS Remote-services (LDAP to ITDS) connection,\n * binds to ITDS Server using configured RACF ID\n * Args are:\n * server, bind user, bind password, server port, timeout\n * Caller must call zos_remote_destroy() to free memory allocation\n */\nint zos_remote_init(ZOS_REMOTE *, const char *, int, const char *, \n",
                      "markdown": "` * Initializes z/OS Remote-services (LDAP to ITDS) connection,\n * binds to ITDS Server using configured RACF ID\n * Args are:\n * server, bind user, bind password, server port, timeout\n * Caller must call zos_remote_destroy() to free memory allocation\n */\nint zos_remote_init(ZOS_REMOTE *, const char *, int, const char *, \n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/zos-remote/zos-remote-ldap.h"
                },
                "region": {
                  "startLine": 281,
                  "startColumn": 10,
                  "endLine": 281,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    char *server;\n    unsigned int port;\n    char *user;\n    char *password;\n    unsigned int timeout;\n    LDAP *ld;\n    int connected;\n",
                    "rendered": {
                      "text": "    char *server;\n    unsigned int port;\n    char *user;\n    char *password;\n    unsigned int timeout;\n    LDAP *ld;\n    int connected;\n",
                      "markdown": "`    char *server;\n    unsigned int port;\n    char *user;\n    char *password;\n    unsigned int timeout;\n    LDAP *ld;\n    int connected;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/zos-remote/zos-remote-config.h"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 14,
                  "endLine": 38,
                  "endColumn": 22,
                  "snippet": {
                    "text": "        char *server;\n        unsigned int port;\n        char *user;\n        char *password;\n        long timeout;\n        unsigned int q_depth;\n        unsigned int counter;\n",
                    "rendered": {
                      "text": "        char *server;\n        unsigned int port;\n        char *user;\n        char *password;\n        long timeout;\n        unsigned int q_depth;\n        unsigned int counter;\n",
                      "markdown": "`        char *server;\n        unsigned int port;\n        char *user;\n        char *password;\n        long timeout;\n        unsigned int q_depth;\n        unsigned int counter;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/remote/audisp-remote.c"
                },
                "region": {
                  "startLine": 589,
                  "startColumn": 17,
                  "endLine": 589,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\t\t\t\t\t\tconnected_once = 1;\n\t\t\t\t\t\t} else if (!connected_once) {\n\t\t\t\t\t\t\tstartup_failure_handler(\n\t\t\t\"First attempt at connecting to server unsuccessful\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tquiet = 0;\n\t\t\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\t\t\t\tconnected_once = 1;\n\t\t\t\t\t\t} else if (!connected_once) {\n\t\t\t\t\t\t\tstartup_failure_handler(\n\t\t\t\"First attempt at connecting to server unsuccessful\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tquiet = 0;\n\t\t\t\t\t}\n",
                      "markdown": "`\t\t\t\t\t\t\tconnected_once = 1;\n\t\t\t\t\t\t} else if (!connected_once) {\n\t\t\t\t\t\t\tstartup_failure_handler(\n\t\t\t\"First attempt at connecting to server unsuccessful\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tquiet = 0;\n\t\t\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/remote/audisp-remote.c"
                },
                "region": {
                  "startLine": 1575,
                  "startColumn": 37,
                  "endLine": 1575,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\t\treturn -1;\n\t}\n\tif ((now - then) > config.max_time_per_record) {\n\t\tnetwork_failure_handler (\"max retry time exhausted\");\n\t\treturn -1;\n\t}\n\n",
                    "rendered": {
                      "text": "\t\treturn -1;\n\t}\n\tif ((now - then) > config.max_time_per_record) {\n\t\tnetwork_failure_handler (\"max retry time exhausted\");\n\t\treturn -1;\n\t}\n\n",
                      "markdown": "`\t\treturn -1;\n\t}\n\tif ((now - then) > config.max_time_per_record) {\n\t\tnetwork_failure_handler (\"max retry time exhausted\");\n\t\treturn -1;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/remote/audisp-remote.c"
                },
                "region": {
                  "startLine": 1558,
                  "endLine": 1558,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tsequence_id ++;\n\ntry_again:\n\ttime (&now);\n\tif (then == 0)\n\t\tthen = now;\n\n",
                    "rendered": {
                      "text": "\tsequence_id ++;\n\ntry_again:\n\ttime (&now);\n\tif (then == 0)\n\t\tthen = now;\n\n",
                      "markdown": "`\tsequence_id ++;\n\ntry_again:\n\ttime (&now);\n\tif (then == 0)\n\t\tthen = now;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/remote/audisp-remote.c"
                },
                "region": {
                  "startLine": 1257,
                  "startColumn": 15,
                  "endLine": 1257,
                  "endColumn": 24,
                  "snippet": {
                    "text": "// Returns positive number on success, -1 on failure\nstatic int ar_read (int sk, void *buf, int len)\n{\n\tint rc = 0, r, timeout = config.max_time_per_record * 1000;\n\tstruct pollfd pfd;\n\n\terrno = 0;\n",
                    "rendered": {
                      "text": "// Returns positive number on success, -1 on failure\nstatic int ar_read (int sk, void *buf, int len)\n{\n\tint rc = 0, r, timeout = config.max_time_per_record * 1000;\n\tstruct pollfd pfd;\n\n\terrno = 0;\n",
                      "markdown": "`// Returns positive number on success, -1 on failure\nstatic int ar_read (int sk, void *buf, int len)\n{\n\tint rc = 0, r, timeout = config.max_time_per_record * 1000;\n\tstruct pollfd pfd;\n\n\terrno = 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/init.d/Makefile.am"
                },
                "region": {
                  "startLine": 63,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t$(INSTALL_SCRIPT) -D -m 750 ${srcdir}/auditd.stop ${DESTDIR}${legacydir}/stop\n\t$(INSTALL_SCRIPT) -D -m 750 ${srcdir}/auditd.restart ${DESTDIR}${legacydir}/restart\n\t$(INSTALL_SCRIPT) -D -m 750 ${srcdir}/auditd.condrestart ${DESTDIR}${legacydir}/condrestart\n\tchmod 0755 $(DESTDIR)$(sbindir)/augenrules\n\n\nuninstall-hook:\n",
                    "rendered": {
                      "text": "\t$(INSTALL_SCRIPT) -D -m 750 ${srcdir}/auditd.stop ${DESTDIR}${legacydir}/stop\n\t$(INSTALL_SCRIPT) -D -m 750 ${srcdir}/auditd.restart ${DESTDIR}${legacydir}/restart\n\t$(INSTALL_SCRIPT) -D -m 750 ${srcdir}/auditd.condrestart ${DESTDIR}${legacydir}/condrestart\n\tchmod 0755 $(DESTDIR)$(sbindir)/augenrules\n\n\nuninstall-hook:\n",
                      "markdown": "`\t$(INSTALL_SCRIPT) -D -m 750 ${srcdir}/auditd.stop ${DESTDIR}${legacydir}/stop\n\t$(INSTALL_SCRIPT) -D -m 750 ${srcdir}/auditd.restart ${DESTDIR}${legacydir}/restart\n\t$(INSTALL_SCRIPT) -D -m 750 ${srcdir}/auditd.condrestart ${DESTDIR}${legacydir}/condrestart\n\tchmod 0755 $(DESTDIR)$(sbindir)/augenrules\n\n\nuninstall-hook:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/init.d/Makefile.am"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 32,
                  "endLine": 2,
                  "endColumn": 37,
                  "snippet": {
                    "text": "# Makefile.am--\n# Copyright 2004-07,2012-13,2018 Red Hat Inc.\n# All Rights Reserved.\n#\n# This program is free software; you can redistribute it and/or modify\n",
                    "rendered": {
                      "text": "# Makefile.am--\n# Copyright 2004-07,2012-13,2018 Red Hat Inc.\n# All Rights Reserved.\n#\n# This program is free software; you can redistribute it and/or modify\n",
                      "markdown": "`# Makefile.am--\n# Copyright 2004-07,2012-13,2018 Red Hat Inc.\n# All Rights Reserved.\n#\n# This program is free software; you can redistribute it and/or modify\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/init.d/auditd.rotate"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 40,
                  "endLine": 2,
                  "endColumn": 49,
                  "snippet": {
                    "text": "#!/bin/sh\n# Helper script to provide legacy auditd service options not \n# directly supported by systemd\n\n# Check that we are root ... so non-root users stop here\n",
                    "rendered": {
                      "text": "#!/bin/sh\n# Helper script to provide legacy auditd service options not \n# directly supported by systemd\n\n# Check that we are root ... so non-root users stop here\n",
                      "markdown": "`#!/bin/sh\n# Helper script to provide legacy auditd service options not \n# directly supported by systemd\n\n# Check that we are root ... so non-root users stop here\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/init.d/auditd.rotate"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 8,
                  "endLine": 2,
                  "endColumn": 16,
                  "snippet": {
                    "text": "#!/bin/sh\n# Helper script to provide legacy auditd service options not \n# directly supported by systemd\n\n# Check that we are root ... so non-root users stop here\n",
                    "rendered": {
                      "text": "#!/bin/sh\n# Helper script to provide legacy auditd service options not \n# directly supported by systemd\n\n# Check that we are root ... so non-root users stop here\n",
                      "markdown": "`#!/bin/sh\n# Helper script to provide legacy auditd service options not \n# directly supported by systemd\n\n# Check that we are root ... so non-root users stop here\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/bindings/swig/python3/Makefile.am"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 16,
                  "endLine": 2,
                  "endColumn": 21,
                  "snippet": {
                    "text": "# Makefile.am -- \n# Copyright 2015 Red Hat Inc.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                    "rendered": {
                      "text": "# Makefile.am -- \n# Copyright 2015 Red Hat Inc.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                      "markdown": "`# Makefile.am -- \n# Copyright 2015 Red Hat Inc.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/bindings/swig/src/auditswig.i"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 36,
                  "endLine": 3,
                  "endColumn": 41,
                  "snippet": {
                    "text": "/* Author: Dan Walsh\n *\n * Copyright (C) 2005,2006,2009,2023 Red Hat\n * \n *  This library is free software; you can redistribute it and/or\n *  modify it under the terms of the GNU Lesser General Public\n",
                    "rendered": {
                      "text": "/* Author: Dan Walsh\n *\n * Copyright (C) 2005,2006,2009,2023 Red Hat\n * \n *  This library is free software; you can redistribute it and/or\n *  modify it under the terms of the GNU Lesser General Public\n",
                      "markdown": "`/* Author: Dan Walsh\n *\n * Copyright (C) 2005,2006,2009,2023 Red Hat\n * \n *  This library is free software; you can redistribute it and/or\n *  modify it under the terms of the GNU Lesser General Public\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/bindings/swig/src/Makefile.am"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 16,
                  "endLine": 2,
                  "endColumn": 21,
                  "snippet": {
                    "text": "# Makefile.am --\n# Copyright 2015 Red Hat Inc.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                    "rendered": {
                      "text": "# Makefile.am --\n# Copyright 2015 Red Hat Inc.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                      "markdown": "`# Makefile.am --\n# Copyright 2015 Red Hat Inc.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/bindings/swig/Makefile.am"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 16,
                  "endLine": 2,
                  "endColumn": 21,
                  "snippet": {
                    "text": "# Makefile.am --\n# Copyright 2023 Red Hat Inc.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                    "rendered": {
                      "text": "# Makefile.am --\n# Copyright 2023 Red Hat Inc.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                      "markdown": "`# Makefile.am --\n# Copyright 2023 Red Hat Inc.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/bindings/golang/Makefile.am"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 20,
                  "endLine": 45,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t@cp ${top_srcdir}/lib/libaudit.h audit\n\t## Disable for now. Golang doesn't allow overriding search \n\t## paths from the command line.\n\t##[ -f test.go ] || cp ${top_srcdir}/bindings/golang/test.go .\n\t##PKG_CONFIG_PATH=${abs_top_builddir}/lib/:$(PKG_CONFIG_PATH) GOPATH=$(pwd) $(GOLANG) run test.go\n\t@rm -rf audit\nendif\n",
                    "rendered": {
                      "text": "\t@cp ${top_srcdir}/lib/libaudit.h audit\n\t## Disable for now. Golang doesn't allow overriding search \n\t## paths from the command line.\n\t##[ -f test.go ] || cp ${top_srcdir}/bindings/golang/test.go .\n\t##PKG_CONFIG_PATH=${abs_top_builddir}/lib/:$(PKG_CONFIG_PATH) GOPATH=$(pwd) $(GOLANG) run test.go\n\t@rm -rf audit\nendif\n",
                      "markdown": "`\t@cp ${top_srcdir}/lib/libaudit.h audit\n\t## Disable for now. Golang doesn't allow overriding search \n\t## paths from the command line.\n\t##[ -f test.go ] || cp ${top_srcdir}/bindings/golang/test.go .\n\t##PKG_CONFIG_PATH=${abs_top_builddir}/lib/:$(PKG_CONFIG_PATH) GOPATH=$(pwd) $(GOLANG) run test.go\n\t@rm -rf audit\nendif\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/bindings/golang/Makefile.am"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 19,
                  "endLine": 2,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# Makefile.am --\n# Copyright 2014,16 Red Hat Inc., Durham, North Carolina.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                    "rendered": {
                      "text": "# Makefile.am --\n# Copyright 2014,16 Red Hat Inc., Durham, North Carolina.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                      "markdown": "`# Makefile.am --\n# Copyright 2014,16 Red Hat Inc., Durham, North Carolina.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/bindings/python/python3/Makefile.am"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 21,
                  "endLine": 2,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# Makefile.am --\n# Copyright 2015,2024 Red Hat Inc.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                    "rendered": {
                      "text": "# Makefile.am --\n# Copyright 2015,2024 Red Hat Inc.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                      "markdown": "`# Makefile.am --\n# Copyright 2015,2024 Red Hat Inc.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/bindings/python/auparse_python.c"
                },
                "region": {
                  "startLine": 2059,
                  "startColumn": 37,
                  "endLine": 2059,
                  "endColumn": 46,
                  "snippet": {
                    "text": "goto_field_num() will move the internal library cursors to point\\n\\\nto a specific physical field number. Fields within the same record are\\n\\\nnumbered  starting  from  1. This is generally not needed but there are\\n\\\nsome cases where one may want precise control over the exact field\\n\\\nbeing looked at.\\n\\\n\\n\\\nReturns True on success, False if no more fields in current event\\n\\\n",
                    "rendered": {
                      "text": "goto_field_num() will move the internal library cursors to point\\n\\\nto a specific physical field number. Fields within the same record are\\n\\\nnumbered  starting  from  1. This is generally not needed but there are\\n\\\nsome cases where one may want precise control over the exact field\\n\\\nbeing looked at.\\n\\\n\\n\\\nReturns True on success, False if no more fields in current event\\n\\\n",
                      "markdown": "`goto_field_num() will move the internal library cursors to point\\n\\\nto a specific physical field number. Fields within the same record are\\n\\\nnumbered  starting  from  1. This is generally not needed but there are\\n\\\nsome cases where one may want precise control over the exact field\\n\\\nbeing looked at.\\n\\\n\\n\\\nReturns True on success, False if no more fields in current event\\n\\\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/bindings/python/auparse_python.c"
                },
                "region": {
                  "startLine": 1838,
                  "startColumn": 59,
                  "endLine": 1838,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\"auparse_get_line_number() get line number where record was found\\n\\\n\\n\\\nget_line_number will return the source input line number for\\n\\\nthe current record of the current event. Line numbers start at 1.  If\\n\\\nthe source input type is AUSOURCE_FILE_ARRAY the line numbering will\\n\\\nreset back to 1 each time a new life in the file array is opened.\\n\\\nRaises exception (RuntimeError) on error.\\n\\\n",
                    "rendered": {
                      "text": "\"auparse_get_line_number() get line number where record was found\\n\\\n\\n\\\nget_line_number will return the source input line number for\\n\\\nthe current record of the current event. Line numbers start at 1.  If\\n\\\nthe source input type is AUSOURCE_FILE_ARRAY the line numbering will\\n\\\nreset back to 1 each time a new life in the file array is opened.\\n\\\nRaises exception (RuntimeError) on error.\\n\\\n",
                      "markdown": "`\"auparse_get_line_number() get line number where record was found\\n\\\n\\n\\\nget_line_number will return the source input line number for\\n\\\nthe current record of the current event. Line numbers start at 1.  If\\n\\\nthe source input type is AUSOURCE_FILE_ARRAY the line numbering will\\n\\\nreset back to 1 each time a new life in the file array is opened.\\n\\\nRaises exception (RuntimeError) on error.\\n\\\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/bindings/python/auparse_python.c"
                },
                "region": {
                  "startLine": 1757,
                  "startColumn": 37,
                  "endLine": 1757,
                  "endColumn": 46,
                  "snippet": {
                    "text": "goto_record_num() will move the internal library cursors to point\\n\\\nto a specific physical record number. Records within the same event are\\n\\\nnumbered  starting  from  0. This is generally not needed but there are\\n\\\nsome cases where one may want precise control  over  the  exact  record\\n\\\nbeing looked at.\\n\\\n\\n\\\nReturns True on success, False if no more records in current event\\n\\\n",
                    "rendered": {
                      "text": "goto_record_num() will move the internal library cursors to point\\n\\\nto a specific physical record number. Records within the same event are\\n\\\nnumbered  starting  from  0. This is generally not needed but there are\\n\\\nsome cases where one may want precise control  over  the  exact  record\\n\\\nbeing looked at.\\n\\\n\\n\\\nReturns True on success, False if no more records in current event\\n\\\n",
                      "markdown": "`goto_record_num() will move the internal library cursors to point\\n\\\nto a specific physical record number. Records within the same event are\\n\\\nnumbered  starting  from  0. This is generally not needed but there are\\n\\\nsome cases where one may want precise control  over  the  exact  record\\n\\\nbeing looked at.\\n\\\n\\n\\\nReturns True on success, False if no more records in current event\\n\\\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/bindings/python/auparse_python.c"
                },
                "region": {
                  "startLine": 1170,
                  "startColumn": 44,
                  "endLine": 1170,
                  "endColumn": 48,
                  "snippet": {
                    "text": "PyDoc_STRVAR(parse_next_event_doc,\n\"parse_next_event() Advance the parser to the next event.\\n\\\n\\n\\\nparse_next_event() will position the cursors at the first field of the first\\n\\\nrecord of the next event in a file or buffer. It does not skip events\\n\\\nor honor any search criteria that may be stored.\\n\\\n\\n\\\n",
                    "rendered": {
                      "text": "PyDoc_STRVAR(parse_next_event_doc,\n\"parse_next_event() Advance the parser to the next event.\\n\\\n\\n\\\nparse_next_event() will position the cursors at the first field of the first\\n\\\nrecord of the next event in a file or buffer. It does not skip events\\n\\\nor honor any search criteria that may be stored.\\n\\\n\\n\\\n",
                      "markdown": "`PyDoc_STRVAR(parse_next_event_doc,\n\"parse_next_event() Advance the parser to the next event.\\n\\\n\\n\\\nparse_next_event() will position the cursors at the first field of the first\\n\\\nrecord of the next event in a file or buffer. It does not skip events\\n\\\nor honor any search criteria that may be stored.\\n\\\n\\n\\\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/bindings/python/auparse_python.c"
                },
                "region": {
                  "startLine": 1144,
                  "startColumn": 23,
                  "endLine": 1144,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\\n\\\nsearch_next_event() will scan the input source and evaluate whether\\n\\\nany record in an event contains the data being searched\\n\\\nfor. Evaluation is done at the record level.\\n\\\n\\n\\\nReturns True if a match was found\\n\\\nReturns False if a match was not found.\\n\\\n",
                    "rendered": {
                      "text": "\\n\\\nsearch_next_event() will scan the input source and evaluate whether\\n\\\nany record in an event contains the data being searched\\n\\\nfor. Evaluation is done at the record level.\\n\\\n\\n\\\nReturns True if a match was found\\n\\\nReturns False if a match was not found.\\n\\\n",
                      "markdown": "`\\n\\\nsearch_next_event() will scan the input source and evaluate whether\\n\\\nany record in an event contains the data being searched\\n\\\nfor. Evaluation is done at the record level.\\n\\\n\\n\\\nReturns True if a match was found\\n\\\nReturns False if a match was not found.\\n\\\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/bindings/python/auparse_python.c"
                },
                "region": {
                  "startLine": 2033,
                  "startColumn": 46,
                  "endLine": 2033,
                  "endColumn": 52,
                  "snippet": {
                    "text": " ********************************/\nPyDoc_STRVAR(get_field_num_doc,\n\"get_field_num() get one based record number where auparse is currently at\\n\\\nThe record numbering will reset back to 1 each time a new event is processed.\\n\\\nRaises exception (RuntimeError) on error.\\n\\\n\");\nstatic PyObject *\n",
                    "rendered": {
                      "text": " ********************************/\nPyDoc_STRVAR(get_field_num_doc,\n\"get_field_num() get one based record number where auparse is currently at\\n\\\nThe record numbering will reset back to 1 each time a new event is processed.\\n\\\nRaises exception (RuntimeError) on error.\\n\\\n\");\nstatic PyObject *\n",
                      "markdown": "` ********************************/\nPyDoc_STRVAR(get_field_num_doc,\n\"get_field_num() get one based record number where auparse is currently at\\n\\\nThe record numbering will reset back to 1 each time a new event is processed.\\n\\\nRaises exception (RuntimeError) on error.\\n\\\n\");\nstatic PyObject *\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/bindings/python/auparse_python.c"
                },
                "region": {
                  "startLine": 1975,
                  "startColumn": 49,
                  "endLine": 1975,
                  "endColumn": 55,
                  "snippet": {
                    "text": "PyDoc_STRVAR(find_field_doc,\n\"find_field(name) Search for field name.\\n\\\n\\n\\\nfind_field() will scan all records in an event to find the first\\n\\\noccurrence of the field name passed to it. Searching begins from the\\n\\\ncursor’s current position. The field name is stored for subsequent\\n\\\nsearching.\\n\\\n",
                    "rendered": {
                      "text": "PyDoc_STRVAR(find_field_doc,\n\"find_field(name) Search for field name.\\n\\\n\\n\\\nfind_field() will scan all records in an event to find the first\\n\\\noccurrence of the field name passed to it. Searching begins from the\\n\\\ncursor’s current position. The field name is stored for subsequent\\n\\\nsearching.\\n\\\n",
                      "markdown": "`PyDoc_STRVAR(find_field_doc,\n\"find_field(name) Search for field name.\\n\\\n\\n\\\nfind_field() will scan all records in an event to find the first\\n\\\noccurrence of the field name passed to it. Searching begins from the\\n\\\ncursor’s current position. The field name is stored for subsequent\\n\\\nsearching.\\n\\\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/bindings/python/auparse_python.c"
                },
                "region": {
                  "startLine": 1840,
                  "startColumn": 20,
                  "endLine": 1840,
                  "endColumn": 26,
                  "snippet": {
                    "text": "get_line_number will return the source input line number for\\n\\\nthe current record of the current event. Line numbers start at 1.  If\\n\\\nthe source input type is AUSOURCE_FILE_ARRAY the line numbering will\\n\\\nreset back to 1 each time a new life in the file array is opened.\\n\\\nRaises exception (RuntimeError) on error.\\n\\\n\");\nstatic PyObject *\n",
                    "rendered": {
                      "text": "get_line_number will return the source input line number for\\n\\\nthe current record of the current event. Line numbers start at 1.  If\\n\\\nthe source input type is AUSOURCE_FILE_ARRAY the line numbering will\\n\\\nreset back to 1 each time a new life in the file array is opened.\\n\\\nRaises exception (RuntimeError) on error.\\n\\\n\");\nstatic PyObject *\n",
                      "markdown": "`get_line_number will return the source input line number for\\n\\\nthe current record of the current event. Line numbers start at 1.  If\\n\\\nthe source input type is AUSOURCE_FILE_ARRAY the line numbering will\\n\\\nreset back to 1 each time a new life in the file array is opened.\\n\\\nRaises exception (RuntimeError) on error.\\n\\\n\");\nstatic PyObject *\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/bindings/python/auparse_python.c"
                },
                "region": {
                  "startLine": 1731,
                  "startColumn": 46,
                  "endLine": 1731,
                  "endColumn": 52,
                  "snippet": {
                    "text": " ********************************/\nPyDoc_STRVAR(get_record_num_doc,\n\"get_record_num() get one based record number where auparse is currently at\\n\\\nThe record numbering will reset back to 1 each time a new event is processed.\\n\\\nRaises exception (RuntimeError) on error.\\n\\\n\");\nstatic PyObject *\n",
                    "rendered": {
                      "text": " ********************************/\nPyDoc_STRVAR(get_record_num_doc,\n\"get_record_num() get one based record number where auparse is currently at\\n\\\nThe record numbering will reset back to 1 each time a new event is processed.\\n\\\nRaises exception (RuntimeError) on error.\\n\\\n\");\nstatic PyObject *\n",
                      "markdown": "` ********************************/\nPyDoc_STRVAR(get_record_num_doc,\n\"get_record_num() get one based record number where auparse is currently at\\n\\\nThe record numbering will reset back to 1 each time a new event is processed.\\n\\\nRaises exception (RuntimeError) on error.\\n\\\n\");\nstatic PyObject *\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/bindings/python/auparse_python.c"
                },
                "region": {
                  "startLine": 1140,
                  "startColumn": 20,
                  "endLine": 1140,
                  "endColumn": 26,
                  "snippet": {
                    "text": " * ausearch_next_event\n ********************************/\nPyDoc_STRVAR(search_next_event_doc,\n\"search_next_event() Find the next event that meets search criteria.\\n\\\n\\n\\\nsearch_next_event() will scan the input source and evaluate whether\\n\\\nany record in an event contains the data being searched\\n\\\n",
                    "rendered": {
                      "text": " * ausearch_next_event\n ********************************/\nPyDoc_STRVAR(search_next_event_doc,\n\"search_next_event() Find the next event that meets search criteria.\\n\\\n\\n\\\nsearch_next_event() will scan the input source and evaluate whether\\n\\\nany record in an event contains the data being searched\\n\\\n",
                      "markdown": "` * ausearch_next_event\n ********************************/\nPyDoc_STRVAR(search_next_event_doc,\n\"search_next_event() Find the next event that meets search criteria.\\n\\\n\\n\\\nsearch_next_event() will scan the input source and evaluate whether\\n\\\nany record in an event contains the data being searched\\n\\\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/bindings/python/auparse_python.c"
                },
                "region": {
                  "startLine": 1024,
                  "startColumn": 42,
                  "endLine": 1024,
                  "endColumn": 48,
                  "snippet": {
                    "text": " ********************************/\nPyDoc_STRVAR(search_add_timestamp_item_ex_doc,\n\"search_add_timestamp_item_ex(op, sec, milli, serial, how) Build up search rule\\n\\\nsearch_add_timestamp_item_ex adds an event time condition to the current audit\\n\\\nsearch expression. Its similar to search_add_timestamp_item except it adds\\n\\\nthe event serial number.\\n\\\n\");\n",
                    "rendered": {
                      "text": " ********************************/\nPyDoc_STRVAR(search_add_timestamp_item_ex_doc,\n\"search_add_timestamp_item_ex(op, sec, milli, serial, how) Build up search rule\\n\\\nsearch_add_timestamp_item_ex adds an event time condition to the current audit\\n\\\nsearch expression. Its similar to search_add_timestamp_item except it adds\\n\\\nthe event serial number.\\n\\\n\");\n",
                      "markdown": "` ********************************/\nPyDoc_STRVAR(search_add_timestamp_item_ex_doc,\n\"search_add_timestamp_item_ex(op, sec, milli, serial, how) Build up search rule\\n\\\nsearch_add_timestamp_item_ex adds an event time condition to the current audit\\n\\\nsearch expression. Its similar to search_add_timestamp_item except it adds\\n\\\nthe event serial number.\\n\\\n\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/bindings/python/auparse_python.c"
                },
                "region": {
                  "startLine": 963,
                  "startColumn": 39,
                  "endLine": 963,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\"search_add_timestamp_item(op, sec, milli, how) Build up search rule\\n\\\n\\n\\\n\\n\\\nsearch_add_timestamp_item adds an event time condition to the current audit\\n\\\nsearch expression. The search conditions can then be used to scan logs,\\n\\\nfiles, or buffers for something of interest. The op parameter specifies the\\n\\\ndesired comparison. Legal op values are \\\"<\\\", \\\"<=\\\", \\\">=\\\", \\\">\\\" and\\n\\\n",
                    "rendered": {
                      "text": "\"search_add_timestamp_item(op, sec, milli, how) Build up search rule\\n\\\n\\n\\\n\\n\\\nsearch_add_timestamp_item adds an event time condition to the current audit\\n\\\nsearch expression. The search conditions can then be used to scan logs,\\n\\\nfiles, or buffers for something of interest. The op parameter specifies the\\n\\\ndesired comparison. Legal op values are \\\"<\\\", \\\"<=\\\", \\\">=\\\", \\\">\\\" and\\n\\\n",
                      "markdown": "`\"search_add_timestamp_item(op, sec, milli, how) Build up search rule\\n\\\n\\n\\\n\\n\\\nsearch_add_timestamp_item adds an event time condition to the current audit\\n\\\nsearch expression. The search conditions can then be used to scan logs,\\n\\\nfiles, or buffers for something of interest. The op parameter specifies the\\n\\\ndesired comparison. Legal op values are \\\"<\\\", \\\"<=\\\", \\\">=\\\", \\\">\\\" and\\n\\\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/bindings/python/auparse_python.c"
                },
                "region": {
                  "startLine": 711,
                  "startColumn": 22,
                  "endLine": 711,
                  "endColumn": 31,
                  "snippet": {
                    "text": "PyDoc_STRVAR(set_eoe_timeout_doc,\n\"set_eoe_timeout(tmo) Set audit parser end of event timeout\\n\\\n\\n\\\nThis function sets the timeout used to determine if an event is complete.\\n\\\nReturns None.\\n\\\n\");\nstatic PyObject *\n",
                    "rendered": {
                      "text": "PyDoc_STRVAR(set_eoe_timeout_doc,\n\"set_eoe_timeout(tmo) Set audit parser end of event timeout\\n\\\n\\n\\\nThis function sets the timeout used to determine if an event is complete.\\n\\\nReturns None.\\n\\\n\");\nstatic PyObject *\n",
                      "markdown": "`PyDoc_STRVAR(set_eoe_timeout_doc,\n\"set_eoe_timeout(tmo) Set audit parser end of event timeout\\n\\\n\\n\\\nThis function sets the timeout used to determine if an event is complete.\\n\\\nReturns None.\\n\\\n\");\nstatic PyObject *\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/bindings/python/auparse_python.c"
                },
                "region": {
                  "startLine": 537,
                  "startColumn": 37,
                  "endLine": 537,
                  "endColumn": 46,
                  "snippet": {
                    "text": "PyDoc_STRVAR(feed_age_events_doc,\n\"feed_age_events() age events by the clock\\n\\\n\\n\\\nfeed_age_events() should be called to timeout events by the clock.\\n\\\nAny newly complete events will be sent to the callback function.\\n\\\n\\n\\\nReturns None.\\n\\\n",
                    "rendered": {
                      "text": "PyDoc_STRVAR(feed_age_events_doc,\n\"feed_age_events() age events by the clock\\n\\\n\\n\\\nfeed_age_events() should be called to timeout events by the clock.\\n\\\nAny newly complete events will be sent to the callback function.\\n\\\n\\n\\\nReturns None.\\n\\\n",
                      "markdown": "`PyDoc_STRVAR(feed_age_events_doc,\n\"feed_age_events() age events by the clock\\n\\\n\\n\\\nfeed_age_events() should be called to timeout events by the clock.\\n\\\nAny newly complete events will be sent to the callback function.\\n\\\n\\n\\\nReturns None.\\n\\\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/bindings/python/auparse_python.c"
                },
                "region": {
                  "startLine": 506,
                  "startColumn": 27,
                  "endLine": 506,
                  "endColumn": 33,
                  "snippet": {
                    "text": "AuParser() must have been called with a source type of AUSOURCE_FEED.\\n\\\nThe parser consumes as much data as it can invoking a user supplied\\n\\\ncallback specified with add_callback() with a cb_event_type of\\n\\\nAUPARSE_CB_EVENT_READY each time the parser recognizes a complete event\\n\\\nin the data stream. Data not fully parsed will persist and be prepended\\n\\\nto the next feed data. After all data has been feed to the parser flush_feed()\\n\\\nshould be called to signal the end of input data and flush any pending\\n\\\n",
                    "rendered": {
                      "text": "AuParser() must have been called with a source type of AUSOURCE_FEED.\\n\\\nThe parser consumes as much data as it can invoking a user supplied\\n\\\ncallback specified with add_callback() with a cb_event_type of\\n\\\nAUPARSE_CB_EVENT_READY each time the parser recognizes a complete event\\n\\\nin the data stream. Data not fully parsed will persist and be prepended\\n\\\nto the next feed data. After all data has been feed to the parser flush_feed()\\n\\\nshould be called to signal the end of input data and flush any pending\\n\\\n",
                      "markdown": "`AuParser() must have been called with a source type of AUSOURCE_FEED.\\n\\\nThe parser consumes as much data as it can invoking a user supplied\\n\\\ncallback specified with add_callback() with a cb_event_type of\\n\\\nAUPARSE_CB_EVENT_READY each time the parser recognizes a complete event\\n\\\nin the data stream. Data not fully parsed will persist and be prepended\\n\\\nto the next feed data. After all data has been feed to the parser flush_feed()\\n\\\nshould be called to signal the end of input data and flush any pending\\n\\\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/bindings/Makefile.am"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 24,
                  "endLine": 2,
                  "endColumn": 29,
                  "snippet": {
                    "text": "# Makefile.am --\n# Copyright 2007,2014-16 Red Hat Inc., Durham, North Carolina.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                    "rendered": {
                      "text": "# Makefile.am --\n# Copyright 2007,2014-16 Red Hat Inc., Durham, North Carolina.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                      "markdown": "`# Makefile.am --\n# Copyright 2007,2014-16 Red Hat Inc., Durham, North Carolina.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/m4/ax_prog_cc_for_build.m4"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 46,
                  "endLine": 13,
                  "endColumn": 50,
                  "snippet": {
                    "text": "#\n#   This macro searches for a C compiler that generates native executables,\n#   that is a C compiler that surely is not a cross-compiler. This can be\n#   useful if you have to generate source code at compile-time like for\n#   example GCC does.\n#\n#   The macro sets the CC_FOR_BUILD and CPP_FOR_BUILD macros to anything\n",
                    "rendered": {
                      "text": "#\n#   This macro searches for a C compiler that generates native executables,\n#   that is a C compiler that surely is not a cross-compiler. This can be\n#   useful if you have to generate source code at compile-time like for\n#   example GCC does.\n#\n#   The macro sets the CC_FOR_BUILD and CPP_FOR_BUILD macros to anything\n",
                      "markdown": "`#\n#   This macro searches for a C compiler that generates native executables,\n#   that is a C compiler that surely is not a cross-compiler. This can be\n#   useful if you have to generate source code at compile-time like for\n#   example GCC does.\n#\n#   The macro sets the CC_FOR_BUILD and CPP_FOR_BUILD macros to anything\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/m4/Makefile.am"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 16,
                  "endLine": 2,
                  "endColumn": 21,
                  "snippet": {
                    "text": "# Makefile.am --\n# Copyright 2015 Red Hat Inc., Durham, North Carolina.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                    "rendered": {
                      "text": "# Makefile.am --\n# Copyright 2015 Red Hat Inc., Durham, North Carolina.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                      "markdown": "`# Makefile.am --\n# Copyright 2015 Red Hat Inc., Durham, North Carolina.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auparse_get_timestamp.3"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 44,
                  "endLine": 19,
                  "endColumn": 50,
                  "snippet": {
                    "text": "        time_t sec;             // Event seconds\n        unsigned int milli;     // millisecond of the timestamp\n        unsigned long serial;   // Serial number of the event\n        const char *host;       // Machine's node name\n} au_event_t;\n.fi\n\n",
                    "rendered": {
                      "text": "        time_t sec;             // Event seconds\n        unsigned int milli;     // millisecond of the timestamp\n        unsigned long serial;   // Serial number of the event\n        const char *host;       // Machine's node name\n} au_event_t;\n.fi\n\n",
                      "markdown": "`        time_t sec;             // Event seconds\n        unsigned int milli;     // millisecond of the timestamp\n        unsigned long serial;   // Serial number of the event\n        const char *host;       // Machine's node name\n} au_event_t;\n.fi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit_log_user_avc_message.3"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 15,
                  "endLine": 18,
                  "endColumn": 23,
                  "snippet": {
                    "text": "audit_fd - The fd returned by audit_open\ntype - type of message, ex: AUDIT_USER_AVC\nmessage - the message being sent\nhostname - the hostname if known\naddr - The network address of the user\ntty - The tty of the user, if NULL will attempt to figure out\nauid - The auid of the person related to the avc message\n",
                    "rendered": {
                      "text": "audit_fd - The fd returned by audit_open\ntype - type of message, ex: AUDIT_USER_AVC\nmessage - the message being sent\nhostname - the hostname if known\naddr - The network address of the user\ntty - The tty of the user, if NULL will attempt to figure out\nauid - The auid of the person related to the avc message\n",
                      "markdown": "`audit_fd - The fd returned by audit_open\ntype - type of message, ex: AUDIT_USER_AVC\nmessage - the message being sent\nhostname - the hostname if known\naddr - The network address of the user\ntty - The tty of the user, if NULL will attempt to figure out\nauid - The auid of the person related to the avc message\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit_log_user_avc_message.3"
                },
                "region": {
                  "startLine": 18,
                  "endLine": 18,
                  "endColumn": 8,
                  "snippet": {
                    "text": "audit_fd - The fd returned by audit_open\ntype - type of message, ex: AUDIT_USER_AVC\nmessage - the message being sent\nhostname - the hostname if known\naddr - The network address of the user\ntty - The tty of the user, if NULL will attempt to figure out\nauid - The auid of the person related to the avc message\n",
                    "rendered": {
                      "text": "audit_fd - The fd returned by audit_open\ntype - type of message, ex: AUDIT_USER_AVC\nmessage - the message being sent\nhostname - the hostname if known\naddr - The network address of the user\ntty - The tty of the user, if NULL will attempt to figure out\nauid - The auid of the person related to the avc message\n",
                      "markdown": "`audit_fd - The fd returned by audit_open\ntype - type of message, ex: AUDIT_USER_AVC\nmessage - the message being sent\nhostname - the hostname if known\naddr - The network address of the user\ntty - The tty of the user, if NULL will attempt to figure out\nauid - The auid of the person related to the avc message\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit_log_user_avc_message.3"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 12,
                  "endLine": 8,
                  "endColumn": 20,
                  "snippet": {
                    "text": ".B #include <libaudit.h>\n.sp\n.B int audit_log_user_avc_message(int audit_fd, int type, const char *message,\nconst char *hostname, const char *addr, const char *tty, uid_t auid)\n\n.SH DESCRIPTION\n\n",
                    "rendered": {
                      "text": ".B #include <libaudit.h>\n.sp\n.B int audit_log_user_avc_message(int audit_fd, int type, const char *message,\nconst char *hostname, const char *addr, const char *tty, uid_t auid)\n\n.SH DESCRIPTION\n\n",
                      "markdown": "`.B #include <libaudit.h>\n.sp\n.B int audit_log_user_avc_message(int audit_fd, int type, const char *message,\nconst char *hostname, const char *addr, const char *tty, uid_t auid)\n\n.SH DESCRIPTION\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit_syscall_to_name.3"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 2,
                  "endLine": 14,
                  "snippet": {
                    "text": ".SH \"DESCRIPTION\"\n.BR audit_syscall_to_name ()\nconverts the numeric syscall value to the syscall name.\n.I sc\nis the numeric syscall value.\n.I machine\nis the enum value of the machine type defined in machine_t.\n.I machine\n",
                    "rendered": {
                      "text": ".SH \"DESCRIPTION\"\n.BR audit_syscall_to_name ()\nconverts the numeric syscall value to the syscall name.\n.I sc\nis the numeric syscall value.\n.I machine\nis the enum value of the machine type defined in machine_t.\n.I machine\n",
                      "markdown": "`.SH \"DESCRIPTION\"\n.BR audit_syscall_to_name ()\nconverts the numeric syscall value to the syscall name.\n.I sc\nis the numeric syscall value.\n.I machine\nis the enum value of the machine type defined in machine_t.\n.I machine\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit_syscall_to_name.3"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 44,
                  "endLine": 8,
                  "endColumn": 48,
                  "snippet": {
                    "text": ".nf\n.B #include <libaudit.h>\n.PP\n.BI \"const char *audit_syscall_to_name(int \" sc \", int \" machine );\n.fi\n.SH \"DESCRIPTION\"\n.BR audit_syscall_to_name ()\n",
                    "rendered": {
                      "text": ".nf\n.B #include <libaudit.h>\n.PP\n.BI \"const char *audit_syscall_to_name(int \" sc \", int \" machine );\n.fi\n.SH \"DESCRIPTION\"\n.BR audit_syscall_to_name ()\n",
                      "markdown": "`.nf\n.B #include <libaudit.h>\n.PP\n.BI \"const char *audit_syscall_to_name(int \" sc \", int \" machine );\n.fi\n.SH \"DESCRIPTION\"\n.BR audit_syscall_to_name ()\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auparse_get_line_number.3"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 59,
                  "endLine": 12,
                  "endColumn": 63,
                  "snippet": {
                    "text": ".SH \"DESCRIPTION\"\n\nauparse_get_line_number will return the source input line number for\nthe current record of the current event. Line numbers start at 1.  If\nthe source input type is AUSOURCE_FILE_ARRAY the line numbering will\nreset back to 1 each time a new line in the file array is opened.\n\n",
                    "rendered": {
                      "text": ".SH \"DESCRIPTION\"\n\nauparse_get_line_number will return the source input line number for\nthe current record of the current event. Line numbers start at 1.  If\nthe source input type is AUSOURCE_FILE_ARRAY the line numbering will\nreset back to 1 each time a new line in the file array is opened.\n\n",
                      "markdown": "`.SH \"DESCRIPTION\"\n\nauparse_get_line_number will return the source input line number for\nthe current record of the current event. Line numbers start at 1.  If\nthe source input type is AUSOURCE_FILE_ARRAY the line numbering will\nreset back to 1 each time a new line in the file array is opened.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auparse_get_line_number.3"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 20,
                  "endLine": 14,
                  "endColumn": 26,
                  "snippet": {
                    "text": "auparse_get_line_number will return the source input line number for\nthe current record of the current event. Line numbers start at 1.  If\nthe source input type is AUSOURCE_FILE_ARRAY the line numbering will\nreset back to 1 each time a new line in the file array is opened.\n\n.SH \"RETURN VALUE\"\n\n",
                    "rendered": {
                      "text": "auparse_get_line_number will return the source input line number for\nthe current record of the current event. Line numbers start at 1.  If\nthe source input type is AUSOURCE_FILE_ARRAY the line numbering will\nreset back to 1 each time a new line in the file array is opened.\n\n.SH \"RETURN VALUE\"\n\n",
                      "markdown": "`auparse_get_line_number will return the source input line number for\nthe current record of the current event. Line numbers start at 1.  If\nthe source input type is AUSOURCE_FILE_ARRAY the line numbering will\nreset back to 1 each time a new line in the file array is opened.\n\n.SH \"RETURN VALUE\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit_add_rule_data.3"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 33,
                  "endLine": 24,
                  "endColumn": 37,
                  "snippet": {
                    "text": "AUDIT_FILTER_EXIT - Apply rule at syscall exit. This is the main filter that is used for syscalls and filesystem watches. Normally all syscall do not trigger events, so this is normally used to specify events that are of interest.\n.TP\n\\(bu\nAUDIT_FILTER_EXCLUDE - Apply rule at audit_log_start. This is the exclude filter which discards any records that match.  The action type is ignored for this filter, defaulting to \"never\".\n.LP\n.TP\n\\(bu\n",
                    "rendered": {
                      "text": "AUDIT_FILTER_EXIT - Apply rule at syscall exit. This is the main filter that is used for syscalls and filesystem watches. Normally all syscall do not trigger events, so this is normally used to specify events that are of interest.\n.TP\n\\(bu\nAUDIT_FILTER_EXCLUDE - Apply rule at audit_log_start. This is the exclude filter which discards any records that match.  The action type is ignored for this filter, defaulting to \"never\".\n.LP\n.TP\n\\(bu\n",
                      "markdown": "`AUDIT_FILTER_EXIT - Apply rule at syscall exit. This is the main filter that is used for syscalls and filesystem watches. Normally all syscall do not trigger events, so this is normally used to specify events that are of interest.\n.TP\n\\(bu\nAUDIT_FILTER_EXCLUDE - Apply rule at audit_log_start. This is the exclude filter which discards any records that match.  The action type is ignored for this filter, defaulting to \"never\".\n.LP\n.TP\n\\(bu\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit_add_rule_data.3"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 30,
                  "endLine": 21,
                  "endColumn": 34,
                  "snippet": {
                    "text": "AUDIT_FILTER_TASK - Apply rule at task creation (not syscall). This is the task filter. It's normally used to exclude an application from being audited.\n.TP\n\\(bu\nAUDIT_FILTER_EXIT - Apply rule at syscall exit. This is the main filter that is used for syscalls and filesystem watches. Normally all syscall do not trigger events, so this is normally used to specify events that are of interest.\n.TP\n\\(bu\nAUDIT_FILTER_EXCLUDE - Apply rule at audit_log_start. This is the exclude filter which discards any records that match.  The action type is ignored for this filter, defaulting to \"never\".\n",
                    "rendered": {
                      "text": "AUDIT_FILTER_TASK - Apply rule at task creation (not syscall). This is the task filter. It's normally used to exclude an application from being audited.\n.TP\n\\(bu\nAUDIT_FILTER_EXIT - Apply rule at syscall exit. This is the main filter that is used for syscalls and filesystem watches. Normally all syscall do not trigger events, so this is normally used to specify events that are of interest.\n.TP\n\\(bu\nAUDIT_FILTER_EXCLUDE - Apply rule at audit_log_start. This is the exclude filter which discards any records that match.  The action type is ignored for this filter, defaulting to \"never\".\n",
                      "markdown": "`AUDIT_FILTER_TASK - Apply rule at task creation (not syscall). This is the task filter. It's normally used to exclude an application from being audited.\n.TP\n\\(bu\nAUDIT_FILTER_EXIT - Apply rule at syscall exit. This is the main filter that is used for syscalls and filesystem watches. Normally all syscall do not trigger events, so this is normally used to specify events that are of interest.\n.TP\n\\(bu\nAUDIT_FILTER_EXCLUDE - Apply rule at audit_log_start. This is the exclude filter which discards any records that match.  The action type is ignored for this filter, defaulting to \"never\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit_add_rule_data.3"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 30,
                  "endLine": 18,
                  "endColumn": 34,
                  "snippet": {
                    "text": "t. Possible values for flags are:\n\n.TP 3\n\\(bu\nAUDIT_FILTER_USER - Apply rule to userspace generated messages. This is the user filter. Normally all user space originating events are accepted. Rules on this filter are typically written to block specific events.\n.TP\n\\(bu\nAUDIT_FILTER_TASK - Apply rule at task creation (not syscall). This is the task filter. It's normally used to exclude an application from being audited.\n.TP\n\\(bu\nAUDIT_FILTER_EXIT - Apply rule at syscall exit. This is the main filter that is used for syscalls and filesystem watches. Normally all syscall do not trigger events, so thi",
                    "rendered": {
                      "text": "t. Possible values for flags are:\n\n.TP 3\n\\(bu\nAUDIT_FILTER_USER - Apply rule to userspace generated messages. This is the user filter. Normally all user space originating events are accepted. Rules on this filter are typically written to block specific events.\n.TP\n\\(bu\nAUDIT_FILTER_TASK - Apply rule at task creation (not syscall). This is the task filter. It's normally used to exclude an application from being audited.\n.TP\n\\(bu\nAUDIT_FILTER_EXIT - Apply rule at syscall exit. This is the main filter that is used for syscalls and filesystem watches. Normally all syscall do not trigger events, so thi",
                      "markdown": "`t. Possible values for flags are:\n\n.TP 3\n\\(bu\nAUDIT_FILTER_USER - Apply rule to userspace generated messages. This is the user filter. Normally all user space originating events are accepted. Rules on this filter are typically written to block specific events.\n.TP\n\\(bu\nAUDIT_FILTER_TASK - Apply rule at task creation (not syscall). This is the task filter. It's normally used to exclude an application from being audited.\n.TP\n\\(bu\nAUDIT_FILTER_EXIT - Apply rule at syscall exit. This is the main filter that is used for syscalls and filesystem watches. Normally all syscall do not trigger events, so thi`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auparse_feed.3"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 10,
                  "snippet": {
                    "text": ".I auparse_add_callback\nwith a cb_event_type of\n.I AUPARSE_CB_EVENT_READY\neach time the parser recognizes a complete event in the data stream. Data not fully parsed will persist and be\nprepended to the next feed data. After all data has been feed to the parser\n.I auparse_flush_feed\nshould be called to signal the end of input data and flush any pending parse data through the parsing system.\n",
                    "rendered": {
                      "text": ".I auparse_add_callback\nwith a cb_event_type of\n.I AUPARSE_CB_EVENT_READY\neach time the parser recognizes a complete event in the data stream. Data not fully parsed will persist and be\nprepended to the next feed data. After all data has been feed to the parser\n.I auparse_flush_feed\nshould be called to signal the end of input data and flush any pending parse data through the parsing system.\n",
                      "markdown": "`.I auparse_add_callback\nwith a cb_event_type of\n.I AUPARSE_CB_EVENT_READY\neach time the parser recognizes a complete event in the data stream. Data not fully parsed will persist and be\nprepended to the next feed data. After all data has been feed to the parser\n.I auparse_flush_feed\nshould be called to signal the end of input data and flush any pending parse data through the parsing system.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/libev/ev_epoll.c"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 3,
                  "endLine": 147,
                  "endColumn": 12,
                  "snippet": {
                    "text": "  int eventcnt;\n\n  if (ecb_expect_false (epoll_epermcnt))\n    timeout = EV_TS_CONST (0.);\n\n  /* epoll wait times cannot be larger than (LONG_MAX - 999UL) / HZ msecs, which is below */\n  /* the default libev max wait time, however. */\n",
                    "rendered": {
                      "text": "  int eventcnt;\n\n  if (ecb_expect_false (epoll_epermcnt))\n    timeout = EV_TS_CONST (0.);\n\n  /* epoll wait times cannot be larger than (LONG_MAX - 999UL) / HZ msecs, which is below */\n  /* the default libev max wait time, however. */\n",
                      "markdown": "`  int eventcnt;\n\n  if (ecb_expect_false (epoll_epermcnt))\n    timeout = EV_TS_CONST (0.);\n\n  /* epoll wait times cannot be larger than (LONG_MAX - 999UL) / HZ msecs, which is below */\n  /* the default libev max wait time, however. */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditctl-llist.c"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 1,
                  "endLine": 50,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n        node = l->head;\n\twhile (node->next)\n\t\tnode = node->next;\n\tl->cur = node;\n}\n\n",
                    "rendered": {
                      "text": "\n        node = l->head;\n\twhile (node->next)\n\t\tnode = node->next;\n\tl->cur = node;\n}\n\n",
                      "markdown": "`\n        node = l->head;\n\twhile (node->next)\n\t\tnode = node->next;\n\tl->cur = node;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditctl-llist.c"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 7,
                  "endLine": 48,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\tif (l->head == NULL)\n\t\treturn;\n\n        node = l->head;\n\twhile (node->next)\n\t\tnode = node->next;\n\tl->cur = node;\n",
                    "rendered": {
                      "text": "\tif (l->head == NULL)\n\t\treturn;\n\n        node = l->head;\n\twhile (node->next)\n\t\tnode = node->next;\n\tl->cur = node;\n",
                      "markdown": "`\tif (l->head == NULL)\n\t\treturn;\n\n        node = l->head;\n\twhile (node->next)\n\t\tnode = node->next;\n\tl->cur = node;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-string.c"
                },
                "region": {
                  "startLine": 192,
                  "startColumn": 1,
                  "endLine": 192,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\ttail->next = b;\n\t\t\tb = b->next;\n\t\t}\n\t\ttail = tail->next;\n\t}\n\ttail->next = a ? a : b;\n\treturn dummy.next;\n",
                    "rendered": {
                      "text": "\t\t\ttail->next = b;\n\t\t\tb = b->next;\n\t\t}\n\t\ttail = tail->next;\n\t}\n\ttail->next = a ? a : b;\n\treturn dummy.next;\n",
                      "markdown": "`\t\t\ttail->next = b;\n\t\t\tb = b->next;\n\t\t}\n\t\ttail = tail->next;\n\t}\n\ttail->next = a ? a : b;\n\treturn dummy.next;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/Makefile.am"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 40,
                  "endLine": 2,
                  "endColumn": 45,
                  "snippet": {
                    "text": "# Makefile.am-- \n# Copyright 2004-2006, 2008,2011-16,2018 Red Hat Inc.\n# All Rights Reserved.\n#\n# This program is free software; you can redistribute it and/or modify\n",
                    "rendered": {
                      "text": "# Makefile.am-- \n# Copyright 2004-2006, 2008,2011-16,2018 Red Hat Inc.\n# All Rights Reserved.\n#\n# This program is free software; you can redistribute it and/or modify\n",
                      "markdown": "`# Makefile.am-- \n# Copyright 2004-2006, 2008,2011-16,2018 Red Hat Inc.\n# All Rights Reserved.\n#\n# This program is free software; you can redistribute it and/or modify\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-llist.c"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 6,
                  "endLine": 189,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\tl->s.euid = -1;\n\tl->s.loginuid = -2;\n\tfree(l->s.hostname);\n\tl->s.hostname = NULL;\n\tif (l->s.filename) {\n\t\tslist_clear(l->s.filename);\n\t\tfree(l->s.filename);\n",
                    "rendered": {
                      "text": "\tl->s.euid = -1;\n\tl->s.loginuid = -2;\n\tfree(l->s.hostname);\n\tl->s.hostname = NULL;\n\tif (l->s.filename) {\n\t\tslist_clear(l->s.filename);\n\t\tfree(l->s.filename);\n",
                      "markdown": "`\tl->s.euid = -1;\n\tl->s.loginuid = -2;\n\tfree(l->s.hostname);\n\tl->s.hostname = NULL;\n\tif (l->s.filename) {\n\t\tslist_clear(l->s.filename);\n\t\tfree(l->s.filename);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-llist.c"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 11,
                  "endLine": 188,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\tl->s.uid = -1;\n\tl->s.euid = -1;\n\tl->s.loginuid = -2;\n\tfree(l->s.hostname);\n\tl->s.hostname = NULL;\n\tif (l->s.filename) {\n\t\tslist_clear(l->s.filename);\n",
                    "rendered": {
                      "text": "\tl->s.uid = -1;\n\tl->s.euid = -1;\n\tl->s.loginuid = -2;\n\tfree(l->s.hostname);\n\tl->s.hostname = NULL;\n\tif (l->s.filename) {\n\t\tslist_clear(l->s.filename);\n",
                      "markdown": "`\tl->s.uid = -1;\n\tl->s.euid = -1;\n\tl->s.loginuid = -2;\n\tfree(l->s.hostname);\n\tl->s.hostname = NULL;\n\tif (l->s.filename) {\n\t\tslist_clear(l->s.filename);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-llist.c"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 6,
                  "endLine": 51,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\tl->s.uid = -1;            \n\tl->s.euid = -1;           \n\tl->s.loginuid = -2;\n\tl->s.hostname = NULL;\n\tl->s.filename = NULL;\n\tl->s.terminal = NULL;\n\tl->s.cwd = NULL;\n",
                    "rendered": {
                      "text": "\tl->s.uid = -1;            \n\tl->s.euid = -1;           \n\tl->s.loginuid = -2;\n\tl->s.hostname = NULL;\n\tl->s.filename = NULL;\n\tl->s.terminal = NULL;\n\tl->s.cwd = NULL;\n",
                      "markdown": "`\tl->s.uid = -1;            \n\tl->s.euid = -1;           \n\tl->s.loginuid = -2;\n\tl->s.hostname = NULL;\n\tl->s.filename = NULL;\n\tl->s.terminal = NULL;\n\tl->s.cwd = NULL;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-llist.c"
                },
                "region": {
                  "startLine": 271,
                  "startColumn": 2,
                  "endLine": 271,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\t\tl->cur = node;\n\t\t\treturn node;\n\t\t} else\n\t\t\tnode = node->next;\n\t}\n\treturn NULL;\n}\n",
                    "rendered": {
                      "text": "\t\t\tl->cur = node;\n\t\t\treturn node;\n\t\t} else\n\t\t\tnode = node->next;\n\t}\n\treturn NULL;\n}\n",
                      "markdown": "`\t\t\tl->cur = node;\n\t\t\treturn node;\n\t\t} else\n\t\t\tnode = node->next;\n\t}\n\treturn NULL;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-llist.c"
                },
                "region": {
                  "startLine": 265,
                  "endLine": 265,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tif (high <= low)\n\t\treturn NULL;\n\n\tnode = l->head;\t/* Start at the beginning */\n\twhile (node) {\n\t\tif (node->type >= low && node->type <= high) {\n\t\t\tl->cur = node;\n",
                    "rendered": {
                      "text": "\tif (high <= low)\n\t\treturn NULL;\n\n\tnode = l->head;\t/* Start at the beginning */\n\twhile (node) {\n\t\tif (node->type >= low && node->type <= high) {\n\t\t\tl->cur = node;\n",
                      "markdown": "`\tif (high <= low)\n\t\treturn NULL;\n\n\tnode = l->head;\t/* Start at the beginning */\n\twhile (node) {\n\t\tif (node->type >= low && node->type <= high) {\n\t\t\tl->cur = node;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-llist.c"
                },
                "region": {
                  "startLine": 253,
                  "startColumn": 2,
                  "endLine": 253,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\t\tl->cur = node;\n\t\t\treturn node;\n\t\t} else\n\t\t\tnode = node->next;\n\t}\n\treturn NULL;\n}\n",
                    "rendered": {
                      "text": "\t\t\tl->cur = node;\n\t\t\treturn node;\n\t\t} else\n\t\t\tnode = node->next;\n\t}\n\treturn NULL;\n}\n",
                      "markdown": "`\t\t\tl->cur = node;\n\t\t\treturn node;\n\t\t} else\n\t\t\tnode = node->next;\n\t}\n\treturn NULL;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-llist.c"
                },
                "region": {
                  "startLine": 247,
                  "endLine": 247,
                  "endColumn": 6,
                  "snippet": {
                    "text": "{\n        register lnode* node;\n\n\tnode = l->head;\t/* start at the beginning */\n\twhile (node) {\n\t\tif (node->type == i) {\n\t\t\tl->cur = node;\n",
                    "rendered": {
                      "text": "{\n        register lnode* node;\n\n\tnode = l->head;\t/* start at the beginning */\n\twhile (node) {\n\t\tif (node->type == i) {\n\t\t\tl->cur = node;\n",
                      "markdown": "`{\n        register lnode* node;\n\n\tnode = l->head;\t/* start at the beginning */\n\twhile (node) {\n\t\tif (node->type == i) {\n\t\t\tl->cur = node;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-llist.c"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 2,
                  "endLine": 154,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\t\tl->cur = node;\n\t\t\treturn 1;\n\t\t} else\n\t\t\tnode = node->next;\n\t}\n\treturn 0;\n}\n",
                    "rendered": {
                      "text": "\t\t\tl->cur = node;\n\t\t\treturn 1;\n\t\t} else\n\t\t\tnode = node->next;\n\t}\n\treturn 0;\n}\n",
                      "markdown": "`\t\t\tl->cur = node;\n\t\t\treturn 1;\n\t\t} else\n\t\t\tnode = node->next;\n\t}\n\treturn 0;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-llist.c"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 1,
                  "endLine": 147,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tif (l->cur && (l->cur->item <= i))\n\t\tnode = l->cur;\t/* Try to use where we are */\n\telse\n\t\tnode = l->head;\t/* Can't, start over */\n\n\twhile (node) {\n\t\tif (node->item == i) {\n",
                    "rendered": {
                      "text": "\tif (l->cur && (l->cur->item <= i))\n\t\tnode = l->cur;\t/* Try to use where we are */\n\telse\n\t\tnode = l->head;\t/* Can't, start over */\n\n\twhile (node) {\n\t\tif (node->item == i) {\n",
                      "markdown": "`\tif (l->cur && (l->cur->item <= i))\n\t\tnode = l->cur;\t/* Try to use where we are */\n\telse\n\t\tnode = l->head;\t/* Can't, start over */\n\n\twhile (node) {\n\t\tif (node->item == i) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-llist.c"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 1,
                  "endLine": 145,
                  "endColumn": 7,
                  "snippet": {
                    "text": "        register lnode* node;\n\n\tif (l->cur && (l->cur->item <= i))\n\t\tnode = l->cur;\t/* Try to use where we are */\n\telse\n\t\tnode = l->head;\t/* Can't, start over */\n\n",
                    "rendered": {
                      "text": "        register lnode* node;\n\n\tif (l->cur && (l->cur->item <= i))\n\t\tnode = l->cur;\t/* Try to use where we are */\n\telse\n\t\tnode = l->head;\t/* Can't, start over */\n\n",
                      "markdown": "`        register lnode* node;\n\n\tif (l->cur && (l->cur->item <= i))\n\t\tnode = l->cur;\t/* Try to use where we are */\n\telse\n\t\tnode = l->head;\t/* Can't, start over */\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-llist.c"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 1,
                  "endLine": 81,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n        node = l->head;\n\twhile (node->next)\n\t\tnode = node->next;\n\tl->cur = node;\n}\n\n",
                    "rendered": {
                      "text": "\n        node = l->head;\n\twhile (node->next)\n\t\tnode = node->next;\n\tl->cur = node;\n}\n\n",
                      "markdown": "`\n        node = l->head;\n\twhile (node->next)\n\t\tnode = node->next;\n\tl->cur = node;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-llist.c"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 7,
                  "endLine": 79,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\tif (l->head == NULL)\n\t\treturn;\n\n        node = l->head;\n\twhile (node->next)\n\t\tnode = node->next;\n\tl->cur = node;\n",
                    "rendered": {
                      "text": "\tif (l->head == NULL)\n\t\treturn;\n\n        node = l->head;\n\twhile (node->next)\n\t\tnode = node->next;\n\tl->cur = node;\n",
                      "markdown": "`\tif (l->head == NULL)\n\t\treturn;\n\n        node = l->head;\n\twhile (node->next)\n\t\tnode = node->next;\n\tl->cur = node;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/ids/session.c"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 29,
                  "endLine": 174,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\t\t}\n\t} else { \n\t\tif (debug)\n\t\t\tmy_printf(\"session: didn't find session\");\n\t\treturn 1;\n\t}\n\n",
                    "rendered": {
                      "text": "\t\t}\n\t} else { \n\t\tif (debug)\n\t\t\tmy_printf(\"session: didn't find session\");\n\t\treturn 1;\n\t}\n\n",
                      "markdown": "`\t\t}\n\t} else { \n\t\tif (debug)\n\t\t\tmy_printf(\"session: didn't find session\");\n\t\treturn 1;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/ids/ids_config.h"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 17,
                  "endLine": 27,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\n// Account defenses\n#define REACTION_RESTRICT_ROLE\t\t0x0001000\n#define REACTION_PASSWORD_RESET\t\t0x0002000\n#define REACTION_LOCK_ACCOUNT_TIMED\t0x0004000\n#define REACTION_LOCK_ACCOUNT\t\t0x0008000\n// drop supplemental groups?\n",
                    "rendered": {
                      "text": "\n// Account defenses\n#define REACTION_RESTRICT_ROLE\t\t0x0001000\n#define REACTION_PASSWORD_RESET\t\t0x0002000\n#define REACTION_LOCK_ACCOUNT_TIMED\t0x0004000\n#define REACTION_LOCK_ACCOUNT\t\t0x0008000\n// drop supplemental groups?\n",
                      "markdown": "`\n// Account defenses\n#define REACTION_RESTRICT_ROLE\t\t0x0001000\n#define REACTION_PASSWORD_RESET\t\t0x0002000\n#define REACTION_LOCK_ACCOUNT_TIMED\t0x0004000\n#define REACTION_LOCK_ACCOUNT\t\t0x0008000\n// drop supplemental groups?\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/ids/reactions.c"
                },
                "region": {
                  "startLine": 322,
                  "startColumn": 18,
                  "endLine": 322,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase REACTION_RESTRICT_ROLE:\n\t\t\t\tcase REACTION_PASSWORD_RESET:\n\t\t\t\tcase REACTION_LOCK_ACCOUNT_TIMED:\n\t\t\t\tcase REACTION_LOCK_ACCOUNT:\n\t\t\t\t\tbreak;\n",
                    "rendered": {
                      "text": "\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase REACTION_RESTRICT_ROLE:\n\t\t\t\tcase REACTION_PASSWORD_RESET:\n\t\t\t\tcase REACTION_LOCK_ACCOUNT_TIMED:\n\t\t\t\tcase REACTION_LOCK_ACCOUNT:\n\t\t\t\t\tbreak;\n",
                      "markdown": "`\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase REACTION_RESTRICT_ROLE:\n\t\t\t\tcase REACTION_PASSWORD_RESET:\n\t\t\t\tcase REACTION_LOCK_ACCOUNT_TIMED:\n\t\t\t\tcase REACTION_LOCK_ACCOUNT:\n\t\t\t\t\tbreak;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/ids/reactions.c"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 10,
                  "endLine": 178,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\treturn safe_exec(\"/usr/bin/killall\", \"--user\", acct);\n}\n\nint force_password_reset(const char *acct)\n{\n\tif (verify_acct(acct))\n\t\treturn 1;\n",
                    "rendered": {
                      "text": "\treturn safe_exec(\"/usr/bin/killall\", \"--user\", acct);\n}\n\nint force_password_reset(const char *acct)\n{\n\tif (verify_acct(acct))\n\t\treturn 1;\n",
                      "markdown": "`\treturn safe_exec(\"/usr/bin/killall\", \"--user\", acct);\n}\n\nint force_password_reset(const char *acct)\n{\n\tif (verify_acct(acct))\n\t\treturn 1;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/ids/nvpair.c"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 2,
                  "endLine": 87,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\t}\n\t\telse {\n\t\t\tl->prev = node;\n\t\t\tnode = node->next;\n\t\t}\n\t}\n\treturn 0;\n",
                    "rendered": {
                      "text": "\t\t}\n\t\telse {\n\t\t\tl->prev = node;\n\t\t\tnode = node->next;\n\t\t}\n\t}\n\treturn 0;\n",
                      "markdown": "`\t\t}\n\t\telse {\n\t\t\tl->prev = node;\n\t\t\tnode = node->next;\n\t\t}\n\t}\n\treturn 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/ids/nvpair.c"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\nint nvpair_list_find_job(nvlist *l, time_t t)\n{\n        nvnode* node = l->head;\n\tl->prev = NULL;\n\n\twhile (node) {\n",
                    "rendered": {
                      "text": "\nint nvpair_list_find_job(nvlist *l, time_t t)\n{\n        nvnode* node = l->head;\n\tl->prev = NULL;\n\n\twhile (node) {\n",
                      "markdown": "`\nint nvpair_list_find_job(nvlist *l, time_t t)\n{\n        nvnode* node = l->head;\n\tl->prev = NULL;\n\n\twhile (node) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/ids/reactions.h"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 10,
                  "endLine": 14,
                  "endColumn": 18,
                  "snippet": {
                    "text": "int kill_process(pid_t pid);\nint kill_session(int session);\nint restricted_role(const char *acct);\nint force_password_reset(const char *acct);\nint lock_account(const char *acct);\nint unlock_account(const char *acct);\nint lock_account_timed(const char *acct, unsigned long length);\n",
                    "rendered": {
                      "text": "int kill_process(pid_t pid);\nint kill_session(int session);\nint restricted_role(const char *acct);\nint force_password_reset(const char *acct);\nint lock_account(const char *acct);\nint unlock_account(const char *acct);\nint lock_account_timed(const char *acct, unsigned long length);\n",
                      "markdown": "`int kill_process(pid_t pid);\nint kill_session(int session);\nint restricted_role(const char *acct);\nint force_password_reset(const char *acct);\nint lock_account(const char *acct);\nint unlock_account(const char *acct);\nint lock_account_timed(const char *acct, unsigned long length);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/ids/ids_config.c"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 31,
                  "endLine": 81,
                  "endColumn": 39,
                  "snippet": {
                    "text": "  { \"term_process\", REACTION_TERMINATE_PROCESS },\n  { \"term_session\", REACTION_TERMINATE_SESSION },\n  { \"restrict_role\", REACTION_RESTRICT_ROLE },\n  { \"password_reset\", REACTION_PASSWORD_RESET },\n  { \"lock_account_timed\", REACTION_LOCK_ACCOUNT_TIMED },\n  { \"lock_account\", REACTION_LOCK_ACCOUNT },\n  { \"block_address_timed\", REACTION_BLOCK_ADDRESS_TIMED },\n",
                    "rendered": {
                      "text": "  { \"term_process\", REACTION_TERMINATE_PROCESS },\n  { \"term_session\", REACTION_TERMINATE_SESSION },\n  { \"restrict_role\", REACTION_RESTRICT_ROLE },\n  { \"password_reset\", REACTION_PASSWORD_RESET },\n  { \"lock_account_timed\", REACTION_LOCK_ACCOUNT_TIMED },\n  { \"lock_account\", REACTION_LOCK_ACCOUNT },\n  { \"block_address_timed\", REACTION_BLOCK_ADDRESS_TIMED },\n",
                      "markdown": "`  { \"term_process\", REACTION_TERMINATE_PROCESS },\n  { \"term_session\", REACTION_TERMINATE_SESSION },\n  { \"restrict_role\", REACTION_RESTRICT_ROLE },\n  { \"password_reset\", REACTION_PASSWORD_RESET },\n  { \"lock_account_timed\", REACTION_LOCK_ACCOUNT_TIMED },\n  { \"lock_account\", REACTION_LOCK_ACCOUNT },\n  { \"block_address_timed\", REACTION_BLOCK_ADDRESS_TIMED },\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/ids/ids_config.c"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 5,
                  "endLine": 81,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  { \"term_process\", REACTION_TERMINATE_PROCESS },\n  { \"term_session\", REACTION_TERMINATE_SESSION },\n  { \"restrict_role\", REACTION_RESTRICT_ROLE },\n  { \"password_reset\", REACTION_PASSWORD_RESET },\n  { \"lock_account_timed\", REACTION_LOCK_ACCOUNT_TIMED },\n  { \"lock_account\", REACTION_LOCK_ACCOUNT },\n  { \"block_address_timed\", REACTION_BLOCK_ADDRESS_TIMED },\n",
                    "rendered": {
                      "text": "  { \"term_process\", REACTION_TERMINATE_PROCESS },\n  { \"term_session\", REACTION_TERMINATE_SESSION },\n  { \"restrict_role\", REACTION_RESTRICT_ROLE },\n  { \"password_reset\", REACTION_PASSWORD_RESET },\n  { \"lock_account_timed\", REACTION_LOCK_ACCOUNT_TIMED },\n  { \"lock_account\", REACTION_LOCK_ACCOUNT },\n  { \"block_address_timed\", REACTION_BLOCK_ADDRESS_TIMED },\n",
                      "markdown": "`  { \"term_process\", REACTION_TERMINATE_PROCESS },\n  { \"term_session\", REACTION_TERMINATE_SESSION },\n  { \"restrict_role\", REACTION_RESTRICT_ROLE },\n  { \"password_reset\", REACTION_PASSWORD_RESET },\n  { \"lock_account_timed\", REACTION_LOCK_ACCOUNT_TIMED },\n  { \"lock_account\", REACTION_LOCK_ACCOUNT },\n  { \"block_address_timed\", REACTION_BLOCK_ADDRESS_TIMED },\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/ids/origin.c"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 28,
                  "endLine": 155,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\t\t}\n\t} else {\n\t\tif (debug)\n\t\t\tmy_printf(\"origin: didn't find address\");\n\t\treturn 1;\n\t}\n\n",
                    "rendered": {
                      "text": "\t\t}\n\t} else {\n\t\tif (debug)\n\t\t\tmy_printf(\"origin: didn't find address\");\n\t\treturn 1;\n\t}\n\n",
                      "markdown": "`\t\t}\n\t} else {\n\t\tif (debug)\n\t\t\tmy_printf(\"origin: didn't find address\");\n\t\treturn 1;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/ids/account.c"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 29,
                  "endLine": 159,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\t\t}\n\t} else {\n\t\tif (debug)\n\t\t\tmy_printf(\"account: didn't find name\");\n\n\t\treturn 1;\n\t}\n",
                    "rendered": {
                      "text": "\t\t}\n\t} else {\n\t\tif (debug)\n\t\t\tmy_printf(\"account: didn't find name\");\n\n\t\treturn 1;\n\t}\n",
                      "markdown": "`\t\t}\n\t} else {\n\t\tif (debug)\n\t\t\tmy_printf(\"account: didn't find name\");\n\n\t\treturn 1;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/ids/avl.c"
                },
                "region": {
                  "startLine": 387,
                  "startColumn": 2,
                  "endLine": 387,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n\t\t\ttmp = node;\n\t\t\ti->height--;\n\t\t\tnode = i->stack[i->height];\n\t\t} while (tmp == node->avl_link[1]);\n\t}\n\n",
                    "rendered": {
                      "text": "\n\t\t\ttmp = node;\n\t\t\ti->height--;\n\t\t\tnode = i->stack[i->height];\n\t\t} while (tmp == node->avl_link[1]);\n\t}\n\n",
                      "markdown": "`\n\t\t\ttmp = node;\n\t\t\ti->height--;\n\t\t\tnode = i->stack[i->height];\n\t\t} while (tmp == node->avl_link[1]);\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/ids/avl.c"
                },
                "region": {
                  "startLine": 374,
                  "startColumn": 2,
                  "endLine": 374,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\twhile (node->avl_link[0]) {\n\t\t\ti->stack[i->height] = node;\n\t\t\ti->height++;\n\t\t\tnode = node->avl_link[0];\n\t\t}\n\t} else {\n\t\tavl_t *tmp;\n",
                    "rendered": {
                      "text": "\t\twhile (node->avl_link[0]) {\n\t\t\ti->stack[i->height] = node;\n\t\t\ti->height++;\n\t\t\tnode = node->avl_link[0];\n\t\t}\n\t} else {\n\t\tavl_t *tmp;\n",
                      "markdown": "`\t\twhile (node->avl_link[0]) {\n\t\t\ti->stack[i->height] = node;\n\t\t\ti->height++;\n\t\t\tnode = node->avl_link[0];\n\t\t}\n\t} else {\n\t\tavl_t *tmp;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/ids/avl.c"
                },
                "region": {
                  "startLine": 369,
                  "startColumn": 1,
                  "endLine": 369,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\telse if (node->avl_link[1]) {\n\t\ti->stack[i->height] = node;\n\t\ti->height++;\n\t\tnode = node->avl_link[1];\n\n\t\twhile (node->avl_link[0]) {\n\t\t\ti->stack[i->height] = node;\n",
                    "rendered": {
                      "text": "\telse if (node->avl_link[1]) {\n\t\ti->stack[i->height] = node;\n\t\ti->height++;\n\t\tnode = node->avl_link[1];\n\n\t\twhile (node->avl_link[0]) {\n\t\t\ti->stack[i->height] = node;\n",
                      "markdown": "`\telse if (node->avl_link[1]) {\n\t\ti->stack[i->height] = node;\n\t\ti->height++;\n\t\tnode = node->avl_link[1];\n\n\t\twhile (node->avl_link[0]) {\n\t\t\ti->stack[i->height] = node;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/ids/avl.c"
                },
                "region": {
                  "startLine": 351,
                  "startColumn": 1,
                  "endLine": 351,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\twhile (node->avl_link[0]) {\n\t\ti->stack[i->height] = node;\n\t\ti->height++;\n\t\tnode = node->avl_link[0];\n\t}\n\n\ti->current = node;\n",
                    "rendered": {
                      "text": "\twhile (node->avl_link[0]) {\n\t\ti->stack[i->height] = node;\n\t\ti->height++;\n\t\tnode = node->avl_link[0];\n\t}\n\n\ti->current = node;\n",
                      "markdown": "`\twhile (node->avl_link[0]) {\n\t\ti->stack[i->height] = node;\n\t\ti->height++;\n\t\tnode = node->avl_link[0];\n\t}\n\n\ti->current = node;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditctl.c"
                },
                "region": {
                  "startLine": 1231,
                  "startColumn": 1,
                  "endLine": 1231,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n\t/* Build the command */\n\tif (asprintf(&cmd, \"key=%s\", key) < 0) {\n\t\tcmd = NULL;\n\t\taudit_msg(LOG_ERR, \"Out of memory adding key\");\n\t\tretval = -1;\n\t} else {\n",
                    "rendered": {
                      "text": "\n\t/* Build the command */\n\tif (asprintf(&cmd, \"key=%s\", key) < 0) {\n\t\tcmd = NULL;\n\t\taudit_msg(LOG_ERR, \"Out of memory adding key\");\n\t\tretval = -1;\n\t} else {\n",
                      "markdown": "`\n\t/* Build the command */\n\tif (asprintf(&cmd, \"key=%s\", key) < 0) {\n\t\tcmd = NULL;\n\t\taudit_msg(LOG_ERR, \"Out of memory adding key\");\n\t\tretval = -1;\n\t} else {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditctl.c"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 56,
                  "endLine": 139,
                  "endColumn": 60,
                  "snippet": {
                    "text": "     \"    -t                                Trim directory watches\\n\"\n     \"    -v                                Version\\n\"\n     \"    -w <path>                         Insert watch at <path>\\n\"\n     \"    -W <path>                         Remove watch at <path>\\n\"\n#if HAVE_DECL_AUDIT_FEATURE_VERSION == 1\n     \"    --loginuid-immutable              Make loginuids unchangeable once set\\n\"\n#endif\n",
                    "rendered": {
                      "text": "     \"    -t                                Trim directory watches\\n\"\n     \"    -v                                Version\\n\"\n     \"    -w <path>                         Insert watch at <path>\\n\"\n     \"    -W <path>                         Remove watch at <path>\\n\"\n#if HAVE_DECL_AUDIT_FEATURE_VERSION == 1\n     \"    --loginuid-immutable              Make loginuids unchangeable once set\\n\"\n#endif\n",
                      "markdown": "`     \"    -t                                Trim directory watches\\n\"\n     \"    -v                                Version\\n\"\n     \"    -w <path>                         Insert watch at <path>\\n\"\n     \"    -W <path>                         Remove watch at <path>\\n\"\n#if HAVE_DECL_AUDIT_FEATURE_VERSION == 1\n     \"    --loginuid-immutable              Make loginuids unchangeable once set\\n\"\n#endif\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditctl.c"
                },
                "region": {
                  "startLine": 138,
                  "startColumn": 56,
                  "endLine": 138,
                  "endColumn": 60,
                  "snippet": {
                    "text": "     \"    --signal <signal>                 Send the specified signal to the daemon\\n\"\n     \"    -t                                Trim directory watches\\n\"\n     \"    -v                                Version\\n\"\n     \"    -w <path>                         Insert watch at <path>\\n\"\n     \"    -W <path>                         Remove watch at <path>\\n\"\n#if HAVE_DECL_AUDIT_FEATURE_VERSION == 1\n     \"    --loginuid-immutable              Make loginuids unchangeable once set\\n\"\n",
                    "rendered": {
                      "text": "     \"    --signal <signal>                 Send the specified signal to the daemon\\n\"\n     \"    -t                                Trim directory watches\\n\"\n     \"    -v                                Version\\n\"\n     \"    -w <path>                         Insert watch at <path>\\n\"\n     \"    -W <path>                         Remove watch at <path>\\n\"\n#if HAVE_DECL_AUDIT_FEATURE_VERSION == 1\n     \"    --loginuid-immutable              Make loginuids unchangeable once set\\n\"\n",
                      "markdown": "`     \"    --signal <signal>                 Send the specified signal to the daemon\\n\"\n     \"    -t                                Trim directory watches\\n\"\n     \"    -v                                Version\\n\"\n     \"    -w <path>                         Insert watch at <path>\\n\"\n     \"    -W <path>                         Remove watch at <path>\\n\"\n#if HAVE_DECL_AUDIT_FEATURE_VERSION == 1\n     \"    --loginuid-immutable              Make loginuids unchangeable once set\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditctl.c"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 52,
                  "endLine": 108,
                  "endColumn": 56,
                  "snippet": {
                    "text": "    printf(\n    \"usage: auditctl [options]\\n\"\n     \"    -a <l,a>                          Append rule to end of <l>ist with <a>ction\\n\"\n     \"    -A <l,a>                          Add rule at beginning of <l>ist with <a>ction\\n\"\n     \"    -b <backlog>                      Set max number of outstanding audit buffers\\n\"\n     \"                                      allowed Default=64\\n\"\n     \"    -c                                Continue through errors in rules\\n\"\n",
                    "rendered": {
                      "text": "    printf(\n    \"usage: auditctl [options]\\n\"\n     \"    -a <l,a>                          Append rule to end of <l>ist with <a>ction\\n\"\n     \"    -A <l,a>                          Add rule at beginning of <l>ist with <a>ction\\n\"\n     \"    -b <backlog>                      Set max number of outstanding audit buffers\\n\"\n     \"                                      allowed Default=64\\n\"\n     \"    -c                                Continue through errors in rules\\n\"\n",
                      "markdown": "`    printf(\n    \"usage: auditctl [options]\\n\"\n     \"    -a <l,a>                          Append rule to end of <l>ist with <a>ction\\n\"\n     \"    -A <l,a>                          Add rule at beginning of <l>ist with <a>ction\\n\"\n     \"    -b <backlog>                      Set max number of outstanding audit buffers\\n\"\n     \"                                      allowed Default=64\\n\"\n     \"    -c                                Continue through errors in rules\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditctl.c"
                },
                "region": {
                  "startLine": 1623,
                  "startColumn": 4,
                  "endLine": 1623,
                  "endColumn": 13,
                  "snippet": {
                    "text": "static void get_reply(void)\n{\n\tint i, retval;\n\tint timeout = 40; /* loop has delay of .1 - so this is 4 seconds */\n\tstruct audit_reply rep;\n\tfd_set read_mask;\n\tFD_ZERO(&read_mask);\n",
                    "rendered": {
                      "text": "static void get_reply(void)\n{\n\tint i, retval;\n\tint timeout = 40; /* loop has delay of .1 - so this is 4 seconds */\n\tstruct audit_reply rep;\n\tfd_set read_mask;\n\tFD_ZERO(&read_mask);\n",
                      "markdown": "`static void get_reply(void)\n{\n\tint i, retval;\n\tint timeout = 40; /* loop has delay of .1 - so this is 4 seconds */\n\tstruct audit_reply rep;\n\tfd_set read_mask;\n\tFD_ZERO(&read_mask);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditctl.c"
                },
                "region": {
                  "startLine": 1091,
                  "startColumn": 29,
                  "endLine": 1091,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\tcase 'p':\n\t\tif (add == AUDIT_FILTER_UNSET && del == AUDIT_FILTER_UNSET) {\n\t\t\taudit_msg(LOG_ERR,\n\t\t\t\"permission option needs a watch given prior to it\");\n\t\t\tretval = -1;\n\t\t} else if (!optarg) {\n\t\t\taudit_msg(LOG_ERR, \"permission option needs a filter\");\n",
                    "rendered": {
                      "text": "\tcase 'p':\n\t\tif (add == AUDIT_FILTER_UNSET && del == AUDIT_FILTER_UNSET) {\n\t\t\taudit_msg(LOG_ERR,\n\t\t\t\"permission option needs a watch given prior to it\");\n\t\t\tretval = -1;\n\t\t} else if (!optarg) {\n\t\t\taudit_msg(LOG_ERR, \"permission option needs a filter\");\n",
                      "markdown": "`\tcase 'p':\n\t\tif (add == AUDIT_FILTER_UNSET && del == AUDIT_FILTER_UNSET) {\n\t\t\taudit_msg(LOG_ERR,\n\t\t\t\"permission option needs a watch given prior to it\");\n\t\t\tretval = -1;\n\t\t} else if (!optarg) {\n\t\t\taudit_msg(LOG_ERR, \"permission option needs a filter\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditctl.c"
                },
                "region": {
                  "startLine": 1063,
                  "startColumn": 25,
                  "endLine": 1063,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t\t      _audit_filterfsadded) ||\n\t\t    (add==AUDIT_FILTER_UNSET && del==AUDIT_FILTER_UNSET)) {\n\t\t\taudit_msg(LOG_ERR,\n\t\t    \"key option needs a watch or syscall given prior to it\");\n\t\t\tretval = -1;\n\t\t\tbreak;\n\t\t} else if (!optarg) {\n",
                    "rendered": {
                      "text": "\t\t      _audit_filterfsadded) ||\n\t\t    (add==AUDIT_FILTER_UNSET && del==AUDIT_FILTER_UNSET)) {\n\t\t\taudit_msg(LOG_ERR,\n\t\t    \"key option needs a watch or syscall given prior to it\");\n\t\t\tretval = -1;\n\t\t\tbreak;\n\t\t} else if (!optarg) {\n",
                      "markdown": "`\t\t      _audit_filterfsadded) ||\n\t\t    (add==AUDIT_FILTER_UNSET && del==AUDIT_FILTER_UNSET)) {\n\t\t\taudit_msg(LOG_ERR,\n\t\t    \"key option needs a watch or syscall given prior to it\");\n\t\t\tretval = -1;\n\t\t\tbreak;\n\t\t} else if (!optarg) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditctl.c"
                },
                "region": {
                  "startLine": 458,
                  "startColumn": 4,
                  "endLine": 458,
                  "endColumn": 13,
                  "snippet": {
                    "text": "static int send_signal(const char *optarg)\n{\n\tint signal = 0, retval, i;\n\tint timeout = 40; /* loop has delay of .1 - so this is 4 seconds */\n\tstruct audit_reply rep;\n\n\tfd_set read_mask;\n",
                    "rendered": {
                      "text": "static int send_signal(const char *optarg)\n{\n\tint signal = 0, retval, i;\n\tint timeout = 40; /* loop has delay of .1 - so this is 4 seconds */\n\tstruct audit_reply rep;\n\n\tfd_set read_mask;\n",
                      "markdown": "`static int send_signal(const char *optarg)\n{\n\tint signal = 0, retval, i;\n\tint timeout = 40; /* loop has delay of .1 - so this is 4 seconds */\n\tstruct audit_reply rep;\n\n\tfd_set read_mask;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditctl.c"
                },
                "region": {
                  "startLine": 294,
                  "startColumn": 32,
                  "endLine": 294,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\t\treturn -1;\n\n\tif (add != AUDIT_FILTER_UNSET)\n\t\taudit_msg(LOG_INFO, \"Old style watch rules are slower\");\n\treturn 1;\n}\n\n",
                    "rendered": {
                      "text": "\t\treturn -1;\n\n\tif (add != AUDIT_FILTER_UNSET)\n\t\taudit_msg(LOG_INFO, \"Old style watch rules are slower\");\n\treturn 1;\n}\n\n",
                      "markdown": "`\t\treturn -1;\n\n\tif (add != AUDIT_FILTER_UNSET)\n\t\taudit_msg(LOG_INFO, \"Old style watch rules are slower\");\n\treturn 1;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditctl.c"
                },
                "region": {
                  "startLine": 235,
                  "startColumn": 45,
                  "endLine": 235,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\tsize_t nlen;\n\tsize_t plen = strlen(path);\n\tif (plen >= PATH_MAX) {\n\t\taudit_msg(LOG_ERR, \"The path passed for the watch is too big\");\n\t\treturn 1;\n\t}\n\tif (path[0] != '/') {\n",
                    "rendered": {
                      "text": "\tsize_t nlen;\n\tsize_t plen = strlen(path);\n\tif (plen >= PATH_MAX) {\n\t\taudit_msg(LOG_ERR, \"The path passed for the watch is too big\");\n\t\treturn 1;\n\t}\n\tif (path[0] != '/') {\n",
                      "markdown": "`\tsize_t nlen;\n\tsize_t plen = strlen(path);\n\tif (plen >= PATH_MAX) {\n\t\taudit_msg(LOG_ERR, \"The path passed for the watch is too big\");\n\t\treturn 1;\n\t}\n\tif (path[0] != '/') {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditctl.c"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 73,
                  "endLine": 151,
                  "endColumn": 79,
                  "snippet": {
                    "text": "     \"    --reset-lost                      Reset the lost record counter\\n\"\n#endif\n#if HAVE_DECL_AUDIT_STATUS_BACKLOG_WAIT_TIME_ACTUAL == 1\n     \"    --reset_backlog_wait_time_actual  Reset the actual backlog wait time counter\\n\"\n#endif\n     );\n}\n",
                    "rendered": {
                      "text": "     \"    --reset-lost                      Reset the lost record counter\\n\"\n#endif\n#if HAVE_DECL_AUDIT_STATUS_BACKLOG_WAIT_TIME_ACTUAL == 1\n     \"    --reset_backlog_wait_time_actual  Reset the actual backlog wait time counter\\n\"\n#endif\n     );\n}\n",
                      "markdown": "`     \"    --reset-lost                      Reset the lost record counter\\n\"\n#endif\n#if HAVE_DECL_AUDIT_STATUS_BACKLOG_WAIT_TIME_ACTUAL == 1\n     \"    --reset_backlog_wait_time_actual  Reset the actual backlog wait time counter\\n\"\n#endif\n     );\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditctl.c"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 50,
                  "endLine": 139,
                  "endColumn": 57,
                  "snippet": {
                    "text": "     \"    -t                                Trim directory watches\\n\"\n     \"    -v                                Version\\n\"\n     \"    -w <path>                         Insert watch at <path>\\n\"\n     \"    -W <path>                         Remove watch at <path>\\n\"\n#if HAVE_DECL_AUDIT_FEATURE_VERSION == 1\n     \"    --loginuid-immutable              Make loginuids unchangeable once set\\n\"\n#endif\n",
                    "rendered": {
                      "text": "     \"    -t                                Trim directory watches\\n\"\n     \"    -v                                Version\\n\"\n     \"    -w <path>                         Insert watch at <path>\\n\"\n     \"    -W <path>                         Remove watch at <path>\\n\"\n#if HAVE_DECL_AUDIT_FEATURE_VERSION == 1\n     \"    --loginuid-immutable              Make loginuids unchangeable once set\\n\"\n#endif\n",
                      "markdown": "`     \"    -t                                Trim directory watches\\n\"\n     \"    -v                                Version\\n\"\n     \"    -w <path>                         Insert watch at <path>\\n\"\n     \"    -W <path>                         Remove watch at <path>\\n\"\n#if HAVE_DECL_AUDIT_FEATURE_VERSION == 1\n     \"    --loginuid-immutable              Make loginuids unchangeable once set\\n\"\n#endif\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditctl.c"
                },
                "region": {
                  "startLine": 138,
                  "startColumn": 50,
                  "endLine": 138,
                  "endColumn": 57,
                  "snippet": {
                    "text": "     \"    --signal <signal>                 Send the specified signal to the daemon\\n\"\n     \"    -t                                Trim directory watches\\n\"\n     \"    -v                                Version\\n\"\n     \"    -w <path>                         Insert watch at <path>\\n\"\n     \"    -W <path>                         Remove watch at <path>\\n\"\n#if HAVE_DECL_AUDIT_FEATURE_VERSION == 1\n     \"    --loginuid-immutable              Make loginuids unchangeable once set\\n\"\n",
                    "rendered": {
                      "text": "     \"    --signal <signal>                 Send the specified signal to the daemon\\n\"\n     \"    -t                                Trim directory watches\\n\"\n     \"    -v                                Version\\n\"\n     \"    -w <path>                         Insert watch at <path>\\n\"\n     \"    -W <path>                         Remove watch at <path>\\n\"\n#if HAVE_DECL_AUDIT_FEATURE_VERSION == 1\n     \"    --loginuid-immutable              Make loginuids unchangeable once set\\n\"\n",
                      "markdown": "`     \"    --signal <signal>                 Send the specified signal to the daemon\\n\"\n     \"    -t                                Trim directory watches\\n\"\n     \"    -v                                Version\\n\"\n     \"    -w <path>                         Insert watch at <path>\\n\"\n     \"    -W <path>                         Remove watch at <path>\\n\"\n#if HAVE_DECL_AUDIT_FEATURE_VERSION == 1\n     \"    --loginuid-immutable              Make loginuids unchangeable once set\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditctl.c"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 64,
                  "endLine": 130,
                  "endColumn": 71,
                  "snippet": {
                    "text": "     \"    -m text                           Send a user-space message\\n\"\n     \"    -p [r|w|x|a]                      Set permissions filter on watch\\n\"\n     \"                                      r=read, w=write, x=execute, a=attribute\\n\"\n     \"    -q <mount,subtree>                make subtree part of mount point's dir watches\\n\"\n     \"    -r <rate>                         Set limit in messages/sec (0=none)\\n\"\n     \"    -R <file>                         read rules from file\\n\"\n     \"    -s                                Report status\\n\"\n",
                    "rendered": {
                      "text": "     \"    -m text                           Send a user-space message\\n\"\n     \"    -p [r|w|x|a]                      Set permissions filter on watch\\n\"\n     \"                                      r=read, w=write, x=execute, a=attribute\\n\"\n     \"    -q <mount,subtree>                make subtree part of mount point's dir watches\\n\"\n     \"    -r <rate>                         Set limit in messages/sec (0=none)\\n\"\n     \"    -R <file>                         read rules from file\\n\"\n     \"    -s                                Report status\\n\"\n",
                      "markdown": "`     \"    -m text                           Send a user-space message\\n\"\n     \"    -p [r|w|x|a]                      Set permissions filter on watch\\n\"\n     \"                                      r=read, w=write, x=execute, a=attribute\\n\"\n     \"    -q <mount,subtree>                make subtree part of mount point's dir watches\\n\"\n     \"    -r <rate>                         Set limit in messages/sec (0=none)\\n\"\n     \"    -R <file>                         read rules from file\\n\"\n     \"    -s                                Report status\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditd.c"
                },
                "region": {
                  "startLine": 1071,
                  "startColumn": 11,
                  "endLine": 1071,
                  "endColumn": 20,
                  "snippet": {
                    "text": "static int get_reply(int rfd, struct audit_reply *rep, int seq)\n{\n        int rc, i;\n        int timeout = 30; /* tenths of seconds */\n\n\tfor (i = 0; i < timeout; i++) {\n\t\tstruct timeval t;\n",
                    "rendered": {
                      "text": "static int get_reply(int rfd, struct audit_reply *rep, int seq)\n{\n        int rc, i;\n        int timeout = 30; /* tenths of seconds */\n\n\tfor (i = 0; i < timeout; i++) {\n\t\tstruct timeval t;\n",
                      "markdown": "`static int get_reply(int rfd, struct audit_reply *rep, int seq)\n{\n        int rc, i;\n        int timeout = 30; /* tenths of seconds */\n\n\tfor (i = 0; i < timeout; i++) {\n\t\tstruct timeval t;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditd.c"
                },
                "region": {
                  "startLine": 823,
                  "startColumn": 2,
                  "endLine": 823,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\tchar start[DEFAULT_BUF_SZ];\n\t\tconst char *fmt = audit_lookup_format((int)config.log_format);\n\t\tif (fmt == NULL)\n\t\t\tfmt = \"UNKNOWN\";\n\t\tif (uname(&ubuf) != 0) {\n\t\t\tif (pidfile)\n\t\t\t\tunlink(pidfile);\n",
                    "rendered": {
                      "text": "\t\tchar start[DEFAULT_BUF_SZ];\n\t\tconst char *fmt = audit_lookup_format((int)config.log_format);\n\t\tif (fmt == NULL)\n\t\t\tfmt = \"UNKNOWN\";\n\t\tif (uname(&ubuf) != 0) {\n\t\t\tif (pidfile)\n\t\t\t\tunlink(pidfile);\n",
                      "markdown": "`\t\tchar start[DEFAULT_BUF_SZ];\n\t\tconst char *fmt = audit_lookup_format((int)config.log_format);\n\t\tif (fmt == NULL)\n\t\t\tfmt = \"UNKNOWN\";\n\t\tif (uname(&ubuf) != 0) {\n\t\t\tif (pidfile)\n\t\t\t\tunlink(pidfile);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditd.c"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 20,
                  "endLine": 201,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\tfprintf(f, \"audit version = %s\\n\", VERSION);\n\ttime_t now = time(0);\n\tstrftime(buf, sizeof(buf), \"%x %X\", localtime(&now));\n\tfprintf(f, \"current time = %s\\n\", buf);\n\tfprintf(f, \"process priority = %d\\n\", getpriority(PRIO_PROCESS, 0));\n\twrite_logging_state(f);\n\tlibdisp_write_queue_state(f);\n",
                    "rendered": {
                      "text": "\tfprintf(f, \"audit version = %s\\n\", VERSION);\n\ttime_t now = time(0);\n\tstrftime(buf, sizeof(buf), \"%x %X\", localtime(&now));\n\tfprintf(f, \"current time = %s\\n\", buf);\n\tfprintf(f, \"process priority = %d\\n\", getpriority(PRIO_PROCESS, 0));\n\twrite_logging_state(f);\n\tlibdisp_write_queue_state(f);\n",
                      "markdown": "`\tfprintf(f, \"audit version = %s\\n\", VERSION);\n\ttime_t now = time(0);\n\tstrftime(buf, sizeof(buf), \"%x %X\", localtime(&now));\n\tfprintf(f, \"current time = %s\\n\", buf);\n\tfprintf(f, \"process priority = %d\\n\", getpriority(PRIO_PROCESS, 0));\n\twrite_logging_state(f);\n\tlibdisp_write_queue_state(f);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-options.c"
                },
                "region": {
                  "startLine": 568,
                  "startColumn": 14,
                  "endLine": 568,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\t\t\tretval = -1;\n\t\t\t} else {\n\t\t\t\tevent_hostname = strdup(optarg);\n\t\t\t\tif (event_hostname == NULL)\n\t\t\t\t\tretval = -1;\n\t\t\t\tc++;\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\tretval = -1;\n\t\t\t} else {\n\t\t\t\tevent_hostname = strdup(optarg);\n\t\t\t\tif (event_hostname == NULL)\n\t\t\t\t\tretval = -1;\n\t\t\t\tc++;\n\t\t\t}\n",
                      "markdown": "`\t\t\t\tretval = -1;\n\t\t\t} else {\n\t\t\t\tevent_hostname = strdup(optarg);\n\t\t\t\tif (event_hostname == NULL)\n\t\t\t\t\tretval = -1;\n\t\t\t\tc++;\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-options.c"
                },
                "region": {
                  "startLine": 567,
                  "startColumn": 10,
                  "endLine": 567,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t\t\t\t\tvars[c]);\n\t\t\t\tretval = -1;\n\t\t\t} else {\n\t\t\t\tevent_hostname = strdup(optarg);\n\t\t\t\tif (event_hostname == NULL)\n\t\t\t\t\tretval = -1;\n\t\t\t\tc++;\n",
                    "rendered": {
                      "text": "\t\t\t\t\tvars[c]);\n\t\t\t\tretval = -1;\n\t\t\t} else {\n\t\t\t\tevent_hostname = strdup(optarg);\n\t\t\t\tif (event_hostname == NULL)\n\t\t\t\t\tretval = -1;\n\t\t\t\tc++;\n",
                      "markdown": "`\t\t\t\t\tvars[c]);\n\t\t\t\tretval = -1;\n\t\t\t} else {\n\t\t\t\tevent_hostname = strdup(optarg);\n\t\t\t\tif (event_hostname == NULL)\n\t\t\t\t\tretval = -1;\n\t\t\t\tc++;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-options.c"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 18,
                  "endLine": 73,
                  "endColumn": 26,
                  "snippet": {
                    "text": "const char *event_filename = NULL;\nconst char *event_exe = NULL;\nconst char *event_comm = NULL;\nconst char *event_hostname = NULL;\nconst char *event_terminal = NULL;\nconst char *event_subject = NULL;\nconst char *event_object = NULL;\n",
                    "rendered": {
                      "text": "const char *event_filename = NULL;\nconst char *event_exe = NULL;\nconst char *event_comm = NULL;\nconst char *event_hostname = NULL;\nconst char *event_terminal = NULL;\nconst char *event_subject = NULL;\nconst char *event_object = NULL;\n",
                      "markdown": "`const char *event_filename = NULL;\nconst char *event_exe = NULL;\nconst char *event_comm = NULL;\nconst char *event_hostname = NULL;\nconst char *event_terminal = NULL;\nconst char *event_subject = NULL;\nconst char *event_object = NULL;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-options.c"
                },
                "region": {
                  "startLine": 370,
                  "startColumn": 18,
                  "endLine": 370,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\t\t\tc++;\n\t\t\t} else {\n\t\t\t\tfprintf(stderr,\n\t\t\t\t\t\"End of Event Timeout must be a numeric value, was %s\\n\", optarg);\n\t\t\t\tretval = -1;\n\t\t\t}\n\t\t\tbreak;\n",
                    "rendered": {
                      "text": "\t\t\t\tc++;\n\t\t\t} else {\n\t\t\t\tfprintf(stderr,\n\t\t\t\t\t\"End of Event Timeout must be a numeric value, was %s\\n\", optarg);\n\t\t\t\tretval = -1;\n\t\t\t}\n\t\t\tbreak;\n",
                      "markdown": "`\t\t\t\tc++;\n\t\t\t} else {\n\t\t\t\tfprintf(stderr,\n\t\t\t\t\t\"End of Event Timeout must be a numeric value, was %s\\n\", optarg);\n\t\t\t\tretval = -1;\n\t\t\t}\n\t\t\tbreak;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-options.c"
                },
                "region": {
                  "startLine": 236,
                  "startColumn": 58,
                  "endLine": 236,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\t\"\\t-su,--subject <SE Linux context> search based on context of the Subject\\n\"\n\t\"\\t-sv,--success <Success Value>\\tsearch based on syscall or event\\n\\t\\t\\t\\t\\tsuccess value\\n\"\n\t\"\\t-te,--end [end date] [end time]\\tending date & time for search\\n\"\n\t\"\\t-ts,--start [start date] [start time]\\tstarting date & time for search\\n\"\n\t\"\\t-tm,--terminal <TerMinal>\\tsearch based on terminal\\n\"\n\t\"\\t-ua,--uid-all <all User id>\\tsearch based on All user id's\\n\"\n\t\"\\t-ue,--uid-effective <effective User id>  search based on Effective\\n\\t\\t\\t\\t\\tuser id\\n\"\n",
                    "rendered": {
                      "text": "\t\"\\t-su,--subject <SE Linux context> search based on context of the Subject\\n\"\n\t\"\\t-sv,--success <Success Value>\\tsearch based on syscall or event\\n\\t\\t\\t\\t\\tsuccess value\\n\"\n\t\"\\t-te,--end [end date] [end time]\\tending date & time for search\\n\"\n\t\"\\t-ts,--start [start date] [start time]\\tstarting date & time for search\\n\"\n\t\"\\t-tm,--terminal <TerMinal>\\tsearch based on terminal\\n\"\n\t\"\\t-ua,--uid-all <all User id>\\tsearch based on All user id's\\n\"\n\t\"\\t-ue,--uid-effective <effective User id>  search based on Effective\\n\\t\\t\\t\\t\\tuser id\\n\"\n",
                      "markdown": "`\t\"\\t-su,--subject <SE Linux context> search based on context of the Subject\\n\"\n\t\"\\t-sv,--success <Success Value>\\tsearch based on syscall or event\\n\\t\\t\\t\\t\\tsuccess value\\n\"\n\t\"\\t-te,--end [end date] [end time]\\tending date & time for search\\n\"\n\t\"\\t-ts,--start [start date] [start time]\\tstarting date & time for search\\n\"\n\t\"\\t-tm,--terminal <TerMinal>\\tsearch based on terminal\\n\"\n\t\"\\t-ua,--uid-all <all User id>\\tsearch based on All user id's\\n\"\n\t\"\\t-ue,--uid-effective <effective User id>  search based on Effective\\n\\t\\t\\t\\t\\tuser id\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-options.c"
                },
                "region": {
                  "startLine": 235,
                  "startColumn": 50,
                  "endLine": 235,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\t\"\\t--session <login session id>\\tsearch based on login session id\\n\"\n\t\"\\t-su,--subject <SE Linux context> search based on context of the Subject\\n\"\n\t\"\\t-sv,--success <Success Value>\\tsearch based on syscall or event\\n\\t\\t\\t\\t\\tsuccess value\\n\"\n\t\"\\t-te,--end [end date] [end time]\\tending date & time for search\\n\"\n\t\"\\t-ts,--start [start date] [start time]\\tstarting date & time for search\\n\"\n\t\"\\t-tm,--terminal <TerMinal>\\tsearch based on terminal\\n\"\n\t\"\\t-ua,--uid-all <all User id>\\tsearch based on All user id's\\n\"\n",
                    "rendered": {
                      "text": "\t\"\\t--session <login session id>\\tsearch based on login session id\\n\"\n\t\"\\t-su,--subject <SE Linux context> search based on context of the Subject\\n\"\n\t\"\\t-sv,--success <Success Value>\\tsearch based on syscall or event\\n\\t\\t\\t\\t\\tsuccess value\\n\"\n\t\"\\t-te,--end [end date] [end time]\\tending date & time for search\\n\"\n\t\"\\t-ts,--start [start date] [start time]\\tstarting date & time for search\\n\"\n\t\"\\t-tm,--terminal <TerMinal>\\tsearch based on terminal\\n\"\n\t\"\\t-ua,--uid-all <all User id>\\tsearch based on All user id's\\n\"\n",
                      "markdown": "`\t\"\\t--session <login session id>\\tsearch based on login session id\\n\"\n\t\"\\t-su,--subject <SE Linux context> search based on context of the Subject\\n\"\n\t\"\\t-sv,--success <Success Value>\\tsearch based on syscall or event\\n\\t\\t\\t\\t\\tsuccess value\\n\"\n\t\"\\t-te,--end [end date] [end time]\\tending date & time for search\\n\"\n\t\"\\t-ts,--start [start date] [start time]\\tstarting date & time for search\\n\"\n\t\"\\t-tm,--terminal <TerMinal>\\tsearch based on terminal\\n\"\n\t\"\\t-ua,--uid-all <all User id>\\tsearch based on All user id's\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/delete_all.c"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 4,
                  "endLine": 38,
                  "endColumn": 13,
                  "snippet": {
                    "text": "int delete_all_rules(int fd)\n{\n\tint seq, i, rc;\n\tint timeout = 40; /* tenths of seconds */\n\tstruct audit_reply rep;\n\tfd_set read_mask;\n\tllist l;\n",
                    "rendered": {
                      "text": "int delete_all_rules(int fd)\n{\n\tint seq, i, rc;\n\tint timeout = 40; /* tenths of seconds */\n\tstruct audit_reply rep;\n\tfd_set read_mask;\n\tllist l;\n",
                      "markdown": "`int delete_all_rules(int fd)\n{\n\tint seq, i, rc;\n\tint timeout = 40; /* tenths of seconds */\n\tstruct audit_reply rep;\n\tfd_set read_mask;\n\tllist l;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/libev/Makefile.am"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 24,
                  "endLine": 2,
                  "endColumn": 29,
                  "snippet": {
                    "text": "# Makefile.am-- \n# Copyright 2008,2011-12 Red Hat Inc.\n# All Rights Reserved.\n#\n# This program is free software; you can redistribute it and/or modify\n",
                    "rendered": {
                      "text": "# Makefile.am-- \n# Copyright 2008,2011-12 Red Hat Inc.\n# All Rights Reserved.\n#\n# This program is free software; you can redistribute it and/or modify\n",
                      "markdown": "`# Makefile.am-- \n# Copyright 2008,2011-12 Red Hat Inc.\n# All Rights Reserved.\n#\n# This program is free software; you can redistribute it and/or modify\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/test/ilist_test.c"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 1,
                  "endLine": 56,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\ti = 0;\n\tilist_first(&e);\n\tdo {\n\t\tnode = ilist_get_cur(&e);\n\t\tif (node->hits != (4-i)) {\n\t\t\tprintf(\"Sort test failed - i:%d != ihits:%u\\n\",\n\t\t\t\ti, node->hits);\n",
                    "rendered": {
                      "text": "\ti = 0;\n\tilist_first(&e);\n\tdo {\n\t\tnode = ilist_get_cur(&e);\n\t\tif (node->hits != (4-i)) {\n\t\t\tprintf(\"Sort test failed - i:%d != ihits:%u\\n\",\n\t\t\t\ti, node->hits);\n",
                      "markdown": "`\ti = 0;\n\tilist_first(&e);\n\tdo {\n\t\tnode = ilist_get_cur(&e);\n\t\tif (node->hits != (4-i)) {\n\t\t\tprintf(\"Sort test failed - i:%d != ihits:%u\\n\",\n\t\t\t\ti, node->hits);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/test/ilist_test.c"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 15,
                  "endLine": 36,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t} while ((node = ilist_next(&e)));\n\n\tilist_clear(&e);\n\tputs(\"starting sort test\");\n\n\t// Now test to see if the sort function works\n\t// Fill the list exactly backwards\n",
                    "rendered": {
                      "text": "\t} while ((node = ilist_next(&e)));\n\n\tilist_clear(&e);\n\tputs(\"starting sort test\");\n\n\t// Now test to see if the sort function works\n\t// Fill the list exactly backwards\n",
                      "markdown": "`\t} while ((node = ilist_next(&e)));\n\n\tilist_clear(&e);\n\tputs(\"starting sort test\");\n\n\t// Now test to see if the sort function works\n\t// Fill the list exactly backwards\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/test/ilist_test.c"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 1,
                  "endLine": 27,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n\tilist_first(&e);\n\tdo {\n\t\tnode = ilist_get_cur(&e);\n\t\tif (i != node->num) {\n\t\t\tprintf(\"Test failed - i:%d != num:%d\\n\", i, node->num);\n\t\t\treturn 1;\n",
                    "rendered": {
                      "text": "\n\tilist_first(&e);\n\tdo {\n\t\tnode = ilist_get_cur(&e);\n\t\tif (i != node->num) {\n\t\t\tprintf(\"Test failed - i:%d != num:%d\\n\", i, node->num);\n\t\t\treturn 1;\n",
                      "markdown": "`\n\tilist_first(&e);\n\tdo {\n\t\tnode = ilist_get_cur(&e);\n\t\tif (i != node->num) {\n\t\t\tprintf(\"Test failed - i:%d != num:%d\\n\", i, node->num);\n\t\t\treturn 1;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/test/slist_test.c"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 1,
                  "endLine": 85,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tslist_sort_by_hits(&s);\n\tslist_first(&s);\n\tdo {\n\t\tnode = slist_get_cur(&s);\n\t\tif (node->hits != (4-i)) {\n\t\t\tprintf(\"Sort test failed - i:%d != hits:%u\\n\",\n\t\t\t       i, node->hits);\n",
                    "rendered": {
                      "text": "\tslist_sort_by_hits(&s);\n\tslist_first(&s);\n\tdo {\n\t\tnode = slist_get_cur(&s);\n\t\tif (node->hits != (4-i)) {\n\t\t\tprintf(\"Sort test failed - i:%d != hits:%u\\n\",\n\t\t\t       i, node->hits);\n",
                      "markdown": "`\tslist_sort_by_hits(&s);\n\tslist_first(&s);\n\tdo {\n\t\tnode = slist_get_cur(&s);\n\t\tif (node->hits != (4-i)) {\n\t\t\tprintf(\"Sort test failed - i:%d != hits:%u\\n\",\n\t\t\t       i, node->hits);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/test/slist_test.c"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 15,
                  "endLine": 67,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\tputs(\"test count is wrong\");\n\t\treturn 1;\n\t}\n\tputs(\"starting sort test\");\n\n\t// Now test to see if the sort function works\n\t// Fill the list exactly backwards\n",
                    "rendered": {
                      "text": "\t\tputs(\"test count is wrong\");\n\t\treturn 1;\n\t}\n\tputs(\"starting sort test\");\n\n\t// Now test to see if the sort function works\n\t// Fill the list exactly backwards\n",
                      "markdown": "`\t\tputs(\"test count is wrong\");\n\t\treturn 1;\n\t}\n\tputs(\"starting sort test\");\n\n\t// Now test to see if the sort function works\n\t// Fill the list exactly backwards\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/test/Makefile.am"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 26,
                  "endLine": 1,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# Copyright 2008,2014,2015 Red Hat Inc., Durham, North Carolina.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                    "rendered": {
                      "text": "# Copyright 2008,2014,2015 Red Hat Inc., Durham, North Carolina.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                      "markdown": "`# Copyright 2008,2014,2015 Red Hat Inc., Durham, North Carolina.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.c"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 114,
                  "endLine": 15,
                  "endColumn": 122,
                  "snippet": {
                    "text": "\t\t\"type=LOGIN msg=audit(1143146623.787:142): login pid=2027 uid=0 old auid=4294967295 new auid=848\\n\"\n\t\t\"type=SYSCALL msg=audit(1143146623.875:143): arch=c000003e syscall=188 success=yes exit=0 a0=7fffffa9a9f0 a1=3958d11333 a2=5131f0 a3=20 items=1 pid=2027 auid=848 uid=0 gid=0 euid=0 suid=0 fsuid=0 egid=0 sgid=0 fsgid=0 tty=tty3 comm=\\\"login\\\" exe=\\\"/bin/login\\\" subj=system_u:system_r:local_login_t:s0-s0:c0.c255\\n\",\n\n\t\t\"type=USER_LOGIN msg=audit(1143146623.879:146): user pid=2027 uid=0 auid=848 msg=\\'uid=848: exe=\\\"/bin/login\\\" (hostname=?, addr=?, terminal=tty3 res=success)\\'\\n\",\n\n\t\tNULL\n};\n",
                    "rendered": {
                      "text": "\t\t\"type=LOGIN msg=audit(1143146623.787:142): login pid=2027 uid=0 old auid=4294967295 new auid=848\\n\"\n\t\t\"type=SYSCALL msg=audit(1143146623.875:143): arch=c000003e syscall=188 success=yes exit=0 a0=7fffffa9a9f0 a1=3958d11333 a2=5131f0 a3=20 items=1 pid=2027 auid=848 uid=0 gid=0 euid=0 suid=0 fsuid=0 egid=0 sgid=0 fsgid=0 tty=tty3 comm=\\\"login\\\" exe=\\\"/bin/login\\\" subj=system_u:system_r:local_login_t:s0-s0:c0.c255\\n\",\n\n\t\t\"type=USER_LOGIN msg=audit(1143146623.879:146): user pid=2027 uid=0 auid=848 msg=\\'uid=848: exe=\\\"/bin/login\\\" (hostname=?, addr=?, terminal=tty3 res=success)\\'\\n\",\n\n\t\tNULL\n};\n",
                      "markdown": "`\t\t\"type=LOGIN msg=audit(1143146623.787:142): login pid=2027 uid=0 old auid=4294967295 new auid=848\\n\"\n\t\t\"type=SYSCALL msg=audit(1143146623.875:143): arch=c000003e syscall=188 success=yes exit=0 a0=7fffffa9a9f0 a1=3958d11333 a2=5131f0 a3=20 items=1 pid=2027 auid=848 uid=0 gid=0 euid=0 suid=0 fsuid=0 egid=0 sgid=0 fsgid=0 tty=tty3 comm=\\\"login\\\" exe=\\\"/bin/login\\\" subj=system_u:system_r:local_login_t:s0-s0:c0.c255\\n\",\n\n\t\t\"type=USER_LOGIN msg=audit(1143146623.879:146): user pid=2027 uid=0 auid=848 msg=\\'uid=848: exe=\\\"/bin/login\\\" (hostname=?, addr=?, terminal=tty3 res=success)\\'\\n\",\n\n\t\tNULL\n};\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref.py"
                },
                "region": {
                  "startLine": 953,
                  "startColumn": 8,
                  "endLine": 953,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref.py"
                },
                "region": {
                  "startLine": 937,
                  "startColumn": 8,
                  "endLine": 937,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref.py"
                },
                "region": {
                  "startLine": 921,
                  "startColumn": 8,
                  "endLine": 921,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref.py"
                },
                "region": {
                  "startLine": 853,
                  "startColumn": 8,
                  "endLine": 853,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref.py"
                },
                "region": {
                  "startLine": 837,
                  "startColumn": 8,
                  "endLine": 837,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref.py"
                },
                "region": {
                  "startLine": 752,
                  "startColumn": 8,
                  "endLine": 752,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        auid=848 (unknown(848))\n        uid=848 (unknown(848))\n        exe=\"/bin/login\" (/bin/login)\n        hostname=? (?)\n        addr=? (?)\n        terminal=tty3 (tty3)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        auid=848 (unknown(848))\n        uid=848 (unknown(848))\n        exe=\"/bin/login\" (/bin/login)\n        hostname=? (?)\n        addr=? (?)\n        terminal=tty3 (tty3)\n        res=success (success)\n",
                      "markdown": "`        auid=848 (unknown(848))\n        uid=848 (unknown(848))\n        exe=\"/bin/login\" (/bin/login)\n        hostname=? (?)\n        addr=? (?)\n        terminal=tty3 (tty3)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref.py"
                },
                "region": {
                  "startLine": 668,
                  "startColumn": 8,
                  "endLine": 668,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref.py"
                },
                "region": {
                  "startLine": 652,
                  "startColumn": 8,
                  "endLine": 652,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref.py"
                },
                "region": {
                  "startLine": 636,
                  "startColumn": 8,
                  "endLine": 636,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref.py"
                },
                "region": {
                  "startLine": 568,
                  "startColumn": 8,
                  "endLine": 568,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref.py"
                },
                "region": {
                  "startLine": 552,
                  "startColumn": 8,
                  "endLine": 552,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref.py"
                },
                "region": {
                  "startLine": 470,
                  "startColumn": 8,
                  "endLine": 470,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref.py"
                },
                "region": {
                  "startLine": 454,
                  "startColumn": 8,
                  "endLine": 454,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref.py"
                },
                "region": {
                  "startLine": 438,
                  "startColumn": 8,
                  "endLine": 438,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref.py"
                },
                "region": {
                  "startLine": 370,
                  "startColumn": 8,
                  "endLine": 370,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref.py"
                },
                "region": {
                  "startLine": 354,
                  "startColumn": 8,
                  "endLine": 354,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref.py"
                },
                "region": {
                  "startLine": 269,
                  "startColumn": 8,
                  "endLine": 269,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref.py"
                },
                "region": {
                  "startLine": 253,
                  "startColumn": 8,
                  "endLine": 253,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref.py"
                },
                "region": {
                  "startLine": 237,
                  "startColumn": 8,
                  "endLine": 237,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref.py"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 8,
                  "endLine": 169,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref.py"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 8,
                  "endLine": 153,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref.py"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 8,
                  "endLine": 60,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        auid=848 (unknown(848))\n        uid=848 (unknown(848))\n        exe=\"/bin/login\" (/bin/login)\n        hostname=? (?)\n        addr=? (?)\n        terminal=tty3 (tty3)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        auid=848 (unknown(848))\n        uid=848 (unknown(848))\n        exe=\"/bin/login\" (/bin/login)\n        hostname=? (?)\n        addr=? (?)\n        terminal=tty3 (tty3)\n        res=success (success)\n",
                      "markdown": "`        auid=848 (unknown(848))\n        uid=848 (unknown(848))\n        exe=\"/bin/login\" (/bin/login)\n        hostname=? (?)\n        addr=? (?)\n        terminal=tty3 (tty3)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/test3.log"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 220,
                  "endLine": 15,
                  "endColumn": 228,
                  "snippet": {
                    "text": " msg=audit(1451781471.394:194440): proctitle=737368643A206275726E205B707269765D\nnode=auditdtest.a1959.org type=ADD_GROUP msg=audit(1451781471.602:194894): pid=1321 uid=0 auid=1000 ses=1 subj=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023 msg='op=add-group acct=\"frodo\" exe=\"/usr/sbin/useradd\" hostname=? addr=? terminal=pts/0 res=success'\n",
                    "rendered": {
                      "text": " msg=audit(1451781471.394:194440): proctitle=737368643A206275726E205B707269765D\nnode=auditdtest.a1959.org type=ADD_GROUP msg=audit(1451781471.602:194894): pid=1321 uid=0 auid=1000 ses=1 subj=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023 msg='op=add-group acct=\"frodo\" exe=\"/usr/sbin/useradd\" hostname=? addr=? terminal=pts/0 res=success'\n",
                      "markdown": "` msg=audit(1451781471.394:194440): proctitle=737368643A206275726E205B707269765D\nnode=auditdtest.a1959.org type=ADD_GROUP msg=audit(1451781471.602:194894): pid=1321 uid=0 auid=1000 ses=1 subj=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023 msg='op=add-group acct=\"frodo\" exe=\"/usr/sbin/useradd\" hostname=? addr=? terminal=pts/0 res=success'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/test2.log"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 178,
                  "endLine": 12,
                  "endColumn": 186,
                  "snippet": {
                    "text": "ond_t:s0-s0:c0.c1023 msg='PAM: setcred acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\ntype=USER_END msg=audit(1170021601.366:289): user pid=13015 uid=0 auid=0 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: session close acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\n",
                    "rendered": {
                      "text": "ond_t:s0-s0:c0.c1023 msg='PAM: setcred acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\ntype=USER_END msg=audit(1170021601.366:289): user pid=13015 uid=0 auid=0 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: session close acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\n",
                      "markdown": "`ond_t:s0-s0:c0.c1023 msg='PAM: setcred acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\ntype=USER_END msg=audit(1170021601.366:289): user pid=13015 uid=0 auid=0 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: session close acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/test2.log"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 173,
                  "endLine": 11,
                  "endColumn": 181,
                  "snippet": {
                    "text": "ond_t:s0-s0:c0.c1023 msg='PAM: session open acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\ntype=CRED_DISP msg=audit(1170021601.364:288): user pid=13015 uid=0 auid=0 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: setcred acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\ntype=USER_END msg=audit(1170021601.366:289): user pid=13015 uid=0 auid=0 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: session close acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\n",
                    "rendered": {
                      "text": "ond_t:s0-s0:c0.c1023 msg='PAM: session open acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\ntype=CRED_DISP msg=audit(1170021601.364:288): user pid=13015 uid=0 auid=0 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: setcred acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\ntype=USER_END msg=audit(1170021601.366:289): user pid=13015 uid=0 auid=0 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: session close acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\n",
                      "markdown": "`ond_t:s0-s0:c0.c1023 msg='PAM: session open acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\ntype=CRED_DISP msg=audit(1170021601.364:288): user pid=13015 uid=0 auid=0 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: setcred acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\ntype=USER_END msg=audit(1170021601.366:289): user pid=13015 uid=0 auid=0 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: session close acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/test2.log"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 179,
                  "endLine": 10,
                  "endColumn": 187,
                  "snippet": {
                    "text": "systemd\" subj=system_u:system_r:init_t:s0 key=(null)\ntype=PROCTITLE msg=audit(1170021601.343:286): proctitle=\"(systemd)\"\ntype=USER_START msg=audit(1170021601.344:287): user pid=13015 uid=0 auid=0 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: session open acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\ntype=CRED_DISP msg=audit(1170021601.364:288): user pid=13015 uid=0 auid=0 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: setcred acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\ntype=USER_END msg=audit(1170021601.366:",
                    "rendered": {
                      "text": "systemd\" subj=system_u:system_r:init_t:s0 key=(null)\ntype=PROCTITLE msg=audit(1170021601.343:286): proctitle=\"(systemd)\"\ntype=USER_START msg=audit(1170021601.344:287): user pid=13015 uid=0 auid=0 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: session open acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\ntype=CRED_DISP msg=audit(1170021601.364:288): user pid=13015 uid=0 auid=0 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: setcred acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\ntype=USER_END msg=audit(1170021601.366:",
                      "markdown": "`systemd\" subj=system_u:system_r:init_t:s0 key=(null)\ntype=PROCTITLE msg=audit(1170021601.343:286): proctitle=\"(systemd)\"\ntype=USER_START msg=audit(1170021601.344:287): user pid=13015 uid=0 auid=0 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: session open acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\ntype=CRED_DISP msg=audit(1170021601.364:288): user pid=13015 uid=0 auid=0 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: setcred acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\ntype=USER_END msg=audit(1170021601.366:`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/test2.log"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 180,
                  "endLine": 6,
                  "endColumn": 188,
                  "snippet": {
                    "text": "nd_t:s0-s0:c0.c1023 msg='PAM: accounting acct=root : exe=\"/usr/sbin/crond\" hostname=? addr=? terminal=cron res=success'\ntype=CRED_ACQ msg=audit(1170021601.342:285): user pid=13015 uid=0 auid=4294967295 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: setcred acct=root : exe=\"/usr/sbin/crond\" hostname=? addr=? terminal=cron res=success'\ntype=LOGIN msg=audit(1170021601.343:286): pid=2288 uid=0 subj=system_u:system_r:init_t:s0 old-auid=4294967295 auid=42 tty=(none) old-ses=4294967295 ses=1 res=1\ntype=SYSCALL msg=audit(1170021601.343:286): arch=c000003e syscall=1 success=yes exit=2 a0=8 a1=7fffa7ae",
                    "rendered": {
                      "text": "nd_t:s0-s0:c0.c1023 msg='PAM: accounting acct=root : exe=\"/usr/sbin/crond\" hostname=? addr=? terminal=cron res=success'\ntype=CRED_ACQ msg=audit(1170021601.342:285): user pid=13015 uid=0 auid=4294967295 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: setcred acct=root : exe=\"/usr/sbin/crond\" hostname=? addr=? terminal=cron res=success'\ntype=LOGIN msg=audit(1170021601.343:286): pid=2288 uid=0 subj=system_u:system_r:init_t:s0 old-auid=4294967295 auid=42 tty=(none) old-ses=4294967295 ses=1 res=1\ntype=SYSCALL msg=audit(1170021601.343:286): arch=c000003e syscall=1 success=yes exit=2 a0=8 a1=7fffa7ae",
                      "markdown": "`nd_t:s0-s0:c0.c1023 msg='PAM: accounting acct=root : exe=\"/usr/sbin/crond\" hostname=? addr=? terminal=cron res=success'\ntype=CRED_ACQ msg=audit(1170021601.342:285): user pid=13015 uid=0 auid=4294967295 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: setcred acct=root : exe=\"/usr/sbin/crond\" hostname=? addr=? terminal=cron res=success'\ntype=LOGIN msg=audit(1170021601.343:286): pid=2288 uid=0 subj=system_u:system_r:init_t:s0 old-auid=4294967295 auid=42 tty=(none) old-ses=4294967295 ses=1 res=1\ntype=SYSCALL msg=audit(1170021601.343:286): arch=c000003e syscall=1 success=yes exit=2 a0=8 a1=7fffa7ae`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/test2.log"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 184,
                  "endLine": 5,
                  "endColumn": 192,
                  "snippet": {
                    "text": "inode=14911367 dev=03:07 mode=040730 ouid=890 ogid=891 rdev=00:00 obj=system_u:object_r:postfix_spool_maildrop_t:s0\ntype=USER_ACCT msg=audit(1170021601.340:284): user pid=13015 uid=0 auid=4294967295 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: accounting acct=root : exe=\"/usr/sbin/crond\" hostname=? addr=? terminal=cron res=success'\ntype=CRED_ACQ msg=audit(1170021601.342:285): user pid=13015 uid=0 auid=4294967295 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: setcred acct=root : exe=\"/usr/sbin/crond\" hostname=? addr=? terminal=cron res=success'\ntype=LOGIN msg=audit(1170021601.343:28",
                    "rendered": {
                      "text": "inode=14911367 dev=03:07 mode=040730 ouid=890 ogid=891 rdev=00:00 obj=system_u:object_r:postfix_spool_maildrop_t:s0\ntype=USER_ACCT msg=audit(1170021601.340:284): user pid=13015 uid=0 auid=4294967295 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: accounting acct=root : exe=\"/usr/sbin/crond\" hostname=? addr=? terminal=cron res=success'\ntype=CRED_ACQ msg=audit(1170021601.342:285): user pid=13015 uid=0 auid=4294967295 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: setcred acct=root : exe=\"/usr/sbin/crond\" hostname=? addr=? terminal=cron res=success'\ntype=LOGIN msg=audit(1170021601.343:28",
                      "markdown": "`inode=14911367 dev=03:07 mode=040730 ouid=890 ogid=891 rdev=00:00 obj=system_u:object_r:postfix_spool_maildrop_t:s0\ntype=USER_ACCT msg=audit(1170021601.340:284): user pid=13015 uid=0 auid=4294967295 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: accounting acct=root : exe=\"/usr/sbin/crond\" hostname=? addr=? terminal=cron res=success'\ntype=CRED_ACQ msg=audit(1170021601.342:285): user pid=13015 uid=0 auid=4294967295 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: setcred acct=root : exe=\"/usr/sbin/crond\" hostname=? addr=? terminal=cron res=success'\ntype=LOGIN msg=audit(1170021601.343:28`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref"
                },
                "region": {
                  "startLine": 963,
                  "startColumn": 8,
                  "endLine": 963,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref"
                },
                "region": {
                  "startLine": 947,
                  "startColumn": 8,
                  "endLine": 947,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref"
                },
                "region": {
                  "startLine": 931,
                  "startColumn": 8,
                  "endLine": 931,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref"
                },
                "region": {
                  "startLine": 863,
                  "startColumn": 8,
                  "endLine": 863,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref"
                },
                "region": {
                  "startLine": 847,
                  "startColumn": 8,
                  "endLine": 847,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref"
                },
                "region": {
                  "startLine": 762,
                  "startColumn": 8,
                  "endLine": 762,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        auid=848 (unknown(848))\n        uid=848 (unknown(848))\n        exe=\"/bin/login\" (/bin/login)\n        hostname=? (?)\n        addr=? (?)\n        terminal=tty3 (tty3)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        auid=848 (unknown(848))\n        uid=848 (unknown(848))\n        exe=\"/bin/login\" (/bin/login)\n        hostname=? (?)\n        addr=? (?)\n        terminal=tty3 (tty3)\n        res=success (success)\n",
                      "markdown": "`        auid=848 (unknown(848))\n        uid=848 (unknown(848))\n        exe=\"/bin/login\" (/bin/login)\n        hostname=? (?)\n        addr=? (?)\n        terminal=tty3 (tty3)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref"
                },
                "region": {
                  "startLine": 676,
                  "startColumn": 8,
                  "endLine": 676,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref"
                },
                "region": {
                  "startLine": 660,
                  "startColumn": 8,
                  "endLine": 660,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref"
                },
                "region": {
                  "startLine": 644,
                  "startColumn": 8,
                  "endLine": 644,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref"
                },
                "region": {
                  "startLine": 576,
                  "startColumn": 8,
                  "endLine": 576,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref"
                },
                "region": {
                  "startLine": 560,
                  "startColumn": 8,
                  "endLine": 560,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref"
                },
                "region": {
                  "startLine": 478,
                  "startColumn": 8,
                  "endLine": 478,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref"
                },
                "region": {
                  "startLine": 462,
                  "startColumn": 8,
                  "endLine": 462,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref"
                },
                "region": {
                  "startLine": 446,
                  "startColumn": 8,
                  "endLine": 446,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref"
                },
                "region": {
                  "startLine": 378,
                  "startColumn": 8,
                  "endLine": 378,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref"
                },
                "region": {
                  "startLine": 362,
                  "startColumn": 8,
                  "endLine": 362,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref"
                },
                "region": {
                  "startLine": 277,
                  "startColumn": 8,
                  "endLine": 277,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref"
                },
                "region": {
                  "startLine": 261,
                  "startColumn": 8,
                  "endLine": 261,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref"
                },
                "region": {
                  "startLine": 245,
                  "startColumn": 8,
                  "endLine": 245,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 8,
                  "endLine": 177,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 8,
                  "endLine": 161,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n",
                      "markdown": "`        subj=system_u:system_r:crond_t:s0-s0:c0.c1023 (system_u:system_r:crond_t:s0-s0:c0.c1023)\n        acct=root (root)\n        exe=\"/usr/sbin/crond\" (/usr/sbin/crond)\n        hostname=? (?)\n        addr=? (?)\n        terminal=cron (cron)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.ref"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 8,
                  "endLine": 68,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        auid=848 (unknown(848))\n        uid=848 (unknown(848))\n        exe=\"/bin/login\" (/bin/login)\n        hostname=? (?)\n        addr=? (?)\n        terminal=tty3 (tty3)\n        res=success (success)\n",
                    "rendered": {
                      "text": "        auid=848 (unknown(848))\n        uid=848 (unknown(848))\n        exe=\"/bin/login\" (/bin/login)\n        hostname=? (?)\n        addr=? (?)\n        terminal=tty3 (tty3)\n        res=success (success)\n",
                      "markdown": "`        auid=848 (unknown(848))\n        uid=848 (unknown(848))\n        exe=\"/bin/login\" (/bin/login)\n        hostname=? (?)\n        addr=? (?)\n        terminal=tty3 (tty3)\n        res=success (success)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.py"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 112,
                  "endLine": 7,
                  "endColumn": 120,
                  "snippet": {
                    "text": "0 a3=20 items=1 pid=2027 auid=848 uid=0 gid=0 euid=0 suid=0 fsuid=0 egid=0 sgid=0 fsgid=0 tty=tty3 comm=\\\"login\\\" exe=\\\"/bin/login\\\" subj=system_u:system_r:local_login_t:s0-s0:c0.c255\\n\",\n\"type=USER_LOGIN msg=audit(1143146623.879:146): user pid=2027 uid=0 auid=848 msg=\\'uid=848: exe=\\\"/bin/login\\\" (hostname=?, addr=?, terminal=tty3 res=success)\\'\\n\",\n]\nfiles = [\"%s%s\" % (srcdir,\"/test2.log\"), \"%s%s\" % (srcdir,\"/test.log\")]\n\nimport sys\nimport time\nload_path = '../../bindings/python/python3'\nif False:\n    sys.path.insert(0, load_path)\n\nimport auparse\n\ndef none_to_null(s):\n    'used so output matches C v",
                    "rendered": {
                      "text": "0 a3=20 items=1 pid=2027 auid=848 uid=0 gid=0 euid=0 suid=0 fsuid=0 egid=0 sgid=0 fsgid=0 tty=tty3 comm=\\\"login\\\" exe=\\\"/bin/login\\\" subj=system_u:system_r:local_login_t:s0-s0:c0.c255\\n\",\n\"type=USER_LOGIN msg=audit(1143146623.879:146): user pid=2027 uid=0 auid=848 msg=\\'uid=848: exe=\\\"/bin/login\\\" (hostname=?, addr=?, terminal=tty3 res=success)\\'\\n\",\n]\nfiles = [\"%s%s\" % (srcdir,\"/test2.log\"), \"%s%s\" % (srcdir,\"/test.log\")]\n\nimport sys\nimport time\nload_path = '../../bindings/python/python3'\nif False:\n    sys.path.insert(0, load_path)\n\nimport auparse\n\ndef none_to_null(s):\n    'used so output matches C v",
                      "markdown": "`0 a3=20 items=1 pid=2027 auid=848 uid=0 gid=0 euid=0 suid=0 fsuid=0 egid=0 sgid=0 fsgid=0 tty=tty3 comm=\\\"login\\\" exe=\\\"/bin/login\\\" subj=system_u:system_r:local_login_t:s0-s0:c0.c255\\n\",\n\"type=USER_LOGIN msg=audit(1143146623.879:146): user pid=2027 uid=0 auid=848 msg=\\'uid=848: exe=\\\"/bin/login\\\" (hostname=?, addr=?, terminal=tty3 res=success)\\'\\n\",\n]\nfiles = [\"%s%s\" % (srcdir,\"/test2.log\"), \"%s%s\" % (srcdir,\"/test.log\")]\n\nimport sys\nimport time\nload_path = '../../bindings/python/python3'\nif False:\n    sys.path.insert(0, load_path)\n\nimport auparse\n\ndef none_to_null(s):\n    'used so output matches C v`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auparse_test.py"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 6,
                  "endLine": 13,
                  "snippet": {
                    "text": "files = [\"%s%s\" % (srcdir,\"/test2.log\"), \"%s%s\" % (srcdir,\"/test.log\")]\n\nimport sys\nimport time\nload_path = '../../bindings/python/python3'\nif False:\n    sys.path.insert(0, load_path)\n\n",
                    "rendered": {
                      "text": "files = [\"%s%s\" % (srcdir,\"/test2.log\"), \"%s%s\" % (srcdir,\"/test.log\")]\n\nimport sys\nimport time\nload_path = '../../bindings/python/python3'\nif False:\n    sys.path.insert(0, load_path)\n\n",
                      "markdown": "`files = [\"%s%s\" % (srcdir,\"/test2.log\"), \"%s%s\" % (srcdir,\"/test.log\")]\n\nimport sys\nimport time\nload_path = '../../bindings/python/python3'\nif False:\n    sys.path.insert(0, load_path)\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/Makefile.am"
                },
                "region": {
                  "startLine": 93,
                  "endLine": 93,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tLD_LIBRARY_PATH=${top_builddir}/auparse/.libs \\\n\t\tsrcdir=$(srcdir) $(srcdir)/auparse_test.py \\\n\t\t| $(drop_srcdir) > auparse_test.cur\n\tdiff -u $(srcdir)/auparse_test.ref.py auparse_test.cur\nendif\n\npymemcheck: auparse_test.py\n",
                    "rendered": {
                      "text": "\tLD_LIBRARY_PATH=${top_builddir}/auparse/.libs \\\n\t\tsrcdir=$(srcdir) $(srcdir)/auparse_test.py \\\n\t\t| $(drop_srcdir) > auparse_test.cur\n\tdiff -u $(srcdir)/auparse_test.ref.py auparse_test.cur\nendif\n\npymemcheck: auparse_test.py\n",
                      "markdown": "`\tLD_LIBRARY_PATH=${top_builddir}/auparse/.libs \\\n\t\tsrcdir=$(srcdir) $(srcdir)/auparse_test.py \\\n\t\t| $(drop_srcdir) > auparse_test.cur\n\tdiff -u $(srcdir)/auparse_test.ref.py auparse_test.cur\nendif\n\npymemcheck: auparse_test.py\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/Makefile.am"
                },
                "region": {
                  "startLine": 73,
                  "endLine": 73,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tdiff -u $(srcdir)/auparse_test.ref auparse_test.cur\n\t./auparselol_test -f test3.log --check | sort > auparse_test.cur\n\tsed -f ./auditd_raw.sed test3.log | sort > auparse_test.raw\n\tdiff -u auparse_test.raw auparse_test.cur\n\nmemcheck: auparse_test\n\tvalgrind --leak-check=yes --show-reachable=yes ./auparse_test \n",
                    "rendered": {
                      "text": "\tdiff -u $(srcdir)/auparse_test.ref auparse_test.cur\n\t./auparselol_test -f test3.log --check | sort > auparse_test.cur\n\tsed -f ./auditd_raw.sed test3.log | sort > auparse_test.raw\n\tdiff -u auparse_test.raw auparse_test.cur\n\nmemcheck: auparse_test\n\tvalgrind --leak-check=yes --show-reachable=yes ./auparse_test \n",
                      "markdown": "`\tdiff -u $(srcdir)/auparse_test.ref auparse_test.cur\n\t./auparselol_test -f test3.log --check | sort > auparse_test.cur\n\tsed -f ./auditd_raw.sed test3.log | sort > auparse_test.raw\n\tdiff -u auparse_test.raw auparse_test.cur\n\nmemcheck: auparse_test\n\tvalgrind --leak-check=yes --show-reachable=yes ./auparse_test \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/Makefile.am"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 36,
                  "endLine": 72,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\t./auparse_test > auparse_test.cur\n\tdiff -u $(srcdir)/auparse_test.ref auparse_test.cur\n\t./auparselol_test -f test3.log --check | sort > auparse_test.cur\n\tsed -f ./auditd_raw.sed test3.log | sort > auparse_test.raw\n\tdiff -u auparse_test.raw auparse_test.cur\n\nmemcheck: auparse_test\n",
                    "rendered": {
                      "text": "\t./auparse_test > auparse_test.cur\n\tdiff -u $(srcdir)/auparse_test.ref auparse_test.cur\n\t./auparselol_test -f test3.log --check | sort > auparse_test.cur\n\tsed -f ./auditd_raw.sed test3.log | sort > auparse_test.raw\n\tdiff -u auparse_test.raw auparse_test.cur\n\nmemcheck: auparse_test\n",
                      "markdown": "`\t./auparse_test > auparse_test.cur\n\tdiff -u $(srcdir)/auparse_test.ref auparse_test.cur\n\t./auparselol_test -f test3.log --check | sort > auparse_test.cur\n\tsed -f ./auditd_raw.sed test3.log | sort > auparse_test.raw\n\tdiff -u auparse_test.raw auparse_test.cur\n\nmemcheck: auparse_test\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/Makefile.am"
                },
                "region": {
                  "startLine": 72,
                  "endLine": 72,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t./auparse_test > auparse_test.cur\n\tdiff -u $(srcdir)/auparse_test.ref auparse_test.cur\n\t./auparselol_test -f test3.log --check | sort > auparse_test.cur\n\tsed -f ./auditd_raw.sed test3.log | sort > auparse_test.raw\n\tdiff -u auparse_test.raw auparse_test.cur\n\nmemcheck: auparse_test\n",
                    "rendered": {
                      "text": "\t./auparse_test > auparse_test.cur\n\tdiff -u $(srcdir)/auparse_test.ref auparse_test.cur\n\t./auparselol_test -f test3.log --check | sort > auparse_test.cur\n\tsed -f ./auditd_raw.sed test3.log | sort > auparse_test.raw\n\tdiff -u auparse_test.raw auparse_test.cur\n\nmemcheck: auparse_test\n",
                      "markdown": "`\t./auparse_test > auparse_test.cur\n\tdiff -u $(srcdir)/auparse_test.ref auparse_test.cur\n\t./auparselol_test -f test3.log --check | sort > auparse_test.cur\n\tsed -f ./auditd_raw.sed test3.log | sort > auparse_test.raw\n\tdiff -u auparse_test.raw auparse_test.cur\n\nmemcheck: auparse_test\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/Makefile.am"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 41,
                  "endLine": 71,
                  "endColumn": 47,
                  "snippet": {
                    "text": "diffcheck: auparse_test auparselol_test\n\t./auparse_test > auparse_test.cur\n\tdiff -u $(srcdir)/auparse_test.ref auparse_test.cur\n\t./auparselol_test -f test3.log --check | sort > auparse_test.cur\n\tsed -f ./auditd_raw.sed test3.log | sort > auparse_test.raw\n\tdiff -u auparse_test.raw auparse_test.cur\n\n",
                    "rendered": {
                      "text": "diffcheck: auparse_test auparselol_test\n\t./auparse_test > auparse_test.cur\n\tdiff -u $(srcdir)/auparse_test.ref auparse_test.cur\n\t./auparselol_test -f test3.log --check | sort > auparse_test.cur\n\tsed -f ./auditd_raw.sed test3.log | sort > auparse_test.raw\n\tdiff -u auparse_test.raw auparse_test.cur\n\n",
                      "markdown": "`diffcheck: auparse_test auparselol_test\n\t./auparse_test > auparse_test.cur\n\tdiff -u $(srcdir)/auparse_test.ref auparse_test.cur\n\t./auparselol_test -f test3.log --check | sort > auparse_test.cur\n\tsed -f ./auditd_raw.sed test3.log | sort > auparse_test.raw\n\tdiff -u auparse_test.raw auparse_test.cur\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/Makefile.am"
                },
                "region": {
                  "startLine": 70,
                  "endLine": 70,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\ndiffcheck: auparse_test auparselol_test\n\t./auparse_test > auparse_test.cur\n\tdiff -u $(srcdir)/auparse_test.ref auparse_test.cur\n\t./auparselol_test -f test3.log --check | sort > auparse_test.cur\n\tsed -f ./auditd_raw.sed test3.log | sort > auparse_test.raw\n\tdiff -u auparse_test.raw auparse_test.cur\n",
                    "rendered": {
                      "text": "\ndiffcheck: auparse_test auparselol_test\n\t./auparse_test > auparse_test.cur\n\tdiff -u $(srcdir)/auparse_test.ref auparse_test.cur\n\t./auparselol_test -f test3.log --check | sort > auparse_test.cur\n\tsed -f ./auditd_raw.sed test3.log | sort > auparse_test.raw\n\tdiff -u auparse_test.raw auparse_test.cur\n",
                      "markdown": "`\ndiffcheck: auparse_test auparselol_test\n\t./auparse_test > auparse_test.cur\n\tdiff -u $(srcdir)/auparse_test.ref auparse_test.cur\n\t./auparselol_test -f test3.log --check | sort > auparse_test.cur\n\tsed -f ./auditd_raw.sed test3.log | sort > auparse_test.raw\n\tdiff -u auparse_test.raw auparse_test.cur\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/Makefile.am"
                },
                "region": {
                  "startLine": 63,
                  "endLine": 63,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tLD_LIBRARY_PATH=${top_builddir}/auparse/.libs \\\n\t\tsrcdir=$(srcdir) $(srcdir)/auparse_test.py \\\n\t\t| $(drop_srcdir) > auparse_test.cur\n\tdiff -u $(top_srcdir)/auparse/test/auparse_test.ref.py auparse_test.cur\nendif\n\t./lookup_test\n\techo -e \"===================\\nAuparse Test Passes\\n===================\"\n",
                    "rendered": {
                      "text": "\tLD_LIBRARY_PATH=${top_builddir}/auparse/.libs \\\n\t\tsrcdir=$(srcdir) $(srcdir)/auparse_test.py \\\n\t\t| $(drop_srcdir) > auparse_test.cur\n\tdiff -u $(top_srcdir)/auparse/test/auparse_test.ref.py auparse_test.cur\nendif\n\t./lookup_test\n\techo -e \"===================\\nAuparse Test Passes\\n===================\"\n",
                      "markdown": "`\tLD_LIBRARY_PATH=${top_builddir}/auparse/.libs \\\n\t\tsrcdir=$(srcdir) $(srcdir)/auparse_test.py \\\n\t\t| $(drop_srcdir) > auparse_test.cur\n\tdiff -u $(top_srcdir)/auparse/test/auparse_test.ref.py auparse_test.cur\nendif\n\t./lookup_test\n\techo -e \"===================\\nAuparse Test Passes\\n===================\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/Makefile.am"
                },
                "region": {
                  "startLine": 57,
                  "endLine": 57,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tsed -f $(top_srcdir)/auparse/test/auditd_raw.sed test3.log | sort > auparse_test.raw\n\tdiff -u auparse_test.raw auparse_test.cur\nif USE_PYTHON3\n\tcp ${top_builddir}/bindings/swig/python3/.libs/_audit.so ${top_builddir}/bindings/swig/python3\n\tPYTHONPATH=${top_builddir}/bindings/python/python3/.libs/ \\\n\tPYTHONDONTWRITEBYTECODE=1 \\\n\tLD_LIBRARY_PATH=${top_builddir}/auparse/.libs \\\n",
                    "rendered": {
                      "text": "\tsed -f $(top_srcdir)/auparse/test/auditd_raw.sed test3.log | sort > auparse_test.raw\n\tdiff -u auparse_test.raw auparse_test.cur\nif USE_PYTHON3\n\tcp ${top_builddir}/bindings/swig/python3/.libs/_audit.so ${top_builddir}/bindings/swig/python3\n\tPYTHONPATH=${top_builddir}/bindings/python/python3/.libs/ \\\n\tPYTHONDONTWRITEBYTECODE=1 \\\n\tLD_LIBRARY_PATH=${top_builddir}/auparse/.libs \\\n",
                      "markdown": "`\tsed -f $(top_srcdir)/auparse/test/auditd_raw.sed test3.log | sort > auparse_test.raw\n\tdiff -u auparse_test.raw auparse_test.cur\nif USE_PYTHON3\n\tcp ${top_builddir}/bindings/swig/python3/.libs/_audit.so ${top_builddir}/bindings/swig/python3\n\tPYTHONPATH=${top_builddir}/bindings/python/python3/.libs/ \\\n\tPYTHONDONTWRITEBYTECODE=1 \\\n\tLD_LIBRARY_PATH=${top_builddir}/auparse/.libs \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/Makefile.am"
                },
                "region": {
                  "startLine": 55,
                  "endLine": 55,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tdiff -u $(top_srcdir)/auparse/test/auparse_test.ref auparse_test.cur\n\t./auparselol_test -f test3.log --check | sort > auparse_test.cur\n\tsed -f $(top_srcdir)/auparse/test/auditd_raw.sed test3.log | sort > auparse_test.raw\n\tdiff -u auparse_test.raw auparse_test.cur\nif USE_PYTHON3\n\tcp ${top_builddir}/bindings/swig/python3/.libs/_audit.so ${top_builddir}/bindings/swig/python3\n\tPYTHONPATH=${top_builddir}/bindings/python/python3/.libs/ \\\n",
                    "rendered": {
                      "text": "\tdiff -u $(top_srcdir)/auparse/test/auparse_test.ref auparse_test.cur\n\t./auparselol_test -f test3.log --check | sort > auparse_test.cur\n\tsed -f $(top_srcdir)/auparse/test/auditd_raw.sed test3.log | sort > auparse_test.raw\n\tdiff -u auparse_test.raw auparse_test.cur\nif USE_PYTHON3\n\tcp ${top_builddir}/bindings/swig/python3/.libs/_audit.so ${top_builddir}/bindings/swig/python3\n\tPYTHONPATH=${top_builddir}/bindings/python/python3/.libs/ \\\n",
                      "markdown": "`\tdiff -u $(top_srcdir)/auparse/test/auparse_test.ref auparse_test.cur\n\t./auparselol_test -f test3.log --check | sort > auparse_test.cur\n\tsed -f $(top_srcdir)/auparse/test/auditd_raw.sed test3.log | sort > auparse_test.raw\n\tdiff -u auparse_test.raw auparse_test.cur\nif USE_PYTHON3\n\tcp ${top_builddir}/bindings/swig/python3/.libs/_audit.so ${top_builddir}/bindings/swig/python3\n\tPYTHONPATH=${top_builddir}/bindings/python/python3/.libs/ \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/Makefile.am"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 61,
                  "endLine": 54,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\t./auparse_test > auparse_test.cur\n\tdiff -u $(top_srcdir)/auparse/test/auparse_test.ref auparse_test.cur\n\t./auparselol_test -f test3.log --check | sort > auparse_test.cur\n\tsed -f $(top_srcdir)/auparse/test/auditd_raw.sed test3.log | sort > auparse_test.raw\n\tdiff -u auparse_test.raw auparse_test.cur\nif USE_PYTHON3\n\tcp ${top_builddir}/bindings/swig/python3/.libs/_audit.so ${top_builddir}/bindings/swig/python3\n",
                    "rendered": {
                      "text": "\t./auparse_test > auparse_test.cur\n\tdiff -u $(top_srcdir)/auparse/test/auparse_test.ref auparse_test.cur\n\t./auparselol_test -f test3.log --check | sort > auparse_test.cur\n\tsed -f $(top_srcdir)/auparse/test/auditd_raw.sed test3.log | sort > auparse_test.raw\n\tdiff -u auparse_test.raw auparse_test.cur\nif USE_PYTHON3\n\tcp ${top_builddir}/bindings/swig/python3/.libs/_audit.so ${top_builddir}/bindings/swig/python3\n",
                      "markdown": "`\t./auparse_test > auparse_test.cur\n\tdiff -u $(top_srcdir)/auparse/test/auparse_test.ref auparse_test.cur\n\t./auparselol_test -f test3.log --check | sort > auparse_test.cur\n\tsed -f $(top_srcdir)/auparse/test/auditd_raw.sed test3.log | sort > auparse_test.raw\n\tdiff -u auparse_test.raw auparse_test.cur\nif USE_PYTHON3\n\tcp ${top_builddir}/bindings/swig/python3/.libs/_audit.so ${top_builddir}/bindings/swig/python3\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/Makefile.am"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t./auparse_test > auparse_test.cur\n\tdiff -u $(top_srcdir)/auparse/test/auparse_test.ref auparse_test.cur\n\t./auparselol_test -f test3.log --check | sort > auparse_test.cur\n\tsed -f $(top_srcdir)/auparse/test/auditd_raw.sed test3.log | sort > auparse_test.raw\n\tdiff -u auparse_test.raw auparse_test.cur\nif USE_PYTHON3\n\tcp ${top_builddir}/bindings/swig/python3/.libs/_audit.so ${top_builddir}/bindings/swig/python3\n",
                    "rendered": {
                      "text": "\t./auparse_test > auparse_test.cur\n\tdiff -u $(top_srcdir)/auparse/test/auparse_test.ref auparse_test.cur\n\t./auparselol_test -f test3.log --check | sort > auparse_test.cur\n\tsed -f $(top_srcdir)/auparse/test/auditd_raw.sed test3.log | sort > auparse_test.raw\n\tdiff -u auparse_test.raw auparse_test.cur\nif USE_PYTHON3\n\tcp ${top_builddir}/bindings/swig/python3/.libs/_audit.so ${top_builddir}/bindings/swig/python3\n",
                      "markdown": "`\t./auparse_test > auparse_test.cur\n\tdiff -u $(top_srcdir)/auparse/test/auparse_test.ref auparse_test.cur\n\t./auparselol_test -f test3.log --check | sort > auparse_test.cur\n\tsed -f $(top_srcdir)/auparse/test/auditd_raw.sed test3.log | sort > auparse_test.raw\n\tdiff -u auparse_test.raw auparse_test.cur\nif USE_PYTHON3\n\tcp ${top_builddir}/bindings/swig/python3/.libs/_audit.so ${top_builddir}/bindings/swig/python3\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/Makefile.am"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 41,
                  "endLine": 53,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\tLC_ALL=C \\\n\t./auparse_test > auparse_test.cur\n\tdiff -u $(top_srcdir)/auparse/test/auparse_test.ref auparse_test.cur\n\t./auparselol_test -f test3.log --check | sort > auparse_test.cur\n\tsed -f $(top_srcdir)/auparse/test/auditd_raw.sed test3.log | sort > auparse_test.raw\n\tdiff -u auparse_test.raw auparse_test.cur\nif USE_PYTHON3\n",
                    "rendered": {
                      "text": "\tLC_ALL=C \\\n\t./auparse_test > auparse_test.cur\n\tdiff -u $(top_srcdir)/auparse/test/auparse_test.ref auparse_test.cur\n\t./auparselol_test -f test3.log --check | sort > auparse_test.cur\n\tsed -f $(top_srcdir)/auparse/test/auditd_raw.sed test3.log | sort > auparse_test.raw\n\tdiff -u auparse_test.raw auparse_test.cur\nif USE_PYTHON3\n",
                      "markdown": "`\tLC_ALL=C \\\n\t./auparse_test > auparse_test.cur\n\tdiff -u $(top_srcdir)/auparse/test/auparse_test.ref auparse_test.cur\n\t./auparselol_test -f test3.log --check | sort > auparse_test.cur\n\tsed -f $(top_srcdir)/auparse/test/auditd_raw.sed test3.log | sort > auparse_test.raw\n\tdiff -u auparse_test.raw auparse_test.cur\nif USE_PYTHON3\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/Makefile.am"
                },
                "region": {
                  "startLine": 52,
                  "endLine": 52,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\t\tcp $(top_srcdir)/auparse/test/test*.log .\n\tLC_ALL=C \\\n\t./auparse_test > auparse_test.cur\n\tdiff -u $(top_srcdir)/auparse/test/auparse_test.ref auparse_test.cur\n\t./auparselol_test -f test3.log --check | sort > auparse_test.cur\n\tsed -f $(top_srcdir)/auparse/test/auditd_raw.sed test3.log | sort > auparse_test.raw\n\tdiff -u auparse_test.raw auparse_test.cur\n",
                    "rendered": {
                      "text": "\t\t\tcp $(top_srcdir)/auparse/test/test*.log .\n\tLC_ALL=C \\\n\t./auparse_test > auparse_test.cur\n\tdiff -u $(top_srcdir)/auparse/test/auparse_test.ref auparse_test.cur\n\t./auparselol_test -f test3.log --check | sort > auparse_test.cur\n\tsed -f $(top_srcdir)/auparse/test/auditd_raw.sed test3.log | sort > auparse_test.raw\n\tdiff -u auparse_test.raw auparse_test.cur\n",
                      "markdown": "`\t\t\tcp $(top_srcdir)/auparse/test/test*.log .\n\tLC_ALL=C \\\n\t./auparse_test > auparse_test.cur\n\tdiff -u $(top_srcdir)/auparse/test/auparse_test.ref auparse_test.cur\n\t./auparselol_test -f test3.log --check | sort > auparse_test.cur\n\tsed -f $(top_srcdir)/auparse/test/auditd_raw.sed test3.log | sort > auparse_test.raw\n\tdiff -u auparse_test.raw auparse_test.cur\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/Makefile.am"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 2,
                  "endLine": 49,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\ncheck-local: auparse_test auparselol_test lookup_test\n\ttest \"$(top_srcdir)\" = \"$(top_builddir)\" || \\\n\t\t\tcp $(top_srcdir)/auparse/test/test*.log .\n\tLC_ALL=C \\\n\t./auparse_test > auparse_test.cur\n\tdiff -u $(top_srcdir)/auparse/test/auparse_test.ref auparse_test.cur\n",
                    "rendered": {
                      "text": "\ncheck-local: auparse_test auparselol_test lookup_test\n\ttest \"$(top_srcdir)\" = \"$(top_builddir)\" || \\\n\t\t\tcp $(top_srcdir)/auparse/test/test*.log .\n\tLC_ALL=C \\\n\t./auparse_test > auparse_test.cur\n\tdiff -u $(top_srcdir)/auparse/test/auparse_test.ref auparse_test.cur\n",
                      "markdown": "`\ncheck-local: auparse_test auparselol_test lookup_test\n\ttest \"$(top_srcdir)\" = \"$(top_builddir)\" || \\\n\t\t\tcp $(top_srcdir)/auparse/test/test*.log .\n\tLC_ALL=C \\\n\t./auparse_test > auparse_test.cur\n\tdiff -u $(top_srcdir)/auparse/test/auparse_test.ref auparse_test.cur\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/Makefile.am"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 13,
                  "endLine": 45,
                  "endColumn": 18,
                  "snippet": {
                    "text": "auparselol_test_LDADD = ${top_builddir}/auparse/libauparse.la \\\n\t${top_builddir}/lib/libaudit.la ${top_builddir}/common/libaucommon.la\n\ndrop_srcdir = sed 's,$(srcdir)/test,test,'\n\ncheck-local: auparse_test auparselol_test lookup_test\n\ttest \"$(top_srcdir)\" = \"$(top_builddir)\" || \\\n",
                    "rendered": {
                      "text": "auparselol_test_LDADD = ${top_builddir}/auparse/libauparse.la \\\n\t${top_builddir}/lib/libaudit.la ${top_builddir}/common/libaucommon.la\n\ndrop_srcdir = sed 's,$(srcdir)/test,test,'\n\ncheck-local: auparse_test auparselol_test lookup_test\n\ttest \"$(top_srcdir)\" = \"$(top_builddir)\" || \\\n",
                      "markdown": "`auparselol_test_LDADD = ${top_builddir}/auparse/libauparse.la \\\n\t${top_builddir}/lib/libaudit.la ${top_builddir}/common/libaucommon.la\n\ndrop_srcdir = sed 's,$(srcdir)/test,test,'\n\ncheck-local: auparse_test auparselol_test lookup_test\n\ttest \"$(top_srcdir)\" = \"$(top_builddir)\" || \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/Makefile.am"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 27,
                  "endLine": 2,
                  "endColumn": 32,
                  "snippet": {
                    "text": "# Makefile.am -- \n# Copyright 2006-08,2014-17 Red Hat Inc.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                    "rendered": {
                      "text": "# Makefile.am -- \n# Copyright 2006-08,2014-17 Red Hat Inc.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                      "markdown": "`# Makefile.am -- \n# Copyright 2006-08,2014-17 Red Hat Inc.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/ellist.c"
                },
                "region": {
                  "startLine": 474,
                  "startColumn": 2,
                  "endLine": 474,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\t\tl->cur = node;\n\t\t\treturn node;\n\t\t} else\n\t\t\tnode = node->next;\n\t}\n\treturn NULL;\n}\n",
                    "rendered": {
                      "text": "\t\t\tl->cur = node;\n\t\t\treturn node;\n\t\t} else\n\t\t\tnode = node->next;\n\t}\n\treturn NULL;\n}\n",
                      "markdown": "`\t\t\tl->cur = node;\n\t\t\treturn node;\n\t\t} else\n\t\t\tnode = node->next;\n\t}\n\treturn NULL;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/ellist.c"
                },
                "region": {
                  "startLine": 468,
                  "endLine": 468,
                  "endColumn": 6,
                  "snippet": {
                    "text": "{\n        register rnode* node;\n\n\tnode = l->head;\t/* start at the beginning */\n\twhile (node) {\n\t\tif (node->item == i) {\n\t\t\tl->cur = node;\n",
                    "rendered": {
                      "text": "{\n        register rnode* node;\n\n\tnode = l->head;\t/* start at the beginning */\n\twhile (node) {\n\t\tif (node->item == i) {\n\t\t\tl->cur = node;\n",
                      "markdown": "`{\n        register rnode* node;\n\n\tnode = l->head;\t/* start at the beginning */\n\twhile (node) {\n\t\tif (node->item == i) {\n\t\t\tl->cur = node;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/ellist.c"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 1,
                  "endLine": 56,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n        node = l->head;\n\twhile (node->next)\n\t\tnode = node->next;\n\tl->cur = node;\n}\n\n",
                    "rendered": {
                      "text": "\n        node = l->head;\n\twhile (node->next)\n\t\tnode = node->next;\n\tl->cur = node;\n}\n\n",
                      "markdown": "`\n        node = l->head;\n\twhile (node->next)\n\t\tnode = node->next;\n\tl->cur = node;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/ellist.c"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 7,
                  "endLine": 54,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\tif (l->head == NULL)\n\t\treturn;\n\n        node = l->head;\n\twhile (node->next)\n\t\tnode = node->next;\n\tl->cur = node;\n",
                    "rendered": {
                      "text": "\tif (l->head == NULL)\n\t\treturn;\n\n        node = l->head;\n\twhile (node->next)\n\t\tnode = node->next;\n\tl->cur = node;\n",
                      "markdown": "`\tif (l->head == NULL)\n\t\treturn;\n\n        node = l->head;\n\twhile (node->next)\n\t\tnode = node->next;\n\tl->cur = node;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/30-stig.rules"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 40,
                  "endLine": 59,
                  "endColumn": 48,
                  "snippet": {
                    "text": "-a always,exit -F arch=b32 -F path=/etc/hosts -F perm=wa -F key=system-locale\n-a always,exit -F arch=b64 -F path=/etc/hosts -F perm=wa -F key=system-locale\n-a always,exit -F arch=b32 -F path=/etc/hostname -F perm=wa -F key=system-locale\n-a always,exit -F arch=b64 -F path=/etc/hostname -F perm=wa -F key=system-locale\n-a always,exit -F arch=b32 -F dir=/etc/NetworkManager/ -F perm=wa -F key=system-locale\n-a always,exit -F arch=b64 -F dir=/etc/NetworkManager/ -F perm=wa -F key=system-locale\n\n",
                    "rendered": {
                      "text": "-a always,exit -F arch=b32 -F path=/etc/hosts -F perm=wa -F key=system-locale\n-a always,exit -F arch=b64 -F path=/etc/hosts -F perm=wa -F key=system-locale\n-a always,exit -F arch=b32 -F path=/etc/hostname -F perm=wa -F key=system-locale\n-a always,exit -F arch=b64 -F path=/etc/hostname -F perm=wa -F key=system-locale\n-a always,exit -F arch=b32 -F dir=/etc/NetworkManager/ -F perm=wa -F key=system-locale\n-a always,exit -F arch=b64 -F dir=/etc/NetworkManager/ -F perm=wa -F key=system-locale\n\n",
                      "markdown": "`-a always,exit -F arch=b32 -F path=/etc/hosts -F perm=wa -F key=system-locale\n-a always,exit -F arch=b64 -F path=/etc/hosts -F perm=wa -F key=system-locale\n-a always,exit -F arch=b32 -F path=/etc/hostname -F perm=wa -F key=system-locale\n-a always,exit -F arch=b64 -F path=/etc/hostname -F perm=wa -F key=system-locale\n-a always,exit -F arch=b32 -F dir=/etc/NetworkManager/ -F perm=wa -F key=system-locale\n-a always,exit -F arch=b64 -F dir=/etc/NetworkManager/ -F perm=wa -F key=system-locale\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/30-stig.rules"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 40,
                  "endLine": 58,
                  "endColumn": 48,
                  "snippet": {
                    "text": "-a always,exit -F arch=b64 -F path=/etc/issue.net -F perm=wa -F key=system-locale\n-a always,exit -F arch=b32 -F path=/etc/hosts -F perm=wa -F key=system-locale\n-a always,exit -F arch=b64 -F path=/etc/hosts -F perm=wa -F key=system-locale\n-a always,exit -F arch=b32 -F path=/etc/hostname -F perm=wa -F key=system-locale\n-a always,exit -F arch=b64 -F path=/etc/hostname -F perm=wa -F key=system-locale\n-a always,exit -F arch=b32 -F dir=/etc/NetworkManager/ -F perm=wa -F key=system-locale\n-a always,exit -F arch=b64 -F dir=/etc/NetworkManager/ -F perm=wa -F key=system-locale\n",
                    "rendered": {
                      "text": "-a always,exit -F arch=b64 -F path=/etc/issue.net -F perm=wa -F key=system-locale\n-a always,exit -F arch=b32 -F path=/etc/hosts -F perm=wa -F key=system-locale\n-a always,exit -F arch=b64 -F path=/etc/hosts -F perm=wa -F key=system-locale\n-a always,exit -F arch=b32 -F path=/etc/hostname -F perm=wa -F key=system-locale\n-a always,exit -F arch=b64 -F path=/etc/hostname -F perm=wa -F key=system-locale\n-a always,exit -F arch=b32 -F dir=/etc/NetworkManager/ -F perm=wa -F key=system-locale\n-a always,exit -F arch=b64 -F dir=/etc/NetworkManager/ -F perm=wa -F key=system-locale\n",
                      "markdown": "`-a always,exit -F arch=b64 -F path=/etc/issue.net -F perm=wa -F key=system-locale\n-a always,exit -F arch=b32 -F path=/etc/hosts -F perm=wa -F key=system-locale\n-a always,exit -F arch=b64 -F path=/etc/hosts -F perm=wa -F key=system-locale\n-a always,exit -F arch=b32 -F path=/etc/hostname -F perm=wa -F key=system-locale\n-a always,exit -F arch=b64 -F path=/etc/hostname -F perm=wa -F key=system-locale\n-a always,exit -F arch=b32 -F dir=/etc/NetworkManager/ -F perm=wa -F key=system-locale\n-a always,exit -F arch=b64 -F dir=/etc/NetworkManager/ -F perm=wa -F key=system-locale\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/30-stig.rules"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 24,
                  "endLine": 111,
                  "endColumn": 33,
                  "snippet": {
                    "text": "#-a always,exit -F arch=b32 -F path=/var/log/wtmp -F perm=wa -F key=session\n#-a always,exit -F arch=b64 -F path=/var/log/wtmp -F perm=wa -F key=session\n\n##- Discretionary access control permission modification (unsuccessful\n## and successful use of chown/chmod)\n-a always,exit -F arch=b32 -S chmod,fchmod,fchmodat -F auid>=1000 -F auid!=unset -F key=perm_mod\n-a always,exit -F arch=b64 -S chmod,fchmod,fchmodat -F auid>=1000 -F auid!=unset -F key=perm_mod\n",
                    "rendered": {
                      "text": "#-a always,exit -F arch=b32 -F path=/var/log/wtmp -F perm=wa -F key=session\n#-a always,exit -F arch=b64 -F path=/var/log/wtmp -F perm=wa -F key=session\n\n##- Discretionary access control permission modification (unsuccessful\n## and successful use of chown/chmod)\n-a always,exit -F arch=b32 -S chmod,fchmod,fchmodat -F auid>=1000 -F auid!=unset -F key=perm_mod\n-a always,exit -F arch=b64 -S chmod,fchmod,fchmodat -F auid>=1000 -F auid!=unset -F key=perm_mod\n",
                      "markdown": "`#-a always,exit -F arch=b32 -F path=/var/log/wtmp -F perm=wa -F key=session\n#-a always,exit -F arch=b64 -F path=/var/log/wtmp -F perm=wa -F key=session\n\n##- Discretionary access control permission modification (unsuccessful\n## and successful use of chown/chmod)\n-a always,exit -F arch=b32 -S chmod,fchmod,fchmodat -F auid>=1000 -F auid!=unset -F key=perm_mod\n-a always,exit -F arch=b64 -S chmod,fchmod,fchmodat -F auid>=1000 -F auid!=unset -F key=perm_mod\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/30-stig.rules"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 68,
                  "endLine": 69,
                  "snippet": {
                    "text": "-a always,exit -F arch=b64 -F dir=/etc/selinux/ -F perm=wa -F key=MAC-policy\n\n\n## (GEN002900: CAT III) The IAO will ensure audit files are retained at\n## least one year; systems containing SAMI will be retained for five years.\n##\n## Site action - no action in config files\n\n",
                    "rendered": {
                      "text": "-a always,exit -F arch=b64 -F dir=/etc/selinux/ -F perm=wa -F key=MAC-policy\n\n\n## (GEN002900: CAT III) The IAO will ensure audit files are retained at\n## least one year; systems containing SAMI will be retained for five years.\n##\n## Site action - no action in config files\n\n",
                      "markdown": "`-a always,exit -F arch=b64 -F dir=/etc/selinux/ -F perm=wa -F key=MAC-policy\n\n\n## (GEN002900: CAT III) The IAO will ensure audit files are retained at\n## least one year; systems containing SAMI will be retained for five years.\n##\n## Site action - no action in config files\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/30-stig.rules"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 19,
                  "endLine": 9,
                  "endColumn": 23,
                  "snippet": {
                    "text": "## 1) if this is being used on a 32 bit machine, comment out the b64 lines\n## 2) These rules assume that login under the root account is not allowed.\n## 3) It is also assumed that 1000 represents the first usable user account. To\n##    be sure, look at UID_MIN in /etc/login.defs.\n## 4) If these rules generate too much spurious data for your tastes, limit the\n##    syscall file rules with a directory, like -F dir=/etc\n## 5) You can search for the results on the key fields in the rules\n",
                    "rendered": {
                      "text": "## 1) if this is being used on a 32 bit machine, comment out the b64 lines\n## 2) These rules assume that login under the root account is not allowed.\n## 3) It is also assumed that 1000 represents the first usable user account. To\n##    be sure, look at UID_MIN in /etc/login.defs.\n## 4) If these rules generate too much spurious data for your tastes, limit the\n##    syscall file rules with a directory, like -F dir=/etc\n## 5) You can search for the results on the key fields in the rules\n",
                      "markdown": "`## 1) if this is being used on a 32 bit machine, comment out the b64 lines\n## 2) These rules assume that login under the root account is not allowed.\n## 3) It is also assumed that 1000 represents the first usable user account. To\n##    be sure, look at UID_MIN in /etc/login.defs.\n## 4) If these rules generate too much spurious data for your tastes, limit the\n##    syscall file rules with a directory, like -F dir=/etc\n## 5) You can search for the results on the key fields in the rules\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/30-stig.rules"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 14,
                  "endLine": 160,
                  "endColumn": 19,
                  "snippet": {
                    "text": "-a always,exit -F arch=b32 -F path=/usr/bin/pkexec -F perm=x -F key=maybe-escalation\n-a always,exit -F arch=b64 -F path=/usr/bin/pkexec -F perm=x -F key=maybe-escalation\n\n## (GEN002860: CAT II) (Previously – G674) The SA and/or IAO will\n##ensure old audit logs are closed and new audit logs are started daily.\n##\n## Site action. Can be assisted by a cron job\n",
                    "rendered": {
                      "text": "-a always,exit -F arch=b32 -F path=/usr/bin/pkexec -F perm=x -F key=maybe-escalation\n-a always,exit -F arch=b64 -F path=/usr/bin/pkexec -F perm=x -F key=maybe-escalation\n\n## (GEN002860: CAT II) (Previously – G674) The SA and/or IAO will\n##ensure old audit logs are closed and new audit logs are started daily.\n##\n## Site action. Can be assisted by a cron job\n",
                      "markdown": "`-a always,exit -F arch=b32 -F path=/usr/bin/pkexec -F perm=x -F key=maybe-escalation\n-a always,exit -F arch=b64 -F path=/usr/bin/pkexec -F perm=x -F key=maybe-escalation\n\n## (GEN002860: CAT II) (Previously – G674) The SA and/or IAO will\n##ensure old audit logs are closed and new audit logs are started daily.\n##\n## Site action. Can be assisted by a cron job\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/30-stig.rules"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 63,
                  "endLine": 156,
                  "endColumn": 70,
                  "snippet": {
                    "text": "## Special case for systemd-run. It is not audit aware, specifically watch it\n-a always,exit -F arch=b32 -F path=/usr/bin/systemd-run -F perm=x -F auid!=unset -F key=maybe-escalation\n-a always,exit -F arch=b64 -F path=/usr/bin/systemd-run -F perm=x -F auid!=unset -F key=maybe-escalation\n## Special case for pkexec. It is not audit aware, specifically watch it\n-a always,exit -F arch=b32 -F path=/usr/bin/pkexec -F perm=x -F key=maybe-escalation\n-a always,exit -F arch=b64 -F path=/usr/bin/pkexec -F perm=x -F key=maybe-escalation\n\n",
                    "rendered": {
                      "text": "## Special case for systemd-run. It is not audit aware, specifically watch it\n-a always,exit -F arch=b32 -F path=/usr/bin/systemd-run -F perm=x -F auid!=unset -F key=maybe-escalation\n-a always,exit -F arch=b64 -F path=/usr/bin/systemd-run -F perm=x -F auid!=unset -F key=maybe-escalation\n## Special case for pkexec. It is not audit aware, specifically watch it\n-a always,exit -F arch=b32 -F path=/usr/bin/pkexec -F perm=x -F key=maybe-escalation\n-a always,exit -F arch=b64 -F path=/usr/bin/pkexec -F perm=x -F key=maybe-escalation\n\n",
                      "markdown": "`## Special case for systemd-run. It is not audit aware, specifically watch it\n-a always,exit -F arch=b32 -F path=/usr/bin/systemd-run -F perm=x -F auid!=unset -F key=maybe-escalation\n-a always,exit -F arch=b64 -F path=/usr/bin/systemd-run -F perm=x -F auid!=unset -F key=maybe-escalation\n## Special case for pkexec. It is not audit aware, specifically watch it\n-a always,exit -F arch=b32 -F path=/usr/bin/pkexec -F perm=x -F key=maybe-escalation\n-a always,exit -F arch=b64 -F path=/usr/bin/pkexec -F perm=x -F key=maybe-escalation\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/30-stig.rules"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 68,
                  "endLine": 153,
                  "endColumn": 75,
                  "snippet": {
                    "text": "-a always,exit -F arch=b32 -F dir=/etc/sudoers.d/ -F perm=wa -F key=actions\n-a always,exit -F arch=b64 -F dir=/etc/sudoers.d/ -F perm=wa -F key=actions\n\n## Special case for systemd-run. It is not audit aware, specifically watch it\n-a always,exit -F arch=b32 -F path=/usr/bin/systemd-run -F perm=x -F auid!=unset -F key=maybe-escalation\n-a always,exit -F arch=b64 -F path=/usr/bin/systemd-run -F perm=x -F auid!=unset -F key=maybe-escalation\n## Special case for pkexec. It is not audit aware, specifically watch it\n",
                    "rendered": {
                      "text": "-a always,exit -F arch=b32 -F dir=/etc/sudoers.d/ -F perm=wa -F key=actions\n-a always,exit -F arch=b64 -F dir=/etc/sudoers.d/ -F perm=wa -F key=actions\n\n## Special case for systemd-run. It is not audit aware, specifically watch it\n-a always,exit -F arch=b32 -F path=/usr/bin/systemd-run -F perm=x -F auid!=unset -F key=maybe-escalation\n-a always,exit -F arch=b64 -F path=/usr/bin/systemd-run -F perm=x -F auid!=unset -F key=maybe-escalation\n## Special case for pkexec. It is not audit aware, specifically watch it\n",
                      "markdown": "`-a always,exit -F arch=b32 -F dir=/etc/sudoers.d/ -F perm=wa -F key=actions\n-a always,exit -F arch=b64 -F dir=/etc/sudoers.d/ -F perm=wa -F key=actions\n\n## Special case for systemd-run. It is not audit aware, specifically watch it\n-a always,exit -F arch=b32 -F path=/usr/bin/systemd-run -F perm=x -F auid!=unset -F key=maybe-escalation\n-a always,exit -F arch=b64 -F path=/usr/bin/systemd-run -F perm=x -F auid!=unset -F key=maybe-escalation\n## Special case for pkexec. It is not audit aware, specifically watch it\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/30-stig.rules"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 29,
                  "endLine": 133,
                  "endColumn": 36,
                  "snippet": {
                    "text": "## so that its done manually in order to get the correct user requesting the\n## export\n-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=unset -F key=export\n-a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=unset -F key=export\n\n##- System startup and shutdown (unsuccessful and successful)\n\n",
                    "rendered": {
                      "text": "## so that its done manually in order to get the correct user requesting the\n## export\n-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=unset -F key=export\n-a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=unset -F key=export\n\n##- System startup and shutdown (unsuccessful and successful)\n\n",
                      "markdown": "`## so that its done manually in order to get the correct user requesting the\n## export\n-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=unset -F key=export\n-a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=unset -F key=export\n\n##- System startup and shutdown (unsuccessful and successful)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/30-stig.rules"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 29,
                  "endLine": 132,
                  "endColumn": 36,
                  "snippet": {
                    "text": "## You have to mount media before using it. You must disable all automounting\n## so that its done manually in order to get the correct user requesting the\n## export\n-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=unset -F key=export\n-a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=unset -F key=export\n\n##- System startup and shutdown (unsuccessful and successful)\n",
                    "rendered": {
                      "text": "## You have to mount media before using it. You must disable all automounting\n## so that its done manually in order to get the correct user requesting the\n## export\n-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=unset -F key=export\n-a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=unset -F key=export\n\n##- System startup and shutdown (unsuccessful and successful)\n",
                      "markdown": "`## You have to mount media before using it. You must disable all automounting\n## so that its done manually in order to get the correct user requesting the\n## export\n-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=unset -F key=export\n-a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=unset -F key=export\n\n##- System startup and shutdown (unsuccessful and successful)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/30-stig.rules"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 14,
                  "endLine": 129,
                  "endColumn": 21,
                  "snippet": {
                    "text": "##- Use of print command (unsuccessful and successful) \n\n##- Export to media (successful)\n## You have to mount media before using it. You must disable all automounting\n## so that its done manually in order to get the correct user requesting the\n## export\n-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=unset -F key=export\n",
                    "rendered": {
                      "text": "##- Use of print command (unsuccessful and successful) \n\n##- Export to media (successful)\n## You have to mount media before using it. You must disable all automounting\n## so that its done manually in order to get the correct user requesting the\n## export\n-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=unset -F key=export\n",
                      "markdown": "`##- Use of print command (unsuccessful and successful) \n\n##- Export to media (successful)\n## You have to mount media before using it. You must disable all automounting\n## so that its done manually in order to get the correct user requesting the\n## export\n-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=unset -F key=export\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/30-stig.rules"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 21,
                  "endLine": 103,
                  "endColumn": 28,
                  "snippet": {
                    "text": "##- Process and session initiation (unsuccessful and successful)\n##\n## The session initiation is audited by pam without any rules needed.\n## Might also want to watch this file if needing extra information\n#-a always,exit -F arch=b32 -F path=/var/run/utmp -F perm=wa -F key=session\n#-a always,exit -F arch=b64 -F path=/var/run/utmp -F perm=wa -F key=session\n#-a always,exit -F arch=b32 -F path=/var/log/btmp -F perm=wa -F key=session\n",
                    "rendered": {
                      "text": "##- Process and session initiation (unsuccessful and successful)\n##\n## The session initiation is audited by pam without any rules needed.\n## Might also want to watch this file if needing extra information\n#-a always,exit -F arch=b32 -F path=/var/run/utmp -F perm=wa -F key=session\n#-a always,exit -F arch=b64 -F path=/var/run/utmp -F perm=wa -F key=session\n#-a always,exit -F arch=b32 -F path=/var/log/btmp -F perm=wa -F key=session\n",
                      "markdown": "`##- Process and session initiation (unsuccessful and successful)\n##\n## The session initiation is audited by pam without any rules needed.\n## Might also want to watch this file if needing extra information\n#-a always,exit -F arch=b32 -F path=/var/run/utmp -F perm=wa -F key=session\n#-a always,exit -F arch=b64 -F path=/var/run/utmp -F perm=wa -F key=session\n#-a always,exit -F arch=b32 -F path=/var/log/btmp -F perm=wa -F key=session\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/30-stig.rules"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 21,
                  "endLine": 91,
                  "endColumn": 28,
                  "snippet": {
                    "text": "## - Logon (unsuccessful and successful) and logout (successful)\n##\n## Handled by pam, sshd, login, and gdm\n## Might also want to watch these files if needing extra information\n#-a always,exit -F arch=b32 -F path=/var/log/tallylog -F perm=wa -F key=logins\n#-a always,exit -F arch=b64 -F path=/var/log/tallylog -F perm=wa -F key=logins\n#-a always,exit -F arch=b32 -F path=/var/run/faillock -F perm=wa -F key=logins\n",
                    "rendered": {
                      "text": "## - Logon (unsuccessful and successful) and logout (successful)\n##\n## Handled by pam, sshd, login, and gdm\n## Might also want to watch these files if needing extra information\n#-a always,exit -F arch=b32 -F path=/var/log/tallylog -F perm=wa -F key=logins\n#-a always,exit -F arch=b64 -F path=/var/log/tallylog -F perm=wa -F key=logins\n#-a always,exit -F arch=b32 -F path=/var/run/faillock -F perm=wa -F key=logins\n",
                      "markdown": "`## - Logon (unsuccessful and successful) and logout (successful)\n##\n## Handled by pam, sshd, login, and gdm\n## Might also want to watch these files if needing extra information\n#-a always,exit -F arch=b32 -F path=/var/log/tallylog -F perm=wa -F key=logins\n#-a always,exit -F arch=b64 -F path=/var/log/tallylog -F perm=wa -F key=logins\n#-a always,exit -F arch=b32 -F path=/var/run/faillock -F perm=wa -F key=logins\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/30-stig.rules"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 24,
                  "endLine": 84,
                  "endColumn": 29,
                  "snippet": {
                    "text": "##\n## Done automatically by auditd\n\n## (GEN002720-GEN002840: CAT II) (Previously – G100-G106) The SA will\n## configure the auditing system to audit the following events for all\n## users and root:\n##\n",
                    "rendered": {
                      "text": "##\n## Done automatically by auditd\n\n## (GEN002720-GEN002840: CAT II) (Previously – G100-G106) The SA will\n## configure the auditing system to audit the following events for all\n## users and root:\n##\n",
                      "markdown": "`##\n## Done automatically by auditd\n\n## (GEN002720-GEN002840: CAT II) (Previously – G100-G106) The SA will\n## configure the auditing system to audit the following events for all\n## users and root:\n##\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/30-stig.rules"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 14,
                  "endLine": 79,
                  "endColumn": 19,
                  "snippet": {
                    "text": "##\n## Can be done with cron script\n\n## (GEN002700: CAT I) (Previously – G095) The SA will ensure audit data\n## files have permissions of 640, or more restrictive.\n##\n## Done automatically by auditd\n",
                    "rendered": {
                      "text": "##\n## Can be done with cron script\n\n## (GEN002700: CAT I) (Previously – G095) The SA will ensure audit data\n## files have permissions of 640, or more restrictive.\n##\n## Done automatically by auditd\n",
                      "markdown": "`##\n## Can be done with cron script\n\n## (GEN002700: CAT I) (Previously – G095) The SA will ensure audit data\n## files have permissions of 640, or more restrictive.\n##\n## Done automatically by auditd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/30-stig.rules"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 24,
                  "endLine": 78,
                  "snippet": {
                    "text": "## no less than weekly onto a different system than the system being\n## audited or backup media.  \n##\n## Can be done with cron script\n\n## (GEN002700: CAT I) (Previously – G095) The SA will ensure audit data\n## files have permissions of 640, or more restrictive.\n##\n",
                    "rendered": {
                      "text": "## no less than weekly onto a different system than the system being\n## audited or backup media.  \n##\n## Can be done with cron script\n\n## (GEN002700: CAT I) (Previously – G095) The SA will ensure audit data\n## files have permissions of 640, or more restrictive.\n##\n",
                      "markdown": "`## no less than weekly onto a different system than the system being\n## audited or backup media.  \n##\n## Can be done with cron script\n\n## (GEN002700: CAT I) (Previously – G095) The SA will ensure audit data\n## files have permissions of 640, or more restrictive.\n##\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/30-stig.rules"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 14,
                  "endLine": 73,
                  "endColumn": 19,
                  "snippet": {
                    "text": "##\n## Site action - no action in config files\n\n## (GEN002920: CAT III) The IAO will ensure audit files are backed up\n## no less than weekly onto a different system than the system being\n## audited or backup media.  \n##\n",
                    "rendered": {
                      "text": "##\n## Site action - no action in config files\n\n## (GEN002920: CAT III) The IAO will ensure audit files are backed up\n## no less than weekly onto a different system than the system being\n## audited or backup media.  \n##\n",
                      "markdown": "`##\n## Site action - no action in config files\n\n## (GEN002920: CAT III) The IAO will ensure audit files are backed up\n## no less than weekly onto a different system than the system being\n## audited or backup media.  \n##\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/30-stig.rules"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 14,
                  "endLine": 68,
                  "endColumn": 19,
                  "snippet": {
                    "text": "-a always,exit -F arch=b64 -F dir=/etc/selinux/ -F perm=wa -F key=MAC-policy\n\n\n## (GEN002900: CAT III) The IAO will ensure audit files are retained at\n## least one year; systems containing SAMI will be retained for five years.\n##\n## Site action - no action in config files\n",
                    "rendered": {
                      "text": "-a always,exit -F arch=b64 -F dir=/etc/selinux/ -F perm=wa -F key=MAC-policy\n\n\n## (GEN002900: CAT III) The IAO will ensure audit files are retained at\n## least one year; systems containing SAMI will be retained for five years.\n##\n## Site action - no action in config files\n",
                      "markdown": "`-a always,exit -F arch=b64 -F dir=/etc/selinux/ -F perm=wa -F key=MAC-policy\n\n\n## (GEN002900: CAT III) The IAO will ensure audit files are retained at\n## least one year; systems containing SAMI will be retained for five years.\n##\n## Site action - no action in config files\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/30-stig.rules"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 27,
                  "endLine": 27,
                  "snippet": {
                    "text": "##  for object deletion events, the name of the object, and in MLS\n##  systems, the object’s security level.\n##\n## Things that could affect time\n-a always,exit -F arch=b32 -S adjtimex,settimeofday,stime -F key=time-change\n-a always,exit -F arch=b64 -S adjtimex,settimeofday -F key=time-change\n-a always,exit -F arch=b32 -S clock_settime -F a0=0x0 -F key=time-change\n-a always,exit -F arch=b64 -S clock_settime -F a0=0x0 -F key=time-change\n",
                    "rendered": {
                      "text": "##  for object deletion events, the name of the object, and in MLS\n##  systems, the object’s security level.\n##\n## Things that could affect time\n-a always,exit -F arch=b32 -S adjtimex,settimeofday,stime -F key=time-change\n-a always,exit -F arch=b64 -S adjtimex,settimeofday -F key=time-change\n-a always,exit -F arch=b32 -S clock_settime -F a0=0x0 -F key=time-change\n-a always,exit -F arch=b64 -S clock_settime -F a0=0x0 -F key=time-change\n",
                      "markdown": "`##  for object deletion events, the name of the object, and in MLS\n##  systems, the object’s security level.\n##\n## Things that could affect time\n-a always,exit -F arch=b32 -S adjtimex,settimeofday,stime -F key=time-change\n-a always,exit -F arch=b64 -S adjtimex,settimeofday -F key=time-change\n-a always,exit -F arch=b32 -S clock_settime -F a0=0x0 -F key=time-change\n-a always,exit -F arch=b64 -S clock_settime -F a0=0x0 -F key=time-change\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/30-stig.rules"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 12,
                  "endLine": 17,
                  "endColumn": 18,
                  "snippet": {
                    "text": "##\n## (GEN002880: CAT II) The IAO will ensure the auditing software can\n## record the following for each audit event: \n##- Date and time of the event \n##- Userid that initiated the event \n##- Type of event \n##- Success or failure of the event \n",
                    "rendered": {
                      "text": "##\n## (GEN002880: CAT II) The IAO will ensure the auditing software can\n## record the following for each audit event: \n##- Date and time of the event \n##- Userid that initiated the event \n##- Type of event \n##- Success or failure of the event \n",
                      "markdown": "`##\n## (GEN002880: CAT II) The IAO will ensure the auditing software can\n## record the following for each audit event: \n##- Date and time of the event \n##- Userid that initiated the event \n##- Type of event \n##- Success or failure of the event \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/30-stig.rules"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 14,
                  "endLine": 15,
                  "endColumn": 19,
                  "snippet": {
                    "text": "## 5) You can search for the results on the key fields in the rules\n##\n##\n## (GEN002880: CAT II) The IAO will ensure the auditing software can\n## record the following for each audit event: \n##- Date and time of the event \n##- Userid that initiated the event \n",
                    "rendered": {
                      "text": "## 5) You can search for the results on the key fields in the rules\n##\n##\n## (GEN002880: CAT II) The IAO will ensure the auditing software can\n## record the following for each audit event: \n##- Date and time of the event \n##- Userid that initiated the event \n",
                      "markdown": "`## 5) You can search for the results on the key fields in the rules\n##\n##\n## (GEN002880: CAT II) The IAO will ensure the auditing software can\n## record the following for each audit event: \n##- Date and time of the event \n##- Userid that initiated the event \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/22-ignore-chrony.rules"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 62,
                  "endLine": 1,
                  "endColumn": 68,
                  "snippet": {
                    "text": "## This rule suppresses the time-change event when chrony does time updates\n-a never,exit -F arch=b64 -S adjtimex -F auid=unset -F uid=chrony -F subj_type=chronyd_t\n-a never,exit -F arch=b32 -S adjtimex -F auid=unset -F uid=chrony -F subj_type=chronyd_t\n",
                    "rendered": {
                      "text": "## This rule suppresses the time-change event when chrony does time updates\n-a never,exit -F arch=b64 -S adjtimex -F auid=unset -F uid=chrony -F subj_type=chronyd_t\n-a never,exit -F arch=b32 -S adjtimex -F auid=unset -F uid=chrony -F subj_type=chronyd_t\n",
                      "markdown": "`## This rule suppresses the time-change event when chrony does time updates\n-a never,exit -F arch=b64 -S adjtimex -F auid=unset -F uid=chrony -F subj_type=chronyd_t\n-a never,exit -F arch=b32 -S adjtimex -F auid=unset -F uid=chrony -F subj_type=chronyd_t\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/syslog/Makefile.am"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 19,
                  "endLine": 2,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# Makefile.am --\n# Copyright 2018,19 Red Hat Inc., Durham, North Carolina.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                    "rendered": {
                      "text": "# Makefile.am --\n# Copyright 2018,19 Red Hat Inc., Durham, North Carolina.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                      "markdown": "`# Makefile.am --\n# Copyright 2018,19 Red Hat Inc., Durham, North Carolina.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/test.log"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 178,
                  "endLine": 12,
                  "endColumn": 186,
                  "snippet": {
                    "text": "ond_t:s0-s0:c0.c1023 msg='PAM: setcred acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\ntype=USER_END msg=audit(1170021601.366:299): user pid=13015 uid=0 auid=0 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: session close acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\n",
                    "rendered": {
                      "text": "ond_t:s0-s0:c0.c1023 msg='PAM: setcred acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\ntype=USER_END msg=audit(1170021601.366:299): user pid=13015 uid=0 auid=0 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: session close acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\n",
                      "markdown": "`ond_t:s0-s0:c0.c1023 msg='PAM: setcred acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\ntype=USER_END msg=audit(1170021601.366:299): user pid=13015 uid=0 auid=0 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: session close acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/test.log"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 173,
                  "endLine": 11,
                  "endColumn": 181,
                  "snippet": {
                    "text": "ond_t:s0-s0:c0.c1023 msg='PAM: session open acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\ntype=CRED_DISP msg=audit(1170021601.364:298): user pid=13015 uid=0 auid=0 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: setcred acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\ntype=USER_END msg=audit(1170021601.366:299): user pid=13015 uid=0 auid=0 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: session close acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\n",
                    "rendered": {
                      "text": "ond_t:s0-s0:c0.c1023 msg='PAM: session open acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\ntype=CRED_DISP msg=audit(1170021601.364:298): user pid=13015 uid=0 auid=0 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: setcred acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\ntype=USER_END msg=audit(1170021601.366:299): user pid=13015 uid=0 auid=0 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: session close acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\n",
                      "markdown": "`ond_t:s0-s0:c0.c1023 msg='PAM: session open acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\ntype=CRED_DISP msg=audit(1170021601.364:298): user pid=13015 uid=0 auid=0 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: setcred acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\ntype=USER_END msg=audit(1170021601.366:299): user pid=13015 uid=0 auid=0 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: session close acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/test.log"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 179,
                  "endLine": 10,
                  "endColumn": 187,
                  "snippet": {
                    "text": "systemd\" subj=system_u:system_r:init_t:s0 key=(null)\ntype=PROCTITLE msg=audit(1170021601.343:296): proctitle=\"(systemd)\"\ntype=USER_START msg=audit(1170021601.344:297): user pid=13015 uid=0 auid=0 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: session open acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\ntype=CRED_DISP msg=audit(1170021601.364:298): user pid=13015 uid=0 auid=0 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: setcred acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\ntype=USER_END msg=audit(1170021601.366:",
                    "rendered": {
                      "text": "systemd\" subj=system_u:system_r:init_t:s0 key=(null)\ntype=PROCTITLE msg=audit(1170021601.343:296): proctitle=\"(systemd)\"\ntype=USER_START msg=audit(1170021601.344:297): user pid=13015 uid=0 auid=0 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: session open acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\ntype=CRED_DISP msg=audit(1170021601.364:298): user pid=13015 uid=0 auid=0 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: setcred acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\ntype=USER_END msg=audit(1170021601.366:",
                      "markdown": "`systemd\" subj=system_u:system_r:init_t:s0 key=(null)\ntype=PROCTITLE msg=audit(1170021601.343:296): proctitle=\"(systemd)\"\ntype=USER_START msg=audit(1170021601.344:297): user pid=13015 uid=0 auid=0 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: session open acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\ntype=CRED_DISP msg=audit(1170021601.364:298): user pid=13015 uid=0 auid=0 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: setcred acct=root : exe=\"/usr/sbin/crond\" (hostname=?, addr=?, terminal=cron res=success)'\ntype=USER_END msg=audit(1170021601.366:`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/test.log"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 180,
                  "endLine": 6,
                  "endColumn": 188,
                  "snippet": {
                    "text": "nd_t:s0-s0:c0.c1023 msg='PAM: accounting acct=root : exe=\"/usr/sbin/crond\" hostname=? addr=? terminal=cron res=success'\ntype=CRED_ACQ msg=audit(1170021601.342:295): user pid=13015 uid=0 auid=4294967295 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: setcred acct=root : exe=\"/usr/sbin/crond\" hostname=? addr=? terminal=cron res=success'\ntype=LOGIN msg=audit(1170021601.343:296): pid=2288 uid=0 subj=system_u:system_r:init_t:s0 old-auid=4294967295 auid=42 tty=(none) old-ses=4294967295 ses=1 res=1\ntype=SYSCALL msg=audit(1170021601.343:296): arch=c000003e syscall=1 success=yes exit=2 a0=8 a1=7fffa7ae",
                    "rendered": {
                      "text": "nd_t:s0-s0:c0.c1023 msg='PAM: accounting acct=root : exe=\"/usr/sbin/crond\" hostname=? addr=? terminal=cron res=success'\ntype=CRED_ACQ msg=audit(1170021601.342:295): user pid=13015 uid=0 auid=4294967295 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: setcred acct=root : exe=\"/usr/sbin/crond\" hostname=? addr=? terminal=cron res=success'\ntype=LOGIN msg=audit(1170021601.343:296): pid=2288 uid=0 subj=system_u:system_r:init_t:s0 old-auid=4294967295 auid=42 tty=(none) old-ses=4294967295 ses=1 res=1\ntype=SYSCALL msg=audit(1170021601.343:296): arch=c000003e syscall=1 success=yes exit=2 a0=8 a1=7fffa7ae",
                      "markdown": "`nd_t:s0-s0:c0.c1023 msg='PAM: accounting acct=root : exe=\"/usr/sbin/crond\" hostname=? addr=? terminal=cron res=success'\ntype=CRED_ACQ msg=audit(1170021601.342:295): user pid=13015 uid=0 auid=4294967295 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: setcred acct=root : exe=\"/usr/sbin/crond\" hostname=? addr=? terminal=cron res=success'\ntype=LOGIN msg=audit(1170021601.343:296): pid=2288 uid=0 subj=system_u:system_r:init_t:s0 old-auid=4294967295 auid=42 tty=(none) old-ses=4294967295 ses=1 res=1\ntype=SYSCALL msg=audit(1170021601.343:296): arch=c000003e syscall=1 success=yes exit=2 a0=8 a1=7fffa7ae`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/test.log"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 184,
                  "endLine": 5,
                  "endColumn": 192,
                  "snippet": {
                    "text": "inode=14911367 dev=03:07 mode=040730 ouid=890 ogid=891 rdev=00:00 obj=system_u:object_r:postfix_spool_maildrop_t:s0\ntype=USER_ACCT msg=audit(1170021601.340:294): user pid=13015 uid=0 auid=4294967295 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: accounting acct=root : exe=\"/usr/sbin/crond\" hostname=? addr=? terminal=cron res=success'\ntype=CRED_ACQ msg=audit(1170021601.342:295): user pid=13015 uid=0 auid=4294967295 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: setcred acct=root : exe=\"/usr/sbin/crond\" hostname=? addr=? terminal=cron res=success'\ntype=LOGIN msg=audit(1170021601.343:29",
                    "rendered": {
                      "text": "inode=14911367 dev=03:07 mode=040730 ouid=890 ogid=891 rdev=00:00 obj=system_u:object_r:postfix_spool_maildrop_t:s0\ntype=USER_ACCT msg=audit(1170021601.340:294): user pid=13015 uid=0 auid=4294967295 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: accounting acct=root : exe=\"/usr/sbin/crond\" hostname=? addr=? terminal=cron res=success'\ntype=CRED_ACQ msg=audit(1170021601.342:295): user pid=13015 uid=0 auid=4294967295 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: setcred acct=root : exe=\"/usr/sbin/crond\" hostname=? addr=? terminal=cron res=success'\ntype=LOGIN msg=audit(1170021601.343:29",
                      "markdown": "`inode=14911367 dev=03:07 mode=040730 ouid=890 ogid=891 rdev=00:00 obj=system_u:object_r:postfix_spool_maildrop_t:s0\ntype=USER_ACCT msg=audit(1170021601.340:294): user pid=13015 uid=0 auid=4294967295 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: accounting acct=root : exe=\"/usr/sbin/crond\" hostname=? addr=? terminal=cron res=success'\ntype=CRED_ACQ msg=audit(1170021601.342:295): user pid=13015 uid=0 auid=4294967295 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='PAM: setcred acct=root : exe=\"/usr/sbin/crond\" hostname=? addr=? terminal=cron res=success'\ntype=LOGIN msg=audit(1170021601.343:29`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auditd_raw.sed"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 12,
                  "endLine": 26,
                  "endColumn": 20,
                  "snippet": {
                    "text": "s/auditd start, ver=/ver=/\ns/policy loaded auid=/auid=/\ns/auditd normal halt, sending auid=/auid=/\ns/op=change password id=/op=change id=/\ns/avc:  received policyload notice (seqno=\\(\\d+)\\))/seqno=\\1/\ns/PAM: accounting acct/acct/\ns/PAM: session open acct/acct/\n",
                    "rendered": {
                      "text": "s/auditd start, ver=/ver=/\ns/policy loaded auid=/auid=/\ns/auditd normal halt, sending auid=/auid=/\ns/op=change password id=/op=change id=/\ns/avc:  received policyload notice (seqno=\\(\\d+)\\))/seqno=\\1/\ns/PAM: accounting acct/acct/\ns/PAM: session open acct/acct/\n",
                      "markdown": "`s/auditd start, ver=/ver=/\ns/policy loaded auid=/auid=/\ns/auditd normal halt, sending auid=/auid=/\ns/op=change password id=/op=change id=/\ns/avc:  received policyload notice (seqno=\\(\\d+)\\))/seqno=\\1/\ns/PAM: accounting acct/acct/\ns/PAM: session open acct/acct/\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auditd_raw.sed"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 13,
                  "endLine": 4,
                  "endColumn": 21,
                  "snippet": {
                    "text": "s/  cwd/ cwd/\ns/  comm=/ comm=/\ns/msg='//\ns/(hostname=/hostname=/\ns/success)/success/\ns/ : exe=/ exe=/\ns/'$//\n",
                    "rendered": {
                      "text": "s/  cwd/ cwd/\ns/  comm=/ comm=/\ns/msg='//\ns/(hostname=/hostname=/\ns/success)/success/\ns/ : exe=/ exe=/\ns/'$//\n",
                      "markdown": "`s/  cwd/ cwd/\ns/  comm=/ comm=/\ns/msg='//\ns/(hostname=/hostname=/\ns/success)/success/\ns/ : exe=/ exe=/\ns/'$//\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/test/auditd_raw.sed"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 3,
                  "endLine": 4,
                  "endColumn": 11,
                  "snippet": {
                    "text": "s/  cwd/ cwd/\ns/  comm=/ comm=/\ns/msg='//\ns/(hostname=/hostname=/\ns/success)/success/\ns/ : exe=/ exe=/\ns/'$//\n",
                    "rendered": {
                      "text": "s/  cwd/ cwd/\ns/  comm=/ comm=/\ns/msg='//\ns/(hostname=/hostname=/\ns/success)/success/\ns/ : exe=/ exe=/\ns/'$//\n",
                      "markdown": "`s/  cwd/ cwd/\ns/  comm=/ comm=/\ns/msg='//\ns/(hostname=/hostname=/\ns/success)/success/\ns/ : exe=/ exe=/\ns/'$//\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/30-pci-dss-v31.rules"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 14,
                  "endLine": 92,
                  "endColumn": 18,
                  "snippet": {
                    "text": "## 10.2.7 Creation and deletion of system-level objects\n## This requirement seems to be database table related and not audit\n\n## 10.3 Record at least the following audit trail entries\n## 10.3.1 through 10.3.6 are implicitly met by the audit system.\n\n## 10.4.2b Time data is protected.\n",
                    "rendered": {
                      "text": "## 10.2.7 Creation and deletion of system-level objects\n## This requirement seems to be database table related and not audit\n\n## 10.3 Record at least the following audit trail entries\n## 10.3.1 through 10.3.6 are implicitly met by the audit system.\n\n## 10.4.2b Time data is protected.\n",
                      "markdown": "`## 10.2.7 Creation and deletion of system-level objects\n## This requirement seems to be database table related and not audit\n\n## 10.3 Record at least the following audit trail entries\n## 10.3.1 through 10.3.6 are implicitly met by the audit system.\n\n## 10.4.2b Time data is protected.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/30-pci-dss-v31.rules"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 19,
                  "endLine": 9,
                  "endColumn": 23,
                  "snippet": {
                    "text": "## 1) if this is being used on a 32 bit machine, comment out the b64 lines\n## 2) These rules assume that login under the root account is not allowed.\n## 3) It is also assumed that 1000 represents the first usable user account. To\n##    be sure, look at UID_MIN in /etc/login.defs.\n## 4) If these rules generate too much spurious data for your tastes, limit the\n##    syscall file rules with a directory, like -F dir=/etc\n## 5) You can search for the results on the key fields in the rules\n",
                    "rendered": {
                      "text": "## 1) if this is being used on a 32 bit machine, comment out the b64 lines\n## 2) These rules assume that login under the root account is not allowed.\n## 3) It is also assumed that 1000 represents the first usable user account. To\n##    be sure, look at UID_MIN in /etc/login.defs.\n## 4) If these rules generate too much spurious data for your tastes, limit the\n##    syscall file rules with a directory, like -F dir=/etc\n## 5) You can search for the results on the key fields in the rules\n",
                      "markdown": "`## 1) if this is being used on a 32 bit machine, comment out the b64 lines\n## 2) These rules assume that login under the root account is not allowed.\n## 3) It is also assumed that 1000 represents the first usable user account. To\n##    be sure, look at UID_MIN in /etc/login.defs.\n## 4) If these rules generate too much spurious data for your tastes, limit the\n##    syscall file rules with a directory, like -F dir=/etc\n## 5) You can search for the results on the key fields in the rules\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/30-pci-dss-v31.rules"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 31,
                  "endLine": 96,
                  "endColumn": 37,
                  "snippet": {
                    "text": "## 10.3.1 through 10.3.6 are implicitly met by the audit system.\n\n## 10.4.2b Time data is protected.\n## We will place rules to check time synchronization\n-a always,exit -F arch=b32 -S adjtimex,settimeofday,stime -F key=10.4.2b-time-change\n-a always,exit -F arch=b64 -S adjtimex,settimeofday -F key=10.4.2b-time-change\n-a always,exit -F arch=b32 -S clock_settime -F a0=0x0 -F key=10.4.2b-time-change\n",
                    "rendered": {
                      "text": "## 10.3.1 through 10.3.6 are implicitly met by the audit system.\n\n## 10.4.2b Time data is protected.\n## We will place rules to check time synchronization\n-a always,exit -F arch=b32 -S adjtimex,settimeofday,stime -F key=10.4.2b-time-change\n-a always,exit -F arch=b64 -S adjtimex,settimeofday -F key=10.4.2b-time-change\n-a always,exit -F arch=b32 -S clock_settime -F a0=0x0 -F key=10.4.2b-time-change\n",
                      "markdown": "`## 10.3.1 through 10.3.6 are implicitly met by the audit system.\n\n## 10.4.2b Time data is protected.\n## We will place rules to check time synchronization\n-a always,exit -F arch=b32 -S adjtimex,settimeofday,stime -F key=10.4.2b-time-change\n-a always,exit -F arch=b64 -S adjtimex,settimeofday -F key=10.4.2b-time-change\n-a always,exit -F arch=b32 -S clock_settime -F a0=0x0 -F key=10.4.2b-time-change\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/30-pci-dss-v31.rules"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 10,
                  "endLine": 95,
                  "endColumn": 16,
                  "snippet": {
                    "text": "## 10.3 Record at least the following audit trail entries\n## 10.3.1 through 10.3.6 are implicitly met by the audit system.\n\n## 10.4.2b Time data is protected.\n## We will place rules to check time synchronization\n-a always,exit -F arch=b32 -S adjtimex,settimeofday,stime -F key=10.4.2b-time-change\n-a always,exit -F arch=b64 -S adjtimex,settimeofday -F key=10.4.2b-time-change\n",
                    "rendered": {
                      "text": "## 10.3 Record at least the following audit trail entries\n## 10.3.1 through 10.3.6 are implicitly met by the audit system.\n\n## 10.4.2b Time data is protected.\n## We will place rules to check time synchronization\n-a always,exit -F arch=b32 -S adjtimex,settimeofday,stime -F key=10.4.2b-time-change\n-a always,exit -F arch=b64 -S adjtimex,settimeofday -F key=10.4.2b-time-change\n",
                      "markdown": "`## 10.3 Record at least the following audit trail entries\n## 10.3.1 through 10.3.6 are implicitly met by the audit system.\n\n## 10.4.2b Time data is protected.\n## We will place rules to check time synchronization\n-a always,exit -F arch=b32 -S adjtimex,settimeofday,stime -F key=10.4.2b-time-change\n-a always,exit -F arch=b64 -S adjtimex,settimeofday -F key=10.4.2b-time-change\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/30-pci-dss-v31.rules"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 10,
                  "endLine": 58,
                  "endColumn": 16,
                  "snippet": {
                    "text": "## can find these events with: ausearch --start today -m user_login -sv no -i\n\n## 10.2.5.a Use of I&A mechanisms is logged. Pam naturally handles this.\n## you can find the events with:\n##   ausearch --start today -m user_auth,user_chauthtok -i\n\n## 10.2.5.b All elevation of privileges is logged\n",
                    "rendered": {
                      "text": "## can find these events with: ausearch --start today -m user_login -sv no -i\n\n## 10.2.5.a Use of I&A mechanisms is logged. Pam naturally handles this.\n## you can find the events with:\n##   ausearch --start today -m user_auth,user_chauthtok -i\n\n## 10.2.5.b All elevation of privileges is logged\n",
                      "markdown": "`## can find these events with: ausearch --start today -m user_login -sv no -i\n\n## 10.2.5.a Use of I&A mechanisms is logged. Pam naturally handles this.\n## you can find the events with:\n##   ausearch --start today -m user_auth,user_chauthtok -i\n\n## 10.2.5.b All elevation of privileges is logged\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/30-pci-dss-v31.rules"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 6,
                  "endLine": 55,
                  "endColumn": 12,
                  "snippet": {
                    "text": "-a always,exit -F arch=b64 -F path=/usr/sbin/aulastlog -F perm=x -F key=10.2.3-access-audit-trail\n\n## 10.2.4 Invalid logical access attempts. This is naturally met by pam. You\n## can find these events with: ausearch --start today -m user_login -sv no -i\n\n## 10.2.5.a Use of I&A mechanisms is logged. Pam naturally handles this.\n## you can find the events with:\n",
                    "rendered": {
                      "text": "-a always,exit -F arch=b64 -F path=/usr/sbin/aulastlog -F perm=x -F key=10.2.3-access-audit-trail\n\n## 10.2.4 Invalid logical access attempts. This is naturally met by pam. You\n## can find these events with: ausearch --start today -m user_login -sv no -i\n\n## 10.2.5.a Use of I&A mechanisms is logged. Pam naturally handles this.\n## you can find the events with:\n",
                      "markdown": "`-a always,exit -F arch=b64 -F path=/usr/sbin/aulastlog -F perm=x -F key=10.2.3-access-audit-trail\n\n## 10.2.4 Invalid logical access attempts. This is naturally met by pam. You\n## can find these events with: ausearch --start today -m user_login -sv no -i\n\n## 10.2.5.a Use of I&A mechanisms is logged. Pam naturally handles this.\n## you can find the events with:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/30-pci-dss-v31.rules"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 2,
                  "endLine": 36,
                  "endColumn": 9,
                  "snippet": {
                    "text": "-a always,exit -F arch=b32 -F path=/usr/bin/pkexec -F perm=x -F key=maybe-escalation\n-a always,exit -F arch=b64 -F path=/usr/bin/pkexec -F perm=x -F key=maybe-escalation\n\n## Watch for configuration changes to privilege escalation.\n-a always,exit -F arch=b32 -F path=/etc/sudoers -F perm=wa -F key=10.2.2-priv-config-changes\n-a always,exit -F arch=b64 -F path=/etc/sudoers -F perm=wa -F key=10.2.2-priv-config-changes\n-a always,exit -F arch=b32 -F dir=/etc/sudoers.d/ -F perm=wa -F key=10.2.2-priv-config-changes\n",
                    "rendered": {
                      "text": "-a always,exit -F arch=b32 -F path=/usr/bin/pkexec -F perm=x -F key=maybe-escalation\n-a always,exit -F arch=b64 -F path=/usr/bin/pkexec -F perm=x -F key=maybe-escalation\n\n## Watch for configuration changes to privilege escalation.\n-a always,exit -F arch=b32 -F path=/etc/sudoers -F perm=wa -F key=10.2.2-priv-config-changes\n-a always,exit -F arch=b64 -F path=/etc/sudoers -F perm=wa -F key=10.2.2-priv-config-changes\n-a always,exit -F arch=b32 -F dir=/etc/sudoers.d/ -F perm=wa -F key=10.2.2-priv-config-changes\n",
                      "markdown": "`-a always,exit -F arch=b32 -F path=/usr/bin/pkexec -F perm=x -F key=maybe-escalation\n-a always,exit -F arch=b64 -F path=/usr/bin/pkexec -F perm=x -F key=maybe-escalation\n\n## Watch for configuration changes to privilege escalation.\n-a always,exit -F arch=b32 -F path=/etc/sudoers -F perm=wa -F key=10.2.2-priv-config-changes\n-a always,exit -F arch=b64 -F path=/etc/sudoers -F perm=wa -F key=10.2.2-priv-config-changes\n-a always,exit -F arch=b32 -F dir=/etc/sudoers.d/ -F perm=wa -F key=10.2.2-priv-config-changes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/30-pci-dss-v31.rules"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 63,
                  "endLine": 32,
                  "endColumn": 70,
                  "snippet": {
                    "text": "## Special case for systemd-run. It is not audit aware, specifically watch it\n-a always,exit -F arch=b32 -F path=/usr/bin/systemd-run -F perm=x -F auid!=unset -F key=maybe-escalation\n-a always,exit -F arch=b64 -F path=/usr/bin/systemd-run -F perm=x -F auid!=unset -F key=maybe-escalation\n## Special case for pkexec. It is not audit aware, specifically watch it\n-a always,exit -F arch=b32 -F path=/usr/bin/pkexec -F perm=x -F key=maybe-escalation\n-a always,exit -F arch=b64 -F path=/usr/bin/pkexec -F perm=x -F key=maybe-escalation\n\n",
                    "rendered": {
                      "text": "## Special case for systemd-run. It is not audit aware, specifically watch it\n-a always,exit -F arch=b32 -F path=/usr/bin/systemd-run -F perm=x -F auid!=unset -F key=maybe-escalation\n-a always,exit -F arch=b64 -F path=/usr/bin/systemd-run -F perm=x -F auid!=unset -F key=maybe-escalation\n## Special case for pkexec. It is not audit aware, specifically watch it\n-a always,exit -F arch=b32 -F path=/usr/bin/pkexec -F perm=x -F key=maybe-escalation\n-a always,exit -F arch=b64 -F path=/usr/bin/pkexec -F perm=x -F key=maybe-escalation\n\n",
                      "markdown": "`## Special case for systemd-run. It is not audit aware, specifically watch it\n-a always,exit -F arch=b32 -F path=/usr/bin/systemd-run -F perm=x -F auid!=unset -F key=maybe-escalation\n-a always,exit -F arch=b64 -F path=/usr/bin/systemd-run -F perm=x -F auid!=unset -F key=maybe-escalation\n## Special case for pkexec. It is not audit aware, specifically watch it\n-a always,exit -F arch=b32 -F path=/usr/bin/pkexec -F perm=x -F key=maybe-escalation\n-a always,exit -F arch=b64 -F path=/usr/bin/pkexec -F perm=x -F key=maybe-escalation\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/30-pci-dss-v31.rules"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 68,
                  "endLine": 29,
                  "endColumn": 75,
                  "snippet": {
                    "text": "## logging. The pam config below should be placed into su and sudo pam stacks.\n## session   required pam_tty_audit.so disable=* enable=root\n\n## Special case for systemd-run. It is not audit aware, specifically watch it\n-a always,exit -F arch=b32 -F path=/usr/bin/systemd-run -F perm=x -F auid!=unset -F key=maybe-escalation\n-a always,exit -F arch=b64 -F path=/usr/bin/systemd-run -F perm=x -F auid!=unset -F key=maybe-escalation\n## Special case for pkexec. It is not audit aware, specifically watch it\n",
                    "rendered": {
                      "text": "## logging. The pam config below should be placed into su and sudo pam stacks.\n## session   required pam_tty_audit.so disable=* enable=root\n\n## Special case for systemd-run. It is not audit aware, specifically watch it\n-a always,exit -F arch=b32 -F path=/usr/bin/systemd-run -F perm=x -F auid!=unset -F key=maybe-escalation\n-a always,exit -F arch=b64 -F path=/usr/bin/systemd-run -F perm=x -F auid!=unset -F key=maybe-escalation\n## Special case for pkexec. It is not audit aware, specifically watch it\n",
                      "markdown": "`## logging. The pam config below should be placed into su and sudo pam stacks.\n## session   required pam_tty_audit.so disable=* enable=root\n\n## Special case for systemd-run. It is not audit aware, specifically watch it\n-a always,exit -F arch=b32 -F path=/usr/bin/systemd-run -F perm=x -F auid!=unset -F key=maybe-escalation\n-a always,exit -F arch=b64 -F path=/usr/bin/systemd-run -F perm=x -F auid!=unset -F key=maybe-escalation\n## Special case for pkexec. It is not audit aware, specifically watch it\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/30-pci-dss-v31.rules"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 23,
                  "endLine": 20,
                  "endColumn": 30,
                  "snippet": {
                    "text": "##  This requirement is implicitly met \n\n## 10.2.1 Implement audit trails to detect user accesses to cardholder data\n## This would require a watch on the database that excludes the daemon's\n## access. This rule is commented out due to needing a path name\n#-a always,exit -F arch=b32 -F path=path-to-db -F auid>=1000 -F auid!=unset -F uid!=daemon-acct -F perm=r -F key=10.2.1-cardholder-access\n#-a always,exit -F arch=b64 -F path=path-to-db -F auid>=1000 -F auid!=unset -F uid!=daemon-acct -F perm=r -F key=10.2.1-cardholder-access\n",
                    "rendered": {
                      "text": "##  This requirement is implicitly met \n\n## 10.2.1 Implement audit trails to detect user accesses to cardholder data\n## This would require a watch on the database that excludes the daemon's\n## access. This rule is commented out due to needing a path name\n#-a always,exit -F arch=b32 -F path=path-to-db -F auid>=1000 -F auid!=unset -F uid!=daemon-acct -F perm=r -F key=10.2.1-cardholder-access\n#-a always,exit -F arch=b64 -F path=path-to-db -F auid>=1000 -F auid!=unset -F uid!=daemon-acct -F perm=r -F key=10.2.1-cardholder-access\n",
                      "markdown": "`##  This requirement is implicitly met \n\n## 10.2.1 Implement audit trails to detect user accesses to cardholder data\n## This would require a watch on the database that excludes the daemon's\n## access. This rule is commented out due to needing a path name\n#-a always,exit -F arch=b32 -F path=path-to-db -F auid>=1000 -F auid!=unset -F uid!=daemon-acct -F perm=r -F key=10.2.1-cardholder-access\n#-a always,exit -F arch=b64 -F path=path-to-db -F auid>=1000 -F auid!=unset -F uid!=daemon-acct -F perm=r -F key=10.2.1-cardholder-access\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/Makefile.am"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 27,
                  "endLine": 2,
                  "endColumn": 32,
                  "snippet": {
                    "text": "# Makefile.am -- \n# Copyright 2004-08,2015-16 Red Hat Inc.\n# All Rights Reserved.\n#\n# This program is free software; you can redistribute it and/or modify\n",
                    "rendered": {
                      "text": "# Makefile.am -- \n# Copyright 2004-08,2015-16 Red Hat Inc.\n# All Rights Reserved.\n#\n# This program is free software; you can redistribute it and/or modify\n",
                      "markdown": "`# Makefile.am -- \n# Copyright 2004-08,2015-16 Red Hat Inc.\n# All Rights Reserved.\n#\n# This program is free software; you can redistribute it and/or modify\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/remote/remote-config.c"
                },
                "region": {
                  "startLine": 741,
                  "startColumn": 62,
                  "endLine": 741,
                  "endColumn": 66,
                  "snippet": {
                    "text": "{\n#ifndef USE_GSSAPI\n        syslog(LOG_INFO,\n                \"GSSAPI support is not enabled, ignoring value at line %d\",\n                line);\n#else\n\tif (config->krb5_key_file)\n",
                    "rendered": {
                      "text": "{\n#ifndef USE_GSSAPI\n        syslog(LOG_INFO,\n                \"GSSAPI support is not enabled, ignoring value at line %d\",\n                line);\n#else\n\tif (config->krb5_key_file)\n",
                      "markdown": "`{\n#ifndef USE_GSSAPI\n        syslog(LOG_INFO,\n                \"GSSAPI support is not enabled, ignoring value at line %d\",\n                line);\n#else\n\tif (config->krb5_key_file)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/remote/remote-config.c"
                },
                "region": {
                  "startLine": 725,
                  "startColumn": 48,
                  "endLine": 725,
                  "endColumn": 52,
                  "snippet": {
                    "text": "{\n#ifndef USE_GSSAPI\n\tsyslog(LOG_INFO,\n\t\t\"GSSAPI support is not enabled, ignoring value at line %d\",\n\t\tline);\n#else\n\tif (config->krb5_client_name)\n",
                    "rendered": {
                      "text": "{\n#ifndef USE_GSSAPI\n\tsyslog(LOG_INFO,\n\t\t\"GSSAPI support is not enabled, ignoring value at line %d\",\n\t\tline);\n#else\n\tif (config->krb5_client_name)\n",
                      "markdown": "`{\n#ifndef USE_GSSAPI\n\tsyslog(LOG_INFO,\n\t\t\"GSSAPI support is not enabled, ignoring value at line %d\",\n\t\tline);\n#else\n\tif (config->krb5_client_name)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/remote/remote-config.c"
                },
                "region": {
                  "startLine": 709,
                  "startColumn": 48,
                  "endLine": 709,
                  "endColumn": 52,
                  "snippet": {
                    "text": "{\n#ifndef USE_GSSAPI\n\tsyslog(LOG_INFO,\n\t\t\"GSSAPI support is not enabled, ignoring value at line %d\",\n\t\tline);\n#else\n\tif (config->krb5_principal)\n",
                    "rendered": {
                      "text": "{\n#ifndef USE_GSSAPI\n\tsyslog(LOG_INFO,\n\t\t\"GSSAPI support is not enabled, ignoring value at line %d\",\n\t\tline);\n#else\n\tif (config->krb5_principal)\n",
                      "markdown": "`{\n#ifndef USE_GSSAPI\n\tsyslog(LOG_INFO,\n\t\t\"GSSAPI support is not enabled, ignoring value at line %d\",\n\t\tline);\n#else\n\tif (config->krb5_principal)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/remote/remote-config.c"
                },
                "region": {
                  "startLine": 686,
                  "startColumn": 48,
                  "endLine": 686,
                  "endColumn": 52,
                  "snippet": {
                    "text": "{\n#ifndef USE_GSSAPI\n\tsyslog(LOG_INFO,\n\t\t\"GSSAPI support is not enabled, ignoring value at line %d\",\n\t\tline);\n\treturn 0;\n#else\n",
                    "rendered": {
                      "text": "{\n#ifndef USE_GSSAPI\n\tsyslog(LOG_INFO,\n\t\t\"GSSAPI support is not enabled, ignoring value at line %d\",\n\t\tline);\n\treturn 0;\n#else\n",
                      "markdown": "`{\n#ifndef USE_GSSAPI\n\tsyslog(LOG_INFO,\n\t\t\"GSSAPI support is not enabled, ignoring value at line %d\",\n\t\tline);\n\treturn 0;\n#else\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/remote/audisp-remote.conf.5"
                },
                "region": {
                  "startLine": 202,
                  "startColumn": 17,
                  "endLine": 202,
                  "endColumn": 25,
                  "snippet": {
                    "text": "client and server will use the specified principal to negotiate the\nencryption.  The format for the\n.I krb5_principal\nis like somename/hostname, see the auditd.conf man page for\ndetails.  If not specified, the krb5_client_name and remote_server values\nare used.\n.TP\n",
                    "rendered": {
                      "text": "client and server will use the specified principal to negotiate the\nencryption.  The format for the\n.I krb5_principal\nis like somename/hostname, see the auditd.conf man page for\ndetails.  If not specified, the krb5_client_name and remote_server values\nare used.\n.TP\n",
                      "markdown": "`client and server will use the specified principal to negotiate the\nencryption.  The format for the\n.I krb5_principal\nis like somename/hostname, see the auditd.conf man page for\ndetails.  If not specified, the krb5_client_name and remote_server values\nare used.\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/remote/audisp-remote.conf.5"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 177,
                  "endLine": 9,
                  "endColumn": 185,
                  "snippet": {
                    "text": "\n.TP\n.I remote_server\nThis is a one word character string that is the remote server hostname or address that this plugin will send log information to. This can be the numeric address or a resolvable hostname.\n.TP\n.I port\nThis option is an unsigned integer that indicates what port to connect to on the remote machine.\n",
                    "rendered": {
                      "text": "\n.TP\n.I remote_server\nThis is a one word character string that is the remote server hostname or address that this plugin will send log information to. This can be the numeric address or a resolvable hostname.\n.TP\n.I port\nThis option is an unsigned integer that indicates what port to connect to on the remote machine.\n",
                      "markdown": "`\n.TP\n.I remote_server\nThis is a one word character string that is the remote server hostname or address that this plugin will send log information to. This can be the numeric address or a resolvable hostname.\n.TP\n.I port\nThis option is an unsigned integer that indicates what port to connect to on the remote machine.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/remote/audisp-remote.conf.5"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 62,
                  "endLine": 9,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\n.TP\n.I remote_server\nThis is a one word character string that is the remote server hostname or address that this plugin will send log information to. This can be the numeric address or a resolvable hostname.\n.TP\n.I port\nThis option is an unsigned integer that indicates what port to connect to on the remote machine.\n",
                    "rendered": {
                      "text": "\n.TP\n.I remote_server\nThis is a one word character string that is the remote server hostname or address that this plugin will send log information to. This can be the numeric address or a resolvable hostname.\n.TP\n.I port\nThis option is an unsigned integer that indicates what port to connect to on the remote machine.\n",
                      "markdown": "`\n.TP\n.I remote_server\nThis is a one word character string that is the remote server hostname or address that this plugin will send log information to. This can be the numeric address or a resolvable hostname.\n.TP\n.I port\nThis option is an unsigned integer that indicates what port to connect to on the remote machine.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/remote/audisp-remote.conf.5"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 17,
                  "endLine": 83,
                  "endColumn": 21,
                  "snippet": {
                    "text": ".I max_tries_per_record\nThe maximum number of times an attempt is made to deliver each\nmessage.  The minimum value is one, as even a completely successful\ndelivery requires at least one try.  If too many attempts are made,\nthe network_failure_action action is performed.  The default is 3.\n.TP\n.I max_time_per_record\n",
                    "rendered": {
                      "text": ".I max_tries_per_record\nThe maximum number of times an attempt is made to deliver each\nmessage.  The minimum value is one, as even a completely successful\ndelivery requires at least one try.  If too many attempts are made,\nthe network_failure_action action is performed.  The default is 3.\n.TP\n.I max_time_per_record\n",
                      "markdown": "`.I max_tries_per_record\nThe maximum number of times an attempt is made to deliver each\nmessage.  The minimum value is one, as even a completely successful\ndelivery requires at least one try.  If too many attempts are made,\nthe network_failure_action action is performed.  The default is 3.\n.TP\n.I max_time_per_record\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/remote/audisp-remote.conf.5"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 8,
                  "endLine": 62,
                  "endColumn": 12,
                  "snippet": {
                    "text": "If\n.I ascii\nis given instead, each message is a simple ASCII text line with no\noverhead at all. The\n.I ascii\nformat is a very simplistic protocol. If there are any network problems, it\nwill cause audisp-remote to exit. Auditd may or may not restart it on next\n",
                    "rendered": {
                      "text": "If\n.I ascii\nis given instead, each message is a simple ASCII text line with no\noverhead at all. The\n.I ascii\nformat is a very simplistic protocol. If there are any network problems, it\nwill cause audisp-remote to exit. Auditd may or may not restart it on next\n",
                      "markdown": "`If\n.I ascii\nis given instead, each message is a simple ASCII text line with no\noverhead at all. The\n.I ascii\nformat is a very simplistic protocol. If there are any network problems, it\nwill cause audisp-remote to exit. Auditd may or may not restart it on next\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/remote/audisp-remote.conf.5"
                },
                "region": {
                  "startLine": 242,
                  "startColumn": 56,
                  "endLine": 242,
                  "endColumn": 62,
                  "snippet": {
                    "text": "plugin. Also set an even bigger q_depth in audisp-remote.conf. Also\nset the heartbeat_timeout to something non-zero but coordinate it with\nthe server so that it's half the size of the server's tcp_client_max_idle\nsetting. This is required to get retries in a reasonable time if the\nnetwork has a problem.\n\n.SH \"SEE ALSO\"\n",
                    "rendered": {
                      "text": "plugin. Also set an even bigger q_depth in audisp-remote.conf. Also\nset the heartbeat_timeout to something non-zero but coordinate it with\nthe server so that it's half the size of the server's tcp_client_max_idle\nsetting. This is required to get retries in a reasonable time if the\nnetwork has a problem.\n\n.SH \"SEE ALSO\"\n",
                      "markdown": "`plugin. Also set an even bigger q_depth in audisp-remote.conf. Also\nset the heartbeat_timeout to something non-zero but coordinate it with\nthe server so that it's half the size of the server's tcp_client_max_idle\nsetting. This is required to get retries in a reasonable time if the\nnetwork has a problem.\n\n.SH \"SEE ALSO\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/remote/audisp-remote.conf.5"
                },
                "region": {
                  "startLine": 234,
                  "startColumn": 65,
                  "endLine": 235,
                  "snippet": {
                    "text": ".I audispd-remote\npauses for the configured time and tries again.  It continues to pause\nand retry until either too many attempts have been made or the allowed\ntime expires.  Note that these times govern the maximum amount of time\nthe remote server is allowed in order to reboot, if you want to\nmaintain logging across a reboot.\n\nIt is recommended to set a large q_depth in auditd.conf if using this\n",
                    "rendered": {
                      "text": ".I audispd-remote\npauses for the configured time and tries again.  It continues to pause\nand retry until either too many attempts have been made or the allowed\ntime expires.  Note that these times govern the maximum amount of time\nthe remote server is allowed in order to reboot, if you want to\nmaintain logging across a reboot.\n\nIt is recommended to set a large q_depth in auditd.conf if using this\n",
                      "markdown": "`.I audispd-remote\npauses for the configured time and tries again.  It continues to pause\nand retry until either too many attempts have been made or the allowed\ntime expires.  Note that these times govern the maximum amount of time\nthe remote server is allowed in order to reboot, if you want to\nmaintain logging across a reboot.\n\nIt is recommended to set a large q_depth in auditd.conf if using this\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/remote/audisp-remote.conf.5"
                },
                "region": {
                  "startLine": 233,
                  "startColumn": 70,
                  "endLine": 234,
                  "endColumn": 5,
                  "snippet": {
                    "text": "the second attempt also fails,\n.I audispd-remote\npauses for the configured time and tries again.  It continues to pause\nand retry until either too many attempts have been made or the allowed\ntime expires.  Note that these times govern the maximum amount of time\nthe remote server is allowed in order to reboot, if you want to\nmaintain logging across a reboot.\n\n",
                    "rendered": {
                      "text": "the second attempt also fails,\n.I audispd-remote\npauses for the configured time and tries again.  It continues to pause\nand retry until either too many attempts have been made or the allowed\ntime expires.  Note that these times govern the maximum amount of time\nthe remote server is allowed in order to reboot, if you want to\nmaintain logging across a reboot.\n\n",
                      "markdown": "`the second attempt also fails,\n.I audispd-remote\npauses for the configured time and tries again.  It continues to pause\nand retry until either too many attempts have been made or the allowed\ntime expires.  Note that these times govern the maximum amount of time\nthe remote server is allowed in order to reboot, if you want to\nmaintain logging across a reboot.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/remote/audisp-remote.conf.5"
                },
                "region": {
                  "startLine": 232,
                  "startColumn": 25,
                  "endLine": 232,
                  "endColumn": 31,
                  "snippet": {
                    "text": "immediately made, perhaps after reconnecting to the server.  If\nthe second attempt also fails,\n.I audispd-remote\npauses for the configured time and tries again.  It continues to pause\nand retry until either too many attempts have been made or the allowed\ntime expires.  Note that these times govern the maximum amount of time\nthe remote server is allowed in order to reboot, if you want to\n",
                    "rendered": {
                      "text": "immediately made, perhaps after reconnecting to the server.  If\nthe second attempt also fails,\n.I audispd-remote\npauses for the configured time and tries again.  It continues to pause\nand retry until either too many attempts have been made or the allowed\ntime expires.  Note that these times govern the maximum amount of time\nthe remote server is allowed in order to reboot, if you want to\n",
                      "markdown": "`immediately made, perhaps after reconnecting to the server.  If\nthe second attempt also fails,\n.I audispd-remote\npauses for the configured time and tries again.  It continues to pause\nand retry until either too many attempts have been made or the allowed\ntime expires.  Note that these times govern the maximum amount of time\nthe remote server is allowed in order to reboot, if you want to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/remote/audisp-remote.conf.5"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 40,
                  "endLine": 91,
                  "endColumn": 46,
                  "snippet": {
                    "text": "each message.  Note that both this and\n.I max_tries_per_record\nshould be set, as each try may take a long time to time out.  The\ndefault value is 5 seconds.  If too much time is used on a message,\nthe network_failure_action action is performed.\n.TP\n.I heartbeat_timeout\n",
                    "rendered": {
                      "text": "each message.  Note that both this and\n.I max_tries_per_record\nshould be set, as each try may take a long time to time out.  The\ndefault value is 5 seconds.  If too much time is used on a message,\nthe network_failure_action action is performed.\n.TP\n.I heartbeat_timeout\n",
                      "markdown": "`each message.  Note that both this and\n.I max_tries_per_record\nshould be set, as each try may take a long time to time out.  The\ndefault value is 5 seconds.  If too much time is used on a message,\nthe network_failure_action action is performed.\n.TP\n.I heartbeat_timeout\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/remote/audisp-remote.conf.5"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 50,
                  "endLine": 90,
                  "endColumn": 56,
                  "snippet": {
                    "text": "The maximum amount of time, in seconds, spent attempting to deliver\neach message.  Note that both this and\n.I max_tries_per_record\nshould be set, as each try may take a long time to time out.  The\ndefault value is 5 seconds.  If too much time is used on a message,\nthe network_failure_action action is performed.\n.TP\n",
                    "rendered": {
                      "text": "The maximum amount of time, in seconds, spent attempting to deliver\neach message.  Note that both this and\n.I max_tries_per_record\nshould be set, as each try may take a long time to time out.  The\ndefault value is 5 seconds.  If too much time is used on a message,\nthe network_failure_action action is performed.\n.TP\n",
                      "markdown": "`The maximum amount of time, in seconds, spent attempting to deliver\neach message.  Note that both this and\n.I max_tries_per_record\nshould be set, as each try may take a long time to time out.  The\ndefault value is 5 seconds.  If too much time is used on a message,\nthe network_failure_action action is performed.\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/remote/audisp-remote.conf.5"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 42,
                  "endLine": 90,
                  "endColumn": 48,
                  "snippet": {
                    "text": "The maximum amount of time, in seconds, spent attempting to deliver\neach message.  Note that both this and\n.I max_tries_per_record\nshould be set, as each try may take a long time to time out.  The\ndefault value is 5 seconds.  If too much time is used on a message,\nthe network_failure_action action is performed.\n.TP\n",
                    "rendered": {
                      "text": "The maximum amount of time, in seconds, spent attempting to deliver\neach message.  Note that both this and\n.I max_tries_per_record\nshould be set, as each try may take a long time to time out.  The\ndefault value is 5 seconds.  If too much time is used on a message,\nthe network_failure_action action is performed.\n.TP\n",
                      "markdown": "`The maximum amount of time, in seconds, spent attempting to deliver\neach message.  Note that both this and\n.I max_tries_per_record\nshould be set, as each try may take a long time to time out.  The\ndefault value is 5 seconds.  If too much time is used on a message,\nthe network_failure_action action is performed.\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/remote/test-queue.c"
                },
                "region": {
                  "startLine": 203,
                  "startColumn": 20,
                  "endLine": 203,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\t\t\tdie(\"invalid data at %zu\", j);\n\t\t}\n\t\tif (buf[j] != '\\0')\n\t\t\tdie(\"invalid data at %zu\", j);\n\t}\n\tif (q_drop_head(q) != 0)\n\t\terr(\"q_drop_head\");\n",
                    "rendered": {
                      "text": "\t\t\t\tdie(\"invalid data at %zu\", j);\n\t\t}\n\t\tif (buf[j] != '\\0')\n\t\t\tdie(\"invalid data at %zu\", j);\n\t}\n\tif (q_drop_head(q) != 0)\n\t\terr(\"q_drop_head\");\n",
                      "markdown": "`\t\t\t\tdie(\"invalid data at %zu\", j);\n\t\t}\n\t\tif (buf[j] != '\\0')\n\t\t\tdie(\"invalid data at %zu\", j);\n\t}\n\tif (q_drop_head(q) != 0)\n\t\terr(\"q_drop_head\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/remote/test-queue.c"
                },
                "region": {
                  "startLine": 200,
                  "startColumn": 21,
                  "endLine": 200,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\t\terr(\"q_peek\");\n\t\tfor (j = 0; j < ENTRY_SIZE - 1; j++) {\n\t\t\tif (buf[j] != 'A')\n\t\t\t\tdie(\"invalid data at %zu\", j);\n\t\t}\n\t\tif (buf[j] != '\\0')\n\t\t\tdie(\"invalid data at %zu\", j);\n",
                    "rendered": {
                      "text": "\t\t\terr(\"q_peek\");\n\t\tfor (j = 0; j < ENTRY_SIZE - 1; j++) {\n\t\t\tif (buf[j] != 'A')\n\t\t\t\tdie(\"invalid data at %zu\", j);\n\t\t}\n\t\tif (buf[j] != '\\0')\n\t\t\tdie(\"invalid data at %zu\", j);\n",
                      "markdown": "`\t\t\terr(\"q_peek\");\n\t\tfor (j = 0; j < ENTRY_SIZE - 1; j++) {\n\t\t\tif (buf[j] != 'A')\n\t\t\t\tdie(\"invalid data at %zu\", j);\n\t\t}\n\t\tif (buf[j] != '\\0')\n\t\t\tdie(\"invalid data at %zu\", j);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/remote/Makefile.am"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 36,
                  "endLine": 2,
                  "endColumn": 41,
                  "snippet": {
                    "text": "# Makefile.am --\n# Copyright 2008-2009,2011,2015,2018 Red Hat Inc., Durham, North Carolina.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                    "rendered": {
                      "text": "# Makefile.am --\n# Copyright 2008-2009,2011,2015,2018 Red Hat Inc., Durham, North Carolina.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                      "markdown": "`# Makefile.am --\n# Copyright 2008-2009,2011,2015,2018 Red Hat Inc., Durham, North Carolina.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/plugins/Makefile.am"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 27,
                  "endLine": 2,
                  "endColumn": 32,
                  "snippet": {
                    "text": "# Makefile.am --\n# Copyright 2007-08,2018-23 Red Hat Inc.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                    "rendered": {
                      "text": "# Makefile.am --\n# Copyright 2007-08,2018-23 Red Hat Inc.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                      "markdown": "`# Makefile.am --\n# Copyright 2007-08,2018-23 Red Hat Inc.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/audispd-llist.c"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 1,
                  "endLine": 46,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n        node = l->head;\n\twhile (node->next)\n\t\tnode = node->next;\n\tl->cur = node;\n}\n\n",
                    "rendered": {
                      "text": "\n        node = l->head;\n\twhile (node->next)\n\t\tnode = node->next;\n\tl->cur = node;\n}\n\n",
                      "markdown": "`\n        node = l->head;\n\twhile (node->next)\n\t\tnode = node->next;\n\tl->cur = node;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/audispd-llist.c"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 7,
                  "endLine": 44,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\tif (l->head == NULL)\n\t\treturn;\n\n        node = l->head;\n\twhile (node->next)\n\t\tnode = node->next;\n\tl->cur = node;\n",
                    "rendered": {
                      "text": "\tif (l->head == NULL)\n\t\treturn;\n\n        node = l->head;\n\twhile (node->next)\n\t\tnode = node->next;\n\tl->cur = node;\n",
                      "markdown": "`\tif (l->head == NULL)\n\t\treturn;\n\n        node = l->head;\n\twhile (node->next)\n\t\tnode = node->next;\n\tl->cur = node;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/audispd-pconfig.c"
                },
                "region": {
                  "startLine": 434,
                  "startColumn": 34,
                  "endLine": 434,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\t\t\tconfig->type = service_type[i].option;\n\t\t\tif (config->type == S_BUILTIN) {\n\t\t\t\taudit_msg(LOG_WARNING,\n\t\t\"Option %s line %d is obsolete - update it\", nv->values[0], line);\n\t\t\t\tconfig->type = S_ALWAYS;\n\t\t\t}\n\t\t\treturn 0;\n",
                    "rendered": {
                      "text": "\t\t\tconfig->type = service_type[i].option;\n\t\t\tif (config->type == S_BUILTIN) {\n\t\t\t\taudit_msg(LOG_WARNING,\n\t\t\"Option %s line %d is obsolete - update it\", nv->values[0], line);\n\t\t\t\tconfig->type = S_ALWAYS;\n\t\t\t}\n\t\t\treturn 0;\n",
                      "markdown": "`\t\t\tconfig->type = service_type[i].option;\n\t\t\tif (config->type == S_BUILTIN) {\n\t\t\t\taudit_msg(LOG_WARNING,\n\t\t\"Option %s line %d is obsolete - update it\", nv->values[0], line);\n\t\t\t\tconfig->type = S_ALWAYS;\n\t\t\t}\n\t\t\treturn 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audisp/Makefile.am"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 29,
                  "endLine": 2,
                  "endColumn": 34,
                  "snippet": {
                    "text": "# Makefile.am-- \n# Copyright 2007,2011,2015-23 Red Hat Inc.\n# All Rights Reserved.\n#\n# This program is free software; you can redistribute it and/or modify\n",
                    "rendered": {
                      "text": "# Makefile.am-- \n# Copyright 2007,2011,2015-23 Red Hat Inc.\n# All Rights Reserved.\n#\n# This program is free software; you can redistribute it and/or modify\n",
                      "markdown": "`# Makefile.am-- \n# Copyright 2007,2011,2015-23 Red Hat Inc.\n# All Rights Reserved.\n#\n# This program is free software; you can redistribute it and/or modify\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/init.d/auditd.reload"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 40,
                  "endLine": 2,
                  "endColumn": 49,
                  "snippet": {
                    "text": "#!/bin/sh\n# Helper script to provide legacy auditd service options not \n# directly supported by systemd\n\n# Check that we are root ... so non-root users stop here\n",
                    "rendered": {
                      "text": "#!/bin/sh\n# Helper script to provide legacy auditd service options not \n# directly supported by systemd\n\n# Check that we are root ... so non-root users stop here\n",
                      "markdown": "`#!/bin/sh\n# Helper script to provide legacy auditd service options not \n# directly supported by systemd\n\n# Check that we are root ... so non-root users stop here\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/init.d/auditd.reload"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 8,
                  "endLine": 2,
                  "endColumn": 16,
                  "snippet": {
                    "text": "#!/bin/sh\n# Helper script to provide legacy auditd service options not \n# directly supported by systemd\n\n# Check that we are root ... so non-root users stop here\n",
                    "rendered": {
                      "text": "#!/bin/sh\n# Helper script to provide legacy auditd service options not \n# directly supported by systemd\n\n# Check that we are root ... so non-root users stop here\n",
                      "markdown": "`#!/bin/sh\n# Helper script to provide legacy auditd service options not \n# directly supported by systemd\n\n# Check that we are root ... so non-root users stop here\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/init.d/auditd.stop"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 40,
                  "endLine": 2,
                  "endColumn": 49,
                  "snippet": {
                    "text": "#!/bin/sh\n# Helper script to provide legacy auditd service options not \n# directly supported by systemd\n\n# Check that we are root ... so non-root users stop here\n",
                    "rendered": {
                      "text": "#!/bin/sh\n# Helper script to provide legacy auditd service options not \n# directly supported by systemd\n\n# Check that we are root ... so non-root users stop here\n",
                      "markdown": "`#!/bin/sh\n# Helper script to provide legacy auditd service options not \n# directly supported by systemd\n\n# Check that we are root ... so non-root users stop here\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/init.d/auditd.stop"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 8,
                  "endLine": 2,
                  "endColumn": 16,
                  "snippet": {
                    "text": "#!/bin/sh\n# Helper script to provide legacy auditd service options not \n# directly supported by systemd\n\n# Check that we are root ... so non-root users stop here\n",
                    "rendered": {
                      "text": "#!/bin/sh\n# Helper script to provide legacy auditd service options not \n# directly supported by systemd\n\n# Check that we are root ... so non-root users stop here\n",
                      "markdown": "`#!/bin/sh\n# Helper script to provide legacy auditd service options not \n# directly supported by systemd\n\n# Check that we are root ... so non-root users stop here\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/init.d/auditd.state"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 1,
                  "endLine": 18,
                  "endColumn": 6,
                  "snippet": {
                    "text": "if [ $RETVAL -eq 0 ] ; then\n\tif [ -e $state_file ] ; then\n\t\tprintf \"\\n\\n\"\n\t\tcat $state_file\n\tfi\nfi\necho\n",
                    "rendered": {
                      "text": "if [ $RETVAL -eq 0 ] ; then\n\tif [ -e $state_file ] ; then\n\t\tprintf \"\\n\\n\"\n\t\tcat $state_file\n\tfi\nfi\necho\n",
                      "markdown": "`if [ $RETVAL -eq 0 ] ; then\n\tif [ -e $state_file ] ; then\n\t\tprintf \"\\n\\n\"\n\t\tcat $state_file\n\tfi\nfi\necho\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/init.d/auditd.state"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 40,
                  "endLine": 2,
                  "endColumn": 49,
                  "snippet": {
                    "text": "#!/bin/sh\n# Helper script to provide legacy auditd service options not \n# directly supported by systemd\n\n# Check that we are root ... so non-root users stop here\n",
                    "rendered": {
                      "text": "#!/bin/sh\n# Helper script to provide legacy auditd service options not \n# directly supported by systemd\n\n# Check that we are root ... so non-root users stop here\n",
                      "markdown": "`#!/bin/sh\n# Helper script to provide legacy auditd service options not \n# directly supported by systemd\n\n# Check that we are root ... so non-root users stop here\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/init.d/auditd.state"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 8,
                  "endLine": 2,
                  "endColumn": 16,
                  "snippet": {
                    "text": "#!/bin/sh\n# Helper script to provide legacy auditd service options not \n# directly supported by systemd\n\n# Check that we are root ... so non-root users stop here\n",
                    "rendered": {
                      "text": "#!/bin/sh\n# Helper script to provide legacy auditd service options not \n# directly supported by systemd\n\n# Check that we are root ... so non-root users stop here\n",
                      "markdown": "`#!/bin/sh\n# Helper script to provide legacy auditd service options not \n# directly supported by systemd\n\n# Check that we are root ... so non-root users stop here\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/init.d/auditd.resume"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 40,
                  "endLine": 2,
                  "endColumn": 49,
                  "snippet": {
                    "text": "#!/bin/sh\n# Helper script to provide legacy auditd service options not \n# directly supported by systemd\n\n# Check that we are root ... so non-root users stop here\n",
                    "rendered": {
                      "text": "#!/bin/sh\n# Helper script to provide legacy auditd service options not \n# directly supported by systemd\n\n# Check that we are root ... so non-root users stop here\n",
                      "markdown": "`#!/bin/sh\n# Helper script to provide legacy auditd service options not \n# directly supported by systemd\n\n# Check that we are root ... so non-root users stop here\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/init.d/auditd.resume"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 8,
                  "endLine": 2,
                  "endColumn": 16,
                  "snippet": {
                    "text": "#!/bin/sh\n# Helper script to provide legacy auditd service options not \n# directly supported by systemd\n\n# Check that we are root ... so non-root users stop here\n",
                    "rendered": {
                      "text": "#!/bin/sh\n# Helper script to provide legacy auditd service options not \n# directly supported by systemd\n\n# Check that we are root ... so non-root users stop here\n",
                      "markdown": "`#!/bin/sh\n# Helper script to provide legacy auditd service options not \n# directly supported by systemd\n\n# Check that we are root ... so non-root users stop here\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/init.d/auditd.cron"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 10,
                  "endLine": 5,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\n##########\n# This script can be installed to the cron system to get log rotation\n# based on time instead of log size.\n##########\n\n/sbin/auditctl --signal usr1\n",
                    "rendered": {
                      "text": "\n##########\n# This script can be installed to the cron system to get log rotation\n# based on time instead of log size.\n##########\n\n/sbin/auditctl --signal usr1\n",
                      "markdown": "`\n##########\n# This script can be installed to the cron system to get log rotation\n# based on time instead of log size.\n##########\n\n/sbin/auditctl --signal usr1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/init.d/auditd.cron"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 6,
                  "endLine": 4,
                  "endColumn": 14,
                  "snippet": {
                    "text": "#!/bin/sh\n\n##########\n# This script can be installed to the cron system to get log rotation\n# based on time instead of log size.\n##########\n\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n##########\n# This script can be installed to the cron system to get log rotation\n# based on time instead of log size.\n##########\n\n",
                      "markdown": "`#!/bin/sh\n\n##########\n# This script can be installed to the cron system to get log rotation\n# based on time instead of log size.\n##########\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/init.d/auditd.restart"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 40,
                  "endLine": 2,
                  "endColumn": 49,
                  "snippet": {
                    "text": "#!/bin/sh\n# Helper script to provide legacy auditd service options not\n# directly supported by systemd.\n\ntest -f /etc/audit/auditd.conf  || exit 6\n",
                    "rendered": {
                      "text": "#!/bin/sh\n# Helper script to provide legacy auditd service options not\n# directly supported by systemd.\n\ntest -f /etc/audit/auditd.conf  || exit 6\n",
                      "markdown": "`#!/bin/sh\n# Helper script to provide legacy auditd service options not\n# directly supported by systemd.\n\ntest -f /etc/audit/auditd.conf  || exit 6\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/init.d/auditd.restart"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 8,
                  "endLine": 2,
                  "endColumn": 16,
                  "snippet": {
                    "text": "#!/bin/sh\n# Helper script to provide legacy auditd service options not\n# directly supported by systemd.\n\ntest -f /etc/audit/auditd.conf  || exit 6\n",
                    "rendered": {
                      "text": "#!/bin/sh\n# Helper script to provide legacy auditd service options not\n# directly supported by systemd.\n\ntest -f /etc/audit/auditd.conf  || exit 6\n",
                      "markdown": "`#!/bin/sh\n# Helper script to provide legacy auditd service options not\n# directly supported by systemd.\n\ntest -f /etc/audit/auditd.conf  || exit 6\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/init.d/augenrules"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 35,
                  "endLine": 140,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tcp ${DestinationFile} ${DestinationFile}.${ASuffix}\nfi\n# We copy the file so that it gets the right selinux label\ncp \"${TmpRules}\" ${DestinationFile}\nchmod 0640 ${DestinationFile}\n# Restore context on MLS system. /tmp is SystemLow & audit.rules is SystemHigh\nif [ -x /usr/sbin/restorecon ] ; then\n\t/usr/sbin/restorecon -F ${DestinationFile}\n",
                    "rendered": {
                      "text": "\tcp ${DestinationFile} ${DestinationFile}.${ASuffix}\nfi\n# We copy the file so that it gets the right selinux label\ncp \"${TmpRules}\" ${DestinationFile}\nchmod 0640 ${DestinationFile}\n# Restore context on MLS system. /tmp is SystemLow & audit.rules is SystemHigh\nif [ -x /usr/sbin/restorecon ] ; then\n\t/usr/sbin/restorecon -F ${DestinationFile}\n",
                      "markdown": "`\tcp ${DestinationFile} ${DestinationFile}.${ASuffix}\nfi\n# We copy the file so that it gets the right selinux label\ncp \"${TmpRules}\" ${DestinationFile}\nchmod 0640 ${DestinationFile}\n# Restore context on MLS system. /tmp is SystemLow & audit.rules is SystemHigh\nif [ -x /usr/sbin/restorecon ] ; then\n\t/usr/sbin/restorecon -F ${DestinationFile}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/init.d/augenrules"
                },
                "region": {
                  "startLine": 138,
                  "startColumn": 58,
                  "endLine": 139,
                  "endColumn": 3,
                  "snippet": {
                    "text": "if [ -f ${DestinationFile} ]; then\n\tcp ${DestinationFile} ${DestinationFile}.${ASuffix}\nfi\n# We copy the file so that it gets the right selinux label\ncp \"${TmpRules}\" ${DestinationFile}\nchmod 0640 ${DestinationFile}\n# Restore context on MLS system. /tmp is SystemLow & audit.rules is SystemHigh\nif [ -x /usr/sbin/restorecon ] ; then\n",
                    "rendered": {
                      "text": "if [ -f ${DestinationFile} ]; then\n\tcp ${DestinationFile} ${DestinationFile}.${ASuffix}\nfi\n# We copy the file so that it gets the right selinux label\ncp \"${TmpRules}\" ${DestinationFile}\nchmod 0640 ${DestinationFile}\n# Restore context on MLS system. /tmp is SystemLow & audit.rules is SystemHigh\nif [ -x /usr/sbin/restorecon ] ; then\n",
                      "markdown": "`if [ -f ${DestinationFile} ]; then\n\tcp ${DestinationFile} ${DestinationFile}.${ASuffix}\nfi\n# We copy the file so that it gets the right selinux label\ncp \"${TmpRules}\" ${DestinationFile}\nchmod 0640 ${DestinationFile}\n# Restore context on MLS system. /tmp is SystemLow & audit.rules is SystemHigh\nif [ -x /usr/sbin/restorecon ] ; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/init.d/augenrules"
                },
                "region": {
                  "startLine": 136,
                  "endLine": 136,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Otherwise we install the new file\ncheck_immutable\nif [ -f ${DestinationFile} ]; then\n\tcp ${DestinationFile} ${DestinationFile}.${ASuffix}\nfi\n# We copy the file so that it gets the right selinux label\ncp \"${TmpRules}\" ${DestinationFile}\n",
                    "rendered": {
                      "text": "# Otherwise we install the new file\ncheck_immutable\nif [ -f ${DestinationFile} ]; then\n\tcp ${DestinationFile} ${DestinationFile}.${ASuffix}\nfi\n# We copy the file so that it gets the right selinux label\ncp \"${TmpRules}\" ${DestinationFile}\n",
                      "markdown": "`# Otherwise we install the new file\ncheck_immutable\nif [ -f ${DestinationFile} ]; then\n\tcp ${DestinationFile} ${DestinationFile}.${ASuffix}\nfi\n# We copy the file so that it gets the right selinux label\ncp \"${TmpRules}\" ${DestinationFile}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/init.d/augenrules"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 6,
                  "endLine": 88,
                  "endColumn": 11,
                  "snippet": {
                    "text": "echo \"## This file is automatically generated from $SourceRulesDir\" >> \"${TmpRules}\"\nfor rules in $(/bin/ls -1v ${SourceRulesDir} | grep \"\\.rules$\") ; do\n\tcat ${SourceRulesDir}/\"${rules}\"\ndone | awk '\nBEGIN   {\n        minus_e = \"\";\n        minus_D = \"\";\n",
                    "rendered": {
                      "text": "echo \"## This file is automatically generated from $SourceRulesDir\" >> \"${TmpRules}\"\nfor rules in $(/bin/ls -1v ${SourceRulesDir} | grep \"\\.rules$\") ; do\n\tcat ${SourceRulesDir}/\"${rules}\"\ndone | awk '\nBEGIN   {\n        minus_e = \"\";\n        minus_D = \"\";\n",
                      "markdown": "`echo \"## This file is automatically generated from $SourceRulesDir\" >> \"${TmpRules}\"\nfor rules in $(/bin/ls -1v ${SourceRulesDir} | grep \"\\.rules$\") ; do\n\tcat ${SourceRulesDir}/\"${rules}\"\ndone | awk '\nBEGIN   {\n        minus_e = \"\";\n        minus_D = \"\";\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/init.d/augenrules"
                },
                "region": {
                  "startLine": 87,
                  "endLine": 87,
                  "endColumn": 5,
                  "snippet": {
                    "text": "umask 0137\necho \"## This file is automatically generated from $SourceRulesDir\" >> \"${TmpRules}\"\nfor rules in $(/bin/ls -1v ${SourceRulesDir} | grep \"\\.rules$\") ; do\n\tcat ${SourceRulesDir}/\"${rules}\"\ndone | awk '\nBEGIN   {\n        minus_e = \"\";\n",
                    "rendered": {
                      "text": "umask 0137\necho \"## This file is automatically generated from $SourceRulesDir\" >> \"${TmpRules}\"\nfor rules in $(/bin/ls -1v ${SourceRulesDir} | grep \"\\.rules$\") ; do\n\tcat ${SourceRulesDir}/\"${rules}\"\ndone | awk '\nBEGIN   {\n        minus_e = \"\";\n",
                      "markdown": "`umask 0137\necho \"## This file is automatically generated from $SourceRulesDir\" >> \"${TmpRules}\"\nfor rules in $(/bin/ls -1v ${SourceRulesDir} | grep \"\\.rules$\") ; do\n\tcat ${SourceRulesDir}/\"${rules}\"\ndone | awk '\nBEGIN   {\n        minus_e = \"\";\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/init.d/augenrules"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 46,
                  "endLine": 86,
                  "endColumn": 52,
                  "snippet": {
                    "text": "#   - the last processed -e directive is emitted as the last line\numask 0137\necho \"## This file is automatically generated from $SourceRulesDir\" >> \"${TmpRules}\"\nfor rules in $(/bin/ls -1v ${SourceRulesDir} | grep \"\\.rules$\") ; do\n\tcat ${SourceRulesDir}/\"${rules}\"\ndone | awk '\nBEGIN   {\n",
                    "rendered": {
                      "text": "#   - the last processed -e directive is emitted as the last line\numask 0137\necho \"## This file is automatically generated from $SourceRulesDir\" >> \"${TmpRules}\"\nfor rules in $(/bin/ls -1v ${SourceRulesDir} | grep \"\\.rules$\") ; do\n\tcat ${SourceRulesDir}/\"${rules}\"\ndone | awk '\nBEGIN   {\n",
                      "markdown": "`#   - the last processed -e directive is emitted as the last line\numask 0137\necho \"## This file is automatically generated from $SourceRulesDir\" >> \"${TmpRules}\"\nfor rules in $(/bin/ls -1v ${SourceRulesDir} | grep \"\\.rules$\") ; do\n\tcat ${SourceRulesDir}/\"${rules}\"\ndone | awk '\nBEGIN   {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/init.d/augenrules"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 25,
                  "endLine": 50,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n# Check if audit is in immutable mode - exit if so\ncheck_immutable () {\n    if [ \"$(auditctl -s | awk '$1 == \"enabled\" { print $2 }')\" = \"2\" ] ; then\n\techo \"$cmd: Audit system is in immutable mode - exiting with no changes\"\n\texit 0\n    fi\n",
                    "rendered": {
                      "text": "\n# Check if audit is in immutable mode - exit if so\ncheck_immutable () {\n    if [ \"$(auditctl -s | awk '$1 == \"enabled\" { print $2 }')\" = \"2\" ] ; then\n\techo \"$cmd: Audit system is in immutable mode - exiting with no changes\"\n\texit 0\n    fi\n",
                      "markdown": "`\n# Check if audit is in immutable mode - exit if so\ncheck_immutable () {\n    if [ \"$(auditctl -s | awk '$1 == \"enabled\" { print $2 }')\" = \"2\" ] ; then\n\techo \"$cmd: Audit system is in immutable mode - exiting with no changes\"\n\texit 0\n    fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/init.d/augenrules"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 25,
                  "endColumn": 56,
                  "snippet": {
                    "text": "# TmpRules:\n#   Temporary interim rules file\n# ASuffix:\n#   Suffix for previous audit.rules file if this script replaces it.\n#   The file is left in the destination directory with suffix with $ASuffix\n\nDestinationFile=/etc/audit/audit.rules\n",
                    "rendered": {
                      "text": "# TmpRules:\n#   Temporary interim rules file\n# ASuffix:\n#   Suffix for previous audit.rules file if this script replaces it.\n#   The file is left in the destination directory with suffix with $ASuffix\n\nDestinationFile=/etc/audit/audit.rules\n",
                      "markdown": "`# TmpRules:\n#   Temporary interim rules file\n# ASuffix:\n#   Suffix for previous audit.rules file if this script replaces it.\n#   The file is left in the destination directory with suffix with $ASuffix\n\nDestinationFile=/etc/audit/audit.rules\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/init.d/augenrules"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 25,
                  "endLine": 21,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# DestinationFile:\n#   Destination rules file\n# SourceRulesDir:\n#   Directory location to find component rule files\n# TmpRules:\n#   Temporary interim rules file\n# ASuffix:\n",
                    "rendered": {
                      "text": "# DestinationFile:\n#   Destination rules file\n# SourceRulesDir:\n#   Directory location to find component rule files\n# TmpRules:\n#   Temporary interim rules file\n# ASuffix:\n",
                      "markdown": "`# DestinationFile:\n#   Destination rules file\n# SourceRulesDir:\n#   Directory location to find component rule files\n# TmpRules:\n#   Temporary interim rules file\n# ASuffix:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/init.d/augenrules"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 43,
                  "endLine": 11,
                  "endColumn": 51,
                  "snippet": {
                    "text": "# lines (starting with # or <whitespace>#) are stripped as the source files\n# are processed.\n#\n# Having formed the interim rules file, the script checks if the file is empty\n# or is identical to the existing /etc/audit/audit.rules and if either of\n# these cases are true, it does not replace the existing file\n#\n",
                    "rendered": {
                      "text": "# lines (starting with # or <whitespace>#) are stripped as the source files\n# are processed.\n#\n# Having formed the interim rules file, the script checks if the file is empty\n# or is identical to the existing /etc/audit/audit.rules and if either of\n# these cases are true, it does not replace the existing file\n#\n",
                      "markdown": "`# lines (starting with # or <whitespace>#) are stripped as the source files\n# are processed.\n#\n# Having formed the interim rules file, the script checks if the file is empty\n# or is identical to the existing /etc/audit/audit.rules and if either of\n# these cases are true, it does not replace the existing file\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/init.d/augenrules"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 1,
                  "endLine": 3,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# Script to concatenate rules files found in a base audit rules directory\n# to form a single /etc/audit/audit.rules file suitable for loading into\n# the Linux audit system\n\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# Script to concatenate rules files found in a base audit rules directory\n# to form a single /etc/audit/audit.rules file suitable for loading into\n# the Linux audit system\n\n",
                      "markdown": "`#!/bin/sh\n\n# Script to concatenate rules files found in a base audit rules directory\n# to form a single /etc/audit/audit.rules file suitable for loading into\n# the Linux audit system\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/init.d/auditd.service.in"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 16,
                  "endLine": 41,
                  "endColumn": 25,
                  "snippet": {
                    "text": "LockPersonality=true\n## The following control prevents rules on /proc so its off by default\n#ProtectControlGroups=true\n## The following control prevents rules on /usr/lib/modules/ its off by default\n#ProtectKernelModules=true\nRestrictRealtime=true\n\n",
                    "rendered": {
                      "text": "LockPersonality=true\n## The following control prevents rules on /proc so its off by default\n#ProtectControlGroups=true\n## The following control prevents rules on /usr/lib/modules/ its off by default\n#ProtectKernelModules=true\nRestrictRealtime=true\n\n",
                      "markdown": "`LockPersonality=true\n## The following control prevents rules on /proc so its off by default\n#ProtectControlGroups=true\n## The following control prevents rules on /usr/lib/modules/ its off by default\n#ProtectKernelModules=true\nRestrictRealtime=true\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/init.d/auditd.service.in"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 16,
                  "endLine": 39,
                  "endColumn": 25,
                  "snippet": {
                    "text": "### Security Settings ###\nMemoryDenyWriteExecute=true\nLockPersonality=true\n## The following control prevents rules on /proc so its off by default\n#ProtectControlGroups=true\n## The following control prevents rules on /usr/lib/modules/ its off by default\n#ProtectKernelModules=true\n",
                    "rendered": {
                      "text": "### Security Settings ###\nMemoryDenyWriteExecute=true\nLockPersonality=true\n## The following control prevents rules on /proc so its off by default\n#ProtectControlGroups=true\n## The following control prevents rules on /usr/lib/modules/ its off by default\n#ProtectKernelModules=true\n",
                      "markdown": "`### Security Settings ###\nMemoryDenyWriteExecute=true\nLockPersonality=true\n## The following control prevents rules on /proc so its off by default\n#ProtectControlGroups=true\n## The following control prevents rules on /usr/lib/modules/ its off by default\n#ProtectKernelModules=true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/init.d/auditd.service.in"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 34,
                  "endLine": 3,
                  "snippet": {
                    "text": "[Unit]\nDescription=Security Audit Logging Service\nConditionKernelCommandLine=!audit=0\nConditionKernelCommandLine=!audit=off\nDefaultDependencies=no\n\n",
                    "rendered": {
                      "text": "[Unit]\nDescription=Security Audit Logging Service\nConditionKernelCommandLine=!audit=0\nConditionKernelCommandLine=!audit=off\nDefaultDependencies=no\n\n",
                      "markdown": "`[Unit]\nDescription=Security Audit Logging Service\nConditionKernelCommandLine=!audit=0\nConditionKernelCommandLine=!audit=off\nDefaultDependencies=no\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/init.d/audit-rules.service.in"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 45,
                  "endLine": 22,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\n### Security Settings ###\n# This won't use any security settings. They tend to interfere with\n# loading rules anyways. Since its a one-shot service with root owned\n# input, let's just load and get done.\n\n[Install]\n",
                    "rendered": {
                      "text": "\n### Security Settings ###\n# This won't use any security settings. They tend to interfere with\n# loading rules anyways. Since its a one-shot service with root owned\n# input, let's just load and get done.\n\n[Install]\n",
                      "markdown": "`\n### Security Settings ###\n# This won't use any security settings. They tend to interfere with\n# loading rules anyways. Since its a one-shot service with root owned\n# input, let's just load and get done.\n\n[Install]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/init.d/auditd.condrestart"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 33,
                  "endLine": 5,
                  "endColumn": 38,
                  "snippet": {
                    "text": "# Helper script to provide legacy auditd service options not\n# directly supported by systemd.\n\nstate=$(systemctl status auditd | awk '/Active:/ { print $2 }')\nif [ \"$state\" = \"active\" ] ; then\n\t/sbin/auditctl --signal stop\n\t/bin/systemctl start auditd\n",
                    "rendered": {
                      "text": "# Helper script to provide legacy auditd service options not\n# directly supported by systemd.\n\nstate=$(systemctl status auditd | awk '/Active:/ { print $2 }')\nif [ \"$state\" = \"active\" ] ; then\n\t/sbin/auditctl --signal stop\n\t/bin/systemctl start auditd\n",
                      "markdown": "`# Helper script to provide legacy auditd service options not\n# directly supported by systemd.\n\nstate=$(systemctl status auditd | awk '/Active:/ { print $2 }')\nif [ \"$state\" = \"active\" ] ; then\n\t/sbin/auditctl --signal stop\n\t/bin/systemctl start auditd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/init.d/auditd.condrestart"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 40,
                  "endLine": 2,
                  "endColumn": 49,
                  "snippet": {
                    "text": "#!/bin/sh\n# Helper script to provide legacy auditd service options not\n# directly supported by systemd.\n\nstate=$(systemctl status auditd | awk '/Active:/ { print $2 }')\n",
                    "rendered": {
                      "text": "#!/bin/sh\n# Helper script to provide legacy auditd service options not\n# directly supported by systemd.\n\nstate=$(systemctl status auditd | awk '/Active:/ { print $2 }')\n",
                      "markdown": "`#!/bin/sh\n# Helper script to provide legacy auditd service options not\n# directly supported by systemd.\n\nstate=$(systemctl status auditd | awk '/Active:/ { print $2 }')\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/init.d/auditd.condrestart"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 8,
                  "endLine": 2,
                  "endColumn": 16,
                  "snippet": {
                    "text": "#!/bin/sh\n# Helper script to provide legacy auditd service options not\n# directly supported by systemd.\n\nstate=$(systemctl status auditd | awk '/Active:/ { print $2 }')\n",
                    "rendered": {
                      "text": "#!/bin/sh\n# Helper script to provide legacy auditd service options not\n# directly supported by systemd.\n\nstate=$(systemctl status auditd | awk '/Active:/ { print $2 }')\n",
                      "markdown": "`#!/bin/sh\n# Helper script to provide legacy auditd service options not\n# directly supported by systemd.\n\nstate=$(systemctl status auditd | awk '/Active:/ { print $2 }')\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit_set_backlog_wait_time.3"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 36,
                  "endLine": 12,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\n.SH \"DESCRIPTION\"\n\naudit_set_backlog_wait_time sets the time that the kernel will wait before attempting to send more audit events to be transferred to the audit daemon when the backlog_limit is reached. This gives the audit daemon a chance to drain the kernel queue. The default value is 60000 or 60 * HZ setting in the kernel.\n\n.SH \"RETURN VALUE\"\n\n",
                    "rendered": {
                      "text": "\n.SH \"DESCRIPTION\"\n\naudit_set_backlog_wait_time sets the time that the kernel will wait before attempting to send more audit events to be transferred to the audit daemon when the backlog_limit is reached. This gives the audit daemon a chance to drain the kernel queue. The default value is 60000 or 60 * HZ setting in the kernel.\n\n.SH \"RETURN VALUE\"\n\n",
                      "markdown": "`\n.SH \"DESCRIPTION\"\n\naudit_set_backlog_wait_time sets the time that the kernel will wait before attempting to send more audit events to be transferred to the audit daemon when the backlog_limit is reached. This gives the audit daemon a chance to drain the kernel queue. The default value is 60000 or 60 * HZ setting in the kernel.\n\n.SH \"RETURN VALUE\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit_set_backlog_wait_time.3"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 57,
                  "endLine": 4,
                  "snippet": {
                    "text": ".TH \"AUDIT_SET_BACKLOG_WAIT_TIME\" \"3\" \"Oct 2014\" \"Linux Audit API\"\n.SH NAME\naudit_set_backlog_wait_time \\- Set the audit backlog wait time\n.SH \"SYNOPSIS\"\n\n.B #include <libaudit.h>\n.sp\n",
                    "rendered": {
                      "text": ".TH \"AUDIT_SET_BACKLOG_WAIT_TIME\" \"3\" \"Oct 2014\" \"Linux Audit API\"\n.SH NAME\naudit_set_backlog_wait_time \\- Set the audit backlog wait time\n.SH \"SYNOPSIS\"\n\n.B #include <libaudit.h>\n.sp\n",
                      "markdown": "`.TH \"AUDIT_SET_BACKLOG_WAIT_TIME\" \"3\" \"Oct 2014\" \"Linux Audit API\"\n.SH NAME\naudit_set_backlog_wait_time \\- Set the audit backlog wait time\n.SH \"SYNOPSIS\"\n\n.B #include <libaudit.h>\n.sp\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit_name_to_syscall.3"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 2,
                  "endLine": 14,
                  "snippet": {
                    "text": ".SH \"DESCRIPTION\"\n.BR audit_name_to_syscall ()\nconverts the syscall name to the numeric syscall value.\n.I sc\nis the syscall name.\n.I machine\nis the enum value of the machine type defined in machine_t.\n.I machine\n",
                    "rendered": {
                      "text": ".SH \"DESCRIPTION\"\n.BR audit_name_to_syscall ()\nconverts the syscall name to the numeric syscall value.\n.I sc\nis the syscall name.\n.I machine\nis the enum value of the machine type defined in machine_t.\n.I machine\n",
                      "markdown": "`.SH \"DESCRIPTION\"\n.BR audit_name_to_syscall ()\nconverts the syscall name to the numeric syscall value.\n.I sc\nis the syscall name.\n.I machine\nis the enum value of the machine type defined in machine_t.\n.I machine\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auparse_goto_field_num.3"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 261,
                  "endLine": 10,
                  "endColumn": 270,
                  "snippet": {
                    "text": "int auparse_goto_field_num(const auparse_state_t *au, unsigned int num);\n\n.SH \"DESCRIPTION\"\nauparse_goto_field_num will move the internal library cursors to point to a specific field number in the current record. Fields within the same record are numbered starting from 0. This is generally not needed but there are some cases where one may want precise control over the exact field being looked at. \n\n.SH \"RETURN VALUE\"\n\n",
                    "rendered": {
                      "text": "int auparse_goto_field_num(const auparse_state_t *au, unsigned int num);\n\n.SH \"DESCRIPTION\"\nauparse_goto_field_num will move the internal library cursors to point to a specific field number in the current record. Fields within the same record are numbered starting from 0. This is generally not needed but there are some cases where one may want precise control over the exact field being looked at. \n\n.SH \"RETURN VALUE\"\n\n",
                      "markdown": "`int auparse_goto_field_num(const auparse_state_t *au, unsigned int num);\n\n.SH \"DESCRIPTION\"\nauparse_goto_field_num will move the internal library cursors to point to a specific field number in the current record. Fields within the same record are numbered starting from 0. This is generally not needed but there are some cases where one may want precise control over the exact field being looked at. \n\n.SH \"RETURN VALUE\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auparse_node_compare.3"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 33,
                  "endLine": 11,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n.SH \"DESCRIPTION\"\n\nauparse_node_compare compares the node name values of 2 events.\n\n.SH \"RETURN VALUE\"\n\n",
                    "rendered": {
                      "text": "\n.SH \"DESCRIPTION\"\n\nauparse_node_compare compares the node name values of 2 events.\n\n.SH \"RETURN VALUE\"\n\n",
                      "markdown": "`\n.SH \"DESCRIPTION\"\n\nauparse_node_compare compares the node name values of 2 events.\n\n.SH \"RETURN VALUE\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auparse_node_compare.3"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 32,
                  "endLine": 3,
                  "endColumn": 38,
                  "snippet": {
                    "text": ".TH \"AUPARSE_NODE_COMPARE\" \"3\" \"Sept 2007\" \"Red Hat\" \"Linux Audit API\"\n.SH NAME\nauparse_node_compare \\- compares node name values\n.SH \"SYNOPSIS\"\n.B #include <auparse.h>\n.sp\n",
                    "rendered": {
                      "text": ".TH \"AUPARSE_NODE_COMPARE\" \"3\" \"Sept 2007\" \"Red Hat\" \"Linux Audit API\"\n.SH NAME\nauparse_node_compare \\- compares node name values\n.SH \"SYNOPSIS\"\n.B #include <auparse.h>\n.sp\n",
                      "markdown": "`.TH \"AUPARSE_NODE_COMPARE\" \"3\" \"Sept 2007\" \"Red Hat\" \"Linux Audit API\"\n.SH NAME\nauparse_node_compare \\- compares node name values\n.SH \"SYNOPSIS\"\n.B #include <auparse.h>\n.sp\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit_log_user_message.3"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 15,
                  "endLine": 20,
                  "endColumn": 23,
                  "snippet": {
                    "text": "audit_fd - The fd returned by audit_open\ntype - type of message, ex: AUDIT_USYS_CONFIG, AUDIT_USER_LOGIN\nmessage - the message text being sent\nhostname - the hostname if known, NULL if unknown\naddr - The network address of the user, NULL if unknown\ntty - The tty of the user, if NULL will attempt to figure out\nresult - 1 is \"success\" and 0 is \"failed\"\n",
                    "rendered": {
                      "text": "audit_fd - The fd returned by audit_open\ntype - type of message, ex: AUDIT_USYS_CONFIG, AUDIT_USER_LOGIN\nmessage - the message text being sent\nhostname - the hostname if known, NULL if unknown\naddr - The network address of the user, NULL if unknown\ntty - The tty of the user, if NULL will attempt to figure out\nresult - 1 is \"success\" and 0 is \"failed\"\n",
                      "markdown": "`audit_fd - The fd returned by audit_open\ntype - type of message, ex: AUDIT_USYS_CONFIG, AUDIT_USER_LOGIN\nmessage - the message text being sent\nhostname - the hostname if known, NULL if unknown\naddr - The network address of the user, NULL if unknown\ntty - The tty of the user, if NULL will attempt to figure out\nresult - 1 is \"success\" and 0 is \"failed\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit_log_user_message.3"
                },
                "region": {
                  "startLine": 20,
                  "endLine": 20,
                  "endColumn": 8,
                  "snippet": {
                    "text": "audit_fd - The fd returned by audit_open\ntype - type of message, ex: AUDIT_USYS_CONFIG, AUDIT_USER_LOGIN\nmessage - the message text being sent\nhostname - the hostname if known, NULL if unknown\naddr - The network address of the user, NULL if unknown\ntty - The tty of the user, if NULL will attempt to figure out\nresult - 1 is \"success\" and 0 is \"failed\"\n",
                    "rendered": {
                      "text": "audit_fd - The fd returned by audit_open\ntype - type of message, ex: AUDIT_USYS_CONFIG, AUDIT_USER_LOGIN\nmessage - the message text being sent\nhostname - the hostname if known, NULL if unknown\naddr - The network address of the user, NULL if unknown\ntty - The tty of the user, if NULL will attempt to figure out\nresult - 1 is \"success\" and 0 is \"failed\"\n",
                      "markdown": "`audit_fd - The fd returned by audit_open\ntype - type of message, ex: AUDIT_USYS_CONFIG, AUDIT_USER_LOGIN\nmessage - the message text being sent\nhostname - the hostname if known, NULL if unknown\naddr - The network address of the user, NULL if unknown\ntty - The tty of the user, if NULL will attempt to figure out\nresult - 1 is \"success\" and 0 is \"failed\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit_log_user_message.3"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 12,
                  "endLine": 8,
                  "endColumn": 20,
                  "snippet": {
                    "text": ".B #include <libaudit.h>\n.sp\nint audit_log_user_message(int audit_fd, int type, const char *message,\nconst char *hostname, const char *addr, const char *tty,\nint result)\n\n.SH DESCRIPTION\n",
                    "rendered": {
                      "text": ".B #include <libaudit.h>\n.sp\nint audit_log_user_message(int audit_fd, int type, const char *message,\nconst char *hostname, const char *addr, const char *tty,\nint result)\n\n.SH DESCRIPTION\n",
                      "markdown": "`.B #include <libaudit.h>\n.sp\nint audit_log_user_message(int audit_fd, int type, const char *message,\nconst char *hostname, const char *addr, const char *tty,\nint result)\n\n.SH DESCRIPTION\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit_log_acct_message.3"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 11,
                  "endLine": 29,
                  "endColumn": 19,
                  "snippet": {
                    "text": ".TP\nid  -  uid or gid that the operation is being performed on. If the user is unknown, pass a \\-1 and fill in the name parameter. This is used only when user is NULL.\n.TP\nhost - The hostname if known. If not available pass a NULL.\n.TP\naddr - The network address of the user. If not available pass a NULL.\n.TP\n",
                    "rendered": {
                      "text": ".TP\nid  -  uid or gid that the operation is being performed on. If the user is unknown, pass a \\-1 and fill in the name parameter. This is used only when user is NULL.\n.TP\nhost - The hostname if known. If not available pass a NULL.\n.TP\naddr - The network address of the user. If not available pass a NULL.\n.TP\n",
                      "markdown": "`.TP\nid  -  uid or gid that the operation is being performed on. If the user is unknown, pass a \\-1 and fill in the name parameter. This is used only when user is NULL.\n.TP\nhost - The hostname if known. If not available pass a NULL.\n.TP\naddr - The network address of the user. If not available pass a NULL.\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit_log_acct_message.3"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 103,
                  "endLine": 23,
                  "endColumn": 109,
                  "snippet": {
                    "text": ".TP\npgname - program's name, if NULL will attempt to figure out\n.TP\nop  -  operation. Ex: \"adding-user\", \"changing-finger-info\", \"deleting-group\". This value should have a dash or underscore between the words so that report parsers group them together.\n.TP\nname - user's account or group name. If not available use NULL.\n.TP\n",
                    "rendered": {
                      "text": ".TP\npgname - program's name, if NULL will attempt to figure out\n.TP\nop  -  operation. Ex: \"adding-user\", \"changing-finger-info\", \"deleting-group\". This value should have a dash or underscore between the words so that report parsers group them together.\n.TP\nname - user's account or group name. If not available use NULL.\n.TP\n",
                      "markdown": "`.TP\npgname - program's name, if NULL will attempt to figure out\n.TP\nop  -  operation. Ex: \"adding-user\", \"changing-finger-info\", \"deleting-group\". This value should have a dash or underscore between the words so that report parsers group them together.\n.TP\nname - user's account or group name. If not available use NULL.\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit_add_watch.3"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 29,
                  "endLine": 11,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\n.SH \"DESCRIPTION\"\n\naudit_add_watch will create a watch rule in the pointer to a pointer rulep. All that you need to pass it is the full path to a file and it will initialize the audit_rule_data structure for a watch.\n\n.SH \"RETURN VALUE\"\n\n",
                    "rendered": {
                      "text": "\n.SH \"DESCRIPTION\"\n\naudit_add_watch will create a watch rule in the pointer to a pointer rulep. All that you need to pass it is the full path to a file and it will initialize the audit_rule_data structure for a watch.\n\n.SH \"RETURN VALUE\"\n\n",
                      "markdown": "`\n.SH \"DESCRIPTION\"\n\naudit_add_watch will create a watch rule in the pointer to a pointer rulep. All that you need to pass it is the full path to a file and it will initialize the audit_rule_data structure for a watch.\n\n.SH \"RETURN VALUE\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit_add_watch.3"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 45,
                  "endLine": 4,
                  "snippet": {
                    "text": ".TH \"AUDIT_ADD_WATCH\" \"3\" \"Feb 2007\" \"Red Hat\" \"Linux Audit API\"\n.SH NAME\naudit_add_watch \\- create a rule layout for a watch\n.SH \"SYNOPSIS\"\n.B #include <libaudit.h>\n.sp\nint audit_add_watch(struct audit_rule_data **rulep, const char *path);\n",
                    "rendered": {
                      "text": ".TH \"AUDIT_ADD_WATCH\" \"3\" \"Feb 2007\" \"Red Hat\" \"Linux Audit API\"\n.SH NAME\naudit_add_watch \\- create a rule layout for a watch\n.SH \"SYNOPSIS\"\n.B #include <libaudit.h>\n.sp\nint audit_add_watch(struct audit_rule_data **rulep, const char *path);\n",
                      "markdown": "`.TH \"AUDIT_ADD_WATCH\" \"3\" \"Feb 2007\" \"Red Hat\" \"Linux Audit API\"\n.SH NAME\naudit_add_watch \\- create a rule layout for a watch\n.SH \"SYNOPSIS\"\n.B #include <libaudit.h>\n.sp\nint audit_add_watch(struct audit_rule_data **rulep, const char *path);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd-plugins.5"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 215,
                  "endLine": 67,
                  "endColumn": 219,
                  "snippet": {
                    "text": "oit. If you need to retain capabilities, using \\fBlibcap-ng\\fP is the simplest way.\n\nYour environment is not going to be clean. You are inheriting many attributes from auditd itself. You will need to adjust your \\fBsignal mask\\fP, \\fBsigaction\\fP, \\fBumask\\fP, and \\fBenvironmental variables\\fP. Look at the auditd man page to see which signals auditd used. Plugins are expected to handle \\fBSIGTERM\\fP and \\fBSIGHUP\\fP. You will also inherit the resource limits of auditd. Note that some of these resource limits, such as maximum number of open descriptors, are controlled by systemd. You also inherit a",
                    "rendered": {
                      "text": "oit. If you need to retain capabilities, using \\fBlibcap-ng\\fP is the simplest way.\n\nYour environment is not going to be clean. You are inheriting many attributes from auditd itself. You will need to adjust your \\fBsignal mask\\fP, \\fBsigaction\\fP, \\fBumask\\fP, and \\fBenvironmental variables\\fP. Look at the auditd man page to see which signals auditd used. Plugins are expected to handle \\fBSIGTERM\\fP and \\fBSIGHUP\\fP. You will also inherit the resource limits of auditd. Note that some of these resource limits, such as maximum number of open descriptors, are controlled by systemd. You also inherit a",
                      "markdown": "`oit. If you need to retain capabilities, using \\fBlibcap-ng\\fP is the simplest way.\n\nYour environment is not going to be clean. You are inheriting many attributes from auditd itself. You will need to adjust your \\fBsignal mask\\fP, \\fBsigaction\\fP, \\fBumask\\fP, and \\fBenvironmental variables\\fP. Look at the auditd man page to see which signals auditd used. Plugins are expected to handle \\fBSIGTERM\\fP and \\fBSIGHUP\\fP. You will also inherit the resource limits of auditd. Note that some of these resource limits, such as maximum number of open descriptors, are controlled by systemd. You also inherit a`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd-plugins.5"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 127,
                  "endLine": 58,
                  "endColumn": 131,
                  "snippet": {
                    "text": "\nauditctl --signal cont ; sleep 1 ; cat /var/run/auditd.state\n\nIf auditd's internal queue fills, it cannot dequeue any events from the kernel backlog. If the kernel's backlog fills, it looks at the value of backlog_wait_time to delay all processes that generate an event to see if there is eventually room to add the event. This will likely be noticed as slowing down various processes on the machine. The kernel's audit subsystem can be checked by running:\n\nauditctl -s\n\n",
                    "rendered": {
                      "text": "\nauditctl --signal cont ; sleep 1 ; cat /var/run/auditd.state\n\nIf auditd's internal queue fills, it cannot dequeue any events from the kernel backlog. If the kernel's backlog fills, it looks at the value of backlog_wait_time to delay all processes that generate an event to see if there is eventually room to add the event. This will likely be noticed as slowing down various processes on the machine. The kernel's audit subsystem can be checked by running:\n\nauditctl -s\n\n",
                      "markdown": "`\nauditctl --signal cont ; sleep 1 ; cat /var/run/auditd.state\n\nIf auditd's internal queue fills, it cannot dequeue any events from the kernel backlog. If the kernel's backlog fills, it looks at the value of backlog_wait_time to delay all processes that generate an event to see if there is eventually room to add the event. This will likely be noticed as slowing down various processes on the machine. The kernel's audit subsystem can be checked by running:\n\nauditctl -s\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd-plugins.5"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 330,
                  "endLine": 54,
                  "endColumn": 334,
                  "snippet": {
                    "text": ".IR string.\n\n.SH NOTE\nauditd has an internal queue to hold events for plugins. (See the \\fIq_depth\\fP setting in \\fIauditd.conf\\fP.) Plugins have to watch for and dequeue events as fast as possible and queue them internally if they can't be immediately processed. If the plugin is not able to dequeue records, the auditd internal queue will get filled. At any time, as root, you can run the following to check auditd's metrics:\n\nauditctl --signal cont ; sleep 1 ; cat /var/run/auditd.state\n\n",
                    "rendered": {
                      "text": ".IR string.\n\n.SH NOTE\nauditd has an internal queue to hold events for plugins. (See the \\fIq_depth\\fP setting in \\fIauditd.conf\\fP.) Plugins have to watch for and dequeue events as fast as possible and queue them internally if they can't be immediately processed. If the plugin is not able to dequeue records, the auditd internal queue will get filled. At any time, as root, you can run the following to check auditd's metrics:\n\nauditctl --signal cont ; sleep 1 ; cat /var/run/auditd.state\n\n",
                      "markdown": "`.IR string.\n\n.SH NOTE\nauditd has an internal queue to hold events for plugins. (See the \\fIq_depth\\fP setting in \\fIauditd.conf\\fP.) Plugins have to watch for and dequeue events as fast as possible and queue them internally if they can't be immediately processed. If the plugin is not able to dequeue records, the auditd internal queue will get filled. At any time, as root, you can run the following to check auditd's metrics:\n\nauditctl --signal cont ; sleep 1 ; cat /var/run/auditd.state\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd-plugins.5"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 177,
                  "endLine": 40,
                  "endColumn": 181,
                  "snippet": {
                    "text": ", which means the plugin is external and should always be run. The default is always since there are no more builtin plugins.\n.TP\n.I args\nThis allows you to pass arguments to the child program. Generally plugins do not take arguments and have their own config file that instructs them how they should be configured. At the moment, there is a limit of 2 args.\n.TP\n.I format\nThe valid options for this are\n",
                    "rendered": {
                      "text": ", which means the plugin is external and should always be run. The default is always since there are no more builtin plugins.\n.TP\n.I args\nThis allows you to pass arguments to the child program. Generally plugins do not take arguments and have their own config file that instructs them how they should be configured. At the moment, there is a limit of 2 args.\n.TP\n.I format\nThe valid options for this are\n",
                      "markdown": "`, which means the plugin is external and should always be run. The default is always since there are no more builtin plugins.\n.TP\n.I args\nThis allows you to pass arguments to the child program. Generally plugins do not take arguments and have their own config file that instructs them how they should be configured. At the moment, there is a limit of 2 args.\n.TP\n.I format\nThe valid options for this are\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd-plugins.5"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 89,
                  "endLine": 15,
                  "endColumn": 93,
                  "snippet": {
                    "text": ".B max_restarts\ntimes as found in auditd.conf.\n\nConfiguration files must be regular files that do not begin with a '.' character, contain at most one '.' character, and have a '.conf' suffix. Files that do not meet these criteria will be skipped. Config file options are given one per line with an equal sign between the keyword and its value. The available options are as follows:\n\n.TP\n.I active\n",
                    "rendered": {
                      "text": ".B max_restarts\ntimes as found in auditd.conf.\n\nConfiguration files must be regular files that do not begin with a '.' character, contain at most one '.' character, and have a '.conf' suffix. Files that do not meet these criteria will be skipped. Config file options are given one per line with an equal sign between the keyword and its value. The available options are as follows:\n\n.TP\n.I active\n",
                      "markdown": "`.B max_restarts\ntimes as found in auditd.conf.\n\nConfiguration files must be regular files that do not begin with a '.' character, contain at most one '.' character, and have a '.conf' suffix. Files that do not meet these criteria will be skipped. Config file options are given one per line with an equal sign between the keyword and its value. The available options are as follows:\n\n.TP\n.I active\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd-plugins.5"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 526,
                  "endLine": 67,
                  "endColumn": 532,
                  "snippet": {
                    "text": "itd man page to see which signals auditd used. Plugins are expected to handle \\fBSIGTERM\\fP and \\fBSIGHUP\\fP. You will also inherit the resource limits of auditd. Note that some of these resource limits, such as maximum number of open descriptors, are controlled by systemd. You also inherit auditd's nice value. You might want to adjust that to be sure to keep up with incoming audit events.\n\nAuditd will send events to the plugin on it's \\fBstdin\\fP. The plugin has to keep this descriptor empty so that events don't back up. If you do significant processing of each event, you should add an internal que",
                    "rendered": {
                      "text": "itd man page to see which signals auditd used. Plugins are expected to handle \\fBSIGTERM\\fP and \\fBSIGHUP\\fP. You will also inherit the resource limits of auditd. Note that some of these resource limits, such as maximum number of open descriptors, are controlled by systemd. You also inherit auditd's nice value. You might want to adjust that to be sure to keep up with incoming audit events.\n\nAuditd will send events to the plugin on it's \\fBstdin\\fP. The plugin has to keep this descriptor empty so that events don't back up. If you do significant processing of each event, you should add an internal que",
                      "markdown": "`itd man page to see which signals auditd used. Plugins are expected to handle \\fBSIGTERM\\fP and \\fBSIGHUP\\fP. You will also inherit the resource limits of auditd. Note that some of these resource limits, such as maximum number of open descriptors, are controlled by systemd. You also inherit auditd's nice value. You might want to adjust that to be sure to keep up with incoming audit events.\n\nAuditd will send events to the plugin on it's \\fBstdin\\fP. The plugin has to keep this descriptor empty so that events don't back up. If you do significant processing of each event, you should add an internal que`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd-plugins.5"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 34,
                  "endLine": 56,
                  "endColumn": 39,
                  "snippet": {
                    "text": "dequeue events as fast as possible and queue them internally if they can't be immediately processed. If the plugin is not able to dequeue records, the auditd internal queue will get filled. At any time, as root, you can run the following to check auditd's metrics:\n\nauditctl --signal cont ; sleep 1 ; cat /var/run/auditd.state\n\nIf auditd's internal queue fills, it cannot dequeue any events from the kernel backlog. If the kernel's backlog fills, it looks at the value of backlog_wait_time to delay all processes that generate an event to see if there is eventually room to add the event. This will likely",
                    "rendered": {
                      "text": "dequeue events as fast as possible and queue them internally if they can't be immediately processed. If the plugin is not able to dequeue records, the auditd internal queue will get filled. At any time, as root, you can run the following to check auditd's metrics:\n\nauditctl --signal cont ; sleep 1 ; cat /var/run/auditd.state\n\nIf auditd's internal queue fills, it cannot dequeue any events from the kernel backlog. If the kernel's backlog fills, it looks at the value of backlog_wait_time to delay all processes that generate an event to see if there is eventually room to add the event. This will likely",
                      "markdown": "`dequeue events as fast as possible and queue them internally if they can't be immediately processed. If the plugin is not able to dequeue records, the auditd internal queue will get filled. At any time, as root, you can run the following to check auditd's metrics:\n\nauditctl --signal cont ; sleep 1 ; cat /var/run/auditd.state\n\nIf auditd's internal queue fills, it cannot dequeue any events from the kernel backlog. If the kernel's backlog fills, it looks at the value of backlog_wait_time to delay all processes that generate an event to see if there is eventually room to add the event. This will likely`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd-plugins.5"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 126,
                  "endLine": 54,
                  "endColumn": 133,
                  "snippet": {
                    "text": ".IR string.\n\n.SH NOTE\nauditd has an internal queue to hold events for plugins. (See the \\fIq_depth\\fP setting in \\fIauditd.conf\\fP.) Plugins have to watch for and dequeue events as fast as possible and queue them internally if they can't be immediately processed. If the plugin is not able to dequeue records, the auditd internal queue will get filled. At any time, as root, you can run the following to check auditd's metrics:\n\nauditctl --signal cont ; sleep 1 ; cat /var/run/auditd.state\n\n",
                    "rendered": {
                      "text": ".IR string.\n\n.SH NOTE\nauditd has an internal queue to hold events for plugins. (See the \\fIq_depth\\fP setting in \\fIauditd.conf\\fP.) Plugins have to watch for and dequeue events as fast as possible and queue them internally if they can't be immediately processed. If the plugin is not able to dequeue records, the auditd internal queue will get filled. At any time, as root, you can run the following to check auditd's metrics:\n\nauditctl --signal cont ; sleep 1 ; cat /var/run/auditd.state\n\n",
                      "markdown": "`.IR string.\n\n.SH NOTE\nauditd has an internal queue to hold events for plugins. (See the \\fIq_depth\\fP setting in \\fIauditd.conf\\fP.) Plugins have to watch for and dequeue events as fast as possible and queue them internally if they can't be immediately processed. If the plugin is not able to dequeue records, the auditd internal queue will get filled. At any time, as root, you can run the following to check auditd's metrics:\n\nauditctl --signal cont ; sleep 1 ; cat /var/run/auditd.state\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/ausearch.8"
                },
                "region": {
                  "startLine": 210,
                  "startColumn": 92,
                  "endLine": 210,
                  "endColumn": 100,
                  "snippet": {
                    "text": "Search for an event with the given \\fIguest name\\fP.\n.TP\n.BR \\-w ,\\  \\-\\-word\nString based matches must match the whole word. This category of matches include: filename, hostname, terminal, keys, and SE Linux context.\n.TP\n.BR \\-x ,\\  \\-\\-executable \\ \\fIexecutable\\fP\nSearch for an event matching the given \\fIexecutable\\fP name.\n",
                    "rendered": {
                      "text": "Search for an event with the given \\fIguest name\\fP.\n.TP\n.BR \\-w ,\\  \\-\\-word\nString based matches must match the whole word. This category of matches include: filename, hostname, terminal, keys, and SE Linux context.\n.TP\n.BR \\-x ,\\  \\-\\-executable \\ \\fIexecutable\\fP\nSearch for an event matching the given \\fIexecutable\\fP name.\n",
                      "markdown": "`Search for an event with the given \\fIguest name\\fP.\n.TP\n.BR \\-w ,\\  \\-\\-word\nString based matches must match the whole word. This category of matches include: filename, hostname, terminal, keys, and SE Linux context.\n.TP\n.BR \\-x ,\\  \\-\\-executable \\ \\fIexecutable\\fP\nSearch for an event matching the given \\fIexecutable\\fP name.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/ausearch.8"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 81,
                  "endLine": 92,
                  "endColumn": 89,
                  "snippet": {
                    "text": "Ieffective group ID\\fP or group name.\n.TP\n.BR \\-gi ,\\  \\-\\-gid \\ \\fIgroup-id\\fP\nSearch for an event with the given \\fIgroup ID\\fP or group name.\n.TP\n.BR \\-h ,\\  \\-\\-help\nHelp\n.TP\n.BR \\-hn ,\\  \\-\\-host \\ \\fIhost-name\\fP\nSearch for an event with the given \\fIhost name\\fP. The hostname can be either a hostname, fully qualified domain name, or numeric network address. No attempt is made to resolve numeric addresses to domain names or aliases. This search typically correlates to the addr or host field of audit events. Also see the \\-\\-node command which searches the node field.\n.TP\n.BR \\-i ,\\  \\-\\-interpre",
                    "rendered": {
                      "text": "Ieffective group ID\\fP or group name.\n.TP\n.BR \\-gi ,\\  \\-\\-gid \\ \\fIgroup-id\\fP\nSearch for an event with the given \\fIgroup ID\\fP or group name.\n.TP\n.BR \\-h ,\\  \\-\\-help\nHelp\n.TP\n.BR \\-hn ,\\  \\-\\-host \\ \\fIhost-name\\fP\nSearch for an event with the given \\fIhost name\\fP. The hostname can be either a hostname, fully qualified domain name, or numeric network address. No attempt is made to resolve numeric addresses to domain names or aliases. This search typically correlates to the addr or host field of audit events. Also see the \\-\\-node command which searches the node field.\n.TP\n.BR \\-i ,\\  \\-\\-interpre",
                      "markdown": "`Ieffective group ID\\fP or group name.\n.TP\n.BR \\-gi ,\\  \\-\\-gid \\ \\fIgroup-id\\fP\nSearch for an event with the given \\fIgroup ID\\fP or group name.\n.TP\n.BR \\-h ,\\  \\-\\-help\nHelp\n.TP\n.BR \\-hn ,\\  \\-\\-host \\ \\fIhost-name\\fP\nSearch for an event with the given \\fIhost name\\fP. The hostname can be either a hostname, fully qualified domain name, or numeric network address. No attempt is made to resolve numeric addresses to domain names or aliases. This search typically correlates to the addr or host field of audit events. Also see the \\-\\-node command which searches the node field.\n.TP\n.BR \\-i ,\\  \\-\\-interpre`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/ausearch.8"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 56,
                  "endLine": 92,
                  "endColumn": 64,
                  "snippet": {
                    "text": "n event with the given \\fIeffective group ID\\fP or group name.\n.TP\n.BR \\-gi ,\\  \\-\\-gid \\ \\fIgroup-id\\fP\nSearch for an event with the given \\fIgroup ID\\fP or group name.\n.TP\n.BR \\-h ,\\  \\-\\-help\nHelp\n.TP\n.BR \\-hn ,\\  \\-\\-host \\ \\fIhost-name\\fP\nSearch for an event with the given \\fIhost name\\fP. The hostname can be either a hostname, fully qualified domain name, or numeric network address. No attempt is made to resolve numeric addresses to domain names or aliases. This search typically correlates to the addr or host field of audit events. Also see the \\-\\-node command which searches the node field.\n.TP",
                    "rendered": {
                      "text": "n event with the given \\fIeffective group ID\\fP or group name.\n.TP\n.BR \\-gi ,\\  \\-\\-gid \\ \\fIgroup-id\\fP\nSearch for an event with the given \\fIgroup ID\\fP or group name.\n.TP\n.BR \\-h ,\\  \\-\\-help\nHelp\n.TP\n.BR \\-hn ,\\  \\-\\-host \\ \\fIhost-name\\fP\nSearch for an event with the given \\fIhost name\\fP. The hostname can be either a hostname, fully qualified domain name, or numeric network address. No attempt is made to resolve numeric addresses to domain names or aliases. This search typically correlates to the addr or host field of audit events. Also see the \\-\\-node command which searches the node field.\n.TP",
                      "markdown": "`n event with the given \\fIeffective group ID\\fP or group name.\n.TP\n.BR \\-gi ,\\  \\-\\-gid \\ \\fIgroup-id\\fP\nSearch for an event with the given \\fIgroup ID\\fP or group name.\n.TP\n.BR \\-h ,\\  \\-\\-help\nHelp\n.TP\n.BR \\-hn ,\\  \\-\\-host \\ \\fIhost-name\\fP\nSearch for an event with the given \\fIhost name\\fP. The hostname can be either a hostname, fully qualified domain name, or numeric network address. No attempt is made to resolve numeric addresses to domain names or aliases. This search typically correlates to the addr or host field of audit events. Also see the \\-\\-node command which searches the node field.\n.TP`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/ausearch.8"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 115,
                  "endLine": 14,
                  "endColumn": 123,
                  "snippet": {
                    "text": "\nDifferent parts of the kernel may add supplemental records. For example, an audit event on the syscall \"open\" will also cause the kernel to emit a PATH record with the file name. The ausearch utility will present all records that make up one event together. This could mean that even though you search for a specific kind of record, the resulting events may contain SYSCALL records.\n\nAlso be aware that not all record types have the requested information. For example, a PATH record does not have a hostname or a loginuid.\n\n.SH OPTIONS\n.TP\n",
                    "rendered": {
                      "text": "\nDifferent parts of the kernel may add supplemental records. For example, an audit event on the syscall \"open\" will also cause the kernel to emit a PATH record with the file name. The ausearch utility will present all records that make up one event together. This could mean that even though you search for a specific kind of record, the resulting events may contain SYSCALL records.\n\nAlso be aware that not all record types have the requested information. For example, a PATH record does not have a hostname or a loginuid.\n\n.SH OPTIONS\n.TP\n",
                      "markdown": "`\nDifferent parts of the kernel may add supplemental records. For example, an audit event on the syscall \"open\" will also cause the kernel to emit a PATH record with the file name. The ausearch utility will present all records that make up one event together. This could mean that even though you search for a specific kind of record, the resulting events may contain SYSCALL records.\n\nAlso be aware that not all record types have the requested information. For example, a PATH record does not have a hostname or a loginuid.\n\n.SH OPTIONS\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/ausearch.8"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 306,
                  "endLine": 168,
                  "endColumn": 310,
                  "snippet": {
                    "text": "y also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP, \\fByesterday\\fP, \\fBthis\\-week\\fP, \\fBweek\\-ago\\fP, \\fBthis\\-month\\fP, \\fBthis\\-year\\fP, or \\fBcheckpoint\\fP. \\fBBoot\\fP means the time of day to the second when the system last booted. \\fBToday\\fP means starting at 1 second after midnight. \\fBRecent\\fP is 10 minutes ago. \\fBYesterday\\fP is 1 second after midnight the previous day. \\fBThis\\-week\\fP means starting 1 second after midnight on day 0 of the week determined by your locale (see \\fBlocaltime\\fP). \\fBWeek\\-ago\\fP means starting 1 second after midnight e",
                    "rendered": {
                      "text": "y also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP, \\fByesterday\\fP, \\fBthis\\-week\\fP, \\fBweek\\-ago\\fP, \\fBthis\\-month\\fP, \\fBthis\\-year\\fP, or \\fBcheckpoint\\fP. \\fBBoot\\fP means the time of day to the second when the system last booted. \\fBToday\\fP means starting at 1 second after midnight. \\fBRecent\\fP is 10 minutes ago. \\fBYesterday\\fP is 1 second after midnight the previous day. \\fBThis\\-week\\fP means starting 1 second after midnight on day 0 of the week determined by your locale (see \\fBlocaltime\\fP). \\fBWeek\\-ago\\fP means starting 1 second after midnight e",
                      "markdown": "`y also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP, \\fByesterday\\fP, \\fBthis\\-week\\fP, \\fBweek\\-ago\\fP, \\fBthis\\-month\\fP, \\fBthis\\-year\\fP, or \\fBcheckpoint\\fP. \\fBBoot\\fP means the time of day to the second when the system last booted. \\fBToday\\fP means starting at 1 second after midnight. \\fBRecent\\fP is 10 minutes ago. \\fBYesterday\\fP is 1 second after midnight the previous day. \\fBThis\\-week\\fP means starting 1 second after midnight on day 0 of the week determined by your locale (see \\fBlocaltime\\fP). \\fBWeek\\-ago\\fP means starting 1 second after midnight e`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/ausearch.8"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 779,
                  "endLine": 77,
                  "endColumn": 783,
                  "snippet": {
                    "text": "d line option. The \\fIcsv\\fP option outputs the results of the search as a normalized event in comma separated value (CSV) format suitable for import into analytical programs. The \\fItext\\fP option turns the event into an English sentence that is easier to understand than other options, but it comes at the expense of loss of detail. In most cases this is perfectly fine since the original event still retains all the original information.\n.TP\n.BR \\-ga ,\\  \\-\\-gid\\-all \\ \\fIall-group-id\\fP\nSearch for an event with either effective group ID or group ID matching the given \\fIgroup ID\\fP.\n.TP\n.BR \\-ge ,",
                    "rendered": {
                      "text": "d line option. The \\fIcsv\\fP option outputs the results of the search as a normalized event in comma separated value (CSV) format suitable for import into analytical programs. The \\fItext\\fP option turns the event into an English sentence that is easier to understand than other options, but it comes at the expense of loss of detail. In most cases this is perfectly fine since the original event still retains all the original information.\n.TP\n.BR \\-ga ,\\  \\-\\-gid\\-all \\ \\fIall-group-id\\fP\nSearch for an event with either effective group ID or group ID matching the given \\fIgroup ID\\fP.\n.TP\n.BR \\-ge ,",
                      "markdown": "`d line option. The \\fIcsv\\fP option outputs the results of the search as a normalized event in comma separated value (CSV) format suitable for import into analytical programs. The \\fItext\\fP option turns the event into an English sentence that is easier to understand than other options, but it comes at the expense of loss of detail. In most cases this is perfectly fine since the original event still retains all the original information.\n.TP\n.BR \\-ga ,\\  \\-\\-gid\\-all \\ \\fIall-group-id\\fP\nSearch for an event with either effective group ID or group ID matching the given \\fIgroup ID\\fP.\n.TP\n.BR \\-ge ,`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/ausearch.8"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 54,
                  "endLine": 46,
                  "endColumn": 58,
                  "snippet": {
                    "text": "A checkpoint is achieved by recording the last completed event output along with the device\nnumber and inode of the file the last completed event appeared in \\fIcheckpoint-file\\fP. On a subsequent invocation,\nausearch will load this checkpoint data and as it processes the log files, it will discard all\ncomplete events until it matches the checkpointed one. At this point, it will start\noutputting complete events.\n\nShould the file or the last checkpointed event not be found, one of a number of errors will result and ausearch will terminate. See \\fBEXIT STATUS\\fP for detail.\n",
                    "rendered": {
                      "text": "A checkpoint is achieved by recording the last completed event output along with the device\nnumber and inode of the file the last completed event appeared in \\fIcheckpoint-file\\fP. On a subsequent invocation,\nausearch will load this checkpoint data and as it processes the log files, it will discard all\ncomplete events until it matches the checkpointed one. At this point, it will start\noutputting complete events.\n\nShould the file or the last checkpointed event not be found, one of a number of errors will result and ausearch will terminate. See \\fBEXIT STATUS\\fP for detail.\n",
                      "markdown": "`A checkpoint is achieved by recording the last completed event output along with the device\nnumber and inode of the file the last completed event appeared in \\fIcheckpoint-file\\fP. On a subsequent invocation,\nausearch will load this checkpoint data and as it processes the log files, it will discard all\ncomplete events until it matches the checkpointed one. At this point, it will start\noutputting complete events.\n\nShould the file or the last checkpointed event not be found, one of a number of errors will result and ausearch will terminate. See \\fBEXIT STATUS\\fP for detail.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/ausearch.8"
                },
                "region": {
                  "startLine": 232,
                  "startColumn": 302,
                  "endLine": 232,
                  "endColumn": 308,
                  "snippet": {
                    "text": "12\ncheckpoint event not found in matching log file\n.SH NOTE\nThe boot time option is a convenience function and has limitations. The time it calculates is based on time now minus /proc/uptime. If after boot the system clock has been adjusted, perhaps by ntp, then the calculation may be wrong. In that case you'll need to fully specify the time. You can check the time it would use by running:\n\ndate -d \"`cut \\-f1 \\-d. /proc/uptime` seconds ago\"\n\n",
                    "rendered": {
                      "text": "12\ncheckpoint event not found in matching log file\n.SH NOTE\nThe boot time option is a convenience function and has limitations. The time it calculates is based on time now minus /proc/uptime. If after boot the system clock has been adjusted, perhaps by ntp, then the calculation may be wrong. In that case you'll need to fully specify the time. You can check the time it would use by running:\n\ndate -d \"`cut \\-f1 \\-d. /proc/uptime` seconds ago\"\n\n",
                      "markdown": "`12\ncheckpoint event not found in matching log file\n.SH NOTE\nThe boot time option is a convenience function and has limitations. The time it calculates is based on time now minus /proc/uptime. If after boot the system clock has been adjusted, perhaps by ntp, then the calculation may be wrong. In that case you'll need to fully specify the time. You can check the time it would use by running:\n\ndate -d \"`cut \\-f1 \\-d. /proc/uptime` seconds ago\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/ausearch.8"
                },
                "region": {
                  "startLine": 232,
                  "startColumn": 102,
                  "endLine": 232,
                  "endColumn": 108,
                  "snippet": {
                    "text": "12\ncheckpoint event not found in matching log file\n.SH NOTE\nThe boot time option is a convenience function and has limitations. The time it calculates is based on time now minus /proc/uptime. If after boot the system clock has been adjusted, perhaps by ntp, then the calculation may be wrong. In that case you'll need to fully specify the time. You can check the time it would use by running:\n\ndate -d \"`cut \\-f1 \\-d. /proc/uptime` seconds ago\"\n\n",
                    "rendered": {
                      "text": "12\ncheckpoint event not found in matching log file\n.SH NOTE\nThe boot time option is a convenience function and has limitations. The time it calculates is based on time now minus /proc/uptime. If after boot the system clock has been adjusted, perhaps by ntp, then the calculation may be wrong. In that case you'll need to fully specify the time. You can check the time it would use by running:\n\ndate -d \"`cut \\-f1 \\-d. /proc/uptime` seconds ago\"\n\n",
                      "markdown": "`12\ncheckpoint event not found in matching log file\n.SH NOTE\nThe boot time option is a convenience function and has limitations. The time it calculates is based on time now minus /proc/uptime. If after boot the system clock has been adjusted, perhaps by ntp, then the calculation may be wrong. In that case you'll need to fully specify the time. You can check the time it would use by running:\n\ndate -d \"`cut \\-f1 \\-d. /proc/uptime` seconds ago\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/ausearch.8"
                },
                "region": {
                  "startLine": 232,
                  "startColumn": 71,
                  "endLine": 232,
                  "endColumn": 77,
                  "snippet": {
                    "text": "12\ncheckpoint event not found in matching log file\n.SH NOTE\nThe boot time option is a convenience function and has limitations. The time it calculates is based on time now minus /proc/uptime. If after boot the system clock has been adjusted, perhaps by ntp, then the calculation may be wrong. In that case you'll need to fully specify the time. You can check the time it would use by running:\n\ndate -d \"`cut \\-f1 \\-d. /proc/uptime` seconds ago\"\n\n",
                    "rendered": {
                      "text": "12\ncheckpoint event not found in matching log file\n.SH NOTE\nThe boot time option is a convenience function and has limitations. The time it calculates is based on time now minus /proc/uptime. If after boot the system clock has been adjusted, perhaps by ntp, then the calculation may be wrong. In that case you'll need to fully specify the time. You can check the time it would use by running:\n\ndate -d \"`cut \\-f1 \\-d. /proc/uptime` seconds ago\"\n\n",
                      "markdown": "`12\ncheckpoint event not found in matching log file\n.SH NOTE\nThe boot time option is a convenience function and has limitations. The time it calculates is based on time now minus /proc/uptime. If after boot the system clock has been adjusted, perhaps by ntp, then the calculation may be wrong. In that case you'll need to fully specify the time. You can check the time it would use by running:\n\ndate -d \"`cut \\-f1 \\-d. /proc/uptime` seconds ago\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/ausearch.8"
                },
                "region": {
                  "startLine": 232,
                  "startColumn": 8,
                  "endLine": 232,
                  "endColumn": 14,
                  "snippet": {
                    "text": "12\ncheckpoint event not found in matching log file\n.SH NOTE\nThe boot time option is a convenience function and has limitations. The time it calculates is based on time now minus /proc/uptime. If after boot the system clock has been adjusted, perhaps by ntp, then the calculation may be wrong. In that case you'll need to fully specify the time. You can check the time it would use by running:\n\ndate -d \"`cut \\-f1 \\-d. /proc/uptime` seconds ago\"\n\n",
                    "rendered": {
                      "text": "12\ncheckpoint event not found in matching log file\n.SH NOTE\nThe boot time option is a convenience function and has limitations. The time it calculates is based on time now minus /proc/uptime. If after boot the system clock has been adjusted, perhaps by ntp, then the calculation may be wrong. In that case you'll need to fully specify the time. You can check the time it would use by running:\n\ndate -d \"`cut \\-f1 \\-d. /proc/uptime` seconds ago\"\n\n",
                      "markdown": "`12\ncheckpoint event not found in matching log file\n.SH NOTE\nThe boot time option is a convenience function and has limitations. The time it calculates is based on time now minus /proc/uptime. If after boot the system clock has been adjusted, perhaps by ntp, then the calculation may be wrong. In that case you'll need to fully specify the time. You can check the time it would use by running:\n\ndate -d \"`cut \\-f1 \\-d. /proc/uptime` seconds ago\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/ausearch.8"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 374,
                  "endLine": 170,
                  "endColumn": 382,
                  "snippet": {
                    "text": "a valid checkpoint file ignoring the recorded inode, device, serial, node and event type also found within a checkpoint file. Essentially, this is the recovery action should an invocation of \\fIausearch\\fP with a checkpoint option fail with an exit status of 10, 11 or 12. It could be used in a shell script something like:\n.sp\n.in +5\n.nf\n.na\nausearch --checkpoint /etc/audit/auditd_checkpoint.txt -i\n_au_status=$?\nif test ${_au_status} eq 10 -o ${_au_status} eq 11 -o ${_au_status} eq 12\nthen\n  ausearch --checkpoint /etc/audit/auditd_checkpoint.txt --start checkpoint -i\nfi\n.ad\n.fi\n.in -5\n.TP\n.BR \\-tm ,\\  ",
                    "rendered": {
                      "text": "a valid checkpoint file ignoring the recorded inode, device, serial, node and event type also found within a checkpoint file. Essentially, this is the recovery action should an invocation of \\fIausearch\\fP with a checkpoint option fail with an exit status of 10, 11 or 12. It could be used in a shell script something like:\n.sp\n.in +5\n.nf\n.na\nausearch --checkpoint /etc/audit/auditd_checkpoint.txt -i\n_au_status=$?\nif test ${_au_status} eq 10 -o ${_au_status} eq 11 -o ${_au_status} eq 12\nthen\n  ausearch --checkpoint /etc/audit/auditd_checkpoint.txt --start checkpoint -i\nfi\n.ad\n.fi\n.in -5\n.TP\n.BR \\-tm ,\\  ",
                      "markdown": "`a valid checkpoint file ignoring the recorded inode, device, serial, node and event type also found within a checkpoint file. Essentially, this is the recovery action should an invocation of \\fIausearch\\fP with a checkpoint option fail with an exit status of 10, 11 or 12. It could be used in a shell script something like:\n.sp\n.in +5\n.nf\n.na\nausearch --checkpoint /etc/audit/auditd_checkpoint.txt -i\n_au_status=$?\nif test ${_au_status} eq 10 -o ${_au_status} eq 11 -o ${_au_status} eq 12\nthen\n  ausearch --checkpoint /etc/audit/auditd_checkpoint.txt --start checkpoint -i\nfi\n.ad\n.fi\n.in -5\n.TP\n.BR \\-tm ,\\  `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/ausearch.8"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 142,
                  "endLine": 170,
                  "endColumn": 148,
                  "snippet": {
                    "text": "is\\-month\\fP means 1 second after midnight on day 1 of the month. \\fBThis\\-year\\fP means the 1 second after midnight on the first day of the first month.\n.sp\n\\fBcheckpoint\\fP means \\fIausearch\\fP will use the timestamp found within a valid checkpoint file ignoring the recorded inode, device, serial, node and event type also found within a checkpoint file. Essentially, this is the recovery action should an invocation of \\fIausearch\\fP with a checkpoint option fail with an exit status of 10, 11 or 12. It could be used in a shell script something like:\n.sp\n.in +5\n.nf\n.na\nausearch --checkpoint /etc/audi",
                    "rendered": {
                      "text": "is\\-month\\fP means 1 second after midnight on day 1 of the month. \\fBThis\\-year\\fP means the 1 second after midnight on the first day of the first month.\n.sp\n\\fBcheckpoint\\fP means \\fIausearch\\fP will use the timestamp found within a valid checkpoint file ignoring the recorded inode, device, serial, node and event type also found within a checkpoint file. Essentially, this is the recovery action should an invocation of \\fIausearch\\fP with a checkpoint option fail with an exit status of 10, 11 or 12. It could be used in a shell script something like:\n.sp\n.in +5\n.nf\n.na\nausearch --checkpoint /etc/audi",
                      "markdown": "`is\\-month\\fP means 1 second after midnight on day 1 of the month. \\fBThis\\-year\\fP means the 1 second after midnight on the first day of the first month.\n.sp\n\\fBcheckpoint\\fP means \\fIausearch\\fP will use the timestamp found within a valid checkpoint file ignoring the recorded inode, device, serial, node and event type also found within a checkpoint file. Essentially, this is the recovery action should an invocation of \\fIausearch\\fP with a checkpoint option fail with an exit status of 10, 11 or 12. It could be used in a shell script something like:\n.sp\n.in +5\n.nf\n.na\nausearch --checkpoint /etc/audi`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/ausearch.8"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 224,
                  "endLine": 168,
                  "endColumn": 230,
                  "snippet": {
                    "text": " date format accepted is influenced by the LC_TIME environmental variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP, \\fByesterday\\fP, \\fBthis\\-week\\fP, \\fBweek\\-ago\\fP, \\fBthis\\-month\\fP, \\fBthis\\-year\\fP, or \\fBcheckpoint\\fP. \\fBBoot\\fP means the time of day to the second when the system last booted. \\fBToday\\fP means starting at 1 second after midnight. \\fBRecent\\fP is 10 minutes ago. \\fBYesterday\\fP is 1 second after midnight the previous day. \\fBThis\\-week\\fP means starting 1 second after midnight on day 0 of the week determined by your locale",
                    "rendered": {
                      "text": " date format accepted is influenced by the LC_TIME environmental variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP, \\fByesterday\\fP, \\fBthis\\-week\\fP, \\fBweek\\-ago\\fP, \\fBthis\\-month\\fP, \\fBthis\\-year\\fP, or \\fBcheckpoint\\fP. \\fBBoot\\fP means the time of day to the second when the system last booted. \\fBToday\\fP means starting at 1 second after midnight. \\fBRecent\\fP is 10 minutes ago. \\fBYesterday\\fP is 1 second after midnight the previous day. \\fBThis\\-week\\fP means starting 1 second after midnight on day 0 of the week determined by your locale",
                      "markdown": "` date format accepted is influenced by the LC_TIME environmental variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP, \\fByesterday\\fP, \\fBthis\\-week\\fP, \\fBweek\\-ago\\fP, \\fBthis\\-month\\fP, \\fBthis\\-year\\fP, or \\fBcheckpoint\\fP. \\fBBoot\\fP means the time of day to the second when the system last booted. \\fBToday\\fP means starting at 1 second after midnight. \\fBRecent\\fP is 10 minutes ago. \\fBYesterday\\fP is 1 second after midnight the previous day. \\fBThis\\-week\\fP means starting 1 second after midnight on day 0 of the week determined by your locale`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/ausearch.8"
                },
                "region": {
                  "startLine": 166,
                  "startColumn": 145,
                  "endLine": 166,
                  "endColumn": 151,
                  "snippet": {
                    "text": "You can check the format of your locale by running\n.B date \\(aq+%x\\(aq.\nIf the date is omitted, \n.B today\nis assumed. If the time is omitted, \n.B midnight\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 09/03/2009. An example of time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP, \\fByesterday\\fP, \\fBthis\\-week\\fP, \\fBweek\\-ago\\fP, \\fBthis\\-month\\fP, \\fBthis\\-year\\fP, or \\fBcheckpoint\\fP. \\fBB",
                    "rendered": {
                      "text": "You can check the format of your locale by running\n.B date \\(aq+%x\\(aq.\nIf the date is omitted, \n.B today\nis assumed. If the time is omitted, \n.B midnight\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 09/03/2009. An example of time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP, \\fByesterday\\fP, \\fBthis\\-week\\fP, \\fBweek\\-ago\\fP, \\fBthis\\-month\\fP, \\fBthis\\-year\\fP, or \\fBcheckpoint\\fP. \\fBB",
                      "markdown": "`You can check the format of your locale by running\n.B date \\(aq+%x\\(aq.\nIf the date is omitted, \n.B today\nis assumed. If the time is omitted, \n.B midnight\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 09/03/2009. An example of time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP, \\fByesterday\\fP, \\fBthis\\-week\\fP, \\fBweek\\-ago\\fP, \\fBthis\\-month\\fP, \\fBthis\\-year\\fP, or \\fBcheckpoint\\fP. \\fBB`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/ausearch.8"
                },
                "region": {
                  "startLine": 166,
                  "startColumn": 29,
                  "endLine": 166,
                  "endColumn": 35,
                  "snippet": {
                    "text": "or events with time stamps equal to or after the given start time. The format of start time depends on your locale. You can check the format of your locale by running\n.B date \\(aq+%x\\(aq.\nIf the date is omitted, \n.B today\nis assumed. If the time is omitted, \n.B midnight\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 09/03/2009. An example of time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP",
                    "rendered": {
                      "text": "or events with time stamps equal to or after the given start time. The format of start time depends on your locale. You can check the format of your locale by running\n.B date \\(aq+%x\\(aq.\nIf the date is omitted, \n.B today\nis assumed. If the time is omitted, \n.B midnight\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 09/03/2009. An example of time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP",
                      "markdown": "`or events with time stamps equal to or after the given start time. The format of start time depends on your locale. You can check the format of your locale by running\n.B date \\(aq+%x\\(aq.\nIf the date is omitted, \n.B today\nis assumed. If the time is omitted, \n.B midnight\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 09/03/2009. An example of time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/ausearch.8"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 18,
                  "endLine": 164,
                  "endColumn": 24,
                  "snippet": {
                    "text": ".B date \\(aq+%x\\(aq.\nIf the date is omitted, \n.B today\nis assumed. If the time is omitted, \n.B midnight\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 09/03/2009. An example of time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\n",
                    "rendered": {
                      "text": ".B date \\(aq+%x\\(aq.\nIf the date is omitted, \n.B today\nis assumed. If the time is omitted, \n.B midnight\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 09/03/2009. An example of time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\n",
                      "markdown": "`.B date \\(aq+%x\\(aq.\nIf the date is omitted, \n.B today\nis assumed. If the time is omitted, \n.B midnight\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 09/03/2009. An example of time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/ausearch.8"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 94,
                  "endLine": 160,
                  "endColumn": 100,
                  "snippet": {
                    "text": "ns 1 second after midnight on day 1 of the month. \\fBThis\\-year\\fP means the 1 second after midnight on the first day of the first month.\n.TP\n.BR \\-ts ,\\  \\-\\-start \\ [\\fIstart-date\\fP]\\ [\\fIstart-time\\fP]\nSearch for events with time stamps equal to or after the given start time. The format of start time depends on your locale. You can check the format of your locale by running\n.B date \\(aq+%x\\(aq.\nIf the date is omitted, \n.B today\nis assumed. If the time is omitted, \n.B midnight\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 0",
                    "rendered": {
                      "text": "ns 1 second after midnight on day 1 of the month. \\fBThis\\-year\\fP means the 1 second after midnight on the first day of the first month.\n.TP\n.BR \\-ts ,\\  \\-\\-start \\ [\\fIstart-date\\fP]\\ [\\fIstart-time\\fP]\nSearch for events with time stamps equal to or after the given start time. The format of start time depends on your locale. You can check the format of your locale by running\n.B date \\(aq+%x\\(aq.\nIf the date is omitted, \n.B today\nis assumed. If the time is omitted, \n.B midnight\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 0",
                      "markdown": "`ns 1 second after midnight on day 1 of the month. \\fBThis\\-year\\fP means the 1 second after midnight on the first day of the first month.\n.TP\n.BR \\-ts ,\\  \\-\\-start \\ [\\fIstart-date\\fP]\\ [\\fIstart-time\\fP]\nSearch for events with time stamps equal to or after the given start time. The format of start time depends on your locale. You can check the format of your locale by running\n.B date \\(aq+%x\\(aq.\nIf the date is omitted, \n.B today\nis assumed. If the time is omitted, \n.B midnight\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 0`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/ausearch.8"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 22,
                  "endLine": 160,
                  "endColumn": 28,
                  "snippet": {
                    "text": " means 1 second after midnight exactly 7 days ago. \\fBThis\\-month\\fP means 1 second after midnight on day 1 of the month. \\fBThis\\-year\\fP means the 1 second after midnight on the first day of the first month.\n.TP\n.BR \\-ts ,\\  \\-\\-start \\ [\\fIstart-date\\fP]\\ [\\fIstart-time\\fP]\nSearch for events with time stamps equal to or after the given start time. The format of start time depends on your locale. You can check the format of your locale by running\n.B date \\(aq+%x\\(aq.\nIf the date is omitted, \n.B today\nis assumed. If the time is omitted, \n.B midnight\nis assumed. Use 24 hour clock time rather than AM",
                    "rendered": {
                      "text": " means 1 second after midnight exactly 7 days ago. \\fBThis\\-month\\fP means 1 second after midnight on day 1 of the month. \\fBThis\\-year\\fP means the 1 second after midnight on the first day of the first month.\n.TP\n.BR \\-ts ,\\  \\-\\-start \\ [\\fIstart-date\\fP]\\ [\\fIstart-time\\fP]\nSearch for events with time stamps equal to or after the given start time. The format of start time depends on your locale. You can check the format of your locale by running\n.B date \\(aq+%x\\(aq.\nIf the date is omitted, \n.B today\nis assumed. If the time is omitted, \n.B midnight\nis assumed. Use 24 hour clock time rather than AM",
                      "markdown": "` means 1 second after midnight exactly 7 days ago. \\fBThis\\-month\\fP means 1 second after midnight on day 1 of the month. \\fBThis\\-year\\fP means the 1 second after midnight on the first day of the first month.\n.TP\n.BR \\-ts ,\\  \\-\\-start \\ [\\fIstart-date\\fP]\\ [\\fIstart-time\\fP]\nSearch for events with time stamps equal to or after the given start time. The format of start time depends on your locale. You can check the format of your locale by running\n.B date \\(aq+%x\\(aq.\nIf the date is omitted, \n.B today\nis assumed. If the time is omitted, \n.B midnight\nis assumed. Use 24 hour clock time rather than AM`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/ausearch.8"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 268,
                  "endLine": 157,
                  "endColumn": 274,
                  "snippet": {
                    "text": "C_TIME environmental variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP, \\fByesterday\\fP, \\fBthis\\-week\\fP, \\fBweek\\-ago\\fP, \\fBthis\\-month\\fP, or \\fBthis\\-year\\fP. \\fBNow\\fP means starting now. \\fBRecent\\fP is 10 minutes ago. \\fBBoot\\fP means the time of day to the second when the system last booted. \\fBToday\\fP means now. \\fBYesterday\\fP is 1 second after midnight the previous day. \\fBThis\\-week\\fP means starting 1 second after midnight on day 0 of the week determined by your locale (see \\fBlocaltime\\fP). \\fBWeek\\-ago\\fP means 1 second after mid",
                    "rendered": {
                      "text": "C_TIME environmental variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP, \\fByesterday\\fP, \\fBthis\\-week\\fP, \\fBweek\\-ago\\fP, \\fBthis\\-month\\fP, or \\fBthis\\-year\\fP. \\fBNow\\fP means starting now. \\fBRecent\\fP is 10 minutes ago. \\fBBoot\\fP means the time of day to the second when the system last booted. \\fBToday\\fP means now. \\fBYesterday\\fP is 1 second after midnight the previous day. \\fBThis\\-week\\fP means starting 1 second after midnight on day 0 of the week determined by your locale (see \\fBlocaltime\\fP). \\fBWeek\\-ago\\fP means 1 second after mid",
                      "markdown": "`C_TIME environmental variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP, \\fByesterday\\fP, \\fBthis\\-week\\fP, \\fBweek\\-ago\\fP, \\fBthis\\-month\\fP, or \\fBthis\\-year\\fP. \\fBNow\\fP means starting now. \\fBRecent\\fP is 10 minutes ago. \\fBBoot\\fP means the time of day to the second when the system last booted. \\fBToday\\fP means now. \\fBYesterday\\fP is 1 second after midnight the previous day. \\fBThis\\-week\\fP means starting 1 second after midnight on day 0 of the week determined by your locale (see \\fBlocaltime\\fP). \\fBWeek\\-ago\\fP means 1 second after mid`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/ausearch.8"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 145,
                  "endLine": 155,
                  "endColumn": 151,
                  "snippet": {
                    "text": "cale. You can check the format of your locale by running\n.B date \\(aq+%x\\(aq.\nIf the date is omitted,\n.B today\nis assumed. If the time is omitted, \n.B now\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 09/03/2009. An example of time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP, \\fByesterday\\fP, \\fBthis\\-week\\fP, \\fBweek\\-ago\\fP, \\fBthis\\-month\\fP, or \\fBthis\\-year\\fP. \\fBNow\\fP means starti",
                    "rendered": {
                      "text": "cale. You can check the format of your locale by running\n.B date \\(aq+%x\\(aq.\nIf the date is omitted,\n.B today\nis assumed. If the time is omitted, \n.B now\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 09/03/2009. An example of time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP, \\fByesterday\\fP, \\fBthis\\-week\\fP, \\fBweek\\-ago\\fP, \\fBthis\\-month\\fP, or \\fBthis\\-year\\fP. \\fBNow\\fP means starti",
                      "markdown": "`cale. You can check the format of your locale by running\n.B date \\(aq+%x\\(aq.\nIf the date is omitted,\n.B today\nis assumed. If the time is omitted, \n.B now\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 09/03/2009. An example of time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP, \\fByesterday\\fP, \\fBthis\\-week\\fP, \\fBweek\\-ago\\fP, \\fBthis\\-month\\fP, or \\fBthis\\-year\\fP. \\fBNow\\fP means starti`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/ausearch.8"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 29,
                  "endLine": 155,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\nSearch for events with time stamps equal to or before the given end time. The format of end time depends on your locale. You can check the format of your locale by running\n.B date \\(aq+%x\\(aq.\nIf the date is omitted,\n.B today\nis assumed. If the time is omitted, \n.B now\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 09/03/2009. An example of time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP",
                    "rendered": {
                      "text": "\nSearch for events with time stamps equal to or before the given end time. The format of end time depends on your locale. You can check the format of your locale by running\n.B date \\(aq+%x\\(aq.\nIf the date is omitted,\n.B today\nis assumed. If the time is omitted, \n.B now\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 09/03/2009. An example of time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP",
                      "markdown": "`\nSearch for events with time stamps equal to or before the given end time. The format of end time depends on your locale. You can check the format of your locale by running\n.B date \\(aq+%x\\(aq.\nIf the date is omitted,\n.B today\nis assumed. If the time is omitted, \n.B now\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 09/03/2009. An example of time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/ausearch.8"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 18,
                  "endLine": 153,
                  "endColumn": 24,
                  "snippet": {
                    "text": ".B date \\(aq+%x\\(aq.\nIf the date is omitted,\n.B today\nis assumed. If the time is omitted, \n.B now\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 09/03/2009. An example of time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\n",
                    "rendered": {
                      "text": ".B date \\(aq+%x\\(aq.\nIf the date is omitted,\n.B today\nis assumed. If the time is omitted, \n.B now\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 09/03/2009. An example of time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\n",
                      "markdown": "`.B date \\(aq+%x\\(aq.\nIf the date is omitted,\n.B today\nis assumed. If the time is omitted, \n.B now\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 09/03/2009. An example of time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/ausearch.8"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 91,
                  "endLine": 149,
                  "endColumn": 97,
                  "snippet": {
                    "text": ".BR no .\n.TP\n.BR \\-te ,\\  \\-\\-end \\ [\\fIend-date\\fP]\\ [\\fIend-time\\fP]\nSearch for events with time stamps equal to or before the given end time. The format of end time depends on your locale. You can check the format of your locale by running\n.B date \\(aq+%x\\(aq.\nIf the date is omitted,\n.B today\n",
                    "rendered": {
                      "text": ".BR no .\n.TP\n.BR \\-te ,\\  \\-\\-end \\ [\\fIend-date\\fP]\\ [\\fIend-time\\fP]\nSearch for events with time stamps equal to or before the given end time. The format of end time depends on your locale. You can check the format of your locale by running\n.B date \\(aq+%x\\(aq.\nIf the date is omitted,\n.B today\n",
                      "markdown": "`.BR no .\n.TP\n.BR \\-te ,\\  \\-\\-end \\ [\\fIend-date\\fP]\\ [\\fIend-time\\fP]\nSearch for events with time stamps equal to or before the given end time. The format of end time depends on your locale. You can check the format of your locale by running\n.B date \\(aq+%x\\(aq.\nIf the date is omitted,\n.B today\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/ausearch.8"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 22,
                  "endLine": 149,
                  "endColumn": 28,
                  "snippet": {
                    "text": ".BR no .\n.TP\n.BR \\-te ,\\  \\-\\-end \\ [\\fIend-date\\fP]\\ [\\fIend-time\\fP]\nSearch for events with time stamps equal to or before the given end time. The format of end time depends on your locale. You can check the format of your locale by running\n.B date \\(aq+%x\\(aq.\nIf the date is omitted,\n.B today\n",
                    "rendered": {
                      "text": ".BR no .\n.TP\n.BR \\-te ,\\  \\-\\-end \\ [\\fIend-date\\fP]\\ [\\fIend-time\\fP]\nSearch for events with time stamps equal to or before the given end time. The format of end time depends on your locale. You can check the format of your locale by running\n.B date \\(aq+%x\\(aq.\nIf the date is omitted,\n.B today\n",
                      "markdown": "`.BR no .\n.TP\n.BR \\-te ,\\  \\-\\-end \\ [\\fIend-date\\fP]\\ [\\fIend-time\\fP]\nSearch for events with time stamps equal to or before the given end time. The format of end time depends on your locale. You can check the format of your locale by running\n.B date \\(aq+%x\\(aq.\nIf the date is omitted,\n.B today\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/ausearch.8"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 149,
                  "endLine": 116,
                  "endColumn": 155,
                  "snippet": {
                    "text": " message type can be either text or numeric. If you enter a list, there can be only commas and no spaces separating the list.\n.TP\n.BR \\-n ,\\  \\-\\-node\nSearch for events originating from a specific machine. Multiple nodes are allowed, and if any nodes match, the event is matched. This search uses the node field in audit events. Also see the \\-\\-host command which search for events related to host information in the audit trail.\n.TP\n.BR \\-o ,\\  \\-\\-object \\ \\fISE-Linux-context-string\\fP\nSearch for event with \\fItcontext\\fP (object) matching the string.\n.TP\n.BR \\-p ,\\  \\-\\-pid \\ \\fIprocess-id\\fP\nSearch",
                    "rendered": {
                      "text": " message type can be either text or numeric. If you enter a list, there can be only commas and no spaces separating the list.\n.TP\n.BR \\-n ,\\  \\-\\-node\nSearch for events originating from a specific machine. Multiple nodes are allowed, and if any nodes match, the event is matched. This search uses the node field in audit events. Also see the \\-\\-host command which search for events related to host information in the audit trail.\n.TP\n.BR \\-o ,\\  \\-\\-object \\ \\fISE-Linux-context-string\\fP\nSearch for event with \\fItcontext\\fP (object) matching the string.\n.TP\n.BR \\-p ,\\  \\-\\-pid \\ \\fIprocess-id\\fP\nSearch",
                      "markdown": "` message type can be either text or numeric. If you enter a list, there can be only commas and no spaces separating the list.\n.TP\n.BR \\-n ,\\  \\-\\-node\nSearch for events originating from a specific machine. Multiple nodes are allowed, and if any nodes match, the event is matched. This search uses the node field in audit events. Also see the \\-\\-host command which search for events related to host information in the audit trail.\n.TP\n.BR \\-o ,\\  \\-\\-object \\ \\fISE-Linux-context-string\\fP\nSearch for event with \\fItcontext\\fP (object) matching the string.\n.TP\n.BR \\-p ,\\  \\-\\-pid \\ \\fIprocess-id\\fP\nSearch`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/ausearch.8"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 348,
                  "endLine": 92,
                  "endColumn": 354,
                  "snippet": {
                    "text": "fP. The hostname can be either a hostname, fully qualified domain name, or numeric network address. No attempt is made to resolve numeric addresses to domain names or aliases. This search typically correlates to the addr or host field of audit events. Also see the \\-\\-node command which searches the node field.\n.TP\n.BR \\-i ,\\  \\-\\-interpret\nInterpret numeric entities into text. For example, uid is converted to account name. If the audit logs are unenriched, the conversion is done using the current resources of the machine where the search is being run. If you have renamed the accounts, or don't have",
                    "rendered": {
                      "text": "fP. The hostname can be either a hostname, fully qualified domain name, or numeric network address. No attempt is made to resolve numeric addresses to domain names or aliases. This search typically correlates to the addr or host field of audit events. Also see the \\-\\-node command which searches the node field.\n.TP\n.BR \\-i ,\\  \\-\\-interpret\nInterpret numeric entities into text. For example, uid is converted to account name. If the audit logs are unenriched, the conversion is done using the current resources of the machine where the search is being run. If you have renamed the accounts, or don't have",
                      "markdown": "`fP. The hostname can be either a hostname, fully qualified domain name, or numeric network address. No attempt is made to resolve numeric addresses to domain names or aliases. This search typically correlates to the addr or host field of audit events. Also see the \\-\\-node command which searches the node field.\n.TP\n.BR \\-i ,\\  \\-\\-interpret\nInterpret numeric entities into text. For example, uid is converted to account name. If the audit logs are unenriched, the conversion is done using the current resources of the machine where the search is being run. If you have renamed the accounts, or don't have`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/ausearch.8"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 359,
                  "endLine": 77,
                  "endColumn": 365,
                  "snippet": {
                    "text": "his option. The supported formats are: raw, default, interpret, csv, and text. The \\fIraw\\fP option is described under the \\fI\\-\\-raw\\fP command line option. The \\fIdefault\\fP option is what you get when no formatting options are passed. It includes one line as a visual separator which indicates the time stamp and then the records of the event follow. The \\fIinterpret\\fP option is explained under the \\fI\\-i\\fP command line option. The \\fIcsv\\fP option outputs the results of the search as a normalized event in comma separated value (CSV) format suitable for import into analytical programs. The \\fItex",
                    "rendered": {
                      "text": "his option. The supported formats are: raw, default, interpret, csv, and text. The \\fIraw\\fP option is described under the \\fI\\-\\-raw\\fP command line option. The \\fIdefault\\fP option is what you get when no formatting options are passed. It includes one line as a visual separator which indicates the time stamp and then the records of the event follow. The \\fIinterpret\\fP option is explained under the \\fI\\-i\\fP command line option. The \\fIcsv\\fP option outputs the results of the search as a normalized event in comma separated value (CSV) format suitable for import into analytical programs. The \\fItex",
                      "markdown": "`his option. The supported formats are: raw, default, interpret, csv, and text. The \\fIraw\\fP option is described under the \\fI\\-\\-raw\\fP command line option. The \\fIdefault\\fP option is what you get when no formatting options are passed. It includes one line as a visual separator which indicates the time stamp and then the records of the event follow. The \\fIinterpret\\fP option is explained under the \\fI\\-i\\fP command line option. The \\fIcsv\\fP option outputs the results of the search as a normalized event in comma separated value (CSV) format suitable for import into analytical programs. The \\fItex`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/ausearch.8"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 102,
                  "endLine": 71,
                  "endColumn": 108,
                  "snippet": {
                    "text": "When the \\fIformat\\fP mode is \\fIcsv\\fP, this option will add columns of information about a second object when it exists. It's rare that a second object is part of a record. Some examples are when a file is renamed from one name to another or when a device is mounted to a path.\n.TP\n.BR \\-\\-extra-time \\ \nWhen the \\fIformat\\fP mode is \\fIcsv\\fP, this option will add columns of information about broken down time to make subsetting easier.\n.TP\n.BR \\-f ,\\  \\-\\-file \\ \\fIfile-name\\fP\nSearch for an event based on the given \\fIfilename\\fP. The argument will match normal files as well as af_unix sockets.\n",
                    "rendered": {
                      "text": "When the \\fIformat\\fP mode is \\fIcsv\\fP, this option will add columns of information about a second object when it exists. It's rare that a second object is part of a record. Some examples are when a file is renamed from one name to another or when a device is mounted to a path.\n.TP\n.BR \\-\\-extra-time \\ \nWhen the \\fIformat\\fP mode is \\fIcsv\\fP, this option will add columns of information about broken down time to make subsetting easier.\n.TP\n.BR \\-f ,\\  \\-\\-file \\ \\fIfile-name\\fP\nSearch for an event based on the given \\fIfilename\\fP. The argument will match normal files as well as af_unix sockets.\n",
                      "markdown": "`When the \\fIformat\\fP mode is \\fIcsv\\fP, this option will add columns of information about a second object when it exists. It's rare that a second object is part of a record. Some examples are when a file is renamed from one name to another or when a device is mounted to a path.\n.TP\n.BR \\-\\-extra-time \\ \nWhen the \\fIformat\\fP mode is \\fIcsv\\fP, this option will add columns of information about broken down time to make subsetting easier.\n.TP\n.BR \\-f ,\\  \\-\\-file \\ \\fIfile-name\\fP\nSearch for an event based on the given \\fIfilename\\fP. The argument will match normal files as well as af_unix sockets.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/ausearch.8"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 15,
                  "endLine": 40,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\nAn auditd event is made up of one or more records. When processing events, ausearch defines\nevents as either complete or in-complete.  A complete event is either a single record event or\none whose event time occurred 2 seconds in the past compared to the event being currently\nprocessed.\n\nA checkpoint is achieved by recording the last completed event output along with the device\n",
                    "rendered": {
                      "text": "\nAn auditd event is made up of one or more records. When processing events, ausearch defines\nevents as either complete or in-complete.  A complete event is either a single record event or\none whose event time occurred 2 seconds in the past compared to the event being currently\nprocessed.\n\nA checkpoint is achieved by recording the last completed event output along with the device\n",
                      "markdown": "`\nAn auditd event is made up of one or more records. When processing events, ausearch defines\nevents as either complete or in-complete.  A complete event is either a single record event or\none whose event time occurred 2 seconds in the past compared to the event being currently\nprocessed.\n\nA checkpoint is achieved by recording the last completed event output along with the device\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/ausearch.8"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 541,
                  "endLine": 8,
                  "endColumn": 547,
                  "snippet": {
                    "text": "rms an \"and\" statement. For example, searching with \\fB\\-m\\fP and \\fB\\-ui\\fP means return events that have both the requested type and match the user id given. An exception is the \\fB\\-m\\fP  and \\fB\\-n\\fP options; multiple record types and nodes are allowed in a search which will return any matching node and record.\n\nIt should also be noted that each syscall excursion from user space into the kernel and back into user space has one event ID that is unique. Any auditable event that is triggered during this trip share this ID so that they may be correlated.\n\nDifferent parts of the kernel may add suppl",
                    "rendered": {
                      "text": "rms an \"and\" statement. For example, searching with \\fB\\-m\\fP and \\fB\\-ui\\fP means return events that have both the requested type and match the user id given. An exception is the \\fB\\-m\\fP  and \\fB\\-n\\fP options; multiple record types and nodes are allowed in a search which will return any matching node and record.\n\nIt should also be noted that each syscall excursion from user space into the kernel and back into user space has one event ID that is unique. Any auditable event that is triggered during this trip share this ID so that they may be correlated.\n\nDifferent parts of the kernel may add suppl",
                      "markdown": "`rms an \"and\" statement. For example, searching with \\fB\\-m\\fP and \\fB\\-ui\\fP means return events that have both the requested type and match the user id given. An exception is the \\fB\\-m\\fP  and \\fB\\-n\\fP options; multiple record types and nodes are allowed in a search which will return any matching node and record.\n\nIt should also be noted that each syscall excursion from user space into the kernel and back into user space has one event ID that is unique. Any auditable event that is triggered during this trip share this ID so that they may be correlated.\n\nDifferent parts of the kernel may add suppl`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auparse_next_event.3"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 44,
                  "endLine": 11,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\n.SH \"DESCRIPTION\"\n\nauparse_next_event will position the cursors at the first field of the first record of the next event in a file or buffer. It does not skip events or honor any search criteria that may be stored.\n\n.SH \"RETURN VALUE\"\n\n",
                    "rendered": {
                      "text": "\n.SH \"DESCRIPTION\"\n\nauparse_next_event will position the cursors at the first field of the first record of the next event in a file or buffer. It does not skip events or honor any search criteria that may be stored.\n\n.SH \"RETURN VALUE\"\n\n",
                      "markdown": "`\n.SH \"DESCRIPTION\"\n\nauparse_next_event will position the cursors at the first field of the first record of the next event in a file or buffer. It does not skip events or honor any search criteria that may be stored.\n\n.SH \"RETURN VALUE\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auparse_find_field.3"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 55,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\n.SH \"DESCRIPTION\"\n\nauparse_find_field will scan all records in an event to find the first occurrence of the field name passed to it. Searching begins from the cursor's current position. The field name is stored for subsequent searching.\n\nNOTE: auparse creates 2 pseudo fields that do not exist in the natural record for SELinux AVC and USER_AVC decision and permissions. The field names are seresult and seperms respectively.\n\n",
                    "rendered": {
                      "text": "\n.SH \"DESCRIPTION\"\n\nauparse_find_field will scan all records in an event to find the first occurrence of the field name passed to it. Searching begins from the cursor's current position. The field name is stored for subsequent searching.\n\nNOTE: auparse creates 2 pseudo fields that do not exist in the natural record for SELinux AVC and USER_AVC decision and permissions. The field names are seresult and seperms respectively.\n\n",
                      "markdown": "`\n.SH \"DESCRIPTION\"\n\nauparse_find_field will scan all records in an event to find the first occurrence of the field name passed to it. Searching begins from the cursor's current position. The field name is stored for subsequent searching.\n\nNOTE: auparse creates 2 pseudo fields that do not exist in the natural record for SELinux AVC and USER_AVC decision and permissions. The field names are seresult and seperms respectively.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/set_aumessage_mode.3"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 3,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": ".if t .sp .5v\n.if n .sp\n..\n.de Ip \\\" List item\n.br\n.ie \\\\n(.$>=3 .ne \\\\$3\n.el .ne 3\n",
                    "rendered": {
                      "text": ".if t .sp .5v\n.if n .sp\n..\n.de Ip \\\" List item\n.br\n.ie \\\\n(.$>=3 .ne \\\\$3\n.el .ne 3\n",
                      "markdown": "`.if t .sp .5v\n.if n .sp\n..\n.de Ip \\\" List item\n.br\n.ie \\\\n(.$>=3 .ne \\\\$3\n.el .ne 3\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/set_aumessage_mode.3"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 31,
                  "endLine": 3,
                  "endColumn": 36,
                  "snippet": {
                    "text": ".\\\" Copyright (C) 2004 IBM\n.\\\" This file is distributed according to the GNU General Public License.\n.\\\" See the file COPYING in the top level source directory for details.\n.de Sh \\\" Subsection\n.br\n.if t .Sp\n",
                    "rendered": {
                      "text": ".\\\" Copyright (C) 2004 IBM\n.\\\" This file is distributed according to the GNU General Public License.\n.\\\" See the file COPYING in the top level source directory for details.\n.de Sh \\\" Subsection\n.br\n.if t .Sp\n",
                      "markdown": "`.\\\" Copyright (C) 2004 IBM\n.\\\" This file is distributed according to the GNU General Public License.\n.\\\" See the file COPYING in the top level source directory for details.\n.de Sh \\\" Subsection\n.br\n.if t .Sp\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/ausearch_add_timestamp_item.3"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 41,
                  "endLine": 11,
                  "endColumn": 47,
                  "snippet": {
                    "text": "Linux Audit API\"\n.SH NAME\nausearch_add_timestamp_item \\- build up search rule\n.SH \"SYNOPSIS\"\n.B #include <auparse.h>\n.sp\nint ausearch_add_timestamp_item(auparse_state_t *au, const char *op, time_t sec, unsigned milli, ausearch_rule_t how)\n\n.SH \"DESCRIPTION\"\n\nausearch_add_timestamp_item adds an event time condition to the current audit search expression. The search conditions can then be used to scan logs, files, or buffers for something of interest. The op parameter specifies the desired comparison. Legal op values are \\fI<\\fR, \\fI<=\\fR, \\fI>=\\fR, \\fI>\\fR and \\fI=\\fR.  The left operand of the compar",
                    "rendered": {
                      "text": "Linux Audit API\"\n.SH NAME\nausearch_add_timestamp_item \\- build up search rule\n.SH \"SYNOPSIS\"\n.B #include <auparse.h>\n.sp\nint ausearch_add_timestamp_item(auparse_state_t *au, const char *op, time_t sec, unsigned milli, ausearch_rule_t how)\n\n.SH \"DESCRIPTION\"\n\nausearch_add_timestamp_item adds an event time condition to the current audit search expression. The search conditions can then be used to scan logs, files, or buffers for something of interest. The op parameter specifies the desired comparison. Legal op values are \\fI<\\fR, \\fI<=\\fR, \\fI>=\\fR, \\fI>\\fR and \\fI=\\fR.  The left operand of the compar",
                      "markdown": "`Linux Audit API\"\n.SH NAME\nausearch_add_timestamp_item \\- build up search rule\n.SH \"SYNOPSIS\"\n.B #include <auparse.h>\n.sp\nint ausearch_add_timestamp_item(auparse_state_t *au, const char *op, time_t sec, unsigned milli, ausearch_rule_t how)\n\n.SH \"DESCRIPTION\"\n\nausearch_add_timestamp_item adds an event time condition to the current audit search expression. The search conditions can then be used to scan logs, files, or buffers for something of interest. The op parameter specifies the desired comparison. Legal op values are \\fI<\\fR, \\fI<=\\fR, \\fI>=\\fR, \\fI>\\fR and \\fI=\\fR.  The left operand of the compar`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auparse_set_escape_mode.3"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 69,
                  "endLine": 27,
                  "endColumn": 78,
                  "snippet": {
                    "text": ".B AUPARSE_ESC_SHELL_QUOTE\nSimilar to\n.I AUPARSE_ESC_SHELL\nbut expands the character set to include shell operators. Any escaped control characters are displayed as octal numbers. Other escaped characters are proceeded with a backslash. The additional characters it escapes include: ; ' \\ \" ` # $ & * ? [ ] < > { } \\\\\n.RE\n\n\n",
                    "rendered": {
                      "text": ".B AUPARSE_ESC_SHELL_QUOTE\nSimilar to\n.I AUPARSE_ESC_SHELL\nbut expands the character set to include shell operators. Any escaped control characters are displayed as octal numbers. Other escaped characters are proceeded with a backslash. The additional characters it escapes include: ; ' \\ \" ` # $ & * ? [ ] < > { } \\\\\n.RE\n\n\n",
                      "markdown": "`.B AUPARSE_ESC_SHELL_QUOTE\nSimilar to\n.I AUPARSE_ESC_SHELL\nbut expands the character set to include shell operators. Any escaped control characters are displayed as octal numbers. Other escaped characters are proceeded with a backslash. The additional characters it escapes include: ; ' \\ \" ` # $ & * ? [ ] < > { } \\\\\n.RE\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auparse_set_escape_mode.3"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 137,
                  "endLine": 22,
                  "endColumn": 146,
                  "snippet": {
                    "text": "Escape TTY control characters so that they are harmless to display on a terminal. When any control character is found, they are displayed as octal numbers. This is the default mode that the auparse library is initialized with.\n.TP\n.B AUPARSE_ESC_SHELL\nBesides escaping control characters, this will escape some characters that can cause problems when used with shell scripting. Any escaped control characters are displayed as octal numbers. Other escaped characters are proceeded with a backslash. The additional characters it escapes are: \" ' ` $ \\\\\n.TP\n.B AUPARSE_ESC_SHELL_QUOTE\nSimilar to\n",
                    "rendered": {
                      "text": "Escape TTY control characters so that they are harmless to display on a terminal. When any control character is found, they are displayed as octal numbers. This is the default mode that the auparse library is initialized with.\n.TP\n.B AUPARSE_ESC_SHELL\nBesides escaping control characters, this will escape some characters that can cause problems when used with shell scripting. Any escaped control characters are displayed as octal numbers. Other escaped characters are proceeded with a backslash. The additional characters it escapes are: \" ' ` $ \\\\\n.TP\n.B AUPARSE_ESC_SHELL_QUOTE\nSimilar to\n",
                      "markdown": "`Escape TTY control characters so that they are harmless to display on a terminal. When any control character is found, they are displayed as octal numbers. This is the default mode that the auparse library is initialized with.\n.TP\n.B AUPARSE_ESC_SHELL\nBesides escaping control characters, this will escape some characters that can cause problems when used with shell scripting. Any escaped control characters are displayed as octal numbers. Other escaped characters are proceeded with a backslash. The additional characters it escapes are: \" ' ` $ \\\\\n.TP\n.B AUPARSE_ESC_SHELL_QUOTE\nSimilar to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auparse_set_escape_mode.3"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 16,
                  "endLine": 22,
                  "endColumn": 25,
                  "snippet": {
                    "text": "Escape TTY control characters so that they are harmless to display on a terminal. When any control character is found, they are displayed as octal numbers. This is the default mode that the auparse library is initialized with.\n.TP\n.B AUPARSE_ESC_SHELL\nBesides escaping control characters, this will escape some characters that can cause problems when used with shell scripting. Any escaped control characters are displayed as octal numbers. Other escaped characters are proceeded with a backslash. The additional characters it escapes are: \" ' ` $ \\\\\n.TP\n.B AUPARSE_ESC_SHELL_QUOTE\nSimilar to\n",
                    "rendered": {
                      "text": "Escape TTY control characters so that they are harmless to display on a terminal. When any control character is found, they are displayed as octal numbers. This is the default mode that the auparse library is initialized with.\n.TP\n.B AUPARSE_ESC_SHELL\nBesides escaping control characters, this will escape some characters that can cause problems when used with shell scripting. Any escaped control characters are displayed as octal numbers. Other escaped characters are proceeded with a backslash. The additional characters it escapes are: \" ' ` $ \\\\\n.TP\n.B AUPARSE_ESC_SHELL_QUOTE\nSimilar to\n",
                      "markdown": "`Escape TTY control characters so that they are harmless to display on a terminal. When any control character is found, they are displayed as octal numbers. This is the default mode that the auparse library is initialized with.\n.TP\n.B AUPARSE_ESC_SHELL\nBesides escaping control characters, this will escape some characters that can cause problems when used with shell scripting. Any escaped control characters are displayed as octal numbers. Other escaped characters are proceeded with a backslash. The additional characters it escapes are: \" ' ` $ \\\\\n.TP\n.B AUPARSE_ESC_SHELL_QUOTE\nSimilar to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auparse_set_escape_mode.3"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 90,
                  "endLine": 19,
                  "endColumn": 99,
                  "snippet": {
                    "text": "No escaping of any kind is done.\n.TP\n.B AUPARSE_ESC_TTY\nEscape TTY control characters so that they are harmless to display on a terminal. When any control character is found, they are displayed as octal numbers. This is the default mode that the auparse library is initialized with.\n.TP\n.B AUPARSE_ESC_SHELL\nBesides escaping control characters, this will escape some characters that can cause problems when used with shell scripting. Any escaped control characters are displayed as octal numbers. Other escaped characters are proceeded with a backslash. The additional characters it escapes are: \" ' ` $ \\\\\n",
                    "rendered": {
                      "text": "No escaping of any kind is done.\n.TP\n.B AUPARSE_ESC_TTY\nEscape TTY control characters so that they are harmless to display on a terminal. When any control character is found, they are displayed as octal numbers. This is the default mode that the auparse library is initialized with.\n.TP\n.B AUPARSE_ESC_SHELL\nBesides escaping control characters, this will escape some characters that can cause problems when used with shell scripting. Any escaped control characters are displayed as octal numbers. Other escaped characters are proceeded with a backslash. The additional characters it escapes are: \" ' ` $ \\\\\n",
                      "markdown": "`No escaping of any kind is done.\n.TP\n.B AUPARSE_ESC_TTY\nEscape TTY control characters so that they are harmless to display on a terminal. When any control character is found, they are displayed as octal numbers. This is the default mode that the auparse library is initialized with.\n.TP\n.B AUPARSE_ESC_SHELL\nBesides escaping control characters, this will escape some characters that can cause problems when used with shell scripting. Any escaped control characters are displayed as octal numbers. Other escaped characters are proceeded with a backslash. The additional characters it escapes are: \" ' ` $ \\\\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auparse_set_escape_mode.3"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 10,
                  "endLine": 19,
                  "endColumn": 19,
                  "snippet": {
                    "text": "No escaping of any kind is done.\n.TP\n.B AUPARSE_ESC_TTY\nEscape TTY control characters so that they are harmless to display on a terminal. When any control character is found, they are displayed as octal numbers. This is the default mode that the auparse library is initialized with.\n.TP\n.B AUPARSE_ESC_SHELL\nBesides escaping control characters, this will escape some characters that can cause problems when used with shell scripting. Any escaped control characters are displayed as octal numbers. Other escaped characters are proceeded with a backslash. The additional characters it escapes are: \" ' ` $ \\\\\n",
                    "rendered": {
                      "text": "No escaping of any kind is done.\n.TP\n.B AUPARSE_ESC_TTY\nEscape TTY control characters so that they are harmless to display on a terminal. When any control character is found, they are displayed as octal numbers. This is the default mode that the auparse library is initialized with.\n.TP\n.B AUPARSE_ESC_SHELL\nBesides escaping control characters, this will escape some characters that can cause problems when used with shell scripting. Any escaped control characters are displayed as octal numbers. Other escaped characters are proceeded with a backslash. The additional characters it escapes are: \" ' ` $ \\\\\n",
                      "markdown": "`No escaping of any kind is done.\n.TP\n.B AUPARSE_ESC_TTY\nEscape TTY control characters so that they are harmless to display on a terminal. When any control character is found, they are displayed as octal numbers. This is the default mode that the auparse library is initialized with.\n.TP\n.B AUPARSE_ESC_SHELL\nBesides escaping control characters, this will escape some characters that can cause problems when used with shell scripting. Any escaped control characters are displayed as octal numbers. Other escaped characters are proceeded with a backslash. The additional characters it escapes are: \" ' ` $ \\\\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/augenrules.8"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 59,
                  "endLine": 14,
                  "endColumn": 65,
                  "snippet": {
                    "text": "end in \\fI.rules\\fP in order to be processed. All other files in\n\\fI/etc/audit/rules.d\\fP are ignored.\n.P\nThe files are concatenated in order, based on their natural sort (see -v option of ls(1)) and stripped of empty and comment (#) lines.\n.P\nThe last processed -\\fID\\fP directive without an option, if present, is always\nemitted as the first line in the resultant file. Those with an option are\n",
                    "rendered": {
                      "text": "end in \\fI.rules\\fP in order to be processed. All other files in\n\\fI/etc/audit/rules.d\\fP are ignored.\n.P\nThe files are concatenated in order, based on their natural sort (see -v option of ls(1)) and stripped of empty and comment (#) lines.\n.P\nThe last processed -\\fID\\fP directive without an option, if present, is always\nemitted as the first line in the resultant file. Those with an option are\n",
                      "markdown": "`end in \\fI.rules\\fP in order to be processed. All other files in\n\\fI/etc/audit/rules.d\\fP are ignored.\n.P\nThe files are concatenated in order, based on their natural sort (see -v option of ls(1)) and stripped of empty and comment (#) lines.\n.P\nThe last processed -\\fID\\fP directive without an option, if present, is always\nemitted as the first line in the resultant file. Those with an option are\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/augenrules.8"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 21,
                  "endLine": 8,
                  "endColumn": 29,
                  "snippet": {
                    "text": ".B augenrules\n.RI [ \\-\\-check ]\\ [ \\-\\-load ]\n.SH DESCRIPTION\n\\fBaugenrules\\fP is a script that merges all component audit rules files,\nfound in the audit rules directory, \\fI/etc/audit/rules.d\\fP, placing the\nmerged file in \\fI/etc/audit/audit.rules\\fP. Component audit rule files, must\nend in \\fI.rules\\fP in order to be processed. All other files in\n",
                    "rendered": {
                      "text": ".B augenrules\n.RI [ \\-\\-check ]\\ [ \\-\\-load ]\n.SH DESCRIPTION\n\\fBaugenrules\\fP is a script that merges all component audit rules files,\nfound in the audit rules directory, \\fI/etc/audit/rules.d\\fP, placing the\nmerged file in \\fI/etc/audit/audit.rules\\fP. Component audit rule files, must\nend in \\fI.rules\\fP in order to be processed. All other files in\n",
                      "markdown": "`.B augenrules\n.RI [ \\-\\-check ]\\ [ \\-\\-load ]\n.SH DESCRIPTION\n\\fBaugenrules\\fP is a script that merges all component audit rules files,\nfound in the audit rules directory, \\fI/etc/audit/rules.d\\fP, placing the\nmerged file in \\fI/etc/audit/audit.rules\\fP. Component audit rule files, must\nend in \\fI.rules\\fP in order to be processed. All other files in\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/augenrules.8"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 15,
                  "endLine": 3,
                  "endColumn": 23,
                  "snippet": {
                    "text": ".TH AUGENRULES \"8\" \"Apr 2013\" \"Red Hat\" \"System Administration Utilities\"\n.SH NAME\naugenrules \\- a script that merges component audit rule files\n.SH SYNOPSIS\n.B augenrules\n.RI [ \\-\\-check ]\\ [ \\-\\-load ]\n",
                    "rendered": {
                      "text": ".TH AUGENRULES \"8\" \"Apr 2013\" \"Red Hat\" \"System Administration Utilities\"\n.SH NAME\naugenrules \\- a script that merges component audit rule files\n.SH SYNOPSIS\n.B augenrules\n.RI [ \\-\\-check ]\\ [ \\-\\-load ]\n",
                      "markdown": "`.TH AUGENRULES \"8\" \"Apr 2013\" \"Red Hat\" \"System Administration Utilities\"\n.SH NAME\naugenrules \\- a script that merges component audit rule files\n.SH SYNOPSIS\n.B augenrules\n.RI [ \\-\\-check ]\\ [ \\-\\-load ]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit-records.h"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 54,
                  "endLine": 87,
                  "endColumn": 62,
                  "snippet": {
                    "text": "#define AUDIT_SERVICE_START     1130    /* Service (daemon) start */\n#define AUDIT_SERVICE_STOP      1131    /* Service (daemon) stop */\n#define AUDIT_GRP_MGMT          1132    /* Group account attr was modified */\n#define AUDIT_GRP_CHAUTHTOK     1133    /* Group acct password or pin changed */\n#define AUDIT_MAC_CHECK         1134    /* User space MAC decision results */\n#define AUDIT_ACCT_LOCK         1135    /* User's account locked by admin */\n#define AUDIT_ACCT_UNLOCK       1136    /* User's account unlocked by admin */\n",
                    "rendered": {
                      "text": "#define AUDIT_SERVICE_START     1130    /* Service (daemon) start */\n#define AUDIT_SERVICE_STOP      1131    /* Service (daemon) stop */\n#define AUDIT_GRP_MGMT          1132    /* Group account attr was modified */\n#define AUDIT_GRP_CHAUTHTOK     1133    /* Group acct password or pin changed */\n#define AUDIT_MAC_CHECK         1134    /* User space MAC decision results */\n#define AUDIT_ACCT_LOCK         1135    /* User's account locked by admin */\n#define AUDIT_ACCT_UNLOCK       1136    /* User's account unlocked by admin */\n",
                      "markdown": "`#define AUDIT_SERVICE_START     1130    /* Service (daemon) start */\n#define AUDIT_SERVICE_STOP      1131    /* Service (daemon) stop */\n#define AUDIT_GRP_MGMT          1132    /* Group account attr was modified */\n#define AUDIT_GRP_CHAUTHTOK     1133    /* Group acct password or pin changed */\n#define AUDIT_MAC_CHECK         1134    /* User space MAC decision results */\n#define AUDIT_ACCT_LOCK         1135    /* User's account locked by admin */\n#define AUDIT_ACCT_UNLOCK       1136    /* User's account unlocked by admin */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit-records.h"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 68,
                  "endLine": 80,
                  "endColumn": 76,
                  "snippet": {
                    "text": "#define AUDIT_USER_CMD          1123    /* User shell command and args */\n#define AUDIT_USER_TTY          1124    /* Non-ICANON TTY input meaning */\n#define AUDIT_CHUSER_ID         1125    /* Changed user ID supplemental data */\n#define AUDIT_GRP_AUTH          1126    /* Authentication for group password */\n#define AUDIT_SYSTEM_BOOT       1127    /* System boot */\n#define AUDIT_SYSTEM_SHUTDOWN   1128    /* System shutdown */\n#define AUDIT_SYSTEM_RUNLEVEL   1129    /* System runlevel change */\n",
                    "rendered": {
                      "text": "#define AUDIT_USER_CMD          1123    /* User shell command and args */\n#define AUDIT_USER_TTY          1124    /* Non-ICANON TTY input meaning */\n#define AUDIT_CHUSER_ID         1125    /* Changed user ID supplemental data */\n#define AUDIT_GRP_AUTH          1126    /* Authentication for group password */\n#define AUDIT_SYSTEM_BOOT       1127    /* System boot */\n#define AUDIT_SYSTEM_SHUTDOWN   1128    /* System shutdown */\n#define AUDIT_SYSTEM_RUNLEVEL   1129    /* System runlevel change */\n",
                      "markdown": "`#define AUDIT_USER_CMD          1123    /* User shell command and args */\n#define AUDIT_USER_TTY          1124    /* Non-ICANON TTY input meaning */\n#define AUDIT_CHUSER_ID         1125    /* Changed user ID supplemental data */\n#define AUDIT_GRP_AUTH          1126    /* Authentication for group password */\n#define AUDIT_SYSTEM_BOOT       1127    /* System boot */\n#define AUDIT_SYSTEM_SHUTDOWN   1128    /* System shutdown */\n#define AUDIT_SYSTEM_RUNLEVEL   1129    /* System runlevel change */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit-records.h"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 53,
                  "endLine": 62,
                  "endColumn": 61,
                  "snippet": {
                    "text": "#define AUDIT_USER_START        1105    /* User session start */\n#define AUDIT_USER_END          1106    /* User session end */\n#define AUDIT_USER_AVC          1107    /* User space avc message */\n#define AUDIT_USER_CHAUTHTOK    1108    /* User acct password or pin changed */\n#define AUDIT_USER_ERR          1109    /* User acct state error */\n#define AUDIT_CRED_REFR         1110    /* User credential refreshed */\n#define AUDIT_USYS_CONFIG       1111    /* User space system config change */\n",
                    "rendered": {
                      "text": "#define AUDIT_USER_START        1105    /* User session start */\n#define AUDIT_USER_END          1106    /* User session end */\n#define AUDIT_USER_AVC          1107    /* User space avc message */\n#define AUDIT_USER_CHAUTHTOK    1108    /* User acct password or pin changed */\n#define AUDIT_USER_ERR          1109    /* User acct state error */\n#define AUDIT_CRED_REFR         1110    /* User credential refreshed */\n#define AUDIT_USYS_CONFIG       1111    /* User space system config change */\n",
                      "markdown": "`#define AUDIT_USER_START        1105    /* User session start */\n#define AUDIT_USER_END          1106    /* User session end */\n#define AUDIT_USER_AVC          1107    /* User space avc message */\n#define AUDIT_USER_CHAUTHTOK    1108    /* User acct password or pin changed */\n#define AUDIT_USER_ERR          1109    /* User acct state error */\n#define AUDIT_CRED_REFR         1110    /* User credential refreshed */\n#define AUDIT_USYS_CONFIG       1111    /* User space system config change */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 685,
                  "startColumn": 100,
                  "endLine": 685,
                  "endColumn": 108,
                  "snippet": {
                    "text": "\t\t\t);\n\t} else\n\t\tsnprintf(buf, sizeof(buf),\n\t\t\"op=%s id=%u old-seuser=%s old-role=%s old-range=%s new-seuser=%s new-role=%s new-range=%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n\t\t\top, id,\n\t\t\told_seuser && strlen(old_seuser) ? old_seuser : \"?\",\n\t\t\told_role && strlen(old_role) ? old_role : \"?\",\n",
                    "rendered": {
                      "text": "\t\t\t);\n\t} else\n\t\tsnprintf(buf, sizeof(buf),\n\t\t\"op=%s id=%u old-seuser=%s old-role=%s old-range=%s new-seuser=%s new-role=%s new-range=%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n\t\t\top, id,\n\t\t\told_seuser && strlen(old_seuser) ? old_seuser : \"?\",\n\t\t\told_role && strlen(old_role) ? old_role : \"?\",\n",
                      "markdown": "`\t\t\t);\n\t} else\n\t\tsnprintf(buf, sizeof(buf),\n\t\t\"op=%s id=%u old-seuser=%s old-role=%s old-range=%s new-seuser=%s new-role=%s new-range=%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n\t\t\top, id,\n\t\t\told_seuser && strlen(old_seuser) ? old_seuser : \"?\",\n\t\t\told_role && strlen(old_role) ? old_role : \"?\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 669,
                  "startColumn": 117,
                  "endLine": 669,
                  "endColumn": 125,
                  "snippet": {
                    "text": "\n\t\tsnprintf(buf, sizeof(buf),\n\t\t\tencoded ?  \"op=%s acct=%s old-seuser=%s old-role=%s old-range=%s new-seuser=%s new-role=%s new-range=%s exe=%s hostname=%s addr=%s terminal=%s res=%s\"\n\t\t\t        : \"op=%s acct=\\\"%s\\\" old-seuser=%s old-role=%s old-range=%s new-seuser=%s new-role=%s new-range=%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n\t\t\top, user,\n\t\t\told_seuser && strlen(old_seuser) ? old_seuser : \"?\",\n\t\t\told_role && strlen(old_role) ? old_role : \"?\",\n",
                    "rendered": {
                      "text": "\n\t\tsnprintf(buf, sizeof(buf),\n\t\t\tencoded ?  \"op=%s acct=%s old-seuser=%s old-role=%s old-range=%s new-seuser=%s new-role=%s new-range=%s exe=%s hostname=%s addr=%s terminal=%s res=%s\"\n\t\t\t        : \"op=%s acct=\\\"%s\\\" old-seuser=%s old-role=%s old-range=%s new-seuser=%s new-role=%s new-range=%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n\t\t\top, user,\n\t\t\told_seuser && strlen(old_seuser) ? old_seuser : \"?\",\n\t\t\told_role && strlen(old_role) ? old_role : \"?\",\n",
                      "markdown": "`\n\t\tsnprintf(buf, sizeof(buf),\n\t\t\tencoded ?  \"op=%s acct=%s old-seuser=%s old-role=%s old-range=%s new-seuser=%s new-role=%s new-range=%s exe=%s hostname=%s addr=%s terminal=%s res=%s\"\n\t\t\t        : \"op=%s acct=\\\"%s\\\" old-seuser=%s old-role=%s old-range=%s new-seuser=%s new-role=%s new-range=%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n\t\t\top, user,\n\t\t\told_seuser && strlen(old_seuser) ? old_seuser : \"?\",\n\t\t\told_role && strlen(old_role) ? old_role : \"?\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 668,
                  "startColumn": 114,
                  "endLine": 668,
                  "endColumn": 122,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tsnprintf(buf, sizeof(buf),\n\t\t\tencoded ?  \"op=%s acct=%s old-seuser=%s old-role=%s old-range=%s new-seuser=%s new-role=%s new-range=%s exe=%s hostname=%s addr=%s terminal=%s res=%s\"\n\t\t\t        : \"op=%s acct=\\\"%s\\\" old-seuser=%s old-role=%s old-range=%s new-seuser=%s new-role=%s new-range=%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n\t\t\top, user,\n\t\t\told_seuser && strlen(old_seuser) ? old_seuser : \"?\",\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\tsnprintf(buf, sizeof(buf),\n\t\t\tencoded ?  \"op=%s acct=%s old-seuser=%s old-role=%s old-range=%s new-seuser=%s new-role=%s new-range=%s exe=%s hostname=%s addr=%s terminal=%s res=%s\"\n\t\t\t        : \"op=%s acct=\\\"%s\\\" old-seuser=%s old-role=%s old-range=%s new-seuser=%s new-role=%s new-range=%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n\t\t\top, user,\n\t\t\told_seuser && strlen(old_seuser) ? old_seuser : \"?\",\n",
                      "markdown": "`\t\t}\n\n\t\tsnprintf(buf, sizeof(buf),\n\t\t\tencoded ?  \"op=%s acct=%s old-seuser=%s old-role=%s old-range=%s new-seuser=%s new-role=%s new-range=%s exe=%s hostname=%s addr=%s terminal=%s res=%s\"\n\t\t\t        : \"op=%s acct=\\\"%s\\\" old-seuser=%s old-role=%s old-range=%s new-seuser=%s new-role=%s new-range=%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n\t\t\top, user,\n\t\t\told_seuser && strlen(old_seuser) ? old_seuser : \"?\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 568,
                  "startColumn": 13,
                  "endLine": 568,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\tsnprintf(buf, sizeof(buf),\n\t    \"%s exe=%s sauid=%d hostname=%s addr=%s terminal=%s\",\n\t\tmessage, exename, auid,\n\t\thostname ? hostname : \"?\",\n\t\taddrbuf,\n\t\ttty ? tty : \"?\"\n\t\t);\n",
                    "rendered": {
                      "text": "\tsnprintf(buf, sizeof(buf),\n\t    \"%s exe=%s sauid=%d hostname=%s addr=%s terminal=%s\",\n\t\tmessage, exename, auid,\n\t\thostname ? hostname : \"?\",\n\t\taddrbuf,\n\t\ttty ? tty : \"?\"\n\t\t);\n",
                      "markdown": "`\tsnprintf(buf, sizeof(buf),\n\t    \"%s exe=%s sauid=%d hostname=%s addr=%s terminal=%s\",\n\t\tmessage, exename, auid,\n\t\thostname ? hostname : \"?\",\n\t\taddrbuf,\n\t\ttty ? tty : \"?\"\n\t\t);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 568,
                  "startColumn": 2,
                  "endLine": 568,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\tsnprintf(buf, sizeof(buf),\n\t    \"%s exe=%s sauid=%d hostname=%s addr=%s terminal=%s\",\n\t\tmessage, exename, auid,\n\t\thostname ? hostname : \"?\",\n\t\taddrbuf,\n\t\ttty ? tty : \"?\"\n\t\t);\n",
                    "rendered": {
                      "text": "\tsnprintf(buf, sizeof(buf),\n\t    \"%s exe=%s sauid=%d hostname=%s addr=%s terminal=%s\",\n\t\tmessage, exename, auid,\n\t\thostname ? hostname : \"?\",\n\t\taddrbuf,\n\t\ttty ? tty : \"?\"\n\t\t);\n",
                      "markdown": "`\tsnprintf(buf, sizeof(buf),\n\t    \"%s exe=%s sauid=%d hostname=%s addr=%s terminal=%s\",\n\t\tmessage, exename, auid,\n\t\thostname ? hostname : \"?\",\n\t\taddrbuf,\n\t\ttty ? tty : \"?\"\n\t\t);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 566,
                  "startColumn": 25,
                  "endLine": 566,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t\ttty = NULL;\n\n\tsnprintf(buf, sizeof(buf),\n\t    \"%s exe=%s sauid=%d hostname=%s addr=%s terminal=%s\",\n\t\tmessage, exename, auid,\n\t\thostname ? hostname : \"?\",\n\t\taddrbuf,\n",
                    "rendered": {
                      "text": "\t\ttty = NULL;\n\n\tsnprintf(buf, sizeof(buf),\n\t    \"%s exe=%s sauid=%d hostname=%s addr=%s terminal=%s\",\n\t\tmessage, exename, auid,\n\t\thostname ? hostname : \"?\",\n\t\taddrbuf,\n",
                      "markdown": "`\t\ttty = NULL;\n\n\tsnprintf(buf, sizeof(buf),\n\t    \"%s exe=%s sauid=%d hostname=%s addr=%s terminal=%s\",\n\t\tmessage, exename, auid,\n\t\thostname ? hostname : \"?\",\n\t\taddrbuf,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 553,
                  "startColumn": 25,
                  "endLine": 553,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n\taddrbuf[0] = 0;\n\tif (addr == NULL || strlen(addr) == 0)\n\t\t_resolve_addr(addrbuf, hostname);\n\telse\n\t\tstrncat(addrbuf, addr, sizeof(addrbuf)-1);\n\n",
                    "rendered": {
                      "text": "\n\taddrbuf[0] = 0;\n\tif (addr == NULL || strlen(addr) == 0)\n\t\t_resolve_addr(addrbuf, hostname);\n\telse\n\t\tstrncat(addrbuf, addr, sizeof(addrbuf)-1);\n\n",
                      "markdown": "`\n\taddrbuf[0] = 0;\n\tif (addr == NULL || strlen(addr) == 0)\n\t\t_resolve_addr(addrbuf, hostname);\n\telse\n\t\tstrncat(addrbuf, addr, sizeof(addrbuf)-1);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 549,
                  "startColumn": 2,
                  "endLine": 549,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n\t/* If hostname is empty string, make it NULL ptr */\n\tif (hostname && *hostname == 0)\n\t\thostname = NULL;\n\n\taddrbuf[0] = 0;\n\tif (addr == NULL || strlen(addr) == 0)\n",
                    "rendered": {
                      "text": "\n\t/* If hostname is empty string, make it NULL ptr */\n\tif (hostname && *hostname == 0)\n\t\thostname = NULL;\n\n\taddrbuf[0] = 0;\n\tif (addr == NULL || strlen(addr) == 0)\n",
                      "markdown": "`\n\t/* If hostname is empty string, make it NULL ptr */\n\tif (hostname && *hostname == 0)\n\t\thostname = NULL;\n\n\taddrbuf[0] = 0;\n\tif (addr == NULL || strlen(addr) == 0)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 548,
                  "startColumn": 18,
                  "endLine": 548,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\treturn 0;\n\n\t/* If hostname is empty string, make it NULL ptr */\n\tif (hostname && *hostname == 0)\n\t\thostname = NULL;\n\n\taddrbuf[0] = 0;\n",
                    "rendered": {
                      "text": "\t\treturn 0;\n\n\t/* If hostname is empty string, make it NULL ptr */\n\tif (hostname && *hostname == 0)\n\t\thostname = NULL;\n\n\taddrbuf[0] = 0;\n",
                      "markdown": "`\t\treturn 0;\n\n\t/* If hostname is empty string, make it NULL ptr */\n\tif (hostname && *hostname == 0)\n\t\thostname = NULL;\n\n\taddrbuf[0] = 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 548,
                  "startColumn": 5,
                  "endLine": 548,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\t\treturn 0;\n\n\t/* If hostname is empty string, make it NULL ptr */\n\tif (hostname && *hostname == 0)\n\t\thostname = NULL;\n\n\taddrbuf[0] = 0;\n",
                    "rendered": {
                      "text": "\t\treturn 0;\n\n\t/* If hostname is empty string, make it NULL ptr */\n\tif (hostname && *hostname == 0)\n\t\thostname = NULL;\n\n\taddrbuf[0] = 0;\n",
                      "markdown": "`\t\treturn 0;\n\n\t/* If hostname is empty string, make it NULL ptr */\n\tif (hostname && *hostname == 0)\n\t\thostname = NULL;\n\n\taddrbuf[0] = 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 536,
                  "startColumn": 13,
                  "endLine": 536,
                  "endColumn": 21,
                  "snippet": {
                    "text": " * It returns the sequence number which is > 0 on success or <= 0 on error.\n */\nint audit_log_user_avc_message(int audit_fd, int type, const char *message,\n\tconst char *hostname, const char *addr, const char *tty, uid_t auid)\n{\n\tchar buf[MAX_AUDIT_MESSAGE_LENGTH];\n\tchar addrbuf[INET6_ADDRSTRLEN];\n",
                    "rendered": {
                      "text": " * It returns the sequence number which is > 0 on success or <= 0 on error.\n */\nint audit_log_user_avc_message(int audit_fd, int type, const char *message,\n\tconst char *hostname, const char *addr, const char *tty, uid_t auid)\n{\n\tchar buf[MAX_AUDIT_MESSAGE_LENGTH];\n\tchar addrbuf[INET6_ADDRSTRLEN];\n",
                      "markdown": "` * It returns the sequence number which is > 0 on success or <= 0 on error.\n */\nint audit_log_user_avc_message(int audit_fd, int type, const char *message,\n\tconst char *hostname, const char *addr, const char *tty, uid_t auid)\n{\n\tchar buf[MAX_AUDIT_MESSAGE_LENGTH];\n\tchar addrbuf[INET6_ADDRSTRLEN];\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 505,
                  "startColumn": 22,
                  "endLine": 505,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t\t);\n\t} else\n\t\tsnprintf(buf, sizeof(buf),\n\t\t\"op=%s id=%u exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n\t\t\top, id, exename,\n\t\t\thost ? host : \"?\",\n\t\t\taddrbuf,\n",
                    "rendered": {
                      "text": "\t\t\t);\n\t} else\n\t\tsnprintf(buf, sizeof(buf),\n\t\t\"op=%s id=%u exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n\t\t\top, id, exename,\n\t\t\thost ? host : \"?\",\n\t\t\taddrbuf,\n",
                      "markdown": "`\t\t\t);\n\t} else\n\t\tsnprintf(buf, sizeof(buf),\n\t\t\"op=%s id=%u exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n\t\t\top, id, exename,\n\t\t\thost ? host : \"?\",\n\t\t\taddrbuf,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 496,
                  "startColumn": 39,
                  "endLine": 496,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n\t\tsnprintf(buf, sizeof(buf),\n\t\t\tencoded ? \"op=%s acct=%s exe=%s hostname=%s addr=%s terminal=%s res=%s\"\n\t\t\t        : \"op=%s acct=\\\"%s\\\" exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n\t\t\top, user, exename,\n\t\t\thost ? host : \"?\",\n\t\t\taddrbuf,\n",
                    "rendered": {
                      "text": "\n\t\tsnprintf(buf, sizeof(buf),\n\t\t\tencoded ? \"op=%s acct=%s exe=%s hostname=%s addr=%s terminal=%s res=%s\"\n\t\t\t        : \"op=%s acct=\\\"%s\\\" exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n\t\t\top, user, exename,\n\t\t\thost ? host : \"?\",\n\t\t\taddrbuf,\n",
                      "markdown": "`\n\t\tsnprintf(buf, sizeof(buf),\n\t\t\tencoded ? \"op=%s acct=%s exe=%s hostname=%s addr=%s terminal=%s res=%s\"\n\t\t\t        : \"op=%s acct=\\\"%s\\\" exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n\t\t\top, user, exename,\n\t\t\thost ? host : \"?\",\n\t\t\taddrbuf,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 495,
                  "startColumn": 35,
                  "endLine": 495,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tsnprintf(buf, sizeof(buf),\n\t\t\tencoded ? \"op=%s acct=%s exe=%s hostname=%s addr=%s terminal=%s res=%s\"\n\t\t\t        : \"op=%s acct=\\\"%s\\\" exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n\t\t\top, user, exename,\n\t\t\thost ? host : \"?\",\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\tsnprintf(buf, sizeof(buf),\n\t\t\tencoded ? \"op=%s acct=%s exe=%s hostname=%s addr=%s terminal=%s res=%s\"\n\t\t\t        : \"op=%s acct=\\\"%s\\\" exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n\t\t\top, user, exename,\n\t\t\thost ? host : \"?\",\n",
                      "markdown": "`\t\t}\n\n\t\tsnprintf(buf, sizeof(buf),\n\t\t\tencoded ? \"op=%s acct=%s exe=%s hostname=%s addr=%s terminal=%s res=%s\"\n\t\t\t        : \"op=%s acct=\\\"%s\\\" exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n\t\t\top, user, exename,\n\t\t\thost ? host : \"?\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 478,
                  "startColumn": 14,
                  "endLine": 478,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\n\t/* Get the local name if we have a real tty */\n\tif (host == NULL && tty)\n\t\thost = _get_hostname(tty);\n\n\tif (name && id == (unsigned int)-1) {\n\t\tchar user[MAX_USER];\n",
                    "rendered": {
                      "text": "\n\t/* Get the local name if we have a real tty */\n\tif (host == NULL && tty)\n\t\thost = _get_hostname(tty);\n\n\tif (name && id == (unsigned int)-1) {\n\t\tchar user[MAX_USER];\n",
                      "markdown": "`\n\t/* Get the local name if we have a real tty */\n\tif (host == NULL && tty)\n\t\thost = _get_hostname(tty);\n\n\tif (name && id == (unsigned int)-1) {\n\t\tchar user[MAX_USER];\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 397,
                  "startColumn": 13,
                  "endLine": 397,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\tsnprintf(buf, sizeof(buf),\n\t\t\"%s comm=%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n\t\tmessage, commname, exename,\n\t\thostname ? hostname : \"?\",\n\t\taddrbuf,\n\t\ttty ? tty : \"?\",\n\t\tsuccess\n",
                    "rendered": {
                      "text": "\tsnprintf(buf, sizeof(buf),\n\t\t\"%s comm=%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n\t\tmessage, commname, exename,\n\t\thostname ? hostname : \"?\",\n\t\taddrbuf,\n\t\ttty ? tty : \"?\",\n\t\tsuccess\n",
                      "markdown": "`\tsnprintf(buf, sizeof(buf),\n\t\t\"%s comm=%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n\t\tmessage, commname, exename,\n\t\thostname ? hostname : \"?\",\n\t\taddrbuf,\n\t\ttty ? tty : \"?\",\n\t\tsuccess\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 397,
                  "startColumn": 2,
                  "endLine": 397,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\tsnprintf(buf, sizeof(buf),\n\t\t\"%s comm=%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n\t\tmessage, commname, exename,\n\t\thostname ? hostname : \"?\",\n\t\taddrbuf,\n\t\ttty ? tty : \"?\",\n\t\tsuccess\n",
                    "rendered": {
                      "text": "\tsnprintf(buf, sizeof(buf),\n\t\t\"%s comm=%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n\t\tmessage, commname, exename,\n\t\thostname ? hostname : \"?\",\n\t\taddrbuf,\n\t\ttty ? tty : \"?\",\n\t\tsuccess\n",
                      "markdown": "`\tsnprintf(buf, sizeof(buf),\n\t\t\"%s comm=%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n\t\tmessage, commname, exename,\n\t\thostname ? hostname : \"?\",\n\t\taddrbuf,\n\t\ttty ? tty : \"?\",\n\t\tsuccess\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 395,
                  "startColumn": 21,
                  "endLine": 395,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\thostname = _get_hostname(tty);\n\n\tsnprintf(buf, sizeof(buf),\n\t\t\"%s comm=%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n\t\tmessage, commname, exename,\n\t\thostname ? hostname : \"?\",\n\t\taddrbuf,\n",
                    "rendered": {
                      "text": "\t\thostname = _get_hostname(tty);\n\n\tsnprintf(buf, sizeof(buf),\n\t\t\"%s comm=%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n\t\tmessage, commname, exename,\n\t\thostname ? hostname : \"?\",\n\t\taddrbuf,\n",
                      "markdown": "`\t\thostname = _get_hostname(tty);\n\n\tsnprintf(buf, sizeof(buf),\n\t\t\"%s comm=%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n\t\tmessage, commname, exename,\n\t\thostname ? hostname : \"?\",\n\t\taddrbuf,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 392,
                  "startColumn": 18,
                  "endLine": 392,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n\t/* Get the local name if we have a real tty */\n\tif (hostname == NULL && tty)\n\t\thostname = _get_hostname(tty);\n\n\tsnprintf(buf, sizeof(buf),\n\t\t\"%s comm=%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n",
                    "rendered": {
                      "text": "\n\t/* Get the local name if we have a real tty */\n\tif (hostname == NULL && tty)\n\t\thostname = _get_hostname(tty);\n\n\tsnprintf(buf, sizeof(buf),\n\t\t\"%s comm=%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n",
                      "markdown": "`\n\t/* Get the local name if we have a real tty */\n\tif (hostname == NULL && tty)\n\t\thostname = _get_hostname(tty);\n\n\tsnprintf(buf, sizeof(buf),\n\t\t\"%s comm=%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 392,
                  "startColumn": 2,
                  "endLine": 392,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n\t/* Get the local name if we have a real tty */\n\tif (hostname == NULL && tty)\n\t\thostname = _get_hostname(tty);\n\n\tsnprintf(buf, sizeof(buf),\n\t\t\"%s comm=%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n",
                    "rendered": {
                      "text": "\n\t/* Get the local name if we have a real tty */\n\tif (hostname == NULL && tty)\n\t\thostname = _get_hostname(tty);\n\n\tsnprintf(buf, sizeof(buf),\n\t\t\"%s comm=%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n",
                      "markdown": "`\n\t/* Get the local name if we have a real tty */\n\tif (hostname == NULL && tty)\n\t\thostname = _get_hostname(tty);\n\n\tsnprintf(buf, sizeof(buf),\n\t\t\"%s comm=%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 391,
                  "startColumn": 5,
                  "endLine": 391,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\t_get_commname(comm, commname, sizeof(commname));\n\n\t/* Get the local name if we have a real tty */\n\tif (hostname == NULL && tty)\n\t\thostname = _get_hostname(tty);\n\n\tsnprintf(buf, sizeof(buf),\n",
                    "rendered": {
                      "text": "\t_get_commname(comm, commname, sizeof(commname));\n\n\t/* Get the local name if we have a real tty */\n\tif (hostname == NULL && tty)\n\t\thostname = _get_hostname(tty);\n\n\tsnprintf(buf, sizeof(buf),\n",
                      "markdown": "`\t_get_commname(comm, commname, sizeof(commname));\n\n\t/* Get the local name if we have a real tty */\n\tif (hostname == NULL && tty)\n\t\thostname = _get_hostname(tty);\n\n\tsnprintf(buf, sizeof(buf),\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 374,
                  "startColumn": 25,
                  "endLine": 374,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t/* See if we can deduce addr */\n\taddrbuf[0] = 0;\n\tif (addr == NULL || strlen(addr) == 0)\n\t\t_resolve_addr(addrbuf, hostname);\n\telse\n\t\tstrncat(addrbuf, addr, sizeof(addrbuf)-1);\n\n",
                    "rendered": {
                      "text": "\t/* See if we can deduce addr */\n\taddrbuf[0] = 0;\n\tif (addr == NULL || strlen(addr) == 0)\n\t\t_resolve_addr(addrbuf, hostname);\n\telse\n\t\tstrncat(addrbuf, addr, sizeof(addrbuf)-1);\n\n",
                      "markdown": "`\t/* See if we can deduce addr */\n\taddrbuf[0] = 0;\n\tif (addr == NULL || strlen(addr) == 0)\n\t\t_resolve_addr(addrbuf, hostname);\n\telse\n\t\tstrncat(addrbuf, addr, sizeof(addrbuf)-1);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 369,
                  "startColumn": 2,
                  "endLine": 369,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n\t/* If hostname is empty string, make it NULL ptr */\n\tif (hostname && *hostname == 0)\n\t\thostname = NULL;\n\n\t/* See if we can deduce addr */\n\taddrbuf[0] = 0;\n",
                    "rendered": {
                      "text": "\n\t/* If hostname is empty string, make it NULL ptr */\n\tif (hostname && *hostname == 0)\n\t\thostname = NULL;\n\n\t/* See if we can deduce addr */\n\taddrbuf[0] = 0;\n",
                      "markdown": "`\n\t/* If hostname is empty string, make it NULL ptr */\n\tif (hostname && *hostname == 0)\n\t\thostname = NULL;\n\n\t/* See if we can deduce addr */\n\taddrbuf[0] = 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 368,
                  "startColumn": 18,
                  "endLine": 368,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\tsuccess = \"failed\";\n\n\t/* If hostname is empty string, make it NULL ptr */\n\tif (hostname && *hostname == 0)\n\t\thostname = NULL;\n\n\t/* See if we can deduce addr */\n",
                    "rendered": {
                      "text": "\t\tsuccess = \"failed\";\n\n\t/* If hostname is empty string, make it NULL ptr */\n\tif (hostname && *hostname == 0)\n\t\thostname = NULL;\n\n\t/* See if we can deduce addr */\n",
                      "markdown": "`\t\tsuccess = \"failed\";\n\n\t/* If hostname is empty string, make it NULL ptr */\n\tif (hostname && *hostname == 0)\n\t\thostname = NULL;\n\n\t/* See if we can deduce addr */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 368,
                  "startColumn": 5,
                  "endLine": 368,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\t\tsuccess = \"failed\";\n\n\t/* If hostname is empty string, make it NULL ptr */\n\tif (hostname && *hostname == 0)\n\t\thostname = NULL;\n\n\t/* See if we can deduce addr */\n",
                    "rendered": {
                      "text": "\t\tsuccess = \"failed\";\n\n\t/* If hostname is empty string, make it NULL ptr */\n\tif (hostname && *hostname == 0)\n\t\thostname = NULL;\n\n\t/* See if we can deduce addr */\n",
                      "markdown": "`\t\tsuccess = \"failed\";\n\n\t/* If hostname is empty string, make it NULL ptr */\n\tif (hostname && *hostname == 0)\n\t\thostname = NULL;\n\n\t/* See if we can deduce addr */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 348,
                  "startColumn": 31,
                  "endLine": 348,
                  "endColumn": 39,
                  "snippet": {
                    "text": " * It returns the sequence number which is > 0 on success or <= 0 on error.\n */\nint audit_log_user_comm_message(int audit_fd, int type, const char *message,\n\tconst char *comm, const char *hostname, const char *addr,\n\tconst char *tty, int result)\n{\n\tchar buf[MAX_AUDIT_MESSAGE_LENGTH];\n",
                    "rendered": {
                      "text": " * It returns the sequence number which is > 0 on success or <= 0 on error.\n */\nint audit_log_user_comm_message(int audit_fd, int type, const char *message,\n\tconst char *comm, const char *hostname, const char *addr,\n\tconst char *tty, int result)\n{\n\tchar buf[MAX_AUDIT_MESSAGE_LENGTH];\n",
                      "markdown": "` * It returns the sequence number which is > 0 on success or <= 0 on error.\n */\nint audit_log_user_comm_message(int audit_fd, int type, const char *message,\n\tconst char *comm, const char *hostname, const char *addr,\n\tconst char *tty, int result)\n{\n\tchar buf[MAX_AUDIT_MESSAGE_LENGTH];\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 317,
                  "startColumn": 13,
                  "endLine": 317,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\tsnprintf(buf, sizeof(buf),\n\t\t\"%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n\t\tmessage, exename,\n\t\thostname ? hostname : \"?\",\n\t\taddrbuf,\n\t\ttty ? tty : \"?\",\n\t\tsuccess\n",
                    "rendered": {
                      "text": "\tsnprintf(buf, sizeof(buf),\n\t\t\"%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n\t\tmessage, exename,\n\t\thostname ? hostname : \"?\",\n\t\taddrbuf,\n\t\ttty ? tty : \"?\",\n\t\tsuccess\n",
                      "markdown": "`\tsnprintf(buf, sizeof(buf),\n\t\t\"%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n\t\tmessage, exename,\n\t\thostname ? hostname : \"?\",\n\t\taddrbuf,\n\t\ttty ? tty : \"?\",\n\t\tsuccess\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 317,
                  "startColumn": 2,
                  "endLine": 317,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\tsnprintf(buf, sizeof(buf),\n\t\t\"%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n\t\tmessage, exename,\n\t\thostname ? hostname : \"?\",\n\t\taddrbuf,\n\t\ttty ? tty : \"?\",\n\t\tsuccess\n",
                    "rendered": {
                      "text": "\tsnprintf(buf, sizeof(buf),\n\t\t\"%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n\t\tmessage, exename,\n\t\thostname ? hostname : \"?\",\n\t\taddrbuf,\n\t\ttty ? tty : \"?\",\n\t\tsuccess\n",
                      "markdown": "`\tsnprintf(buf, sizeof(buf),\n\t\t\"%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n\t\tmessage, exename,\n\t\thostname ? hostname : \"?\",\n\t\taddrbuf,\n\t\ttty ? tty : \"?\",\n\t\tsuccess\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 315,
                  "startColumn": 13,
                  "endLine": 315,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\thostname = _get_hostname(tty);\n\n\tsnprintf(buf, sizeof(buf),\n\t\t\"%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n\t\tmessage, exename,\n\t\thostname ? hostname : \"?\",\n\t\taddrbuf,\n",
                    "rendered": {
                      "text": "\t\thostname = _get_hostname(tty);\n\n\tsnprintf(buf, sizeof(buf),\n\t\t\"%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n\t\tmessage, exename,\n\t\thostname ? hostname : \"?\",\n\t\taddrbuf,\n",
                      "markdown": "`\t\thostname = _get_hostname(tty);\n\n\tsnprintf(buf, sizeof(buf),\n\t\t\"%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n\t\tmessage, exename,\n\t\thostname ? hostname : \"?\",\n\t\taddrbuf,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 312,
                  "startColumn": 18,
                  "endLine": 312,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n\t/* Get the local name if we have a real tty */\n\tif (hostname == NULL && tty)\n\t\thostname = _get_hostname(tty);\n\n\tsnprintf(buf, sizeof(buf),\n\t\t\"%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n",
                    "rendered": {
                      "text": "\n\t/* Get the local name if we have a real tty */\n\tif (hostname == NULL && tty)\n\t\thostname = _get_hostname(tty);\n\n\tsnprintf(buf, sizeof(buf),\n\t\t\"%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n",
                      "markdown": "`\n\t/* Get the local name if we have a real tty */\n\tif (hostname == NULL && tty)\n\t\thostname = _get_hostname(tty);\n\n\tsnprintf(buf, sizeof(buf),\n\t\t\"%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 312,
                  "startColumn": 2,
                  "endLine": 312,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n\t/* Get the local name if we have a real tty */\n\tif (hostname == NULL && tty)\n\t\thostname = _get_hostname(tty);\n\n\tsnprintf(buf, sizeof(buf),\n\t\t\"%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n",
                    "rendered": {
                      "text": "\n\t/* Get the local name if we have a real tty */\n\tif (hostname == NULL && tty)\n\t\thostname = _get_hostname(tty);\n\n\tsnprintf(buf, sizeof(buf),\n\t\t\"%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n",
                      "markdown": "`\n\t/* Get the local name if we have a real tty */\n\tif (hostname == NULL && tty)\n\t\thostname = _get_hostname(tty);\n\n\tsnprintf(buf, sizeof(buf),\n\t\t\"%s exe=%s hostname=%s addr=%s terminal=%s res=%s\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 311,
                  "startColumn": 5,
                  "endLine": 311,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\t\ttty = NULL;\n\n\t/* Get the local name if we have a real tty */\n\tif (hostname == NULL && tty)\n\t\thostname = _get_hostname(tty);\n\n\tsnprintf(buf, sizeof(buf),\n",
                    "rendered": {
                      "text": "\t\ttty = NULL;\n\n\t/* Get the local name if we have a real tty */\n\tif (hostname == NULL && tty)\n\t\thostname = _get_hostname(tty);\n\n\tsnprintf(buf, sizeof(buf),\n",
                      "markdown": "`\t\ttty = NULL;\n\n\t/* Get the local name if we have a real tty */\n\tif (hostname == NULL && tty)\n\t\thostname = _get_hostname(tty);\n\n\tsnprintf(buf, sizeof(buf),\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 296,
                  "startColumn": 25,
                  "endLine": 296,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t/* See if we can deduce addr */\n\taddrbuf[0] = 0;\n\tif (addr == NULL || strlen(addr) == 0)\n\t\t_resolve_addr(addrbuf, hostname);\n\telse\n\t\tstrncat(addrbuf, addr, sizeof(addrbuf)-1);\n\n",
                    "rendered": {
                      "text": "\t/* See if we can deduce addr */\n\taddrbuf[0] = 0;\n\tif (addr == NULL || strlen(addr) == 0)\n\t\t_resolve_addr(addrbuf, hostname);\n\telse\n\t\tstrncat(addrbuf, addr, sizeof(addrbuf)-1);\n\n",
                      "markdown": "`\t/* See if we can deduce addr */\n\taddrbuf[0] = 0;\n\tif (addr == NULL || strlen(addr) == 0)\n\t\t_resolve_addr(addrbuf, hostname);\n\telse\n\t\tstrncat(addrbuf, addr, sizeof(addrbuf)-1);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 291,
                  "startColumn": 2,
                  "endLine": 291,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n\t/* If hostname is empty string, make it NULL ptr */\n\tif (hostname && *hostname == 0)\n\t\thostname = NULL;\n\n\t/* See if we can deduce addr */\n\taddrbuf[0] = 0;\n",
                    "rendered": {
                      "text": "\n\t/* If hostname is empty string, make it NULL ptr */\n\tif (hostname && *hostname == 0)\n\t\thostname = NULL;\n\n\t/* See if we can deduce addr */\n\taddrbuf[0] = 0;\n",
                      "markdown": "`\n\t/* If hostname is empty string, make it NULL ptr */\n\tif (hostname && *hostname == 0)\n\t\thostname = NULL;\n\n\t/* See if we can deduce addr */\n\taddrbuf[0] = 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 290,
                  "startColumn": 18,
                  "endLine": 290,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\tsuccess = \"failed\";\n\n\t/* If hostname is empty string, make it NULL ptr */\n\tif (hostname && *hostname == 0)\n\t\thostname = NULL;\n\n\t/* See if we can deduce addr */\n",
                    "rendered": {
                      "text": "\t\tsuccess = \"failed\";\n\n\t/* If hostname is empty string, make it NULL ptr */\n\tif (hostname && *hostname == 0)\n\t\thostname = NULL;\n\n\t/* See if we can deduce addr */\n",
                      "markdown": "`\t\tsuccess = \"failed\";\n\n\t/* If hostname is empty string, make it NULL ptr */\n\tif (hostname && *hostname == 0)\n\t\thostname = NULL;\n\n\t/* See if we can deduce addr */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 290,
                  "startColumn": 5,
                  "endLine": 290,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\t\tsuccess = \"failed\";\n\n\t/* If hostname is empty string, make it NULL ptr */\n\tif (hostname && *hostname == 0)\n\t\thostname = NULL;\n\n\t/* See if we can deduce addr */\n",
                    "rendered": {
                      "text": "\t\tsuccess = \"failed\";\n\n\t/* If hostname is empty string, make it NULL ptr */\n\tif (hostname && *hostname == 0)\n\t\thostname = NULL;\n\n\t/* See if we can deduce addr */\n",
                      "markdown": "`\t\tsuccess = \"failed\";\n\n\t/* If hostname is empty string, make it NULL ptr */\n\tif (hostname && *hostname == 0)\n\t\thostname = NULL;\n\n\t/* See if we can deduce addr */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 272,
                  "startColumn": 13,
                  "endLine": 272,
                  "endColumn": 21,
                  "snippet": {
                    "text": " * It returns the sequence number which is > 0 on success or <= 0 on error.\n */\nint audit_log_user_message(int audit_fd, int type, const char *message,\n\tconst char *hostname, const char *addr, const char *tty, int result)\n{\n\tchar buf[MAX_AUDIT_MESSAGE_LENGTH];\n\tchar addrbuf[INET6_ADDRSTRLEN];\n",
                    "rendered": {
                      "text": " * It returns the sequence number which is > 0 on success or <= 0 on error.\n */\nint audit_log_user_message(int audit_fd, int type, const char *message,\n\tconst char *hostname, const char *addr, const char *tty, int result)\n{\n\tchar buf[MAX_AUDIT_MESSAGE_LENGTH];\n\tchar addrbuf[INET6_ADDRSTRLEN];\n",
                      "markdown": "` * It returns the sequence number which is > 0 on success or <= 0 on error.\n */\nint audit_log_user_message(int audit_fd, int type, const char *message,\n\tconst char *hostname, const char *addr, const char *tty, int result)\n{\n\tchar buf[MAX_AUDIT_MESSAGE_LENGTH];\n\tchar addrbuf[INET6_ADDRSTRLEN];\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 242,
                  "startColumn": 24,
                  "endLine": 242,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\n#define HOSTLEN 64\nstatic char _host[HOSTLEN] = \"\";\nstatic const char *_get_hostname(const char *ttyn)\n{\n\tif (ttyn && ((strncmp(ttyn, \"pts\", 3) == 0) ||\n\t\t(strncmp(ttyn, \"tty\", 3) == 0) ||\n",
                    "rendered": {
                      "text": "\n#define HOSTLEN 64\nstatic char _host[HOSTLEN] = \"\";\nstatic const char *_get_hostname(const char *ttyn)\n{\n\tif (ttyn && ((strncmp(ttyn, \"pts\", 3) == 0) ||\n\t\t(strncmp(ttyn, \"tty\", 3) == 0) ||\n",
                      "markdown": "`\n#define HOSTLEN 64\nstatic char _host[HOSTLEN] = \"\";\nstatic const char *_get_hostname(const char *ttyn)\n{\n\tif (ttyn && ((strncmp(ttyn, \"pts\", 3) == 0) ||\n\t\t(strncmp(ttyn, \"tty\", 3) == 0) ||\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 33,
                  "endLine": 69,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\te = getaddrinfo(host, NULL, &hints, &ai);\n\tif (e != 0) {\n\t\taudit_msg(LOG_ERR, \n\t\t\t\"resolve_addr: cannot resolve hostname %s (%s)\",\n\t\t\thost, gai_strerror(e));\n\t\treturn;\n\t}\n",
                    "rendered": {
                      "text": "\te = getaddrinfo(host, NULL, &hints, &ai);\n\tif (e != 0) {\n\t\taudit_msg(LOG_ERR, \n\t\t\t\"resolve_addr: cannot resolve hostname %s (%s)\",\n\t\t\thost, gai_strerror(e));\n\t\treturn;\n\t}\n",
                      "markdown": "`\te = getaddrinfo(host, NULL, &hints, &ai);\n\tif (e != 0) {\n\t\taudit_msg(LOG_ERR, \n\t\t\t\"resolve_addr: cannot resolve hostname %s (%s)\",\n\t\t\thost, gai_strerror(e));\n\t\treturn;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.c"
                },
                "region": {
                  "startLine": 755,
                  "endLine": 755,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\twhile (*command == ' ')\n\t\tcommand++;\n\n\tcmd = strdup(command);\n\tif (cmd == NULL)\n\t\treturn -1;\n\n",
                    "rendered": {
                      "text": "\twhile (*command == ' ')\n\t\tcommand++;\n\n\tcmd = strdup(command);\n\tif (cmd == NULL)\n\t\treturn -1;\n\n",
                      "markdown": "`\twhile (*command == ' ')\n\t\tcommand++;\n\n\tcmd = strdup(command);\n\tif (cmd == NULL)\n\t\treturn -1;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.h"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 34,
                  "endLine": 74,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\tconst char *op, const char *name, unsigned int id,\n\tconst char *host, const char *addr, const char *tty, int result) __wur;\nint audit_log_user_avc_message(int audit_fd, int type,\n\tconst char *message, const char *hostname, const char *addr,\n\tconst char *tty, uid_t auid);\nint audit_log_semanage_message(int audit_fd, int type,\n\tconst char *pgname, const char *op, const char *name, unsigned int id,\n",
                    "rendered": {
                      "text": "\tconst char *op, const char *name, unsigned int id,\n\tconst char *host, const char *addr, const char *tty, int result) __wur;\nint audit_log_user_avc_message(int audit_fd, int type,\n\tconst char *message, const char *hostname, const char *addr,\n\tconst char *tty, uid_t auid);\nint audit_log_semanage_message(int audit_fd, int type,\n\tconst char *pgname, const char *op, const char *name, unsigned int id,\n",
                      "markdown": "`\tconst char *op, const char *name, unsigned int id,\n\tconst char *host, const char *addr, const char *tty, int result) __wur;\nint audit_log_user_avc_message(int audit_fd, int type,\n\tconst char *message, const char *hostname, const char *addr,\n\tconst char *tty, uid_t auid);\nint audit_log_semanage_message(int audit_fd, int type,\n\tconst char *pgname, const char *op, const char *name, unsigned int id,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.h"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 52,
                  "endLine": 68,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\tconst char *hostname, const char *addr, const char *tty, int result)\n\t__wur;\nint audit_log_user_comm_message(int audit_fd, int type,\n\tconst char *message, const char *comm, const char *hostname,\n\tconst char *addr, const char *tty, int result) __wur;\nint audit_log_acct_message(int audit_fd, int type, const char *pgname,\n\tconst char *op, const char *name, unsigned int id,\n",
                    "rendered": {
                      "text": "\tconst char *hostname, const char *addr, const char *tty, int result)\n\t__wur;\nint audit_log_user_comm_message(int audit_fd, int type,\n\tconst char *message, const char *comm, const char *hostname,\n\tconst char *addr, const char *tty, int result) __wur;\nint audit_log_acct_message(int audit_fd, int type, const char *pgname,\n\tconst char *op, const char *name, unsigned int id,\n",
                      "markdown": "`\tconst char *hostname, const char *addr, const char *tty, int result)\n\t__wur;\nint audit_log_user_comm_message(int audit_fd, int type,\n\tconst char *message, const char *comm, const char *hostname,\n\tconst char *addr, const char *tty, int result) __wur;\nint audit_log_acct_message(int audit_fd, int type, const char *pgname,\n\tconst char *op, const char *name, unsigned int id,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/audit_logging.h"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 13,
                  "endLine": 65,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t__attr_access ((__read_only__, 2, 3))\n\t__attr_dealloc_free;\nint audit_log_user_message(int audit_fd, int type, const char *message,\n\tconst char *hostname, const char *addr, const char *tty, int result)\n\t__wur;\nint audit_log_user_comm_message(int audit_fd, int type,\n\tconst char *message, const char *comm, const char *hostname,\n",
                    "rendered": {
                      "text": "\t__attr_access ((__read_only__, 2, 3))\n\t__attr_dealloc_free;\nint audit_log_user_message(int audit_fd, int type, const char *message,\n\tconst char *hostname, const char *addr, const char *tty, int result)\n\t__wur;\nint audit_log_user_comm_message(int audit_fd, int type,\n\tconst char *message, const char *comm, const char *hostname,\n",
                      "markdown": "`\t__attr_access ((__read_only__, 2, 3))\n\t__attr_dealloc_free;\nint audit_log_user_message(int audit_fd, int type, const char *message,\n\tconst char *hostname, const char *addr, const char *tty, int result)\n\t__wur;\nint audit_log_user_comm_message(int audit_fd, int type,\n\tconst char *message, const char *comm, const char *hostname,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/libaudit.c"
                },
                "region": {
                  "startLine": 642,
                  "startColumn": 5,
                  "endLine": 642,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\tif (audit_request_status(fd) > 0) {\n\t\tstruct audit_reply rep;\n\t\tint i;\n\t\tint timeout = 40; /* tenths of seconds */\n\t\tstruct pollfd pfd[1];\n\n\t\tpfd[0].fd = fd;\n",
                    "rendered": {
                      "text": "\tif (audit_request_status(fd) > 0) {\n\t\tstruct audit_reply rep;\n\t\tint i;\n\t\tint timeout = 40; /* tenths of seconds */\n\t\tstruct pollfd pfd[1];\n\n\t\tpfd[0].fd = fd;\n",
                      "markdown": "`\tif (audit_request_status(fd) > 0) {\n\t\tstruct audit_reply rep;\n\t\tint i;\n\t\tint timeout = 40; /* tenths of seconds */\n\t\tstruct pollfd pfd[1];\n\n\t\tpfd[0].fd = fd;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/libaudit.c"
                },
                "region": {
                  "startLine": 566,
                  "startColumn": 30,
                  "endLine": 566,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\trc = __audit_send(fd, AUDIT_SET, &s, sizeof(s), &seq);\n\tif (rc < 0)\n\t\taudit_msg(audit_priority(errno),\n\t\t\t\"Error sending backlog wait time actual reset request (%s)\",\n\t\t\tstrerror(-rc));\n#endif\n\treturn rc;\n",
                    "rendered": {
                      "text": "\trc = __audit_send(fd, AUDIT_SET, &s, sizeof(s), &seq);\n\tif (rc < 0)\n\t\taudit_msg(audit_priority(errno),\n\t\t\t\"Error sending backlog wait time actual reset request (%s)\",\n\t\t\tstrerror(-rc));\n#endif\n\treturn rc;\n",
                      "markdown": "`\trc = __audit_send(fd, AUDIT_SET, &s, sizeof(s), &seq);\n\tif (rc < 0)\n\t\taudit_msg(audit_priority(errno),\n\t\t\t\"Error sending backlog wait time actual reset request (%s)\",\n\t\t\tstrerror(-rc));\n#endif\n\treturn rc;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/libaudit.c"
                },
                "region": {
                  "startLine": 383,
                  "startColumn": 5,
                  "endLine": 383,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\tif ((rc = audit_request_status(fd)) > 0) {\n\t\tstruct audit_reply rep;\n\t\tint i;\n\t\tint timeout = 40; /* tenths of seconds */\n\t\tstruct pollfd pfd[1];\n\n\t\tpfd[0].fd = fd;\n",
                    "rendered": {
                      "text": "\tif ((rc = audit_request_status(fd)) > 0) {\n\t\tstruct audit_reply rep;\n\t\tint i;\n\t\tint timeout = 40; /* tenths of seconds */\n\t\tstruct pollfd pfd[1];\n\n\t\tpfd[0].fd = fd;\n",
                      "markdown": "`\tif ((rc = audit_request_status(fd)) > 0) {\n\t\tstruct audit_reply rep;\n\t\tint i;\n\t\tint timeout = 40; /* tenths of seconds */\n\t\tstruct pollfd pfd[1];\n\n\t\tpfd[0].fd = fd;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-common.h"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 25,
                  "endLine": 56,
                  "endColumn": 33,
                  "snippet": {
                    "text": "extern slist *event_node_list;\nextern const char *event_comm;\nextern const char *event_filename;\nextern const char *event_hostname;\nextern const char *event_terminal;\nextern int event_syscall;\nextern int event_machine;\n",
                    "rendered": {
                      "text": "extern slist *event_node_list;\nextern const char *event_comm;\nextern const char *event_filename;\nextern const char *event_hostname;\nextern const char *event_terminal;\nextern int event_syscall;\nextern int event_machine;\n",
                      "markdown": "`extern slist *event_node_list;\nextern const char *event_comm;\nextern const char *event_filename;\nextern const char *event_hostname;\nextern const char *event_terminal;\nextern int event_syscall;\nextern int event_machine;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-parse.c"
                },
                "region": {
                  "startLine": 2603,
                  "startColumn": 6,
                  "endLine": 2603,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\t\t\tif (term == NULL)\n\t\t\t\treturn 1;\n\t\t\t*term = 0;\n\t\t\ts->hostname = strdup(ptr);\n\t\t\t*term = ' ';\n\t\t}\n\t}\n",
                    "rendered": {
                      "text": "\t\t\tif (term == NULL)\n\t\t\t\treturn 1;\n\t\t\t*term = 0;\n\t\t\ts->hostname = strdup(ptr);\n\t\t\t*term = ' ';\n\t\t}\n\t}\n",
                      "markdown": "`\t\t\tif (term == NULL)\n\t\t\t\treturn 1;\n\t\t\t*term = 0;\n\t\t\ts->hostname = strdup(ptr);\n\t\t\t*term = ' ';\n\t\t}\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-parse.c"
                },
                "region": {
                  "startLine": 2595,
                  "startColumn": 11,
                  "endLine": 2595,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\tchar *str, *ptr, *term=n->message;\n\n\t// get hostname\n\tif (event_hostname) {\n\t\tstr = strstr(n->message, \"saddr=\");\n\t\tif (str) {\n\t\t\tptr = str + 6;\n",
                    "rendered": {
                      "text": "\tchar *str, *ptr, *term=n->message;\n\n\t// get hostname\n\tif (event_hostname) {\n\t\tstr = strstr(n->message, \"saddr=\");\n\t\tif (str) {\n\t\t\tptr = str + 6;\n",
                      "markdown": "`\tchar *str, *ptr, *term=n->message;\n\n\t// get hostname\n\tif (event_hostname) {\n\t\tstr = strstr(n->message, \"saddr=\");\n\t\tif (str) {\n\t\t\tptr = str + 6;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-parse.c"
                },
                "region": {
                  "startLine": 1779,
                  "startColumn": 7,
                  "endLine": 1779,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\t\t\t\ts->hostname = NULL;\n\t\t\t} else {\n\t\t\t\tfree(s->hostname);\n\t\t\t\ts->hostname = strdup(name);\n\t\t\t}\n\t\t}\n\t}\n",
                    "rendered": {
                      "text": "\t\t\t\ts->hostname = NULL;\n\t\t\t} else {\n\t\t\t\tfree(s->hostname);\n\t\t\t\ts->hostname = strdup(name);\n\t\t\t}\n\t\t}\n\t}\n",
                      "markdown": "`\t\t\t\ts->hostname = NULL;\n\t\t\t} else {\n\t\t\t\tfree(s->hostname);\n\t\t\t\ts->hostname = strdup(name);\n\t\t\t}\n\t\t}\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-parse.c"
                },
                "region": {
                  "startLine": 1778,
                  "startColumn": 12,
                  "endLine": 1778,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t\t\tfree(s->hostname);\n\t\t\t\ts->hostname = NULL;\n\t\t\t} else {\n\t\t\t\tfree(s->hostname);\n\t\t\t\ts->hostname = strdup(name);\n\t\t\t}\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\tfree(s->hostname);\n\t\t\t\ts->hostname = NULL;\n\t\t\t} else {\n\t\t\t\tfree(s->hostname);\n\t\t\t\ts->hostname = strdup(name);\n\t\t\t}\n\t\t}\n",
                      "markdown": "`\t\t\t\tfree(s->hostname);\n\t\t\t\ts->hostname = NULL;\n\t\t\t} else {\n\t\t\t\tfree(s->hostname);\n\t\t\t\ts->hostname = strdup(name);\n\t\t\t}\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-parse.c"
                },
                "region": {
                  "startLine": 1776,
                  "startColumn": 7,
                  "endLine": 1776,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\t\t\tif (getnameinfo(saddr, len, name, NI_MAXHOST,\n\t\t\t\t\tNULL, 0, NI_NUMERICHOST) ) {\n\t\t\t\tfree(s->hostname);\n\t\t\t\ts->hostname = NULL;\n\t\t\t} else {\n\t\t\t\tfree(s->hostname);\n\t\t\t\ts->hostname = strdup(name);\n",
                    "rendered": {
                      "text": "\t\t\tif (getnameinfo(saddr, len, name, NI_MAXHOST,\n\t\t\t\t\tNULL, 0, NI_NUMERICHOST) ) {\n\t\t\t\tfree(s->hostname);\n\t\t\t\ts->hostname = NULL;\n\t\t\t} else {\n\t\t\t\tfree(s->hostname);\n\t\t\t\ts->hostname = strdup(name);\n",
                      "markdown": "`\t\t\tif (getnameinfo(saddr, len, name, NI_MAXHOST,\n\t\t\t\t\tNULL, 0, NI_NUMERICHOST) ) {\n\t\t\t\tfree(s->hostname);\n\t\t\t\ts->hostname = NULL;\n\t\t\t} else {\n\t\t\t\tfree(s->hostname);\n\t\t\t\ts->hostname = strdup(name);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-parse.c"
                },
                "region": {
                  "startLine": 1775,
                  "startColumn": 12,
                  "endLine": 1775,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t\t}\n\t\t\tif (getnameinfo(saddr, len, name, NI_MAXHOST,\n\t\t\t\t\tNULL, 0, NI_NUMERICHOST) ) {\n\t\t\t\tfree(s->hostname);\n\t\t\t\ts->hostname = NULL;\n\t\t\t} else {\n\t\t\t\tfree(s->hostname);\n",
                    "rendered": {
                      "text": "\t\t\t}\n\t\t\tif (getnameinfo(saddr, len, name, NI_MAXHOST,\n\t\t\t\t\tNULL, 0, NI_NUMERICHOST) ) {\n\t\t\t\tfree(s->hostname);\n\t\t\t\ts->hostname = NULL;\n\t\t\t} else {\n\t\t\t\tfree(s->hostname);\n",
                      "markdown": "`\t\t\t}\n\t\t\tif (getnameinfo(saddr, len, name, NI_MAXHOST,\n\t\t\t\t\tNULL, 0, NI_NUMERICHOST) ) {\n\t\t\t\tfree(s->hostname);\n\t\t\t\ts->hostname = NULL;\n\t\t\t} else {\n\t\t\t\tfree(s->hostname);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-parse.c"
                },
                "region": {
                  "startLine": 1770,
                  "startColumn": 7,
                  "endLine": 1770,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\t\t\tif (!event_hostname) {\n\t\t\t\t// we entered here for files - discard\n\t\t\t\tfree(s->hostname);\n\t\t\t\ts->hostname = NULL;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (getnameinfo(saddr, len, name, NI_MAXHOST,\n",
                    "rendered": {
                      "text": "\t\t\tif (!event_hostname) {\n\t\t\t\t// we entered here for files - discard\n\t\t\t\tfree(s->hostname);\n\t\t\t\ts->hostname = NULL;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (getnameinfo(saddr, len, name, NI_MAXHOST,\n",
                      "markdown": "`\t\t\tif (!event_hostname) {\n\t\t\t\t// we entered here for files - discard\n\t\t\t\tfree(s->hostname);\n\t\t\t\ts->hostname = NULL;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (getnameinfo(saddr, len, name, NI_MAXHOST,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-parse.c"
                },
                "region": {
                  "startLine": 1769,
                  "startColumn": 12,
                  "endLine": 1769,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t\t}\n\t\t\tif (!event_hostname) {\n\t\t\t\t// we entered here for files - discard\n\t\t\t\tfree(s->hostname);\n\t\t\t\ts->hostname = NULL;\n\t\t\t\treturn 0;\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t}\n\t\t\tif (!event_hostname) {\n\t\t\t\t// we entered here for files - discard\n\t\t\t\tfree(s->hostname);\n\t\t\t\ts->hostname = NULL;\n\t\t\t\treturn 0;\n\t\t\t}\n",
                      "markdown": "`\t\t\t}\n\t\t\tif (!event_hostname) {\n\t\t\t\t// we entered here for files - discard\n\t\t\t\tfree(s->hostname);\n\t\t\t\ts->hostname = NULL;\n\t\t\t\treturn 0;\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-parse.c"
                },
                "region": {
                  "startLine": 1767,
                  "startColumn": 14,
                  "endLine": 1767,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\t\t\ts->hostname = NULL;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (!event_hostname) {\n\t\t\t\t// we entered here for files - discard\n\t\t\t\tfree(s->hostname);\n\t\t\t\ts->hostname = NULL;\n",
                    "rendered": {
                      "text": "\t\t\t\ts->hostname = NULL;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (!event_hostname) {\n\t\t\t\t// we entered here for files - discard\n\t\t\t\tfree(s->hostname);\n\t\t\t\ts->hostname = NULL;\n",
                      "markdown": "`\t\t\t\ts->hostname = NULL;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (!event_hostname) {\n\t\t\t\t// we entered here for files - discard\n\t\t\t\tfree(s->hostname);\n\t\t\t\ts->hostname = NULL;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-parse.c"
                },
                "region": {
                  "startLine": 1764,
                  "startColumn": 7,
                  "endLine": 1764,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\t\t\t} else {\n\t\t\t\t// addr family we don't care about\n\t\t\t\tfree(s->hostname);\n\t\t\t\ts->hostname = NULL;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (!event_hostname) {\n",
                    "rendered": {
                      "text": "\t\t\t} else {\n\t\t\t\t// addr family we don't care about\n\t\t\t\tfree(s->hostname);\n\t\t\t\ts->hostname = NULL;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (!event_hostname) {\n",
                      "markdown": "`\t\t\t} else {\n\t\t\t\t// addr family we don't care about\n\t\t\t\tfree(s->hostname);\n\t\t\t\ts->hostname = NULL;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (!event_hostname) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-parse.c"
                },
                "region": {
                  "startLine": 1763,
                  "startColumn": 12,
                  "endLine": 1763,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// addr family we don't care about\n\t\t\t\tfree(s->hostname);\n\t\t\t\ts->hostname = NULL;\n\t\t\t\treturn 0;\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// addr family we don't care about\n\t\t\t\tfree(s->hostname);\n\t\t\t\ts->hostname = NULL;\n\t\t\t\treturn 0;\n\t\t\t}\n",
                      "markdown": "`\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// addr family we don't care about\n\t\t\t\tfree(s->hostname);\n\t\t\t\ts->hostname = NULL;\n\t\t\t\treturn 0;\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-parse.c"
                },
                "region": {
                  "startLine": 1758,
                  "startColumn": 8,
                  "endLine": 1758,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\t\t\t\t\treturn 0;\n\t\t\t\t} else { // No file name - no need for socket\n\t\t\t\t\tfree(s->hostname);\n\t\t\t\t\ts->hostname = NULL;\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t} else {\n",
                    "rendered": {
                      "text": "\t\t\t\t\treturn 0;\n\t\t\t\t} else { // No file name - no need for socket\n\t\t\t\t\tfree(s->hostname);\n\t\t\t\t\ts->hostname = NULL;\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t} else {\n",
                      "markdown": "`\t\t\t\t\treturn 0;\n\t\t\t\t} else { // No file name - no need for socket\n\t\t\t\t\tfree(s->hostname);\n\t\t\t\t\ts->hostname = NULL;\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t} else {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-parse.c"
                },
                "region": {
                  "startLine": 1757,
                  "startColumn": 13,
                  "endLine": 1757,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\t\t\t\ts->hostname = NULL;\n\t\t\t\t\treturn 0;\n\t\t\t\t} else { // No file name - no need for socket\n\t\t\t\t\tfree(s->hostname);\n\t\t\t\t\ts->hostname = NULL;\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\t\ts->hostname = NULL;\n\t\t\t\t\treturn 0;\n\t\t\t\t} else { // No file name - no need for socket\n\t\t\t\t\tfree(s->hostname);\n\t\t\t\t\ts->hostname = NULL;\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n",
                      "markdown": "`\t\t\t\t\ts->hostname = NULL;\n\t\t\t\t\treturn 0;\n\t\t\t\t} else { // No file name - no need for socket\n\t\t\t\t\tfree(s->hostname);\n\t\t\t\t\ts->hostname = NULL;\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-parse.c"
                },
                "region": {
                  "startLine": 1754,
                  "startColumn": 8,
                  "endLine": 1754,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\t\t\t\t\t\tslist_append(s->filename, &sn);\n\t\t\t\t\t}\n\t\t\t\t\tfree(s->hostname);\n\t\t\t\t\ts->hostname = NULL;\n\t\t\t\t\treturn 0;\n\t\t\t\t} else { // No file name - no need for socket\n\t\t\t\t\tfree(s->hostname);\n",
                    "rendered": {
                      "text": "\t\t\t\t\t\tslist_append(s->filename, &sn);\n\t\t\t\t\t}\n\t\t\t\t\tfree(s->hostname);\n\t\t\t\t\ts->hostname = NULL;\n\t\t\t\t\treturn 0;\n\t\t\t\t} else { // No file name - no need for socket\n\t\t\t\t\tfree(s->hostname);\n",
                      "markdown": "`\t\t\t\t\t\tslist_append(s->filename, &sn);\n\t\t\t\t\t}\n\t\t\t\t\tfree(s->hostname);\n\t\t\t\t\ts->hostname = NULL;\n\t\t\t\t\treturn 0;\n\t\t\t\t} else { // No file name - no need for socket\n\t\t\t\t\tfree(s->hostname);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-parse.c"
                },
                "region": {
                  "startLine": 1753,
                  "startColumn": 13,
                  "endLine": 1753,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\t\t\t\t\tsn.hits = 1;\n\t\t\t\t\t\tslist_append(s->filename, &sn);\n\t\t\t\t\t}\n\t\t\t\t\tfree(s->hostname);\n\t\t\t\t\ts->hostname = NULL;\n\t\t\t\t\treturn 0;\n\t\t\t\t} else { // No file name - no need for socket\n",
                    "rendered": {
                      "text": "\t\t\t\t\t\tsn.hits = 1;\n\t\t\t\t\t\tslist_append(s->filename, &sn);\n\t\t\t\t\t}\n\t\t\t\t\tfree(s->hostname);\n\t\t\t\t\ts->hostname = NULL;\n\t\t\t\t\treturn 0;\n\t\t\t\t} else { // No file name - no need for socket\n",
                      "markdown": "`\t\t\t\t\t\tsn.hits = 1;\n\t\t\t\t\t\tslist_append(s->filename, &sn);\n\t\t\t\t\t}\n\t\t\t\t\tfree(s->hostname);\n\t\t\t\t\ts->hostname = NULL;\n\t\t\t\t\treturn 0;\n\t\t\t\t} else { // No file name - no need for socket\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-parse.c"
                },
                "region": {
                  "startLine": 1703,
                  "startColumn": 33,
                  "endLine": 1703,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\t\t\ts->hostname = unescape(str);\n\t\t\tif (s->hostname == NULL)\n\t\t\t\treturn 4;\n\t\t\tsaddr = (struct sockaddr *)s->hostname;\n\t\t\tif (saddr->sa_family == AF_INET) {\n\t\t\t\tif (len < sizeof(struct sockaddr_in)) {\n\t\t\t\t\tfprintf(stderr,\n",
                    "rendered": {
                      "text": "\t\t\ts->hostname = unescape(str);\n\t\t\tif (s->hostname == NULL)\n\t\t\t\treturn 4;\n\t\t\tsaddr = (struct sockaddr *)s->hostname;\n\t\t\tif (saddr->sa_family == AF_INET) {\n\t\t\t\tif (len < sizeof(struct sockaddr_in)) {\n\t\t\t\t\tfprintf(stderr,\n",
                      "markdown": "`\t\t\ts->hostname = unescape(str);\n\t\t\tif (s->hostname == NULL)\n\t\t\t\treturn 4;\n\t\t\tsaddr = (struct sockaddr *)s->hostname;\n\t\t\tif (saddr->sa_family == AF_INET) {\n\t\t\t\tif (len < sizeof(struct sockaddr_in)) {\n\t\t\t\t\tfprintf(stderr,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-parse.c"
                },
                "region": {
                  "startLine": 1701,
                  "startColumn": 10,
                  "endLine": 1701,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t\t\t\tlen /= 2;\n\t\t\t}\n\t\t\ts->hostname = unescape(str);\n\t\t\tif (s->hostname == NULL)\n\t\t\t\treturn 4;\n\t\t\tsaddr = (struct sockaddr *)s->hostname;\n\t\t\tif (saddr->sa_family == AF_INET) {\n",
                    "rendered": {
                      "text": "\t\t\t\tlen /= 2;\n\t\t\t}\n\t\t\ts->hostname = unescape(str);\n\t\t\tif (s->hostname == NULL)\n\t\t\t\treturn 4;\n\t\t\tsaddr = (struct sockaddr *)s->hostname;\n\t\t\tif (saddr->sa_family == AF_INET) {\n",
                      "markdown": "`\t\t\t\tlen /= 2;\n\t\t\t}\n\t\t\ts->hostname = unescape(str);\n\t\t\tif (s->hostname == NULL)\n\t\t\t\treturn 4;\n\t\t\tsaddr = (struct sockaddr *)s->hostname;\n\t\t\tif (saddr->sa_family == AF_INET) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-parse.c"
                },
                "region": {
                  "startLine": 1700,
                  "startColumn": 6,
                  "endLine": 1700,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\t\t\t\t\tlen++;\n\t\t\t\tlen /= 2;\n\t\t\t}\n\t\t\ts->hostname = unescape(str);\n\t\t\tif (s->hostname == NULL)\n\t\t\t\treturn 4;\n\t\t\tsaddr = (struct sockaddr *)s->hostname;\n",
                    "rendered": {
                      "text": "\t\t\t\t\tlen++;\n\t\t\t\tlen /= 2;\n\t\t\t}\n\t\t\ts->hostname = unescape(str);\n\t\t\tif (s->hostname == NULL)\n\t\t\t\treturn 4;\n\t\t\tsaddr = (struct sockaddr *)s->hostname;\n",
                      "markdown": "`\t\t\t\t\tlen++;\n\t\t\t\tlen /= 2;\n\t\t\t}\n\t\t\ts->hostname = unescape(str);\n\t\t\tif (s->hostname == NULL)\n\t\t\t\treturn 4;\n\t\t\tsaddr = (struct sockaddr *)s->hostname;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-parse.c"
                },
                "region": {
                  "startLine": 1682,
                  "startColumn": 11,
                  "endLine": 1682,
                  "endColumn": 19,
                  "snippet": {
                    "text": "{\n\tchar *str;\n\n\tif (event_hostname || event_filename) {\n\t\tstr = strstr(n->message, \"saddr=\");\n\t\tif (str) {\n\t\t\tunsigned int len = 0;\n",
                    "rendered": {
                      "text": "{\n\tchar *str;\n\n\tif (event_hostname || event_filename) {\n\t\tstr = strstr(n->message, \"saddr=\");\n\t\tif (str) {\n\t\t\tunsigned int len = 0;\n",
                      "markdown": "`{\n\tchar *str;\n\n\tif (event_hostname || event_filename) {\n\t\tstr = strstr(n->message, \"saddr=\");\n\t\tif (str) {\n\t\t\tunsigned int len = 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-parse.c"
                },
                "region": {
                  "startLine": 1650,
                  "startColumn": 6,
                  "endLine": 1650,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\t\t\tsaved = *term;\n\t\t\t*term = 0;\n\t\t\tfree(s->hostname);\n\t\t\ts->hostname = strdup(str);\n\t\t\t*term = saved;\n\t\t}\n\t}\n",
                    "rendered": {
                      "text": "\t\t\tsaved = *term;\n\t\t\t*term = 0;\n\t\t\tfree(s->hostname);\n\t\t\ts->hostname = strdup(str);\n\t\t\t*term = saved;\n\t\t}\n\t}\n",
                      "markdown": "`\t\t\tsaved = *term;\n\t\t\t*term = 0;\n\t\t\tfree(s->hostname);\n\t\t\ts->hostname = strdup(str);\n\t\t\t*term = saved;\n\t\t}\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-parse.c"
                },
                "region": {
                  "startLine": 1649,
                  "startColumn": 11,
                  "endLine": 1649,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t\t}\n\t\t\tsaved = *term;\n\t\t\t*term = 0;\n\t\t\tfree(s->hostname);\n\t\t\ts->hostname = strdup(str);\n\t\t\t*term = saved;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t}\n\t\t\tsaved = *term;\n\t\t\t*term = 0;\n\t\t\tfree(s->hostname);\n\t\t\ts->hostname = strdup(str);\n\t\t\t*term = saved;\n\t\t}\n",
                      "markdown": "`\t\t\t}\n\t\t\tsaved = *term;\n\t\t\t*term = 0;\n\t\t\tfree(s->hostname);\n\t\t\ts->hostname = strdup(str);\n\t\t\t*term = saved;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-parse.c"
                },
                "region": {
                  "startLine": 1637,
                  "startColumn": 11,
                  "endLine": 1637,
                  "endColumn": 19,
                  "snippet": {
                    "text": "{\n\tchar *str, saved, *term = n->message;\n\n\tif (event_hostname) {\n\t\tstr = strstr(term, \"addr=\");\n\t\tif (str) {\n\t\t\tstr += 5;\n",
                    "rendered": {
                      "text": "{\n\tchar *str, saved, *term = n->message;\n\n\tif (event_hostname) {\n\t\tstr = strstr(term, \"addr=\");\n\t\tif (str) {\n\t\t\tstr += 5;\n",
                      "markdown": "`{\n\tchar *str, saved, *term = n->message;\n\n\tif (event_hostname) {\n\t\tstr = strstr(term, \"addr=\");\n\t\tif (str) {\n\t\t\tstr += 5;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-parse.c"
                },
                "region": {
                  "startLine": 1248,
                  "startColumn": 8,
                  "endLine": 1248,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\t\t\t\t\tsaved = *term;\n\t\t\t\t\t*term = 0;\n\t\t\t\t\tfree(s->hostname);\n\t\t\t\t\ts->hostname = strdup(str);\n\t\t\t\t\t*term = saved;\n\t\t\t\t}\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\t\tsaved = *term;\n\t\t\t\t\t*term = 0;\n\t\t\t\t\tfree(s->hostname);\n\t\t\t\t\ts->hostname = strdup(str);\n\t\t\t\t\t*term = saved;\n\t\t\t\t}\n\t\t\t}\n",
                      "markdown": "`\t\t\t\t\tsaved = *term;\n\t\t\t\t\t*term = 0;\n\t\t\t\t\tfree(s->hostname);\n\t\t\t\t\ts->hostname = strdup(str);\n\t\t\t\t\t*term = saved;\n\t\t\t\t}\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-parse.c"
                },
                "region": {
                  "startLine": 1247,
                  "startColumn": 13,
                  "endLine": 1247,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\t\t\t\t}\n\t\t\t\t\tsaved = *term;\n\t\t\t\t\t*term = 0;\n\t\t\t\t\tfree(s->hostname);\n\t\t\t\t\ts->hostname = strdup(str);\n\t\t\t\t\t*term = saved;\n\t\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\t\t}\n\t\t\t\t\tsaved = *term;\n\t\t\t\t\t*term = 0;\n\t\t\t\t\tfree(s->hostname);\n\t\t\t\t\ts->hostname = strdup(str);\n\t\t\t\t\t*term = saved;\n\t\t\t\t}\n",
                      "markdown": "`\t\t\t\t\t}\n\t\t\t\t\tsaved = *term;\n\t\t\t\t\t*term = 0;\n\t\t\t\t\tfree(s->hostname);\n\t\t\t\t\ts->hostname = strdup(str);\n\t\t\t\t\t*term = saved;\n\t\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-parse.c"
                },
                "region": {
                  "startLine": 1234,
                  "startColumn": 17,
                  "endLine": 1234,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\n\t\t\t// Lets see if there is something more\n\t\t\t// meaningful in addr\n\t\t\tif (strcmp(s->hostname, \"?\") == 0) {\n\t\t\t\tterm++;\n\t\t\t\tstr = strstr(term, \"addr=\");\n\t\t\t\tif (str) {\n",
                    "rendered": {
                      "text": "\n\t\t\t// Lets see if there is something more\n\t\t\t// meaningful in addr\n\t\t\tif (strcmp(s->hostname, \"?\") == 0) {\n\t\t\t\tterm++;\n\t\t\t\tstr = strstr(term, \"addr=\");\n\t\t\t\tif (str) {\n",
                      "markdown": "`\n\t\t\t// Lets see if there is something more\n\t\t\t// meaningful in addr\n\t\t\tif (strcmp(s->hostname, \"?\") == 0) {\n\t\t\t\tterm++;\n\t\t\t\tstr = strstr(term, \"addr=\");\n\t\t\t\tif (str) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-parse.c"
                },
                "region": {
                  "startLine": 1226,
                  "startColumn": 10,
                  "endLine": 1226,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t\t\tsaved = *term;\n\t\t\t*term = 0;\n\t\t\ts->hostname = strdup(str);\n\t\t\tif (s->hostname == NULL) {\n\t\t\t\tfprintf(stderr, \"Out of memory. Check %s file, %d line\\n\", __FILE__, __LINE__);\n\t\t\t\treturn 33;\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\tsaved = *term;\n\t\t\t*term = 0;\n\t\t\ts->hostname = strdup(str);\n\t\t\tif (s->hostname == NULL) {\n\t\t\t\tfprintf(stderr, \"Out of memory. Check %s file, %d line\\n\", __FILE__, __LINE__);\n\t\t\t\treturn 33;\n\t\t\t}\n",
                      "markdown": "`\t\t\tsaved = *term;\n\t\t\t*term = 0;\n\t\t\ts->hostname = strdup(str);\n\t\t\tif (s->hostname == NULL) {\n\t\t\t\tfprintf(stderr, \"Out of memory. Check %s file, %d line\\n\", __FILE__, __LINE__);\n\t\t\t\treturn 33;\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-parse.c"
                },
                "region": {
                  "startLine": 1225,
                  "startColumn": 6,
                  "endLine": 1225,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\t\t\t}\n\t\t\tsaved = *term;\n\t\t\t*term = 0;\n\t\t\ts->hostname = strdup(str);\n\t\t\tif (s->hostname == NULL) {\n\t\t\t\tfprintf(stderr, \"Out of memory. Check %s file, %d line\\n\", __FILE__, __LINE__);\n\t\t\t\treturn 33;\n",
                    "rendered": {
                      "text": "\t\t\t}\n\t\t\tsaved = *term;\n\t\t\t*term = 0;\n\t\t\ts->hostname = strdup(str);\n\t\t\tif (s->hostname == NULL) {\n\t\t\t\tfprintf(stderr, \"Out of memory. Check %s file, %d line\\n\", __FILE__, __LINE__);\n\t\t\t\treturn 33;\n",
                      "markdown": "`\t\t\t}\n\t\t\tsaved = *term;\n\t\t\t*term = 0;\n\t\t\ts->hostname = strdup(str);\n\t\t\tif (s->hostname == NULL) {\n\t\t\t\tfprintf(stderr, \"Out of memory. Check %s file, %d line\\n\", __FILE__, __LINE__);\n\t\t\t\treturn 33;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-parse.c"
                },
                "region": {
                  "startLine": 1214,
                  "startColumn": 22,
                  "endLine": 1214,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t// get hostname\n\tif (event_hostname) {\n\t\t// dont do this search unless needed\n\t\tstr = strstr(mptr, \"hostname=\");\n\t\tif (str) {\n\t\t\tstr += 9;\n\t\t\tterm = strchr(str, ',');\n",
                    "rendered": {
                      "text": "\t// get hostname\n\tif (event_hostname) {\n\t\t// dont do this search unless needed\n\t\tstr = strstr(mptr, \"hostname=\");\n\t\tif (str) {\n\t\t\tstr += 9;\n\t\t\tterm = strchr(str, ',');\n",
                      "markdown": "`\t// get hostname\n\tif (event_hostname) {\n\t\t// dont do this search unless needed\n\t\tstr = strstr(mptr, \"hostname=\");\n\t\tif (str) {\n\t\t\tstr += 9;\n\t\t\tterm = strchr(str, ',');\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-parse.c"
                },
                "region": {
                  "startLine": 1212,
                  "startColumn": 11,
                  "endLine": 1212,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\tmptr = term;\n\n\t// get hostname\n\tif (event_hostname) {\n\t\t// dont do this search unless needed\n\t\tstr = strstr(mptr, \"hostname=\");\n\t\tif (str) {\n",
                    "rendered": {
                      "text": "\tmptr = term;\n\n\t// get hostname\n\tif (event_hostname) {\n\t\t// dont do this search unless needed\n\t\tstr = strstr(mptr, \"hostname=\");\n\t\tif (str) {\n",
                      "markdown": "`\tmptr = term;\n\n\t// get hostname\n\tif (event_hostname) {\n\t\t// dont do this search unless needed\n\t\tstr = strstr(mptr, \"hostname=\");\n\t\tif (str) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-lol.c"
                },
                "region": {
                  "startLine": 347,
                  "startColumn": 1,
                  "endLine": 347,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\t\tn.mlen = strlen(n.message);\n\t\tn.interp = NULL;\n\t\tn.tlen = n.mlen;\n\t\tfmt = LF_RAW;\n\t}\n\n\t// Now see where this belongs\n",
                    "rendered": {
                      "text": "\t\t\tn.mlen = strlen(n.message);\n\t\tn.interp = NULL;\n\t\tn.tlen = n.mlen;\n\t\tfmt = LF_RAW;\n\t}\n\n\t// Now see where this belongs\n",
                      "markdown": "`\t\t\tn.mlen = strlen(n.message);\n\t\tn.interp = NULL;\n\t\tn.tlen = n.mlen;\n\t\tfmt = LF_RAW;\n\t}\n\n\t// Now see where this belongs\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-lol.c"
                },
                "region": {
                  "startLine": 335,
                  "startColumn": 1,
                  "endLine": 335,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\t\t\tn.tlen = MAX_AUDIT_MESSAGE_LENGTH;\n\t\t} else\n\t\t\tn.tlen = n.mlen;\n\t\tfmt = LF_ENRICHED;\n\t} else {\n\t\tptr = strrchr(n.message, 0x0a);\n\t\tif (ptr) {\n",
                    "rendered": {
                      "text": "\t\t\t\tn.tlen = MAX_AUDIT_MESSAGE_LENGTH;\n\t\t} else\n\t\t\tn.tlen = n.mlen;\n\t\tfmt = LF_ENRICHED;\n\t} else {\n\t\tptr = strrchr(n.message, 0x0a);\n\t\tif (ptr) {\n",
                      "markdown": "`\t\t\t\tn.tlen = MAX_AUDIT_MESSAGE_LENGTH;\n\t\t} else\n\t\t\tn.tlen = n.mlen;\n\t\tfmt = LF_ENRICHED;\n\t} else {\n\t\tptr = strrchr(n.message, 0x0a);\n\t\tif (ptr) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-lol.c"
                },
                "region": {
                  "startLine": 217,
                  "startColumn": 24,
                  "endLine": 217,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t\t\t\t*eptr = 0;\n\t\t\t\tif (str2event(ptr, e)) {\n\t\t\t\t\tfprintf(stderr,\n\t\t\t\t\t  \"Error extracting time stamp (%s)\\n\",\n\t\t\t\t\t\tptr);\n\t\t\t\t\treturn 0;\n\t\t\t\t} else if ((start_time && e->sec < start_time)\n",
                    "rendered": {
                      "text": "\t\t\t\t\t*eptr = 0;\n\t\t\t\tif (str2event(ptr, e)) {\n\t\t\t\t\tfprintf(stderr,\n\t\t\t\t\t  \"Error extracting time stamp (%s)\\n\",\n\t\t\t\t\t\tptr);\n\t\t\t\t\treturn 0;\n\t\t\t\t} else if ((start_time && e->sec < start_time)\n",
                      "markdown": "`\t\t\t\t\t*eptr = 0;\n\t\t\t\tif (str2event(ptr, e)) {\n\t\t\t\t\tfprintf(stderr,\n\t\t\t\t\t  \"Error extracting time stamp (%s)\\n\",\n\t\t\t\t\t\tptr);\n\t\t\t\t\treturn 0;\n\t\t\t\t} else if ((start_time && e->sec < start_time)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-avc.c"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 2,
                  "endLine": 177,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\t\treturn 1;\n\t\t}\n\t\telse\n\t\t\tnode = node->next;\n\t}\n\treturn 0;\n}\n",
                    "rendered": {
                      "text": "\t\t\treturn 1;\n\t\t}\n\t\telse\n\t\t\tnode = node->next;\n\t}\n\treturn 0;\n}\n",
                      "markdown": "`\t\t\treturn 1;\n\t\t}\n\t\telse\n\t\t\tnode = node->next;\n\t}\n\treturn 0;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-avc.c"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 23,
                  "endLine": 169,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\nint alist_find_avc(alist *l)\n{\n        register anode* node = l->head;\n\n\twhile (node) {\n\t\tif (node->avc_result != AVC_UNSET) {\n",
                    "rendered": {
                      "text": "\nint alist_find_avc(alist *l)\n{\n        register anode* node = l->head;\n\n\twhile (node) {\n\t\tif (node->avc_result != AVC_UNSET) {\n",
                      "markdown": "`\nint alist_find_avc(alist *l)\n{\n        register anode* node = l->head;\n\n\twhile (node) {\n\t\tif (node->avc_result != AVC_UNSET) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-avc.c"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 2,
                  "endLine": 150,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\t\treturn 1;\n\t\t}\n\t\telse\n\t\t\tnode = node->next;\n\t}\n\treturn 0;\n}\n",
                    "rendered": {
                      "text": "\t\t\treturn 1;\n\t\t}\n\t\telse\n\t\t\tnode = node->next;\n\t}\n\treturn 0;\n}\n",
                      "markdown": "`\t\t\treturn 1;\n\t\t}\n\t\telse\n\t\t\tnode = node->next;\n\t}\n\treturn 0;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-avc.c"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 23,
                  "endLine": 142,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\nint alist_find_obj(alist *l)\n{\n        register anode* node = l->head;\n\n\twhile (node) {\n\t\tif (node->tcontext) {\n",
                    "rendered": {
                      "text": "\nint alist_find_obj(alist *l)\n{\n        register anode* node = l->head;\n\n\twhile (node) {\n\t\tif (node->tcontext) {\n",
                      "markdown": "`\nint alist_find_obj(alist *l)\n{\n        register anode* node = l->head;\n\n\twhile (node) {\n\t\tif (node->tcontext) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-avc.c"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 2,
                  "endLine": 123,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\t\treturn 1;\n\t\t}\n\t\telse\n\t\t\tnode = node->next;\n\t}\n\treturn 0;\n}\n",
                    "rendered": {
                      "text": "\t\t\treturn 1;\n\t\t}\n\t\telse\n\t\t\tnode = node->next;\n\t}\n\treturn 0;\n}\n",
                      "markdown": "`\t\t\treturn 1;\n\t\t}\n\t\telse\n\t\t\tnode = node->next;\n\t}\n\treturn 0;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-avc.c"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 23,
                  "endLine": 115,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\nint alist_find_subj(alist *l)\n{\n        register anode* node = l->head;\n\n\twhile (node) {\n\t\tif (node->scontext) {\n",
                    "rendered": {
                      "text": "\nint alist_find_subj(alist *l)\n{\n        register anode* node = l->head;\n\n\twhile (node) {\n\t\tif (node->scontext) {\n",
                      "markdown": "`\nint alist_find_subj(alist *l)\n{\n        register anode* node = l->head;\n\n\twhile (node) {\n\t\tif (node->scontext) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-int.c"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 3,
                  "endLine": 107,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t\t// Insert so list is from low to high\n\t\t\tif (cur == l->head) {\n\t\t\t\tl->head = NULL;\n\t\t\t\thead = 1;\n\t\t\t} else\n\t\t\t\tl->cur = prev;\n\t\t\tilist_append(l, num, 1, aux);\n",
                    "rendered": {
                      "text": "\t\t\t// Insert so list is from low to high\n\t\t\tif (cur == l->head) {\n\t\t\t\tl->head = NULL;\n\t\t\t\thead = 1;\n\t\t\t} else\n\t\t\t\tl->cur = prev;\n\t\t\tilist_append(l, num, 1, aux);\n",
                      "markdown": "`\t\t\t// Insert so list is from low to high\n\t\t\tif (cur == l->head) {\n\t\t\t\tl->head = NULL;\n\t\t\t\thead = 1;\n\t\t\t} else\n\t\t\t\tl->cur = prev;\n\t\t\tilist_append(l, num, 1, aux);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-int.c"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 6,
                  "endLine": 102,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\tprev = cur;\n\t\t\tcur = cur->next;\n\t\t} else {\n\t\t\tint head = 0;\n\n\t\t\t// Insert so list is from low to high\n\t\t\tif (cur == l->head) {\n",
                    "rendered": {
                      "text": "\t\t\tprev = cur;\n\t\t\tcur = cur->next;\n\t\t} else {\n\t\t\tint head = 0;\n\n\t\t\t// Insert so list is from low to high\n\t\t\tif (cur == l->head) {\n",
                      "markdown": "`\t\t\tprev = cur;\n\t\t\tcur = cur->next;\n\t\t} else {\n\t\t\tint head = 0;\n\n\t\t\t// Insert so list is from low to high\n\t\t\tif (cur == l->head) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-options.c"
                },
                "region": {
                  "startLine": 797,
                  "startColumn": 10,
                  "endLine": 797,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t\t\telse {\n\t\t\t\tset_detail(D_SUM);\n\t\t\t\tevent_filename = dummy;\n\t\t\t\tevent_hostname = dummy;\n\t\t\t\tevent_terminal = dummy;\n\t\t\t\tevent_exe = dummy;\n\t\t\t\tevent_comm = dummy;\n",
                    "rendered": {
                      "text": "\t\t\telse {\n\t\t\t\tset_detail(D_SUM);\n\t\t\t\tevent_filename = dummy;\n\t\t\t\tevent_hostname = dummy;\n\t\t\t\tevent_terminal = dummy;\n\t\t\t\tevent_exe = dummy;\n\t\t\t\tevent_comm = dummy;\n",
                      "markdown": "`\t\t\telse {\n\t\t\t\tset_detail(D_SUM);\n\t\t\t\tevent_filename = dummy;\n\t\t\t\tevent_hostname = dummy;\n\t\t\t\tevent_terminal = dummy;\n\t\t\t\tevent_exe = dummy;\n\t\t\t\tevent_comm = dummy;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-options.c"
                },
                "region": {
                  "startLine": 545,
                  "startColumn": 11,
                  "endLine": 545,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t\t\tif (!optarg) {\n\t\t\t\t\tset_detail(D_DETAILED);\n\t\t\t\t\tevent_terminal = dummy;\n\t\t\t\t\tevent_hostname = dummy;\n\t\t\t\t\tevent_exe = dummy;\n\t\t\t\t\tevent_comm = dummy;\n\t\t\t\t\tevent_loginuid = 1;\n",
                    "rendered": {
                      "text": "\t\t\t\tif (!optarg) {\n\t\t\t\t\tset_detail(D_DETAILED);\n\t\t\t\t\tevent_terminal = dummy;\n\t\t\t\t\tevent_hostname = dummy;\n\t\t\t\t\tevent_exe = dummy;\n\t\t\t\t\tevent_comm = dummy;\n\t\t\t\t\tevent_loginuid = 1;\n",
                      "markdown": "`\t\t\t\tif (!optarg) {\n\t\t\t\t\tset_detail(D_DETAILED);\n\t\t\t\t\tevent_terminal = dummy;\n\t\t\t\t\tevent_hostname = dummy;\n\t\t\t\t\tevent_exe = dummy;\n\t\t\t\t\tevent_comm = dummy;\n\t\t\t\t\tevent_loginuid = 1;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-options.c"
                },
                "region": {
                  "startLine": 529,
                  "startColumn": 11,
                  "endLine": 529,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t\t\tif (!optarg) {\n\t\t\t\t\tset_detail(D_DETAILED);\n\t\t\t\t\tevent_terminal = dummy;\n\t\t\t\t\tevent_hostname = dummy;\n\t\t\t\t\tevent_comm = dummy;\n\t\t\t\t\tevent_loginuid = 1;\n\t\t\t\t\tevent_tauid = dummy;\n",
                    "rendered": {
                      "text": "\t\t\t\tif (!optarg) {\n\t\t\t\t\tset_detail(D_DETAILED);\n\t\t\t\t\tevent_terminal = dummy;\n\t\t\t\t\tevent_hostname = dummy;\n\t\t\t\t\tevent_comm = dummy;\n\t\t\t\t\tevent_loginuid = 1;\n\t\t\t\t\tevent_tauid = dummy;\n",
                      "markdown": "`\t\t\t\tif (!optarg) {\n\t\t\t\t\tset_detail(D_DETAILED);\n\t\t\t\t\tevent_terminal = dummy;\n\t\t\t\t\tevent_hostname = dummy;\n\t\t\t\t\tevent_comm = dummy;\n\t\t\t\t\tevent_loginuid = 1;\n\t\t\t\t\tevent_tauid = dummy;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-options.c"
                },
                "region": {
                  "startLine": 513,
                  "startColumn": 11,
                  "endLine": 513,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t\t\tif (!optarg) {\n\t\t\t\t\tset_detail(D_DETAILED);\n\t\t\t\t\tevent_terminal = dummy;\n\t\t\t\t\tevent_hostname = dummy;\n\t\t\t\t\tevent_exe = dummy;\n\t\t\t\t\tevent_loginuid = 1;\n\t\t\t\t\tevent_tauid = dummy;\n",
                    "rendered": {
                      "text": "\t\t\t\tif (!optarg) {\n\t\t\t\t\tset_detail(D_DETAILED);\n\t\t\t\t\tevent_terminal = dummy;\n\t\t\t\t\tevent_hostname = dummy;\n\t\t\t\t\tevent_exe = dummy;\n\t\t\t\t\tevent_loginuid = 1;\n\t\t\t\t\tevent_tauid = dummy;\n",
                      "markdown": "`\t\t\t\tif (!optarg) {\n\t\t\t\t\tset_detail(D_DETAILED);\n\t\t\t\t\tevent_terminal = dummy;\n\t\t\t\t\tevent_hostname = dummy;\n\t\t\t\t\tevent_exe = dummy;\n\t\t\t\t\tevent_loginuid = 1;\n\t\t\t\t\tevent_tauid = dummy;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-options.c"
                },
                "region": {
                  "startLine": 496,
                  "startColumn": 11,
                  "endLine": 496,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t\t\tif (!optarg) {\n\t\t\t\t\tset_detail(D_DETAILED);\n\t\t\t\t\tevent_terminal = dummy;\n\t\t\t\t\tevent_hostname = dummy;\n\t\t\t\t\tevent_exe = dummy;\n\t\t\t\t\tevent_uid = 1;\n\t\t\t\t\tevent_loginuid = 1;\n",
                    "rendered": {
                      "text": "\t\t\t\tif (!optarg) {\n\t\t\t\t\tset_detail(D_DETAILED);\n\t\t\t\t\tevent_terminal = dummy;\n\t\t\t\t\tevent_hostname = dummy;\n\t\t\t\t\tevent_exe = dummy;\n\t\t\t\t\tevent_uid = 1;\n\t\t\t\t\tevent_loginuid = 1;\n",
                      "markdown": "`\t\t\t\tif (!optarg) {\n\t\t\t\t\tset_detail(D_DETAILED);\n\t\t\t\t\tevent_terminal = dummy;\n\t\t\t\t\tevent_hostname = dummy;\n\t\t\t\t\tevent_exe = dummy;\n\t\t\t\t\tevent_uid = 1;\n\t\t\t\t\tevent_loginuid = 1;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-options.c"
                },
                "region": {
                  "startLine": 480,
                  "startColumn": 11,
                  "endLine": 480,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t\t\tif (!optarg) {\n\t\t\t\t\tset_detail(D_DETAILED);\n\t\t\t\t\tevent_terminal = dummy;\n\t\t\t\t\tevent_hostname = dummy;\n\t\t\t\t\tevent_exe = dummy;\n\t\t\t\t\tevent_loginuid = 1;\n\t\t\t\t\tevent_tauid = dummy;\n",
                    "rendered": {
                      "text": "\t\t\t\tif (!optarg) {\n\t\t\t\t\tset_detail(D_DETAILED);\n\t\t\t\t\tevent_terminal = dummy;\n\t\t\t\t\tevent_hostname = dummy;\n\t\t\t\t\tevent_exe = dummy;\n\t\t\t\t\tevent_loginuid = 1;\n\t\t\t\t\tevent_tauid = dummy;\n",
                      "markdown": "`\t\t\t\tif (!optarg) {\n\t\t\t\t\tset_detail(D_DETAILED);\n\t\t\t\t\tevent_terminal = dummy;\n\t\t\t\t\tevent_hostname = dummy;\n\t\t\t\t\tevent_exe = dummy;\n\t\t\t\t\tevent_loginuid = 1;\n\t\t\t\t\tevent_tauid = dummy;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-options.c"
                },
                "region": {
                  "startLine": 428,
                  "startColumn": 11,
                  "endLine": 428,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t\telse {\n\t\t\t\tif (!optarg) {\n\t\t\t\t\tset_detail(D_DETAILED);\n\t\t\t\t\tevent_hostname = dummy;\n\t\t\t\t\tevent_loginuid = 1;\n\t\t\t\t\tevent_tauid = dummy;\n\t\t\t\t} else {\n",
                    "rendered": {
                      "text": "\t\t\telse {\n\t\t\t\tif (!optarg) {\n\t\t\t\t\tset_detail(D_DETAILED);\n\t\t\t\t\tevent_hostname = dummy;\n\t\t\t\t\tevent_loginuid = 1;\n\t\t\t\t\tevent_tauid = dummy;\n\t\t\t\t} else {\n",
                      "markdown": "`\t\t\telse {\n\t\t\t\tif (!optarg) {\n\t\t\t\t\tset_detail(D_DETAILED);\n\t\t\t\t\tevent_hostname = dummy;\n\t\t\t\t\tevent_loginuid = 1;\n\t\t\t\t\tevent_tauid = dummy;\n\t\t\t\t} else {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-options.c"
                },
                "region": {
                  "startLine": 371,
                  "startColumn": 10,
                  "endLine": 371,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t\t\telse { \n\t\t\t\tset_detail(D_DETAILED);\n\t\t\t\tevent_exe = dummy;\n\t\t\t\tevent_hostname = dummy;\n\t\t\t\tevent_terminal = dummy;\n\t\t\t\tevent_loginuid = 1;\n\t\t\t\tevent_tauid = dummy;\n",
                    "rendered": {
                      "text": "\t\t\telse { \n\t\t\t\tset_detail(D_DETAILED);\n\t\t\t\tevent_exe = dummy;\n\t\t\t\tevent_hostname = dummy;\n\t\t\t\tevent_terminal = dummy;\n\t\t\t\tevent_loginuid = 1;\n\t\t\t\tevent_tauid = dummy;\n",
                      "markdown": "`\t\t\telse { \n\t\t\t\tset_detail(D_DETAILED);\n\t\t\t\tevent_exe = dummy;\n\t\t\t\tevent_hostname = dummy;\n\t\t\t\tevent_terminal = dummy;\n\t\t\t\tevent_loginuid = 1;\n\t\t\t\tevent_tauid = dummy;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-options.c"
                },
                "region": {
                  "startLine": 359,
                  "startColumn": 10,
                  "endLine": 359,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t\t\telse {\n\t\t\t\tset_detail(D_DETAILED);\n\t\t\t\tevent_exe = dummy;\n\t\t\t\tevent_hostname = dummy;\n\t\t\t\tevent_terminal = dummy;\n\t\t\t\tevent_loginuid = 1;\n\t\t\t\tevent_tauid = dummy;\n",
                    "rendered": {
                      "text": "\t\t\telse {\n\t\t\t\tset_detail(D_DETAILED);\n\t\t\t\tevent_exe = dummy;\n\t\t\t\tevent_hostname = dummy;\n\t\t\t\tevent_terminal = dummy;\n\t\t\t\tevent_loginuid = 1;\n\t\t\t\tevent_tauid = dummy;\n",
                      "markdown": "`\t\t\telse {\n\t\t\t\tset_detail(D_DETAILED);\n\t\t\t\tevent_exe = dummy;\n\t\t\t\tevent_hostname = dummy;\n\t\t\t\tevent_terminal = dummy;\n\t\t\t\tevent_loginuid = 1;\n\t\t\t\tevent_tauid = dummy;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-options.c"
                },
                "region": {
                  "startLine": 305,
                  "startColumn": 10,
                  "endLine": 305,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t\t\telse {\n\t\t\t\tset_detail(D_DETAILED);\n\t\t\t\tevent_exe = dummy;\n\t\t\t\tevent_hostname = dummy;\n\t\t\t\tevent_terminal = dummy;\n\t\t\t\tevent_uid = 1;\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\telse {\n\t\t\t\tset_detail(D_DETAILED);\n\t\t\t\tevent_exe = dummy;\n\t\t\t\tevent_hostname = dummy;\n\t\t\t\tevent_terminal = dummy;\n\t\t\t\tevent_uid = 1;\n\t\t\t}\n",
                      "markdown": "`\t\t\telse {\n\t\t\t\tset_detail(D_DETAILED);\n\t\t\t\tevent_exe = dummy;\n\t\t\t\tevent_hostname = dummy;\n\t\t\t\tevent_terminal = dummy;\n\t\t\t\tevent_uid = 1;\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-options.c"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 18,
                  "endLine": 56,
                  "endColumn": 26,
                  "snippet": {
                    "text": "const char *event_filename = NULL;\nconst char *event_exe = NULL;\nconst char *event_comm = NULL;\nconst char *event_hostname = NULL;\nconst char *event_terminal = NULL;\nconst char *event_subject = NULL;\nconst char *event_object = NULL;\n",
                    "rendered": {
                      "text": "const char *event_filename = NULL;\nconst char *event_exe = NULL;\nconst char *event_comm = NULL;\nconst char *event_hostname = NULL;\nconst char *event_terminal = NULL;\nconst char *event_subject = NULL;\nconst char *event_object = NULL;\n",
                      "markdown": "`const char *event_filename = NULL;\nconst char *event_exe = NULL;\nconst char *event_comm = NULL;\nconst char *event_hostname = NULL;\nconst char *event_terminal = NULL;\nconst char *event_subject = NULL;\nconst char *event_object = NULL;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-options.c"
                },
                "region": {
                  "startLine": 196,
                  "startColumn": 35,
                  "endLine": 196,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\"\\t-k,--key\\t\\t\\tKey report\\n\"\n\t\"\\t-l,--login\\t\\t\\tLogin report\\n\"\n\t\"\\t-m,--mods\\t\\t\\tModification to accounts report\\n\"\n\t\"\\t-ma,--mac\\t\\t\\tMandatory Access Control (MAC) report\\n\"\n\t\"\\t-n,--anomaly\\t\\t\\taNomaly report\\n\"\n\t\"\\t-nc,--no-config\\t\\t\\tDon't include config events\\n\"\n\t\"\\t--node <node name>\\t\\tOnly events from a specific node\\n\"\n",
                    "rendered": {
                      "text": "\t\"\\t-k,--key\\t\\t\\tKey report\\n\"\n\t\"\\t-l,--login\\t\\t\\tLogin report\\n\"\n\t\"\\t-m,--mods\\t\\t\\tModification to accounts report\\n\"\n\t\"\\t-ma,--mac\\t\\t\\tMandatory Access Control (MAC) report\\n\"\n\t\"\\t-n,--anomaly\\t\\t\\taNomaly report\\n\"\n\t\"\\t-nc,--no-config\\t\\t\\tDon't include config events\\n\"\n\t\"\\t--node <node name>\\t\\tOnly events from a specific node\\n\"\n",
                      "markdown": "`\t\"\\t-k,--key\\t\\t\\tKey report\\n\"\n\t\"\\t-l,--login\\t\\t\\tLogin report\\n\"\n\t\"\\t-m,--mods\\t\\t\\tModification to accounts report\\n\"\n\t\"\\t-ma,--mac\\t\\t\\tMandatory Access Control (MAC) report\\n\"\n\t\"\\t-n,--anomaly\\t\\t\\taNomaly report\\n\"\n\t\"\\t-nc,--no-config\\t\\t\\tDon't include config events\\n\"\n\t\"\\t--node <node name>\\t\\tOnly events from a specific node\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-options.c"
                },
                "region": {
                  "startLine": 778,
                  "startColumn": 18,
                  "endLine": 778,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\t\t\tc++;\n\t\t\t} else {\n\t\t\t\tfprintf(stderr,\n\t\t\t\t\t\"End of Event Timeout must be a numeric value, was %s\\n\", optarg);\n\t\t\t\tretval = -1;\n\t\t\t}\n\t\t\tbreak;\n",
                    "rendered": {
                      "text": "\t\t\t\tc++;\n\t\t\t} else {\n\t\t\t\tfprintf(stderr,\n\t\t\t\t\t\"End of Event Timeout must be a numeric value, was %s\\n\", optarg);\n\t\t\t\tretval = -1;\n\t\t\t}\n\t\t\tbreak;\n",
                      "markdown": "`\t\t\t\tc++;\n\t\t\t} else {\n\t\t\t\tfprintf(stderr,\n\t\t\t\t\t\"End of Event Timeout must be a numeric value, was %s\\n\", optarg);\n\t\t\t\tretval = -1;\n\t\t\t}\n\t\t\tbreak;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-options.c"
                },
                "region": {
                  "startLine": 208,
                  "startColumn": 58,
                  "endLine": 208,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\t\"\\t-t,--log\\t\\t\\tLog time range report\\n\"\n\t\"\\t-te,--end [end date] [end time]\\tending date & time for reports\\n\"\n\t\"\\t-tm,--terminal\\t\\t\\tTerMinal name report\\n\"\n\t\"\\t-ts,--start [start date] [start time]\\tstarting data & time for reports\\n\"\n\t\"\\t--tty\\t\\t\\t\\tReport about tty keystrokes\\n\"\n\t\"\\t-u,--user\\t\\t\\tUser name report\\n\"\n\t\"\\t-v,--version\\t\\t\\tVersion\\n\"\n",
                    "rendered": {
                      "text": "\t\"\\t-t,--log\\t\\t\\tLog time range report\\n\"\n\t\"\\t-te,--end [end date] [end time]\\tending date & time for reports\\n\"\n\t\"\\t-tm,--terminal\\t\\t\\tTerMinal name report\\n\"\n\t\"\\t-ts,--start [start date] [start time]\\tstarting data & time for reports\\n\"\n\t\"\\t--tty\\t\\t\\t\\tReport about tty keystrokes\\n\"\n\t\"\\t-u,--user\\t\\t\\tUser name report\\n\"\n\t\"\\t-v,--version\\t\\t\\tVersion\\n\"\n",
                      "markdown": "`\t\"\\t-t,--log\\t\\t\\tLog time range report\\n\"\n\t\"\\t-te,--end [end date] [end time]\\tending date & time for reports\\n\"\n\t\"\\t-tm,--terminal\\t\\t\\tTerMinal name report\\n\"\n\t\"\\t-ts,--start [start date] [start time]\\tstarting data & time for reports\\n\"\n\t\"\\t--tty\\t\\t\\t\\tReport about tty keystrokes\\n\"\n\t\"\\t-u,--user\\t\\t\\tUser name report\\n\"\n\t\"\\t-v,--version\\t\\t\\tVersion\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-options.c"
                },
                "region": {
                  "startLine": 206,
                  "startColumn": 50,
                  "endLine": 206,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\t\"\\t--success\\t\\t\\tonly success events in report\\n\"\n\t\"\\t--summary\\t\\t\\tsorted totals for main object in report\\n\"\n\t\"\\t-t,--log\\t\\t\\tLog time range report\\n\"\n\t\"\\t-te,--end [end date] [end time]\\tending date & time for reports\\n\"\n\t\"\\t-tm,--terminal\\t\\t\\tTerMinal name report\\n\"\n\t\"\\t-ts,--start [start date] [start time]\\tstarting data & time for reports\\n\"\n\t\"\\t--tty\\t\\t\\t\\tReport about tty keystrokes\\n\"\n",
                    "rendered": {
                      "text": "\t\"\\t--success\\t\\t\\tonly success events in report\\n\"\n\t\"\\t--summary\\t\\t\\tsorted totals for main object in report\\n\"\n\t\"\\t-t,--log\\t\\t\\tLog time range report\\n\"\n\t\"\\t-te,--end [end date] [end time]\\tending date & time for reports\\n\"\n\t\"\\t-tm,--terminal\\t\\t\\tTerMinal name report\\n\"\n\t\"\\t-ts,--start [start date] [start time]\\tstarting data & time for reports\\n\"\n\t\"\\t--tty\\t\\t\\t\\tReport about tty keystrokes\\n\"\n",
                      "markdown": "`\t\"\\t--success\\t\\t\\tonly success events in report\\n\"\n\t\"\\t--summary\\t\\t\\tsorted totals for main object in report\\n\"\n\t\"\\t-t,--log\\t\\t\\tLog time range report\\n\"\n\t\"\\t-te,--end [end date] [end time]\\tending date & time for reports\\n\"\n\t\"\\t-tm,--terminal\\t\\t\\tTerMinal name report\\n\"\n\t\"\\t-ts,--start [start date] [start time]\\tstarting data & time for reports\\n\"\n\t\"\\t--tty\\t\\t\\t\\tReport about tty keystrokes\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-options.c"
                },
                "region": {
                  "startLine": 205,
                  "startColumn": 21,
                  "endLine": 205,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\"\\t-s,--syscall\\t\\t\\tSyscall report\\n\"\n\t\"\\t--success\\t\\t\\tonly success events in report\\n\"\n\t\"\\t--summary\\t\\t\\tsorted totals for main object in report\\n\"\n\t\"\\t-t,--log\\t\\t\\tLog time range report\\n\"\n\t\"\\t-te,--end [end date] [end time]\\tending date & time for reports\\n\"\n\t\"\\t-tm,--terminal\\t\\t\\tTerMinal name report\\n\"\n\t\"\\t-ts,--start [start date] [start time]\\tstarting data & time for reports\\n\"\n",
                    "rendered": {
                      "text": "\t\"\\t-s,--syscall\\t\\t\\tSyscall report\\n\"\n\t\"\\t--success\\t\\t\\tonly success events in report\\n\"\n\t\"\\t--summary\\t\\t\\tsorted totals for main object in report\\n\"\n\t\"\\t-t,--log\\t\\t\\tLog time range report\\n\"\n\t\"\\t-te,--end [end date] [end time]\\tending date & time for reports\\n\"\n\t\"\\t-tm,--terminal\\t\\t\\tTerMinal name report\\n\"\n\t\"\\t-ts,--start [start date] [start time]\\tstarting data & time for reports\\n\"\n",
                      "markdown": "`\t\"\\t-s,--syscall\\t\\t\\tSyscall report\\n\"\n\t\"\\t--success\\t\\t\\tonly success events in report\\n\"\n\t\"\\t--summary\\t\\t\\tsorted totals for main object in report\\n\"\n\t\"\\t-t,--log\\t\\t\\tLog time range report\\n\"\n\t\"\\t-te,--end [end date] [end time]\\tending date & time for reports\\n\"\n\t\"\\t-tm,--terminal\\t\\t\\tTerMinal name report\\n\"\n\t\"\\t-ts,--start [start date] [start time]\\tstarting data & time for reports\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditctl-listing.c"
                },
                "region": {
                  "startLine": 326,
                  "startColumn": 27,
                  "endLine": 326,
                  "endColumn": 31,
                  "snippet": {
                    "text": " */\nstatic void print_rule(const struct audit_rule_data *r)\n{\n\tunsigned int i, count = 0, sc = 0;\n\tsize_t boffset = 0;\n\tint mach = -1, watch = is_watch(r);\n\tunsigned long long a0 = 0, a1 = 0;\n",
                    "rendered": {
                      "text": " */\nstatic void print_rule(const struct audit_rule_data *r)\n{\n\tunsigned int i, count = 0, sc = 0;\n\tsize_t boffset = 0;\n\tint mach = -1, watch = is_watch(r);\n\tunsigned long long a0 = 0, a1 = 0;\n",
                      "markdown": "` */\nstatic void print_rule(const struct audit_rule_data *r)\n{\n\tunsigned int i, count = 0, sc = 0;\n\tsize_t boffset = 0;\n\tint mach = -1, watch = is_watch(r);\n\tunsigned long long a0 = 0, a1 = 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditctl-listing.c"
                },
                "region": {
                  "startLine": 328,
                  "startColumn": 15,
                  "endLine": 328,
                  "endColumn": 22,
                  "snippet": {
                    "text": "{\n\tunsigned int i, count = 0, sc = 0;\n\tsize_t boffset = 0;\n\tint mach = -1, watch = is_watch(r);\n\tunsigned long long a0 = 0, a1 = 0;\n\n\tif (!watch) { /* This is syscall auditing */\n",
                    "rendered": {
                      "text": "{\n\tunsigned int i, count = 0, sc = 0;\n\tsize_t boffset = 0;\n\tint mach = -1, watch = is_watch(r);\n\tunsigned long long a0 = 0, a1 = 0;\n\n\tif (!watch) { /* This is syscall auditing */\n",
                      "markdown": "`{\n\tunsigned int i, count = 0, sc = 0;\n\tsize_t boffset = 0;\n\tint mach = -1, watch = is_watch(r);\n\tunsigned long long a0 = 0, a1 = 0;\n\n\tif (!watch) { /* This is syscall auditing */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-match.c"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 11,
                  "endLine": 188,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t\t\t\tif (l->s.hostname == NULL)\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\tif (strmatch(event_hostname,\n\t\t\t\t\t\tl->s.hostname) == 0)\n\t\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif (event_terminal) {\n",
                    "rendered": {
                      "text": "\t\t\t\t\tif (l->s.hostname == NULL)\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\tif (strmatch(event_hostname,\n\t\t\t\t\t\tl->s.hostname) == 0)\n\t\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif (event_terminal) {\n",
                      "markdown": "`\t\t\t\t\tif (l->s.hostname == NULL)\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\tif (strmatch(event_hostname,\n\t\t\t\t\t\tl->s.hostname) == 0)\n\t\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif (event_terminal) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-match.c"
                },
                "region": {
                  "startLine": 187,
                  "startColumn": 24,
                  "endLine": 187,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t\t\t\tif (event_hostname) {\n\t\t\t\t\tif (l->s.hostname == NULL)\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\tif (strmatch(event_hostname,\n\t\t\t\t\t\tl->s.hostname) == 0)\n\t\t\t\t\t\treturn 0;\n\t\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\tif (event_hostname) {\n\t\t\t\t\tif (l->s.hostname == NULL)\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\tif (strmatch(event_hostname,\n\t\t\t\t\t\tl->s.hostname) == 0)\n\t\t\t\t\t\treturn 0;\n\t\t\t\t}\n",
                      "markdown": "`\t\t\t\tif (event_hostname) {\n\t\t\t\t\tif (l->s.hostname == NULL)\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\tif (strmatch(event_hostname,\n\t\t\t\t\t\tl->s.hostname) == 0)\n\t\t\t\t\t\treturn 0;\n\t\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-match.c"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 14,
                  "endLine": 185,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (event_hostname) {\n\t\t\t\t\tif (l->s.hostname == NULL)\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\tif (strmatch(event_hostname,\n\t\t\t\t\t\tl->s.hostname) == 0)\n",
                    "rendered": {
                      "text": "\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (event_hostname) {\n\t\t\t\t\tif (l->s.hostname == NULL)\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\tif (strmatch(event_hostname,\n\t\t\t\t\t\tl->s.hostname) == 0)\n",
                      "markdown": "`\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (event_hostname) {\n\t\t\t\t\tif (l->s.hostname == NULL)\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\tif (strmatch(event_hostname,\n\t\t\t\t\t\tl->s.hostname) == 0)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-match.c"
                },
                "region": {
                  "startLine": 184,
                  "startColumn": 14,
                  "endLine": 184,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (event_hostname) {\n\t\t\t\t\tif (l->s.hostname == NULL)\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\tif (strmatch(event_hostname,\n",
                    "rendered": {
                      "text": "\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (event_hostname) {\n\t\t\t\t\tif (l->s.hostname == NULL)\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\tif (strmatch(event_hostname,\n",
                      "markdown": "`\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (event_hostname) {\n\t\t\t\t\tif (l->s.hostname == NULL)\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\tif (strmatch(event_hostname,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-nvpair.c"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 2,
                  "endLine": 73,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\t\treturn 1;\n\t\t}\n\t\telse\n\t\t\tnode = node->next;\n\t}\n\treturn 0;\n}\n",
                    "rendered": {
                      "text": "\t\t\treturn 1;\n\t\t}\n\t\telse\n\t\t\tnode = node->next;\n\t}\n\treturn 0;\n}\n",
                      "markdown": "`\t\t\treturn 1;\n\t\t}\n\t\telse\n\t\t\tnode = node->next;\n\t}\n\treturn 0;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-nvpair.c"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 24,
                  "endLine": 65,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\nint search_list_find_val(nvlist *l, long val)\n{\n        register nvnode* node = l->head;\n\n\twhile (node) {\n\t\tif (node->val == val) {\n",
                    "rendered": {
                      "text": "\nint search_list_find_val(nvlist *l, long val)\n{\n        register nvnode* node = l->head;\n\n\twhile (node) {\n\t\tif (node->val == val) {\n",
                      "markdown": "`\nint search_list_find_val(nvlist *l, long val)\n{\n        register nvnode* node = l->head;\n\n\twhile (node) {\n\t\tif (node->val == val) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-report.c"
                },
                "region": {
                  "startLine": 702,
                  "startColumn": 15,
                  "endLine": 702,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\tauparse_normalize(au, NORM_OPT_NO_ATTRS);\n\titem = auparse_get_node(au);\n\tif (item) {\n\t\tprintf(\"On %s at %s \", auparse_interpret_field(au), tmp);\n\t\tfree((void *)item);\n\t} else\n\t\tprintf(\"At %s \", tmp);\n",
                    "rendered": {
                      "text": "\tauparse_normalize(au, NORM_OPT_NO_ATTRS);\n\titem = auparse_get_node(au);\n\tif (item) {\n\t\tprintf(\"On %s at %s \", auparse_interpret_field(au), tmp);\n\t\tfree((void *)item);\n\t} else\n\t\tprintf(\"At %s \", tmp);\n",
                      "markdown": "`\tauparse_normalize(au, NORM_OPT_NO_ATTRS);\n\titem = auparse_get_node(au);\n\tif (item) {\n\t\tprintf(\"On %s at %s \", auparse_interpret_field(au), tmp);\n\t\tfree((void *)item);\n\t} else\n\t\tprintf(\"At %s \", tmp);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-report.c"
                },
                "region": {
                  "startLine": 203,
                  "startColumn": 24,
                  "endLine": 203,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t// First locate time stamp.\n\tptr = strchr(str, '(');\n\tif (ptr == NULL) {\n\t\tfprintf(stderr, \"can't find time stamp\\n\");\n\t\treturn;\n\t}\n\n",
                    "rendered": {
                      "text": "\t// First locate time stamp.\n\tptr = strchr(str, '(');\n\tif (ptr == NULL) {\n\t\tfprintf(stderr, \"can't find time stamp\\n\");\n\t\treturn;\n\t}\n\n",
                      "markdown": "`\t// First locate time stamp.\n\tptr = strchr(str, '(');\n\tif (ptr == NULL) {\n\t\tfprintf(stderr, \"can't find time stamp\\n\");\n\t\treturn;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/auparse.c"
                },
                "region": {
                  "startLine": 1572,
                  "startColumn": 20,
                  "endLine": 1572,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\t\tif (cur->status == EBS_EMPTY && cur->l) {\n#ifdef\tLOL_EVENTS_DEBUG01\n\t\t\t\tif (debug) {\n\t\t\t\t\tprintf(\"Freeing at loop\");\n\t\t\t\t\tprint_list_t(cur->l);\n\t\t\t\t}\n#endif\t/* LOL_EVENTS_DEBUG01 */\n",
                    "rendered": {
                      "text": "\t\t\tif (cur->status == EBS_EMPTY && cur->l) {\n#ifdef\tLOL_EVENTS_DEBUG01\n\t\t\t\tif (debug) {\n\t\t\t\t\tprintf(\"Freeing at loop\");\n\t\t\t\t\tprint_list_t(cur->l);\n\t\t\t\t}\n#endif\t/* LOL_EVENTS_DEBUG01 */\n",
                      "markdown": "`\t\t\tif (cur->status == EBS_EMPTY && cur->l) {\n#ifdef\tLOL_EVENTS_DEBUG01\n\t\t\t\tif (debug) {\n\t\t\t\t\tprintf(\"Freeing at loop\");\n\t\t\t\t\tprint_list_t(cur->l);\n\t\t\t\t}\n#endif\t/* LOL_EVENTS_DEBUG01 */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/auparse.c"
                },
                "region": {
                  "startLine": 1534,
                  "startColumn": 19,
                  "endLine": 1534,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\tif (cur->status == EBS_EMPTY && cur->l) {\n#ifdef\tLOL_EVENTS_DEBUG01\n\t\t\tif (debug) {\n\t\t\t\tprintf(\"Freeing at start \");\n\t\t\t\tprint_list_t(cur->l);\n\t\t\t}\n#endif\t/* LOL_EVENTS_DEBUG01 */\n",
                    "rendered": {
                      "text": "\t\tif (cur->status == EBS_EMPTY && cur->l) {\n#ifdef\tLOL_EVENTS_DEBUG01\n\t\t\tif (debug) {\n\t\t\t\tprintf(\"Freeing at start \");\n\t\t\t\tprint_list_t(cur->l);\n\t\t\t}\n#endif\t/* LOL_EVENTS_DEBUG01 */\n",
                      "markdown": "`\t\tif (cur->status == EBS_EMPTY && cur->l) {\n#ifdef\tLOL_EVENTS_DEBUG01\n\t\t\tif (debug) {\n\t\t\t\tprintf(\"Freeing at start \");\n\t\t\t\tprint_list_t(cur->l);\n\t\t\t}\n#endif\t/* LOL_EVENTS_DEBUG01 */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/normalize.c"
                },
                "region": {
                  "startLine": 1500,
                  "startColumn": 20,
                  "endLine": 1500,
                  "endColumn": 28,
                  "snippet": {
                    "text": "                return;\n\n\t// Just pass 0 since simple is 1 record\n\tadd_subj_attr(au, \"hostname\", 0);\n\tadd_subj_attr(au, \"addr\", 0);\n\n\t// Some events have the terminal as the object - skip for them\n",
                    "rendered": {
                      "text": "                return;\n\n\t// Just pass 0 since simple is 1 record\n\tadd_subj_attr(au, \"hostname\", 0);\n\tadd_subj_attr(au, \"addr\", 0);\n\n\t// Some events have the terminal as the object - skip for them\n",
                      "markdown": "`                return;\n\n\t// Just pass 0 since simple is 1 record\n\tadd_subj_attr(au, \"hostname\", 0);\n\tadd_subj_attr(au, \"addr\", 0);\n\n\t// Some events have the terminal as the object - skip for them\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/normalize.c"
                },
                "region": {
                  "startLine": 1418,
                  "startColumn": 31,
                  "endLine": 1418,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\t\t\tD.thing.what = NORM_WHAT_USER_SESSION;\n\t\t\tbreak;\n\t\tcase AUDIT_ANOM_RBAC_INTEGRITY_FAIL:\n\t\t\tf = auparse_find_field(au, \"hostname\");\n\t\t\tD.thing.what = NORM_WHAT_FILESYSTEM;\n\t\t\tbreak;\n\t\tdefault:\n",
                    "rendered": {
                      "text": "\t\t\tD.thing.what = NORM_WHAT_USER_SESSION;\n\t\t\tbreak;\n\t\tcase AUDIT_ANOM_RBAC_INTEGRITY_FAIL:\n\t\t\tf = auparse_find_field(au, \"hostname\");\n\t\t\tD.thing.what = NORM_WHAT_FILESYSTEM;\n\t\t\tbreak;\n\t\tdefault:\n",
                      "markdown": "`\t\t\tD.thing.what = NORM_WHAT_USER_SESSION;\n\t\t\tbreak;\n\t\tcase AUDIT_ANOM_RBAC_INTEGRITY_FAIL:\n\t\t\tf = auparse_find_field(au, \"hostname\");\n\t\t\tD.thing.what = NORM_WHAT_FILESYSTEM;\n\t\t\tbreak;\n\t\tdefault:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/normalize.c"
                },
                "region": {
                  "startLine": 1128,
                  "startColumn": 46,
                  "endLine": 1128,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\n\totype = type = auparse_get_type(au);\n\n\t// All compound events have a syscall record, find it. After this\n\t// loop, type should be syscall, and otype is the original type.\n\t// Traditionally, the first record is the purpose of the event and\n\t// the syscall is added on next to support/enhance information content.\n",
                    "rendered": {
                      "text": "\n\totype = type = auparse_get_type(au);\n\n\t// All compound events have a syscall record, find it. After this\n\t// loop, type should be syscall, and otype is the original type.\n\t// Traditionally, the first record is the purpose of the event and\n\t// the syscall is added on next to support/enhance information content.\n",
                      "markdown": "`\n\totype = type = auparse_get_type(au);\n\n\t// All compound events have a syscall record, find it. After this\n\t// loop, type should be syscall, and otype is the original type.\n\t// Traditionally, the first record is the purpose of the event and\n\t// the syscall is added on next to support/enhance information content.\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/normalize.c"
                },
                "region": {
                  "startLine": 1092,
                  "startColumn": 13,
                  "endLine": 1092,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t\treturn f;\n\t}\n\n\t// Next lets find the individual objects being set\n\tauparse_first_record(au);\n\tf = auparse_find_field(au, \"audit_enabled\");\n\tif (f)\n",
                    "rendered": {
                      "text": "\t\t\treturn f;\n\t}\n\n\t// Next lets find the individual objects being set\n\tauparse_first_record(au);\n\tf = auparse_find_field(au, \"audit_enabled\");\n\tif (f)\n",
                      "markdown": "`\t\t\treturn f;\n\t}\n\n\t// Next lets find the individual objects being set\n\tauparse_first_record(au);\n\tf = auparse_find_field(au, \"audit_enabled\");\n\tif (f)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/lru.c"
                },
                "region": {
                  "startLine": 192,
                  "startColumn": 21,
                  "endLine": 192,
                  "endColumn": 27,
                  "snippet": {
                    "text": "static void insert_before(Queue *queue, QNode *node, QNode *new_node)\n{\n\tsanity_check_queue(queue, \"1 insert_before\");\n\tif (queue == NULL || node == NULL || new_node == NULL)\n\t\treturn;\n\n\tnew_node->prev = node->prev;\n",
                    "rendered": {
                      "text": "static void insert_before(Queue *queue, QNode *node, QNode *new_node)\n{\n\tsanity_check_queue(queue, \"1 insert_before\");\n\tif (queue == NULL || node == NULL || new_node == NULL)\n\t\treturn;\n\n\tnew_node->prev = node->prev;\n",
                      "markdown": "`static void insert_before(Queue *queue, QNode *node, QNode *new_node)\n{\n\tsanity_check_queue(queue, \"1 insert_before\");\n\tif (queue == NULL || node == NULL || new_node == NULL)\n\t\treturn;\n\n\tnew_node->prev = node->prev;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/nvlist.c"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 1,
                  "endLine": 122,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\treturn 0;\n\n\tdo {\n\t\tnode = &l->array[i];\n\t\tif (node->name && strcmp(node->name, name) == 0) {\n\t\t\tl->cur = i;\n\t\t\treturn 1;\n",
                    "rendered": {
                      "text": "\t\treturn 0;\n\n\tdo {\n\t\tnode = &l->array[i];\n\t\tif (node->name && strcmp(node->name, name) == 0) {\n\t\t\tl->cur = i;\n\t\t\treturn 1;\n",
                      "markdown": "`\t\treturn 0;\n\n\tdo {\n\t\tnode = &l->array[i];\n\t\tif (node->name && strcmp(node->name, name) == 0) {\n\t\t\tl->cur = i;\n\t\t\treturn 1;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/nvlist.c"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 8,
                  "endLine": 96,
                  "endColumn": 14,
                  "snippet": {
                    "text": " */\nvoid nvlist_interp_fixup(const nvlist *l)\n{\n\tnvnode* node = &l->array[l->cur];\n\tnode->interp_val = node->val;\n\tnode->val = NULL;\n}\n",
                    "rendered": {
                      "text": " */\nvoid nvlist_interp_fixup(const nvlist *l)\n{\n\tnvnode* node = &l->array[l->cur];\n\tnode->interp_val = node->val;\n\tnode->val = NULL;\n}\n",
                      "markdown": "` */\nvoid nvlist_interp_fixup(const nvlist *l)\n{\n\tnvnode* node = &l->array[l->cur];\n\tnode->interp_val = node->val;\n\tnode->val = NULL;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/Makefile.am"
                },
                "region": {
                  "startLine": 299,
                  "startColumn": 33,
                  "endLine": 299,
                  "endColumn": 40,
                  "snippet": {
                    "text": "gen_mounttabs_h$(BUILD_EXEEXT): CPPFLAGS=$(CPPFLAGS_FOR_BUILD)\ngen_mounttabs_h$(BUILD_EXEEXT): LDFLAGS=$(LDFLAGS_FOR_BUILD)\nmounttabs.h: gen_mounttabs_h Makefile\n\t./gen_mounttabs_h --i2s-transtab mount > $@\n\ngen_nfprototabs_h_SOURCES = ../lib/gen_tables.c ../lib/gen_tables.h nfprototab.h\ngen_nfprototabs_h_CFLAGS = '-DTABLE_H=\"nfprototab.h\"'\n",
                    "rendered": {
                      "text": "gen_mounttabs_h$(BUILD_EXEEXT): CPPFLAGS=$(CPPFLAGS_FOR_BUILD)\ngen_mounttabs_h$(BUILD_EXEEXT): LDFLAGS=$(LDFLAGS_FOR_BUILD)\nmounttabs.h: gen_mounttabs_h Makefile\n\t./gen_mounttabs_h --i2s-transtab mount > $@\n\ngen_nfprototabs_h_SOURCES = ../lib/gen_tables.c ../lib/gen_tables.h nfprototab.h\ngen_nfprototabs_h_CFLAGS = '-DTABLE_H=\"nfprototab.h\"'\n",
                      "markdown": "`gen_mounttabs_h$(BUILD_EXEEXT): CPPFLAGS=$(CPPFLAGS_FOR_BUILD)\ngen_mounttabs_h$(BUILD_EXEEXT): LDFLAGS=$(LDFLAGS_FOR_BUILD)\nmounttabs.h: gen_mounttabs_h Makefile\n\t./gen_mounttabs_h --i2s-transtab mount > $@\n\ngen_nfprototabs_h_SOURCES = ../lib/gen_tables.c ../lib/gen_tables.h nfprototab.h\ngen_nfprototabs_h_CFLAGS = '-DTABLE_H=\"nfprototab.h\"'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/Makefile.am"
                },
                "region": {
                  "startLine": 55,
                  "endLine": 55,
                  "endColumn": 4,
                  "snippet": {
                    "text": "libauparse_la_LDFLAGS = -Wl,-z,relro\n\nmessage.c:\n\tcp ${top_srcdir}/lib/message.c .\n\nBUILT_SOURCES = accesstabs.h captabs.h clocktabs.h clone-flagtabs.h \\\n\tepoll_ctls.h famtabs.h fcntl-cmdtabs.h fsconfigs.h \\\n",
                    "rendered": {
                      "text": "libauparse_la_LDFLAGS = -Wl,-z,relro\n\nmessage.c:\n\tcp ${top_srcdir}/lib/message.c .\n\nBUILT_SOURCES = accesstabs.h captabs.h clocktabs.h clone-flagtabs.h \\\n\tepoll_ctls.h famtabs.h fcntl-cmdtabs.h fsconfigs.h \\\n",
                      "markdown": "`libauparse_la_LDFLAGS = -Wl,-z,relro\n\nmessage.c:\n\tcp ${top_srcdir}/lib/message.c .\n\nBUILT_SOURCES = accesstabs.h captabs.h clocktabs.h clone-flagtabs.h \\\n\tepoll_ctls.h famtabs.h fcntl-cmdtabs.h fsconfigs.h \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/Makefile.am"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 32,
                  "endLine": 2,
                  "endColumn": 37,
                  "snippet": {
                    "text": "# Makefile.am -- \n# Copyright 2006-08,2011-18,2024 Red Hat Inc.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                    "rendered": {
                      "text": "# Makefile.am -- \n# Copyright 2006-08,2011-18,2024 Red Hat Inc.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                      "markdown": "`# Makefile.am -- \n# Copyright 2006-08,2011-18,2024 Red Hat Inc.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/tools/aulast/Makefile.am"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 26,
                  "endLine": 2,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# Makefile.am --\n# Copyright 2008,2010,2015 Red Hat Inc., Durham, North Carolina.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                    "rendered": {
                      "text": "# Makefile.am --\n# Copyright 2008,2010,2015 Red Hat Inc., Durham, North Carolina.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                      "markdown": "`# Makefile.am --\n# Copyright 2008,2010,2015 Red Hat Inc., Durham, North Carolina.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/tools/aulastlog/aulastlog.8"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 170,
                  "endLine": 7,
                  "endColumn": 176,
                  "snippet": {
                    "text": ".SH SYNOPSIS\n.B aulastlog [ options ]\n.SH DESCRIPTION\n\\fBaulastlog\\fP is a program that prints out the last login for all users of the \\fBlocal\\fP machine similar to the way lastlog does. The login-name, port, and last login time will be printed.\n\nIf the user has never logged in, the message \\fB** Never logged in**\\fP will be displayed instead of the port and time.\n\n",
                    "rendered": {
                      "text": ".SH SYNOPSIS\n.B aulastlog [ options ]\n.SH DESCRIPTION\n\\fBaulastlog\\fP is a program that prints out the last login for all users of the \\fBlocal\\fP machine similar to the way lastlog does. The login-name, port, and last login time will be printed.\n\nIf the user has never logged in, the message \\fB** Never logged in**\\fP will be displayed instead of the port and time.\n\n",
                      "markdown": "`.SH SYNOPSIS\n.B aulastlog [ options ]\n.SH DESCRIPTION\n\\fBaulastlog\\fP is a program that prints out the last login for all users of the \\fBlocal\\fP machine similar to the way lastlog does. The login-name, port, and last login time will be printed.\n\nIf the user has never logged in, the message \\fB** Never logged in**\\fP will be displayed instead of the port and time.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/tools/aulastlog/aulastlog.c"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 34,
                  "endLine": 123,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\t\t\t\tconst char *str;\n\n\t\t\t\tlist_update_login(&l, e->sec);\n\t\t\t\tstr = auparse_find_field(au, \"hostname\");\n\t\t\t\tif (str) \n\t\t\t\t\tlist_update_host(&l, str);\n\t\t\t\tstr = auparse_find_field(au, \"terminal\");\n",
                    "rendered": {
                      "text": "\t\t\t\tconst char *str;\n\n\t\t\t\tlist_update_login(&l, e->sec);\n\t\t\t\tstr = auparse_find_field(au, \"hostname\");\n\t\t\t\tif (str) \n\t\t\t\t\tlist_update_host(&l, str);\n\t\t\t\tstr = auparse_find_field(au, \"terminal\");\n",
                      "markdown": "`\t\t\t\tconst char *str;\n\n\t\t\t\tlist_update_login(&l, e->sec);\n\t\t\t\tstr = auparse_find_field(au, \"hostname\");\n\t\t\t\tif (str) \n\t\t\t\t\tlist_update_host(&l, str);\n\t\t\t\tstr = auparse_find_field(au, \"terminal\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/tools/aulastlog/aulastlog-llist.c"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 2,
                  "endLine": 149,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\t\tl->cur = node;\n\t\t\treturn node;\n\t\t} else\n\t\t\tnode = node->next;\n\t}\n\treturn NULL;\n}\n",
                    "rendered": {
                      "text": "\t\t\tl->cur = node;\n\t\t\treturn node;\n\t\t} else\n\t\t\tnode = node->next;\n\t}\n\treturn NULL;\n}\n",
                      "markdown": "`\t\t\tl->cur = node;\n\t\t\treturn node;\n\t\t} else\n\t\t\tnode = node->next;\n\t}\n\treturn NULL;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/tools/aulastlog/aulastlog-llist.c"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 7,
                  "endLine": 143,
                  "endColumn": 13,
                  "snippet": {
                    "text": "{\n        register lnode* node;\n                                                                                \n       \tnode = l->head;\t/* start at the beginning */\n\twhile (node) {\n\t\tif (node->uid == uid) {\n\t\t\tl->cur = node;\n",
                    "rendered": {
                      "text": "{\n        register lnode* node;\n                                                                                \n       \tnode = l->head;\t/* start at the beginning */\n\twhile (node) {\n\t\tif (node->uid == uid) {\n\t\t\tl->cur = node;\n",
                      "markdown": "`{\n        register lnode* node;\n                                                                                \n       \tnode = l->head;\t/* start at the beginning */\n\twhile (node) {\n\t\tif (node->uid == uid) {\n\t\t\tl->cur = node;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/tools/aulastlog/Makefile.am"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 26,
                  "endLine": 2,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# Makefile.am --\n# Copyright 2008,2010,2015 Red Hat Inc., Durham, North Carolina.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                    "rendered": {
                      "text": "# Makefile.am --\n# Copyright 2008,2010,2015 Red Hat Inc., Durham, North Carolina.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                      "markdown": "`# Makefile.am --\n# Copyright 2008,2010,2015 Red Hat Inc., Durham, North Carolina.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/tools/Makefile.am"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 16,
                  "endLine": 2,
                  "endColumn": 21,
                  "snippet": {
                    "text": "# Makefile.am --\n# Copyright 2008 Red Hat Inc.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                    "rendered": {
                      "text": "# Makefile.am --\n# Copyright 2008 Red Hat Inc.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                      "markdown": "`# Makefile.am --\n# Copyright 2008 Red Hat Inc.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/70-einval.rules"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 29,
                  "endLine": 2,
                  "endColumn": 35,
                  "snippet": {
                    "text": "## These are rules are to locate poorly written programs.\n## Its never planned to waste time on a syscall with incorrect parameters\n## This is more of a debugging step than something people should run with\n## in production.\n-a never,exit -F arch=b64 -S rt_sigreturn\n",
                    "rendered": {
                      "text": "## These are rules are to locate poorly written programs.\n## Its never planned to waste time on a syscall with incorrect parameters\n## This is more of a debugging step than something people should run with\n## in production.\n-a never,exit -F arch=b64 -S rt_sigreturn\n",
                      "markdown": "`## These are rules are to locate poorly written programs.\n## Its never planned to waste time on a syscall with incorrect parameters\n## This is more of a debugging step than something people should run with\n## in production.\n-a never,exit -F arch=b64 -S rt_sigreturn\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/31-privileged.rules"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 43,
                  "endLine": 11,
                  "endColumn": 48,
                  "snippet": {
                    "text": "F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /usr/bin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /usr/sbin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n\n",
                    "rendered": {
                      "text": "F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /usr/bin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /usr/sbin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n\n",
                      "markdown": "`F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /usr/bin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /usr/sbin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/31-privileged.rules"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 32,
                  "endLine": 11,
                  "endColumn": 37,
                  "snippet": {
                    "text": " arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /usr/bin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /usr/sbin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n\n",
                    "rendered": {
                      "text": " arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /usr/bin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /usr/sbin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n\n",
                      "markdown": "` arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /usr/bin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /usr/sbin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/31-privileged.rules"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 42,
                  "endLine": 10,
                  "endColumn": 47,
                  "snippet": {
                    "text": "64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /sbin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F path=%s -F arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /usr/bin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /usr/sbin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> pri",
                    "rendered": {
                      "text": "64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /sbin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F path=%s -F arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /usr/bin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /usr/sbin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> pri",
                      "markdown": "`64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /sbin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F path=%s -F arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /usr/bin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /usr/sbin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> pri`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/31-privileged.rules"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 31,
                  "endLine": 10,
                  "endColumn": 36,
                  "snippet": {
                    "text": "s -F arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /sbin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F path=%s -F arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /usr/bin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /usr/sbin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $",
                    "rendered": {
                      "text": "s -F arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /sbin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F path=%s -F arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /usr/bin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /usr/sbin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $",
                      "markdown": "`s -F arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /sbin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F path=%s -F arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /usr/bin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /usr/sbin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/31-privileged.rules"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 39,
                  "endLine": 9,
                  "endColumn": 44,
                  "snippet": {
                    "text": "ath=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> priv.rules\n#filecap /bin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F path=%s -F arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /sbin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F path=%s -F arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /usr/bin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv",
                    "rendered": {
                      "text": "ath=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> priv.rules\n#filecap /bin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F path=%s -F arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /sbin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F path=%s -F arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /usr/bin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv",
                      "markdown": "`ath=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> priv.rules\n#filecap /bin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F path=%s -F arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /sbin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F path=%s -F arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /usr/bin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/31-privileged.rules"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 28,
                  "endLine": 9,
                  "endColumn": 33,
                  "snippet": {
                    "text": "ch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> priv.rules\n#filecap /bin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F path=%s -F arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /sbin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F path=%s -F arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /usr/bin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2",
                    "rendered": {
                      "text": "ch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> priv.rules\n#filecap /bin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F path=%s -F arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /sbin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F path=%s -F arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /usr/bin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2",
                      "markdown": "`ch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> priv.rules\n#filecap /bin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F path=%s -F arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /sbin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F path=%s -F arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /usr/bin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/31-privileged.rules"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 38,
                  "endLine": 8,
                  "endColumn": 43,
                  "snippet": {
                    "text": "erm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> priv.rules\n#find /usr/sbin -type f -perm -04000 2>/dev/null | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> priv.rules\n#filecap /bin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F path=%s -F arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /sbin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F path=%s -F arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.ru",
                    "rendered": {
                      "text": "erm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> priv.rules\n#find /usr/sbin -type f -perm -04000 2>/dev/null | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> priv.rules\n#filecap /bin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F path=%s -F arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /sbin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F path=%s -F arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.ru",
                      "markdown": "`erm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> priv.rules\n#find /usr/sbin -type f -perm -04000 2>/dev/null | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> priv.rules\n#filecap /bin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F path=%s -F arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /sbin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F path=%s -F arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.ru`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/31-privileged.rules"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 27,
                  "endLine": 8,
                  "endColumn": 32,
                  "snippet": {
                    "text": "ath=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> priv.rules\n#find /usr/sbin -type f -perm -04000 2>/dev/null | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> priv.rules\n#filecap /bin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F path=%s -F arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /sbin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F path=%s -F arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }'",
                    "rendered": {
                      "text": "ath=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> priv.rules\n#find /usr/sbin -type f -perm -04000 2>/dev/null | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> priv.rules\n#filecap /bin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F path=%s -F arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /sbin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F path=%s -F arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }'",
                      "markdown": "`ath=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> priv.rules\n#find /usr/sbin -type f -perm -04000 2>/dev/null | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> priv.rules\n#filecap /bin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F path=%s -F arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rules\n#filecap /sbin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F path=%s -F arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }'`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/31-privileged.rules"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 50,
                  "endLine": 7,
                  "endColumn": 55,
                  "snippet": {
                    "text": "id>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> priv.rules\n#find /usr/bin -type f -perm -04000 2>/dev/null | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> priv.rules\n#find /usr/sbin -type f -perm -04000 2>/dev/null | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> priv.rules\n#filecap /bin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F path=%s -F arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rul",
                    "rendered": {
                      "text": "id>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> priv.rules\n#find /usr/bin -type f -perm -04000 2>/dev/null | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> priv.rules\n#find /usr/sbin -type f -perm -04000 2>/dev/null | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> priv.rules\n#filecap /bin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F path=%s -F arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rul",
                      "markdown": "`id>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> priv.rules\n#find /usr/bin -type f -perm -04000 2>/dev/null | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> priv.rules\n#find /usr/sbin -type f -perm -04000 2>/dev/null | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> priv.rules\n#filecap /bin 2>/dev/null | sed '1d' | awk '{ printf \"-a always,exit -F path=%s -F arch=b64 -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $2 }' >> priv.rul`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/31-privileged.rules"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 49,
                  "endLine": 6,
                  "endColumn": 54,
                  "snippet": {
                    "text": "-F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' > priv.rules\n#find /sbin -type f -perm -04000 2>/dev/null | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> priv.rules\n#find /usr/bin -type f -perm -04000 2>/dev/null | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> priv.rules\n#find /usr/sbin -type f -perm -04000 2>/dev/null | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }'",
                    "rendered": {
                      "text": "-F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' > priv.rules\n#find /sbin -type f -perm -04000 2>/dev/null | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> priv.rules\n#find /usr/bin -type f -perm -04000 2>/dev/null | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> priv.rules\n#find /usr/sbin -type f -perm -04000 2>/dev/null | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }'",
                      "markdown": "`-F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' > priv.rules\n#find /sbin -type f -perm -04000 2>/dev/null | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> priv.rules\n#find /usr/bin -type f -perm -04000 2>/dev/null | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> priv.rules\n#find /usr/sbin -type f -perm -04000 2>/dev/null | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }'`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/31-privileged.rules"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 46,
                  "endLine": 5,
                  "endColumn": 51,
                  "snippet": {
                    "text": "mmands to generate the rules (don't forget to\n## add arch=b32 rules, too):\n#find /bin -type f -perm -04000 2>/dev/null | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' > priv.rules\n#find /sbin -type f -perm -04000 2>/dev/null | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> priv.rules\n#find /usr/bin -type f -perm -04000 2>/dev/null | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' ",
                    "rendered": {
                      "text": "mmands to generate the rules (don't forget to\n## add arch=b32 rules, too):\n#find /bin -type f -perm -04000 2>/dev/null | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' > priv.rules\n#find /sbin -type f -perm -04000 2>/dev/null | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> priv.rules\n#find /usr/bin -type f -perm -04000 2>/dev/null | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' ",
                      "markdown": "`mmands to generate the rules (don't forget to\n## add arch=b32 rules, too):\n#find /bin -type f -perm -04000 2>/dev/null | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' > priv.rules\n#find /sbin -type f -perm -04000 2>/dev/null | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> priv.rules\n#find /usr/bin -type f -perm -04000 2>/dev/null | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/31-privileged.rules"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 45,
                  "endLine": 4,
                  "endColumn": 50,
                  "snippet": {
                    "text": "##- Use of privileged commands (unsuccessful and successful)\n## You can run the following commands to generate the rules (don't forget to\n## add arch=b32 rules, too):\n#find /bin -type f -perm -04000 2>/dev/null | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' > priv.rules\n#find /sbin -type f -perm -04000 2>/dev/null | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> p",
                    "rendered": {
                      "text": "##- Use of privileged commands (unsuccessful and successful)\n## You can run the following commands to generate the rules (don't forget to\n## add arch=b32 rules, too):\n#find /bin -type f -perm -04000 2>/dev/null | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' > priv.rules\n#find /sbin -type f -perm -04000 2>/dev/null | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> p",
                      "markdown": "`##- Use of privileged commands (unsuccessful and successful)\n## You can run the following commands to generate the rules (don't forget to\n## add arch=b32 rules, too):\n#find /bin -type f -perm -04000 2>/dev/null | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' > priv.rules\n#find /sbin -type f -perm -04000 2>/dev/null | awk '{ printf \"-a always,exit -F arch=b64 -F path=%s -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged\\n\", $1 }' >> p`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/41-containers.rules"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 2,
                  "endLine": 6,
                  "endColumn": 9,
                  "snippet": {
                    "text": "-a always,exit -F arch=b32 -S clone -F a0&0x7C020000 -F key=container-create\n-a always,exit -F arch=b64 -S clone -F a0&0x7C020000 -F key=container-create\n\n## watch for containers that may change their configuration\n-a always,exit -F arch=b32 -S unshare,setns -F key=container-config\n-a always,exit -F arch=b64 -S unshare,setns -F key=container-config\n\n",
                    "rendered": {
                      "text": "-a always,exit -F arch=b32 -S clone -F a0&0x7C020000 -F key=container-create\n-a always,exit -F arch=b64 -S clone -F a0&0x7C020000 -F key=container-create\n\n## watch for containers that may change their configuration\n-a always,exit -F arch=b32 -S unshare,setns -F key=container-config\n-a always,exit -F arch=b64 -S unshare,setns -F key=container-config\n\n",
                      "markdown": "`-a always,exit -F arch=b32 -S clone -F a0&0x7C020000 -F key=container-create\n-a always,exit -F arch=b64 -S clone -F a0&0x7C020000 -F key=container-create\n\n## watch for containers that may change their configuration\n-a always,exit -F arch=b32 -S unshare,setns -F key=container-config\n-a always,exit -F arch=b64 -S unshare,setns -F key=container-config\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/41-containers.rules"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 2,
                  "endLine": 2,
                  "endColumn": 9,
                  "snippet": {
                    "text": "## Use these rules if you want to log container events\n## watch for container creation\n-a always,exit -F arch=b32 -S clone -F a0&0x7C020000 -F key=container-create\n-a always,exit -F arch=b64 -S clone -F a0&0x7C020000 -F key=container-create\n\n",
                    "rendered": {
                      "text": "## Use these rules if you want to log container events\n## watch for container creation\n-a always,exit -F arch=b32 -S clone -F a0&0x7C020000 -F key=container-create\n-a always,exit -F arch=b64 -S clone -F a0&0x7C020000 -F key=container-create\n\n",
                      "markdown": "`## Use these rules if you want to log container events\n## watch for container creation\n-a always,exit -F arch=b32 -S clone -F a0&0x7C020000 -F key=container-create\n-a always,exit -F arch=b64 -S clone -F a0&0x7C020000 -F key=container-create\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/12-cont-fail.rules"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 18,
                  "endLine": 3,
                  "endColumn": 22,
                  "snippet": {
                    "text": "## This rule will cause auditctl to continue loading rules when it runs\n## across an unsupported field or a rule with a syntax error however it will\n## report an error at exit. The normal action is to report the line and\n## issue with the rule and exit immediately with an error to get the admin's\n## attention to fix the rules.\n\n",
                    "rendered": {
                      "text": "## This rule will cause auditctl to continue loading rules when it runs\n## across an unsupported field or a rule with a syntax error however it will\n## report an error at exit. The normal action is to report the line and\n## issue with the rule and exit immediately with an error to get the admin's\n## attention to fix the rules.\n\n",
                      "markdown": "`## This rule will cause auditctl to continue loading rules when it runs\n## across an unsupported field or a rule with a syntax error however it will\n## report an error at exit. The normal action is to report the line and\n## issue with the rule and exit immediately with an error to get the admin's\n## attention to fix the rules.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/Makefile.am"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 19,
                  "endLine": 2,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# Makefile.am --\n# Copyright 2016-19 Red Hat Inc.\n# All Rights Reserved.\n#\n# This program is free software; you can redistribute it and/or modify\n",
                    "rendered": {
                      "text": "# Makefile.am --\n# Copyright 2016-19 Red Hat Inc.\n# All Rights Reserved.\n#\n# This program is free software; you can redistribute it and/or modify\n",
                      "markdown": "`# Makefile.am --\n# Copyright 2016-19 Red Hat Inc.\n# All Rights Reserved.\n#\n# This program is free software; you can redistribute it and/or modify\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/autogen.sh"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 24,
                  "endLine": 5,
                  "endColumn": 3,
                  "snippet": {
                    "text": "#! /bin/sh\nset -x -e\n# --no-recursive is available only in recent autoconf versions\nautoreconf -fv --install\ncp INSTALL.tmp INSTALL\n",
                    "rendered": {
                      "text": "#! /bin/sh\nset -x -e\n# --no-recursive is available only in recent autoconf versions\nautoreconf -fv --install\ncp INSTALL.tmp INSTALL\n",
                      "markdown": "`#! /bin/sh\nset -x -e\n# --no-recursive is available only in recent autoconf versions\nautoreconf -fv --install\ncp INSTALL.tmp INSTALL\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/COPYING.LIB"
                },
                "region": {
                  "startLine": 476,
                  "startColumn": 4,
                  "endLine": 476,
                  "endColumn": 8,
                  "snippet": {
                    "text": "  To apply these terms, attach the following notices to the library.\nIt is safest to attach them to the start of each source file to most\neffectively convey the exclusion of warranty; and each file should\nhave at least the \"copyright\" line and a pointer to where the full\nnotice is found.\n\n\n",
                    "rendered": {
                      "text": "  To apply these terms, attach the following notices to the library.\nIt is safest to attach them to the start of each source file to most\neffectively convey the exclusion of warranty; and each file should\nhave at least the \"copyright\" line and a pointer to where the full\nnotice is found.\n\n\n",
                      "markdown": "`  To apply these terms, attach the following notices to the library.\nIt is safest to attach them to the start of each source file to most\neffectively convey the exclusion of warranty; and each file should\nhave at least the \"copyright\" line and a pointer to where the full\nnotice is found.\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/COPYING.LIB"
                },
                "region": {
                  "startLine": 385,
                  "startColumn": 30,
                  "endLine": 385,
                  "endColumn": 34,
                  "snippet": {
                    "text": "excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n",
                    "rendered": {
                      "text": "excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n",
                      "markdown": "`excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/COPYING.LIB"
                },
                "region": {
                  "startLine": 310,
                  "startColumn": 57,
                  "endLine": 311,
                  "snippet": {
                    "text": "    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n",
                    "rendered": {
                      "text": "    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n",
                      "markdown": "`    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/COPYING.LIB"
                },
                "region": {
                  "startLine": 303,
                  "startColumn": 55,
                  "endLine": 303,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n",
                    "rendered": {
                      "text": "    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n",
                      "markdown": "`    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/COPYING.LIB"
                },
                "region": {
                  "startLine": 207,
                  "startColumn": 21,
                  "endLine": 207,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\n",
                    "rendered": {
                      "text": "\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\n",
                      "markdown": "`\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/COPYING.LIB"
                },
                "region": {
                  "startLine": 176,
                  "startColumn": 58,
                  "endLine": 176,
                  "endColumn": 62,
                  "snippet": {
                    "text": "    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n",
                    "rendered": {
                      "text": "    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n",
                      "markdown": "`    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/COPYING.LIB"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 11,
                  "endLine": 163,
                  "endColumn": 15,
                  "snippet": {
                    "text": "Library.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\n",
                    "rendered": {
                      "text": "Library.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\n",
                      "markdown": "`Library.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/COPYING.LIB"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 52,
                  "endLine": 143,
                  "snippet": {
                    "text": "  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control\ncompilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\n",
                    "rendered": {
                      "text": "  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control\ncompilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\n",
                      "markdown": "`  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control\ncompilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/COPYING.LIB"
                },
                "region": {
                  "startLine": 431,
                  "startColumn": 12,
                  "endLine": 431,
                  "endColumn": 18,
                  "snippet": {
                    "text": "license version number, you may choose any version ever published by\nthe Free Software Foundation.\n^L\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\n",
                    "rendered": {
                      "text": "license version number, you may choose any version ever published by\nthe Free Software Foundation.\n^L\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\n",
                      "markdown": "`license version number, you may choose any version ever published by\nthe Free Software Foundation.\n^L\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/COPYING.LIB"
                },
                "region": {
                  "startLine": 419,
                  "startColumn": 50,
                  "endLine": 419,
                  "endColumn": 56,
                  "snippet": {
                    "text": "the limitation as if written in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\n",
                    "rendered": {
                      "text": "the limitation as if written in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\n",
                      "markdown": "`the limitation as if written in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/COPYING.LIB"
                },
                "region": {
                  "startLine": 370,
                  "startColumn": 10,
                  "endLine": 370,
                  "endColumn": 16,
                  "snippet": {
                    "text": "all its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\n",
                    "rendered": {
                      "text": "all its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\n",
                      "markdown": "`all its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/COPYING.LIB"
                },
                "region": {
                  "startLine": 351,
                  "startColumn": 12,
                  "endLine": 351,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\n",
                    "rendered": {
                      "text": "\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\n",
                      "markdown": "`\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/COPYING.LIB"
                },
                "region": {
                  "startLine": 303,
                  "startColumn": 62,
                  "endLine": 303,
                  "endColumn": 68,
                  "snippet": {
                    "text": "    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n",
                    "rendered": {
                      "text": "    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n",
                      "markdown": "`    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/COPYING.LIB"
                },
                "region": {
                  "startLine": 228,
                  "startColumn": 32,
                  "endLine": 228,
                  "endColumn": 38,
                  "snippet": {
                    "text": "that copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\n",
                    "rendered": {
                      "text": "that copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\n",
                      "markdown": "`that copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/COPYING.LIB"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 21,
                  "endLine": 62,
                  "endColumn": 27,
                  "snippet": {
                    "text": "introduced by others.\n^L\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\n",
                    "rendered": {
                      "text": "introduced by others.\n^L\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\n",
                      "markdown": "`introduced by others.\n^L\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/COPYING.LIB"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 8,
                  "endLine": 32,
                  "endColumn": 17,
                  "snippet": {
                    "text": "  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n",
                    "rendered": {
                      "text": "  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n",
                      "markdown": "`  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/INSTALL.tmp"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 21,
                  "endLine": 11,
                  "endColumn": 26,
                  "snippet": {
                    "text": "./configure\nmake dist\n\nThis will result in a tar file. This can then be used with the packaging\nsystem for your OS. This is the recommended way to do it.\n\nIf you do not want use a packaging system, read the options from\n",
                    "rendered": {
                      "text": "./configure\nmake dist\n\nThis will result in a tar file. This can then be used with the packaging\nsystem for your OS. This is the recommended way to do it.\n\nIf you do not want use a packaging system, read the options from\n",
                      "markdown": "`./configure\nmake dist\n\nThis will result in a tar file. This can then be used with the packaging\nsystem for your OS. This is the recommended way to do it.\n\nIf you do not want use a packaging system, read the options from\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/INSTALL.tmp"
                },
                "region": {
                  "startLine": 4,
                  "endLine": 5,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nTo build audit from github, cd to the place where you want everything to be.\nThen do this:\n\ngit clone https://github.com/linux-audit/audit-userspace.git\ncd audit-userspace\n./autogen.sh\n./configure\n",
                    "rendered": {
                      "text": "\nTo build audit from github, cd to the place where you want everything to be.\nThen do this:\n\ngit clone https://github.com/linux-audit/audit-userspace.git\ncd audit-userspace\n./autogen.sh\n./configure\n",
                      "markdown": "`\nTo build audit from github, cd to the place where you want everything to be.\nThen do this:\n\ngit clone https://github.com/linux-audit/audit-userspace.git\ncd audit-userspace\n./autogen.sh\n./configure\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/README.md"
                },
                "region": {
                  "startLine": 208,
                  "startColumn": 407,
                  "endLine": 208,
                  "endColumn": 411,
                  "snippet": {
                    "text": "should normally be low - less than 10. If this is getting bigger and approaching the backlog limit in size, then you have a problem to look into. Either you are generating too many events (rules need adjusting) or an auditd plugin is taking too long to dequeue records. The auditd daemon is very fast at writing records to disk and can handle thousands per second.\n\nAnother way to check performance is to use\n\n```\nauditctl --signal state\ncat /var/run/auditd.state\n\naudit version = 3.1.2\ncurrent time = 08/24/23 20:21:31\nprocess priority = -4\nwriting to logs = yes\ncurrent log size = 2423 KB\nmax log size ",
                    "rendered": {
                      "text": "should normally be low - less than 10. If this is getting bigger and approaching the backlog limit in size, then you have a problem to look into. Either you are generating too many events (rules need adjusting) or an auditd plugin is taking too long to dequeue records. The auditd daemon is very fast at writing records to disk and can handle thousands per second.\n\nAnother way to check performance is to use\n\n```\nauditctl --signal state\ncat /var/run/auditd.state\n\naudit version = 3.1.2\ncurrent time = 08/24/23 20:21:31\nprocess priority = -4\nwriting to logs = yes\ncurrent log size = 2423 KB\nmax log size ",
                      "markdown": "`should normally be low - less than 10. If this is getting bigger and approaching the backlog limit in size, then you have a problem to look into. Either you are generating too many events (rules need adjusting) or an auditd plugin is taking too long to dequeue records. The auditd daemon is very fast at writing records to disk and can handle thousands per second.\n\nAnother way to check performance is to use\n\n```\nauditctl --signal state\ncat /var/run/auditd.state\n\naudit version = 3.1.2\ncurrent time = 08/24/23 20:21:31\nprocess priority = -4\nwriting to logs = yes\ncurrent log size = 2423 KB\nmax log size `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/README.md"
                },
                "region": {
                  "startLine": 208,
                  "startColumn": 77,
                  "endLine": 208,
                  "endColumn": 81,
                  "snippet": {
                    "text": "ld waiting for auditd to collect them. This should be around 8k or larger for a system that really does auditing. If you use the audit system to casually collect SELinux AVC's, then you can go lower to something like 256.\n\nThe current backlog tells you how many events are awaiting delivery to auditd at that instant. This number should normally be low - less than 10. If this is getting bigger and approaching the backlog limit in size, then you have a problem to look into. Either you are generating too many events (rules need adjusting) or an auditd plugin is taking too long to dequeue records. The ",
                    "rendered": {
                      "text": "ld waiting for auditd to collect them. This should be around 8k or larger for a system that really does auditing. If you use the audit system to casually collect SELinux AVC's, then you can go lower to something like 256.\n\nThe current backlog tells you how many events are awaiting delivery to auditd at that instant. This number should normally be low - less than 10. If this is getting bigger and approaching the backlog limit in size, then you have a problem to look into. Either you are generating too many events (rules need adjusting) or an auditd plugin is taking too long to dequeue records. The ",
                      "markdown": "`ld waiting for auditd to collect them. This should be around 8k or larger for a system that really does auditing. If you use the audit system to casually collect SELinux AVC's, then you can go lower to something like 256.\n\nThe current backlog tells you how many events are awaiting delivery to auditd at that instant. This number should normally be low - less than 10. If this is getting bigger and approaching the backlog limit in size, then you have a problem to look into. Either you are generating too many events (rules need adjusting) or an auditd plugin is taking too long to dequeue records. The `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/README.md"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 48,
                  "endLine": 127,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\n- Login ID (auid): the user ID that the user originally logged in with regardless of changing the real or effective user ID afterwards.\n- Session ID (ses): an identifier unique to the specific login in case the same user has multiple logins.\n- User ID (uid): the real user ID of the process at the time the audit event was generated.\n- Process ID (pid): the process ID of the subject that caused the event.\n- Results (res): Whether the subject's action was a success or failure.\n\n",
                    "rendered": {
                      "text": "\n- Login ID (auid): the user ID that the user originally logged in with regardless of changing the real or effective user ID afterwards.\n- Session ID (ses): an identifier unique to the specific login in case the same user has multiple logins.\n- User ID (uid): the real user ID of the process at the time the audit event was generated.\n- Process ID (pid): the process ID of the subject that caused the event.\n- Results (res): Whether the subject's action was a success or failure.\n\n",
                      "markdown": "`\n- Login ID (auid): the user ID that the user originally logged in with regardless of changing the real or effective user ID afterwards.\n- Session ID (ses): an identifier unique to the specific login in case the same user has multiple logins.\n- User ID (uid): the real user ID of the process at the time the audit event was generated.\n- Process ID (pid): the process ID of the subject that caused the event.\n- Results (res): Whether the subject's action was a success or failure.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/README.md"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 45,
                  "endLine": 107,
                  "endColumn": 49,
                  "snippet": {
                    "text": " The augenrules program expects rules to be located in /etc/audit/rules.d. The rules will get processed in a specific order based on their natural sort order. The kernel's rule engine uses a first match wins strategy. So, the order of the rules matters.\n\nThe sample rules are not meant to be used all at the same time. They are pieces of a policy that should be thought out and individual files copied to /etc/audit/rules.d/ For example, if you wanted to set a system up in the STIG configuration, copy rules 10-base-config, 30-stig, 31-privileged, and 99-finalize. You can add more if you like. But thes",
                    "rendered": {
                      "text": " The augenrules program expects rules to be located in /etc/audit/rules.d. The rules will get processed in a specific order based on their natural sort order. The kernel's rule engine uses a first match wins strategy. So, the order of the rules matters.\n\nThe sample rules are not meant to be used all at the same time. They are pieces of a policy that should be thought out and individual files copied to /etc/audit/rules.d/ For example, if you wanted to set a system up in the STIG configuration, copy rules 10-base-config, 30-stig, 31-privileged, and 99-finalize. You can add more if you like. But thes",
                      "markdown": "` The augenrules program expects rules to be located in /etc/audit/rules.d. The rules will get processed in a specific order based on their natural sort order. The kernel's rule engine uses a first match wins strategy. So, the order of the rules matters.\n\nThe sample rules are not meant to be used all at the same time. They are pieces of a policy that should be thought out and individual files copied to /etc/audit/rules.d/ For example, if you wanted to set a system up in the STIG configuration, copy rules 10-base-config, 30-stig, 31-privileged, and 99-finalize. You can add more if you like. But thes`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/README.md"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 304,
                  "endLine": 93,
                  "endColumn": 308,
                  "snippet": {
                    "text": "\nRULES\n-----\nThe audit package comes with pre-written rules. For audit-3.x, they should be located in /usr/share/audit/sample-rules. For audit-4.x, they should be located in /usr/share/audit-rules. These rules should be close enough most of the time. To use them, copy select rules to /etc/auditd/rules.d. If you look at the rules, you will notice that the filenames begin with a number. This number has the following suggested meaning:\n\n```\n10 - Kernel and auditctl configuration\n",
                    "rendered": {
                      "text": "\nRULES\n-----\nThe audit package comes with pre-written rules. For audit-3.x, they should be located in /usr/share/audit/sample-rules. For audit-4.x, they should be located in /usr/share/audit-rules. These rules should be close enough most of the time. To use them, copy select rules to /etc/auditd/rules.d. If you look at the rules, you will notice that the filenames begin with a number. This number has the following suggested meaning:\n\n```\n10 - Kernel and auditctl configuration\n",
                      "markdown": "`\nRULES\n-----\nThe audit package comes with pre-written rules. For audit-3.x, they should be located in /usr/share/audit/sample-rules. For audit-4.x, they should be located in /usr/share/audit-rules. These rules should be close enough most of the time. To use them, copy select rules to /etc/auditd/rules.d. If you look at the rules, you will notice that the filenames begin with a number. This number has the following suggested meaning:\n\n```\n10 - Kernel and auditctl configuration\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/README.md"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 178,
                  "endLine": 85,
                  "endColumn": 182,
                  "snippet": {
                    "text": "ormation, timestamps, and queues the event for delivery to the audit daemon.\n\nDAEMON CONSIDERATIONS\n---------------------\nAlmost all Security Standards are concerned about what happens when logging space fills up. Because of this, the audit daemon keeps careful track of free space and emits warnings at admin defined levels called \"space left\" and \"admin space left\". The former is considered a low disk space warning which should give the admin time to do something. The latter is more serious because you are just about out.\n\nTo get an accurate reading, the audit daemon should log to a disk partition",
                    "rendered": {
                      "text": "ormation, timestamps, and queues the event for delivery to the audit daemon.\n\nDAEMON CONSIDERATIONS\n---------------------\nAlmost all Security Standards are concerned about what happens when logging space fills up. Because of this, the audit daemon keeps careful track of free space and emits warnings at admin defined levels called \"space left\" and \"admin space left\". The former is considered a low disk space warning which should give the admin time to do something. The latter is more serious because you are just about out.\n\nTo get an accurate reading, the audit daemon should log to a disk partition",
                      "markdown": "`ormation, timestamps, and queues the event for delivery to the audit daemon.\n\nDAEMON CONSIDERATIONS\n---------------------\nAlmost all Security Standards are concerned about what happens when logging space fills up. Because of this, the audit daemon keeps careful track of free space and emits warnings at admin defined levels called \"space left\" and \"admin space left\". The former is considered a low disk space warning which should give the admin time to do something. The latter is more serious because you are just about out.\n\nTo get an accurate reading, the audit daemon should log to a disk partition`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/README.md"
                },
                "region": {
                  "startLine": 258,
                  "startColumn": 7,
                  "endLine": 258,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\nAudit Standards\n---------------\nYou can find the standards to which the audit system conforms to in the ![Audit Documentation Project](https://github.com/linux-audit/audit-documentation).\n\n",
                    "rendered": {
                      "text": "\nAudit Standards\n---------------\nYou can find the standards to which the audit system conforms to in the ![Audit Documentation Project](https://github.com/linux-audit/audit-documentation).\n\n",
                      "markdown": "`\nAudit Standards\n---------------\nYou can find the standards to which the audit system conforms to in the ![Audit Documentation Project](https://github.com/linux-audit/audit-documentation).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/README.md"
                },
                "region": {
                  "startLine": 217,
                  "startColumn": 7,
                  "endLine": 217,
                  "endColumn": 13,
                  "snippet": {
                    "text": "cat /var/run/auditd.state\n\naudit version = 3.1.2\ncurrent time = 08/24/23 20:21:31\nprocess priority = -4\nwriting to logs = yes\ncurrent log size = 2423 KB\n",
                    "rendered": {
                      "text": "cat /var/run/auditd.state\n\naudit version = 3.1.2\ncurrent time = 08/24/23 20:21:31\nprocess priority = -4\nwriting to logs = yes\ncurrent log size = 2423 KB\n",
                      "markdown": "`cat /var/run/auditd.state\n\naudit version = 3.1.2\ncurrent time = 08/24/23 20:21:31\nprocess priority = -4\nwriting to logs = yes\ncurrent log size = 2423 KB\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/README.md"
                },
                "region": {
                  "startLine": 213,
                  "startColumn": 23,
                  "endLine": 214,
                  "endColumn": 4,
                  "snippet": {
                    "text": "Another way to check performance is to use\n\n```\nauditctl --signal state\ncat /var/run/auditd.state\n\naudit version = 3.1.2\ncurrent time = 08/24/23 20:21:31\n",
                    "rendered": {
                      "text": "Another way to check performance is to use\n\n```\nauditctl --signal state\ncat /var/run/auditd.state\n\naudit version = 3.1.2\ncurrent time = 08/24/23 20:21:31\n",
                      "markdown": "`Another way to check performance is to use\n\n```\nauditctl --signal state\ncat /var/run/auditd.state\n\naudit version = 3.1.2\ncurrent time = 08/24/23 20:21:31\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/README.md"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 29,
                  "endLine": 185,
                  "endColumn": 33,
                  "snippet": {
                    "text": "ausearch --start today --auid 1000 --raw | aureport --file --summary\n\nSummary of files accessed by vi\nausearch --start this-week -x vi --raw | aureport --file --summary\n\nSummary of programs with files access associated with the unsuccessful-access key\nausearch --start this-month --key unsuccessful-access --raw | aureport -x --summary -i\n",
                    "rendered": {
                      "text": "ausearch --start today --auid 1000 --raw | aureport --file --summary\n\nSummary of files accessed by vi\nausearch --start this-week -x vi --raw | aureport --file --summary\n\nSummary of programs with files access associated with the unsuccessful-access key\nausearch --start this-month --key unsuccessful-access --raw | aureport -x --summary -i\n",
                      "markdown": "`ausearch --start today --auid 1000 --raw | aureport --file --summary\n\nSummary of files accessed by vi\nausearch --start this-week -x vi --raw | aureport --file --summary\n\nSummary of programs with files access associated with the unsuccessful-access key\nausearch --start this-month --key unsuccessful-access --raw | aureport -x --summary -i\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/README.md"
                },
                "region": {
                  "startLine": 184,
                  "startColumn": 28,
                  "endLine": 185,
                  "snippet": {
                    "text": "Summary of files accessed by uid 1000\nausearch --start today --auid 1000 --raw | aureport --file --summary\n\nSummary of files accessed by vi\nausearch --start this-week -x vi --raw | aureport --file --summary\n\nSummary of programs with files access associated with the unsuccessful-access key\nausearch --start this-month --key unsuccessful-access --raw | aureport -x --summary -i\n",
                    "rendered": {
                      "text": "Summary of files accessed by uid 1000\nausearch --start today --auid 1000 --raw | aureport --file --summary\n\nSummary of files accessed by vi\nausearch --start this-week -x vi --raw | aureport --file --summary\n\nSummary of programs with files access associated with the unsuccessful-access key\nausearch --start this-month --key unsuccessful-access --raw | aureport -x --summary -i\n",
                      "markdown": "`Summary of files accessed by uid 1000\nausearch --start today --auid 1000 --raw | aureport --file --summary\n\nSummary of files accessed by vi\nausearch --start this-week -x vi --raw | aureport --file --summary\n\nSummary of programs with files access associated with the unsuccessful-access key\nausearch --start this-month --key unsuccessful-access --raw | aureport -x --summary -i\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/README.md"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 30,
                  "endLine": 174,
                  "endColumn": 36,
                  "snippet": {
                    "text": "All account modifications this month:\naureport --start this-month --mods -i\n\nReport all log files and their time range:\naureport -t\n```\n\n",
                    "rendered": {
                      "text": "All account modifications this month:\naureport --start this-month --mods -i\n\nReport all log files and their time range:\naureport -t\n```\n\n",
                      "markdown": "`All account modifications this month:\naureport --start this-month --mods -i\n\nReport all log files and their time range:\naureport -t\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/README.md"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 55,
                  "endLine": 127,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\n- Login ID (auid): the user ID that the user originally logged in with regardless of changing the real or effective user ID afterwards.\n- Session ID (ses): an identifier unique to the specific login in case the same user has multiple logins.\n- User ID (uid): the real user ID of the process at the time the audit event was generated.\n- Process ID (pid): the process ID of the subject that caused the event.\n- Results (res): Whether the subject's action was a success or failure.\n\n",
                    "rendered": {
                      "text": "\n- Login ID (auid): the user ID that the user originally logged in with regardless of changing the real or effective user ID afterwards.\n- Session ID (ses): an identifier unique to the specific login in case the same user has multiple logins.\n- User ID (uid): the real user ID of the process at the time the audit event was generated.\n- Process ID (pid): the process ID of the subject that caused the event.\n- Results (res): Whether the subject's action was a success or failure.\n\n",
                      "markdown": "`\n- Login ID (auid): the user ID that the user originally logged in with regardless of changing the real or effective user ID afterwards.\n- Session ID (ses): an identifier unique to the specific login in case the same user has multiple logins.\n- User ID (uid): the real user ID of the process at the time the audit event was generated.\n- Process ID (pid): the process ID of the subject that caused the event.\n- Results (res): Whether the subject's action was a success or failure.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/README.md"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 9,
                  "endLine": 123,
                  "endColumn": 15,
                  "snippet": {
                    "text": "s. Next there is a msg=audit field which has parenthesis. Inside it is the time since the epoch in seconds, a millisecond time, and a serial number. The millisecond is used to separate events within the same second. The serial number is used to separate events within the same millisecond.\n\nAfter the time stamp comes fields that are in key=value format. What these field are varies by record type. But the overall event should have the following:\n\n- Login ID (auid): the user ID that the user originally logged in with regardless of changing the real or effective user ID afterwards.\n- Session ID (ses): a",
                    "rendered": {
                      "text": "s. Next there is a msg=audit field which has parenthesis. Inside it is the time since the epoch in seconds, a millisecond time, and a serial number. The millisecond is used to separate events within the same second. The serial number is used to separate events within the same millisecond.\n\nAfter the time stamp comes fields that are in key=value format. What these field are varies by record type. But the overall event should have the following:\n\n- Login ID (auid): the user ID that the user originally logged in with regardless of changing the real or effective user ID afterwards.\n- Session ID (ses): a",
                      "markdown": "`s. Next there is a msg=audit field which has parenthesis. Inside it is the time since the epoch in seconds, a millisecond time, and a serial number. The millisecond is used to separate events within the same second. The serial number is used to separate events within the same millisecond.\n\nAfter the time stamp comes fields that are in key=value format. What these field are varies by record type. But the overall event should have the following:\n\n- Login ID (auid): the user ID that the user originally logged in with regardless of changing the real or effective user ID afterwards.\n- Session ID (ses): a`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/README.md"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 180,
                  "endLine": 121,
                  "endColumn": 186,
                  "snippet": {
                    "text": "ber.\n\nAudit events all start with the following preamble:\n\n```\ntype=<something> msg=audit(1679598373.352:1256072):\n```\n\nThe first item is the record type. This tells you what kind of information and the meaning of the record is. Next there is a msg=audit field which has parenthesis. Inside it is the time since the epoch in seconds, a millisecond time, and a serial number. The millisecond is used to separate events within the same second. The serial number is used to separate events within the same millisecond.\n\nAfter the time stamp comes fields that are in key=value format. What these field are vari",
                    "rendered": {
                      "text": "ber.\n\nAudit events all start with the following preamble:\n\n```\ntype=<something> msg=audit(1679598373.352:1256072):\n```\n\nThe first item is the record type. This tells you what kind of information and the meaning of the record is. Next there is a msg=audit field which has parenthesis. Inside it is the time since the epoch in seconds, a millisecond time, and a serial number. The millisecond is used to separate events within the same second. The serial number is used to separate events within the same millisecond.\n\nAfter the time stamp comes fields that are in key=value format. What these field are vari",
                      "markdown": "`ber.\n\nAudit events all start with the following preamble:\n\n```\ntype=<something> msg=audit(1679598373.352:1256072):\n```\n\nThe first item is the record type. This tells you what kind of information and the meaning of the record is. Next there is a msg=audit field which has parenthesis. Inside it is the time since the epoch in seconds, a millisecond time, and a serial number. The millisecond is used to separate events within the same second. The serial number is used to separate events within the same millisecond.\n\nAfter the time stamp comes fields that are in key=value format. What these field are vari`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/README.md"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 203,
                  "endLine": 105,
                  "endColumn": 209,
                  "snippet": {
                    "text": "Optional rules\n50 - Server Specific rules\n70 - System local rules\n90 - Finalize (immutable)\n```\n\nThe rules are meant to be used by the augenrules program. The augenrules program expects rules to be located in /etc/audit/rules.d. The rules will get processed in a specific order based on their natural sort order. The kernel's rule engine uses a first match wins strategy. So, the order of the rules matters.\n\nThe sample rules are not meant to be used all at the same time. They are pieces of a policy that should be thought out and individual files copied to /etc/audit/rules.d/ For example, if you wanted ",
                    "rendered": {
                      "text": "Optional rules\n50 - Server Specific rules\n70 - System local rules\n90 - Finalize (immutable)\n```\n\nThe rules are meant to be used by the augenrules program. The augenrules program expects rules to be located in /etc/audit/rules.d. The rules will get processed in a specific order based on their natural sort order. The kernel's rule engine uses a first match wins strategy. So, the order of the rules matters.\n\nThe sample rules are not meant to be used all at the same time. They are pieces of a policy that should be thought out and individual files copied to /etc/audit/rules.d/ For example, if you wanted ",
                      "markdown": "`Optional rules\n50 - Server Specific rules\n70 - System local rules\n90 - Finalize (immutable)\n```\n\nThe rules are meant to be used by the augenrules program. The augenrules program expects rules to be located in /etc/audit/rules.d. The rules will get processed in a specific order based on their natural sort order. The kernel's rule engine uses a first match wins strategy. So, the order of the rules matters.\n\nThe sample rules are not meant to be used all at the same time. They are pieces of a policy that should be thought out and individual files copied to /etc/audit/rules.d/ For example, if you wanted `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/README.md"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 324,
                  "endLine": 85,
                  "endColumn": 330,
                  "snippet": {
                    "text": "dards are concerned about what happens when logging space fills up. Because of this, the audit daemon keeps careful track of free space and emits warnings at admin defined levels called \"space left\" and \"admin space left\". The former is considered a low disk space warning which should give the admin time to do something. The latter is more serious because you are just about out.\n\nTo get an accurate reading, the audit daemon should log to a disk partition that is reserved only for the audit daemon. This way someone using the logger command can't suddenly fill up the audit space and trigger an admin d",
                    "rendered": {
                      "text": "dards are concerned about what happens when logging space fills up. Because of this, the audit daemon keeps careful track of free space and emits warnings at admin defined levels called \"space left\" and \"admin space left\". The former is considered a low disk space warning which should give the admin time to do something. The latter is more serious because you are just about out.\n\nTo get an accurate reading, the audit daemon should log to a disk partition that is reserved only for the audit daemon. This way someone using the logger command can't suddenly fill up the audit space and trigger an admin d",
                      "markdown": "`dards are concerned about what happens when logging space fills up. Because of this, the audit daemon keeps careful track of free space and emits warnings at admin defined levels called \"space left\" and \"admin space left\". The former is considered a low disk space warning which should give the admin time to do something. The latter is more serious because you are just about out.\n\nTo get an accurate reading, the audit daemon should log to a disk partition that is reserved only for the audit daemon. This way someone using the logger command can't suddenly fill up the audit space and trigger an admin d`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/README.md"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 170,
                  "endLine": 67,
                  "endColumn": 175,
                  "snippet": {
                    "text": "make install\n```\n\nIf you are packaging this, you probably want to do \"make dist\" instead and use the resulting tar file with your package building framework. A spec file is included in the git repo as an example of packaging it using rpm. This spec file is not known to be the official spec file used by any distribution. It's just an example.\n\nCROSS COMPILING\n---------------\n",
                    "rendered": {
                      "text": "make install\n```\n\nIf you are packaging this, you probably want to do \"make dist\" instead and use the resulting tar file with your package building framework. A spec file is included in the git repo as an example of packaging it using rpm. This spec file is not known to be the official spec file used by any distribution. It's just an example.\n\nCROSS COMPILING\n---------------\n",
                      "markdown": "`make install\n```\n\nIf you are packaging this, you probably want to do \"make dist\" instead and use the resulting tar file with your package building framework. A spec file is included in the git repo as an example of packaging it using rpm. This spec file is not known to be the official spec file used by any distribution. It's just an example.\n\nCROSS COMPILING\n---------------\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/README.md"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 92,
                  "endLine": 67,
                  "endColumn": 97,
                  "snippet": {
                    "text": "make install\n```\n\nIf you are packaging this, you probably want to do \"make dist\" instead and use the resulting tar file with your package building framework. A spec file is included in the git repo as an example of packaging it using rpm. This spec file is not known to be the official spec file used by any distribution. It's just an example.\n\nCROSS COMPILING\n---------------\n",
                    "rendered": {
                      "text": "make install\n```\n\nIf you are packaging this, you probably want to do \"make dist\" instead and use the resulting tar file with your package building framework. A spec file is included in the git repo as an example of packaging it using rpm. This spec file is not known to be the official spec file used by any distribution. It's just an example.\n\nCROSS COMPILING\n---------------\n",
                      "markdown": "`make install\n```\n\nIf you are packaging this, you probably want to do \"make dist\" instead and use the resulting tar file with your package building framework. A spec file is included in the git repo as an example of packaging it using rpm. This spec file is not known to be the official spec file used by any distribution. It's just an example.\n\nCROSS COMPILING\n---------------\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/README.md"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 176,
                  "endLine": 52,
                  "endColumn": 182,
                  "snippet": {
                    "text": "\nMAIL LIST\n---------\nThe audit community has a [mail list](https://lists.linux-audit.osci.io/archives/list/linux-audit@lists.linux-audit.osci.io/). It is the best place to ask questions because the mail archive is searchable and therefore discoverable.\n\nCONFIGURING AND COMPILING\n-------------------------\n",
                    "rendered": {
                      "text": "\nMAIL LIST\n---------\nThe audit community has a [mail list](https://lists.linux-audit.osci.io/archives/list/linux-audit@lists.linux-audit.osci.io/). It is the best place to ask questions because the mail archive is searchable and therefore discoverable.\n\nCONFIGURING AND COMPILING\n-------------------------\n",
                      "markdown": "`\nMAIL LIST\n---------\nThe audit community has a [mail list](https://lists.linux-audit.osci.io/archives/list/linux-audit@lists.linux-audit.osci.io/). It is the best place to ask questions because the mail archive is searchable and therefore discoverable.\n\nCONFIGURING AND COMPILING\n-------------------------\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/README.md"
                },
                "region": {
                  "startLine": 49,
                  "endLine": 50,
                  "endColumn": 5,
                  "snippet": {
                    "text": "ou would like to see more platforms supported, please consider working on bugs and code cleanups and then maybe we can add more. Any submitted pull requests adding a new platform with be marked with a 'wont_fix' label. It will be left available in case anyone wants to use it. But it is unsupported.\n\nMAIL LIST\n---------\nThe audit community has a [mail list](https://lists.linux-audit.osci.io/archives/list/linux-audit@lists.linux-audit.osci.io/). It is the best place to ask questions because the mail archive is searchable and therefore discoverable.\n\nCONFIGURING AND COMPILING\n-------------------------\n",
                    "rendered": {
                      "text": "ou would like to see more platforms supported, please consider working on bugs and code cleanups and then maybe we can add more. Any submitted pull requests adding a new platform with be marked with a 'wont_fix' label. It will be left available in case anyone wants to use it. But it is unsupported.\n\nMAIL LIST\n---------\nThe audit community has a [mail list](https://lists.linux-audit.osci.io/archives/list/linux-audit@lists.linux-audit.osci.io/). It is the best place to ask questions because the mail archive is searchable and therefore discoverable.\n\nCONFIGURING AND COMPILING\n-------------------------\n",
                      "markdown": "`ou would like to see more platforms supported, please consider working on bugs and code cleanups and then maybe we can add more. Any submitted pull requests adding a new platform with be marked with a 'wont_fix' label. It will be left available in case anyone wants to use it. But it is unsupported.\n\nMAIL LIST\n---------\nThe audit community has a [mail list](https://lists.linux-audit.osci.io/archives/list/linux-audit@lists.linux-audit.osci.io/). It is the best place to ask questions because the mail archive is searchable and therefore discoverable.\n\nCONFIGURING AND COMPILING\n-------------------------\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/README.md"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 28,
                  "endLine": 18,
                  "endColumn": 33,
                  "snippet": {
                    "text": "Linux](https://git.alpinelinux.org/aports/tree/main/audit/auditd.initd) provides\nan init script for OpenRC.\n\nBUILD-TIME DEPENDENCIES (for tar file)\n--------------------------------------\n* gcc (or clang)\n* make\n",
                    "rendered": {
                      "text": "Linux](https://git.alpinelinux.org/aports/tree/main/audit/auditd.initd) provides\nan init script for OpenRC.\n\nBUILD-TIME DEPENDENCIES (for tar file)\n--------------------------------------\n* gcc (or clang)\n* make\n",
                      "markdown": "`Linux](https://git.alpinelinux.org/aports/tree/main/audit/auditd.initd) provides\nan init script for OpenRC.\n\nBUILD-TIME DEPENDENCIES (for tar file)\n--------------------------------------\n* gcc (or clang)\n* make\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/README.md"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 7,
                  "endLine": 16,
                  "endColumn": 15,
                  "snippet": {
                    "text": "NOTE: While this repository provides support for systemd to start the audit\ndaemon, other init systems can be used as well. For example, [Alpine\nLinux](https://git.alpinelinux.org/aports/tree/main/audit/auditd.initd) provides\nan init script for OpenRC.\n\nBUILD-TIME DEPENDENCIES (for tar file)\n--------------------------------------\n",
                    "rendered": {
                      "text": "NOTE: While this repository provides support for systemd to start the audit\ndaemon, other init systems can be used as well. For example, [Alpine\nLinux](https://git.alpinelinux.org/aports/tree/main/audit/auditd.initd) provides\nan init script for OpenRC.\n\nBUILD-TIME DEPENDENCIES (for tar file)\n--------------------------------------\n",
                      "markdown": "`NOTE: While this repository provides support for systemd to start the audit\ndaemon, other init systems can be used as well. For example, [Alpine\nLinux](https://git.alpinelinux.org/aports/tree/main/audit/auditd.initd) provides\nan init script for OpenRC.\n\nBUILD-TIME DEPENDENCIES (for tar file)\n--------------------------------------\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/README.md"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 389,
                  "endLine": 4,
                  "endColumn": 395,
                  "snippet": {
                    "text": "Linux Audit\n===========\n\nThe Linux Audit System is designed to make Linux compliant with the requirements from Common Criteria, PCI-DSS, and other security standards by intercepting system calls and serializing audit log entries from privileged user space applications. The framework allows the configured events to be recorded to disk and distributed to plugins in realtime. Each audit event contains the date and time of event, type of event, subject identity, object acted upon, and result (success/fail) of the action if applicable.\n\nRUNTIME DEPENDENCIES\n--------------------\n",
                    "rendered": {
                      "text": "Linux Audit\n===========\n\nThe Linux Audit System is designed to make Linux compliant with the requirements from Common Criteria, PCI-DSS, and other security standards by intercepting system calls and serializing audit log entries from privileged user space applications. The framework allows the configured events to be recorded to disk and distributed to plugins in realtime. Each audit event contains the date and time of event, type of event, subject identity, object acted upon, and result (success/fail) of the action if applicable.\n\nRUNTIME DEPENDENCIES\n--------------------\n",
                      "markdown": "`Linux Audit\n===========\n\nThe Linux Audit System is designed to make Linux compliant with the requirements from Common Criteria, PCI-DSS, and other security standards by intercepting system calls and serializing audit log entries from privileged user space applications. The framework allows the configured events to be recorded to disk and distributed to plugins in realtime. Each audit event contains the date and time of event, type of event, subject identity, object acted upon, and result (success/fail) of the action if applicable.\n\nRUNTIME DEPENDENCIES\n--------------------\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 40,
                  "endLine": 144,
                  "endColumn": 48,
                  "snippet": {
                    "text": "- In audispd-statsd plugin, use struct sockaddr_storage (Ville Heikkinen)\n- Optionally interpret auid in auditctl -l\n- Update some syscall argument interpretations\n- In auditd, do not allow spaces in the hostname name format\n- Big documentation cleanup (MIZUTA Takeshi)\n- Update syscall table to the 5.12 kernel\n- Update the auparse normalizer for new event types\n",
                    "rendered": {
                      "text": "- In audispd-statsd plugin, use struct sockaddr_storage (Ville Heikkinen)\n- Optionally interpret auid in auditctl -l\n- Update some syscall argument interpretations\n- In auditd, do not allow spaces in the hostname name format\n- Big documentation cleanup (MIZUTA Takeshi)\n- Update syscall table to the 5.12 kernel\n- Update the auparse normalizer for new event types\n",
                      "markdown": "`- In audispd-statsd plugin, use struct sockaddr_storage (Ville Heikkinen)\n- Optionally interpret auid in auditctl -l\n- Update some syscall argument interpretations\n- In auditd, do not allow spaces in the hostname name format\n- Big documentation cleanup (MIZUTA Takeshi)\n- Update syscall table to the 5.12 kernel\n- Update the auparse normalizer for new event types\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 289,
                  "startColumn": 1,
                  "endLine": 289,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n2.8\n- Add support for ambient capability fields (Richard Guy Briggs)\n- Update auparse-normalizer to support TTY events\n- Add auparse_normalize_object_primary2 API\n- In ausearch text format, add 'to xxx' for mount operations\n- In ausearch add new --extra-obj2 option for CSV output\n",
                    "rendered": {
                      "text": "\n2.8\n- Add support for ambient capability fields (Richard Guy Briggs)\n- Update auparse-normalizer to support TTY events\n- Add auparse_normalize_object_primary2 API\n- In ausearch text format, add 'to xxx' for mount operations\n- In ausearch add new --extra-obj2 option for CSV output\n",
                      "markdown": "`\n2.8\n- Add support for ambient capability fields (Richard Guy Briggs)\n- Update auparse-normalizer to support TTY events\n- Add auparse_normalize_object_primary2 API\n- In ausearch text format, add 'to xxx' for mount operations\n- In ausearch add new --extra-obj2 option for CSV output\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 272,
                  "startColumn": 1,
                  "endLine": 272,
                  "endColumn": 9,
                  "snippet": {
                    "text": "- Do not rotate auditd logs when num_logs < 2 (brozs)\n\n2.8.2\n- Update tables for 4.14 kernel\n- Fixup ipv6 server side binding\n- AVC report from aureport was missing result column header (#1511606)\n- Add SOFTWARE_UPDATE event\n",
                    "rendered": {
                      "text": "- Do not rotate auditd logs when num_logs < 2 (brozs)\n\n2.8.2\n- Update tables for 4.14 kernel\n- Fixup ipv6 server side binding\n- AVC report from aureport was missing result column header (#1511606)\n- Add SOFTWARE_UPDATE event\n",
                      "markdown": "`- Do not rotate auditd logs when num_logs < 2 (brozs)\n\n2.8.2\n- Update tables for 4.14 kernel\n- Fixup ipv6 server side binding\n- AVC report from aureport was missing result column header (#1511606)\n- Add SOFTWARE_UPDATE event\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 248,
                  "startColumn": 1,
                  "endLine": 248,
                  "endColumn": 9,
                  "snippet": {
                    "text": "- Audit USER events now sends msg as name value pair\n- Add support for AUDIT_BPF event\n- Auditd should not process AUDIT_REPLACE events\n- Update syscall tables to the 5.5 kernel\n- Improve personality interpretation by using PERS_MASK\n- Speedup ausearch/report parsing RAW logging format by caching uid/name lookup\n- Change auparse python bindings to shared object (Issue #121)\n",
                    "rendered": {
                      "text": "- Audit USER events now sends msg as name value pair\n- Add support for AUDIT_BPF event\n- Auditd should not process AUDIT_REPLACE events\n- Update syscall tables to the 5.5 kernel\n- Improve personality interpretation by using PERS_MASK\n- Speedup ausearch/report parsing RAW logging format by caching uid/name lookup\n- Change auparse python bindings to shared object (Issue #121)\n",
                      "markdown": "`- Audit USER events now sends msg as name value pair\n- Add support for AUDIT_BPF event\n- Auditd should not process AUDIT_REPLACE events\n- Update syscall tables to the 5.5 kernel\n- Improve personality interpretation by using PERS_MASK\n- Speedup ausearch/report parsing RAW logging format by caching uid/name lookup\n- Change auparse python bindings to shared object (Issue #121)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 216,
                  "startColumn": 1,
                  "endLine": 216,
                  "endColumn": 9,
                  "snippet": {
                    "text": "- In auditd, allow expression of space left as a percentage (#1650670)\n- On PPC64LE systems, only allow 64 bit rules (#1462178)\n- Make some parts of auditd state report optional based on config\n- Update to libev-4.25\n- Fix ausearch when checkpointing a single file (Burn Alting)\n- Fix scripting in 31-privileged.rules wrt filecap (#1662516)\n- In ausearch, do not checkpoint if stdin is input source\n",
                    "rendered": {
                      "text": "- In auditd, allow expression of space left as a percentage (#1650670)\n- On PPC64LE systems, only allow 64 bit rules (#1462178)\n- Make some parts of auditd state report optional based on config\n- Update to libev-4.25\n- Fix ausearch when checkpointing a single file (Burn Alting)\n- Fix scripting in 31-privileged.rules wrt filecap (#1662516)\n- In ausearch, do not checkpoint if stdin is input source\n",
                      "markdown": "`- In auditd, allow expression of space left as a percentage (#1650670)\n- On PPC64LE systems, only allow 64 bit rules (#1462178)\n- Make some parts of auditd state report optional based on config\n- Update to libev-4.25\n- Fix ausearch when checkpointing a single file (Burn Alting)\n- Fix scripting in 31-privileged.rules wrt filecap (#1662516)\n- In ausearch, do not checkpoint if stdin is input source\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 1,
                  "endLine": 189,
                  "endColumn": 9,
                  "snippet": {
                    "text": "- Add queue depth statistics to internal state dump report\n- Add network statistics to internal state dump report\n- SIGUSR now also restarts queue processing if its suspended\n- Update lookup tables for the 4.18 kernel\n- Add auparse_normalizer support for SOFTWARE_UPDATE event\n- Add 30-ospp-v42.rules to meet new Common Criteria requirements\n- Deprecate enable_krb and replace with transport config opt for remote logging\n",
                    "rendered": {
                      "text": "- Add queue depth statistics to internal state dump report\n- Add network statistics to internal state dump report\n- SIGUSR now also restarts queue processing if its suspended\n- Update lookup tables for the 4.18 kernel\n- Add auparse_normalizer support for SOFTWARE_UPDATE event\n- Add 30-ospp-v42.rules to meet new Common Criteria requirements\n- Deprecate enable_krb and replace with transport config opt for remote logging\n",
                      "markdown": "`- Add queue depth statistics to internal state dump report\n- Add network statistics to internal state dump report\n- SIGUSR now also restarts queue processing if its suspended\n- Update lookup tables for the 4.18 kernel\n- Add auparse_normalizer support for SOFTWARE_UPDATE event\n- Add 30-ospp-v42.rules to meet new Common Criteria requirements\n- Deprecate enable_krb and replace with transport config opt for remote logging\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 1,
                  "endLine": 161,
                  "endColumn": 9,
                  "snippet": {
                    "text": "- Add auparse_new_buffer function to auparse library\n- Use the select libev backend unless aggregating events\n- Add sudoers to some base audit rules\n- Update the auparse normalizer for some new syscalls and event types\n\n3.0\n- Generate checkpoint file even when no results are returned (Burn Alting)\n",
                    "rendered": {
                      "text": "- Add auparse_new_buffer function to auparse library\n- Use the select libev backend unless aggregating events\n- Add sudoers to some base audit rules\n- Update the auparse normalizer for some new syscalls and event types\n\n3.0\n- Generate checkpoint file even when no results are returned (Burn Alting)\n",
                      "markdown": "`- Add auparse_new_buffer function to auparse library\n- Use the select libev backend unless aggregating events\n- Add sudoers to some base audit rules\n- Update the auparse normalizer for some new syscalls and event types\n\n3.0\n- Generate checkpoint file even when no results are returned (Burn Alting)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 1,
                  "endLine": 154,
                  "endColumn": 9,
                  "snippet": {
                    "text": "- Output error message if the path of input files are too long ausearch/report\n\n3.0.1\n- Update syscall table to the 5.11 kernel\n- Add new --eoe-timeout option to ausearch and aureport (Burn Alting)\n- Only enable periodic timers when listening on the network\n- Upgrade libev to 4.33\n",
                    "rendered": {
                      "text": "- Output error message if the path of input files are too long ausearch/report\n\n3.0.1\n- Update syscall table to the 5.11 kernel\n- Add new --eoe-timeout option to ausearch and aureport (Burn Alting)\n- Only enable periodic timers when listening on the network\n- Upgrade libev to 4.33\n",
                      "markdown": "`- Output error message if the path of input files are too long ausearch/report\n\n3.0.1\n- Update syscall table to the 5.11 kernel\n- Add new --eoe-timeout option to ausearch and aureport (Burn Alting)\n- Only enable periodic timers when listening on the network\n- Upgrade libev to 4.33\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 1,
                  "endLine": 147,
                  "endColumn": 9,
                  "snippet": {
                    "text": "- In auditd, do not allow spaces in the hostname name format\n- Big documentation cleanup (MIZUTA Takeshi)\n- Update syscall table to the 5.12 kernel\n- Update the auparse normalizer for new event types\n- Fix compiler warnings in ids subsystem\n- Block a couple signals from flush & reconfigure threads\n- In auditd, don't wait on flush thread when exiting\n",
                    "rendered": {
                      "text": "- In auditd, do not allow spaces in the hostname name format\n- Big documentation cleanup (MIZUTA Takeshi)\n- Update syscall table to the 5.12 kernel\n- Update the auparse normalizer for new event types\n- Fix compiler warnings in ids subsystem\n- Block a couple signals from flush & reconfigure threads\n- In auditd, don't wait on flush thread when exiting\n",
                      "markdown": "`- In auditd, do not allow spaces in the hostname name format\n- Big documentation cleanup (MIZUTA Takeshi)\n- Update syscall table to the 5.12 kernel\n- Update the auparse normalizer for new event types\n- Fix compiler warnings in ids subsystem\n- Block a couple signals from flush & reconfigure threads\n- In auditd, don't wait on flush thread when exiting\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 1,
                  "endLine": 146,
                  "endColumn": 9,
                  "snippet": {
                    "text": "- Update some syscall argument interpretations\n- In auditd, do not allow spaces in the hostname name format\n- Big documentation cleanup (MIZUTA Takeshi)\n- Update syscall table to the 5.12 kernel\n- Update the auparse normalizer for new event types\n- Fix compiler warnings in ids subsystem\n- Block a couple signals from flush & reconfigure threads\n",
                    "rendered": {
                      "text": "- Update some syscall argument interpretations\n- In auditd, do not allow spaces in the hostname name format\n- Big documentation cleanup (MIZUTA Takeshi)\n- Update syscall table to the 5.12 kernel\n- Update the auparse normalizer for new event types\n- Fix compiler warnings in ids subsystem\n- Block a couple signals from flush & reconfigure threads\n",
                      "markdown": "`- Update some syscall argument interpretations\n- In auditd, do not allow spaces in the hostname name format\n- Big documentation cleanup (MIZUTA Takeshi)\n- Update syscall table to the 5.12 kernel\n- Update the auparse normalizer for new event types\n- Fix compiler warnings in ids subsystem\n- Block a couple signals from flush & reconfigure threads\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 1,
                  "endLine": 143,
                  "endColumn": 9,
                  "snippet": {
                    "text": "3.0.2\n- In audispd-statsd plugin, use struct sockaddr_storage (Ville Heikkinen)\n- Optionally interpret auid in auditctl -l\n- Update some syscall argument interpretations\n- In auditd, do not allow spaces in the hostname name format\n- Big documentation cleanup (MIZUTA Takeshi)\n- Update syscall table to the 5.12 kernel\n",
                    "rendered": {
                      "text": "3.0.2\n- In audispd-statsd plugin, use struct sockaddr_storage (Ville Heikkinen)\n- Optionally interpret auid in auditctl -l\n- Update some syscall argument interpretations\n- In auditd, do not allow spaces in the hostname name format\n- Big documentation cleanup (MIZUTA Takeshi)\n- Update syscall table to the 5.12 kernel\n",
                      "markdown": "`3.0.2\n- In audispd-statsd plugin, use struct sockaddr_storage (Ville Heikkinen)\n- Optionally interpret auid in auditctl -l\n- Update some syscall argument interpretations\n- In auditd, do not allow spaces in the hostname name format\n- Big documentation cleanup (MIZUTA Takeshi)\n- Update syscall table to the 5.12 kernel\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 1,
                  "endLine": 127,
                  "endColumn": 9,
                  "snippet": {
                    "text": "- Apply performance speedups to auparse library\n- Optimize rule loading in auditctl\n- Fix an auparse memory leak caused by glibc-2.33 by replacing realpath\n- Update syscall table to the 5.14 kernel\n- Fixed various issues when dealing with corrupted logs\n\n3.0.3\n",
                    "rendered": {
                      "text": "- Apply performance speedups to auparse library\n- Optimize rule loading in auditctl\n- Fix an auparse memory leak caused by glibc-2.33 by replacing realpath\n- Update syscall table to the 5.14 kernel\n- Fixed various issues when dealing with corrupted logs\n\n3.0.3\n",
                      "markdown": "`- Apply performance speedups to auparse library\n- Optimize rule loading in auditctl\n- Fix an auparse memory leak caused by glibc-2.33 by replacing realpath\n- Update syscall table to the 5.14 kernel\n- Fixed various issues when dealing with corrupted logs\n\n3.0.3\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 1,
                  "endLine": 107,
                  "endColumn": 9,
                  "snippet": {
                    "text": "- In auditd, close the logging file descriptor when logging is suspended\n- Update the capabilities lookup table to match 5.16 kernel\n- Improve interpretation of renamat & faccessat family of syscalls\n- Update syscall table for the 5.16 kernel\n- Reduce dependency from initscripts to initscripts-service\n\n3.0.6\n",
                    "rendered": {
                      "text": "- In auditd, close the logging file descriptor when logging is suspended\n- Update the capabilities lookup table to match 5.16 kernel\n- Improve interpretation of renamat & faccessat family of syscalls\n- Update syscall table for the 5.16 kernel\n- Reduce dependency from initscripts to initscripts-service\n\n3.0.6\n",
                      "markdown": "`- In auditd, close the logging file descriptor when logging is suspended\n- Update the capabilities lookup table to match 5.16 kernel\n- Improve interpretation of renamat & faccessat family of syscalls\n- Update syscall table for the 5.16 kernel\n- Reduce dependency from initscripts to initscripts-service\n\n3.0.6\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 1,
                  "endLine": 105,
                  "endColumn": 9,
                  "snippet": {
                    "text": "3.0.7\n- Add support for the OPENAT2 record type (Richard Guy Briggs)\n- In auditd, close the logging file descriptor when logging is suspended\n- Update the capabilities lookup table to match 5.16 kernel\n- Improve interpretation of renamat & faccessat family of syscalls\n- Update syscall table for the 5.16 kernel\n- Reduce dependency from initscripts to initscripts-service\n",
                    "rendered": {
                      "text": "3.0.7\n- Add support for the OPENAT2 record type (Richard Guy Briggs)\n- In auditd, close the logging file descriptor when logging is suspended\n- Update the capabilities lookup table to match 5.16 kernel\n- Improve interpretation of renamat & faccessat family of syscalls\n- Update syscall table for the 5.16 kernel\n- Reduce dependency from initscripts to initscripts-service\n",
                      "markdown": "`3.0.7\n- Add support for the OPENAT2 record type (Richard Guy Briggs)\n- In auditd, close the logging file descriptor when logging is suspended\n- Update the capabilities lookup table to match 5.16 kernel\n- Improve interpretation of renamat & faccessat family of syscalls\n- Update syscall table for the 5.16 kernel\n- Reduce dependency from initscripts to initscripts-service\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 1,
                  "endLine": 88,
                  "endColumn": 9,
                  "snippet": {
                    "text": "- In auditd, release the async flush lock on stop\n- Don't allow auditd to log directly into /var/log when log_group is non-zero\n- Cleanup krb5 memory leaks on error paths\n- Update auditd.cron to use auditctl --signal\n- In auparse, if too many fields, realloc array bigger (Paul Wolneykien)\n- In auparse, special case kernel module name interpretation\n- If overflow_action is ignore, don't treat as an error\n",
                    "rendered": {
                      "text": "- In auditd, release the async flush lock on stop\n- Don't allow auditd to log directly into /var/log when log_group is non-zero\n- Cleanup krb5 memory leaks on error paths\n- Update auditd.cron to use auditctl --signal\n- In auparse, if too many fields, realloc array bigger (Paul Wolneykien)\n- In auparse, special case kernel module name interpretation\n- If overflow_action is ignore, don't treat as an error\n",
                      "markdown": "`- In auditd, release the async flush lock on stop\n- Don't allow auditd to log directly into /var/log when log_group is non-zero\n- Cleanup krb5 memory leaks on error paths\n- Update auditd.cron to use auditctl --signal\n- In auparse, if too many fields, realloc array bigger (Paul Wolneykien)\n- In auparse, special case kernel module name interpretation\n- If overflow_action is ignore, don't treat as an error\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 1,
                  "endLine": 59,
                  "endColumn": 9,
                  "snippet": {
                    "text": "- In auparse, when files are given, also consider EUID for access\n- Auparse now interprets unnamed/anonymous sockets (Enzo Matsumiya)\n- Disable Python bindings from setting rules due to swig bug (S. Trofimovich)\n- Update all lookup tables for the 6.5 kernel\n- Don't be as paranoid about auditctl -R file permissions\n- In ausearch, correct subject/object search to be an and if both are given\n- Adjust formats for 64 bit time_t\n",
                    "rendered": {
                      "text": "- In auparse, when files are given, also consider EUID for access\n- Auparse now interprets unnamed/anonymous sockets (Enzo Matsumiya)\n- Disable Python bindings from setting rules due to swig bug (S. Trofimovich)\n- Update all lookup tables for the 6.5 kernel\n- Don't be as paranoid about auditctl -R file permissions\n- In ausearch, correct subject/object search to be an and if both are given\n- Adjust formats for 64 bit time_t\n",
                      "markdown": "`- In auparse, when files are given, also consider EUID for access\n- Auparse now interprets unnamed/anonymous sockets (Enzo Matsumiya)\n- Disable Python bindings from setting rules due to swig bug (S. Trofimovich)\n- Update all lookup tables for the 6.5 kernel\n- Don't be as paranoid about auditctl -R file permissions\n- In ausearch, correct subject/object search to be an and if both are given\n- Adjust formats for 64 bit time_t\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 1,
                  "endLine": 51,
                  "endColumn": 9,
                  "snippet": {
                    "text": "- Drop nispom rules\n- Add intepretations for fsconfig, fsopen, fsmount, & move_mount\n- Many code fixups (cgzones)\n- Update syscall and interpretation tables to the 6.8 kernel\n\n3.1.2\n- When processing a run level change, make auditd exit\n",
                    "rendered": {
                      "text": "- Drop nispom rules\n- Add intepretations for fsconfig, fsopen, fsmount, & move_mount\n- Many code fixups (cgzones)\n- Update syscall and interpretation tables to the 6.8 kernel\n\n3.1.2\n- When processing a run level change, make auditd exit\n",
                      "markdown": "`- Drop nispom rules\n- Add intepretations for fsconfig, fsopen, fsmount, & move_mount\n- Many code fixups (cgzones)\n- Update syscall and interpretation tables to the 6.8 kernel\n\n3.1.2\n- When processing a run level change, make auditd exit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 17,
                  "endLine": 40,
                  "endColumn": 25,
                  "snippet": {
                    "text": "- Require the use of the 5.0 or later kernel headers\n- New README.md file\n- Rewrite legacy service functions in terms of systemctl\n- Consolidate and update end of event detection to a common function\n- Split off rule loading from auditd.service into audit-rules.service\n- Refactor libaudit.h to split out logging functions and record numbers\n- Speed up aureport --summary reports\n",
                    "rendered": {
                      "text": "- Require the use of the 5.0 or later kernel headers\n- New README.md file\n- Rewrite legacy service functions in terms of systemctl\n- Consolidate and update end of event detection to a common function\n- Split off rule loading from auditd.service into audit-rules.service\n- Refactor libaudit.h to split out logging functions and record numbers\n- Speed up aureport --summary reports\n",
                      "markdown": "`- Require the use of the 5.0 or later kernel headers\n- New README.md file\n- Rewrite legacy service functions in terms of systemctl\n- Consolidate and update end of event detection to a common function\n- Split off rule loading from auditd.service into audit-rules.service\n- Refactor libaudit.h to split out logging functions and record numbers\n- Speed up aureport --summary reports\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 1,
                  "endLine": 31,
                  "endColumn": 9,
                  "snippet": {
                    "text": "- Add audisp-filter plugin (Attila Lakatos)\n- Improve sorting speed of aureport --summary reports\n- auditd & audit-rules.service pick up paths automatically (Laurent Bigonville)\n- Update auparse normalizer for new syscalls\n\n4.0\n- Drop python2 support\n",
                    "rendered": {
                      "text": "- Add audisp-filter plugin (Attila Lakatos)\n- Improve sorting speed of aureport --summary reports\n- auditd & audit-rules.service pick up paths automatically (Laurent Bigonville)\n- Update auparse normalizer for new syscalls\n\n4.0\n- Drop python2 support\n",
                      "markdown": "`- Add audisp-filter plugin (Attila Lakatos)\n- Improve sorting speed of aureport --summary reports\n- auditd & audit-rules.service pick up paths automatically (Laurent Bigonville)\n- Update auparse normalizer for new syscalls\n\n4.0\n- Drop python2 support\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 1,
                  "endLine": 24,
                  "endColumn": 9,
                  "snippet": {
                    "text": "- Make status report uniform\n\n4.0.1\n- Update TRUSTED_APP interpretation to look for known fields\n- In auditd plugins, allow variable amount of arguments (Attila Lakatos)\n- Fix augenrules to work correctly when kernel is in immutable mode\n- Add ausearch_cur_event to auparse library (Attila Lakatos)\n",
                    "rendered": {
                      "text": "- Make status report uniform\n\n4.0.1\n- Update TRUSTED_APP interpretation to look for known fields\n- In auditd plugins, allow variable amount of arguments (Attila Lakatos)\n- Fix augenrules to work correctly when kernel is in immutable mode\n- Add ausearch_cur_event to auparse library (Attila Lakatos)\n",
                      "markdown": "`- Make status report uniform\n\n4.0.1\n- Update TRUSTED_APP interpretation to look for known fields\n- In auditd plugins, allow variable amount of arguments (Attila Lakatos)\n- Fix augenrules to work correctly when kernel is in immutable mode\n- Add ausearch_cur_event to auparse library (Attila Lakatos)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 1,
                  "endLine": 20,
                  "endColumn": 9,
                  "snippet": {
                    "text": "- Correct output when displaying rules with exe/path/dir (Attila Lakatos)\n- Fix auparse lookup test to not use the system libaupaurse\n- Improve auparse metrics\n- Update auparse normalizer for recent syscalls\n- Make status report uniform\n\n4.0.1\n",
                    "rendered": {
                      "text": "- Correct output when displaying rules with exe/path/dir (Attila Lakatos)\n- Fix auparse lookup test to not use the system libaupaurse\n- Improve auparse metrics\n- Update auparse normalizer for recent syscalls\n- Make status report uniform\n\n4.0.1\n",
                      "markdown": "`- Correct output when displaying rules with exe/path/dir (Attila Lakatos)\n- Fix auparse lookup test to not use the system libaupaurse\n- Improve auparse metrics\n- Update auparse normalizer for recent syscalls\n- Make status report uniform\n\n4.0.1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 1,
                  "endLine": 7,
                  "endColumn": 9,
                  "snippet": {
                    "text": "- Disable ProtectKernelModules by default in auditd.service\n- Skip plugin configs that do not have .conf suffix\n- audisp-filter: iterate records correctly when forwarding\n- Update syscall table for missing syscalls\n- Modify ausearch checkpoint code to address 64 inode and device numbers\n- Fix potential segfault interpreting relative paths\n\n",
                    "rendered": {
                      "text": "- Disable ProtectKernelModules by default in auditd.service\n- Skip plugin configs that do not have .conf suffix\n- audisp-filter: iterate records correctly when forwarding\n- Update syscall table for missing syscalls\n- Modify ausearch checkpoint code to address 64 inode and device numbers\n- Fix potential segfault interpreting relative paths\n\n",
                      "markdown": "`- Disable ProtectKernelModules by default in auditd.service\n- Skip plugin configs that do not have .conf suffix\n- audisp-filter: iterate records correctly when forwarding\n- Update syscall table for missing syscalls\n- Modify ausearch checkpoint code to address 64 inode and device numbers\n- Fix potential segfault interpreting relative paths\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 310,
                  "startColumn": 49,
                  "endLine": 310,
                  "endColumn": 55,
                  "snippet": {
                    "text": "- Add support for filesystem filter type (Richard Guy Briggs)\n- Add file system type table for fstype lookup\n- Add command line option to auditd & audispd for config dir path (Dan Born)\n- Fix auparse serial parsing of event when system time < 9 characters (kruvin)\n- In auparse, allow non-equality comparisons for uid & gid fields (#1399314)\n- In auparse_normalize, add support for USER_DEVICE events\n- In audispd.conf, add new plugin_dir config item to customize plugin location\n",
                    "rendered": {
                      "text": "- Add support for filesystem filter type (Richard Guy Briggs)\n- Add file system type table for fstype lookup\n- Add command line option to auditd & audispd for config dir path (Dan Born)\n- Fix auparse serial parsing of event when system time < 9 characters (kruvin)\n- In auparse, allow non-equality comparisons for uid & gid fields (#1399314)\n- In auparse_normalize, add support for USER_DEVICE events\n- In audispd.conf, add new plugin_dir config item to customize plugin location\n",
                      "markdown": "`- Add support for filesystem filter type (Richard Guy Briggs)\n- Add file system type table for fstype lookup\n- Add command line option to auditd & audispd for config dir path (Dan Born)\n- Fix auparse serial parsing of event when system time < 9 characters (kruvin)\n- In auparse, allow non-equality comparisons for uid & gid fields (#1399314)\n- In auparse_normalize, add support for USER_DEVICE events\n- In audispd.conf, add new plugin_dir config item to customize plugin location\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 297,
                  "startColumn": 31,
                  "endLine": 297,
                  "endColumn": 38,
                  "snippet": {
                    "text": "- In auparse_normalize, pick up permission & ownership changes as obj2\n- In auparse_normalize, pick up uid/gid for setuid/gid syscalls as obj2\n- In auparse_normalize, pick up link for symlink syscalls as obj2\n- In auparse_normalize, correct mount records based on success\n- In auparse_normalize, correct object for USER_MGMT, ACCT_LOCK, & ACCT_UNLOCK\n- Add default port to auditd.conf (#1455598)\n- Fix auvirt to report AVC's (#982154)\n",
                    "rendered": {
                      "text": "- In auparse_normalize, pick up permission & ownership changes as obj2\n- In auparse_normalize, pick up uid/gid for setuid/gid syscalls as obj2\n- In auparse_normalize, pick up link for symlink syscalls as obj2\n- In auparse_normalize, correct mount records based on success\n- In auparse_normalize, correct object for USER_MGMT, ACCT_LOCK, & ACCT_UNLOCK\n- Add default port to auditd.conf (#1455598)\n- Fix auvirt to report AVC's (#982154)\n",
                      "markdown": "`- In auparse_normalize, pick up permission & ownership changes as obj2\n- In auparse_normalize, pick up uid/gid for setuid/gid syscalls as obj2\n- In auparse_normalize, pick up link for symlink syscalls as obj2\n- In auparse_normalize, correct mount records based on success\n- In auparse_normalize, correct object for USER_MGMT, ACCT_LOCK, & ACCT_UNLOCK\n- Add default port to auditd.conf (#1455598)\n- Fix auvirt to report AVC's (#982154)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 291,
                  "startColumn": 43,
                  "endLine": 291,
                  "endColumn": 50,
                  "snippet": {
                    "text": "- Add support for ambient capability fields (Richard Guy Briggs)\n- Update auparse-normalizer to support TTY events\n- Add auparse_normalize_object_primary2 API\n- In ausearch text format, add 'to xxx' for mount operations\n- In ausearch add new --extra-obj2 option for CSV output\n- In auparse_normalize, pick up second file name for rename syscalls\n- In auparse_normalize, pick up permission & ownership changes as obj2\n",
                    "rendered": {
                      "text": "- Add support for ambient capability fields (Richard Guy Briggs)\n- Update auparse-normalizer to support TTY events\n- Add auparse_normalize_object_primary2 API\n- In ausearch text format, add 'to xxx' for mount operations\n- In ausearch add new --extra-obj2 option for CSV output\n- In auparse_normalize, pick up second file name for rename syscalls\n- In auparse_normalize, pick up permission & ownership changes as obj2\n",
                      "markdown": "`- Add support for ambient capability fields (Richard Guy Briggs)\n- Update auparse-normalizer to support TTY events\n- Add auparse_normalize_object_primary2 API\n- In ausearch text format, add 'to xxx' for mount operations\n- In ausearch add new --extra-obj2 option for CSV output\n- In auparse_normalize, pick up second file name for rename syscalls\n- In auparse_normalize, pick up permission & ownership changes as obj2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 262,
                  "startColumn": 22,
                  "endLine": 262,
                  "endColumn": 31,
                  "snippet": {
                    "text": "2.8.3\n- Correct msg function name in LRU debug code\n- Fix a segfault in auditd when dns resolution isn't available\n- Make a reload legacy service for auditd\n- In auparse python bindings, expose some new types that were missing\n- In normalizer, pickup subject kind for user_login events\n- Fix interpretation of unknown ioctcmds (#1540507)\n",
                    "rendered": {
                      "text": "2.8.3\n- Correct msg function name in LRU debug code\n- Fix a segfault in auditd when dns resolution isn't available\n- Make a reload legacy service for auditd\n- In auparse python bindings, expose some new types that were missing\n- In normalizer, pickup subject kind for user_login events\n- Fix interpretation of unknown ioctcmds (#1540507)\n",
                      "markdown": "`2.8.3\n- Correct msg function name in LRU debug code\n- Fix a segfault in auditd when dns resolution isn't available\n- Make a reload legacy service for auditd\n- In auparse python bindings, expose some new types that were missing\n- In normalizer, pickup subject kind for user_login events\n- Fix interpretation of unknown ioctcmds (#1540507)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 252,
                  "startColumn": 24,
                  "endLine": 252,
                  "endColumn": 31,
                  "snippet": {
                    "text": "- Improve personality interpretation by using PERS_MASK\n- Speedup ausearch/report parsing RAW logging format by caching uid/name lookup\n- Change auparse python bindings to shared object (Issue #121)\n- Add error messages for watch permissions\n- If audit rules file doesn't exist log error message instead of info message\n- Revise error message for unmatched options in auditctl\n- In audisp-remote, fixup remote endpoint disappearing in ascii format\n",
                    "rendered": {
                      "text": "- Improve personality interpretation by using PERS_MASK\n- Speedup ausearch/report parsing RAW logging format by caching uid/name lookup\n- Change auparse python bindings to shared object (Issue #121)\n- Add error messages for watch permissions\n- If audit rules file doesn't exist log error message instead of info message\n- Revise error message for unmatched options in auditctl\n- In audisp-remote, fixup remote endpoint disappearing in ascii format\n",
                      "markdown": "`- Improve personality interpretation by using PERS_MASK\n- Speedup ausearch/report parsing RAW logging format by caching uid/name lookup\n- Change auparse python bindings to shared object (Issue #121)\n- Add error messages for watch permissions\n- If audit rules file doesn't exist log error message instead of info message\n- Revise error message for unmatched options in auditctl\n- In audisp-remote, fixup remote endpoint disappearing in ascii format\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 238,
                  "startColumn": 44,
                  "endLine": 238,
                  "endColumn": 50,
                  "snippet": {
                    "text": "- Deprecate support for Alpha & IA64 processors\n- If space_left_action is rotate, allow it every time (#1718444)\n- In auparse, drop standalone EOE events\n- Add milliseconds column for ausearch extra time csv format\n- Fix aureport first event reporting when no start given\n- In audisp-remote, add new config item for startup connection errors\n- Remove dependency on chkconfig\n",
                    "rendered": {
                      "text": "- Deprecate support for Alpha & IA64 processors\n- If space_left_action is rotate, allow it every time (#1718444)\n- In auparse, drop standalone EOE events\n- Add milliseconds column for ausearch extra time csv format\n- Fix aureport first event reporting when no start given\n- In audisp-remote, add new config item for startup connection errors\n- Remove dependency on chkconfig\n",
                      "markdown": "`- Deprecate support for Alpha & IA64 processors\n- If space_left_action is rotate, allow it every time (#1718444)\n- In auparse, drop standalone EOE events\n- Add milliseconds column for ausearch extra time csv format\n- Fix aureport first event reporting when no start given\n- In audisp-remote, add new config item for startup connection errors\n- Remove dependency on chkconfig\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 236,
                  "startColumn": 48,
                  "endLine": 236,
                  "endColumn": 54,
                  "snippet": {
                    "text": "- Add exe field to audit_log_user_command in libaudit\n- In auditctl support filter on socket address families (Richard Guy Briggs)\n- Deprecate support for Alpha & IA64 processors\n- If space_left_action is rotate, allow it every time (#1718444)\n- In auparse, drop standalone EOE events\n- Add milliseconds column for ausearch extra time csv format\n- Fix aureport first event reporting when no start given\n",
                    "rendered": {
                      "text": "- Add exe field to audit_log_user_command in libaudit\n- In auditctl support filter on socket address families (Richard Guy Briggs)\n- Deprecate support for Alpha & IA64 processors\n- If space_left_action is rotate, allow it every time (#1718444)\n- In auparse, drop standalone EOE events\n- Add milliseconds column for ausearch extra time csv format\n- Fix aureport first event reporting when no start given\n",
                      "markdown": "`- Add exe field to audit_log_user_command in libaudit\n- In auditctl support filter on socket address families (Richard Guy Briggs)\n- Deprecate support for Alpha & IA64 processors\n- If space_left_action is rotate, allow it every time (#1718444)\n- In auparse, drop standalone EOE events\n- Add milliseconds column for ausearch extra time csv format\n- Fix aureport first event reporting when no start given\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 229,
                  "startColumn": 19,
                  "endLine": 229,
                  "endColumn": 27,
                  "snippet": {
                    "text": "- In ausearch/report fix --end to use midnight time instead of now (#1671338)\n- Add substitute functions for strndupa & rawmemchr\n- Fix memleak in auparse caused by corrected event ordering\n- Fix legacy reload script to reload audit rules when daemon is reloaded\n- Support for unescaping in trusted messages (Dmitry Voronin)\n- In auditd, use standard template for DAEMON events (Richard Guy Briggs)\n- In aureport, fix segfault for malformed USER_CMD events\n",
                    "rendered": {
                      "text": "- In ausearch/report fix --end to use midnight time instead of now (#1671338)\n- Add substitute functions for strndupa & rawmemchr\n- Fix memleak in auparse caused by corrected event ordering\n- Fix legacy reload script to reload audit rules when daemon is reloaded\n- Support for unescaping in trusted messages (Dmitry Voronin)\n- In auditd, use standard template for DAEMON events (Richard Guy Briggs)\n- In aureport, fix segfault for malformed USER_CMD events\n",
                      "markdown": "`- In ausearch/report fix --end to use midnight time instead of now (#1671338)\n- Add substitute functions for strndupa & rawmemchr\n- Fix memleak in auparse caused by corrected event ordering\n- Fix legacy reload script to reload audit rules when daemon is reloaded\n- Support for unescaping in trusted messages (Dmitry Voronin)\n- In auditd, use standard template for DAEMON events (Richard Guy Briggs)\n- In aureport, fix segfault for malformed USER_CMD events\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 226,
                  "startColumn": 46,
                  "endLine": 226,
                  "endColumn": 52,
                  "snippet": {
                    "text": "- Fix minor memory leak in auditd kerberos credentials code\n- Allow exclude and user filter by executable name (Ondrej Mosnacek)\n- Fix auditd regression where keep_logs is limited by rotate_logs 2 file test\n- In ausearch/report fix --end to use midnight time instead of now (#1671338)\n- Add substitute functions for strndupa & rawmemchr\n- Fix memleak in auparse caused by corrected event ordering\n- Fix legacy reload script to reload audit rules when daemon is reloaded\n",
                    "rendered": {
                      "text": "- Fix minor memory leak in auditd kerberos credentials code\n- Allow exclude and user filter by executable name (Ondrej Mosnacek)\n- Fix auditd regression where keep_logs is limited by rotate_logs 2 file test\n- In ausearch/report fix --end to use midnight time instead of now (#1671338)\n- Add substitute functions for strndupa & rawmemchr\n- Fix memleak in auparse caused by corrected event ordering\n- Fix legacy reload script to reload audit rules when daemon is reloaded\n",
                      "markdown": "`- Fix minor memory leak in auditd kerberos credentials code\n- Allow exclude and user filter by executable name (Ondrej Mosnacek)\n- Fix auditd regression where keep_logs is limited by rotate_logs 2 file test\n- In ausearch/report fix --end to use midnight time instead of now (#1671338)\n- Add substitute functions for strndupa & rawmemchr\n- Fix memleak in auparse caused by corrected event ordering\n- Fix legacy reload script to reload audit rules when daemon is reloaded\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 211,
                  "startColumn": 19,
                  "endLine": 211,
                  "endColumn": 25,
                  "snippet": {
                    "text": "- In auditd, calculate right size and location for network originating events\n- Make legacy script wait for auditd to terminate (#1643567)\n- Treat all network originating events as VER2 so dispatcher doesn't format it\n- If an event has a node name make it VER2 so dispatcher doesnt format it\n- In audisp-remote do an initial connection attempt (#1625156)\n- In auditd, allow expression of space left as a percentage (#1650670)\n- On PPC64LE systems, only allow 64 bit rules (#1462178)\n",
                    "rendered": {
                      "text": "- In auditd, calculate right size and location for network originating events\n- Make legacy script wait for auditd to terminate (#1643567)\n- Treat all network originating events as VER2 so dispatcher doesn't format it\n- If an event has a node name make it VER2 so dispatcher doesnt format it\n- In audisp-remote do an initial connection attempt (#1625156)\n- In auditd, allow expression of space left as a percentage (#1650670)\n- On PPC64LE systems, only allow 64 bit rules (#1462178)\n",
                      "markdown": "`- In auditd, calculate right size and location for network originating events\n- Make legacy script wait for auditd to terminate (#1643567)\n- Treat all network originating events as VER2 so dispatcher doesn't format it\n- If an event has a node name make it VER2 so dispatcher doesnt format it\n- In audisp-remote do an initial connection attempt (#1625156)\n- In auditd, allow expression of space left as a percentage (#1650670)\n- On PPC64LE systems, only allow 64 bit rules (#1462178)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 209,
                  "startColumn": 13,
                  "endLine": 209,
                  "endColumn": 21,
                  "snippet": {
                    "text": "- Port af_unix plugin to libev\n- In auditd, fix extract_type function for network originating events\n- In auditd, calculate right size and location for network originating events\n- Make legacy script wait for auditd to terminate (#1643567)\n- Treat all network originating events as VER2 so dispatcher doesn't format it\n- If an event has a node name make it VER2 so dispatcher doesnt format it\n- In audisp-remote do an initial connection attempt (#1625156)\n",
                    "rendered": {
                      "text": "- Port af_unix plugin to libev\n- In auditd, fix extract_type function for network originating events\n- In auditd, calculate right size and location for network originating events\n- Make legacy script wait for auditd to terminate (#1643567)\n- Treat all network originating events as VER2 so dispatcher doesn't format it\n- If an event has a node name make it VER2 so dispatcher doesnt format it\n- In audisp-remote do an initial connection attempt (#1625156)\n",
                      "markdown": "`- Port af_unix plugin to libev\n- In auditd, fix extract_type function for network originating events\n- In auditd, calculate right size and location for network originating events\n- Make legacy script wait for auditd to terminate (#1643567)\n- Treat all network originating events as VER2 so dispatcher doesn't format it\n- If an event has a node name make it VER2 so dispatcher doesnt format it\n- In audisp-remote do an initial connection attempt (#1625156)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 176,
                  "startColumn": 22,
                  "endLine": 176,
                  "endColumn": 28,
                  "snippet": {
                    "text": "- Add support for not equal operator in audit by executable (Ondrej Mosnacek)\n- Hide lru symbols in auparse\n- Add systemd process protections\n- Fix aureport summary time range reporting\n- Allow unlimited retries on startup for remote logging\n- Add queue_depth to remote logging stats and increase default queue_depth size\n- Fix segfault on shutdown\n",
                    "rendered": {
                      "text": "- Add support for not equal operator in audit by executable (Ondrej Mosnacek)\n- Hide lru symbols in auparse\n- Add systemd process protections\n- Fix aureport summary time range reporting\n- Allow unlimited retries on startup for remote logging\n- Add queue_depth to remote logging stats and increase default queue_depth size\n- Fix segfault on shutdown\n",
                      "markdown": "`- Add support for not equal operator in audit by executable (Ondrej Mosnacek)\n- Hide lru symbols in auparse\n- Add systemd process protections\n- Fix aureport summary time range reporting\n- Allow unlimited retries on startup for remote logging\n- Add queue_depth to remote logging stats and increase default queue_depth size\n- Fix segfault on shutdown\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 138,
                  "startColumn": 56,
                  "endLine": 138,
                  "endColumn": 61,
                  "snippet": {
                    "text": "- Add ProtectHome and RestrictRealtime to auditd.service\n- In auditd, read up to 3 netlink packets in a row\n- In auditd, do not validate path to plugin unless active\n- In auparse, only emit config errors when AUPARSE_DEBUG env variable exists\n\n3.0.2\n- In audispd-statsd plugin, use struct sockaddr_storage (Ville Heikkinen)\n",
                    "rendered": {
                      "text": "- Add ProtectHome and RestrictRealtime to auditd.service\n- In auditd, read up to 3 netlink packets in a row\n- In auditd, do not validate path to plugin unless active\n- In auparse, only emit config errors when AUPARSE_DEBUG env variable exists\n\n3.0.2\n- In audispd-statsd plugin, use struct sockaddr_storage (Ville Heikkinen)\n",
                      "markdown": "`- Add ProtectHome and RestrictRealtime to auditd.service\n- In auditd, read up to 3 netlink packets in a row\n- In auditd, do not validate path to plugin unless active\n- In auparse, only emit config errors when AUPARSE_DEBUG env variable exists\n\n3.0.2\n- In audispd-statsd plugin, use struct sockaddr_storage (Ville Heikkinen)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 49,
                  "endLine": 47,
                  "endColumn": 56,
                  "snippet": {
                    "text": "- Limit libaudit python bindings to logging functions\n- Add a metrics function for auparse\n- Change auditctl to use pidfd_send_signal for signaling auditd\n- Adjust watches to optimize syscalls hooked when watch file access\n- Drop nispom rules\n- Add intepretations for fsconfig, fsopen, fsmount, & move_mount\n- Many code fixups (cgzones)\n",
                    "rendered": {
                      "text": "- Limit libaudit python bindings to logging functions\n- Add a metrics function for auparse\n- Change auditctl to use pidfd_send_signal for signaling auditd\n- Adjust watches to optimize syscalls hooked when watch file access\n- Drop nispom rules\n- Add intepretations for fsconfig, fsopen, fsmount, & move_mount\n- Many code fixups (cgzones)\n",
                      "markdown": "`- Limit libaudit python bindings to logging functions\n- Add a metrics function for auparse\n- Change auditctl to use pidfd_send_signal for signaling auditd\n- Adjust watches to optimize syscalls hooked when watch file access\n- Drop nispom rules\n- Add intepretations for fsconfig, fsopen, fsmount, & move_mount\n- Many code fixups (cgzones)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 46,
                  "endLine": 40,
                  "snippet": {
                    "text": "- Drop SysVinit support\n- Require the use of the 5.0 or later kernel headers\n- New README.md file\n- Rewrite legacy service functions in terms of systemctl\n- Consolidate and update end of event detection to a common function\n- Split off rule loading from auditd.service into audit-rules.service\n- Refactor libaudit.h to split out logging functions and record numbers\n- Speed up aureport --summary reports\n",
                    "rendered": {
                      "text": "- Drop SysVinit support\n- Require the use of the 5.0 or later kernel headers\n- New README.md file\n- Rewrite legacy service functions in terms of systemctl\n- Consolidate and update end of event detection to a common function\n- Split off rule loading from auditd.service into audit-rules.service\n- Refactor libaudit.h to split out logging functions and record numbers\n- Speed up aureport --summary reports\n",
                      "markdown": "`- Drop SysVinit support\n- Require the use of the 5.0 or later kernel headers\n- New README.md file\n- Rewrite legacy service functions in terms of systemctl\n- Consolidate and update end of event detection to a common function\n- Split off rule loading from auditd.service into audit-rules.service\n- Refactor libaudit.h to split out logging functions and record numbers\n- Speed up aureport --summary reports\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/ChangeLog"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 16,
                  "endLine": 39,
                  "endColumn": 25,
                  "snippet": {
                    "text": "- Drop SysVinit support\n- Require the use of the 5.0 or later kernel headers\n- New README.md file\n- Rewrite legacy service functions in terms of systemctl\n- Consolidate and update end of event detection to a common function\n- Split off rule loading from auditd.service into audit-rules.service\n- Refactor libaudit.h to split out logging functions and record numbers\n",
                    "rendered": {
                      "text": "- Drop SysVinit support\n- Require the use of the 5.0 or later kernel headers\n- New README.md file\n- Rewrite legacy service functions in terms of systemctl\n- Consolidate and update end of event detection to a common function\n- Split off rule loading from auditd.service into audit-rules.service\n- Refactor libaudit.h to split out logging functions and record numbers\n",
                      "markdown": "`- Drop SysVinit support\n- Require the use of the 5.0 or later kernel headers\n- New README.md file\n- Rewrite legacy service functions in terms of systemctl\n- Consolidate and update end of event detection to a common function\n- Split off rule loading from auditd.service into audit-rules.service\n- Refactor libaudit.h to split out logging functions and record numbers\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-time.c"
                },
                "region": {
                  "startLine": 424,
                  "startColumn": 37,
                  "endLine": 424,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\t\t\treturn 1;\n\t\t}\n\t\tif (*ret != 0) {\n\t\t\tfprintf(stderr, \"Error parsing end time (%s)\\n\", ti);\n\t\t\treturn 1;\n\t\t}\n\t} else {\n",
                    "rendered": {
                      "text": "\t\t\treturn 1;\n\t\t}\n\t\tif (*ret != 0) {\n\t\t\tfprintf(stderr, \"Error parsing end time (%s)\\n\", ti);\n\t\t\treturn 1;\n\t\t}\n\t} else {\n",
                      "markdown": "`\t\t\treturn 1;\n\t\t}\n\t\tif (*ret != 0) {\n\t\t\tfprintf(stderr, \"Error parsing end time (%s)\\n\", ti);\n\t\t\treturn 1;\n\t\t}\n\t} else {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-time.c"
                },
                "region": {
                  "startLine": 419,
                  "startColumn": 18,
                  "endLine": 419,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\tret = strptime(tmp_t, \"%X\", &d);\n\t\tif (ret == NULL) {\n\t\t\tfprintf(stderr,\n\t     \"Invalid end time (%s). Hour, Minute, and Second are required.\\n\",\n\t\t\t\tti);\n\t\t\treturn 1;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\tret = strptime(tmp_t, \"%X\", &d);\n\t\tif (ret == NULL) {\n\t\t\tfprintf(stderr,\n\t     \"Invalid end time (%s). Hour, Minute, and Second are required.\\n\",\n\t\t\t\tti);\n\t\t\treturn 1;\n\t\t}\n",
                      "markdown": "`\t\tret = strptime(tmp_t, \"%X\", &d);\n\t\tif (ret == NULL) {\n\t\t\tfprintf(stderr,\n\t     \"Invalid end time (%s). Hour, Minute, and Second are required.\\n\",\n\t\t\t\tti);\n\t\t\treturn 1;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-time.c"
                },
                "region": {
                  "startLine": 344,
                  "startColumn": 39,
                  "endLine": 344,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\t\t\treturn 1;\n\t\t}\n\t\tif (*ret != 0) {\n\t\t\tfprintf(stderr, \"Error parsing start time (%s)\\n\", ti);\n\t\t\treturn 1;\n\t\t}\n\t} else\n",
                    "rendered": {
                      "text": "\t\t\treturn 1;\n\t\t}\n\t\tif (*ret != 0) {\n\t\t\tfprintf(stderr, \"Error parsing start time (%s)\\n\", ti);\n\t\t\treturn 1;\n\t\t}\n\t} else\n",
                      "markdown": "`\t\t\treturn 1;\n\t\t}\n\t\tif (*ret != 0) {\n\t\t\tfprintf(stderr, \"Error parsing start time (%s)\\n\", ti);\n\t\t\treturn 1;\n\t\t}\n\t} else\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-time.c"
                },
                "region": {
                  "startLine": 339,
                  "startColumn": 15,
                  "endLine": 339,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\tret = strptime(tmp_t, \"%X\", &d);\n\t\tif (ret == NULL) {\n\t\t\tfprintf(stderr,\n\t\"Invalid start time (%s). Hour, Minute, and Second are required.\\n\",\n\t\t\t\tti);\n\t\t\treturn 1;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\tret = strptime(tmp_t, \"%X\", &d);\n\t\tif (ret == NULL) {\n\t\t\tfprintf(stderr,\n\t\"Invalid start time (%s). Hour, Minute, and Second are required.\\n\",\n\t\t\t\tti);\n\t\t\treturn 1;\n\t\t}\n",
                      "markdown": "`\t\tret = strptime(tmp_t, \"%X\", &d);\n\t\tif (ret == NULL) {\n\t\t\tfprintf(stderr,\n\t\"Invalid start time (%s). Hour, Minute, and Second are required.\\n\",\n\t\t\t\tti);\n\t\t\treturn 1;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditd-sendmail.c"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 1,
                  "endLine": 50,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\tfd = safe_popen(&pid, mail_acct);\n\t\tif (fd < 0) \n\t\t\treturn 1;\n\t\tmail = fdopen(fd, \"w\");\n\t\tif (mail == NULL) {\n\t\t\tkill(pid, SIGKILL);\n\t\t\tclose(fd);\n",
                    "rendered": {
                      "text": "\t\tfd = safe_popen(&pid, mail_acct);\n\t\tif (fd < 0) \n\t\t\treturn 1;\n\t\tmail = fdopen(fd, \"w\");\n\t\tif (mail == NULL) {\n\t\t\tkill(pid, SIGKILL);\n\t\t\tclose(fd);\n",
                      "markdown": "`\t\tfd = safe_popen(&pid, mail_acct);\n\t\tif (fd < 0) \n\t\t\treturn 1;\n\t\tmail = fdopen(fd, \"w\");\n\t\tif (mail == NULL) {\n\t\t\tkill(pid, SIGKILL);\n\t\t\tclose(fd);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 676,
                  "startColumn": 25,
                  "endLine": 676,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t\t\t\t\tl->s.comm ? l->s.comm: \"?\", 0);\n\t\t\tprintf(\" %s %s \",\n\t\t\t\tl->s.terminal ? l->s.terminal : \"?\",\n\t\t\t\tl->s.hostname ? l->s.hostname : \"?\");\n\t\t\tsafe_print_string(aulookup_uid(l->s.loginuid, name,\n\t\t\t\t\tsizeof(name)), 0);\n\t\t\tprintf(\" %lu\\n\", l->e.serial);\n",
                    "rendered": {
                      "text": "\t\t\t\t\tl->s.comm ? l->s.comm: \"?\", 0);\n\t\t\tprintf(\" %s %s \",\n\t\t\t\tl->s.terminal ? l->s.terminal : \"?\",\n\t\t\t\tl->s.hostname ? l->s.hostname : \"?\");\n\t\t\tsafe_print_string(aulookup_uid(l->s.loginuid, name,\n\t\t\t\t\tsizeof(name)), 0);\n\t\t\tprintf(\" %lu\\n\", l->e.serial);\n",
                      "markdown": "`\t\t\t\t\tl->s.comm ? l->s.comm: \"?\", 0);\n\t\t\tprintf(\" %s %s \",\n\t\t\t\tl->s.terminal ? l->s.terminal : \"?\",\n\t\t\t\tl->s.hostname ? l->s.hostname : \"?\");\n\t\t\tsafe_print_string(aulookup_uid(l->s.loginuid, name,\n\t\t\t\t\tsizeof(name)), 0);\n\t\t\tprintf(\" %lu\\n\", l->e.serial);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 676,
                  "startColumn": 9,
                  "endLine": 676,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t\t\t\t\tl->s.comm ? l->s.comm: \"?\", 0);\n\t\t\tprintf(\" %s %s \",\n\t\t\t\tl->s.terminal ? l->s.terminal : \"?\",\n\t\t\t\tl->s.hostname ? l->s.hostname : \"?\");\n\t\t\tsafe_print_string(aulookup_uid(l->s.loginuid, name,\n\t\t\t\t\tsizeof(name)), 0);\n\t\t\tprintf(\" %lu\\n\", l->e.serial);\n",
                    "rendered": {
                      "text": "\t\t\t\t\tl->s.comm ? l->s.comm: \"?\", 0);\n\t\t\tprintf(\" %s %s \",\n\t\t\t\tl->s.terminal ? l->s.terminal : \"?\",\n\t\t\t\tl->s.hostname ? l->s.hostname : \"?\");\n\t\t\tsafe_print_string(aulookup_uid(l->s.loginuid, name,\n\t\t\t\t\tsizeof(name)), 0);\n\t\t\tprintf(\" %lu\\n\", l->e.serial);\n",
                      "markdown": "`\t\t\t\t\tl->s.comm ? l->s.comm: \"?\", 0);\n\t\t\tprintf(\" %s %s \",\n\t\t\t\tl->s.terminal ? l->s.terminal : \"?\",\n\t\t\t\tl->s.hostname ? l->s.hostname : \"?\");\n\t\t\tsafe_print_string(aulookup_uid(l->s.loginuid, name,\n\t\t\t\t\tsizeof(name)), 0);\n\t\t\tprintf(\" %lu\\n\", l->e.serial);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 664,
                  "startColumn": 25,
                  "endLine": 664,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t\t\tsafe_print_string(l->s.comm ? l->s.comm : \"?\", 0);\n\t\t\tprintf(\" %s %s \",\n\t\t\t\tl->s.terminal ? l->s.terminal : \"?\",\n\t\t\t\tl->s.hostname ? l->s.hostname : \"?\");\n\t\t\tsafe_print_string(aulookup_uid(l->s.loginuid, name,\n\t\t\t\t\tsizeof(name)), 0);\n\t\t\tprintf(\" %lu\\n\", l->e.serial);\n",
                    "rendered": {
                      "text": "\t\t\tsafe_print_string(l->s.comm ? l->s.comm : \"?\", 0);\n\t\t\tprintf(\" %s %s \",\n\t\t\t\tl->s.terminal ? l->s.terminal : \"?\",\n\t\t\t\tl->s.hostname ? l->s.hostname : \"?\");\n\t\t\tsafe_print_string(aulookup_uid(l->s.loginuid, name,\n\t\t\t\t\tsizeof(name)), 0);\n\t\t\tprintf(\" %lu\\n\", l->e.serial);\n",
                      "markdown": "`\t\t\tsafe_print_string(l->s.comm ? l->s.comm : \"?\", 0);\n\t\t\tprintf(\" %s %s \",\n\t\t\t\tl->s.terminal ? l->s.terminal : \"?\",\n\t\t\t\tl->s.hostname ? l->s.hostname : \"?\");\n\t\t\tsafe_print_string(aulookup_uid(l->s.loginuid, name,\n\t\t\t\t\tsizeof(name)), 0);\n\t\t\tprintf(\" %lu\\n\", l->e.serial);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 664,
                  "startColumn": 9,
                  "endLine": 664,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t\t\tsafe_print_string(l->s.comm ? l->s.comm : \"?\", 0);\n\t\t\tprintf(\" %s %s \",\n\t\t\t\tl->s.terminal ? l->s.terminal : \"?\",\n\t\t\t\tl->s.hostname ? l->s.hostname : \"?\");\n\t\t\tsafe_print_string(aulookup_uid(l->s.loginuid, name,\n\t\t\t\t\tsizeof(name)), 0);\n\t\t\tprintf(\" %lu\\n\", l->e.serial);\n",
                    "rendered": {
                      "text": "\t\t\tsafe_print_string(l->s.comm ? l->s.comm : \"?\", 0);\n\t\t\tprintf(\" %s %s \",\n\t\t\t\tl->s.terminal ? l->s.terminal : \"?\",\n\t\t\t\tl->s.hostname ? l->s.hostname : \"?\");\n\t\t\tsafe_print_string(aulookup_uid(l->s.loginuid, name,\n\t\t\t\t\tsizeof(name)), 0);\n\t\t\tprintf(\" %lu\\n\", l->e.serial);\n",
                      "markdown": "`\t\t\tsafe_print_string(l->s.comm ? l->s.comm : \"?\", 0);\n\t\t\tprintf(\" %s %s \",\n\t\t\t\tl->s.terminal ? l->s.terminal : \"?\",\n\t\t\t\tl->s.hostname ? l->s.hostname : \"?\");\n\t\t\tsafe_print_string(aulookup_uid(l->s.loginuid, name,\n\t\t\t\t\tsizeof(name)), 0);\n\t\t\tprintf(\" %lu\\n\", l->e.serial);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 654,
                  "startColumn": 25,
                  "endLine": 654,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t\t\tsafe_print_string(l->s.exe ? l->s.exe : \"?\", 0);\n\t\t\tprintf(\" %s %s \",\n\t\t\t\tl->s.terminal ? l->s.terminal : \"?\",\n\t\t\t\tl->s.hostname ? l->s.hostname : \"?\");\n\t\t\tsafe_print_string(aulookup_uid(l->s.loginuid, name,\n\t\t\t\t\tsizeof(name)), 0);\n\t\t\tprintf(\" %lu\\n\", l->e.serial);\n",
                    "rendered": {
                      "text": "\t\t\tsafe_print_string(l->s.exe ? l->s.exe : \"?\", 0);\n\t\t\tprintf(\" %s %s \",\n\t\t\t\tl->s.terminal ? l->s.terminal : \"?\",\n\t\t\t\tl->s.hostname ? l->s.hostname : \"?\");\n\t\t\tsafe_print_string(aulookup_uid(l->s.loginuid, name,\n\t\t\t\t\tsizeof(name)), 0);\n\t\t\tprintf(\" %lu\\n\", l->e.serial);\n",
                      "markdown": "`\t\t\tsafe_print_string(l->s.exe ? l->s.exe : \"?\", 0);\n\t\t\tprintf(\" %s %s \",\n\t\t\t\tl->s.terminal ? l->s.terminal : \"?\",\n\t\t\t\tl->s.hostname ? l->s.hostname : \"?\");\n\t\t\tsafe_print_string(aulookup_uid(l->s.loginuid, name,\n\t\t\t\t\tsizeof(name)), 0);\n\t\t\tprintf(\" %lu\\n\", l->e.serial);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 654,
                  "startColumn": 9,
                  "endLine": 654,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t\t\tsafe_print_string(l->s.exe ? l->s.exe : \"?\", 0);\n\t\t\tprintf(\" %s %s \",\n\t\t\t\tl->s.terminal ? l->s.terminal : \"?\",\n\t\t\t\tl->s.hostname ? l->s.hostname : \"?\");\n\t\t\tsafe_print_string(aulookup_uid(l->s.loginuid, name,\n\t\t\t\t\tsizeof(name)), 0);\n\t\t\tprintf(\" %lu\\n\", l->e.serial);\n",
                    "rendered": {
                      "text": "\t\t\tsafe_print_string(l->s.exe ? l->s.exe : \"?\", 0);\n\t\t\tprintf(\" %s %s \",\n\t\t\t\tl->s.terminal ? l->s.terminal : \"?\",\n\t\t\t\tl->s.hostname ? l->s.hostname : \"?\");\n\t\t\tsafe_print_string(aulookup_uid(l->s.loginuid, name,\n\t\t\t\t\tsizeof(name)), 0);\n\t\t\tprintf(\" %lu\\n\", l->e.serial);\n",
                      "markdown": "`\t\t\tsafe_print_string(l->s.exe ? l->s.exe : \"?\", 0);\n\t\t\tprintf(\" %s %s \",\n\t\t\t\tl->s.terminal ? l->s.terminal : \"?\",\n\t\t\t\tl->s.hostname ? l->s.hostname : \"?\");\n\t\t\tsafe_print_string(aulookup_uid(l->s.loginuid, name,\n\t\t\t\t\tsizeof(name)), 0);\n\t\t\tprintf(\" %lu\\n\", l->e.serial);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 645,
                  "startColumn": 25,
                  "endLine": 645,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t\t\t\t\tsizeof(name)), 0);\n\t\t\tprintf(\" %s %s \",\n\t\t\t\tl->s.terminal ? l->s.terminal : \"?\",\n\t\t\t\tl->s.hostname ? l->s.hostname : \"?\");\n\t\t\tsafe_print_string(l->s.exe ? l->s.exe : \"?\", 0);\n\t\t\tprintf(\" %lu\\n\", l->e.serial);\n\t\t\tbreak;\n",
                    "rendered": {
                      "text": "\t\t\t\t\tsizeof(name)), 0);\n\t\t\tprintf(\" %s %s \",\n\t\t\t\tl->s.terminal ? l->s.terminal : \"?\",\n\t\t\t\tl->s.hostname ? l->s.hostname : \"?\");\n\t\t\tsafe_print_string(l->s.exe ? l->s.exe : \"?\", 0);\n\t\t\tprintf(\" %lu\\n\", l->e.serial);\n\t\t\tbreak;\n",
                      "markdown": "`\t\t\t\t\tsizeof(name)), 0);\n\t\t\tprintf(\" %s %s \",\n\t\t\t\tl->s.terminal ? l->s.terminal : \"?\",\n\t\t\t\tl->s.hostname ? l->s.hostname : \"?\");\n\t\t\tsafe_print_string(l->s.exe ? l->s.exe : \"?\", 0);\n\t\t\tprintf(\" %lu\\n\", l->e.serial);\n\t\t\tbreak;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 645,
                  "startColumn": 9,
                  "endLine": 645,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t\t\t\t\tsizeof(name)), 0);\n\t\t\tprintf(\" %s %s \",\n\t\t\t\tl->s.terminal ? l->s.terminal : \"?\",\n\t\t\t\tl->s.hostname ? l->s.hostname : \"?\");\n\t\t\tsafe_print_string(l->s.exe ? l->s.exe : \"?\", 0);\n\t\t\tprintf(\" %lu\\n\", l->e.serial);\n\t\t\tbreak;\n",
                    "rendered": {
                      "text": "\t\t\t\t\tsizeof(name)), 0);\n\t\t\tprintf(\" %s %s \",\n\t\t\t\tl->s.terminal ? l->s.terminal : \"?\",\n\t\t\t\tl->s.hostname ? l->s.hostname : \"?\");\n\t\t\tsafe_print_string(l->s.exe ? l->s.exe : \"?\", 0);\n\t\t\tprintf(\" %lu\\n\", l->e.serial);\n\t\t\tbreak;\n",
                      "markdown": "`\t\t\t\t\tsizeof(name)), 0);\n\t\t\tprintf(\" %s %s \",\n\t\t\t\tl->s.terminal ? l->s.terminal : \"?\",\n\t\t\t\tl->s.hostname ? l->s.hostname : \"?\");\n\t\t\tsafe_print_string(l->s.exe ? l->s.exe : \"?\", 0);\n\t\t\tprintf(\" %lu\\n\", l->e.serial);\n\t\t\tbreak;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 632,
                  "startColumn": 24,
                  "endLine": 632,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t\tcase RPT_TERM:\t// report_detail == D_DETAILED\n\t\t\t// terminal, host, exe, who, event\n\t\t\tprintf(\"%s %s \",\n\t\t\t\tl->s.terminal, l->s.hostname);\n\t\t\tsafe_print_string(l->s.exe, 0);\n\t\t\tputchar(' ');\n\t\t\tsafe_print_string(aulookup_uid(l->s.loginuid, name,\n",
                    "rendered": {
                      "text": "\t\tcase RPT_TERM:\t// report_detail == D_DETAILED\n\t\t\t// terminal, host, exe, who, event\n\t\t\tprintf(\"%s %s \",\n\t\t\t\tl->s.terminal, l->s.hostname);\n\t\t\tsafe_print_string(l->s.exe, 0);\n\t\t\tputchar(' ');\n\t\t\tsafe_print_string(aulookup_uid(l->s.loginuid, name,\n",
                      "markdown": "`\t\tcase RPT_TERM:\t// report_detail == D_DETAILED\n\t\t\t// terminal, host, exe, who, event\n\t\t\tprintf(\"%s %s \",\n\t\t\t\tl->s.terminal, l->s.hostname);\n\t\t\tsafe_print_string(l->s.exe, 0);\n\t\t\tputchar(' ');\n\t\t\tsafe_print_string(aulookup_uid(l->s.loginuid, name,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 604,
                  "startColumn": 9,
                  "endLine": 604,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t\tcase RPT_HOST:\t// report_detail == D_DETAILED\n\t\t\t// host, syscall, who, event\n\t\t\tprintf(\"%s %s \",\n\t\t\t\tl->s.hostname,\n\t\t\t\taulookup_syscall(l,buf,sizeof(buf)));\n\t\t\tsafe_print_string(aulookup_uid(l->s.loginuid, name,\n\t\t\t\t\tsizeof(name)), 0);\n",
                    "rendered": {
                      "text": "\t\tcase RPT_HOST:\t// report_detail == D_DETAILED\n\t\t\t// host, syscall, who, event\n\t\t\tprintf(\"%s %s \",\n\t\t\t\tl->s.hostname,\n\t\t\t\taulookup_syscall(l,buf,sizeof(buf)));\n\t\t\tsafe_print_string(aulookup_uid(l->s.loginuid, name,\n\t\t\t\t\tsizeof(name)), 0);\n",
                      "markdown": "`\t\tcase RPT_HOST:\t// report_detail == D_DETAILED\n\t\t\t// host, syscall, who, event\n\t\t\tprintf(\"%s %s \",\n\t\t\t\tl->s.hostname,\n\t\t\t\taulookup_syscall(l,buf,sizeof(buf)));\n\t\t\tsafe_print_string(aulookup_uid(l->s.loginuid, name,\n\t\t\t\t\tsizeof(name)), 0);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 562,
                  "startColumn": 25,
                  "endLine": 562,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t\t\t\taulookup_uid(l->s.loginuid, name,\n\t\t\t\t\tsizeof(name)), 0);\n\t\t\tprintf(\" %s %s %s %s %s %lu\\n\",\n\t\t\t\tl->s.hostname ? l->s.hostname : \"?\",\n\t\t\t\tl->s.terminal ? l->s.terminal : \"?\",\n\t\t\t\tl->s.exe ? l->s.exe : \"?\",\n\t\t\t\tl->s.acct ? l->s.acct : \"?\",\n",
                    "rendered": {
                      "text": "\t\t\t\taulookup_uid(l->s.loginuid, name,\n\t\t\t\t\tsizeof(name)), 0);\n\t\t\tprintf(\" %s %s %s %s %s %lu\\n\",\n\t\t\t\tl->s.hostname ? l->s.hostname : \"?\",\n\t\t\t\tl->s.terminal ? l->s.terminal : \"?\",\n\t\t\t\tl->s.exe ? l->s.exe : \"?\",\n\t\t\t\tl->s.acct ? l->s.acct : \"?\",\n",
                      "markdown": "`\t\t\t\taulookup_uid(l->s.loginuid, name,\n\t\t\t\t\tsizeof(name)), 0);\n\t\t\tprintf(\" %s %s %s %s %s %lu\\n\",\n\t\t\t\tl->s.hostname ? l->s.hostname : \"?\",\n\t\t\t\tl->s.terminal ? l->s.terminal : \"?\",\n\t\t\t\tl->s.exe ? l->s.exe : \"?\",\n\t\t\t\tl->s.acct ? l->s.acct : \"?\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 562,
                  "startColumn": 9,
                  "endLine": 562,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t\t\t\taulookup_uid(l->s.loginuid, name,\n\t\t\t\t\tsizeof(name)), 0);\n\t\t\tprintf(\" %s %s %s %s %s %lu\\n\",\n\t\t\t\tl->s.hostname ? l->s.hostname : \"?\",\n\t\t\t\tl->s.terminal ? l->s.terminal : \"?\",\n\t\t\t\tl->s.exe ? l->s.exe : \"?\",\n\t\t\t\tl->s.acct ? l->s.acct : \"?\",\n",
                    "rendered": {
                      "text": "\t\t\t\taulookup_uid(l->s.loginuid, name,\n\t\t\t\t\tsizeof(name)), 0);\n\t\t\tprintf(\" %s %s %s %s %s %lu\\n\",\n\t\t\t\tl->s.hostname ? l->s.hostname : \"?\",\n\t\t\t\tl->s.terminal ? l->s.terminal : \"?\",\n\t\t\t\tl->s.exe ? l->s.exe : \"?\",\n\t\t\t\tl->s.acct ? l->s.acct : \"?\",\n",
                      "markdown": "`\t\t\t\taulookup_uid(l->s.loginuid, name,\n\t\t\t\t\tsizeof(name)), 0);\n\t\t\tprintf(\" %s %s %s %s %s %lu\\n\",\n\t\t\t\tl->s.hostname ? l->s.hostname : \"?\",\n\t\t\t\tl->s.terminal ? l->s.terminal : \"?\",\n\t\t\t\tl->s.exe ? l->s.exe : \"?\",\n\t\t\t\tl->s.acct ? l->s.acct : \"?\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 552,
                  "startColumn": 9,
                  "endLine": 552,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t\t\t\taulookup_uid(l->s.loginuid,\n\t\t\t\t\t\tname, sizeof(name)), 0);\n\t\t\tprintf(\" %s %s %s %s %lu\\n\", \n\t\t\t\tl->s.hostname, l->s.terminal,\n\t\t\t\tl->s.exe, aulookup_success(l->s.success),\n\t\t\t\tl->e.serial);\n\t\t\tbreak;\n",
                    "rendered": {
                      "text": "\t\t\t\taulookup_uid(l->s.loginuid,\n\t\t\t\t\t\tname, sizeof(name)), 0);\n\t\t\tprintf(\" %s %s %s %s %lu\\n\", \n\t\t\t\tl->s.hostname, l->s.terminal,\n\t\t\t\tl->s.exe, aulookup_success(l->s.success),\n\t\t\t\tl->e.serial);\n\t\t\tbreak;\n",
                      "markdown": "`\t\t\t\taulookup_uid(l->s.loginuid,\n\t\t\t\t\t\tname, sizeof(name)), 0);\n\t\t\tprintf(\" %s %s %s %s %lu\\n\", \n\t\t\t\tl->s.hostname, l->s.terminal,\n\t\t\t\tl->s.exe, aulookup_success(l->s.success),\n\t\t\t\tl->e.serial);\n\t\t\tbreak;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 538,
                  "startColumn": 9,
                  "endLine": 538,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t\t\tsafe_print_string(l->s.acct ? l->s.acct :\n\t\t\t\taulookup_uid(l->s.uid, name, sizeof(name)), 0);\n\t\t\tprintf(\" %s %s %s %s %lu\\n\",\n\t\t\t\tl->s.hostname, l->s.terminal,\n\t\t\t\tl->s.exe, aulookup_success(l->s.success),\n\t\t\t\tl->e.serial);\n\t\t\tbreak;\n",
                    "rendered": {
                      "text": "\t\t\tsafe_print_string(l->s.acct ? l->s.acct :\n\t\t\t\taulookup_uid(l->s.uid, name, sizeof(name)), 0);\n\t\t\tprintf(\" %s %s %s %s %lu\\n\",\n\t\t\t\tl->s.hostname, l->s.terminal,\n\t\t\t\tl->s.exe, aulookup_success(l->s.success),\n\t\t\t\tl->e.serial);\n\t\t\tbreak;\n",
                      "markdown": "`\t\t\tsafe_print_string(l->s.acct ? l->s.acct :\n\t\t\t\taulookup_uid(l->s.uid, name, sizeof(name)), 0);\n\t\t\tprintf(\" %s %s %s %s %lu\\n\",\n\t\t\t\tl->s.hostname, l->s.terminal,\n\t\t\t\tl->s.exe, aulookup_success(l->s.success),\n\t\t\t\tl->e.serial);\n\t\t\tbreak;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 415,
                  "startColumn": 37,
                  "endLine": 415,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\t\t\t\tprintf(\"# date time auid type success event\\n\");\n\t\t\t\tprintf(\"===================================\\n\");\n\t\t\t} else {\n\t\t\t\tprintf(\"Specific Mandatory Access Control (MAC) Report\\n\");\n\t\t\t\tprintf(\"===================================\\n\");\n\t\t\t}\n\t\t\tbreak;\n",
                    "rendered": {
                      "text": "\t\t\t\tprintf(\"# date time auid type success event\\n\");\n\t\t\t\tprintf(\"===================================\\n\");\n\t\t\t} else {\n\t\t\t\tprintf(\"Specific Mandatory Access Control (MAC) Report\\n\");\n\t\t\t\tprintf(\"===================================\\n\");\n\t\t\t}\n\t\t\tbreak;\n",
                      "markdown": "`\t\t\t\tprintf(\"# date time auid type success event\\n\");\n\t\t\t\tprintf(\"===================================\\n\");\n\t\t\t} else {\n\t\t\t\tprintf(\"Specific Mandatory Access Control (MAC) Report\\n\");\n\t\t\t\tprintf(\"===================================\\n\");\n\t\t\t}\n\t\t\tbreak;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 878,
                  "startColumn": 17,
                  "endLine": 878,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\t\tstrcpy(tmp, \"?\");\n\t\tprintf(\"%s.%03u\\n\", tmp, very_last_event.milli);\n\t}\n\tprintf(\"Selected time for report: \");\n\t{\n\t\tstruct tm *btm;\n\t\tchar tmp[48];\n",
                    "rendered": {
                      "text": "\t\t\tstrcpy(tmp, \"?\");\n\t\tprintf(\"%s.%03u\\n\", tmp, very_last_event.milli);\n\t}\n\tprintf(\"Selected time for report: \");\n\t{\n\t\tstruct tm *btm;\n\t\tchar tmp[48];\n",
                      "markdown": "`\t\t\tstrcpy(tmp, \"?\");\n\t\tprintf(\"%s.%03u\\n\", tmp, very_last_event.milli);\n\t}\n\tprintf(\"Selected time for report: \");\n\t{\n\t\tstruct tm *btm;\n\t\tchar tmp[48];\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 860,
                  "startColumn": 17,
                  "endLine": 860,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\textern event very_first_event;\n\textern event very_last_event;\n\n\tprintf(\"Range of time in logs: \");\n\t{\n\t\tstruct tm *btm;\n\t\tchar tmp[48];\n",
                    "rendered": {
                      "text": "\textern event very_first_event;\n\textern event very_last_event;\n\n\tprintf(\"Range of time in logs: \");\n\t{\n\t\tstruct tm *btm;\n\t\tchar tmp[48];\n",
                      "markdown": "`\textern event very_first_event;\n\textern event very_last_event;\n\n\tprintf(\"Range of time in logs: \");\n\t{\n\t\tstruct tm *btm;\n\t\tchar tmp[48];\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 472,
                  "startColumn": 10,
                  "endLine": 472,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\t\t\t    printf(\n\t\t\t\"===============================================\\n\");\n\t\t\t    printf(\n\t\t\t\"# date time event auid term sess comm data\\n\");\n\t\t\t    printf(\n\t\t\t\"===============================================\\n\");\n\t\t\t} else {\n",
                    "rendered": {
                      "text": "\t\t\t    printf(\n\t\t\t\"===============================================\\n\");\n\t\t\t    printf(\n\t\t\t\"# date time event auid term sess comm data\\n\");\n\t\t\t    printf(\n\t\t\t\"===============================================\\n\");\n\t\t\t} else {\n",
                      "markdown": "`\t\t\t    printf(\n\t\t\t\"===============================================\\n\");\n\t\t\t    printf(\n\t\t\t\"# date time event auid term sess comm data\\n\");\n\t\t\t    printf(\n\t\t\t\"===============================================\\n\");\n\t\t\t} else {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 458,
                  "startColumn": 10,
                  "endLine": 458,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\t\t\t    printf(\n\t\t\t\"===============================================\\n\");\n\t\t\t    printf(\n\t\t\t\"# date time key success exe auid event\\n\");\n\t\t\t    printf(\n\t\t\t\"===============================================\\n\");\n\t\t\t} else {\n",
                    "rendered": {
                      "text": "\t\t\t    printf(\n\t\t\t\"===============================================\\n\");\n\t\t\t    printf(\n\t\t\t\"# date time key success exe auid event\\n\");\n\t\t\t    printf(\n\t\t\t\"===============================================\\n\");\n\t\t\t} else {\n",
                      "markdown": "`\t\t\t    printf(\n\t\t\t\"===============================================\\n\");\n\t\t\t    printf(\n\t\t\t\"# date time key success exe auid event\\n\");\n\t\t\t    printf(\n\t\t\t\"===============================================\\n\");\n\t\t\t} else {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 445,
                  "startColumn": 18,
                  "endLine": 445,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\t\tif (report_detail == D_DETAILED) {\n\t\t\t\tprintf(\"Crypto Report\\n\");\n\t\t\t\tprintf(\"===================================\\n\");\n\t\t\t\tprintf(\"# date time auid type success event\\n\");\n\t\t\t\tprintf(\"===================================\\n\");\n\t\t\t} else {\n\t\t\t\tprintf(\"Specific Crypto Report\\n\");\n",
                    "rendered": {
                      "text": "\t\t\tif (report_detail == D_DETAILED) {\n\t\t\t\tprintf(\"Crypto Report\\n\");\n\t\t\t\tprintf(\"===================================\\n\");\n\t\t\t\tprintf(\"# date time auid type success event\\n\");\n\t\t\t\tprintf(\"===================================\\n\");\n\t\t\t} else {\n\t\t\t\tprintf(\"Specific Crypto Report\\n\");\n",
                      "markdown": "`\t\t\tif (report_detail == D_DETAILED) {\n\t\t\t\tprintf(\"Crypto Report\\n\");\n\t\t\t\tprintf(\"===================================\\n\");\n\t\t\t\tprintf(\"# date time auid type success event\\n\");\n\t\t\t\tprintf(\"===================================\\n\");\n\t\t\t} else {\n\t\t\t\tprintf(\"Specific Crypto Report\\n\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 434,
                  "startColumn": 18,
                  "endLine": 434,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\t\tif (report_detail == D_DETAILED) {\n\t\t\t\tprintf(\"Virtualization Report\\n\");\n\t\t\t\tprintf(\"==============================\\n\");\n\t\t\t\tprintf(\"# date time type success event\\n\");\n\t\t\t\tprintf(\"==============================\\n\");\n\t\t\t} else {\n\t\t\t\tprintf(\"Specific Virtualization Report\\n\");\n",
                    "rendered": {
                      "text": "\t\t\tif (report_detail == D_DETAILED) {\n\t\t\t\tprintf(\"Virtualization Report\\n\");\n\t\t\t\tprintf(\"==============================\\n\");\n\t\t\t\tprintf(\"# date time type success event\\n\");\n\t\t\t\tprintf(\"==============================\\n\");\n\t\t\t} else {\n\t\t\t\tprintf(\"Specific Virtualization Report\\n\");\n",
                      "markdown": "`\t\t\tif (report_detail == D_DETAILED) {\n\t\t\t\tprintf(\"Virtualization Report\\n\");\n\t\t\t\tprintf(\"==============================\\n\");\n\t\t\t\tprintf(\"# date time type success event\\n\");\n\t\t\t\tprintf(\"==============================\\n\");\n\t\t\t} else {\n\t\t\t\tprintf(\"Specific Virtualization Report\\n\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 423,
                  "startColumn": 18,
                  "endLine": 423,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\t\tif (report_detail == D_DETAILED) {\n\t\t\t\tprintf(\"Integrity Report\\n\");\n\t\t\t\tprintf(\"==============================\\n\");\n\t\t\t\tprintf(\"# date time type success event\\n\");\n\t\t\t\tprintf(\"==============================\\n\");\n\t\t\t} else {\n\t\t\t\tprintf(\"Specific Integrity Report\\n\");\n",
                    "rendered": {
                      "text": "\t\t\tif (report_detail == D_DETAILED) {\n\t\t\t\tprintf(\"Integrity Report\\n\");\n\t\t\t\tprintf(\"==============================\\n\");\n\t\t\t\tprintf(\"# date time type success event\\n\");\n\t\t\t\tprintf(\"==============================\\n\");\n\t\t\t} else {\n\t\t\t\tprintf(\"Specific Integrity Report\\n\");\n",
                      "markdown": "`\t\t\tif (report_detail == D_DETAILED) {\n\t\t\t\tprintf(\"Integrity Report\\n\");\n\t\t\t\tprintf(\"==============================\\n\");\n\t\t\t\tprintf(\"# date time type success event\\n\");\n\t\t\t\tprintf(\"==============================\\n\");\n\t\t\t} else {\n\t\t\t\tprintf(\"Specific Integrity Report\\n\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 412,
                  "startColumn": 18,
                  "endLine": 412,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\t\tif (report_detail == D_DETAILED) {\n\t\t\t\tprintf(\"MAC Report\\n\");\n\t\t\t\tprintf(\"===================================\\n\");\n\t\t\t\tprintf(\"# date time auid type success event\\n\");\n\t\t\t\tprintf(\"===================================\\n\");\n\t\t\t} else {\n\t\t\t\tprintf(\"Specific Mandatory Access Control (MAC) Report\\n\");\n",
                    "rendered": {
                      "text": "\t\t\tif (report_detail == D_DETAILED) {\n\t\t\t\tprintf(\"MAC Report\\n\");\n\t\t\t\tprintf(\"===================================\\n\");\n\t\t\t\tprintf(\"# date time auid type success event\\n\");\n\t\t\t\tprintf(\"===================================\\n\");\n\t\t\t} else {\n\t\t\t\tprintf(\"Specific Mandatory Access Control (MAC) Report\\n\");\n",
                      "markdown": "`\t\t\tif (report_detail == D_DETAILED) {\n\t\t\t\tprintf(\"MAC Report\\n\");\n\t\t\t\tprintf(\"===================================\\n\");\n\t\t\t\tprintf(\"# date time auid type success event\\n\");\n\t\t\t\tprintf(\"===================================\\n\");\n\t\t\t} else {\n\t\t\t\tprintf(\"Specific Mandatory Access Control (MAC) Report\\n\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 401,
                  "startColumn": 18,
                  "endLine": 401,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\t\tif (report_detail == D_DETAILED) {\n\t\t\t\tprintf(\"Response to Anomaly Report\\n\");\n\t\t\t\tprintf(\"==============================\\n\");\n\t\t\t\tprintf(\"# date time type success event\\n\");\n\t\t\t\tprintf(\"==============================\\n\");\n\t\t\t} else {\n\t\t\t\tprintf(\"Specific Response to Anomaly Report\\n\");\n",
                    "rendered": {
                      "text": "\t\t\tif (report_detail == D_DETAILED) {\n\t\t\t\tprintf(\"Response to Anomaly Report\\n\");\n\t\t\t\tprintf(\"==============================\\n\");\n\t\t\t\tprintf(\"# date time type success event\\n\");\n\t\t\t\tprintf(\"==============================\\n\");\n\t\t\t} else {\n\t\t\t\tprintf(\"Specific Response to Anomaly Report\\n\");\n",
                      "markdown": "`\t\t\tif (report_detail == D_DETAILED) {\n\t\t\t\tprintf(\"Response to Anomaly Report\\n\");\n\t\t\t\tprintf(\"==============================\\n\");\n\t\t\t\tprintf(\"# date time type success event\\n\");\n\t\t\t\tprintf(\"==============================\\n\");\n\t\t\t} else {\n\t\t\t\tprintf(\"Specific Response to Anomaly Report\\n\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 389,
                  "startColumn": 11,
                  "endLine": 389,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t\t\t\tprintf(\n\t\t\t\t\"=========================================\\n\");\n\t\t\t\tprintf(\n\t\t\t\t\"# date time type exe term host auid event\\n\");\n\t\t\t\tprintf(\n\t\t\t\t\"=========================================\\n\");\n\t\t\t} else {\n",
                    "rendered": {
                      "text": "\t\t\t\tprintf(\n\t\t\t\t\"=========================================\\n\");\n\t\t\t\tprintf(\n\t\t\t\t\"# date time type exe term host auid event\\n\");\n\t\t\t\tprintf(\n\t\t\t\t\"=========================================\\n\");\n\t\t\t} else {\n",
                      "markdown": "`\t\t\t\tprintf(\n\t\t\t\t\"=========================================\\n\");\n\t\t\t\tprintf(\n\t\t\t\t\"# date time type exe term host auid event\\n\");\n\t\t\t\tprintf(\n\t\t\t\t\"=========================================\\n\");\n\t\t\t} else {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 375,
                  "startColumn": 13,
                  "endLine": 375,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t\t\tprintf(\n\t\t\t\t  \"====================================\\n\");\n\t\t\t\tprintf(\n\t\t\t\t  \"# date time comm term host auid event\\n\");\n\t\t\t\tprintf(\n\t\t\t\t  \"=====================================\\n\");\n\t\t\t} else {\n",
                    "rendered": {
                      "text": "\t\t\t\tprintf(\n\t\t\t\t  \"====================================\\n\");\n\t\t\t\tprintf(\n\t\t\t\t  \"# date time comm term host auid event\\n\");\n\t\t\t\tprintf(\n\t\t\t\t  \"=====================================\\n\");\n\t\t\t} else {\n",
                      "markdown": "`\t\t\t\tprintf(\n\t\t\t\t  \"====================================\\n\");\n\t\t\t\tprintf(\n\t\t\t\t  \"# date time comm term host auid event\\n\");\n\t\t\t\tprintf(\n\t\t\t\t  \"=====================================\\n\");\n\t\t\t} else {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 361,
                  "startColumn": 13,
                  "endLine": 361,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t\t\tprintf(\n\t\t\t\t  \"====================================\\n\");\n\t\t\t\tprintf(\n\t\t\t\t  \"# date time exe term host auid event\\n\");\n\t\t\t\tprintf(\n\t\t\t\t  \"====================================\\n\");\n\t\t\t} else {\n",
                    "rendered": {
                      "text": "\t\t\t\tprintf(\n\t\t\t\t  \"====================================\\n\");\n\t\t\t\tprintf(\n\t\t\t\t  \"# date time exe term host auid event\\n\");\n\t\t\t\tprintf(\n\t\t\t\t  \"====================================\\n\");\n\t\t\t} else {\n",
                      "markdown": "`\t\t\t\tprintf(\n\t\t\t\t  \"====================================\\n\");\n\t\t\t\tprintf(\n\t\t\t\t  \"# date time exe term host auid event\\n\");\n\t\t\t\tprintf(\n\t\t\t\t  \"====================================\\n\");\n\t\t\t} else {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 347,
                  "startColumn": 13,
                  "endLine": 347,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t\t\tprintf(\n\t\t\t\t  \"====================================\\n\");\n\t\t\t\tprintf(\n\t\t\t\t  \"# date time auid term host exe event\\n\");\n\t\t\t\tprintf(\n\t\t\t\t  \"====================================\\n\");\n\t\t\t} else {\n",
                    "rendered": {
                      "text": "\t\t\t\tprintf(\n\t\t\t\t  \"====================================\\n\");\n\t\t\t\tprintf(\n\t\t\t\t  \"# date time auid term host exe event\\n\");\n\t\t\t\tprintf(\n\t\t\t\t  \"====================================\\n\");\n\t\t\t} else {\n",
                      "markdown": "`\t\t\t\tprintf(\n\t\t\t\t  \"====================================\\n\");\n\t\t\t\tprintf(\n\t\t\t\t  \"# date time auid term host exe event\\n\");\n\t\t\t\tprintf(\n\t\t\t\t  \"====================================\\n\");\n\t\t\t} else {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 333,
                  "startColumn": 13,
                  "endLine": 333,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t\t\tprintf(\n\t\t\t\t  \"====================================\\n\");\n\t\t\t\tprintf(\n\t\t\t\t  \"# date time term host exe auid event\\n\");\n\t\t\t\tprintf(\n\t\t\t\t  \"====================================\\n\");\n\t\t\t} else {\n",
                    "rendered": {
                      "text": "\t\t\t\tprintf(\n\t\t\t\t  \"====================================\\n\");\n\t\t\t\tprintf(\n\t\t\t\t  \"# date time term host exe auid event\\n\");\n\t\t\t\tprintf(\n\t\t\t\t  \"====================================\\n\");\n\t\t\t} else {\n",
                      "markdown": "`\t\t\t\tprintf(\n\t\t\t\t  \"====================================\\n\");\n\t\t\t\tprintf(\n\t\t\t\t  \"# date time term host exe auid event\\n\");\n\t\t\t\tprintf(\n\t\t\t\t  \"====================================\\n\");\n\t\t\t} else {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 319,
                  "startColumn": 13,
                  "endLine": 319,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t\t\tprintf(\n\t\t\t\t  \"=======================================\\n\");\n\t\t\t\tprintf(\n\t\t\t\t  \"# date time syscall pid comm auid event\\n\");\n\t\t\t\tprintf(\n\t\t\t\t  \"=======================================\\n\");\n\t\t\t} else {\n",
                    "rendered": {
                      "text": "\t\t\t\tprintf(\n\t\t\t\t  \"=======================================\\n\");\n\t\t\t\tprintf(\n\t\t\t\t  \"# date time syscall pid comm auid event\\n\");\n\t\t\t\tprintf(\n\t\t\t\t  \"=======================================\\n\");\n\t\t\t} else {\n",
                      "markdown": "`\t\t\t\tprintf(\n\t\t\t\t  \"=======================================\\n\");\n\t\t\t\tprintf(\n\t\t\t\t  \"# date time syscall pid comm auid event\\n\");\n\t\t\t\tprintf(\n\t\t\t\t  \"=======================================\\n\");\n\t\t\t} else {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 305,
                  "startColumn": 13,
                  "endLine": 305,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t\t\tprintf(\n\t\t\t\t  \"======================================\\n\");\n\t\t\t\tprintf(\n\t\t\t\t  \"# date time pid exe syscall auid event\\n\");\n\t\t\t\tprintf(\n\t\t\t\t  \"======================================\\n\");\n\t\t\t} else {\n",
                    "rendered": {
                      "text": "\t\t\t\tprintf(\n\t\t\t\t  \"======================================\\n\");\n\t\t\t\tprintf(\n\t\t\t\t  \"# date time pid exe syscall auid event\\n\");\n\t\t\t\tprintf(\n\t\t\t\t  \"======================================\\n\");\n\t\t\t} else {\n",
                      "markdown": "`\t\t\t\tprintf(\n\t\t\t\t  \"======================================\\n\");\n\t\t\t\tprintf(\n\t\t\t\t  \"# date time pid exe syscall auid event\\n\");\n\t\t\t\tprintf(\n\t\t\t\t  \"======================================\\n\");\n\t\t\t} else {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 292,
                  "startColumn": 18,
                  "endLine": 292,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\t\tif (report_detail == D_DETAILED) {\n\t\t\t\tprintf(\"Host Report\\n\");\n\t\t\t\tprintf(\"===================================\\n\");\n\t\t\t\tprintf(\"# date time host syscall auid event\\n\");\n\t\t\t\tprintf(\"===================================\\n\");\n\t\t\t} else {\n\t\t\t\tprintf(\"Specific Host Report\\n\");\n",
                    "rendered": {
                      "text": "\t\t\tif (report_detail == D_DETAILED) {\n\t\t\t\tprintf(\"Host Report\\n\");\n\t\t\t\tprintf(\"===================================\\n\");\n\t\t\t\tprintf(\"# date time host syscall auid event\\n\");\n\t\t\t\tprintf(\"===================================\\n\");\n\t\t\t} else {\n\t\t\t\tprintf(\"Specific Host Report\\n\");\n",
                      "markdown": "`\t\t\tif (report_detail == D_DETAILED) {\n\t\t\t\tprintf(\"Host Report\\n\");\n\t\t\t\tprintf(\"===================================\\n\");\n\t\t\t\tprintf(\"# date time host syscall auid event\\n\");\n\t\t\t\tprintf(\"===================================\\n\");\n\t\t\t} else {\n\t\t\t\tprintf(\"Specific Host Report\\n\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 280,
                  "startColumn": 10,
                  "endLine": 280,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\t\t\t    printf(\n\t\t\t\"===============================================\\n\");\n\t\t\t    printf(\n\t\t\t\"# date time file syscall success exe auid event\\n\");\n\t\t\t    printf(\n\t\t\t\"===============================================\\n\");\n\t\t\t} else {\n",
                    "rendered": {
                      "text": "\t\t\t    printf(\n\t\t\t\"===============================================\\n\");\n\t\t\t    printf(\n\t\t\t\"# date time file syscall success exe auid event\\n\");\n\t\t\t    printf(\n\t\t\t\"===============================================\\n\");\n\t\t\t} else {\n",
                      "markdown": "`\t\t\t    printf(\n\t\t\t\"===============================================\\n\");\n\t\t\t    printf(\n\t\t\t\"# date time file syscall success exe auid event\\n\");\n\t\t\t    printf(\n\t\t\t\"===============================================\\n\");\n\t\t\t} else {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 267,
                  "startColumn": 18,
                  "endLine": 267,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\t\tif (report_detail == D_DETAILED) {\n\t\t\t\tprintf(\"Event Report\\n\");\n\t\t\t\tprintf(\"===================================\\n\");\n\t\t\t\tprintf(\"# date time event type auid success\\n\");\n\t\t\t\tprintf(\"===================================\\n\");\n\t\t\t} else {\n\t\t\t\tprintf(\"Specific Event Report\\n\");\n",
                    "rendered": {
                      "text": "\t\t\tif (report_detail == D_DETAILED) {\n\t\t\t\tprintf(\"Event Report\\n\");\n\t\t\t\tprintf(\"===================================\\n\");\n\t\t\t\tprintf(\"# date time event type auid success\\n\");\n\t\t\t\tprintf(\"===================================\\n\");\n\t\t\t} else {\n\t\t\t\tprintf(\"Specific Event Report\\n\");\n",
                      "markdown": "`\t\t\tif (report_detail == D_DETAILED) {\n\t\t\t\tprintf(\"Event Report\\n\");\n\t\t\t\tprintf(\"===================================\\n\");\n\t\t\t\tprintf(\"# date time event type auid success\\n\");\n\t\t\t\tprintf(\"===================================\\n\");\n\t\t\t} else {\n\t\t\t\tprintf(\"Specific Event Report\\n\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 260,
                  "startColumn": 14,
                  "endLine": 260,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t\t \"=================================================\\n\");\n\t\t\tbreak;\n\t\tcase RPT_TIME:\n\t\t\tprintf(\"Log Time Range Report\\n\");\n\t\t\tprintf(\"=====================\\n\");\n\t\t\tbreak;\n\t\tcase RPT_EVENT:\n",
                    "rendered": {
                      "text": "\t\t\t \"=================================================\\n\");\n\t\t\tbreak;\n\t\tcase RPT_TIME:\n\t\t\tprintf(\"Log Time Range Report\\n\");\n\t\t\tprintf(\"=====================\\n\");\n\t\t\tbreak;\n\t\tcase RPT_EVENT:\n",
                      "markdown": "`\t\t\t \"=================================================\\n\");\n\t\t\tbreak;\n\t\tcase RPT_TIME:\n\t\t\tprintf(\"Log Time Range Report\\n\");\n\t\t\tprintf(\"=====================\\n\");\n\t\t\tbreak;\n\t\tcase RPT_EVENT:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 11,
                  "endLine": 255,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t\t\tprintf(\n\t\t\t \"=================================================\\n\");\n\t\t\tprintf(\n\t\t\t \"# date time auid addr term exe acct success event\\n\");\n\t\t\tprintf(\n\t\t\t \"=================================================\\n\");\n\t\t\tbreak;\n",
                    "rendered": {
                      "text": "\t\t\tprintf(\n\t\t\t \"=================================================\\n\");\n\t\t\tprintf(\n\t\t\t \"# date time auid addr term exe acct success event\\n\");\n\t\t\tprintf(\n\t\t\t \"=================================================\\n\");\n\t\t\tbreak;\n",
                      "markdown": "`\t\t\tprintf(\n\t\t\t \"=================================================\\n\");\n\t\t\tprintf(\n\t\t\t \"# date time auid addr term exe acct success event\\n\");\n\t\t\tprintf(\n\t\t\t \"=================================================\\n\");\n\t\t\tbreak;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 246,
                  "startColumn": 12,
                  "endLine": 246,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t\t\tprintf(\n\t\t\t  \"============================================\\n\");\n\t\t\tprintf(\n\t\t\t  \"# date time auid host term exe success event\\n\");\n\t\t\tprintf(\n\t\t\t  \"============================================\\n\");\n\t\t\tbreak;\n",
                    "rendered": {
                      "text": "\t\t\tprintf(\n\t\t\t  \"============================================\\n\");\n\t\t\tprintf(\n\t\t\t  \"# date time auid host term exe success event\\n\");\n\t\t\tprintf(\n\t\t\t  \"============================================\\n\");\n\t\t\tbreak;\n",
                      "markdown": "`\t\t\tprintf(\n\t\t\t  \"============================================\\n\");\n\t\t\tprintf(\n\t\t\t  \"# date time auid host term exe success event\\n\");\n\t\t\tprintf(\n\t\t\t  \"============================================\\n\");\n\t\t\tbreak;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 237,
                  "startColumn": 12,
                  "endLine": 237,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t\t\tprintf(\n\t\t\t  \"============================================\\n\");\n\t\t\tprintf(\n\t\t\t  \"# date time acct host term exe success event\\n\");\n\t\t\tprintf(\n\t\t\t  \"============================================\\n\");\n\t\t\tbreak;\n",
                    "rendered": {
                      "text": "\t\t\tprintf(\n\t\t\t  \"============================================\\n\");\n\t\t\tprintf(\n\t\t\t  \"# date time acct host term exe success event\\n\");\n\t\t\tprintf(\n\t\t\t  \"============================================\\n\");\n\t\t\tbreak;\n",
                      "markdown": "`\t\t\tprintf(\n\t\t\t  \"============================================\\n\");\n\t\t\tprintf(\n\t\t\t  \"# date time acct host term exe success event\\n\");\n\t\t\tprintf(\n\t\t\t  \"============================================\\n\");\n\t\t\tbreak;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 229,
                  "startColumn": 17,
                  "endLine": 229,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\tcase RPT_CONFIG:\n\t\t\tprintf(\"Config Change Report\\n\");\n\t\t\tprintf(\"===================================\\n\");\n\t\t\tprintf(\"# date time type auid success event\\n\");\n\t\t\tprintf(\"===================================\\n\");\n\t\t\tbreak;\n\t\tcase RPT_AUTH:\n",
                    "rendered": {
                      "text": "\t\tcase RPT_CONFIG:\n\t\t\tprintf(\"Config Change Report\\n\");\n\t\t\tprintf(\"===================================\\n\");\n\t\t\tprintf(\"# date time type auid success event\\n\");\n\t\t\tprintf(\"===================================\\n\");\n\t\t\tbreak;\n\t\tcase RPT_AUTH:\n",
                      "markdown": "`\t\tcase RPT_CONFIG:\n\t\t\tprintf(\"Config Change Report\\n\");\n\t\t\tprintf(\"===================================\\n\");\n\t\t\tprintf(\"# date time type auid success event\\n\");\n\t\t\tprintf(\"===================================\\n\");\n\t\t\tbreak;\n\t\tcase RPT_AUTH:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-output.c"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 11,
                  "endLine": 222,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t\t\tprintf(\n\t\t  \"===============================================================\\n\");\n\t\t\tprintf(\n\t\t  \"# date time comm subj syscall class permission obj result event\\n\");\n\t\t\tprintf(\n\t\t  \"===============================================================\\n\");\n\t\t\tbreak;\n",
                    "rendered": {
                      "text": "\t\t\tprintf(\n\t\t  \"===============================================================\\n\");\n\t\t\tprintf(\n\t\t  \"# date time comm subj syscall class permission obj result event\\n\");\n\t\t\tprintf(\n\t\t  \"===============================================================\\n\");\n\t\t\tbreak;\n",
                      "markdown": "`\t\t\tprintf(\n\t\t  \"===============================================================\\n\");\n\t\t\tprintf(\n\t\t  \"# date time comm subj syscall class permission obj result event\\n\");\n\t\t\tprintf(\n\t\t  \"===============================================================\\n\");\n\t\t\tbreak;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit_value_needs_encoding.3"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 132,
                  "endLine": 12,
                  "endColumn": 141,
                  "snippet": {
                    "text": ".fi\n.SH \"DESCRIPTION\"\n.BR audit_value_needs_encoding ()\nchecks a string to see if it needs encoding. Specifically, this function checks if the string contains a space, a double-quote, or a control character.\n.I str\nis the string to check if encoding is needed.\n.I size\n",
                    "rendered": {
                      "text": ".fi\n.SH \"DESCRIPTION\"\n.BR audit_value_needs_encoding ()\nchecks a string to see if it needs encoding. Specifically, this function checks if the string contains a space, a double-quote, or a control character.\n.I str\nis the string to check if encoding is needed.\n.I size\n",
                      "markdown": "`.fi\n.SH \"DESCRIPTION\"\n.BR audit_value_needs_encoding ()\nchecks a string to see if it needs encoding. Specifically, this function checks if the string contains a space, a double-quote, or a control character.\n.I str\nis the string to check if encoding is needed.\n.I size\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/zos-remote.conf.5"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 12,
                  "snippet": {
                    "text": ".BR audispd\\-zos\\-remote (8)).\n.TP\n.I password\nThe password associated the the z/OS user ID configured above.\n.TP\n.I timeout\nThe number in seconds that\n",
                    "rendered": {
                      "text": ".BR audispd\\-zos\\-remote (8)).\n.TP\n.I password\nThe password associated the the z/OS user ID configured above.\n.TP\n.I timeout\nThe number in seconds that\n",
                      "markdown": "`.BR audispd\\-zos\\-remote (8)).\n.TP\n.I password\nThe password associated the the z/OS user ID configured above.\n.TP\n.I timeout\nThe number in seconds that\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/zos-remote.conf.5"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 3,
                  "endLine": 48,
                  "endColumn": 11,
                  "snippet": {
                    "text": "The z/OS RACF user ID which the audispd\\-zos\\-remote plugin will use to perform Remote Audit requests. This user needs READ access to FACILITY Class resource IRR.LDAP.REMOTE.AUDIT (See\n.BR audispd\\-zos\\-remote (8)).\n.TP\n.I password\nThe password associated the the z/OS user ID configured above.\n.TP\n.I timeout\n",
                    "rendered": {
                      "text": "The z/OS RACF user ID which the audispd\\-zos\\-remote plugin will use to perform Remote Audit requests. This user needs READ access to FACILITY Class resource IRR.LDAP.REMOTE.AUDIT (See\n.BR audispd\\-zos\\-remote (8)).\n.TP\n.I password\nThe password associated the the z/OS user ID configured above.\n.TP\n.I timeout\n",
                      "markdown": "`The z/OS RACF user ID which the audispd\\-zos\\-remote plugin will use to perform Remote Audit requests. This user needs READ access to FACILITY Class resource IRR.LDAP.REMOTE.AUDIT (See\n.BR audispd\\-zos\\-remote (8)).\n.TP\n.I password\nThe password associated the the z/OS user ID configured above.\n.TP\n.I timeout\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/zos-remote.conf.5"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 33,
                  "endLine": 39,
                  "endColumn": 41,
                  "snippet": {
                    "text": "The options available are as follows:\n.TP\n.I server\nThis is the IBM z/OS ITDS server hostname or IP address\n.TP\n.I port\nThe port number where ITDS is running on the z/OS server. Default is 389 (ldap port)\n",
                    "rendered": {
                      "text": "The options available are as follows:\n.TP\n.I server\nThis is the IBM z/OS ITDS server hostname or IP address\n.TP\n.I port\nThe port number where ITDS is running on the z/OS server. Default is 389 (ldap port)\n",
                      "markdown": "`The options available are as follows:\n.TP\n.I server\nThis is the IBM z/OS ITDS server hostname or IP address\n.TP\n.I port\nThe port number where ITDS is running on the z/OS server. Default is 389 (ldap port)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/zos-remote.conf.5"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 2,
                  "endLine": 52,
                  "snippet": {
                    "text": ".I password\nThe password associated the the z/OS user ID configured above.\n.TP\n.I timeout\nThe number in seconds that\n.B audispd\\-zos\\-remote\nplugin will wait before giving up in connection attempts and event submissions. The default value is 15\n.TP\n",
                    "rendered": {
                      "text": ".I password\nThe password associated the the z/OS user ID configured above.\n.TP\n.I timeout\nThe number in seconds that\n.B audispd\\-zos\\-remote\nplugin will wait before giving up in connection attempts and event submissions. The default value is 15\n.TP\n",
                      "markdown": "`.I password\nThe password associated the the z/OS user ID configured above.\n.TP\n.I timeout\nThe number in seconds that\n.B audispd\\-zos\\-remote\nplugin will wait before giving up in connection attempts and event submissions. The default value is 15\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/zos-remote.conf.5"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 44,
                  "endLine": 39,
                  "endColumn": 48,
                  "snippet": {
                    "text": "The options available are as follows:\n.TP\n.I server\nThis is the IBM z/OS ITDS server hostname or IP address\n.TP\n.I port\nThe port number where ITDS is running on the z/OS server. Default is 389 (ldap port)\n",
                    "rendered": {
                      "text": "The options available are as follows:\n.TP\n.I server\nThis is the IBM z/OS ITDS server hostname or IP address\n.TP\n.I port\nThe port number where ITDS is running on the z/OS server. Default is 389 (ldap port)\n",
                      "markdown": "`The options available are as follows:\n.TP\n.I server\nThis is the IBM z/OS ITDS server hostname or IP address\n.TP\n.I port\nThe port number where ITDS is running on the z/OS server. Default is 389 (ldap port)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auparse_interpret_field.3"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 89,
                  "endLine": 33,
                  "endColumn": 93,
                  "snippet": {
                    "text": "will only return the port portion of a socket address. Not all socket families have a port. If that is the case, you will get a NULL value in which case your best option is to use the normal interpretation function.\n\n.B auparse_interpret_sock_address\nwill only return the address portion of a socket address. Not all socket families have an ip address. If that is the case, you will get a NULL value in which case your best option is to use the normal interpretation function.\n\n.SH \"RETURN VALUE\"\n\n",
                    "rendered": {
                      "text": "will only return the port portion of a socket address. Not all socket families have a port. If that is the case, you will get a NULL value in which case your best option is to use the normal interpretation function.\n\n.B auparse_interpret_sock_address\nwill only return the address portion of a socket address. Not all socket families have an ip address. If that is the case, you will get a NULL value in which case your best option is to use the normal interpretation function.\n\n.SH \"RETURN VALUE\"\n\n",
                      "markdown": "`will only return the port portion of a socket address. Not all socket families have a port. If that is the case, you will get a NULL value in which case your best option is to use the normal interpretation function.\n\n.B auparse_interpret_sock_address\nwill only return the address portion of a socket address. Not all socket families have an ip address. If that is the case, you will get a NULL value in which case your best option is to use the normal interpretation function.\n\n.SH \"RETURN VALUE\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd.conf.5"
                },
                "region": {
                  "startLine": 316,
                  "startColumn": 30,
                  "endLine": 316,
                  "endColumn": 38,
                  "snippet": {
                    "text": ".I auditd/hostname@EXAMPLE.COM\nstored in\n.I /etc/audit/audit.key\nto authenticate itself, where hostname is the canonical name for the\nserver's host, as returned by a DNS lookup of its IP address.\n.TP\n.I krb5_key_file\n",
                    "rendered": {
                      "text": ".I auditd/hostname@EXAMPLE.COM\nstored in\n.I /etc/audit/audit.key\nto authenticate itself, where hostname is the canonical name for the\nserver's host, as returned by a DNS lookup of its IP address.\n.TP\n.I krb5_key_file\n",
                      "markdown": "`.I auditd/hostname@EXAMPLE.COM\nstored in\n.I /etc/audit/audit.key\nto authenticate itself, where hostname is the canonical name for the\nserver's host, as returned by a DNS lookup of its IP address.\n.TP\n.I krb5_key_file\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd.conf.5"
                },
                "region": {
                  "startLine": 313,
                  "startColumn": 10,
                  "endLine": 313,
                  "endColumn": 18,
                  "snippet": {
                    "text": ".I krb5_principal\nThis is the principal for this server.  The default is \"auditd\".\nGiven this default, the server will look for a key named like\n.I auditd/hostname@EXAMPLE.COM\nstored in\n.I /etc/audit/audit.key\nto authenticate itself, where hostname is the canonical name for the\n",
                    "rendered": {
                      "text": ".I krb5_principal\nThis is the principal for this server.  The default is \"auditd\".\nGiven this default, the server will look for a key named like\n.I auditd/hostname@EXAMPLE.COM\nstored in\n.I /etc/audit/audit.key\nto authenticate itself, where hostname is the canonical name for the\n",
                      "markdown": "`.I krb5_principal\nThis is the principal for this server.  The default is \"auditd\".\nGiven this default, the server will look for a key named like\n.I auditd/hostname@EXAMPLE.COM\nstored in\n.I /etc/audit/audit.key\nto authenticate itself, where hostname is the canonical name for the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd.conf.5"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 126,
                  "endLine": 92,
                  "endColumn": 134,
                  "snippet": {
                    "text": "means that it takes the hostname and resolves it with dns for a fully qualified\ndomain name of that machine.\n.IR Numeric\nis similar to fqd except it resolves the IP address of the machine. In order to use this option, you might want to test that 'hostname \\-i' or 'domainname \\-i' returns a numeric address. Also, this option is not recommended if dhcp is used because you could have different addresses over time for the same machine.\n.IR User\nis an admin defined string from the name option. The default value is\n.IR none \".\n",
                    "rendered": {
                      "text": "means that it takes the hostname and resolves it with dns for a fully qualified\ndomain name of that machine.\n.IR Numeric\nis similar to fqd except it resolves the IP address of the machine. In order to use this option, you might want to test that 'hostname \\-i' or 'domainname \\-i' returns a numeric address. Also, this option is not recommended if dhcp is used because you could have different addresses over time for the same machine.\n.IR User\nis an admin defined string from the name option. The default value is\n.IR none \".\n",
                      "markdown": "`means that it takes the hostname and resolves it with dns for a fully qualified\ndomain name of that machine.\n.IR Numeric\nis similar to fqd except it resolves the IP address of the machine. In order to use this option, you might want to test that 'hostname \\-i' or 'domainname \\-i' returns a numeric address. Also, this option is not recommended if dhcp is used because you could have different addresses over time for the same machine.\n.IR User\nis an admin defined string from the name option. The default value is\n.IR none \".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd.conf.5"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 24,
                  "endLine": 89,
                  "endColumn": 32,
                  "snippet": {
                    "text": ".IR hostname\nis the name returned by the gethostname syscall. The\n.IR fqd\nmeans that it takes the hostname and resolves it with dns for a fully qualified\ndomain name of that machine.\n.IR Numeric\nis similar to fqd except it resolves the IP address of the machine. In order to use this option, you might want to test that 'hostname \\-i' or 'domainname \\-i' returns a numeric address. Also, this option is not recommended if dhcp is used because you could have different addresses over time for the same machine.\n",
                    "rendered": {
                      "text": ".IR hostname\nis the name returned by the gethostname syscall. The\n.IR fqd\nmeans that it takes the hostname and resolves it with dns for a fully qualified\ndomain name of that machine.\n.IR Numeric\nis similar to fqd except it resolves the IP address of the machine. In order to use this option, you might want to test that 'hostname \\-i' or 'domainname \\-i' returns a numeric address. Also, this option is not recommended if dhcp is used because you could have different addresses over time for the same machine.\n",
                      "markdown": "`.IR hostname\nis the name returned by the gethostname syscall. The\n.IR fqd\nmeans that it takes the hostname and resolves it with dns for a fully qualified\ndomain name of that machine.\n.IR Numeric\nis similar to fqd except it resolves the IP address of the machine. In order to use this option, you might want to test that 'hostname \\-i' or 'domainname \\-i' returns a numeric address. Also, this option is not recommended if dhcp is used because you could have different addresses over time for the same machine.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd.conf.5"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 4,
                  "endLine": 86,
                  "endColumn": 12,
                  "snippet": {
                    "text": ".IR none \", \" hostname \", \" fqd \", \" numeric \", and \" user \".\n.IR None\nmeans that no computer name is inserted into the audit event.\n.IR hostname\nis the name returned by the gethostname syscall. The\n.IR fqd\nmeans that it takes the hostname and resolves it with dns for a fully qualified\n",
                    "rendered": {
                      "text": ".IR none \", \" hostname \", \" fqd \", \" numeric \", and \" user \".\n.IR None\nmeans that no computer name is inserted into the audit event.\n.IR hostname\nis the name returned by the gethostname syscall. The\n.IR fqd\nmeans that it takes the hostname and resolves it with dns for a fully qualified\n",
                      "markdown": "`.IR none \", \" hostname \", \" fqd \", \" numeric \", and \" user \".\n.IR None\nmeans that no computer name is inserted into the audit event.\n.IR hostname\nis the name returned by the gethostname syscall. The\n.IR fqd\nmeans that it takes the hostname and resolves it with dns for a fully qualified\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd.conf.5"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 14,
                  "endLine": 83,
                  "endColumn": 22,
                  "snippet": {
                    "text": ".TP\n.I name_format\nThis option controls how computer node names are inserted into the audit event stream. It has the following choices:\n.IR none \", \" hostname \", \" fqd \", \" numeric \", and \" user \".\n.IR None\nmeans that no computer name is inserted into the audit event.\n.IR hostname\n",
                    "rendered": {
                      "text": ".TP\n.I name_format\nThis option controls how computer node names are inserted into the audit event stream. It has the following choices:\n.IR none \", \" hostname \", \" fqd \", \" numeric \", and \" user \".\n.IR None\nmeans that no computer name is inserted into the audit event.\n.IR hostname\n",
                      "markdown": "`.TP\n.I name_format\nThis option controls how computer node names are inserted into the audit event stream. It has the following choices:\n.IR none \", \" hostname \", \" fqd \", \" numeric \", and \" user \".\n.IR None\nmeans that no computer name is inserted into the audit event.\n.IR hostname\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd.conf.5"
                },
                "region": {
                  "startLine": 370,
                  "startColumn": 322,
                  "endLine": 370,
                  "endColumn": 326,
                  "snippet": {
                    "text": "et to a number that gives the admin enough time to react to any alert message and perform some maintenance to free up disk space. This would typically involve running the \\fBaureport \\-t\\fP report and moving the oldest logs to an archive area. The value of space_left is site dependent since the rate at which events are generated varies with each deployment. The space_left_action is recommended to be set to email. If you need something like an snmp trap, you can use the exec option to send one.\n.PP\nAdmin_space_left should be set to the amount of disk space on the audit partition needed for admin ac",
                    "rendered": {
                      "text": "et to a number that gives the admin enough time to react to any alert message and perform some maintenance to free up disk space. This would typically involve running the \\fBaureport \\-t\\fP report and moving the oldest logs to an archive area. The value of space_left is site dependent since the rate at which events are generated varies with each deployment. The space_left_action is recommended to be set to email. If you need something like an snmp trap, you can use the exec option to send one.\n.PP\nAdmin_space_left should be set to the amount of disk space on the audit partition needed for admin ac",
                      "markdown": "`et to a number that gives the admin enough time to react to any alert message and perform some maintenance to free up disk space. This would typically involve running the \\fBaureport \\-t\\fP report and moving the oldest logs to an archive area. The value of space_left is site dependent since the rate at which events are generated varies with each deployment. The space_left_action is recommended to be set to email. If you need something like an snmp trap, you can use the exec option to send one.\n.PP\nAdmin_space_left should be set to the amount of disk space on the audit partition needed for admin ac`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd.conf.5"
                },
                "region": {
                  "startLine": 293,
                  "startColumn": 96,
                  "endLine": 293,
                  "endColumn": 100,
                  "snippet": {
                    "text": "ocal_port option in the audisp-remote.conf file. Making sure that clients send from a privileged port is a security feature to prevent log injection attacks by untrusted users.\n.TP\n.I tcp_client_max_idle\nThis parameter indicates the number of seconds that a client may be idle (i.e. no data from them at all) before auditd complains. This is used to close inactive connections if the client machine has a problem where it cannot shutdown the connection cleanly. Note that this is a global setting, and must be higher than any individual client heartbeat_timeout setting, preferably by a factor of two.  T",
                    "rendered": {
                      "text": "ocal_port option in the audisp-remote.conf file. Making sure that clients send from a privileged port is a security feature to prevent log injection attacks by untrusted users.\n.TP\n.I tcp_client_max_idle\nThis parameter indicates the number of seconds that a client may be idle (i.e. no data from them at all) before auditd complains. This is used to close inactive connections if the client machine has a problem where it cannot shutdown the connection cleanly. Note that this is a global setting, and must be higher than any individual client heartbeat_timeout setting, preferably by a factor of two.  T",
                      "markdown": "`ocal_port option in the audisp-remote.conf file. Making sure that clients send from a privileged port is a security feature to prevent log injection attacks by untrusted users.\n.TP\n.I tcp_client_max_idle\nThis parameter indicates the number of seconds that a client may be idle (i.e. no data from them at all) before auditd complains. This is used to close inactive connections if the client machine has a problem where it cannot shutdown the connection cleanly. Note that this is a global setting, and must be higher than any individual client heartbeat_timeout setting, preferably by a factor of two.  T`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd.conf.5"
                },
                "region": {
                  "startLine": 264,
                  "startColumn": 8,
                  "endLine": 264,
                  "endColumn": 12,
                  "snippet": {
                    "text": "This is a numeric value which indicates how many pending (requested\nbut unaccepted) connections are allowed.  The default is 5.  Setting\nthis too small may cause connections to be rejected if too many hosts\nstart up at exactly the same time, such as after a power failure. This\nsetting is only used for aggregating servers. Clients logging to a remote\nserver should keep this commented out.\n.TP\n",
                    "rendered": {
                      "text": "This is a numeric value which indicates how many pending (requested\nbut unaccepted) connections are allowed.  The default is 5.  Setting\nthis too small may cause connections to be rejected if too many hosts\nstart up at exactly the same time, such as after a power failure. This\nsetting is only used for aggregating servers. Clients logging to a remote\nserver should keep this commented out.\n.TP\n",
                      "markdown": "`This is a numeric value which indicates how many pending (requested\nbut unaccepted) connections are allowed.  The default is 5.  Setting\nthis too small may cause connections to be rejected if too many hosts\nstart up at exactly the same time, such as after a power failure. This\nsetting is only used for aggregating servers. Clients logging to a remote\nserver should keep this commented out.\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd.conf.5"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 29,
                  "endLine": 255,
                  "endColumn": 38,
                  "snippet": {
                    "text": "This is a numeric value in the range 1..65535 which, if specified,\ncauses auditd to listen on the corresponding TCP port for audit\nrecords from remote systems. The audit daemon may be linked with\ntcp_wrappers. You may want to control access with an entry in the\nhosts.allow and deny files. If this is deployed on a systemd based\nOS, then you may need to adjust the 'After' directive. See the note in\nthe auditd.service file.\n",
                    "rendered": {
                      "text": "This is a numeric value in the range 1..65535 which, if specified,\ncauses auditd to listen on the corresponding TCP port for audit\nrecords from remote systems. The audit daemon may be linked with\ntcp_wrappers. You may want to control access with an entry in the\nhosts.allow and deny files. If this is deployed on a systemd based\nOS, then you may need to adjust the 'After' directive. See the note in\nthe auditd.service file.\n",
                      "markdown": "`This is a numeric value in the range 1..65535 which, if specified,\ncauses auditd to listen on the corresponding TCP port for audit\nrecords from remote systems. The audit daemon may be linked with\ntcp_wrappers. You may want to control access with an entry in the\nhosts.allow and deny files. If this is deployed on a systemd based\nOS, then you may need to adjust the 'After' directive. See the note in\nthe auditd.service file.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd.conf.5"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 6,
                  "endLine": 60,
                  "endColumn": 10,
                  "snippet": {
                    "text": "except the flushing is done asynchronously for higher performance. The\n.I data\nparameter tells the audit daemon to keep the data portion of the disk file\nsync'd at all times. The\n.I sync\noption tells the audit daemon to keep both the data and meta-data fully\nsync'd with every write to disk. The default value is incremental_async.\n",
                    "rendered": {
                      "text": "except the flushing is done asynchronously for higher performance. The\n.I data\nparameter tells the audit daemon to keep the data portion of the disk file\nsync'd at all times. The\n.I sync\noption tells the audit daemon to keep both the data and meta-data fully\nsync'd with every write to disk. The default value is incremental_async.\n",
                      "markdown": "`except the flushing is done asynchronously for higher performance. The\n.I data\nparameter tells the audit daemon to keep the data portion of the disk file\nsync'd at all times. The\n.I sync\noption tells the audit daemon to keep both the data and meta-data fully\nsync'd with every write to disk. The default value is incremental_async.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd.conf.5"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 27,
                  "endLine": 15,
                  "endColumn": 31,
                  "snippet": {
                    "text": "you want local events so the default value is yes. Cases where you would set\nthis to no is when you want to aggregate events only from the network. At the\nmoment, this is useful if the audit daemon is running in a container. This\noption can only be set once at daemon start up. Reloading the config file\nhas no effect.\n.TP\n.I log_file\n",
                    "rendered": {
                      "text": "you want local events so the default value is yes. Cases where you would set\nthis to no is when you want to aggregate events only from the network. At the\nmoment, this is useful if the audit daemon is running in a container. This\noption can only be set once at daemon start up. Reloading the config file\nhas no effect.\n.TP\n.I log_file\n",
                      "markdown": "`you want local events so the default value is yes. Cases where you would set\nthis to no is when you want to aggregate events only from the network. At the\nmoment, this is useful if the audit daemon is running in a container. This\noption can only be set once at daemon start up. Reloading the config file\nhas no effect.\n.TP\n.I log_file\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd.conf.5"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 70,
                  "endLine": 13,
                  "endColumn": 74,
                  "snippet": {
                    "text": ".I local_events\nThis yes/no keyword specifies whether or not to include local events. Normally\nyou want local events so the default value is yes. Cases where you would set\nthis to no is when you want to aggregate events only from the network. At the\nmoment, this is useful if the audit daemon is running in a container. This\noption can only be set once at daemon start up. Reloading the config file\nhas no effect.\n",
                    "rendered": {
                      "text": ".I local_events\nThis yes/no keyword specifies whether or not to include local events. Normally\nyou want local events so the default value is yes. Cases where you would set\nthis to no is when you want to aggregate events only from the network. At the\nmoment, this is useful if the audit daemon is running in a container. This\noption can only be set once at daemon start up. Reloading the config file\nhas no effect.\n",
                      "markdown": "`.I local_events\nThis yes/no keyword specifies whether or not to include local events. Normally\nyou want local events so the default value is yes. Cases where you would set\nthis to no is when you want to aggregate events only from the network. At the\nmoment, this is useful if the audit daemon is running in a container. This\noption can only be set once at daemon start up. Reloading the config file\nhas no effect.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd.conf.5"
                },
                "region": {
                  "startLine": 421,
                  "startColumn": 35,
                  "endLine": 421,
                  "endColumn": 41,
                  "snippet": {
                    "text": ".br\nrecord type >= AUDIT_MAC_UNLBL_ALLOW && record type <= AUDIT_MAC_CALIPSO_DEL (these are also one record events), or\n.br\nfor the stream being processed, the time of the event is over end_of_event_timeout seconds old.\n.RE\n\n.SH FILES\n",
                    "rendered": {
                      "text": ".br\nrecord type >= AUDIT_MAC_UNLBL_ALLOW && record type <= AUDIT_MAC_CALIPSO_DEL (these are also one record events), or\n.br\nfor the stream being processed, the time of the event is over end_of_event_timeout seconds old.\n.RE\n\n.SH FILES\n",
                      "markdown": "`.br\nrecord type >= AUDIT_MAC_UNLBL_ALLOW && record type <= AUDIT_MAC_CALIPSO_DEL (these are also one record events), or\n.br\nfor the stream being processed, the time of the event is over end_of_event_timeout seconds old.\n.RE\n\n.SH FILES\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd.conf.5"
                },
                "region": {
                  "startLine": 370,
                  "startColumn": 64,
                  "endLine": 370,
                  "endColumn": 70,
                  "snippet": {
                    "text": " be adjusted so that you get complete use of your partition. It should be noted that the more files that have to be rotated, the longer it takes to get back to receiving audit events. Max_log_file_action should be set to keep_logs.\n.PP\nSpace_left should be set to a number that gives the admin enough time to react to any alert message and perform some maintenance to free up disk space. This would typically involve running the \\fBaureport \\-t\\fP report and moving the oldest logs to an archive area. The value of space_left is site dependent since the rate at which events are generated varies with each ",
                    "rendered": {
                      "text": " be adjusted so that you get complete use of your partition. It should be noted that the more files that have to be rotated, the longer it takes to get back to receiving audit events. Max_log_file_action should be set to keep_logs.\n.PP\nSpace_left should be set to a number that gives the admin enough time to react to any alert message and perform some maintenance to free up disk space. This would typically involve running the \\fBaureport \\-t\\fP report and moving the oldest logs to an archive area. The value of space_left is site dependent since the rate at which events are generated varies with each ",
                      "markdown": "` be adjusted so that you get complete use of your partition. It should be noted that the more files that have to be rotated, the longer it takes to get back to receiving audit events. Max_log_file_action should be set to keep_logs.\n.PP\nSpace_left should be set to a number that gives the admin enough time to react to any alert message and perform some maintenance to free up disk space. This would typically involve running the \\fBaureport \\-t\\fP report and moving the oldest logs to an archive area. The value of space_left is site dependent since the rate at which events are generated varies with each `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd.conf.5"
                },
                "region": {
                  "startLine": 360,
                  "startColumn": 120,
                  "endLine": 360,
                  "endColumn": 126,
                  "snippet": {
                    "text": ".I aureport(8)\n,\n.I ausearch(8)\nutilities to consider an event is complete when parsing an event log stream. For an event stream being processed, if the time of the current event is over\n.I end_of_event_timeout\nseconds old, compared to co-located events, then the event is considered complete. See the NOTES section for more detail.\n.SH NOTES\n",
                    "rendered": {
                      "text": ".I aureport(8)\n,\n.I ausearch(8)\nutilities to consider an event is complete when parsing an event log stream. For an event stream being processed, if the time of the current event is over\n.I end_of_event_timeout\nseconds old, compared to co-located events, then the event is considered complete. See the NOTES section for more detail.\n.SH NOTES\n",
                      "markdown": "`.I aureport(8)\n,\n.I ausearch(8)\nutilities to consider an event is complete when parsing an event log stream. For an event stream being processed, if the time of the current event is over\n.I end_of_event_timeout\nseconds old, compared to co-located events, then the event is considered complete. See the NOTES section for more detail.\n.SH NOTES\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd.conf.5"
                },
                "region": {
                  "startLine": 317,
                  "startColumn": 49,
                  "endLine": 317,
                  "endColumn": 53,
                  "snippet": {
                    "text": "stored in\n.I /etc/audit/audit.key\nto authenticate itself, where hostname is the canonical name for the\nserver's host, as returned by a DNS lookup of its IP address.\n.TP\n.I krb5_key_file\nLocation of the key for this client's principal.\n",
                    "rendered": {
                      "text": "stored in\n.I /etc/audit/audit.key\nto authenticate itself, where hostname is the canonical name for the\nserver's host, as returned by a DNS lookup of its IP address.\n.TP\n.I krb5_key_file\nLocation of the key for this client's principal.\n",
                      "markdown": "`stored in\n.I /etc/audit/audit.key\nto authenticate itself, where hostname is the canonical name for the\nserver's host, as returned by a DNS lookup of its IP address.\n.TP\n.I krb5_key_file\nLocation of the key for this client's principal.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd.conf.5"
                },
                "region": {
                  "startLine": 285,
                  "startColumn": 4,
                  "endLine": 285,
                  "endColumn": 10,
                  "snippet": {
                    "text": ".TP\n.I tcp_client_ports\nThis parameter may be a single numeric value or two values separated\nby a dash (no spaces allowed).  It indicates which client ports are\nallowed for incoming connections.  If not specified, any port is\nallowed.  Allowed values are 1..65535.  For example, to require the\nclient use a privileged port, specify\n",
                    "rendered": {
                      "text": ".TP\n.I tcp_client_ports\nThis parameter may be a single numeric value or two values separated\nby a dash (no spaces allowed).  It indicates which client ports are\nallowed for incoming connections.  If not specified, any port is\nallowed.  Allowed values are 1..65535.  For example, to require the\nclient use a privileged port, specify\n",
                      "markdown": "`.TP\n.I tcp_client_ports\nThis parameter may be a single numeric value or two values separated\nby a dash (no spaces allowed).  It indicates which client ports are\nallowed for incoming connections.  If not specified, any port is\nallowed.  Allowed values are 1..65535.  For example, to require the\nclient use a privileged port, specify\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd.conf.5"
                },
                "region": {
                  "startLine": 274,
                  "startColumn": 46,
                  "endLine": 274,
                  "endColumn": 54,
                  "snippet": {
                    "text": "this too large may allow for a Denial of Service attack on the logging\nserver. Also note that the kernel has an internal maximum that will eventually\nprevent this even if auditd allows it by config. The default should be adequate\nin most cases unless a custom written recovery script runs to forward unsent\nevents. In this case you would increase the number only large enough to let it\nin too.\n.TP\n",
                    "rendered": {
                      "text": "this too large may allow for a Denial of Service attack on the logging\nserver. Also note that the kernel has an internal maximum that will eventually\nprevent this even if auditd allows it by config. The default should be adequate\nin most cases unless a custom written recovery script runs to forward unsent\nevents. In this case you would increase the number only large enough to let it\nin too.\n.TP\n",
                      "markdown": "`this too large may allow for a Denial of Service attack on the logging\nserver. Also note that the kernel has an internal maximum that will eventually\nprevent this even if auditd allows it by config. The default should be adequate\nin most cases unless a custom written recovery script runs to forward unsent\nevents. In this case you would increase the number only large enough to let it\nin too.\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd.conf.5"
                },
                "region": {
                  "startLine": 271,
                  "startColumn": 40,
                  "endLine": 271,
                  "endColumn": 49,
                  "snippet": {
                    "text": ".I tcp_max_per_addr\nThis is a numeric value which indicates how many concurrent connections from\none IP address is allowed.  The default is 1 and the maximum is 1024. Setting\nthis too large may allow for a Denial of Service attack on the logging\nserver. Also note that the kernel has an internal maximum that will eventually\nprevent this even if auditd allows it by config. The default should be adequate\nin most cases unless a custom written recovery script runs to forward unsent\n",
                    "rendered": {
                      "text": ".I tcp_max_per_addr\nThis is a numeric value which indicates how many concurrent connections from\none IP address is allowed.  The default is 1 and the maximum is 1024. Setting\nthis too large may allow for a Denial of Service attack on the logging\nserver. Also note that the kernel has an internal maximum that will eventually\nprevent this even if auditd allows it by config. The default should be adequate\nin most cases unless a custom written recovery script runs to forward unsent\n",
                      "markdown": "`.I tcp_max_per_addr\nThis is a numeric value which indicates how many concurrent connections from\none IP address is allowed.  The default is 1 and the maximum is 1024. Setting\nthis too large may allow for a Denial of Service attack on the logging\nserver. Also note that the kernel has an internal maximum that will eventually\nprevent this even if auditd allows it by config. The default should be adequate\nin most cases unless a custom written recovery script runs to forward unsent\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd.conf.5"
                },
                "region": {
                  "startLine": 270,
                  "startColumn": 3,
                  "endLine": 270,
                  "endColumn": 7,
                  "snippet": {
                    "text": ".TP\n.I tcp_max_per_addr\nThis is a numeric value which indicates how many concurrent connections from\none IP address is allowed.  The default is 1 and the maximum is 1024. Setting\nthis too large may allow for a Denial of Service attack on the logging\nserver. Also note that the kernel has an internal maximum that will eventually\nprevent this even if auditd allows it by config. The default should be adequate\n",
                    "rendered": {
                      "text": ".TP\n.I tcp_max_per_addr\nThis is a numeric value which indicates how many concurrent connections from\none IP address is allowed.  The default is 1 and the maximum is 1024. Setting\nthis too large may allow for a Denial of Service attack on the logging\nserver. Also note that the kernel has an internal maximum that will eventually\nprevent this even if auditd allows it by config. The default should be adequate\n",
                      "markdown": "`.TP\n.I tcp_max_per_addr\nThis is a numeric value which indicates how many concurrent connections from\none IP address is allowed.  The default is 1 and the maximum is 1024. Setting\nthis too large may allow for a Denial of Service attack on the logging\nserver. Also note that the kernel has an internal maximum that will eventually\nprevent this even if auditd allows it by config. The default should be adequate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd.conf.5"
                },
                "region": {
                  "startLine": 225,
                  "startColumn": 59,
                  "endLine": 225,
                  "endColumn": 68,
                  "snippet": {
                    "text": "will rotate logs, losing the oldest to free up space.\n.I exec\n/path-to-script will execute the script. You cannot pass parameters to the script. The script is also responsible for telling the auditd daemon to resume logging\ng once its completed its action. This can be done by adding service auditd resume to the script.\n.I Suspend\nwill cause the audit daemon to stop writing records to the disk. The daemon will still be alive. The\n.I single\n",
                    "rendered": {
                      "text": "will rotate logs, losing the oldest to free up space.\n.I exec\n/path-to-script will execute the script. You cannot pass parameters to the script. The script is also responsible for telling the auditd daemon to resume logging\ng once its completed its action. This can be done by adding service auditd resume to the script.\n.I Suspend\nwill cause the audit daemon to stop writing records to the disk. The daemon will still be alive. The\n.I single\n",
                      "markdown": "`will rotate logs, losing the oldest to free up space.\n.I exec\n/path-to-script will execute the script. You cannot pass parameters to the script. The script is also responsible for telling the auditd daemon to resume logging\ng once its completed its action. This can be done by adding service auditd resume to the script.\n.I Suspend\nwill cause the audit daemon to stop writing records to the disk. The daemon will still be alive. The\n.I single\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd.conf.5"
                },
                "region": {
                  "startLine": 224,
                  "startColumn": 86,
                  "endLine": 224,
                  "endColumn": 94,
                  "snippet": {
                    "text": ".I rotate\nwill rotate logs, losing the oldest to free up space.\n.I exec\n/path-to-script will execute the script. You cannot pass parameters to the script. The script is also responsible for telling the auditd daemon to resume logging\ng once its completed its action. This can be done by adding service auditd resume to the script.\n.I Suspend\nwill cause the audit daemon to stop writing records to the disk. The daemon will still be alive. The\n",
                    "rendered": {
                      "text": ".I rotate\nwill rotate logs, losing the oldest to free up space.\n.I exec\n/path-to-script will execute the script. You cannot pass parameters to the script. The script is also responsible for telling the auditd daemon to resume logging\ng once its completed its action. This can be done by adding service auditd resume to the script.\n.I Suspend\nwill cause the audit daemon to stop writing records to the disk. The daemon will still be alive. The\n",
                      "markdown": "`.I rotate\nwill rotate logs, losing the oldest to free up space.\n.I exec\n/path-to-script will execute the script. You cannot pass parameters to the script. The script is also responsible for telling the auditd daemon to resume logging\ng once its completed its action. This can be done by adding service auditd resume to the script.\n.I Suspend\nwill cause the audit daemon to stop writing records to the disk. The daemon will still be alive. The\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd.conf.5"
                },
                "region": {
                  "startLine": 204,
                  "startColumn": 219,
                  "endLine": 204,
                  "endColumn": 228,
                  "snippet": {
                    "text": ".I action_mail_acct\nas well as sending the message to syslog.\n.I exec\n/path-to-script will execute the script. You cannot pass parameters to the script. The script is also responsible for telling the auditd daemon to resume logging once its completed its action. This can be done by adding service auditd resume to the script.\n.I Suspend\nwill cause the audit daemon to stop writing records to the disk. The daemon will still be alive. The\n.I single\n",
                    "rendered": {
                      "text": ".I action_mail_acct\nas well as sending the message to syslog.\n.I exec\n/path-to-script will execute the script. You cannot pass parameters to the script. The script is also responsible for telling the auditd daemon to resume logging once its completed its action. This can be done by adding service auditd resume to the script.\n.I Suspend\nwill cause the audit daemon to stop writing records to the disk. The daemon will still be alive. The\n.I single\n",
                      "markdown": "`.I action_mail_acct\nas well as sending the message to syslog.\n.I exec\n/path-to-script will execute the script. You cannot pass parameters to the script. The script is also responsible for telling the auditd daemon to resume logging once its completed its action. This can be done by adding service auditd resume to the script.\n.I Suspend\nwill cause the audit daemon to stop writing records to the disk. The daemon will still be alive. The\n.I single\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd.conf.5"
                },
                "region": {
                  "startLine": 204,
                  "startColumn": 86,
                  "endLine": 204,
                  "endColumn": 94,
                  "snippet": {
                    "text": ".I action_mail_acct\nas well as sending the message to syslog.\n.I exec\n/path-to-script will execute the script. You cannot pass parameters to the script. The script is also responsible for telling the auditd daemon to resume logging once its completed its action. This can be done by adding service auditd resume to the script.\n.I Suspend\nwill cause the audit daemon to stop writing records to the disk. The daemon will still be alive. The\n.I single\n",
                    "rendered": {
                      "text": ".I action_mail_acct\nas well as sending the message to syslog.\n.I exec\n/path-to-script will execute the script. You cannot pass parameters to the script. The script is also responsible for telling the auditd daemon to resume logging once its completed its action. This can be done by adding service auditd resume to the script.\n.I Suspend\nwill cause the audit daemon to stop writing records to the disk. The daemon will still be alive. The\n.I single\n",
                      "markdown": "`.I action_mail_acct\nas well as sending the message to syslog.\n.I exec\n/path-to-script will execute the script. You cannot pass parameters to the script. The script is also responsible for telling the auditd daemon to resume logging once its completed its action. This can be done by adding service auditd resume to the script.\n.I Suspend\nwill cause the audit daemon to stop writing records to the disk. The daemon will still be alive. The\n.I single\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd.conf.5"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 219,
                  "endLine": 172,
                  "endColumn": 228,
                  "snippet": {
                    "text": ".I action_mail_acct\nas well as sending the message to syslog.\n.I exec\n/path-to-script will execute the script. You cannot pass parameters to the script. The script is also responsible for telling the auditd daemon to resume logging once its completed its action. This can be done by adding service auditd resume to the script.\n.I suspend\nwill cause the audit daemon to stop writing records to the disk. The daemon will still be alive. The\n.I single\n",
                    "rendered": {
                      "text": ".I action_mail_acct\nas well as sending the message to syslog.\n.I exec\n/path-to-script will execute the script. You cannot pass parameters to the script. The script is also responsible for telling the auditd daemon to resume logging once its completed its action. This can be done by adding service auditd resume to the script.\n.I suspend\nwill cause the audit daemon to stop writing records to the disk. The daemon will still be alive. The\n.I single\n",
                      "markdown": "`.I action_mail_acct\nas well as sending the message to syslog.\n.I exec\n/path-to-script will execute the script. You cannot pass parameters to the script. The script is also responsible for telling the auditd daemon to resume logging once its completed its action. This can be done by adding service auditd resume to the script.\n.I suspend\nwill cause the audit daemon to stop writing records to the disk. The daemon will still be alive. The\n.I single\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd.conf.5"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 86,
                  "endLine": 172,
                  "endColumn": 94,
                  "snippet": {
                    "text": ".I action_mail_acct\nas well as sending the message to syslog.\n.I exec\n/path-to-script will execute the script. You cannot pass parameters to the script. The script is also responsible for telling the auditd daemon to resume logging once its completed its action. This can be done by adding service auditd resume to the script.\n.I suspend\nwill cause the audit daemon to stop writing records to the disk. The daemon will still be alive. The\n.I single\n",
                    "rendered": {
                      "text": ".I action_mail_acct\nas well as sending the message to syslog.\n.I exec\n/path-to-script will execute the script. You cannot pass parameters to the script. The script is also responsible for telling the auditd daemon to resume logging once its completed its action. This can be done by adding service auditd resume to the script.\n.I suspend\nwill cause the audit daemon to stop writing records to the disk. The daemon will still be alive. The\n.I single\n",
                      "markdown": "`.I action_mail_acct\nas well as sending the message to syslog.\n.I exec\n/path-to-script will execute the script. You cannot pass parameters to the script. The script is also responsible for telling the auditd daemon to resume logging once its completed its action. This can be done by adding service auditd resume to the script.\n.I suspend\nwill cause the audit daemon to stop writing records to the disk. The daemon will still be alive. The\n.I single\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd.conf.5"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 73,
                  "endLine": 124,
                  "endColumn": 81,
                  "snippet": {
                    "text": ".IR keep_logs\noption is similar to rotate except it does not use the num_logs setting. This prevents audit logs from being overwritten. The effect is that logs accumulate and are not deleted \\- which will trigger the\n.I space_left_action\nif the volume fills up. This is best used in combination with an external script used to archive logs on a periodic basis.\n.TP\n.I verify_email\nThis option determines if the email address given in\n",
                    "rendered": {
                      "text": ".IR keep_logs\noption is similar to rotate except it does not use the num_logs setting. This prevents audit logs from being overwritten. The effect is that logs accumulate and are not deleted \\- which will trigger the\n.I space_left_action\nif the volume fills up. This is best used in combination with an external script used to archive logs on a periodic basis.\n.TP\n.I verify_email\nThis option determines if the email address given in\n",
                      "markdown": "`.IR keep_logs\noption is similar to rotate except it does not use the num_logs setting. This prevents audit logs from being overwritten. The effect is that logs accumulate and are not deleted \\- which will trigger the\n.I space_left_action\nif the volume fills up. This is best used in combination with an external script used to archive logs on a periodic basis.\n.TP\n.I verify_email\nThis option determines if the email address given in\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd.conf.5"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 287,
                  "endLine": 92,
                  "endColumn": 293,
                  "snippet": {
                    "text": "means that it takes the hostname and resolves it with dns for a fully qualified\ndomain name of that machine.\n.IR Numeric\nis similar to fqd except it resolves the IP address of the machine. In order to use this option, you might want to test that 'hostname \\-i' or 'domainname \\-i' returns a numeric address. Also, this option is not recommended if dhcp is used because you could have different addresses over time for the same machine.\n.IR User\nis an admin defined string from the name option. The default value is\n.IR none \".\n",
                    "rendered": {
                      "text": "means that it takes the hostname and resolves it with dns for a fully qualified\ndomain name of that machine.\n.IR Numeric\nis similar to fqd except it resolves the IP address of the machine. In order to use this option, you might want to test that 'hostname \\-i' or 'domainname \\-i' returns a numeric address. Also, this option is not recommended if dhcp is used because you could have different addresses over time for the same machine.\n.IR User\nis an admin defined string from the name option. The default value is\n.IR none \".\n",
                      "markdown": "`means that it takes the hostname and resolves it with dns for a fully qualified\ndomain name of that machine.\n.IR Numeric\nis similar to fqd except it resolves the IP address of the machine. In order to use this option, you might want to test that 'hostname \\-i' or 'domainname \\-i' returns a numeric address. Also, this option is not recommended if dhcp is used because you could have different addresses over time for the same machine.\n.IR User\nis an admin defined string from the name option. The default value is\n.IR none \".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd.conf.5"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 40,
                  "endLine": 92,
                  "endColumn": 44,
                  "snippet": {
                    "text": "means that it takes the hostname and resolves it with dns for a fully qualified\ndomain name of that machine.\n.IR Numeric\nis similar to fqd except it resolves the IP address of the machine. In order to use this option, you might want to test that 'hostname \\-i' or 'domainname \\-i' returns a numeric address. Also, this option is not recommended if dhcp is used because you could have different addresses over time for the same machine.\n.IR User\nis an admin defined string from the name option. The default value is\n.IR none \".\n",
                    "rendered": {
                      "text": "means that it takes the hostname and resolves it with dns for a fully qualified\ndomain name of that machine.\n.IR Numeric\nis similar to fqd except it resolves the IP address of the machine. In order to use this option, you might want to test that 'hostname \\-i' or 'domainname \\-i' returns a numeric address. Also, this option is not recommended if dhcp is used because you could have different addresses over time for the same machine.\n.IR User\nis an admin defined string from the name option. The default value is\n.IR none \".\n",
                      "markdown": "`means that it takes the hostname and resolves it with dns for a fully qualified\ndomain name of that machine.\n.IR Numeric\nis similar to fqd except it resolves the IP address of the machine. In order to use this option, you might want to test that 'hostname \\-i' or 'domainname \\-i' returns a numeric address. Also, this option is not recommended if dhcp is used because you could have different addresses over time for the same machine.\n.IR User\nis an admin defined string from the name option. The default value is\n.IR none \".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd.conf.5"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 33,
                  "endLine": 82,
                  "endColumn": 39,
                  "snippet": {
                    "text": "/audit/audit.rules. If log rotation is configured to occur, the daemon will check for excess logs and remove them in effort to keep disk space available. The excess log check is only done on startup and when a reconfigure results in a space check.\n.TP\n.I name_format\nThis option controls how computer node names are inserted into the audit event stream. It has the following choices:\n.IR none \", \" hostname \", \" fqd \", \" numeric \", and \" user \".\n.IR None\nmeans that no computer name is inserted into the audit event.\n.IR hostname\nis the name returned by the gethostname syscall. The\n.IR fqd\nmeans that it t",
                    "rendered": {
                      "text": "/audit/audit.rules. If log rotation is configured to occur, the daemon will check for excess logs and remove them in effort to keep disk space available. The excess log check is only done on startup and when a reconfigure results in a space check.\n.TP\n.I name_format\nThis option controls how computer node names are inserted into the audit event stream. It has the following choices:\n.IR none \", \" hostname \", \" fqd \", \" numeric \", and \" user \".\n.IR None\nmeans that no computer name is inserted into the audit event.\n.IR hostname\nis the name returned by the gethostname syscall. The\n.IR fqd\nmeans that it t",
                      "markdown": "`/audit/audit.rules. If log rotation is configured to occur, the daemon will check for excess logs and remove them in effort to keep disk space available. The excess log check is only done on startup and when a reconfigure results in a space check.\n.TP\n.I name_format\nThis option controls how computer node names are inserted into the audit event stream. It has the following choices:\n.IR none \", \" hostname \", \" fqd \", \" numeric \", and \" user \".\n.IR None\nmeans that no computer name is inserted into the audit event.\n.IR hostname\nis the name returned by the gethostname syscall. The\n.IR fqd\nmeans that it t`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd.conf.5"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 176,
                  "endLine": 79,
                  "endColumn": 182,
                  "snippet": {
                    "text": "rotate is given\nas the\n.I max_log_file_action.\nIf the number is < 2, logs are not rotated. This number must be 999 or less.\nThe default is 0 - which means no rotation. As you increase the number of log files being rotated, you may need to adjust the kernel backlog setting upwards since it takes more time to rotate the files. This is typically done in /etc/audit/audit.rules. If log rotation is configured to occur, the daemon will check for excess logs and remove them in effort to keep disk space available. The excess log check is only done on startup and when a reconfigure results in a space check.\n.",
                    "rendered": {
                      "text": "rotate is given\nas the\n.I max_log_file_action.\nIf the number is < 2, logs are not rotated. This number must be 999 or less.\nThe default is 0 - which means no rotation. As you increase the number of log files being rotated, you may need to adjust the kernel backlog setting upwards since it takes more time to rotate the files. This is typically done in /etc/audit/audit.rules. If log rotation is configured to occur, the daemon will check for excess logs and remove them in effort to keep disk space available. The excess log check is only done on startup and when a reconfigure results in a space check.\n.",
                      "markdown": "`rotate is given\nas the\n.I max_log_file_action.\nIf the number is < 2, logs are not rotated. This number must be 999 or less.\nThe default is 0 - which means no rotation. As you increase the number of log files being rotated, you may need to adjust the kernel backlog setting upwards since it takes more time to rotate the files. This is typically done in /etc/audit/audit.rules. If log rotation is configured to occur, the daemon will check for excess logs and remove them in effort to keep disk space available. The excess log check is only done on startup and when a reconfigure results in a space check.\n.`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit_log_user_comm_message.3"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 15,
                  "endLine": 19,
                  "endColumn": 23,
                  "snippet": {
                    "text": "type - type of message, ex: AUDIT_USYS_CONFIG, AUDIT_USER_LOGIN\nmessage - the message text being sent\ncomm - the program command line name, NULL if unknown\nhostname - the hostname if known, NULL if unknown\naddr - The network address of the user, NULL if unknown\ntty - The tty of the user, if NULL will attempt to figure out\nresult - 1 is \"success\" and 0 is \"failed\"\n",
                    "rendered": {
                      "text": "type - type of message, ex: AUDIT_USYS_CONFIG, AUDIT_USER_LOGIN\nmessage - the message text being sent\ncomm - the program command line name, NULL if unknown\nhostname - the hostname if known, NULL if unknown\naddr - The network address of the user, NULL if unknown\ntty - The tty of the user, if NULL will attempt to figure out\nresult - 1 is \"success\" and 0 is \"failed\"\n",
                      "markdown": "`type - type of message, ex: AUDIT_USYS_CONFIG, AUDIT_USER_LOGIN\nmessage - the message text being sent\ncomm - the program command line name, NULL if unknown\nhostname - the hostname if known, NULL if unknown\naddr - The network address of the user, NULL if unknown\ntty - The tty of the user, if NULL will attempt to figure out\nresult - 1 is \"success\" and 0 is \"failed\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit_log_user_comm_message.3"
                },
                "region": {
                  "startLine": 19,
                  "endLine": 19,
                  "endColumn": 8,
                  "snippet": {
                    "text": "type - type of message, ex: AUDIT_USYS_CONFIG, AUDIT_USER_LOGIN\nmessage - the message text being sent\ncomm - the program command line name, NULL if unknown\nhostname - the hostname if known, NULL if unknown\naddr - The network address of the user, NULL if unknown\ntty - The tty of the user, if NULL will attempt to figure out\nresult - 1 is \"success\" and 0 is \"failed\"\n",
                    "rendered": {
                      "text": "type - type of message, ex: AUDIT_USYS_CONFIG, AUDIT_USER_LOGIN\nmessage - the message text being sent\ncomm - the program command line name, NULL if unknown\nhostname - the hostname if known, NULL if unknown\naddr - The network address of the user, NULL if unknown\ntty - The tty of the user, if NULL will attempt to figure out\nresult - 1 is \"success\" and 0 is \"failed\"\n",
                      "markdown": "`type - type of message, ex: AUDIT_USYS_CONFIG, AUDIT_USER_LOGIN\nmessage - the message text being sent\ncomm - the program command line name, NULL if unknown\nhostname - the hostname if known, NULL if unknown\naddr - The network address of the user, NULL if unknown\ntty - The tty of the user, if NULL will attempt to figure out\nresult - 1 is \"success\" and 0 is \"failed\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit_log_user_comm_message.3"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 30,
                  "endLine": 8,
                  "endColumn": 38,
                  "snippet": {
                    "text": ".B #include <libaudit.h>\n.sp\nint audit_log_user_comm_message(int audit_fd, int type, const char *message,\nconst char *comm, const char *hostname, const char *addr, const char *tty,\nint result)\n\n.SH DESCRIPTION\n",
                    "rendered": {
                      "text": ".B #include <libaudit.h>\n.sp\nint audit_log_user_comm_message(int audit_fd, int type, const char *message,\nconst char *comm, const char *hostname, const char *addr, const char *tty,\nint result)\n\n.SH DESCRIPTION\n",
                      "markdown": "`.B #include <libaudit.h>\n.sp\nint audit_log_user_comm_message(int audit_fd, int type, const char *message,\nconst char *comm, const char *hostname, const char *addr, const char *tty,\nint result)\n\n.SH DESCRIPTION\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit_log_user_comm_message.3"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 252,
                  "endLine": 12,
                  "endColumn": 260,
                  "snippet": {
                    "text": "int result)\n\n.SH DESCRIPTION\nThis function will log a message to the audit system using a predefined message format. This function should be used by all non-ELF console apps that do not manipulate accounts, groups, or need to log execution of a script. An example would be a Python script recording an event. The function parameters are as follows:\n\n.nf\naudit_fd - The fd returned by audit_open\n",
                    "rendered": {
                      "text": "int result)\n\n.SH DESCRIPTION\nThis function will log a message to the audit system using a predefined message format. This function should be used by all non-ELF console apps that do not manipulate accounts, groups, or need to log execution of a script. An example would be a Python script recording an event. The function parameters are as follows:\n\n.nf\naudit_fd - The fd returned by audit_open\n",
                      "markdown": "`int result)\n\n.SH DESCRIPTION\nThis function will log a message to the audit system using a predefined message format. This function should be used by all non-ELF console apps that do not manipulate accounts, groups, or need to log execution of a script. An example would be a Python script recording an event. The function parameters are as follows:\n\n.nf\naudit_fd - The fd returned by audit_open\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auparse_get_time.3"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 3,
                  "endLine": 19,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n.SH \"SEE ALSO\"\n\n.BR time (3), \n.BR auparse_get_timestamp (3), \n.BR auparse_get_milli (3).\n.BR auparse_get_serial (3).\n",
                    "rendered": {
                      "text": "\n.SH \"SEE ALSO\"\n\n.BR time (3), \n.BR auparse_get_timestamp (3), \n.BR auparse_get_milli (3).\n.BR auparse_get_serial (3).\n",
                      "markdown": "`\n.SH \"SEE ALSO\"\n\n.BR time (3), \n.BR auparse_get_timestamp (3), \n.BR auparse_get_milli (3).\n.BR auparse_get_serial (3).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auparse_get_time.3"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 50,
                  "endLine": 15,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\n.SH \"RETURN VALUE\"\n\nReturns 0 if an error occurs; otherwise, the valid time value in time_t format.\n\n.SH \"SEE ALSO\"\n\n",
                    "rendered": {
                      "text": "\n.SH \"RETURN VALUE\"\n\nReturns 0 if an error occurs; otherwise, the valid time value in time_t format.\n\n.SH \"SEE ALSO\"\n\n",
                      "markdown": "`\n.SH \"RETURN VALUE\"\n\nReturns 0 if an error occurs; otherwise, the valid time value in time_t format.\n\n.SH \"SEE ALSO\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auparse_get_time.3"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 37,
                  "endLine": 11,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\n.SH \"DESCRIPTION\"\n\nauparse_get_time will access just the time portion of the timestamp data structure for the current event.\n\n.SH \"RETURN VALUE\"\n\n",
                    "rendered": {
                      "text": "\n.SH \"DESCRIPTION\"\n\nauparse_get_time will access just the time portion of the timestamp data structure for the current event.\n\n.SH \"RETURN VALUE\"\n\n",
                      "markdown": "`\n.SH \"DESCRIPTION\"\n\nauparse_get_time will access just the time portion of the timestamp data structure for the current event.\n\n.SH \"RETURN VALUE\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auparse_get_time.3"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 31,
                  "endLine": 4,
                  "snippet": {
                    "text": ".TH \"AUPARSE_GET_TIME\" \"3\" \"Sept 2007\" \"Red Hat\" \"Linux Audit API\"\n.SH NAME\nauparse_get_time \\- get event's time\n.SH \"SYNOPSIS\"\n.B #include <auparse.h>\n.sp\ntime_t auparse_get_time(const auparse_state_t *au);\n",
                    "rendered": {
                      "text": ".TH \"AUPARSE_GET_TIME\" \"3\" \"Sept 2007\" \"Red Hat\" \"Linux Audit API\"\n.SH NAME\nauparse_get_time \\- get event's time\n.SH \"SYNOPSIS\"\n.B #include <auparse.h>\n.sp\ntime_t auparse_get_time(const auparse_state_t *au);\n",
                      "markdown": "`.TH \"AUPARSE_GET_TIME\" \"3\" \"Sept 2007\" \"Red Hat\" \"Linux Audit API\"\n.SH NAME\nauparse_get_time \\- get event's time\n.SH \"SYNOPSIS\"\n.B #include <auparse.h>\n.sp\ntime_t auparse_get_time(const auparse_state_t *au);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audispd-zos-remote.8"
                },
                "region": {
                  "startLine": 192,
                  "startColumn": 46,
                  "endLine": 192,
                  "endColumn": 54,
                  "snippet": {
                    "text": "etc.\n.SS Log String\nTextual message bringing the RACF user ID used to perform the request, plus the Linux hostname and the record type for the first record in the processed event. e.g.:\n.I Remote audit request from RACFUSER. Linux (hostname.localdomain):USER_AUTH \n.SS Data Field List\nAlso known as\n.IR relocates ,\n",
                    "rendered": {
                      "text": "etc.\n.SS Log String\nTextual message bringing the RACF user ID used to perform the request, plus the Linux hostname and the record type for the first record in the processed event. e.g.:\n.I Remote audit request from RACFUSER. Linux (hostname.localdomain):USER_AUTH \n.SS Data Field List\nAlso known as\n.IR relocates ,\n",
                      "markdown": "`etc.\n.SS Log String\nTextual message bringing the RACF user ID used to perform the request, plus the Linux hostname and the record type for the first record in the processed event. e.g.:\n.I Remote audit request from RACFUSER. Linux (hostname.localdomain):USER_AUTH \n.SS Data Field List\nAlso known as\n.IR relocates ,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audispd-zos-remote.8"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 86,
                  "endLine": 191,
                  "endColumn": 94,
                  "snippet": {
                    "text": ".IR SYSCALL , AVC , PATH , CWD\netc.\n.SS Log String\nTextual message bringing the RACF user ID used to perform the request, plus the Linux hostname and the record type for the first record in the processed event. e.g.:\n.I Remote audit request from RACFUSER. Linux (hostname.localdomain):USER_AUTH \n.SS Data Field List\nAlso known as\n",
                    "rendered": {
                      "text": ".IR SYSCALL , AVC , PATH , CWD\netc.\n.SS Log String\nTextual message bringing the RACF user ID used to perform the request, plus the Linux hostname and the record type for the first record in the processed event. e.g.:\n.I Remote audit request from RACFUSER. Linux (hostname.localdomain):USER_AUTH \n.SS Data Field List\nAlso known as\n",
                      "markdown": "`.IR SYSCALL , AVC , PATH , CWD\netc.\n.SS Log String\nTextual message bringing the RACF user ID used to perform the request, plus the Linux hostname and the record type for the first record in the processed event. e.g.:\n.I Remote audit request from RACFUSER. Linux (hostname.localdomain):USER_AUTH \n.SS Data Field List\nAlso known as\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audispd-zos-remote.8"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 60,
                  "endLine": 46,
                  "snippet": {
                    "text": "for the same plugin executable (see\n.BR auditd (8)).\n\nEach instance needs a configuration file, located by default at\n.IR /etc/audit/zos\\-remote.conf .\nCheck\n.BR zos\\-remote.conf (5)\nfor details about the plugin configuration.\n",
                    "rendered": {
                      "text": "for the same plugin executable (see\n.BR auditd (8)).\n\nEach instance needs a configuration file, located by default at\n.IR /etc/audit/zos\\-remote.conf .\nCheck\n.BR zos\\-remote.conf (5)\nfor details about the plugin configuration.\n",
                      "markdown": "`for the same plugin executable (see\n.BR auditd (8)).\n\nEach instance needs a configuration file, located by default at\n.IR /etc/audit/zos\\-remote.conf .\nCheck\n.BR zos\\-remote.conf (5)\nfor details about the plugin configuration.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audispd-zos-remote.8"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 92,
                  "endLine": 39,
                  "snippet": {
                    "text": "section below for more information about the resulting SMF record format.\n\n.BR auditd (8)\nmust be configured to start the plugin. This is done by a configuration file usually located at\n.IR /etc/audit/plugins.d/audispd\\-zos\\-remote.conf ,\nbut multiple instances can be spawned by having multiple configuration files in\n.I /etc/audit/plugins.d\nfor the same plugin executable (see\n",
                    "rendered": {
                      "text": "section below for more information about the resulting SMF record format.\n\n.BR auditd (8)\nmust be configured to start the plugin. This is done by a configuration file usually located at\n.IR /etc/audit/plugins.d/audispd\\-zos\\-remote.conf ,\nbut multiple instances can be spawned by having multiple configuration files in\n.I /etc/audit/plugins.d\nfor the same plugin executable (see\n",
                      "markdown": "`section below for more information about the resulting SMF record format.\n\n.BR auditd (8)\nmust be configured to start the plugin. This is done by a configuration file usually located at\n.IR /etc/audit/plugins.d/audispd\\-zos\\-remote.conf ,\nbut multiple instances can be spawned by having multiple configuration files in\n.I /etc/audit/plugins.d\nfor the same plugin executable (see\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audispd-zos-remote.8"
                },
                "region": {
                  "startLine": 221,
                  "startColumn": 63,
                  "endLine": 222,
                  "snippet": {
                    "text": "No profile found for specified resource. There is no @LINUX Class configured or no @LINUX Class profile associated with this audit record type. See\n.B IBM z/OS RACF Server configuration\n.TP\n.B UNAUTHORIZED - The user does not have authority the R_auditx service\nThe user ID associated with the ITDS doesn't have READ access to the IRR.AUDITX FACILITY Class profile. See\n.B IBM z/OS RACF Server configuration\n.TP\n.B UNSUF_AUTH - The user has insufficient authority for the requested function\n",
                    "rendered": {
                      "text": "No profile found for specified resource. There is no @LINUX Class configured or no @LINUX Class profile associated with this audit record type. See\n.B IBM z/OS RACF Server configuration\n.TP\n.B UNAUTHORIZED - The user does not have authority the R_auditx service\nThe user ID associated with the ITDS doesn't have READ access to the IRR.AUDITX FACILITY Class profile. See\n.B IBM z/OS RACF Server configuration\n.TP\n.B UNSUF_AUTH - The user has insufficient authority for the requested function\n",
                      "markdown": "`No profile found for specified resource. There is no @LINUX Class configured or no @LINUX Class profile associated with this audit record type. See\n.B IBM z/OS RACF Server configuration\n.TP\n.B UNAUTHORIZED - The user does not have authority the R_auditx service\nThe user ID associated with the ITDS doesn't have READ access to the IRR.AUDITX FACILITY Class profile. See\n.B IBM z/OS RACF Server configuration\n.TP\n.B UNSUF_AUTH - The user has insufficient authority for the requested function\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audispd-zos-remote.8"
                },
                "region": {
                  "startLine": 205,
                  "startColumn": 15,
                  "endLine": 205,
                  "endColumn": 21,
                  "snippet": {
                    "text": "instead of numeric userid\n.BR 0 ) \nwhenever possible. Currently, this plugin will also add a relocate type 113\n.RB ( \"Date And Time Security Event Occurred\" )\nwith the Event Timestamp in the format as returned by\n.BR ctime (3).\n\n",
                    "rendered": {
                      "text": "instead of numeric userid\n.BR 0 ) \nwhenever possible. Currently, this plugin will also add a relocate type 113\n.RB ( \"Date And Time Security Event Occurred\" )\nwith the Event Timestamp in the format as returned by\n.BR ctime (3).\n\n",
                      "markdown": "`instead of numeric userid\n.BR 0 ) \nwhenever possible. Currently, this plugin will also add a relocate type 113\n.RB ( \"Date And Time Security Event Occurred\" )\nwith the Event Timestamp in the format as returned by\n.BR ctime (3).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audispd-zos-remote.8"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 77,
                  "endLine": 157,
                  "endColumn": 83,
                  "snippet": {
                    "text": "There are many other ways to define logging in RACF. Please refer to the server documentation for more details.\n\n.SH SMF Mapping\nThe ITDS Remote Audit service will cut SMF records of type 83 subtype 4 every time it processes a request. This plugin will issue a remote audit request for every incoming Linux Audit record (meaning that one Linux record will map to one SMF record), and fill this type's records with the following:\n.SS Link Value\nThe Linux event serial number, encoded in network-byte order hexadecimal representation. Records within the same Event share the same Link Value.\n.SS Violation\n",
                    "rendered": {
                      "text": "There are many other ways to define logging in RACF. Please refer to the server documentation for more details.\n\n.SH SMF Mapping\nThe ITDS Remote Audit service will cut SMF records of type 83 subtype 4 every time it processes a request. This plugin will issue a remote audit request for every incoming Linux Audit record (meaning that one Linux record will map to one SMF record), and fill this type's records with the following:\n.SS Link Value\nThe Linux event serial number, encoded in network-byte order hexadecimal representation. Records within the same Event share the same Link Value.\n.SS Violation\n",
                      "markdown": "`There are many other ways to define logging in RACF. Please refer to the server documentation for more details.\n\n.SH SMF Mapping\nThe ITDS Remote Audit service will cut SMF records of type 83 subtype 4 every time it processes a request. This plugin will issue a remote audit request for every incoming Linux Audit record (meaning that one Linux record will map to one SMF record), and fill this type's records with the following:\n.SS Link Value\nThe Linux event serial number, encoded in network-byte order hexadecimal representation. Records within the same Event share the same Link Value.\n.SS Violation\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audispd-zos-remote.8"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 34,
                  "endLine": 157,
                  "endColumn": 39,
                  "snippet": {
                    "text": "There are many other ways to define logging in RACF. Please refer to the server documentation for more details.\n\n.SH SMF Mapping\nThe ITDS Remote Audit service will cut SMF records of type 83 subtype 4 every time it processes a request. This plugin will issue a remote audit request for every incoming Linux Audit record (meaning that one Linux record will map to one SMF record), and fill this type's records with the following:\n.SS Link Value\nThe Linux event serial number, encoded in network-byte order hexadecimal representation. Records within the same Event share the same Link Value.\n.SS Violation\n",
                    "rendered": {
                      "text": "There are many other ways to define logging in RACF. Please refer to the server documentation for more details.\n\n.SH SMF Mapping\nThe ITDS Remote Audit service will cut SMF records of type 83 subtype 4 every time it processes a request. This plugin will issue a remote audit request for every incoming Linux Audit record (meaning that one Linux record will map to one SMF record), and fill this type's records with the following:\n.SS Link Value\nThe Linux event serial number, encoded in network-byte order hexadecimal representation. Records within the same Event share the same Link Value.\n.SS Violation\n",
                      "markdown": "`There are many other ways to define logging in RACF. Please refer to the server documentation for more details.\n\n.SH SMF Mapping\nThe ITDS Remote Audit service will cut SMF records of type 83 subtype 4 every time it processes a request. This plugin will issue a remote audit request for every incoming Linux Audit record (meaning that one Linux record will map to one SMF record), and fill this type's records with the following:\n.SS Link Value\nThe Linux event serial number, encoded in network-byte order hexadecimal representation. Records within the same Event share the same Link Value.\n.SS Violation\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audispd-zos-remote.8"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 21,
                  "endLine": 157,
                  "endColumn": 30,
                  "snippet": {
                    "text": "There are many other ways to define logging in RACF. Please refer to the server documentation for more details.\n\n.SH SMF Mapping\nThe ITDS Remote Audit service will cut SMF records of type 83 subtype 4 every time it processes a request. This plugin will issue a remote audit request for every incoming Linux Audit record (meaning that one Linux record will map to one SMF record), and fill this type's records with the following:\n.SS Link Value\nThe Linux event serial number, encoded in network-byte order hexadecimal representation. Records within the same Event share the same Link Value.\n.SS Violation\n",
                    "rendered": {
                      "text": "There are many other ways to define logging in RACF. Please refer to the server documentation for more details.\n\n.SH SMF Mapping\nThe ITDS Remote Audit service will cut SMF records of type 83 subtype 4 every time it processes a request. This plugin will issue a remote audit request for every incoming Linux Audit record (meaning that one Linux record will map to one SMF record), and fill this type's records with the following:\n.SS Link Value\nThe Linux event serial number, encoded in network-byte order hexadecimal representation. Records within the same Event share the same Link Value.\n.SS Violation\n",
                      "markdown": "`There are many other ways to define logging in RACF. Please refer to the server documentation for more details.\n\n.SH SMF Mapping\nThe ITDS Remote Audit service will cut SMF records of type 83 subtype 4 every time it processes a request. This plugin will issue a remote audit request for every incoming Linux Audit record (meaning that one Linux record will map to one SMF record), and fill this type's records with the following:\n.SS Link Value\nThe Linux event serial number, encoded in network-byte order hexadecimal representation. Records within the same Event share the same Link Value.\n.SS Violation\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditctl.8"
                },
                "region": {
                  "startLine": 280,
                  "startColumn": 41,
                  "endLine": 280,
                  "endColumn": 45,
                  "snippet": {
                    "text": "ule. The \\-w form of writing watches is for backwards compatibility and is\n.B deprecated due to poor system performance.\nConvert watches of this form to the syscall based form. The only valid options when using a watch are the \\-p and \\-k.\n.TP\n.BI \\-W\\  path\nRemove a watch for the file system object at \\fIpath\\fP. The rule must match exactly. See \\fB-d\\fP discussion for more info.\n.SH \"PERFORMANCE TIPS\"\nSyscall rules get evaluated for each syscall for every program. If you have 10 syscall rules, every program on your system will delay during a syscall while the audit system evaluates each rule. To",
                    "rendered": {
                      "text": "ule. The \\-w form of writing watches is for backwards compatibility and is\n.B deprecated due to poor system performance.\nConvert watches of this form to the syscall based form. The only valid options when using a watch are the \\-p and \\-k.\n.TP\n.BI \\-W\\  path\nRemove a watch for the file system object at \\fIpath\\fP. The rule must match exactly. See \\fB-d\\fP discussion for more info.\n.SH \"PERFORMANCE TIPS\"\nSyscall rules get evaluated for each syscall for every program. If you have 10 syscall rules, every program on your system will delay during a syscall while the audit system evaluates each rule. To",
                      "markdown": "`ule. The \\-w form of writing watches is for backwards compatibility and is\n.B deprecated due to poor system performance.\nConvert watches of this form to the syscall based form. The only valid options when using a watch are the \\-p and \\-k.\n.TP\n.BI \\-W\\  path\nRemove a watch for the file system object at \\fIpath\\fP. The rule must match exactly. See \\fB-d\\fP discussion for more info.\n.SH \"PERFORMANCE TIPS\"\nSyscall rules get evaluated for each syscall for every program. If you have 10 syscall rules, every program on your system will delay during a syscall while the audit system evaluates each rule. To`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditctl.8"
                },
                "region": {
                  "startLine": 272,
                  "startColumn": 925,
                  "endLine": 272,
                  "endColumn": 934,
                  "snippet": {
                    "text": "h (in this case b64) and sends that rule to the kernel. If there are no additional arch directives, IT WILL APPLY TO BOTH 32 & 64 BIT SYSCALLS. This can have undesirable effects since there is no guarantee that any syscall has the same number on both 32 and 64 bit interfaces. You will likely want to control this and write 2 rules, one with arch equal to b32 and one with b64 to make sure the kernel finds the events that you intend. See the arch field discussion for more info.\n.TP\n.BI \\-w\\  path\nPlace a watch on path. If the path is a file, it's almost the same as using the \\-F path option on a syscall r",
                    "rendered": {
                      "text": "h (in this case b64) and sends that rule to the kernel. If there are no additional arch directives, IT WILL APPLY TO BOTH 32 & 64 BIT SYSCALLS. This can have undesirable effects since there is no guarantee that any syscall has the same number on both 32 and 64 bit interfaces. You will likely want to control this and write 2 rules, one with arch equal to b32 and one with b64 to make sure the kernel finds the events that you intend. See the arch field discussion for more info.\n.TP\n.BI \\-w\\  path\nPlace a watch on path. If the path is a file, it's almost the same as using the \\-F path option on a syscall r",
                      "markdown": "`h (in this case b64) and sends that rule to the kernel. If there are no additional arch directives, IT WILL APPLY TO BOTH 32 & 64 BIT SYSCALLS. This can have undesirable effects since there is no guarantee that any syscall has the same number on both 32 and 64 bit interfaces. You will likely want to control this and write 2 rules, one with arch equal to b32 and one with b64 to make sure the kernel finds the events that you intend. See the arch field discussion for more info.\n.TP\n.BI \\-w\\  path\nPlace a watch on path. If the path is a file, it's almost the same as using the \\-F path option on a syscall r`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditctl.8"
                },
                "region": {
                  "startLine": 217,
                  "startColumn": 444,
                  "endLine": 217,
                  "endColumn": 448,
                  "snippet": {
                    "text": "cute, \\fBa\\fP=attribute change. These permissions are not the standard file permissions, but rather the kind of syscall that would do this kind of thing. The read & write syscalls are omitted from this set since they would overwhelm the logs. But rather for reads or writes, the open flags are looked at to see what permission was requested. The perm field can only be used on exit list. You can use this without specifying a syscall and the kernel will select the syscalls that satisfy the access permissions being requested. This also requires supplying an arch parameter before the perm field. This wa",
                    "rendered": {
                      "text": "cute, \\fBa\\fP=attribute change. These permissions are not the standard file permissions, but rather the kind of syscall that would do this kind of thing. The read & write syscalls are omitted from this set since they would overwhelm the logs. But rather for reads or writes, the open flags are looked at to see what permission was requested. The perm field can only be used on exit list. You can use this without specifying a syscall and the kernel will select the syscalls that satisfy the access permissions being requested. This also requires supplying an arch parameter before the perm field. This wa",
                      "markdown": "`cute, \\fBa\\fP=attribute change. These permissions are not the standard file permissions, but rather the kind of syscall that would do this kind of thing. The read & write syscalls are omitted from this set since they would overwhelm the logs. But rather for reads or writes, the open flags are looked at to see what permission was requested. The perm field can only be used on exit list. You can use this without specifying a syscall and the kernel will select the syscalls that satisfy the access permissions being requested. This also requires supplying an arch parameter before the perm field. This wa`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditctl.8"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 41,
                  "endLine": 214,
                  "endColumn": 45,
                  "snippet": {
                    "text": ".B obj_gid\nObject's GID\n.TP\n.B obj_user\nResource's SE Linux User\n.TP\n.B obj_role\nResource's SE Linux Role\n.TP\n.B obj_type\nResource's SE Linux Type\n.TP\n.B obj_lev_low\nResource's SE Linux Low Level\n.TP\n.B obj_lev_high\nResource's SE Linux High Level\n.TP\n.B path\nInsert a watch for the file system object at \\fIpath\\fP. You cannot insert a watch to the top level directory. This is prohibited by the kernel. Wildcards are not supported either and will generate a warning. The way that watches work is by tracking the inode internally. This can only be used on exit list.\n.TP\n.B perm\nPermission filter for fil",
                    "rendered": {
                      "text": ".B obj_gid\nObject's GID\n.TP\n.B obj_user\nResource's SE Linux User\n.TP\n.B obj_role\nResource's SE Linux Role\n.TP\n.B obj_type\nResource's SE Linux Type\n.TP\n.B obj_lev_low\nResource's SE Linux Low Level\n.TP\n.B obj_lev_high\nResource's SE Linux High Level\n.TP\n.B path\nInsert a watch for the file system object at \\fIpath\\fP. You cannot insert a watch to the top level directory. This is prohibited by the kernel. Wildcards are not supported either and will generate a warning. The way that watches work is by tracking the inode internally. This can only be used on exit list.\n.TP\n.B perm\nPermission filter for fil",
                      "markdown": "`.B obj_gid\nObject's GID\n.TP\n.B obj_user\nResource's SE Linux User\n.TP\n.B obj_role\nResource's SE Linux Role\n.TP\n.B obj_type\nResource's SE Linux Type\n.TP\n.B obj_lev_low\nResource's SE Linux Low Level\n.TP\n.B obj_lev_high\nResource's SE Linux High Level\n.TP\n.B path\nInsert a watch for the file system object at \\fIpath\\fP. You cannot insert a watch to the top level directory. This is prohibited by the kernel. Wildcards are not supported either and will generate a warning. The way that watches work is by tracking the inode internally. This can only be used on exit list.\n.TP\n.B perm\nPermission filter for fil`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditctl.8"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 97,
                  "endLine": 109,
                  "endColumn": 101,
                  "snippet": {
                    "text": "No audit records will be generated. This can be used to suppress event generation. In general, you want suppressions at the top of the list instead of the bottom. This is because the event triggers on the first matching rule.\n.TP\n.B always\nAllocate an audit context, always fill it in at syscall entry time, and always write out a record at syscall exit time.\n.RE\n.TP\n.BI \\-A\\  list , action\n",
                    "rendered": {
                      "text": "No audit records will be generated. This can be used to suppress event generation. In general, you want suppressions at the top of the list instead of the bottom. This is because the event triggers on the first matching rule.\n.TP\n.B always\nAllocate an audit context, always fill it in at syscall entry time, and always write out a record at syscall exit time.\n.RE\n.TP\n.BI \\-A\\  list , action\n",
                      "markdown": "`No audit records will be generated. This can be used to suppress event generation. In general, you want suppressions at the top of the list instead of the bottom. This is because the event triggers on the first matching rule.\n.TP\n.B always\nAllocate an audit context, always fill it in at syscall entry time, and always write out a record at syscall exit time.\n.RE\n.TP\n.BI \\-A\\  list , action\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditctl.8"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 44,
                  "endLine": 109,
                  "endColumn": 48,
                  "snippet": {
                    "text": "No audit records will be generated. This can be used to suppress event generation. In general, you want suppressions at the top of the list instead of the bottom. This is because the event triggers on the first matching rule.\n.TP\n.B always\nAllocate an audit context, always fill it in at syscall entry time, and always write out a record at syscall exit time.\n.RE\n.TP\n.BI \\-A\\  list , action\n",
                    "rendered": {
                      "text": "No audit records will be generated. This can be used to suppress event generation. In general, you want suppressions at the top of the list instead of the bottom. This is because the event triggers on the first matching rule.\n.TP\n.B always\nAllocate an audit context, always fill it in at syscall entry time, and always write out a record at syscall exit time.\n.RE\n.TP\n.BI \\-A\\  list , action\n",
                      "markdown": "`No audit records will be generated. This can be used to suppress event generation. In general, you want suppressions at the top of the list instead of the bottom. This is because the event triggers on the first matching rule.\n.TP\n.B always\nAllocate an audit context, always fill it in at syscall entry time, and always write out a record at syscall exit time.\n.RE\n.TP\n.BI \\-A\\  list , action\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditctl.8"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 116,
                  "endLine": 106,
                  "endColumn": 120,
                  "snippet": {
                    "text": ".RS\n.TP 12\n.B never\nNo audit records will be generated. This can be used to suppress event generation. In general, you want suppressions at the top of the list instead of the bottom. This is because the event triggers on the first matching rule.\n.TP\n.B always\nAllocate an audit context, always fill it in at syscall entry time, and always write out a record at syscall exit time.\n",
                    "rendered": {
                      "text": ".RS\n.TP 12\n.B never\nNo audit records will be generated. This can be used to suppress event generation. In general, you want suppressions at the top of the list instead of the bottom. This is because the event triggers on the first matching rule.\n.TP\n.B always\nAllocate an audit context, always fill it in at syscall entry time, and always write out a record at syscall exit time.\n",
                      "markdown": "`.RS\n.TP 12\n.B never\nNo audit records will be generated. This can be used to suppress event generation. In general, you want suppressions at the top of the list instead of the bottom. This is because the event triggers on the first matching rule.\n.TP\n.B always\nAllocate an audit context, always fill it in at syscall entry time, and always write out a record at syscall exit time.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditctl.8"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 211,
                  "endLine": 84,
                  "endColumn": 215,
                  "snippet": {
                    "text": ".RS\n.TP 12\n.B task\nAdd a rule to the per task list. This rule list is used only at the time a task is created -- when fork() or clone() are called by the parent task. When using this list, you should only use fields that are known at task creation time, such as the uid, gid, etc.\n.TP\n.B exit\nAdd a rule to the syscall exit list. This list is used upon exit from a system call to determine if an audit event should be created.\n",
                    "rendered": {
                      "text": ".RS\n.TP 12\n.B task\nAdd a rule to the per task list. This rule list is used only at the time a task is created -- when fork() or clone() are called by the parent task. When using this list, you should only use fields that are known at task creation time, such as the uid, gid, etc.\n.TP\n.B exit\nAdd a rule to the syscall exit list. This list is used upon exit from a system call to determine if an audit event should be created.\n",
                      "markdown": "`.RS\n.TP 12\n.B task\nAdd a rule to the per task list. This rule list is used only at the time a task is created -- when fork() or clone() are called by the parent task. When using this list, you should only use fields that are known at task creation time, such as the uid, gid, etc.\n.TP\n.B exit\nAdd a rule to the syscall exit list. This list is used upon exit from a system call to determine if an audit event should be created.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditctl.8"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 60,
                  "endLine": 84,
                  "endColumn": 64,
                  "snippet": {
                    "text": ".RS\n.TP 12\n.B task\nAdd a rule to the per task list. This rule list is used only at the time a task is created -- when fork() or clone() are called by the parent task. When using this list, you should only use fields that are known at task creation time, such as the uid, gid, etc.\n.TP\n.B exit\nAdd a rule to the syscall exit list. This list is used upon exit from a system call to determine if an audit event should be created.\n",
                    "rendered": {
                      "text": ".RS\n.TP 12\n.B task\nAdd a rule to the per task list. This rule list is used only at the time a task is created -- when fork() or clone() are called by the parent task. When using this list, you should only use fields that are known at task creation time, such as the uid, gid, etc.\n.TP\n.B exit\nAdd a rule to the syscall exit list. This list is used upon exit from a system call to determine if an audit event should be created.\n",
                      "markdown": "`.RS\n.TP 12\n.B task\nAdd a rule to the per task list. This rule list is used only at the time a task is created -- when fork() or clone() are called by the parent task. When using this list, you should only use fields that are known at task creation time, such as the uid, gid, etc.\n.TP\n.B exit\nAdd a rule to the syscall exit list. This list is used upon exit from a system call to determine if an audit event should be created.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditctl.8"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 241,
                  "endLine": 44,
                  "endColumn": 245,
                  "snippet": {
                    "text": "ain kinds of containers.\n.TP\n.BI \\-q\\  mount-point,subtree\nIf you have an existing directory watch and bind or move mount another subtree in the watched subtree, you need to tell the kernel to make the subtree being mounted equivalent to the directory being watched. If the subtree is already mounted at the time the directory watch is issued, the subtree is automatically tagged for watching. Please note the comma separating the two values. Omitting it will cause errors.\n.TP\n.BI \\-r\\  rate\nSet limit in messages/sec (\\fB0\\fP=none). If this \\fIrate\\fP is non-zero and is exceeded, the failure flag is c",
                    "rendered": {
                      "text": "ain kinds of containers.\n.TP\n.BI \\-q\\  mount-point,subtree\nIf you have an existing directory watch and bind or move mount another subtree in the watched subtree, you need to tell the kernel to make the subtree being mounted equivalent to the directory being watched. If the subtree is already mounted at the time the directory watch is issued, the subtree is automatically tagged for watching. Please note the comma separating the two values. Omitting it will cause errors.\n.TP\n.BI \\-r\\  rate\nSet limit in messages/sec (\\fB0\\fP=none). If this \\fIrate\\fP is non-zero and is exceeded, the failure flag is c",
                      "markdown": "`ain kinds of containers.\n.TP\n.BI \\-q\\  mount-point,subtree\nIf you have an existing directory watch and bind or move mount another subtree in the watched subtree, you need to tell the kernel to make the subtree being mounted equivalent to the directory being watched. If the subtree is already mounted at the time the directory watch is issued, the subtree is automatically tagged for watching. Please note the comma separating the two values. Omitting it will cause errors.\n.TP\n.BI \\-r\\  rate\nSet limit in messages/sec (\\fB0\\fP=none). If this \\fIrate\\fP is non-zero and is exceeded, the failure flag is c`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditctl.8"
                },
                "region": {
                  "startLine": 333,
                  "startColumn": 14,
                  "endLine": 333,
                  "endColumn": 21,
                  "snippet": {
                    "text": ".B auditctl \\-a always,exit \\-F arch=b64 \\-F path=/etc/shadow \\-F perm=wa\n.fi\n\nTo recursively watch a directory for changes (2 ways to express):\n\n.nf\n.B auditctl \\-w /etc/ \\-p wa  # Note this slows the system\n",
                    "rendered": {
                      "text": ".B auditctl \\-a always,exit \\-F arch=b64 \\-F path=/etc/shadow \\-F perm=wa\n.fi\n\nTo recursively watch a directory for changes (2 ways to express):\n\n.nf\n.B auditctl \\-w /etc/ \\-p wa  # Note this slows the system\n",
                      "markdown": "`.B auditctl \\-a always,exit \\-F arch=b64 \\-F path=/etc/shadow \\-F perm=wa\n.fi\n\nTo recursively watch a directory for changes (2 ways to express):\n\n.nf\n.B auditctl \\-w /etc/ \\-p wa  # Note this slows the system\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditctl.8"
                },
                "region": {
                  "startLine": 326,
                  "startColumn": 2,
                  "endLine": 326,
                  "endColumn": 9,
                  "snippet": {
                    "text": ".B auditctl \\-a always,exit \\-S openat \\-F success=0\n.fi\n\nTo watch a file for changes (2 ways to express):\n\n.nf\n.B auditctl \\-w /etc/shadow \\-p wa  # Note this slows the system\n",
                    "rendered": {
                      "text": ".B auditctl \\-a always,exit \\-S openat \\-F success=0\n.fi\n\nTo watch a file for changes (2 ways to express):\n\n.nf\n.B auditctl \\-w /etc/shadow \\-p wa  # Note this slows the system\n",
                      "markdown": "`.B auditctl \\-a always,exit \\-S openat \\-F success=0\n.fi\n\nTo watch a file for changes (2 ways to express):\n\n.nf\n.B auditctl \\-w /etc/shadow \\-p wa  # Note this slows the system\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditctl.8"
                },
                "region": {
                  "startLine": 280,
                  "startColumn": 8,
                  "endLine": 280,
                  "endColumn": 15,
                  "snippet": {
                    "text": "the \\-F dir option on a syscall rule. The \\-w form of writing watches is for backwards compatibility and is\n.B deprecated due to poor system performance.\nConvert watches of this form to the syscall based form. The only valid options when using a watch are the \\-p and \\-k.\n.TP\n.BI \\-W\\  path\nRemove a watch for the file system object at \\fIpath\\fP. The rule must match exactly. See \\fB-d\\fP discussion for more info.\n.SH \"PERFORMANCE TIPS\"\nSyscall rules get evaluated for each syscall for every program. If you have 10 syscall rules, every program on your system will delay during a syscall while the audit ",
                    "rendered": {
                      "text": "the \\-F dir option on a syscall rule. The \\-w form of writing watches is for backwards compatibility and is\n.B deprecated due to poor system performance.\nConvert watches of this form to the syscall based form. The only valid options when using a watch are the \\-p and \\-k.\n.TP\n.BI \\-W\\  path\nRemove a watch for the file system object at \\fIpath\\fP. The rule must match exactly. See \\fB-d\\fP discussion for more info.\n.SH \"PERFORMANCE TIPS\"\nSyscall rules get evaluated for each syscall for every program. If you have 10 syscall rules, every program on your system will delay during a syscall while the audit ",
                      "markdown": "`the \\-F dir option on a syscall rule. The \\-w form of writing watches is for backwards compatibility and is\n.B deprecated due to poor system performance.\nConvert watches of this form to the syscall based form. The only valid options when using a watch are the \\-p and \\-k.\n.TP\n.BI \\-W\\  path\nRemove a watch for the file system object at \\fIpath\\fP. The rule must match exactly. See \\fB-d\\fP discussion for more info.\n.SH \"PERFORMANCE TIPS\"\nSyscall rules get evaluated for each syscall for every program. If you have 10 syscall rules, every program on your system will delay during a syscall while the audit `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditctl.8"
                },
                "region": {
                  "startLine": 277,
                  "startColumn": 91,
                  "endLine": 277,
                  "endColumn": 98,
                  "snippet": {
                    "text": "watch is on a directory, it's almost the same as using the \\-F dir option on a syscall rule. The \\-w form of writing watches is for backwards compatibility and is\n.B deprecated due to poor system performance.\nConvert watches of this form to the syscall based form. The only valid options when using a watch are the \\-p and \\-k.\n.TP\n.BI \\-W\\  path\nRemove a watch for the file system object at \\fIpath\\fP. The rule must match exactly. See \\fB-d\\fP discussion for more info.\n.SH \"PERFORMANCE TIPS\"\nSyscall rules get evaluated for each syscall for every program. If you have 10 syscall rules, every program on y",
                    "rendered": {
                      "text": "watch is on a directory, it's almost the same as using the \\-F dir option on a syscall rule. The \\-w form of writing watches is for backwards compatibility and is\n.B deprecated due to poor system performance.\nConvert watches of this form to the syscall based form. The only valid options when using a watch are the \\-p and \\-k.\n.TP\n.BI \\-W\\  path\nRemove a watch for the file system object at \\fIpath\\fP. The rule must match exactly. See \\fB-d\\fP discussion for more info.\n.SH \"PERFORMANCE TIPS\"\nSyscall rules get evaluated for each syscall for every program. If you have 10 syscall rules, every program on y",
                      "markdown": "`watch is on a directory, it's almost the same as using the \\-F dir option on a syscall rule. The \\-w form of writing watches is for backwards compatibility and is\n.B deprecated due to poor system performance.\nConvert watches of this form to the syscall based form. The only valid options when using a watch are the \\-p and \\-k.\n.TP\n.BI \\-W\\  path\nRemove a watch for the file system object at \\fIpath\\fP. The rule must match exactly. See \\fB-d\\fP discussion for more info.\n.SH \"PERFORMANCE TIPS\"\nSyscall rules get evaluated for each syscall for every program. If you have 10 syscall rules, every program on y`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditctl.8"
                },
                "region": {
                  "startLine": 275,
                  "startColumn": 121,
                  "endLine": 275,
                  "endColumn": 128,
                  "snippet": {
                    "text": "ite 2 rules, one with arch equal to b32 and one with b64 to make sure the kernel finds the events that you intend. See the arch field discussion for more info.\n.TP\n.BI \\-w\\  path\nPlace a watch on path. If the path is a file, it's almost the same as using the \\-F path option on a syscall rule. If the watch is on a directory, it's almost the same as using the \\-F dir option on a syscall rule. The \\-w form of writing watches is for backwards compatibility and is\n.B deprecated due to poor system performance.\nConvert watches of this form to the syscall based form. The only valid options when using a watch",
                    "rendered": {
                      "text": "ite 2 rules, one with arch equal to b32 and one with b64 to make sure the kernel finds the events that you intend. See the arch field discussion for more info.\n.TP\n.BI \\-w\\  path\nPlace a watch on path. If the path is a file, it's almost the same as using the \\-F path option on a syscall rule. If the watch is on a directory, it's almost the same as using the \\-F dir option on a syscall rule. The \\-w form of writing watches is for backwards compatibility and is\n.B deprecated due to poor system performance.\nConvert watches of this form to the syscall based form. The only valid options when using a watch",
                      "markdown": "`ite 2 rules, one with arch equal to b32 and one with b64 to make sure the kernel finds the events that you intend. See the arch field discussion for more info.\n.TP\n.BI \\-w\\  path\nPlace a watch on path. If the path is a file, it's almost the same as using the \\-F path option on a syscall rule. If the watch is on a directory, it's almost the same as using the \\-F dir option on a syscall rule. The \\-w form of writing watches is for backwards compatibility and is\n.B deprecated due to poor system performance.\nConvert watches of this form to the syscall based form. The only valid options when using a watch`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditctl.8"
                },
                "region": {
                  "startLine": 275,
                  "startColumn": 7,
                  "endLine": 275,
                  "endColumn": 14,
                  "snippet": {
                    "text": "that any syscall has the same number on both 32 and 64 bit interfaces. You will likely want to control this and write 2 rules, one with arch equal to b32 and one with b64 to make sure the kernel finds the events that you intend. See the arch field discussion for more info.\n.TP\n.BI \\-w\\  path\nPlace a watch on path. If the path is a file, it's almost the same as using the \\-F path option on a syscall rule. If the watch is on a directory, it's almost the same as using the \\-F dir option on a syscall rule. The \\-w form of writing watches is for backwards compatibility and is\n.B deprecated due to poor sys",
                    "rendered": {
                      "text": "that any syscall has the same number on both 32 and 64 bit interfaces. You will likely want to control this and write 2 rules, one with arch equal to b32 and one with b64 to make sure the kernel finds the events that you intend. See the arch field discussion for more info.\n.TP\n.BI \\-w\\  path\nPlace a watch on path. If the path is a file, it's almost the same as using the \\-F path option on a syscall rule. If the watch is on a directory, it's almost the same as using the \\-F dir option on a syscall rule. The \\-w form of writing watches is for backwards compatibility and is\n.B deprecated due to poor sys",
                      "markdown": "`that any syscall has the same number on both 32 and 64 bit interfaces. You will likely want to control this and write 2 rules, one with arch equal to b32 and one with b64 to make sure the kernel finds the events that you intend. See the arch field discussion for more info.\n.TP\n.BI \\-w\\  path\nPlace a watch on path. If the path is a file, it's almost the same as using the \\-F path option on a syscall rule. If the watch is on a directory, it's almost the same as using the \\-F dir option on a syscall rule. The \\-w form of writing watches is for backwards compatibility and is\n.B deprecated due to poor sys`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditctl.8"
                },
                "region": {
                  "startLine": 269,
                  "startColumn": 54,
                  "endLine": 269,
                  "endColumn": 61,
                  "snippet": {
                    "text": "I \\-k\\  key\nSet a filter key on an audit rule. This is deprecated when used with watches. Convert any watches to the syscall form of rules. It is still valid for use with deleting or listing rules.\n.TP\n\\fB\\-p\\fP [\\fBr\\fP|\\fBw\\fP|\\fBx\\fP|\\fBa\\fP]\nDescribe the permission access type that a file system watch will trigger on. This is deprecated. Convert watches to the syscall form.\n.TP\n\\fB\\-S\\fP [\\fISyscall name or number\\fP|\\fBall\\fP]\nAny \\fIsyscall name\\fP or \\fInumber\\fP may be used. The word '\\fBall\\fP' may also be used.  If the given syscall is made by a program, then start an audit record. If a fie",
                    "rendered": {
                      "text": "I \\-k\\  key\nSet a filter key on an audit rule. This is deprecated when used with watches. Convert any watches to the syscall form of rules. It is still valid for use with deleting or listing rules.\n.TP\n\\fB\\-p\\fP [\\fBr\\fP|\\fBw\\fP|\\fBx\\fP|\\fBa\\fP]\nDescribe the permission access type that a file system watch will trigger on. This is deprecated. Convert watches to the syscall form.\n.TP\n\\fB\\-S\\fP [\\fISyscall name or number\\fP|\\fBall\\fP]\nAny \\fIsyscall name\\fP or \\fInumber\\fP may be used. The word '\\fBall\\fP' may also be used.  If the given syscall is made by a program, then start an audit record. If a fie",
                      "markdown": "`I \\-k\\  key\nSet a filter key on an audit rule. This is deprecated when used with watches. Convert any watches to the syscall form of rules. It is still valid for use with deleting or listing rules.\n.TP\n\\fB\\-p\\fP [\\fBr\\fP|\\fBw\\fP|\\fBx\\fP|\\fBa\\fP]\nDescribe the permission access type that a file system watch will trigger on. This is deprecated. Convert watches to the syscall form.\n.TP\n\\fB\\-S\\fP [\\fISyscall name or number\\fP|\\fBall\\fP]\nAny \\fIsyscall name\\fP or \\fInumber\\fP may be used. The word '\\fBall\\fP' may also be used.  If the given syscall is made by a program, then start an audit record. If a fie`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditctl.8"
                },
                "region": {
                  "startLine": 217,
                  "startColumn": 80,
                  "endLine": 217,
                  "endColumn": 87,
                  "snippet": {
                    "text": "directory. This is prohibited by the kernel. Wildcards are not supported either and will generate a warning. The way that watches work is by tracking the inode internally. This can only be used on exit list.\n.TP\n.B perm\nPermission filter for file operations. Supply the access type that a file system watch will trigger on. \\fBr\\fP=read, \\fBw\\fP=write, \\fBx\\fP=execute, \\fBa\\fP=attribute change. These permissions are not the standard file permissions, but rather the kind of syscall that would do this kind of thing. The read & write syscalls are omitted from this set since they would overwhelm the logs. ",
                    "rendered": {
                      "text": "directory. This is prohibited by the kernel. Wildcards are not supported either and will generate a warning. The way that watches work is by tracking the inode internally. This can only be used on exit list.\n.TP\n.B perm\nPermission filter for file operations. Supply the access type that a file system watch will trigger on. \\fBr\\fP=read, \\fBw\\fP=write, \\fBx\\fP=execute, \\fBa\\fP=attribute change. These permissions are not the standard file permissions, but rather the kind of syscall that would do this kind of thing. The read & write syscalls are omitted from this set since they would overwhelm the logs. ",
                      "markdown": "`directory. This is prohibited by the kernel. Wildcards are not supported either and will generate a warning. The way that watches work is by tracking the inode internally. This can only be used on exit list.\n.TP\n.B perm\nPermission filter for file operations. Supply the access type that a file system watch will trigger on. \\fBr\\fP=read, \\fBw\\fP=write, \\fBx\\fP=execute, \\fBa\\fP=attribute change. These permissions are not the standard file permissions, but rather the kind of syscall that would do this kind of thing. The read & write syscalls are omitted from this set since they would overwhelm the logs. `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditctl.8"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 89,
                  "endLine": 214,
                  "endColumn": 94,
                  "snippet": {
                    "text": "'s SE Linux User\n.TP\n.B obj_role\nResource's SE Linux Role\n.TP\n.B obj_type\nResource's SE Linux Type\n.TP\n.B obj_lev_low\nResource's SE Linux Low Level\n.TP\n.B obj_lev_high\nResource's SE Linux High Level\n.TP\n.B path\nInsert a watch for the file system object at \\fIpath\\fP. You cannot insert a watch to the top level directory. This is prohibited by the kernel. Wildcards are not supported either and will generate a warning. The way that watches work is by tracking the inode internally. This can only be used on exit list.\n.TP\n.B perm\nPermission filter for file operations. Supply the access type that a file ",
                    "rendered": {
                      "text": "'s SE Linux User\n.TP\n.B obj_role\nResource's SE Linux Role\n.TP\n.B obj_type\nResource's SE Linux Type\n.TP\n.B obj_lev_low\nResource's SE Linux Low Level\n.TP\n.B obj_lev_high\nResource's SE Linux High Level\n.TP\n.B path\nInsert a watch for the file system object at \\fIpath\\fP. You cannot insert a watch to the top level directory. This is prohibited by the kernel. Wildcards are not supported either and will generate a warning. The way that watches work is by tracking the inode internally. This can only be used on exit list.\n.TP\n.B perm\nPermission filter for file operations. Supply the access type that a file ",
                      "markdown": "`'s SE Linux User\n.TP\n.B obj_role\nResource's SE Linux Role\n.TP\n.B obj_type\nResource's SE Linux Type\n.TP\n.B obj_lev_low\nResource's SE Linux Low Level\n.TP\n.B obj_lev_high\nResource's SE Linux High Level\n.TP\n.B path\nInsert a watch for the file system object at \\fIpath\\fP. You cannot insert a watch to the top level directory. This is prohibited by the kernel. Wildcards are not supported either and will generate a warning. The way that watches work is by tracking the inode internally. This can only be used on exit list.\n.TP\n.B perm\nPermission filter for file operations. Supply the access type that a file `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditctl.8"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 76,
                  "endLine": 214,
                  "endColumn": 83,
                  "snippet": {
                    "text": "user\nResource's SE Linux User\n.TP\n.B obj_role\nResource's SE Linux Role\n.TP\n.B obj_type\nResource's SE Linux Type\n.TP\n.B obj_lev_low\nResource's SE Linux Low Level\n.TP\n.B obj_lev_high\nResource's SE Linux High Level\n.TP\n.B path\nInsert a watch for the file system object at \\fIpath\\fP. You cannot insert a watch to the top level directory. This is prohibited by the kernel. Wildcards are not supported either and will generate a warning. The way that watches work is by tracking the inode internally. This can only be used on exit list.\n.TP\n.B perm\nPermission filter for file operations. Supply the access type t",
                    "rendered": {
                      "text": "user\nResource's SE Linux User\n.TP\n.B obj_role\nResource's SE Linux Role\n.TP\n.B obj_type\nResource's SE Linux Type\n.TP\n.B obj_lev_low\nResource's SE Linux Low Level\n.TP\n.B obj_lev_high\nResource's SE Linux High Level\n.TP\n.B path\nInsert a watch for the file system object at \\fIpath\\fP. You cannot insert a watch to the top level directory. This is prohibited by the kernel. Wildcards are not supported either and will generate a warning. The way that watches work is by tracking the inode internally. This can only be used on exit list.\n.TP\n.B perm\nPermission filter for file operations. Supply the access type t",
                      "markdown": "`user\nResource's SE Linux User\n.TP\n.B obj_role\nResource's SE Linux Role\n.TP\n.B obj_type\nResource's SE Linux Type\n.TP\n.B obj_lev_low\nResource's SE Linux Low Level\n.TP\n.B obj_lev_high\nResource's SE Linux High Level\n.TP\n.B path\nInsert a watch for the file system object at \\fIpath\\fP. You cannot insert a watch to the top level directory. This is prohibited by the kernel. Wildcards are not supported either and will generate a warning. The way that watches work is by tracking the inode internally. This can only be used on exit list.\n.TP\n.B perm\nPermission filter for file operations. Supply the access type t`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditctl.8"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 8,
                  "endLine": 214,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n.TP\n.B obj_uid\nObject's UID\n.TP\n.B obj_gid\nObject's GID\n.TP\n.B obj_user\nResource's SE Linux User\n.TP\n.B obj_role\nResource's SE Linux Role\n.TP\n.B obj_type\nResource's SE Linux Type\n.TP\n.B obj_lev_low\nResource's SE Linux Low Level\n.TP\n.B obj_lev_high\nResource's SE Linux High Level\n.TP\n.B path\nInsert a watch for the file system object at \\fIpath\\fP. You cannot insert a watch to the top level directory. This is prohibited by the kernel. Wildcards are not supported either and will generate a warning. The way that watches work is by tracking the inode internally. This can only be used on exit list.\n.TP\n.B ",
                    "rendered": {
                      "text": "\n.TP\n.B obj_uid\nObject's UID\n.TP\n.B obj_gid\nObject's GID\n.TP\n.B obj_user\nResource's SE Linux User\n.TP\n.B obj_role\nResource's SE Linux Role\n.TP\n.B obj_type\nResource's SE Linux Type\n.TP\n.B obj_lev_low\nResource's SE Linux Low Level\n.TP\n.B obj_lev_high\nResource's SE Linux High Level\n.TP\n.B path\nInsert a watch for the file system object at \\fIpath\\fP. You cannot insert a watch to the top level directory. This is prohibited by the kernel. Wildcards are not supported either and will generate a warning. The way that watches work is by tracking the inode internally. This can only be used on exit list.\n.TP\n.B ",
                      "markdown": "`\n.TP\n.B obj_uid\nObject's UID\n.TP\n.B obj_gid\nObject's GID\n.TP\n.B obj_user\nResource's SE Linux User\n.TP\n.B obj_role\nResource's SE Linux Role\n.TP\n.B obj_type\nResource's SE Linux Type\n.TP\n.B obj_lev_low\nResource's SE Linux Low Level\n.TP\n.B obj_lev_high\nResource's SE Linux High Level\n.TP\n.B path\nInsert a watch for the file system object at \\fIpath\\fP. You cannot insert a watch to the top level directory. This is prohibited by the kernel. Wildcards are not supported either and will generate a warning. The way that watches work is by tracking the inode internally. This can only be used on exit list.\n.TP\n.B `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditctl.8"
                },
                "region": {
                  "startLine": 187,
                  "startColumn": 374,
                  "endLine": 187,
                  "endColumn": 380,
                  "snippet": {
                    "text": "f text that can be up to 31 bytes long. It can uniquely identify the audit records produced by a rule. Typical use is for when you have several rules that together satisfy a security requirement. The key value can be searched on with ausearch so that no matter which rule triggered the event, you can find its results. The key can also be used on delete all (\\-D) and list rules (\\-l) to select rules with a specific key. You may have more than one key on a rule if you want to be able to search logged events in multiple ways or if you have an auditd plugin that uses a key to aid its analysis.\n.TP\n.B msg",
                    "rendered": {
                      "text": "f text that can be up to 31 bytes long. It can uniquely identify the audit records produced by a rule. Typical use is for when you have several rules that together satisfy a security requirement. The key value can be searched on with ausearch so that no matter which rule triggered the event, you can find its results. The key can also be used on delete all (\\-D) and list rules (\\-l) to select rules with a specific key. You may have more than one key on a rule if you want to be able to search logged events in multiple ways or if you have an auditd plugin that uses a key to aid its analysis.\n.TP\n.B msg",
                      "markdown": "`f text that can be up to 31 bytes long. It can uniquely identify the audit records produced by a rule. Typical use is for when you have several rules that together satisfy a security requirement. The key value can be searched on with ausearch so that no matter which rule triggered the event, you can find its results. The key can also be used on delete all (\\-D) and list rules (\\-l) to select rules with a specific key. You may have more than one key on a rule if you want to be able to search logged events in multiple ways or if you have an auditd plugin that uses a key to aid its analysis.\n.TP\n.B msg`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditctl.8"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 60,
                  "endLine": 154,
                  "endColumn": 67,
                  "snippet": {
                    "text": "Device Minor Number\n.TP\n.B dir\nFull Path of Directory to watch. This will place a recursive watch on the directory and its whole subtree. It can only be used on exit list. See \"\\fB\\-w\\fP\".\n.TP\n.B egid\nEffective Group ID. May be numeric or the groups name.\n",
                    "rendered": {
                      "text": "Device Minor Number\n.TP\n.B dir\nFull Path of Directory to watch. This will place a recursive watch on the directory and its whole subtree. It can only be used on exit list. See \"\\fB\\-w\\fP\".\n.TP\n.B egid\nEffective Group ID. May be numeric or the groups name.\n",
                      "markdown": "`Device Minor Number\n.TP\n.B dir\nFull Path of Directory to watch. This will place a recursive watch on the directory and its whole subtree. It can only be used on exit list. See \"\\fB\\-w\\fP\".\n.TP\n.B egid\nEffective Group ID. May be numeric or the groups name.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditctl.8"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 123,
                  "endLine": 106,
                  "endColumn": 128,
                  "snippet": {
                    "text": ".RS\n.TP 12\n.B never\nNo audit records will be generated. This can be used to suppress event generation. In general, you want suppressions at the top of the list instead of the bottom. This is because the event triggers on the first matching rule.\n.TP\n.B always\nAllocate an audit context, always fill it in at syscall entry time, and always write out a record at syscall exit time.\n",
                    "rendered": {
                      "text": ".RS\n.TP 12\n.B never\nNo audit records will be generated. This can be used to suppress event generation. In general, you want suppressions at the top of the list instead of the bottom. This is because the event triggers on the first matching rule.\n.TP\n.B always\nAllocate an audit context, always fill it in at syscall entry time, and always write out a record at syscall exit time.\n",
                      "markdown": "`.RS\n.TP 12\n.B never\nNo audit records will be generated. This can be used to suppress event generation. In general, you want suppressions at the top of the list instead of the bottom. This is because the event triggers on the first matching rule.\n.TP\n.B always\nAllocate an audit context, always fill it in at syscall entry time, and always write out a record at syscall exit time.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditctl.8"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 67,
                  "endLine": 84,
                  "endColumn": 73,
                  "snippet": {
                    "text": ".RS\n.TP 12\n.B task\nAdd a rule to the per task list. This rule list is used only at the time a task is created -- when fork() or clone() are called by the parent task. When using this list, you should only use fields that are known at task creation time, such as the uid, gid, etc.\n.TP\n.B exit\nAdd a rule to the syscall exit list. This list is used upon exit from a system call to determine if an audit event should be created.\n",
                    "rendered": {
                      "text": ".RS\n.TP 12\n.B task\nAdd a rule to the per task list. This rule list is used only at the time a task is created -- when fork() or clone() are called by the parent task. When using this list, you should only use fields that are known at task creation time, such as the uid, gid, etc.\n.TP\n.B exit\nAdd a rule to the syscall exit list. This list is used upon exit from a system call to determine if an audit event should be created.\n",
                      "markdown": "`.RS\n.TP 12\n.B task\nAdd a rule to the per task list. This rule list is used only at the time a task is created -- when fork() or clone() are called by the parent task. When using this list, you should only use fields that are known at task creation time, such as the uid, gid, etc.\n.TP\n.B exit\nAdd a rule to the syscall exit list. This list is used upon exit from a system call to determine if an audit event should be created.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditctl.8"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 25,
                  "endLine": 62,
                  "endColumn": 32,
                  "snippet": {
                    "text": ".I stop, reload, rotate, resume, state.\n.TP\n.BI \\-t\nTrim the subtrees after a mount command.\n.SH STATUS OPTIONS\n.TP\n.B \\-l\n",
                    "rendered": {
                      "text": ".I stop, reload, rotate, resume, state.\n.TP\n.BI \\-t\nTrim the subtrees after a mount command.\n.SH STATUS OPTIONS\n.TP\n.B \\-l\n",
                      "markdown": "`.I stop, reload, rotate, resume, state.\n.TP\n.BI \\-t\nTrim the subtrees after a mount command.\n.SH STATUS OPTIONS\n.TP\n.B \\-l\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditctl.8"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 267,
                  "endLine": 44,
                  "endColumn": 274,
                  "snippet": {
                    "text": "TP\n.BI \\-q\\  mount-point,subtree\nIf you have an existing directory watch and bind or move mount another subtree in the watched subtree, you need to tell the kernel to make the subtree being mounted equivalent to the directory being watched. If the subtree is already mounted at the time the directory watch is issued, the subtree is automatically tagged for watching. Please note the comma separating the two values. Omitting it will cause errors.\n.TP\n.BI \\-r\\  rate\nSet limit in messages/sec (\\fB0\\fP=none). If this \\fIrate\\fP is non-zero and is exceeded, the failure flag is consulted by the kernel for ac",
                    "rendered": {
                      "text": "TP\n.BI \\-q\\  mount-point,subtree\nIf you have an existing directory watch and bind or move mount another subtree in the watched subtree, you need to tell the kernel to make the subtree being mounted equivalent to the directory being watched. If the subtree is already mounted at the time the directory watch is issued, the subtree is automatically tagged for watching. Please note the comma separating the two values. Omitting it will cause errors.\n.TP\n.BI \\-r\\  rate\nSet limit in messages/sec (\\fB0\\fP=none). If this \\fIrate\\fP is non-zero and is exceeded, the failure flag is consulted by the kernel for ac",
                      "markdown": "`TP\n.BI \\-q\\  mount-point,subtree\nIf you have an existing directory watch and bind or move mount another subtree in the watched subtree, you need to tell the kernel to make the subtree being mounted equivalent to the directory being watched. If the subtree is already mounted at the time the directory watch is issued, the subtree is automatically tagged for watching. Please note the comma separating the two values. Omitting it will cause errors.\n.TP\n.BI \\-r\\  rate\nSet limit in messages/sec (\\fB0\\fP=none). If this \\fIrate\\fP is non-zero and is exceeded, the failure flag is consulted by the kernel for ac`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditctl.8"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 248,
                  "endLine": 44,
                  "endColumn": 254,
                  "snippet": {
                    "text": "ds of containers.\n.TP\n.BI \\-q\\  mount-point,subtree\nIf you have an existing directory watch and bind or move mount another subtree in the watched subtree, you need to tell the kernel to make the subtree being mounted equivalent to the directory being watched. If the subtree is already mounted at the time the directory watch is issued, the subtree is automatically tagged for watching. Please note the comma separating the two values. Omitting it will cause errors.\n.TP\n.BI \\-r\\  rate\nSet limit in messages/sec (\\fB0\\fP=none). If this \\fIrate\\fP is non-zero and is exceeded, the failure flag is consulted ",
                    "rendered": {
                      "text": "ds of containers.\n.TP\n.BI \\-q\\  mount-point,subtree\nIf you have an existing directory watch and bind or move mount another subtree in the watched subtree, you need to tell the kernel to make the subtree being mounted equivalent to the directory being watched. If the subtree is already mounted at the time the directory watch is issued, the subtree is automatically tagged for watching. Please note the comma separating the two values. Omitting it will cause errors.\n.TP\n.BI \\-r\\  rate\nSet limit in messages/sec (\\fB0\\fP=none). If this \\fIrate\\fP is non-zero and is exceeded, the failure flag is consulted ",
                      "markdown": "`ds of containers.\n.TP\n.BI \\-q\\  mount-point,subtree\nIf you have an existing directory watch and bind or move mount another subtree in the watched subtree, you need to tell the kernel to make the subtree being mounted equivalent to the directory being watched. If the subtree is already mounted at the time the directory watch is issued, the subtree is automatically tagged for watching. Please note the comma separating the two values. Omitting it will cause errors.\n.TP\n.BI \\-r\\  rate\nSet limit in messages/sec (\\fB0\\fP=none). If this \\fIrate\\fP is non-zero and is exceeded, the failure flag is consulted `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditctl.8"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 56,
                  "endLine": 44,
                  "endColumn": 63,
                  "snippet": {
                    "text": "hanging loginuids requires CAP_AUDIT_CONTROL. So, its not something that can be done by unprivileged users. Setting this makes loginuid tamper-proof, but can cause some problems in certain kinds of containers.\n.TP\n.BI \\-q\\  mount-point,subtree\nIf you have an existing directory watch and bind or move mount another subtree in the watched subtree, you need to tell the kernel to make the subtree being mounted equivalent to the directory being watched. If the subtree is already mounted at the time the directory watch is issued, the subtree is automatically tagged for watching. Please note the comma separa",
                    "rendered": {
                      "text": "hanging loginuids requires CAP_AUDIT_CONTROL. So, its not something that can be done by unprivileged users. Setting this makes loginuid tamper-proof, but can cause some problems in certain kinds of containers.\n.TP\n.BI \\-q\\  mount-point,subtree\nIf you have an existing directory watch and bind or move mount another subtree in the watched subtree, you need to tell the kernel to make the subtree being mounted equivalent to the directory being watched. If the subtree is already mounted at the time the directory watch is issued, the subtree is automatically tagged for watching. Please note the comma separa",
                      "markdown": "`hanging loginuids requires CAP_AUDIT_CONTROL. So, its not something that can be done by unprivileged users. Setting this makes loginuid tamper-proof, but can cause some problems in certain kinds of containers.\n.TP\n.BI \\-q\\  mount-point,subtree\nIf you have an existing directory watch and bind or move mount another subtree in the watched subtree, you need to tell the kernel to make the subtree being mounted equivalent to the directory being watched. If the subtree is already mounted at the time the directory watch is issued, the subtree is automatically tagged for watching. Please note the comma separa`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditctl.8"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 33,
                  "endLine": 44,
                  "endColumn": 40,
                  "snippet": {
                    "text": "le once they are set. Changing loginuids requires CAP_AUDIT_CONTROL. So, its not something that can be done by unprivileged users. Setting this makes loginuid tamper-proof, but can cause some problems in certain kinds of containers.\n.TP\n.BI \\-q\\  mount-point,subtree\nIf you have an existing directory watch and bind or move mount another subtree in the watched subtree, you need to tell the kernel to make the subtree being mounted equivalent to the directory being watched. If the subtree is already mounted at the time the directory watch is issued, the subtree is automatically tagged for watching. Pleas",
                    "rendered": {
                      "text": "le once they are set. Changing loginuids requires CAP_AUDIT_CONTROL. So, its not something that can be done by unprivileged users. Setting this makes loginuid tamper-proof, but can cause some problems in certain kinds of containers.\n.TP\n.BI \\-q\\  mount-point,subtree\nIf you have an existing directory watch and bind or move mount another subtree in the watched subtree, you need to tell the kernel to make the subtree being mounted equivalent to the directory being watched. If the subtree is already mounted at the time the directory watch is issued, the subtree is automatically tagged for watching. Pleas",
                      "markdown": "`le once they are set. Changing loginuids requires CAP_AUDIT_CONTROL. So, its not something that can be done by unprivileged users. Setting this makes loginuid tamper-proof, but can cause some problems in certain kinds of containers.\n.TP\n.BI \\-q\\  mount-point,subtree\nIf you have an existing directory watch and bind or move mount another subtree in the watched subtree, you need to tell the kernel to make the subtree being mounted equivalent to the directory being watched. If the subtree is already mounted at the time the directory watch is issued, the subtree is automatically tagged for watching. Pleas`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditctl.8"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 29,
                  "endLine": 17,
                  "endColumn": 35,
                  "snippet": {
                    "text": "Set the time for the kernel to wait (Kernel Default 60*HZ) when the backlog limit is reached before queuing more audit events to be transferred to auditd. The number must be greater than or equal to zero and less than 10 times the default value.\n.TP\n.BI \\-\\-reset_backlog_wait_time_actual\nReset the actual backlog wait time counter shown by the status command.\n.TP\n.B \\-c\nContinue loading rules in spite of an error. This summarizes the results of loading the rules. The exit code will not be success if any rule fails to load.\n",
                    "rendered": {
                      "text": "Set the time for the kernel to wait (Kernel Default 60*HZ) when the backlog limit is reached before queuing more audit events to be transferred to auditd. The number must be greater than or equal to zero and less than 10 times the default value.\n.TP\n.BI \\-\\-reset_backlog_wait_time_actual\nReset the actual backlog wait time counter shown by the status command.\n.TP\n.B \\-c\nContinue loading rules in spite of an error. This summarizes the results of loading the rules. The exit code will not be success if any rule fails to load.\n",
                      "markdown": "`Set the time for the kernel to wait (Kernel Default 60*HZ) when the backlog limit is reached before queuing more audit events to be transferred to auditd. The number must be greater than or equal to zero and less than 10 times the default value.\n.TP\n.BI \\-\\-reset_backlog_wait_time_actual\nReset the actual backlog wait time counter shown by the status command.\n.TP\n.B \\-c\nContinue loading rules in spite of an error. This summarizes the results of loading the rules. The exit code will not be success if any rule fails to load.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditctl.8"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 7,
                  "endLine": 14,
                  "endColumn": 13,
                  "snippet": {
                    "text": "Set max number (limit) of outstanding audit buffers allowed (Kernel Default=64) If all buffers are full, the failure flag is consulted by the kernel for action.\n.TP\n.BI \\-\\-backlog_wait_time \\ \\fIwait_time\\fP\nSet the time for the kernel to wait (Kernel Default 60*HZ) when the backlog limit is reached before queuing more audit events to be transferred to auditd. The number must be greater than or equal to zero and less than 10 times the default value.\n.TP\n.BI \\-\\-reset_backlog_wait_time_actual\nReset the actual backlog wait time counter shown by the status command.\n",
                    "rendered": {
                      "text": "Set max number (limit) of outstanding audit buffers allowed (Kernel Default=64) If all buffers are full, the failure flag is consulted by the kernel for action.\n.TP\n.BI \\-\\-backlog_wait_time \\ \\fIwait_time\\fP\nSet the time for the kernel to wait (Kernel Default 60*HZ) when the backlog limit is reached before queuing more audit events to be transferred to auditd. The number must be greater than or equal to zero and less than 10 times the default value.\n.TP\n.BI \\-\\-reset_backlog_wait_time_actual\nReset the actual backlog wait time counter shown by the status command.\n",
                      "markdown": "`Set max number (limit) of outstanding audit buffers allowed (Kernel Default=64) If all buffers are full, the failure flag is consulted by the kernel for action.\n.TP\n.BI \\-\\-backlog_wait_time \\ \\fIwait_time\\fP\nSet the time for the kernel to wait (Kernel Default 60*HZ) when the backlog limit is reached before queuing more audit events to be transferred to auditd. The number must be greater than or equal to zero and less than 10 times the default value.\n.TP\n.BI \\-\\-reset_backlog_wait_time_actual\nReset the actual backlog wait time counter shown by the status command.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit_encode_nv_string.3"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 152,
                  "endLine": 10,
                  "endColumn": 161,
                  "snippet": {
                    "text": "\n.SH SYNOPSIS\n.B #include <libaudit.h>\n.sp\n.B char *audit_encode_nv_string(const char *name, const char *value, unsigned int vlen)\n\n.SH DESCRIPTION\nThis function is used to encode a name/value pair. This should be used on any field being logged that potentially contains a space, a double-quote, or a control character. Any value containing those have to be specially encoded for the auparse library to correctly handle the value. The encoding method is designed to prevent log injection attacks where malicious values could cause parsing errors.\n\nTo use this function, pass the name string and value strings ",
                    "rendered": {
                      "text": "\n.SH SYNOPSIS\n.B #include <libaudit.h>\n.sp\n.B char *audit_encode_nv_string(const char *name, const char *value, unsigned int vlen)\n\n.SH DESCRIPTION\nThis function is used to encode a name/value pair. This should be used on any field being logged that potentially contains a space, a double-quote, or a control character. Any value containing those have to be specially encoded for the auparse library to correctly handle the value. The encoding method is designed to prevent log injection attacks where malicious values could cause parsing errors.\n\nTo use this function, pass the name string and value strings ",
                      "markdown": "`\n.SH SYNOPSIS\n.B #include <libaudit.h>\n.sp\n.B char *audit_encode_nv_string(const char *name, const char *value, unsigned int vlen)\n\n.SH DESCRIPTION\nThis function is used to encode a name/value pair. This should be used on any field being logged that potentially contains a space, a double-quote, or a control character. Any value containing those have to be specially encoded for the auparse library to correctly handle the value. The encoding method is designed to prevent log injection attacks where malicious values could cause parsing errors.\n\nTo use this function, pass the name string and value strings `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit_update_watch_perms.3"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": ".TH \"AUDIT_UPDATE_WATCH_PERMS\" \"3\" \"Feb 2007\" \"Red Hat\" \"Linux Audit API\"\n.SH NAME\naudit_update_watch_perms \\- update permissions field of watch command\n.SH \"SYNOPSIS\"\n.B #include <libaudit.h>\n.sp\n",
                    "rendered": {
                      "text": ".TH \"AUDIT_UPDATE_WATCH_PERMS\" \"3\" \"Feb 2007\" \"Red Hat\" \"Linux Audit API\"\n.SH NAME\naudit_update_watch_perms \\- update permissions field of watch command\n.SH \"SYNOPSIS\"\n.B #include <libaudit.h>\n.sp\n",
                      "markdown": "`.TH \"AUDIT_UPDATE_WATCH_PERMS\" \"3\" \"Feb 2007\" \"Red Hat\" \"Linux Audit API\"\n.SH NAME\naudit_update_watch_perms \\- update permissions field of watch command\n.SH \"SYNOPSIS\"\n.B #include <libaudit.h>\n.sp\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit_update_watch_perms.3"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 56,
                  "endLine": 11,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\n.SH \"DESCRIPTION\"\n\naudit_update_watch_perms adds the permission checks to a watch command that is being built. The perms are a bitwise or'ing of: AUDIT_PERM_EXEC, AUDIT_PERM_WRITE, AUDIT_PERM_READ, AUDIT_PERM_ATTR.\n\n.SH \"RETURN VALUE\"\n\n",
                    "rendered": {
                      "text": "\n.SH \"DESCRIPTION\"\n\naudit_update_watch_perms adds the permission checks to a watch command that is being built. The perms are a bitwise or'ing of: AUDIT_PERM_EXEC, AUDIT_PERM_WRITE, AUDIT_PERM_READ, AUDIT_PERM_ATTR.\n\n.SH \"RETURN VALUE\"\n\n",
                      "markdown": "`\n.SH \"DESCRIPTION\"\n\naudit_update_watch_perms adds the permission checks to a watch command that is being built. The perms are a bitwise or'ing of: AUDIT_PERM_EXEC, AUDIT_PERM_WRITE, AUDIT_PERM_READ, AUDIT_PERM_ATTR.\n\n.SH \"RETURN VALUE\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit_update_watch_perms.3"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 55,
                  "endLine": 3,
                  "endColumn": 62,
                  "snippet": {
                    "text": ".TH \"AUDIT_UPDATE_WATCH_PERMS\" \"3\" \"Feb 2007\" \"Red Hat\" \"Linux Audit API\"\n.SH NAME\naudit_update_watch_perms \\- update permissions field of watch command\n.SH \"SYNOPSIS\"\n.B #include <libaudit.h>\n.sp\n",
                    "rendered": {
                      "text": ".TH \"AUDIT_UPDATE_WATCH_PERMS\" \"3\" \"Feb 2007\" \"Red Hat\" \"Linux Audit API\"\n.SH NAME\naudit_update_watch_perms \\- update permissions field of watch command\n.SH \"SYNOPSIS\"\n.B #include <libaudit.h>\n.sp\n",
                      "markdown": "`.TH \"AUDIT_UPDATE_WATCH_PERMS\" \"3\" \"Feb 2007\" \"Red Hat\" \"Linux Audit API\"\n.SH NAME\naudit_update_watch_perms \\- update permissions field of watch command\n.SH \"SYNOPSIS\"\n.B #include <libaudit.h>\n.sp\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit.rules.7"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 231,
                  "endLine": 143,
                  "endColumn": 235,
                  "snippet": {
                    "text": "ausearch \\-\\-start this-week \\-k access \\-f /path-to/file \\-\\-raw | aureport \\-\\-user \\-i\n.fi\n\nThis report will give you the individual access attempts by person. If you needed to see the actual audit event that is being reported, you would look at the date, time, and event columns. Assuming the event was 822 and it occurred at 2:30 on 09/01/2009 and you use the en_US.utf8 locale, the command would look something like this:\n\n.nf\nausearch \\-\\-start 09/01/2009 02:30 \\-a 822 \\-i \\-\\-just\\-one\n",
                    "rendered": {
                      "text": "ausearch \\-\\-start this-week \\-k access \\-f /path-to/file \\-\\-raw | aureport \\-\\-user \\-i\n.fi\n\nThis report will give you the individual access attempts by person. If you needed to see the actual audit event that is being reported, you would look at the date, time, and event columns. Assuming the event was 822 and it occurred at 2:30 on 09/01/2009 and you use the en_US.utf8 locale, the command would look something like this:\n\n.nf\nausearch \\-\\-start 09/01/2009 02:30 \\-a 822 \\-i \\-\\-just\\-one\n",
                      "markdown": "`ausearch \\-\\-start this-week \\-k access \\-f /path-to/file \\-\\-raw | aureport \\-\\-user \\-i\n.fi\n\nThis report will give you the individual access attempts by person. If you needed to see the actual audit event that is being reported, you would look at the date, time, and event columns. Assuming the event was 822 and it occurred at 2:30 on 09/01/2009 and you use the en_US.utf8 locale, the command would look something like this:\n\n.nf\nausearch \\-\\-start 09/01/2009 02:30 \\-a 822 \\-i \\-\\-just\\-one\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit.rules.7"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 150,
                  "endLine": 143,
                  "endColumn": 154,
                  "snippet": {
                    "text": "ausearch \\-\\-start this-week \\-k access \\-f /path-to/file \\-\\-raw | aureport \\-\\-user \\-i\n.fi\n\nThis report will give you the individual access attempts by person. If you needed to see the actual audit event that is being reported, you would look at the date, time, and event columns. Assuming the event was 822 and it occurred at 2:30 on 09/01/2009 and you use the en_US.utf8 locale, the command would look something like this:\n\n.nf\nausearch \\-\\-start 09/01/2009 02:30 \\-a 822 \\-i \\-\\-just\\-one\n",
                    "rendered": {
                      "text": "ausearch \\-\\-start this-week \\-k access \\-f /path-to/file \\-\\-raw | aureport \\-\\-user \\-i\n.fi\n\nThis report will give you the individual access attempts by person. If you needed to see the actual audit event that is being reported, you would look at the date, time, and event columns. Assuming the event was 822 and it occurred at 2:30 on 09/01/2009 and you use the en_US.utf8 locale, the command would look something like this:\n\n.nf\nausearch \\-\\-start 09/01/2009 02:30 \\-a 822 \\-i \\-\\-just\\-one\n",
                      "markdown": "`ausearch \\-\\-start this-week \\-k access \\-f /path-to/file \\-\\-raw | aureport \\-\\-user \\-i\n.fi\n\nThis report will give you the individual access attempts by person. If you needed to see the actual audit event that is being reported, you would look at the date, time, and event columns. Assuming the event was 822 and it occurred at 2:30 on 09/01/2009 and you use the en_US.utf8 locale, the command would look something like this:\n\n.nf\nausearch \\-\\-start 09/01/2009 02:30 \\-a 822 \\-i \\-\\-just\\-one\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit.rules.7"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 13,
                  "endLine": 113,
                  "endColumn": 17,
                  "snippet": {
                    "text": "aureport \\-\\-start this-week\n.fi\n\nAfter looking at the report, you probably want to get a second view about what rules you loaded that have been triggering. This is where keys become important. You would generally run the key summary report like this:\n\n.nf\naureport \\-\\-start this-week \\-\\-key \\-\\-summary\n",
                    "rendered": {
                      "text": "aureport \\-\\-start this-week\n.fi\n\nAfter looking at the report, you probably want to get a second view about what rules you loaded that have been triggering. This is where keys become important. You would generally run the key summary report like this:\n\n.nf\naureport \\-\\-start this-week \\-\\-key \\-\\-summary\n",
                      "markdown": "`aureport \\-\\-start this-week\n.fi\n\nAfter looking at the report, you probably want to get a second view about what rules you loaded that have been triggering. This is where keys become important. You would generally run the key summary report like this:\n\n.nf\naureport \\-\\-start this-week \\-\\-key \\-\\-summary\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit.rules.7"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 117,
                  "endLine": 92,
                  "endColumn": 121,
                  "snippet": {
                    "text": " in front of the\n.B \\-S\noption so that auditctl looks at the right lookup table when returning the number.\n\nAfter the syscall is specified, you would normally have one or more\n.B \\-F\noptions that fine tune what to match against. Rather than list all the valid field types here, the reader should look at the auditctl man page which has a full listing of each field and what it means. But it's worth mentioning a couple things.\n\nThe audit system considers uids to be unsigned numbers. The audit system uses the number \\-1 to indicate that a loginuid is not set. This means that when it's printed out, it l",
                    "rendered": {
                      "text": " in front of the\n.B \\-S\noption so that auditctl looks at the right lookup table when returning the number.\n\nAfter the syscall is specified, you would normally have one or more\n.B \\-F\noptions that fine tune what to match against. Rather than list all the valid field types here, the reader should look at the auditctl man page which has a full listing of each field and what it means. But it's worth mentioning a couple things.\n\nThe audit system considers uids to be unsigned numbers. The audit system uses the number \\-1 to indicate that a loginuid is not set. This means that when it's printed out, it l",
                      "markdown": "` in front of the\n.B \\-S\noption so that auditctl looks at the right lookup table when returning the number.\n\nAfter the syscall is specified, you would normally have one or more\n.B \\-F\noptions that fine tune what to match against. Rather than list all the valid field types here, the reader should look at the auditctl man page which has a full listing of each field and what it means. But it's worth mentioning a couple things.\n\nThe audit system considers uids to be unsigned numbers. The audit system uses the number \\-1 to indicate that a loginuid is not set. This means that when it's printed out, it l`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit.rules.7"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 29,
                  "endLine": 88,
                  "endColumn": 33,
                  "snippet": {
                    "text": "h machines. The 32 and 64 bit syscall numbers sometimes, but not always, line up. So, to solve this problem, you would generally need to break the rule into 2 with one specifying \\-F arch=b32 and the other specifying \\-F arch=b64. This needs to go in front of the\n.B \\-S\noption so that auditctl looks at the right lookup table when returning the number.\n\nAfter the syscall is specified, you would normally have one or more\n.B \\-F\noptions that fine tune what to match against. Rather than list all the valid field types here, the reader should look at the auditctl man page which has a full listing of eac",
                    "rendered": {
                      "text": "h machines. The 32 and 64 bit syscall numbers sometimes, but not always, line up. So, to solve this problem, you would generally need to break the rule into 2 with one specifying \\-F arch=b32 and the other specifying \\-F arch=b64. This needs to go in front of the\n.B \\-S\noption so that auditctl looks at the right lookup table when returning the number.\n\nAfter the syscall is specified, you would normally have one or more\n.B \\-F\noptions that fine tune what to match against. Rather than list all the valid field types here, the reader should look at the auditctl man page which has a full listing of eac",
                      "markdown": "`h machines. The 32 and 64 bit syscall numbers sometimes, but not always, line up. So, to solve this problem, you would generally need to break the rule into 2 with one specifying \\-F arch=b32 and the other specifying \\-F arch=b64. This needs to go in front of the\n.B \\-S\noption so that auditctl looks at the right lookup table when returning the number.\n\nAfter the syscall is specified, you would normally have one or more\n.B \\-F\noptions that fine tune what to match against. Rather than list all the valid field types here, the reader should look at the auditctl man page which has a full listing of eac`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit.rules.7"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 76,
                  "endLine": 68,
                  "endColumn": 80,
                  "snippet": {
                    "text": "\nThe\n.B \\-a\noption tells the kernel's rule matching engine that we want to append a rule at the end of the rule list. But we need to specify which rule list it goes on and what action to take when it triggers. Valid actions are:\n\n.RS\n.TP 7\n",
                    "rendered": {
                      "text": "\nThe\n.B \\-a\noption tells the kernel's rule matching engine that we want to append a rule at the end of the rule list. But we need to specify which rule list it goes on and what action to take when it triggers. Valid actions are:\n\n.RS\n.TP 7\n",
                      "markdown": "`\nThe\n.B \\-a\noption tells the kernel's rule matching engine that we want to append a rule at the end of the rule list. But we need to specify which rule list it goes on and what action to take when it triggers. Valid actions are:\n\n.RS\n.TP 7\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit.rules.7"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 100,
                  "endLine": 39,
                  "endColumn": 104,
                  "snippet": {
                    "text": ".B arch\nfield in the rule. The individual permissions will cause the selection of specific system calls that use that kind of access. Not supplying the arch will cause the selection of all system calls which will affect performance as all system calls will be evaluated.\n\nWatches can also be created using the deprecated \\-w format which allows for backwards compatibility at the expense of system performance as explained. Using syscall rules as shown above, you can choose between\n.B path\nand\n.B dir\n",
                    "rendered": {
                      "text": ".B arch\nfield in the rule. The individual permissions will cause the selection of specific system calls that use that kind of access. Not supplying the arch will cause the selection of all system calls which will affect performance as all system calls will be evaluated.\n\nWatches can also be created using the deprecated \\-w format which allows for backwards compatibility at the expense of system performance as explained. Using syscall rules as shown above, you can choose between\n.B path\nand\n.B dir\n",
                      "markdown": "`.B arch\nfield in the rule. The individual permissions will cause the selection of specific system calls that use that kind of access. Not supplying the arch will cause the selection of all system calls which will affect performance as all system calls will be evaluated.\n\nWatches can also be created using the deprecated \\-w format which allows for backwards compatibility at the expense of system performance as explained. Using syscall rules as shown above, you can choose between\n.B path\nand\n.B dir\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit.rules.7"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 368,
                  "endLine": 9,
                  "endColumn": 372,
                  "snippet": {
                    "text": "er than telling it what to watch for. These commands typically include deleting all rules, setting the size of the kernel's backlog queue, setting the failure mode, setting the event rate limit, or to tell auditctl to ignore syntax errors in the rules and continue loading. Generally, these rules are at the top of the rules file.\n\n.SS File System\nFile System rules are sometimes called watches. These rules are used to audit access to particular files or directories that you may be interested in. If the path given in a watch rule is a directory, then the rule used is recursive to the bottom of the di",
                    "rendered": {
                      "text": "er than telling it what to watch for. These commands typically include deleting all rules, setting the size of the kernel's backlog queue, setting the failure mode, setting the event rate limit, or to tell auditctl to ignore syntax errors in the rules and continue loading. Generally, these rules are at the top of the rules file.\n\n.SS File System\nFile System rules are sometimes called watches. These rules are used to audit access to particular files or directories that you may be interested in. If the path given in a watch rule is a directory, then the rule used is recursive to the bottom of the di",
                      "markdown": "`er than telling it what to watch for. These commands typically include deleting all rules, setting the size of the kernel's backlog queue, setting the failure mode, setting the event rate limit, or to tell auditctl to ignore syntax errors in the rules and continue loading. Generally, these rules are at the top of the rules file.\n\n.SS File System\nFile System rules are sometimes called watches. These rules are used to audit access to particular files or directories that you may be interested in. If the path given in a watch rule is a directory, then the rule used is recursive to the bottom of the di`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit.rules.7"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 3,
                  "endLine": 9,
                  "snippet": {
                    "text": "ipts to perform this operation. The syntax for the rules is essentially the same as when typing in an auditctl command at a shell prompt except you do not need to type the auditctl command name since that is implied. The audit rules come in 3 varieties:\n.IR control \", \" file \", and \" syscall \".\n\n.SS Control\nControl commands generally involve configuring the audit system rather than telling it what to watch for. These commands typically include deleting all rules, setting the size of the kernel's backlog queue, setting the failure mode, setting the event rate limit, or to tell auditctl to ignore syntax ",
                    "rendered": {
                      "text": "ipts to perform this operation. The syntax for the rules is essentially the same as when typing in an auditctl command at a shell prompt except you do not need to type the auditctl command name since that is implied. The audit rules come in 3 varieties:\n.IR control \", \" file \", and \" syscall \".\n\n.SS Control\nControl commands generally involve configuring the audit system rather than telling it what to watch for. These commands typically include deleting all rules, setting the size of the kernel's backlog queue, setting the failure mode, setting the event rate limit, or to tell auditctl to ignore syntax ",
                      "markdown": "`ipts to perform this operation. The syntax for the rules is essentially the same as when typing in an auditctl command at a shell prompt except you do not need to type the auditctl command name since that is implied. The audit rules come in 3 varieties:\n.IR control \", \" file \", and \" syscall \".\n\n.SS Control\nControl commands generally involve configuring the audit system rather than telling it what to watch for. These commands typically include deleting all rules, setting the size of the kernel's backlog queue, setting the failure mode, setting the event rate limit, or to tell auditctl to ignore syntax `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit.rules.7"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3,
                  "endLine": 6,
                  "endColumn": 12,
                  "snippet": {
                    "text": "The auditctl program is used by the initscripts to perform this operation. The syntax for the rules is essentially the same as when typing in an auditctl command at a shell prompt except you do not need to type the auditctl command name since that is implied. The audit rules come in 3 varieties:\n.IR control \", \" file \", and \" syscall \".\n\n.SS Control\nControl commands generally involve configuring the audit system rather than telling it what to watch for. These commands typically include deleting all rules, setting the size of the kernel's backlog queue, setting the failure mode, setting the event rate l",
                    "rendered": {
                      "text": "The auditctl program is used by the initscripts to perform this operation. The syntax for the rules is essentially the same as when typing in an auditctl command at a shell prompt except you do not need to type the auditctl command name since that is implied. The audit rules come in 3 varieties:\n.IR control \", \" file \", and \" syscall \".\n\n.SS Control\nControl commands generally involve configuring the audit system rather than telling it what to watch for. These commands typically include deleting all rules, setting the size of the kernel's backlog queue, setting the failure mode, setting the event rate l",
                      "markdown": "`The auditctl program is used by the initscripts to perform this operation. The syntax for the rules is essentially the same as when typing in an auditctl command at a shell prompt except you do not need to type the auditctl command name since that is implied. The audit rules come in 3 varieties:\n.IR control \", \" file \", and \" syscall \".\n\n.SS Control\nControl commands generally involve configuring the audit system rather than telling it what to watch for. These commands typically include deleting all rules, setting the size of the kernel's backlog queue, setting the failure mode, setting the event rate l`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit.rules.7"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 298,
                  "endLine": 5,
                  "endColumn": 302,
                  "snippet": {
                    "text": ".SH NAME\naudit.rules \\- a set of rules loaded in the kernel audit system\n.SH DESCRIPTION\n\\fBaudit.rules\\fP is a file containing audit rules that will be loaded by the audit daemon's init script whenever the daemon is started. The auditctl program is used by the initscripts to perform this operation. The syntax for the rules is essentially the same as when typing in an auditctl command at a shell prompt except you do not need to type the auditctl command name since that is implied. The audit rules come in 3 varieties:\n.IR control \", \" file \", and \" syscall \".\n\n.SS Control\n",
                    "rendered": {
                      "text": ".SH NAME\naudit.rules \\- a set of rules loaded in the kernel audit system\n.SH DESCRIPTION\n\\fBaudit.rules\\fP is a file containing audit rules that will be loaded by the audit daemon's init script whenever the daemon is started. The auditctl program is used by the initscripts to perform this operation. The syntax for the rules is essentially the same as when typing in an auditctl command at a shell prompt except you do not need to type the auditctl command name since that is implied. The audit rules come in 3 varieties:\n.IR control \", \" file \", and \" syscall \".\n\n.SS Control\n",
                      "markdown": "`.SH NAME\naudit.rules \\- a set of rules loaded in the kernel audit system\n.SH DESCRIPTION\n\\fBaudit.rules\\fP is a file containing audit rules that will be loaded by the audit daemon's init script whenever the daemon is started. The auditctl program is used by the initscripts to perform this operation. The syntax for the rules is essentially the same as when typing in an auditctl command at a shell prompt except you do not need to type the auditctl command name since that is implied. The audit rules come in 3 varieties:\n.IR control \", \" file \", and \" syscall \".\n\n.SS Control\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit.rules.7"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 88,
                  "endLine": 188,
                  "endColumn": 95,
                  "snippet": {
                    "text": "mplicit in the specification of the filter. The following example rule watches for file opens through the io_uring subsystem:\n\n.nf\n.B \\-a always,io_uring \\-S openat,openat2  \\-F key=access\n\n.SH HARD WIRED EVENTS\nIf auditing is enabled, then you can get any event that is not caused by syscall or file watch rules (because you don't have any rules loaded). So, that means, any event from 1100-1299, 1326, 1328, 1331 and higher can be emitted. The reason that there are a number of events that are hardwired is because they are required by regulatory compliance and are sent automatically as a convenience. (F",
                    "rendered": {
                      "text": "mplicit in the specification of the filter. The following example rule watches for file opens through the io_uring subsystem:\n\n.nf\n.B \\-a always,io_uring \\-S openat,openat2  \\-F key=access\n\n.SH HARD WIRED EVENTS\nIf auditing is enabled, then you can get any event that is not caused by syscall or file watch rules (because you don't have any rules loaded). So, that means, any event from 1100-1299, 1326, 1328, 1331 and higher can be emitted. The reason that there are a number of events that are hardwired is because they are required by regulatory compliance and are sent automatically as a convenience. (F",
                      "markdown": "`mplicit in the specification of the filter. The following example rule watches for file opens through the io_uring subsystem:\n\n.nf\n.B \\-a always,io_uring \\-S openat,openat2  \\-F key=access\n\n.SH HARD WIRED EVENTS\nIf auditing is enabled, then you can get any event that is not caused by syscall or file watch rules (because you don't have any rules loaded). So, that means, any event from 1100-1299, 1326, 1328, 1331 and higher can be emitted. The reason that there are a number of events that are hardwired is because they are required by regulatory compliance and are sent automatically as a convenience. (F`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit.rules.7"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 106,
                  "endLine": 154,
                  "endColumn": 114,
                  "snippet": {
                    "text": "sis is setting up key fields when the rules were originally written. It should also be pointed out that you can have more than one key field associated with any given rule.\n\n.SH TROUBLESHOOTING\nIf you are not getting events on syscall rules that you think you should, try running a test program under strace so that you can see the syscalls. There is a chance that you might have identified the wrong syscall.\n\nIf you get a warning from auditctl saying, \"32/64 bit syscall mismatch in line XX, you should specify an arch\". This means that you specified a syscall rule on a bi-arch system where the syscall ha",
                    "rendered": {
                      "text": "sis is setting up key fields when the rules were originally written. It should also be pointed out that you can have more than one key field associated with any given rule.\n\n.SH TROUBLESHOOTING\nIf you are not getting events on syscall rules that you think you should, try running a test program under strace so that you can see the syscalls. There is a chance that you might have identified the wrong syscall.\n\nIf you get a warning from auditctl saying, \"32/64 bit syscall mismatch in line XX, you should specify an arch\". This means that you specified a syscall rule on a bi-arch system where the syscall ha",
                      "markdown": "`sis is setting up key fields when the rules were originally written. It should also be pointed out that you can have more than one key field associated with any given rule.\n\n.SH TROUBLESHOOTING\nIf you are not getting events on syscall rules that you think you should, try running a test program under strace so that you can see the syscalls. There is a chance that you might have identified the wrong syscall.\n\nIf you get a warning from auditctl saying, \"32/64 bit syscall mismatch in line XX, you should specify an arch\". This means that you specified a syscall rule on a bi-arch system where the syscall ha`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit.rules.7"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 50,
                  "endLine": 149,
                  "endColumn": 56,
                  "snippet": {
                    "text": "ausearch \\-\\-start 09/01/2009 02:30 \\-a 822 \\-i \\-\\-just\\-one\n.fi\n\nThis will select the first event from that day and time with the matching event id and interpret the numeric values into human readable values.\n\nThe most important step in being able to do this kind of analysis is setting up key fields when the rules were originally written. It should also be pointed out that you can have more than one key field associated with any given rule.\n\n",
                    "rendered": {
                      "text": "ausearch \\-\\-start 09/01/2009 02:30 \\-a 822 \\-i \\-\\-just\\-one\n.fi\n\nThis will select the first event from that day and time with the matching event id and interpret the numeric values into human readable values.\n\nThe most important step in being able to do this kind of analysis is setting up key fields when the rules were originally written. It should also be pointed out that you can have more than one key field associated with any given rule.\n\n",
                      "markdown": "`ausearch \\-\\-start 09/01/2009 02:30 \\-a 822 \\-i \\-\\-just\\-one\n.fi\n\nThis will select the first event from that day and time with the matching event id and interpret the numeric values into human readable values.\n\nThe most important step in being able to do this kind of analysis is setting up key fields when the rules were originally written. It should also be pointed out that you can have more than one key field associated with any given rule.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit.rules.7"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 30,
                  "endLine": 58,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\nThe exclude filter is used to exclude certain events from being emitted. The msgtype and a number of subject attribute fields can be used to tell the kernel which message types you do not want to record. This filter can remove the event as a whole and is not selective about any other attribute. The user and exit filters are better suited to selectively auditing events.  The action is ignored for this filter, defaulting to \"never\".\n\nThe io_uring filter is used to watch underlying syscalls performed by io_uring operations.\n\nSyscall rules take the general form of:\n\n",
                    "rendered": {
                      "text": "\nThe exclude filter is used to exclude certain events from being emitted. The msgtype and a number of subject attribute fields can be used to tell the kernel which message types you do not want to record. This filter can remove the event as a whole and is not selective about any other attribute. The user and exit filters are better suited to selectively auditing events.  The action is ignored for this filter, defaulting to \"never\".\n\nThe io_uring filter is used to watch underlying syscalls performed by io_uring operations.\n\nSyscall rules take the general form of:\n\n",
                      "markdown": "`\nThe exclude filter is used to exclude certain events from being emitted. The msgtype and a number of subject attribute fields can be used to tell the kernel which message types you do not want to record. This filter can remove the event as a whole and is not selective about any other attribute. The user and exit filters are better suited to selectively auditing events.  The action is ignored for this filter, defaulting to \"never\".\n\nThe io_uring filter is used to watch underlying syscalls performed by io_uring operations.\n\nSyscall rules take the general form of:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit.rules.7"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 148,
                  "endLine": 43,
                  "endColumn": 155,
                  "snippet": {
                    "text": ".B path\nand\n.B dir\nwhich is against a specific inode or directory tree respectively. It should also be noted that the recursive directory watch will stop if there is a mount point below the parent directory. There is an option to make the mounted subdirectory equivalent by using a\n.B -q\nrule.\n\n",
                    "rendered": {
                      "text": ".B path\nand\n.B dir\nwhich is against a specific inode or directory tree respectively. It should also be noted that the recursive directory watch will stop if there is a mount point below the parent directory. There is an option to make the mounted subdirectory equivalent by using a\n.B -q\nrule.\n\n",
                      "markdown": "`.B path\nand\n.B dir\nwhich is against a specific inode or directory tree respectively. It should also be noted that the recursive directory watch will stop if there is a mount point below the parent directory. There is an option to make the mounted subdirectory equivalent by using a\n.B -q\nrule.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit.rules.7"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 118,
                  "endLine": 43,
                  "endColumn": 125,
                  "snippet": {
                    "text": ".B path\nand\n.B dir\nwhich is against a specific inode or directory tree respectively. It should also be noted that the recursive directory watch will stop if there is a mount point below the parent directory. There is an option to make the mounted subdirectory equivalent by using a\n.B -q\nrule.\n\n",
                    "rendered": {
                      "text": ".B path\nand\n.B dir\nwhich is against a specific inode or directory tree respectively. It should also be noted that the recursive directory watch will stop if there is a mount point below the parent directory. There is an option to make the mounted subdirectory equivalent by using a\n.B -q\nrule.\n\n",
                      "markdown": "`.B path\nand\n.B dir\nwhich is against a specific inode or directory tree respectively. It should also be noted that the recursive directory watch will stop if there is a mount point below the parent directory. There is an option to make the mounted subdirectory equivalent by using a\n.B -q\nrule.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit.rules.7"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 340,
                  "endLine": 12,
                  "endColumn": 347,
                  "snippet": {
                    "text": "atches. These rules are used to audit access to particular files or directories that you may be interested in. If the path given in a watch rule is a directory, then the rule used is recursive to the bottom of the directory tree excluding any directories that may be mount points. The syntax of these watch rules generally follow this format:\n\n.nf\n.B \\-a always,exit \\-F arch=b64 -F path=path-to-file -F perm=permissions -F key=keyname\n.fi\n\nwhere the permission are any one of the following:\n\n.RS\n.TP 2\n.B r\n- read of the file\n.TP\n.B w\n- write to the file\n.TP\n.B x\n- execute the file\n.TP\n.B a\n- change in th",
                    "rendered": {
                      "text": "atches. These rules are used to audit access to particular files or directories that you may be interested in. If the path given in a watch rule is a directory, then the rule used is recursive to the bottom of the directory tree excluding any directories that may be mount points. The syntax of these watch rules generally follow this format:\n\n.nf\n.B \\-a always,exit \\-F arch=b64 -F path=path-to-file -F perm=permissions -F key=keyname\n.fi\n\nwhere the permission are any one of the following:\n\n.RS\n.TP 2\n.B r\n- read of the file\n.TP\n.B w\n- write to the file\n.TP\n.B x\n- execute the file\n.TP\n.B a\n- change in th",
                      "markdown": "`atches. These rules are used to audit access to particular files or directories that you may be interested in. If the path given in a watch rule is a directory, then the rule used is recursive to the bottom of the directory tree excluding any directories that may be mount points. The syntax of these watch rules generally follow this format:\n\n.nf\n.B \\-a always,exit \\-F arch=b64 -F path=path-to-file -F perm=permissions -F key=keyname\n.fi\n\nwhere the permission are any one of the following:\n\n.RS\n.TP 2\n.B r\n- read of the file\n.TP\n.B w\n- write to the file\n.TP\n.B x\n- execute the file\n.TP\n.B a\n- change in th`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit.rules.7"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 306,
                  "endLine": 12,
                  "endColumn": 313,
                  "snippet": {
                    "text": "ystem rules are sometimes called watches. These rules are used to audit access to particular files or directories that you may be interested in. If the path given in a watch rule is a directory, then the rule used is recursive to the bottom of the directory tree excluding any directories that may be mount points. The syntax of these watch rules generally follow this format:\n\n.nf\n.B \\-a always,exit \\-F arch=b64 -F path=path-to-file -F perm=permissions -F key=keyname\n.fi\n\nwhere the permission are any one of the following:\n\n.RS\n.TP 2\n.B r\n- read of the file\n.TP\n.B w\n- write to the file\n.TP\n.B x\n- execut",
                    "rendered": {
                      "text": "ystem rules are sometimes called watches. These rules are used to audit access to particular files or directories that you may be interested in. If the path given in a watch rule is a directory, then the rule used is recursive to the bottom of the directory tree excluding any directories that may be mount points. The syntax of these watch rules generally follow this format:\n\n.nf\n.B \\-a always,exit \\-F arch=b64 -F path=path-to-file -F perm=permissions -F key=keyname\n.fi\n\nwhere the permission are any one of the following:\n\n.RS\n.TP 2\n.B r\n- read of the file\n.TP\n.B w\n- write to the file\n.TP\n.B x\n- execut",
                      "markdown": "`ystem rules are sometimes called watches. These rules are used to audit access to particular files or directories that you may be interested in. If the path given in a watch rule is a directory, then the rule used is recursive to the bottom of the directory tree excluding any directories that may be mount points. The syntax of these watch rules generally follow this format:\n\n.nf\n.B \\-a always,exit \\-F arch=b64 -F path=path-to-file -F perm=permissions -F key=keyname\n.fi\n\nwhere the permission are any one of the following:\n\n.RS\n.TP 2\n.B r\n- read of the file\n.TP\n.B w\n- write to the file\n.TP\n.B x\n- execut`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit.rules.7"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 173,
                  "endLine": 12,
                  "endColumn": 180,
                  "snippet": {
                    "text": "ore syntax errors in the rules and continue loading. Generally, these rules are at the top of the rules file.\n\n.SS File System\nFile System rules are sometimes called watches. These rules are used to audit access to particular files or directories that you may be interested in. If the path given in a watch rule is a directory, then the rule used is recursive to the bottom of the directory tree excluding any directories that may be mount points. The syntax of these watch rules generally follow this format:\n\n.nf\n.B \\-a always,exit \\-F arch=b64 -F path=path-to-file -F perm=permissions -F key=keyname\n.fi\n",
                    "rendered": {
                      "text": "ore syntax errors in the rules and continue loading. Generally, these rules are at the top of the rules file.\n\n.SS File System\nFile System rules are sometimes called watches. These rules are used to audit access to particular files or directories that you may be interested in. If the path given in a watch rule is a directory, then the rule used is recursive to the bottom of the directory tree excluding any directories that may be mount points. The syntax of these watch rules generally follow this format:\n\n.nf\n.B \\-a always,exit \\-F arch=b64 -F path=path-to-file -F perm=permissions -F key=keyname\n.fi\n",
                      "markdown": "`ore syntax errors in the rules and continue loading. Generally, these rules are at the top of the rules file.\n\n.SS File System\nFile System rules are sometimes called watches. These rules are used to audit access to particular files or directories that you may be interested in. If the path given in a watch rule is a directory, then the rule used is recursive to the bottom of the directory tree excluding any directories that may be mount points. The syntax of these watch rules generally follow this format:\n\n.nf\n.B \\-a always,exit \\-F arch=b64 -F path=path-to-file -F perm=permissions -F key=keyname\n.fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit.rules.7"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 375,
                  "endLine": 9,
                  "endColumn": 380,
                  "snippet": {
                    "text": " telling it what to watch for. These commands typically include deleting all rules, setting the size of the kernel's backlog queue, setting the failure mode, setting the event rate limit, or to tell auditctl to ignore syntax errors in the rules and continue loading. Generally, these rules are at the top of the rules file.\n\n.SS File System\nFile System rules are sometimes called watches. These rules are used to audit access to particular files or directories that you may be interested in. If the path given in a watch rule is a directory, then the rule used is recursive to the bottom of the directory ",
                    "rendered": {
                      "text": " telling it what to watch for. These commands typically include deleting all rules, setting the size of the kernel's backlog queue, setting the failure mode, setting the event rate limit, or to tell auditctl to ignore syntax errors in the rules and continue loading. Generally, these rules are at the top of the rules file.\n\n.SS File System\nFile System rules are sometimes called watches. These rules are used to audit access to particular files or directories that you may be interested in. If the path given in a watch rule is a directory, then the rule used is recursive to the bottom of the directory ",
                      "markdown": "` telling it what to watch for. These commands typically include deleting all rules, setting the size of the kernel's backlog queue, setting the failure mode, setting the event rate limit, or to tell auditctl to ignore syntax errors in the rules and continue loading. Generally, these rules are at the top of the rules file.\n\n.SS File System\nFile System rules are sometimes called watches. These rules are used to audit access to particular files or directories that you may be interested in. If the path given in a watch rule is a directory, then the rule used is recursive to the bottom of the directory `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit.rules.7"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 94,
                  "endLine": 9,
                  "endColumn": 101,
                  "snippet": {
                    "text": "uditctl command at a shell prompt except you do not need to type the auditctl command name since that is implied. The audit rules come in 3 varieties:\n.IR control \", \" file \", and \" syscall \".\n\n.SS Control\nControl commands generally involve configuring the audit system rather than telling it what to watch for. These commands typically include deleting all rules, setting the size of the kernel's backlog queue, setting the failure mode, setting the event rate limit, or to tell auditctl to ignore syntax errors in the rules and continue loading. Generally, these rules are at the top of the rules file.\n\n.",
                    "rendered": {
                      "text": "uditctl command at a shell prompt except you do not need to type the auditctl command name since that is implied. The audit rules come in 3 varieties:\n.IR control \", \" file \", and \" syscall \".\n\n.SS Control\nControl commands generally involve configuring the audit system rather than telling it what to watch for. These commands typically include deleting all rules, setting the size of the kernel's backlog queue, setting the failure mode, setting the event rate limit, or to tell auditctl to ignore syntax errors in the rules and continue loading. Generally, these rules are at the top of the rules file.\n\n.",
                      "markdown": "`uditctl command at a shell prompt except you do not need to type the auditctl command name since that is implied. The audit rules come in 3 varieties:\n.IR control \", \" file \", and \" syscall \".\n\n.SS Control\nControl commands generally involve configuring the audit system rather than telling it what to watch for. These commands typically include deleting all rules, setting the size of the kernel's backlog queue, setting the failure mode, setting the event rate limit, or to tell auditctl to ignore syntax errors in the rules and continue loading. Generally, these rules are at the top of the rules file.\n\n.`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit.rules.7"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 97,
                  "endLine": 5,
                  "endColumn": 105,
                  "snippet": {
                    "text": ".SH NAME\naudit.rules \\- a set of rules loaded in the kernel audit system\n.SH DESCRIPTION\n\\fBaudit.rules\\fP is a file containing audit rules that will be loaded by the audit daemon's init script whenever the daemon is started. The auditctl program is used by the initscripts to perform this operation. The syntax for the rules is essentially the same as when typing in an auditctl command at a shell prompt except you do not need to type the auditctl command name since that is implied. The audit rules come in 3 varieties:\n.IR control \", \" file \", and \" syscall \".\n\n.SS Control\n",
                    "rendered": {
                      "text": ".SH NAME\naudit.rules \\- a set of rules loaded in the kernel audit system\n.SH DESCRIPTION\n\\fBaudit.rules\\fP is a file containing audit rules that will be loaded by the audit daemon's init script whenever the daemon is started. The auditctl program is used by the initscripts to perform this operation. The syntax for the rules is essentially the same as when typing in an auditctl command at a shell prompt except you do not need to type the auditctl command name since that is implied. The audit rules come in 3 varieties:\n.IR control \", \" file \", and \" syscall \".\n\n.SS Control\n",
                      "markdown": "`.SH NAME\naudit.rules \\- a set of rules loaded in the kernel audit system\n.SH DESCRIPTION\n\\fBaudit.rules\\fP is a file containing audit rules that will be loaded by the audit daemon's init script whenever the daemon is started. The auditctl program is used by the initscripts to perform this operation. The syntax for the rules is essentially the same as when typing in an auditctl command at a shell prompt except you do not need to type the auditctl command name since that is implied. The audit rules come in 3 varieties:\n.IR control \", \" file \", and \" syscall \".\n\n.SS Control\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit_set_enabled.3"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 28,
                  "endLine": 13,
                  "endColumn": 37,
                  "snippet": {
                    "text": ".SH \"DESCRIPTION\"\n\n.PP\naudit_set_enabled is used to control whether or not the audit system is active. When the audit system is enabled (enabled set to 1), every syscall will pass through the audit system to collect information and potentially trigger an event.\n\nIf the audit system is disabled (enabled set to 0), syscalls do not enter the audit system and no data is collected. There may be some events generated by MAC subsystems like SE Linux even though the audit system is disabled. It is possible to suppress those events, too, by adding an audit rule with flags set to AUDIT_FILTER_EXCLUDE\n\n",
                    "rendered": {
                      "text": ".SH \"DESCRIPTION\"\n\n.PP\naudit_set_enabled is used to control whether or not the audit system is active. When the audit system is enabled (enabled set to 1), every syscall will pass through the audit system to collect information and potentially trigger an event.\n\nIf the audit system is disabled (enabled set to 0), syscalls do not enter the audit system and no data is collected. There may be some events generated by MAC subsystems like SE Linux even though the audit system is disabled. It is possible to suppress those events, too, by adding an audit rule with flags set to AUDIT_FILTER_EXCLUDE\n\n",
                      "markdown": "`.SH \"DESCRIPTION\"\n\n.PP\naudit_set_enabled is used to control whether or not the audit system is active. When the audit system is enabled (enabled set to 1), every syscall will pass through the audit system to collect information and potentially trigger an event.\n\nIf the audit system is disabled (enabled set to 0), syscalls do not enter the audit system and no data is collected. There may be some events generated by MAC subsystems like SE Linux even though the audit system is disabled. It is possible to suppress those events, too, by adding an audit rule with flags set to AUDIT_FILTER_EXCLUDE\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/aureport.8"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 285,
                  "endLine": 124,
                  "endColumn": 289,
                  "snippet": {
                    "text": "tal variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP, \\fByesterday\\fP, \\fBthis\\-week\\fP, \\fBweek\\-ago\\fP, \\fBthis\\-month\\fP, \\fBthis\\-year\\fP. \\fBBoot\\fP means the time of day to the second when the system last booted. \\fBToday\\fP means starting at 1 second after midnight. \\fBRecent\\fP is 10 minutes ago. \\fBYesterday\\fP is 1 second after midnight the previous day. \\fBThis\\-week\\fP means starting 1 second after midnight on day 0 of the week determined by your locale (see \\fBlocaltime\\fP). \\fBWeek\\-ago\\fP means starting 1 second after midnight e",
                    "rendered": {
                      "text": "tal variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP, \\fByesterday\\fP, \\fBthis\\-week\\fP, \\fBweek\\-ago\\fP, \\fBthis\\-month\\fP, \\fBthis\\-year\\fP. \\fBBoot\\fP means the time of day to the second when the system last booted. \\fBToday\\fP means starting at 1 second after midnight. \\fBRecent\\fP is 10 minutes ago. \\fBYesterday\\fP is 1 second after midnight the previous day. \\fBThis\\-week\\fP means starting 1 second after midnight on day 0 of the week determined by your locale (see \\fBlocaltime\\fP). \\fBWeek\\-ago\\fP means starting 1 second after midnight e",
                      "markdown": "`tal variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP, \\fByesterday\\fP, \\fBthis\\-week\\fP, \\fBweek\\-ago\\fP, \\fBthis\\-month\\fP, \\fBthis\\-year\\fP. \\fBBoot\\fP means the time of day to the second when the system last booted. \\fBToday\\fP means starting at 1 second after midnight. \\fBRecent\\fP is 10 minutes ago. \\fBYesterday\\fP is 1 second after midnight the previous day. \\fBThis\\-week\\fP means starting 1 second after midnight on day 0 of the week determined by your locale (see \\fBlocaltime\\fP). \\fBWeek\\-ago\\fP means starting 1 second after midnight e`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/aureport.8"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 29,
                  "endLine": 73,
                  "endColumn": 38,
                  "snippet": {
                    "text": "Report about account modifications\n.TP\n.BR \\-ma ,\\  \\-\\-mac\nReport about Mandatory Access Control (MAC) events\n.TP\n.BR \\-n ,\\  \\-\\-anomaly\nReport about anomaly events. These events include NIC going into promiscuous mode and programs segfaulting.\n",
                    "rendered": {
                      "text": "Report about account modifications\n.TP\n.BR \\-ma ,\\  \\-\\-mac\nReport about Mandatory Access Control (MAC) events\n.TP\n.BR \\-n ,\\  \\-\\-anomaly\nReport about anomaly events. These events include NIC going into promiscuous mode and programs segfaulting.\n",
                      "markdown": "`Report about account modifications\n.TP\n.BR \\-ma ,\\  \\-\\-mac\nReport about Mandatory Access Control (MAC) events\n.TP\n.BR \\-n ,\\  \\-\\-anomaly\nReport about anomaly events. These events include NIC going into promiscuous mode and programs segfaulting.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/aureport.8"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 206,
                  "endLine": 8,
                  "endColumn": 210,
                  "snippet": {
                    "text": "summary reports of audit daemon logs\n.SH SYNOPSIS\n.B aureport\n.RI [ options ]\n.SH DESCRIPTION\n\\fBaureport\\fP is a tool that produces summary reports of the audit system logs. The aureport utility can also take input from stdin as long as the input is the raw log data. The reports have a column label at the top to help with interpretation of the various fields. Except for the main summary report, all reports have the audit event number. You can subsequently lookup the full event with ausearch \\fB\\-a\\fP \\fIevent number\\fP. You may need to specify start & stop times if you get multiple hits. The repo",
                    "rendered": {
                      "text": "summary reports of audit daemon logs\n.SH SYNOPSIS\n.B aureport\n.RI [ options ]\n.SH DESCRIPTION\n\\fBaureport\\fP is a tool that produces summary reports of the audit system logs. The aureport utility can also take input from stdin as long as the input is the raw log data. The reports have a column label at the top to help with interpretation of the various fields. Except for the main summary report, all reports have the audit event number. You can subsequently lookup the full event with ausearch \\fB\\-a\\fP \\fIevent number\\fP. You may need to specify start & stop times if you get multiple hits. The repo",
                      "markdown": "`summary reports of audit daemon logs\n.SH SYNOPSIS\n.B aureport\n.RI [ options ]\n.SH DESCRIPTION\n\\fBaureport\\fP is a tool that produces summary reports of the audit system logs. The aureport utility can also take input from stdin as long as the input is the raw log data. The reports have a column label at the top to help with interpretation of the various fields. Except for the main summary report, all reports have the audit event number. You can subsequently lookup the full event with ausearch \\fB\\-a\\fP \\fIevent number\\fP. You may need to specify start & stop times if you get multiple hits. The repo`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/aureport.8"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 302,
                  "endLine": 139,
                  "endColumn": 308,
                  "snippet": {
                    "text": "Report about executables\n\n.SH NOTE\nThe boot time option is a convenience function and has limitations. The time it calculates is based on time now minus /proc/uptime. If after boot the system clock has been adjusted, perhaps by ntp, then the calculation may be wrong. In that case you'll need to fully specify the time. You can check the time it would use by running:\n\ndate -d \"`cut \\-f1 \\-d. /proc/uptime` seconds ago\"\n\n",
                    "rendered": {
                      "text": "Report about executables\n\n.SH NOTE\nThe boot time option is a convenience function and has limitations. The time it calculates is based on time now minus /proc/uptime. If after boot the system clock has been adjusted, perhaps by ntp, then the calculation may be wrong. In that case you'll need to fully specify the time. You can check the time it would use by running:\n\ndate -d \"`cut \\-f1 \\-d. /proc/uptime` seconds ago\"\n\n",
                      "markdown": "`Report about executables\n\n.SH NOTE\nThe boot time option is a convenience function and has limitations. The time it calculates is based on time now minus /proc/uptime. If after boot the system clock has been adjusted, perhaps by ntp, then the calculation may be wrong. In that case you'll need to fully specify the time. You can check the time it would use by running:\n\ndate -d \"`cut \\-f1 \\-d. /proc/uptime` seconds ago\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/aureport.8"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 102,
                  "endLine": 139,
                  "endColumn": 108,
                  "snippet": {
                    "text": "Report about executables\n\n.SH NOTE\nThe boot time option is a convenience function and has limitations. The time it calculates is based on time now minus /proc/uptime. If after boot the system clock has been adjusted, perhaps by ntp, then the calculation may be wrong. In that case you'll need to fully specify the time. You can check the time it would use by running:\n\ndate -d \"`cut \\-f1 \\-d. /proc/uptime` seconds ago\"\n\n",
                    "rendered": {
                      "text": "Report about executables\n\n.SH NOTE\nThe boot time option is a convenience function and has limitations. The time it calculates is based on time now minus /proc/uptime. If after boot the system clock has been adjusted, perhaps by ntp, then the calculation may be wrong. In that case you'll need to fully specify the time. You can check the time it would use by running:\n\ndate -d \"`cut \\-f1 \\-d. /proc/uptime` seconds ago\"\n\n",
                      "markdown": "`Report about executables\n\n.SH NOTE\nThe boot time option is a convenience function and has limitations. The time it calculates is based on time now minus /proc/uptime. If after boot the system clock has been adjusted, perhaps by ntp, then the calculation may be wrong. In that case you'll need to fully specify the time. You can check the time it would use by running:\n\ndate -d \"`cut \\-f1 \\-d. /proc/uptime` seconds ago\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/aureport.8"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 71,
                  "endLine": 139,
                  "endColumn": 77,
                  "snippet": {
                    "text": "Report about executables\n\n.SH NOTE\nThe boot time option is a convenience function and has limitations. The time it calculates is based on time now minus /proc/uptime. If after boot the system clock has been adjusted, perhaps by ntp, then the calculation may be wrong. In that case you'll need to fully specify the time. You can check the time it would use by running:\n\ndate -d \"`cut \\-f1 \\-d. /proc/uptime` seconds ago\"\n\n",
                    "rendered": {
                      "text": "Report about executables\n\n.SH NOTE\nThe boot time option is a convenience function and has limitations. The time it calculates is based on time now minus /proc/uptime. If after boot the system clock has been adjusted, perhaps by ntp, then the calculation may be wrong. In that case you'll need to fully specify the time. You can check the time it would use by running:\n\ndate -d \"`cut \\-f1 \\-d. /proc/uptime` seconds ago\"\n\n",
                      "markdown": "`Report about executables\n\n.SH NOTE\nThe boot time option is a convenience function and has limitations. The time it calculates is based on time now minus /proc/uptime. If after boot the system clock has been adjusted, perhaps by ntp, then the calculation may be wrong. In that case you'll need to fully specify the time. You can check the time it would use by running:\n\ndate -d \"`cut \\-f1 \\-d. /proc/uptime` seconds ago\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/aureport.8"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 8,
                  "endLine": 139,
                  "endColumn": 14,
                  "snippet": {
                    "text": "Report about executables\n\n.SH NOTE\nThe boot time option is a convenience function and has limitations. The time it calculates is based on time now minus /proc/uptime. If after boot the system clock has been adjusted, perhaps by ntp, then the calculation may be wrong. In that case you'll need to fully specify the time. You can check the time it would use by running:\n\ndate -d \"`cut \\-f1 \\-d. /proc/uptime` seconds ago\"\n\n",
                    "rendered": {
                      "text": "Report about executables\n\n.SH NOTE\nThe boot time option is a convenience function and has limitations. The time it calculates is based on time now minus /proc/uptime. If after boot the system clock has been adjusted, perhaps by ntp, then the calculation may be wrong. In that case you'll need to fully specify the time. You can check the time it would use by running:\n\ndate -d \"`cut \\-f1 \\-d. /proc/uptime` seconds ago\"\n\n",
                      "markdown": "`Report about executables\n\n.SH NOTE\nThe boot time option is a convenience function and has limitations. The time it calculates is based on time now minus /proc/uptime. If after boot the system clock has been adjusted, perhaps by ntp, then the calculation may be wrong. In that case you'll need to fully specify the time. You can check the time it would use by running:\n\ndate -d \"`cut \\-f1 \\-d. /proc/uptime` seconds ago\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/aureport.8"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 203,
                  "endLine": 124,
                  "endColumn": 209,
                  "snippet": {
                    "text": "time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP, \\fByesterday\\fP, \\fBthis\\-week\\fP, \\fBweek\\-ago\\fP, \\fBthis\\-month\\fP, \\fBthis\\-year\\fP. \\fBBoot\\fP means the time of day to the second when the system last booted. \\fBToday\\fP means starting at 1 second after midnight. \\fBRecent\\fP is 10 minutes ago. \\fBYesterday\\fP is 1 second after midnight the previous day. \\fBThis\\-week\\fP means starting 1 second after midnight on day 0 of the week determined by your locale",
                    "rendered": {
                      "text": "time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP, \\fByesterday\\fP, \\fBthis\\-week\\fP, \\fBweek\\-ago\\fP, \\fBthis\\-month\\fP, \\fBthis\\-year\\fP. \\fBBoot\\fP means the time of day to the second when the system last booted. \\fBToday\\fP means starting at 1 second after midnight. \\fBRecent\\fP is 10 minutes ago. \\fBYesterday\\fP is 1 second after midnight the previous day. \\fBThis\\-week\\fP means starting 1 second after midnight on day 0 of the week determined by your locale",
                      "markdown": "`time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP, \\fByesterday\\fP, \\fBthis\\-week\\fP, \\fBweek\\-ago\\fP, \\fBthis\\-month\\fP, \\fBthis\\-year\\fP. \\fBBoot\\fP means the time of day to the second when the system last booted. \\fBToday\\fP means starting at 1 second after midnight. \\fBRecent\\fP is 10 minutes ago. \\fBYesterday\\fP is 1 second after midnight the previous day. \\fBThis\\-week\\fP means starting 1 second after midnight on day 0 of the week determined by your locale`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/aureport.8"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 145,
                  "endLine": 122,
                  "endColumn": 151,
                  "snippet": {
                    "text": "fter the given end time. The format of end time depends on your locale. If the date is omitted, \n.B today\nis assumed. If the time is omitted, \n.B midnight\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 09/03/2009. An example of time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP, \\fByesterday\\fP, \\fBthis\\-week\\fP, \\fBweek\\-ago\\fP, \\fBthis\\-month\\fP, \\fBthis\\-year\\fP. \\fBBoot\\fP means the time",
                    "rendered": {
                      "text": "fter the given end time. The format of end time depends on your locale. If the date is omitted, \n.B today\nis assumed. If the time is omitted, \n.B midnight\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 09/03/2009. An example of time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP, \\fByesterday\\fP, \\fBthis\\-week\\fP, \\fBweek\\-ago\\fP, \\fBthis\\-month\\fP, \\fBthis\\-year\\fP. \\fBBoot\\fP means the time",
                      "markdown": "`fter the given end time. The format of end time depends on your locale. If the date is omitted, \n.B today\nis assumed. If the time is omitted, \n.B midnight\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 09/03/2009. An example of time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP, \\fByesterday\\fP, \\fBthis\\-week\\fP, \\fBweek\\-ago\\fP, \\fBthis\\-month\\fP, \\fBthis\\-year\\fP. \\fBBoot\\fP means the time`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/aureport.8"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 29,
                  "endLine": 122,
                  "endColumn": 35,
                  "snippet": {
                    "text": ".TP\n.BR \\-ts ,\\  \\-\\-start \\ [\\fIstart-date\\fP]\\ [\\fIstart-time\\fP]\nSearch for events with time stamps equal to or after the given end time. The format of end time depends on your locale. If the date is omitted, \n.B today\nis assumed. If the time is omitted, \n.B midnight\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 09/03/2009. An example of time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP",
                    "rendered": {
                      "text": ".TP\n.BR \\-ts ,\\  \\-\\-start \\ [\\fIstart-date\\fP]\\ [\\fIstart-time\\fP]\nSearch for events with time stamps equal to or after the given end time. The format of end time depends on your locale. If the date is omitted, \n.B today\nis assumed. If the time is omitted, \n.B midnight\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 09/03/2009. An example of time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP",
                      "markdown": "`.TP\n.BR \\-ts ,\\  \\-\\-start \\ [\\fIstart-date\\fP]\\ [\\fIstart-time\\fP]\nSearch for events with time stamps equal to or after the given end time. The format of end time depends on your locale. If the date is omitted, \n.B today\nis assumed. If the time is omitted, \n.B midnight\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 09/03/2009. An example of time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/aureport.8"
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 18,
                  "endLine": 120,
                  "endColumn": 24,
                  "snippet": {
                    "text": ".BR \\-ts ,\\  \\-\\-start \\ [\\fIstart-date\\fP]\\ [\\fIstart-time\\fP]\nSearch for events with time stamps equal to or after the given end time. The format of end time depends on your locale. If the date is omitted, \n.B today\nis assumed. If the time is omitted, \n.B midnight\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 09/03/2009. An example of time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\n",
                    "rendered": {
                      "text": ".BR \\-ts ,\\  \\-\\-start \\ [\\fIstart-date\\fP]\\ [\\fIstart-time\\fP]\nSearch for events with time stamps equal to or after the given end time. The format of end time depends on your locale. If the date is omitted, \n.B today\nis assumed. If the time is omitted, \n.B midnight\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 09/03/2009. An example of time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\n",
                      "markdown": "`.BR \\-ts ,\\  \\-\\-start \\ [\\fIstart-date\\fP]\\ [\\fIstart-time\\fP]\nSearch for events with time stamps equal to or after the given end time. The format of end time depends on your locale. If the date is omitted, \n.B today\nis assumed. If the time is omitted, \n.B midnight\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 09/03/2009. An example of time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/aureport.8"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 90,
                  "endLine": 118,
                  "endColumn": 96,
                  "snippet": {
                    "text": "Report about terminals\n.TP\n.BR \\-ts ,\\  \\-\\-start \\ [\\fIstart-date\\fP]\\ [\\fIstart-time\\fP]\nSearch for events with time stamps equal to or after the given end time. The format of end time depends on your locale. If the date is omitted, \n.B today\nis assumed. If the time is omitted, \n.B midnight\n",
                    "rendered": {
                      "text": "Report about terminals\n.TP\n.BR \\-ts ,\\  \\-\\-start \\ [\\fIstart-date\\fP]\\ [\\fIstart-time\\fP]\nSearch for events with time stamps equal to or after the given end time. The format of end time depends on your locale. If the date is omitted, \n.B today\nis assumed. If the time is omitted, \n.B midnight\n",
                      "markdown": "`Report about terminals\n.TP\n.BR \\-ts ,\\  \\-\\-start \\ [\\fIstart-date\\fP]\\ [\\fIstart-time\\fP]\nSearch for events with time stamps equal to or after the given end time. The format of end time depends on your locale. If the date is omitted, \n.B today\nis assumed. If the time is omitted, \n.B midnight\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/aureport.8"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 22,
                  "endLine": 118,
                  "endColumn": 28,
                  "snippet": {
                    "text": "Report about terminals\n.TP\n.BR \\-ts ,\\  \\-\\-start \\ [\\fIstart-date\\fP]\\ [\\fIstart-time\\fP]\nSearch for events with time stamps equal to or after the given end time. The format of end time depends on your locale. If the date is omitted, \n.B today\nis assumed. If the time is omitted, \n.B midnight\n",
                    "rendered": {
                      "text": "Report about terminals\n.TP\n.BR \\-ts ,\\  \\-\\-start \\ [\\fIstart-date\\fP]\\ [\\fIstart-time\\fP]\nSearch for events with time stamps equal to or after the given end time. The format of end time depends on your locale. If the date is omitted, \n.B today\nis assumed. If the time is omitted, \n.B midnight\n",
                      "markdown": "`Report about terminals\n.TP\n.BR \\-ts ,\\  \\-\\-start \\ [\\fIstart-date\\fP]\\ [\\fIstart-time\\fP]\nSearch for events with time stamps equal to or after the given end time. The format of end time depends on your locale. If the date is omitted, \n.B today\nis assumed. If the time is omitted, \n.B midnight\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/aureport.8"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 265,
                  "endLine": 112,
                  "endColumn": 271,
                  "snippet": {
                    "text": "e LC_TIME environmental variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP, \\fByesterday\\fP, \\fBthis\\-week\\fP, \\fBweek\\-ago\\fP, \\fBthis\\-month\\fP, \\fBthis\\-year\\fP. \\fBNow\\fP means starting now. \\fBRecent\\fP is 10 minutes ago. \\fBBoot\\fP means the time of day to the second when the system last booted. \\fBToday\\fP means now. \\fBYesterday\\fP is 1 second after midnight the previous day. \\fBThis\\-week\\fP means starting 1 second after midnight on day 0 of the week determined by your locale (see \\fBlocaltime\\fP). \\fBWeek\\-ago\\fP means 1 second after mid",
                    "rendered": {
                      "text": "e LC_TIME environmental variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP, \\fByesterday\\fP, \\fBthis\\-week\\fP, \\fBweek\\-ago\\fP, \\fBthis\\-month\\fP, \\fBthis\\-year\\fP. \\fBNow\\fP means starting now. \\fBRecent\\fP is 10 minutes ago. \\fBBoot\\fP means the time of day to the second when the system last booted. \\fBToday\\fP means now. \\fBYesterday\\fP is 1 second after midnight the previous day. \\fBThis\\-week\\fP means starting 1 second after midnight on day 0 of the week determined by your locale (see \\fBlocaltime\\fP). \\fBWeek\\-ago\\fP means 1 second after mid",
                      "markdown": "`e LC_TIME environmental variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP, \\fByesterday\\fP, \\fBthis\\-week\\fP, \\fBweek\\-ago\\fP, \\fBthis\\-month\\fP, \\fBthis\\-year\\fP. \\fBNow\\fP means starting now. \\fBRecent\\fP is 10 minutes ago. \\fBBoot\\fP means the time of day to the second when the system last booted. \\fBToday\\fP means now. \\fBYesterday\\fP is 1 second after midnight the previous day. \\fBThis\\-week\\fP means starting 1 second after midnight on day 0 of the week determined by your locale (see \\fBlocaltime\\fP). \\fBWeek\\-ago\\fP means 1 second after mid`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/aureport.8"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 145,
                  "endLine": 110,
                  "endColumn": 151,
                  "snippet": {
                    "text": " or before the given end time. The format of end time depends on your locale. If the date is omitted,\n.B today\nis assumed. If the time is omitted, \n.B now\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 09/03/2009. An example of time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP, \\fByesterday\\fP, \\fBthis\\-week\\fP, \\fBweek\\-ago\\fP, \\fBthis\\-month\\fP, \\fBthis\\-year\\fP. \\fBNow\\fP means starting ",
                    "rendered": {
                      "text": " or before the given end time. The format of end time depends on your locale. If the date is omitted,\n.B today\nis assumed. If the time is omitted, \n.B now\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 09/03/2009. An example of time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP, \\fByesterday\\fP, \\fBthis\\-week\\fP, \\fBweek\\-ago\\fP, \\fBthis\\-month\\fP, \\fBthis\\-year\\fP. \\fBNow\\fP means starting ",
                      "markdown": "` or before the given end time. The format of end time depends on your locale. If the date is omitted,\n.B today\nis assumed. If the time is omitted, \n.B now\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 09/03/2009. An example of time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP, \\fByesterday\\fP, \\fBthis\\-week\\fP, \\fBweek\\-ago\\fP, \\fBthis\\-month\\fP, \\fBthis\\-year\\fP. \\fBNow\\fP means starting `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/aureport.8"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 29,
                  "endLine": 110,
                  "endColumn": 35,
                  "snippet": {
                    "text": "keystrokes\n.TP\n.BR \\-te ,\\  \\-\\-end \\ [\\fIend-date\\fP]\\ [\\fIend-time\\fP]\nSearch for events with time stamps equal to or before the given end time. The format of end time depends on your locale. If the date is omitted,\n.B today\nis assumed. If the time is omitted, \n.B now\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 09/03/2009. An example of time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP",
                    "rendered": {
                      "text": "keystrokes\n.TP\n.BR \\-te ,\\  \\-\\-end \\ [\\fIend-date\\fP]\\ [\\fIend-time\\fP]\nSearch for events with time stamps equal to or before the given end time. The format of end time depends on your locale. If the date is omitted,\n.B today\nis assumed. If the time is omitted, \n.B now\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 09/03/2009. An example of time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP",
                      "markdown": "`keystrokes\n.TP\n.BR \\-te ,\\  \\-\\-end \\ [\\fIend-date\\fP]\\ [\\fIend-time\\fP]\nSearch for events with time stamps equal to or before the given end time. The format of end time depends on your locale. If the date is omitted,\n.B today\nis assumed. If the time is omitted, \n.B now\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 09/03/2009. An example of time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\nYou may also use the word: \\fBnow\\fP, \\fBrecent\\fP, \\fBthis-hour\\fP, \\fBboot\\fP, \\fBtoday\\fP`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/aureport.8"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 18,
                  "endLine": 108,
                  "endColumn": 24,
                  "snippet": {
                    "text": ".BR \\-te ,\\  \\-\\-end \\ [\\fIend-date\\fP]\\ [\\fIend-time\\fP]\nSearch for events with time stamps equal to or before the given end time. The format of end time depends on your locale. If the date is omitted,\n.B today\nis assumed. If the time is omitted, \n.B now\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 09/03/2009. An example of time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\n",
                    "rendered": {
                      "text": ".BR \\-te ,\\  \\-\\-end \\ [\\fIend-date\\fP]\\ [\\fIend-time\\fP]\nSearch for events with time stamps equal to or before the given end time. The format of end time depends on your locale. If the date is omitted,\n.B today\nis assumed. If the time is omitted, \n.B now\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 09/03/2009. An example of time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\n",
                      "markdown": "`.BR \\-te ,\\  \\-\\-end \\ [\\fIend-date\\fP]\\ [\\fIend-time\\fP]\nSearch for events with time stamps equal to or before the given end time. The format of end time depends on your locale. If the date is omitted,\n.B today\nis assumed. If the time is omitted, \n.B now\nis assumed. Use 24 hour clock time rather than AM or PM to specify time. An example date using the en_US.utf8 locale is 09/03/2009. An example of time is 18:00:00. The date format accepted is influenced by the LC_TIME environmental variable.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/aureport.8"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 91,
                  "endLine": 106,
                  "endColumn": 97,
                  "snippet": {
                    "text": "Report about tty keystrokes\n.TP\n.BR \\-te ,\\  \\-\\-end \\ [\\fIend-date\\fP]\\ [\\fIend-time\\fP]\nSearch for events with time stamps equal to or before the given end time. The format of end time depends on your locale. If the date is omitted,\n.B today\nis assumed. If the time is omitted, \n.B now\n",
                    "rendered": {
                      "text": "Report about tty keystrokes\n.TP\n.BR \\-te ,\\  \\-\\-end \\ [\\fIend-date\\fP]\\ [\\fIend-time\\fP]\nSearch for events with time stamps equal to or before the given end time. The format of end time depends on your locale. If the date is omitted,\n.B today\nis assumed. If the time is omitted, \n.B now\n",
                      "markdown": "`Report about tty keystrokes\n.TP\n.BR \\-te ,\\  \\-\\-end \\ [\\fIend-date\\fP]\\ [\\fIend-time\\fP]\nSearch for events with time stamps equal to or before the given end time. The format of end time depends on your locale. If the date is omitted,\n.B today\nis assumed. If the time is omitted, \n.B now\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/aureport.8"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 22,
                  "endLine": 106,
                  "endColumn": 28,
                  "snippet": {
                    "text": "Report about tty keystrokes\n.TP\n.BR \\-te ,\\  \\-\\-end \\ [\\fIend-date\\fP]\\ [\\fIend-time\\fP]\nSearch for events with time stamps equal to or before the given end time. The format of end time depends on your locale. If the date is omitted,\n.B today\nis assumed. If the time is omitted, \n.B now\n",
                    "rendered": {
                      "text": "Report about tty keystrokes\n.TP\n.BR \\-te ,\\  \\-\\-end \\ [\\fIend-date\\fP]\\ [\\fIend-time\\fP]\nSearch for events with time stamps equal to or before the given end time. The format of end time depends on your locale. If the date is omitted,\n.B today\nis assumed. If the time is omitted, \n.B now\n",
                      "markdown": "`Report about tty keystrokes\n.TP\n.BR \\-te ,\\  \\-\\-end \\ [\\fIend-date\\fP]\\ [\\fIend-time\\fP]\nSearch for events with time stamps equal to or before the given end time. The format of end time depends on your locale. If the date is omitted,\n.B today\nis assumed. If the time is omitted, \n.B now\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/aureport.8"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 213,
                  "endLine": 8,
                  "endColumn": 218,
                  "snippet": {
                    "text": " reports of audit daemon logs\n.SH SYNOPSIS\n.B aureport\n.RI [ options ]\n.SH DESCRIPTION\n\\fBaureport\\fP is a tool that produces summary reports of the audit system logs. The aureport utility can also take input from stdin as long as the input is the raw log data. The reports have a column label at the top to help with interpretation of the various fields. Except for the main summary report, all reports have the audit event number. You can subsequently lookup the full event with ausearch \\fB\\-a\\fP \\fIevent number\\fP. You may need to specify start & stop times if you get multiple hits. The reports prod",
                    "rendered": {
                      "text": " reports of audit daemon logs\n.SH SYNOPSIS\n.B aureport\n.RI [ options ]\n.SH DESCRIPTION\n\\fBaureport\\fP is a tool that produces summary reports of the audit system logs. The aureport utility can also take input from stdin as long as the input is the raw log data. The reports have a column label at the top to help with interpretation of the various fields. Except for the main summary report, all reports have the audit event number. You can subsequently lookup the full event with ausearch \\fB\\-a\\fP \\fIevent number\\fP. You may need to specify start & stop times if you get multiple hits. The reports prod",
                      "markdown": "` reports of audit daemon logs\n.SH SYNOPSIS\n.B aureport\n.RI [ options ]\n.SH DESCRIPTION\n\\fBaureport\\fP is a tool that produces summary reports of the audit system logs. The aureport utility can also take input from stdin as long as the input is the raw log data. The reports have a column label at the top to help with interpretation of the various fields. Except for the main summary report, all reports have the audit event number. You can subsequently lookup the full event with ausearch \\fB\\-a\\fP \\fIevent number\\fP. You may need to specify start & stop times if you get multiple hits. The reports prod`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auparse_get_node.3"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 21,
                  "endLine": 15,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n.SH \"RETURN VALUE\"\n\nReturns a copy of the node name or NULL if it does not exist or there was an error. The caller must free the string.\n\n.SH \"SEE ALSO\"\n\n",
                    "rendered": {
                      "text": "\n.SH \"RETURN VALUE\"\n\nReturns a copy of the node name or NULL if it does not exist or there was an error. The caller must free the string.\n\n.SH \"SEE ALSO\"\n\n",
                      "markdown": "`\n.SH \"RETURN VALUE\"\n\nReturns a copy of the node name or NULL if it does not exist or there was an error. The caller must free the string.\n\n.SH \"SEE ALSO\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auparse_get_node.3"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 149,
                  "endLine": 11,
                  "endColumn": 155,
                  "snippet": {
                    "text": "\n.SH \"DESCRIPTION\"\n\nauparse_get_node gets the machine's node name if it exists in the audit event from the current event's timestamp data structure. Not all records have node names since its an admin configurable option.\n\n.SH \"RETURN VALUE\"\n\n",
                    "rendered": {
                      "text": "\n.SH \"DESCRIPTION\"\n\nauparse_get_node gets the machine's node name if it exists in the audit event from the current event's timestamp data structure. Not all records have node names since its an admin configurable option.\n\n.SH \"RETURN VALUE\"\n\n",
                      "markdown": "`\n.SH \"DESCRIPTION\"\n\nauparse_get_node gets the machine's node name if it exists in the audit event from the current event's timestamp data structure. Not all records have node names since its an admin configurable option.\n\n.SH \"RETURN VALUE\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auparse_get_node.3"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 35,
                  "endLine": 11,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n.SH \"DESCRIPTION\"\n\nauparse_get_node gets the machine's node name if it exists in the audit event from the current event's timestamp data structure. Not all records have node names since its an admin configurable option.\n\n.SH \"RETURN VALUE\"\n\n",
                    "rendered": {
                      "text": "\n.SH \"DESCRIPTION\"\n\nauparse_get_node gets the machine's node name if it exists in the audit event from the current event's timestamp data structure. Not all records have node names since its an admin configurable option.\n\n.SH \"RETURN VALUE\"\n\n",
                      "markdown": "`\n.SH \"DESCRIPTION\"\n\nauparse_get_node gets the machine's node name if it exists in the audit event from the current event's timestamp data structure. Not all records have node names since its an admin configurable option.\n\n.SH \"RETURN VALUE\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auparse_get_node.3"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 43,
                  "endLine": 3,
                  "endColumn": 49,
                  "snippet": {
                    "text": ".TH \"AUPARSE_GET_NODE\" \"3\" \"Sept 2007\" \"Red Hat\" \"Linux Audit API\"\n.SH NAME\nauparse_get_node \\- get the event's machine node name\n.SH \"SYNOPSIS\"\n.B #include <auparse.h>\n.sp\n",
                    "rendered": {
                      "text": ".TH \"AUPARSE_GET_NODE\" \"3\" \"Sept 2007\" \"Red Hat\" \"Linux Audit API\"\n.SH NAME\nauparse_get_node \\- get the event's machine node name\n.SH \"SYNOPSIS\"\n.B #include <auparse.h>\n.sp\n",
                      "markdown": "`.TH \"AUPARSE_GET_NODE\" \"3\" \"Sept 2007\" \"Red Hat\" \"Linux Audit API\"\n.SH NAME\nauparse_get_node \\- get the event's machine node name\n.SH \"SYNOPSIS\"\n.B #include <auparse.h>\n.sp\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/get_auditfail_action.3"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 3,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": ".if t .sp .5v\n.if n .sp\n..\n.de Ip \\\" List item\n.br\n.ie \\\\n(.$>=3 .ne \\\\$3\n.el .ne 3\n",
                    "rendered": {
                      "text": ".if t .sp .5v\n.if n .sp\n..\n.de Ip \\\" List item\n.br\n.ie \\\\n(.$>=3 .ne \\\\$3\n.el .ne 3\n",
                      "markdown": "`.if t .sp .5v\n.if n .sp\n..\n.de Ip \\\" List item\n.br\n.ie \\\\n(.$>=3 .ne \\\\$3\n.el .ne 3\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/get_auditfail_action.3"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 31,
                  "endLine": 3,
                  "endColumn": 36,
                  "snippet": {
                    "text": ".\\\" Copyright (C) 2006 HP\n.\\\" This file is distributed according to the GNU General Public License.\n.\\\" See the file COPYING in the top level source directory for details.\n.de Sh \\\" Subsection\n.br\n.if t .Sp\n",
                    "rendered": {
                      "text": ".\\\" Copyright (C) 2006 HP\n.\\\" This file is distributed according to the GNU General Public License.\n.\\\" See the file COPYING in the top level source directory for details.\n.de Sh \\\" Subsection\n.br\n.if t .Sp\n",
                      "markdown": "`.\\\" Copyright (C) 2006 HP\n.\\\" This file is distributed according to the GNU General Public License.\n.\\\" See the file COPYING in the top level source directory for details.\n.de Sh \\\" Subsection\n.br\n.if t .Sp\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auparse_goto_record_num.3"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 250,
                  "endLine": 10,
                  "endColumn": 259,
                  "snippet": {
                    "text": "int auparse_goto_record_num(const auparse_state_t *au, unsigned int num);\n\n.SH \"DESCRIPTION\"\nauparse_goto_record_num will move the internal library cursors to point to a specific physical record number. Records within the same event are numbered starting from 0. This is generally not needed but there are some cases where one may want precise control over the exact record being looked at. \n\n.SH \"RETURN VALUE\"\n\n",
                    "rendered": {
                      "text": "int auparse_goto_record_num(const auparse_state_t *au, unsigned int num);\n\n.SH \"DESCRIPTION\"\nauparse_goto_record_num will move the internal library cursors to point to a specific physical record number. Records within the same event are numbered starting from 0. This is generally not needed but there are some cases where one may want precise control over the exact record being looked at. \n\n.SH \"RETURN VALUE\"\n\n",
                      "markdown": "`int auparse_goto_record_num(const auparse_state_t *au, unsigned int num);\n\n.SH \"DESCRIPTION\"\nauparse_goto_record_num will move the internal library cursors to point to a specific physical record number. Records within the same event are numbered starting from 0. This is generally not needed but there are some cases where one may want precise control over the exact record being looked at. \n\n.SH \"RETURN VALUE\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/ausearch_add_timestamp_item_ex.3"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 41,
                  "endLine": 11,
                  "endColumn": 47,
                  "snippet": {
                    "text": "ME\nausearch_add_timestamp_item_ex \\- build up search rule\n.SH \"SYNOPSIS\"\n.B #include <auparse.h>\n.sp\nint ausearch_add_timestamp_item_ex(auparse_state_t *au, const char *op, time_t sec, unsigned milli, unsigned serial, ausearch_rule_t how)\n\n.SH \"DESCRIPTION\"\n\nausearch_add_timestamp_item adds an event time condition to the current audit search expression. The search conditions can then be used to scan logs, files, or buffers for something of interest. The op parameter specifies the desired comparison. Legal op values are \\fI<\\fR, \\fI<=\\fR, \\fI>=\\fR, \\fI>\\fR and \\fI=\\fR.  The left operand of the compar",
                    "rendered": {
                      "text": "ME\nausearch_add_timestamp_item_ex \\- build up search rule\n.SH \"SYNOPSIS\"\n.B #include <auparse.h>\n.sp\nint ausearch_add_timestamp_item_ex(auparse_state_t *au, const char *op, time_t sec, unsigned milli, unsigned serial, ausearch_rule_t how)\n\n.SH \"DESCRIPTION\"\n\nausearch_add_timestamp_item adds an event time condition to the current audit search expression. The search conditions can then be used to scan logs, files, or buffers for something of interest. The op parameter specifies the desired comparison. Legal op values are \\fI<\\fR, \\fI<=\\fR, \\fI>=\\fR, \\fI>\\fR and \\fI=\\fR.  The left operand of the compar",
                      "markdown": "`ME\nausearch_add_timestamp_item_ex \\- build up search rule\n.SH \"SYNOPSIS\"\n.B #include <auparse.h>\n.sp\nint ausearch_add_timestamp_item_ex(auparse_state_t *au, const char *op, time_t sec, unsigned milli, unsigned serial, ausearch_rule_t how)\n\n.SH \"DESCRIPTION\"\n\nausearch_add_timestamp_item adds an event time condition to the current audit search expression. The search conditions can then be used to scan logs, files, or buffers for something of interest. The op parameter specifies the desired comparison. Legal op values are \\fI<\\fR, \\fI<=\\fR, \\fI>=\\fR, \\fI>\\fR and \\fI=\\fR.  The left operand of the compar`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd.8"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 149,
                  "endLine": 95,
                  "endColumn": 158,
                  "snippet": {
                    "text": ".SH NOTES\nA boot param of audit=1 should be added to ensure that all processes that run before the audit daemon starts is marked as auditable by the kernel. Not doing that will make a few processes impossible to properly audit.\n\nThe audit daemon can receive audit events from other audit daemons via the audisp\\-remote plugin. The audit daemon may be linked with tcp_wrappers to control which machines can connect. If this is the case, you can add an entry to hosts.allow and deny.\n\n.SH \"SEE ALSO\"\n.BR auditd.conf (5),\n",
                    "rendered": {
                      "text": ".SH NOTES\nA boot param of audit=1 should be added to ensure that all processes that run before the audit daemon starts is marked as auditable by the kernel. Not doing that will make a few processes impossible to properly audit.\n\nThe audit daemon can receive audit events from other audit daemons via the audisp\\-remote plugin. The audit daemon may be linked with tcp_wrappers to control which machines can connect. If this is the case, you can add an entry to hosts.allow and deny.\n\n.SH \"SEE ALSO\"\n.BR auditd.conf (5),\n",
                      "markdown": "`.SH NOTES\nA boot param of audit=1 should be added to ensure that all processes that run before the audit daemon starts is marked as auditable by the kernel. Not doing that will make a few processes impossible to properly audit.\n\nThe audit daemon can receive audit events from other audit daemons via the audisp\\-remote plugin. The audit daemon may be linked with tcp_wrappers to control which machines can connect. If this is the case, you can add an entry to hosts.allow and deny.\n\n.SH \"SEE ALSO\"\n.BR auditd.conf (5),\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd.8"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 26,
                  "endLine": 78,
                  "endColumn": 30,
                  "snippet": {
                    "text": "- configuration file for audit daemon\n.P\n.B /etc/audit/audit.rules\n- audit rules to be loaded at startup\n.P\n.B /etc/audit/rules.d/\n- directory holding individual sets of rules to be compiled into one file by augenrules.\n",
                    "rendered": {
                      "text": "- configuration file for audit daemon\n.P\n.B /etc/audit/audit.rules\n- audit rules to be loaded at startup\n.P\n.B /etc/audit/rules.d/\n- directory holding individual sets of rules to be compiled into one file by augenrules.\n",
                      "markdown": "`- configuration file for audit daemon\n.P\n.B /etc/audit/audit.rules\n- audit rules to be loaded at startup\n.P\n.B /etc/audit/rules.d/\n- directory holding individual sets of rules to be compiled into one file by augenrules.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auditd.8"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 179,
                  "endLine": 16,
                  "endColumn": 185,
                  "snippet": {
                    "text": ".B auditctl\nutility. During startup, the rules in \\fI/etc/audit/audit.rules\\fP are read by \\fBauditctl\\fP and loaded into the kernel. Alternately, there is also an\n.B augenrules\nprogram that reads rules located in \\fI/etc/audit/rules.d/\\fP and compiles them into an audit.rules file. The audit daemon itself has some configuration options that the admin may wish to customize. They are found in the\n.B auditd.conf\nfile.\n.SH OPTIONS\n",
                    "rendered": {
                      "text": ".B auditctl\nutility. During startup, the rules in \\fI/etc/audit/audit.rules\\fP are read by \\fBauditctl\\fP and loaded into the kernel. Alternately, there is also an\n.B augenrules\nprogram that reads rules located in \\fI/etc/audit/rules.d/\\fP and compiles them into an audit.rules file. The audit daemon itself has some configuration options that the admin may wish to customize. They are found in the\n.B auditd.conf\nfile.\n.SH OPTIONS\n",
                      "markdown": "`.B auditctl\nutility. During startup, the rules in \\fI/etc/audit/audit.rules\\fP are read by \\fBauditctl\\fP and loaded into the kernel. Alternately, there is also an\n.B augenrules\nprogram that reads rules located in \\fI/etc/audit/rules.d/\\fP and compiles them into an audit.rules file. The audit daemon itself has some configuration options that the admin may wish to customize. They are found in the\n.B auditd.conf\nfile.\n.SH OPTIONS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auparse_set_eoe_timeout.3"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 55,
                  "endLine": 11,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\n.SH \"DESCRIPTION\"\n\nauparse_set_eoe_timeout is used to set the end of event timeout value (seconds). The value should be a positive integer. If this function is called, it overrides any setting in /etc/auditd.conf.\nThe function should be called after the \\fIauparse_init()\\fP function call.\n\nFor details on the timeout, see the \\fBend_of_event_timeout\\fP configuration item description in \\fIauditd.conf(5)\\fP.\n",
                    "rendered": {
                      "text": "\n.SH \"DESCRIPTION\"\n\nauparse_set_eoe_timeout is used to set the end of event timeout value (seconds). The value should be a positive integer. If this function is called, it overrides any setting in /etc/auditd.conf.\nThe function should be called after the \\fIauparse_init()\\fP function call.\n\nFor details on the timeout, see the \\fBend_of_event_timeout\\fP configuration item description in \\fIauditd.conf(5)\\fP.\n",
                      "markdown": "`\n.SH \"DESCRIPTION\"\n\nauparse_set_eoe_timeout is used to set the end of event timeout value (seconds). The value should be a positive integer. If this function is called, it overrides any setting in /etc/auditd.conf.\nThe function should be called after the \\fIauparse_init()\\fP function call.\n\nFor details on the timeout, see the \\fBend_of_event_timeout\\fP configuration item description in \\fIauditd.conf(5)\\fP.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auparse_set_eoe_timeout.3"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 47,
                  "endLine": 3,
                  "endColumn": 56,
                  "snippet": {
                    "text": ".TH \"AUPARSE_SET_EOE_TIMEOUT\" \"3\" \"January 2021\" \"Red Hat\" \"Linux Audit API\"\n.SH NAME\nauparse_set_eoe_timeout \\- set the end of event timeout value\n.SH \"SYNOPSIS\"\n.B #include <auparse.h>\n.sp\n",
                    "rendered": {
                      "text": ".TH \"AUPARSE_SET_EOE_TIMEOUT\" \"3\" \"January 2021\" \"Red Hat\" \"Linux Audit API\"\n.SH NAME\nauparse_set_eoe_timeout \\- set the end of event timeout value\n.SH \"SYNOPSIS\"\n.B #include <auparse.h>\n.sp\n",
                      "markdown": "`.TH \"AUPARSE_SET_EOE_TIMEOUT\" \"3\" \"January 2021\" \"Red Hat\" \"Linux Audit API\"\n.SH NAME\nauparse_set_eoe_timeout \\- set the end of event timeout value\n.SH \"SYNOPSIS\"\n.B #include <auparse.h>\n.sp\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/Makefile.am"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 32,
                  "endLine": 2,
                  "endColumn": 37,
                  "snippet": {
                    "text": "# Makefile.am --\n# Copyright 2004-09,2012,2014-18 Red Hat Inc.\n# All Rights Reserved.\n#\n# This program is free software; you can redistribute it and/or modify\n",
                    "rendered": {
                      "text": "# Makefile.am --\n# Copyright 2004-09,2012,2014-18 Red Hat Inc.\n# All Rights Reserved.\n#\n# This program is free software; you can redistribute it and/or modify\n",
                      "markdown": "`# Makefile.am --\n# Copyright 2004-09,2012,2014-18 Red Hat Inc.\n# All Rights Reserved.\n#\n# This program is free software; you can redistribute it and/or modify\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/ausearch_next_event.3"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 147,
                  "endLine": 11,
                  "endColumn": 151,
                  "snippet": {
                    "text": "\n.SH \"DESCRIPTION\"\n\nausearch_next_event will scan the input source and evaluate whether any record in an event contains the data being searched for. Evaluation is done at the record level.\n\n.SH \"RETURN VALUE\"\n\n",
                    "rendered": {
                      "text": "\n.SH \"DESCRIPTION\"\n\nausearch_next_event will scan the input source and evaluate whether any record in an event contains the data being searched for. Evaluation is done at the record level.\n\n.SH \"RETURN VALUE\"\n\n",
                      "markdown": "`\n.SH \"DESCRIPTION\"\n\nausearch_next_event will scan the input source and evaluate whether any record in an event contains the data being searched for. Evaluation is done at the record level.\n\n.SH \"RETURN VALUE\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/ausearch_next_event.3"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 22,
                  "endLine": 3,
                  "endColumn": 28,
                  "snippet": {
                    "text": ".TH \"AUSEARCH_NEXT_EVENT\" \"3\" \"Feb 2007\" \"Red Hat\" \"Linux Audit API\"\n.SH NAME\nausearch_next_event \\- find the next event that meets search criteria\n.SH \"SYNOPSIS\"\n.B #include <auparse.h>\n.sp\n",
                    "rendered": {
                      "text": ".TH \"AUSEARCH_NEXT_EVENT\" \"3\" \"Feb 2007\" \"Red Hat\" \"Linux Audit API\"\n.SH NAME\nausearch_next_event \\- find the next event that meets search criteria\n.SH \"SYNOPSIS\"\n.B #include <auparse.h>\n.sp\n",
                      "markdown": "`.TH \"AUSEARCH_NEXT_EVENT\" \"3\" \"Feb 2007\" \"Red Hat\" \"Linux Audit API\"\n.SH NAME\nausearch_next_event \\- find the next event that meets search criteria\n.SH \"SYNOPSIS\"\n.B #include <auparse.h>\n.sp\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/auparse_find_field_next.3"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 26,
                  "endLine": 3,
                  "endColumn": 32,
                  "snippet": {
                    "text": ".TH \"AUPARSE_FIND_FIELD_NEXT\" \"3\" \"Feb 2007\" \"Red Hat\" \"Linux Audit API\"\n.SH NAME\nauparse_find_field_next \\- find next occurrence of field name\n.SH \"SYNOPSIS\"\n.B #include <auparse.h>\n.sp\n",
                    "rendered": {
                      "text": ".TH \"AUPARSE_FIND_FIELD_NEXT\" \"3\" \"Feb 2007\" \"Red Hat\" \"Linux Audit API\"\n.SH NAME\nauparse_find_field_next \\- find next occurrence of field name\n.SH \"SYNOPSIS\"\n.B #include <auparse.h>\n.sp\n",
                      "markdown": "`.TH \"AUPARSE_FIND_FIELD_NEXT\" \"3\" \"Feb 2007\" \"Red Hat\" \"Linux Audit API\"\n.SH NAME\nauparse_find_field_next \\- find next occurrence of field name\n.SH \"SYNOPSIS\"\n.B #include <auparse.h>\n.sp\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/docs/audit_log_semanage_message.3"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 11,
                  "endLine": 32,
                  "endColumn": 19,
                  "snippet": {
                    "text": "old_seuser - the old seuser that the login usr had\nold_role - the old role that the login user had\nold_range - the old mls range that the login usr had\nhost - The hostname if known\naddr - The network address of the user\ntty  - The tty of the user\nresult - 1 is \"success\" and 0 is \"failed\"\n",
                    "rendered": {
                      "text": "old_seuser - the old seuser that the login usr had\nold_role - the old role that the login user had\nold_range - the old mls range that the login usr had\nhost - The hostname if known\naddr - The network address of the user\ntty  - The tty of the user\nresult - 1 is \"success\" and 0 is \"failed\"\n",
                      "markdown": "`old_seuser - the old seuser that the login usr had\nold_role - the old role that the login user had\nold_range - the old mls range that the login usr had\nhost - The hostname if known\naddr - The network address of the user\ntty  - The tty of the user\nresult - 1 is \"success\" and 0 is \"failed\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/test/Makefile.am"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 16,
                  "endLine": 1,
                  "endColumn": 21,
                  "snippet": {
                    "text": "# Copyright 2008 Red Hat Inc.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                    "rendered": {
                      "text": "# Copyright 2008 Red Hat Inc.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                      "markdown": "`# Copyright 2008 Red Hat Inc.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/lib/Makefile.am"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 29,
                  "endLine": 2,
                  "endColumn": 34,
                  "snippet": {
                    "text": "# Makefile.am -- \n# Copyright 2004-2009,2013-23 Red Hat Inc.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                    "rendered": {
                      "text": "# Makefile.am -- \n# Copyright 2004-2009,2013-23 Red Hat Inc.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                      "markdown": "`# Makefile.am -- \n# Copyright 2004-2009,2013-23 Red Hat Inc.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/libev/README"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 49,
                  "endLine": 53,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\n   The following people sent in patches or made other noteworthy\n   contributions to the design (for minor patches, see the Changes\n   file. If I forgot to include you, please shout at me, it was an\n   accident):\n\n   W.C.A. Wijngaards\n",
                    "rendered": {
                      "text": "\n   The following people sent in patches or made other noteworthy\n   contributions to the design (for minor patches, see the Changes\n   file. If I forgot to include you, please shout at me, it was an\n   accident):\n\n   W.C.A. Wijngaards\n",
                      "markdown": "`\n   The following people sent in patches or made other noteworthy\n   contributions to the design (for minor patches, see the Changes\n   file. If I forgot to include you, please shout at me, it was an\n   accident):\n\n   W.C.A. Wijngaards\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/libev/README"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 4,
                  "endLine": 35,
                  "endColumn": 8,
                  "snippet": {
                    "text": "     integrate other event loops, integrate other event loop users.\n   - very little memory use (small watchers, small event loop data).\n   - optional C++ interface allowing method and function callbacks\n     at no extra memory or runtime overhead.\n   - optional Perl interface with similar characteristics (capable\n     of running Glib/Gtk2 on libev).\n   - support for other languages (multiple C++ interfaces, D, Ruby,\n",
                    "rendered": {
                      "text": "     integrate other event loops, integrate other event loop users.\n   - very little memory use (small watchers, small event loop data).\n   - optional C++ interface allowing method and function callbacks\n     at no extra memory or runtime overhead.\n   - optional Perl interface with similar characteristics (capable\n     of running Glib/Gtk2 on libev).\n   - support for other languages (multiple C++ interfaces, D, Ruby,\n",
                      "markdown": "`     integrate other event loops, integrate other event loop users.\n   - very little memory use (small watchers, small event loop data).\n   - optional C++ interface allowing method and function callbacks\n     at no extra memory or runtime overhead.\n   - optional Perl interface with similar characteristics (capable\n     of running Glib/Gtk2 on libev).\n   - support for other languages (multiple C++ interfaces, D, Ruby,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/libev/README"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 14,
                  "endLine": 2,
                  "endColumn": 18,
                  "snippet": {
                    "text": "libev is a high-performance event loop/event model with lots of features.\n(see benchmark at http://libev.schmorp.de/bench.html)\n\n\nABOUT\n",
                    "rendered": {
                      "text": "libev is a high-performance event loop/event model with lots of features.\n(see benchmark at http://libev.schmorp.de/bench.html)\n\n\nABOUT\n",
                      "markdown": "`libev is a high-performance event loop/event model with lots of features.\n(see benchmark at http://libev.schmorp.de/bench.html)\n\n\nABOUT\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/libev/README"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 18,
                  "endLine": 44,
                  "endColumn": 24,
                  "snippet": {
                    "text": "   Examples of programs that embed libev: the EV perl module, node.js,\n   auditd, rxvt-unicode, gvpe (GNU Virtual Private Ethernet), the\n   Deliantra MMORPG server (http://www.deliantra.net/), Rubinius (a\n   next-generation Ruby VM), the Ebb web server, the Rev event toolkit.\n\n\nCONTRIBUTORS\n",
                    "rendered": {
                      "text": "   Examples of programs that embed libev: the EV perl module, node.js,\n   auditd, rxvt-unicode, gvpe (GNU Virtual Private Ethernet), the\n   Deliantra MMORPG server (http://www.deliantra.net/), Rubinius (a\n   next-generation Ruby VM), the Ebb web server, the Rev event toolkit.\n\n\nCONTRIBUTORS\n",
                      "markdown": "`   Examples of programs that embed libev: the EV perl module, node.js,\n   auditd, rxvt-unicode, gvpe (GNU Virtual Private Ethernet), the\n   Deliantra MMORPG server (http://www.deliantra.net/), Rubinius (a\n   next-generation Ruby VM), the Ebb web server, the Rev event toolkit.\n\n\nCONTRIBUTORS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/libev/README"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 48,
                  "endLine": 41,
                  "endColumn": 54,
                  "snippet": {
                    "text": "   - support for other languages (multiple C++ interfaces, D, Ruby,\n     Python) available from third-parties.\n\n   Examples of programs that embed libev: the EV perl module, node.js,\n   auditd, rxvt-unicode, gvpe (GNU Virtual Private Ethernet), the\n   Deliantra MMORPG server (http://www.deliantra.net/), Rubinius (a\n   next-generation Ruby VM), the Ebb web server, the Rev event toolkit.\n",
                    "rendered": {
                      "text": "   - support for other languages (multiple C++ interfaces, D, Ruby,\n     Python) available from third-parties.\n\n   Examples of programs that embed libev: the EV perl module, node.js,\n   auditd, rxvt-unicode, gvpe (GNU Virtual Private Ethernet), the\n   Deliantra MMORPG server (http://www.deliantra.net/), Rubinius (a\n   next-generation Ruby VM), the Ebb web server, the Rev event toolkit.\n",
                      "markdown": "`   - support for other languages (multiple C++ interfaces, D, Ruby,\n     Python) available from third-parties.\n\n   Examples of programs that embed libev: the EV perl module, node.js,\n   auditd, rxvt-unicode, gvpe (GNU Virtual Private Ethernet), the\n   Deliantra MMORPG server (http://www.deliantra.net/), Rubinius (a\n   next-generation Ruby VM), the Ebb web server, the Rev event toolkit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/libev/README"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 13,
                  "endLine": 36,
                  "endColumn": 19,
                  "snippet": {
                    "text": "   - very little memory use (small watchers, small event loop data).\n   - optional C++ interface allowing method and function callbacks\n     at no extra memory or runtime overhead.\n   - optional Perl interface with similar characteristics (capable\n     of running Glib/Gtk2 on libev).\n   - support for other languages (multiple C++ interfaces, D, Ruby,\n     Python) available from third-parties.\n",
                    "rendered": {
                      "text": "   - very little memory use (small watchers, small event loop data).\n   - optional C++ interface allowing method and function callbacks\n     at no extra memory or runtime overhead.\n   - optional Perl interface with similar characteristics (capable\n     of running Glib/Gtk2 on libev).\n   - support for other languages (multiple C++ interfaces, D, Ruby,\n     Python) available from third-parties.\n",
                      "markdown": "`   - very little memory use (small watchers, small event loop data).\n   - optional C++ interface allowing method and function callbacks\n     at no extra memory or runtime overhead.\n   - optional Perl interface with similar characteristics (capable\n     of running Glib/Gtk2 on libev).\n   - support for other languages (multiple C++ interfaces, D, Ruby,\n     Python) available from third-parties.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/libev/README"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 37,
                  "endLine": 25,
                  "endColumn": 43,
                  "snippet": {
                    "text": "     and solaris event ports backends.\n   - filesystem object (path) watching (with optional linux inotify support).\n   - wallclock-based times (using absolute time, cron-like).\n   - relative timers/timeouts (handle time jumps).\n   - fast intra-thread communication between multiple\n     event loops (with optional fast linux eventfd backend).\n   - extremely easy to embed (fully documented, no dependencies,\n",
                    "rendered": {
                      "text": "     and solaris event ports backends.\n   - filesystem object (path) watching (with optional linux inotify support).\n   - wallclock-based times (using absolute time, cron-like).\n   - relative timers/timeouts (handle time jumps).\n   - fast intra-thread communication between multiple\n     event loops (with optional fast linux eventfd backend).\n   - extremely easy to embed (fully documented, no dependencies,\n",
                      "markdown": "`     and solaris event ports backends.\n   - filesystem object (path) watching (with optional linux inotify support).\n   - wallclock-based times (using absolute time, cron-like).\n   - relative timers/timeouts (handle time jumps).\n   - fast intra-thread communication between multiple\n     event loops (with optional fast linux eventfd backend).\n   - extremely easy to embed (fully documented, no dependencies,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/libev/README"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 63,
                  "endLine": 13,
                  "snippet": {
                    "text": "                http://lists.schmorp.de/cgi-bin/mailman/listinfo/libev\n   Library Documentation: http://pod.tst.eu/http://cvs.schmorp.de/libev/ev.pod\n\n   Libev is modelled (very losely) after libevent and the Event perl\n   module, but is faster, scales better and is more correct, and also more\n   featureful. And also smaller. Yay.\n\n   Some of the specialties of libev not commonly found elsewhere are:\n",
                    "rendered": {
                      "text": "                http://lists.schmorp.de/cgi-bin/mailman/listinfo/libev\n   Library Documentation: http://pod.tst.eu/http://cvs.schmorp.de/libev/ev.pod\n\n   Libev is modelled (very losely) after libevent and the Event perl\n   module, but is faster, scales better and is more correct, and also more\n   featureful. And also smaller. Yay.\n\n   Some of the specialties of libev not commonly found elsewhere are:\n",
                      "markdown": "`                http://lists.schmorp.de/cgi-bin/mailman/listinfo/libev\n   Library Documentation: http://pod.tst.eu/http://cvs.schmorp.de/libev/ev.pod\n\n   Libev is modelled (very losely) after libevent and the Event perl\n   module, but is faster, scales better and is more correct, and also more\n   featureful. And also smaller. Yay.\n\n   Some of the specialties of libev not commonly found elsewhere are:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/libev/event.c"
                },
                "region": {
                  "startLine": 327,
                  "startColumn": 19,
                  "endLine": 327,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n      if (tv)\n        {\n          ev_tstamp at = ev_now (EV_A);\n\n          tv->tv_sec  = (long)at;\n          tv->tv_usec = (long)((at - (ev_tstamp)tv->tv_sec) * 1e6);\n",
                    "rendered": {
                      "text": "\n      if (tv)\n        {\n          ev_tstamp at = ev_now (EV_A);\n\n          tv->tv_sec  = (long)at;\n          tv->tv_usec = (long)((at - (ev_tstamp)tv->tv_sec) * 1e6);\n",
                      "markdown": "`\n      if (tv)\n        {\n          ev_tstamp at = ev_now (EV_A);\n\n          tv->tv_sec  = (long)at;\n          tv->tv_usec = (long)((at - (ev_tstamp)tv->tv_sec) * 1e6);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/libev/ev.c"
                },
                "region": {
                  "startLine": 3873,
                  "startColumn": 5,
                  "endLine": 3873,
                  "endColumn": 9,
                  "snippet": {
                    "text": "          break;\n        }\n\n      at = nat;\n    }\n\n  ev_at (w) = at;\n",
                    "rendered": {
                      "text": "          break;\n        }\n\n      at = nat;\n    }\n\n  ev_at (w) = at;\n",
                      "markdown": "`          break;\n        }\n\n      at = nat;\n    }\n\n  ev_at (w) = at;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/libev/ev.c"
                },
                "region": {
                  "startLine": 3869,
                  "startColumn": 9,
                  "endLine": 3869,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      /* when resolution fails us, we use ev_rt_now */\n      if (ecb_expect_false (nat == at))\n        {\n          at = ev_rt_now;\n          break;\n        }\n\n",
                    "rendered": {
                      "text": "      /* when resolution fails us, we use ev_rt_now */\n      if (ecb_expect_false (nat == at))\n        {\n          at = ev_rt_now;\n          break;\n        }\n\n",
                      "markdown": "`      /* when resolution fails us, we use ev_rt_now */\n      if (ecb_expect_false (nat == at))\n        {\n          at = ev_rt_now;\n          break;\n        }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/libev/ev.c"
                },
                "region": {
                  "startLine": 3864,
                  "startColumn": 21,
                  "endLine": 3864,
                  "endColumn": 25,
                  "snippet": {
                    "text": "  /* the above almost always errs on the low side */\n  while (at <= ev_rt_now)\n    {\n      ev_tstamp nat = at + w->interval;\n\n      /* when resolution fails us, we use ev_rt_now */\n      if (ecb_expect_false (nat == at))\n",
                    "rendered": {
                      "text": "  /* the above almost always errs on the low side */\n  while (at <= ev_rt_now)\n    {\n      ev_tstamp nat = at + w->interval;\n\n      /* when resolution fails us, we use ev_rt_now */\n      if (ecb_expect_false (nat == at))\n",
                      "markdown": "`  /* the above almost always errs on the low side */\n  while (at <= ev_rt_now)\n    {\n      ev_tstamp nat = at + w->interval;\n\n      /* when resolution fails us, we use ev_rt_now */\n      if (ecb_expect_false (nat == at))\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/libev/ev.c"
                },
                "region": {
                  "startLine": 3859,
                  "startColumn": 11,
                  "endLine": 3859,
                  "endColumn": 15,
                  "snippet": {
                    "text": "periodic_recalc (EV_P_ ev_periodic *w)\n{\n  ev_tstamp interval = w->interval > MIN_INTERVAL ? w->interval : MIN_INTERVAL;\n  ev_tstamp at = w->offset + interval * ev_floor ((ev_rt_now - w->offset) / interval);\n\n  /* the above almost always errs on the low side */\n  while (at <= ev_rt_now)\n",
                    "rendered": {
                      "text": "periodic_recalc (EV_P_ ev_periodic *w)\n{\n  ev_tstamp interval = w->interval > MIN_INTERVAL ? w->interval : MIN_INTERVAL;\n  ev_tstamp at = w->offset + interval * ev_floor ((ev_rt_now - w->offset) / interval);\n\n  /* the above almost always errs on the low side */\n  while (at <= ev_rt_now)\n",
                      "markdown": "`periodic_recalc (EV_P_ ev_periodic *w)\n{\n  ev_tstamp interval = w->interval > MIN_INTERVAL ? w->interval : MIN_INTERVAL;\n  ev_tstamp at = w->offset + interval * ev_floor ((ev_rt_now - w->offset) / interval);\n\n  /* the above almost always errs on the low side */\n  while (at <= ev_rt_now)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/libev/ev.c"
                },
                "region": {
                  "startLine": 3601,
                  "startColumn": 27,
                  "endLine": 3601,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    {\n      assert ((\"libev: active index mismatch in heap\", ev_active (ANHE_w (heap [i])) == i));\n      assert ((\"libev: heap condition violated\", i == HEAP0 || ANHE_at (heap [HPARENT (i)]) <= ANHE_at (heap [i])));\n      assert ((\"libev: heap at cache mismatch\", ANHE_at (heap [i]) == ev_at (ANHE_w (heap [i]))));\n\n      verify_watcher (EV_A_ (W)ANHE_w (heap [i]));\n    }\n",
                    "rendered": {
                      "text": "    {\n      assert ((\"libev: active index mismatch in heap\", ev_active (ANHE_w (heap [i])) == i));\n      assert ((\"libev: heap condition violated\", i == HEAP0 || ANHE_at (heap [HPARENT (i)]) <= ANHE_at (heap [i])));\n      assert ((\"libev: heap at cache mismatch\", ANHE_at (heap [i]) == ev_at (ANHE_w (heap [i]))));\n\n      verify_watcher (EV_A_ (W)ANHE_w (heap [i]));\n    }\n",
                      "markdown": "`    {\n      assert ((\"libev: active index mismatch in heap\", ev_active (ANHE_w (heap [i])) == i));\n      assert ((\"libev: heap condition violated\", i == HEAP0 || ANHE_at (heap [HPARENT (i)]) <= ANHE_at (heap [i])));\n      assert ((\"libev: heap at cache mismatch\", ANHE_at (heap [i]) == ev_at (ANHE_w (heap [i]))));\n\n      verify_watcher (EV_A_ (W)ANHE_w (heap [i]));\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/libev/ev.c"
                },
                "region": {
                  "startLine": 4284,
                  "startColumn": 5,
                  "endLine": 4284,
                  "endColumn": 11,
                  "snippet": {
                    "text": "          break;\n        }\n\n      head = &(*head)->next;\n    }\n}\n\n",
                    "rendered": {
                      "text": "          break;\n        }\n\n      head = &(*head)->next;\n    }\n}\n\n",
                      "markdown": "`          break;\n        }\n\n      head = &(*head)->next;\n    }\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/libev/ev.c"
                },
                "region": {
                  "startLine": 3998,
                  "startColumn": 9,
                  "endLine": 3998,
                  "endColumn": 15,
                  "snippet": {
                    "text": "          ev_tstamp diff;\n          rtmn_diff = ev_rt_now - mn_now;\n\n          diff = odiff - rtmn_diff;\n\n          if (ecb_expect_true ((diff < EV_TS_CONST (0.) ? -diff : diff) < EV_TS_CONST (MIN_TIMEJUMP)))\n            return; /* all is well */\n",
                    "rendered": {
                      "text": "          ev_tstamp diff;\n          rtmn_diff = ev_rt_now - mn_now;\n\n          diff = odiff - rtmn_diff;\n\n          if (ecb_expect_true ((diff < EV_TS_CONST (0.) ? -diff : diff) < EV_TS_CONST (MIN_TIMEJUMP)))\n            return; /* all is well */\n",
                      "markdown": "`          ev_tstamp diff;\n          rtmn_diff = ev_rt_now - mn_now;\n\n          diff = odiff - rtmn_diff;\n\n          if (ecb_expect_true ((diff < EV_TS_CONST (0.) ? -diff : diff) < EV_TS_CONST (MIN_TIMEJUMP)))\n            return; /* all is well */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/libev/ev.c"
                },
                "region": {
                  "startLine": 3898,
                  "startColumn": 71,
                  "endLine": 3898,
                  "endColumn": 77,
                  "snippet": {
                    "text": "            {\n              ev_at (w) = w->reschedule_cb (w, ev_rt_now);\n\n              assert ((\"libev: ev_periodic reschedule callback returned time in the past\", ev_at (w) >= ev_rt_now));\n\n              ANHE_at_cache (periodics [HEAP0]);\n              downheap (periodics, periodiccnt, HEAP0);\n",
                    "rendered": {
                      "text": "            {\n              ev_at (w) = w->reschedule_cb (w, ev_rt_now);\n\n              assert ((\"libev: ev_periodic reschedule callback returned time in the past\", ev_at (w) >= ev_rt_now));\n\n              ANHE_at_cache (periodics [HEAP0]);\n              downheap (periodics, periodiccnt, HEAP0);\n",
                      "markdown": "`            {\n              ev_at (w) = w->reschedule_cb (w, ev_rt_now);\n\n              assert ((\"libev: ev_periodic reschedule callback returned time in the past\", ev_at (w) >= ev_rt_now));\n\n              ANHE_at_cache (periodics [HEAP0]);\n              downheap (periodics, periodiccnt, HEAP0);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditd-config.c"
                },
                "region": {
                  "startLine": 2084,
                  "startColumn": 21,
                  "endLine": 2084,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t\t\trc2 = getaddrinfo(tmp_name, NULL, &hints, &ai);\n\t\t\t\tif (rc2) {\n\t\t\t\t\taudit_msg(LOG_ERR,\n\t\t\t\t\t\"Cannot resolve hostname %s (%s)\",\n\t\t\t\t\ttmp_name, gai_strerror(rc2));\n\t\t\t\t\trc = -1;\n\t\t\t\t\tbreak;\n",
                    "rendered": {
                      "text": "\t\t\t\trc2 = getaddrinfo(tmp_name, NULL, &hints, &ai);\n\t\t\t\tif (rc2) {\n\t\t\t\t\taudit_msg(LOG_ERR,\n\t\t\t\t\t\"Cannot resolve hostname %s (%s)\",\n\t\t\t\t\ttmp_name, gai_strerror(rc2));\n\t\t\t\t\trc = -1;\n\t\t\t\t\tbreak;\n",
                      "markdown": "`\t\t\t\trc2 = getaddrinfo(tmp_name, NULL, &hints, &ai);\n\t\t\t\tif (rc2) {\n\t\t\t\t\taudit_msg(LOG_ERR,\n\t\t\t\t\t\"Cannot resolve hostname %s (%s)\",\n\t\t\t\t\ttmp_name, gai_strerror(rc2));\n\t\t\t\t\trc = -1;\n\t\t\t\t\tbreak;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditd-config.c"
                },
                "region": {
                  "startLine": 2055,
                  "startColumn": 21,
                  "endLine": 2055,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t\t\trc2 = getaddrinfo(tmp_name, NULL, &hints, &ai);\n\t\t\t\tif (rc2 != 0) {\n\t\t\t\t\taudit_msg(LOG_ERR,\n\t\t\t\t\t\"Cannot resolve hostname %s (%s)\",\n\t\t\t\t\ttmp_name, gai_strerror(rc2));\n\t\t\t\t\trc = -1;\n\t\t\t\t\tbreak;\n",
                    "rendered": {
                      "text": "\t\t\t\trc2 = getaddrinfo(tmp_name, NULL, &hints, &ai);\n\t\t\t\tif (rc2 != 0) {\n\t\t\t\t\taudit_msg(LOG_ERR,\n\t\t\t\t\t\"Cannot resolve hostname %s (%s)\",\n\t\t\t\t\ttmp_name, gai_strerror(rc2));\n\t\t\t\t\trc = -1;\n\t\t\t\t\tbreak;\n",
                      "markdown": "`\t\t\t\trc2 = getaddrinfo(tmp_name, NULL, &hints, &ai);\n\t\t\t\tif (rc2 != 0) {\n\t\t\t\t\taudit_msg(LOG_ERR,\n\t\t\t\t\t\"Cannot resolve hostname %s (%s)\",\n\t\t\t\t\ttmp_name, gai_strerror(rc2));\n\t\t\t\t\trc = -1;\n\t\t\t\t\tbreak;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditd-config.c"
                },
                "region": {
                  "startLine": 239,
                  "startColumn": 4,
                  "endLine": 239,
                  "endColumn": 12,
                  "snippet": {
                    "text": "static const struct nv_list node_name_formats[] =\n{\n  {\"none\",      N_NONE },\n  {\"hostname\",  N_HOSTNAME },\n  {\"fqd\",       N_FQD },\n  {\"numeric\",   N_NUMERIC },\n  {\"user\",      N_USER },\n",
                    "rendered": {
                      "text": "static const struct nv_list node_name_formats[] =\n{\n  {\"none\",      N_NONE },\n  {\"hostname\",  N_HOSTNAME },\n  {\"fqd\",       N_FQD },\n  {\"numeric\",   N_NUMERIC },\n  {\"user\",      N_USER },\n",
                      "markdown": "`static const struct nv_list node_name_formats[] =\n{\n  {\"none\",      N_NONE },\n  {\"hostname\",  N_HOSTNAME },\n  {\"fqd\",       N_FQD },\n  {\"numeric\",   N_NUMERIC },\n  {\"user\",      N_USER },\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditd-config.c"
                },
                "region": {
                  "startLine": 1702,
                  "startColumn": 48,
                  "endLine": 1702,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\taudit_msg(LOG_DEBUG, \"krb5_key_file_parser called with: %s\", nv->value);\n#ifndef USE_GSSAPI\n\taudit_msg(LOG_DEBUG,\n\t\t\"GSSAPI support is not enabled, ignoring value at line %d\",\n\t\tline);\n#else\n\tconfig->krb5_key_file = strdup(nv->value);\n",
                    "rendered": {
                      "text": "\taudit_msg(LOG_DEBUG, \"krb5_key_file_parser called with: %s\", nv->value);\n#ifndef USE_GSSAPI\n\taudit_msg(LOG_DEBUG,\n\t\t\"GSSAPI support is not enabled, ignoring value at line %d\",\n\t\tline);\n#else\n\tconfig->krb5_key_file = strdup(nv->value);\n",
                      "markdown": "`\taudit_msg(LOG_DEBUG, \"krb5_key_file_parser called with: %s\", nv->value);\n#ifndef USE_GSSAPI\n\taudit_msg(LOG_DEBUG,\n\t\t\"GSSAPI support is not enabled, ignoring value at line %d\",\n\t\tline);\n#else\n\tconfig->krb5_key_file = strdup(nv->value);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditd-config.c"
                },
                "region": {
                  "startLine": 1688,
                  "startColumn": 48,
                  "endLine": 1688,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\taudit_msg(LOG_DEBUG,\"krb5_principal_parser called with: %s\",nv->value);\n#ifndef USE_GSSAPI\n\taudit_msg(LOG_DEBUG,\n\t\t\"GSSAPI support is not enabled, ignoring value at line %d\",\n\t\tline);\n#else\n\tconfig->krb5_principal = strdup(nv->value);\n",
                    "rendered": {
                      "text": "\taudit_msg(LOG_DEBUG,\"krb5_principal_parser called with: %s\",nv->value);\n#ifndef USE_GSSAPI\n\taudit_msg(LOG_DEBUG,\n\t\t\"GSSAPI support is not enabled, ignoring value at line %d\",\n\t\tline);\n#else\n\tconfig->krb5_principal = strdup(nv->value);\n",
                      "markdown": "`\taudit_msg(LOG_DEBUG,\"krb5_principal_parser called with: %s\",nv->value);\n#ifndef USE_GSSAPI\n\taudit_msg(LOG_DEBUG,\n\t\t\"GSSAPI support is not enabled, ignoring value at line %d\",\n\t\tline);\n#else\n\tconfig->krb5_principal = strdup(nv->value);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditd-config.c"
                },
                "region": {
                  "startLine": 1664,
                  "startColumn": 48,
                  "endLine": 1664,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\n#ifndef USE_GSSAPI\n\taudit_msg(LOG_DEBUG,\n\t\t\"GSSAPI support is not enabled, ignoring value at line %d\",\n\t\tline);\n\treturn 0;\n#else\n",
                    "rendered": {
                      "text": "\n#ifndef USE_GSSAPI\n\taudit_msg(LOG_DEBUG,\n\t\t\"GSSAPI support is not enabled, ignoring value at line %d\",\n\t\tline);\n\treturn 0;\n#else\n",
                      "markdown": "`\n#ifndef USE_GSSAPI\n\taudit_msg(LOG_DEBUG,\n\t\t\"GSSAPI support is not enabled, ignoring value at line %d\",\n\t\tline);\n\treturn 0;\n#else\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditd-config.c"
                },
                "region": {
                  "startLine": 1601,
                  "startColumn": 50,
                  "endLine": 1601,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\n#ifndef USE_LISTENER\n\taudit_msg(LOG_DEBUG,\n\t\t\"Listener support is not enabled, ignoring value at line %d\",\n\t\tline);\n\treturn 0;\n#else\n",
                    "rendered": {
                      "text": "\n#ifndef USE_LISTENER\n\taudit_msg(LOG_DEBUG,\n\t\t\"Listener support is not enabled, ignoring value at line %d\",\n\t\tline);\n\treturn 0;\n#else\n",
                      "markdown": "`\n#ifndef USE_LISTENER\n\taudit_msg(LOG_DEBUG,\n\t\t\"Listener support is not enabled, ignoring value at line %d\",\n\t\tline);\n\treturn 0;\n#else\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditd-config.c"
                },
                "region": {
                  "startLine": 1519,
                  "startColumn": 50,
                  "endLine": 1519,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\n#ifndef USE_LISTENER\n\taudit_msg(LOG_DEBUG,\n\t\t\"Listener support is not enabled, ignoring value at line %d\",\n\t\tline);\n\treturn 0;\n#else\n",
                    "rendered": {
                      "text": "\n#ifndef USE_LISTENER\n\taudit_msg(LOG_DEBUG,\n\t\t\"Listener support is not enabled, ignoring value at line %d\",\n\t\tline);\n\treturn 0;\n#else\n",
                      "markdown": "`\n#ifndef USE_LISTENER\n\taudit_msg(LOG_DEBUG,\n\t\t\"Listener support is not enabled, ignoring value at line %d\",\n\t\tline);\n\treturn 0;\n#else\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditd-config.c"
                },
                "region": {
                  "startLine": 1446,
                  "startColumn": 50,
                  "endLine": 1446,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\n#ifndef USE_LISTENER\n\taudit_msg(LOG_DEBUG,\n\t\t\"Listener support is not enabled, ignoring value at line %d\",\n\t\tline);\n\treturn 0;\n#else\n",
                    "rendered": {
                      "text": "\n#ifndef USE_LISTENER\n\taudit_msg(LOG_DEBUG,\n\t\t\"Listener support is not enabled, ignoring value at line %d\",\n\t\tline);\n\treturn 0;\n#else\n",
                      "markdown": "`\n#ifndef USE_LISTENER\n\taudit_msg(LOG_DEBUG,\n\t\t\"Listener support is not enabled, ignoring value at line %d\",\n\t\tline);\n\treturn 0;\n#else\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditd-config.c"
                },
                "region": {
                  "startLine": 1391,
                  "startColumn": 50,
                  "endLine": 1391,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\n#ifndef USE_LISTENER\n\taudit_msg(LOG_DEBUG,\n\t\t\"Listener support is not enabled, ignoring value at line %d\",\n\t\tline);\n\treturn 0;\n#else\n",
                    "rendered": {
                      "text": "\n#ifndef USE_LISTENER\n\taudit_msg(LOG_DEBUG,\n\t\t\"Listener support is not enabled, ignoring value at line %d\",\n\t\tline);\n\treturn 0;\n#else\n",
                      "markdown": "`\n#ifndef USE_LISTENER\n\taudit_msg(LOG_DEBUG,\n\t\t\"Listener support is not enabled, ignoring value at line %d\",\n\t\tline);\n\treturn 0;\n#else\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditd-config.c"
                },
                "region": {
                  "startLine": 1339,
                  "startColumn": 50,
                  "endLine": 1339,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\n#ifndef USE_LISTENER\n\taudit_msg(LOG_DEBUG,\n\t\t\"Listener support is not enabled, ignoring value at line %d\",\n\t\tline);\n\treturn 0;\n#else\n",
                    "rendered": {
                      "text": "\n#ifndef USE_LISTENER\n\taudit_msg(LOG_DEBUG,\n\t\t\"Listener support is not enabled, ignoring value at line %d\",\n\t\tline);\n\treturn 0;\n#else\n",
                      "markdown": "`\n#ifndef USE_LISTENER\n\taudit_msg(LOG_DEBUG,\n\t\t\"Listener support is not enabled, ignoring value at line %d\",\n\t\tline);\n\treturn 0;\n#else\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditd-config.c"
                },
                "region": {
                  "startLine": 1058,
                  "startColumn": 40,
                  "endLine": 1058,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\tlen = strlen(acct);\n\tif (len < 2) {\n\t\taudit_msg(LOG_ERR,\n\t\t    \"email: %s is too short, expecting at least 2 characters\",\n\t\t\t acct);\n\t\treturn 2;\n\t}\n",
                    "rendered": {
                      "text": "\tlen = strlen(acct);\n\tif (len < 2) {\n\t\taudit_msg(LOG_ERR,\n\t\t    \"email: %s is too short, expecting at least 2 characters\",\n\t\t\t acct);\n\t\treturn 2;\n\t}\n",
                      "markdown": "`\tlen = strlen(acct);\n\tif (len < 2) {\n\t\taudit_msg(LOG_ERR,\n\t\t    \"email: %s is too short, expecting at least 2 characters\",\n\t\t\t acct);\n\t\treturn 2;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditd-config.c"
                },
                "region": {
                  "startLine": 2100,
                  "startColumn": 32,
                  "endLine": 2100,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t\t\tbreak;\n\t}\n\tif (rc == 0 && config->node_name)\n\t\taudit_msg(LOG_DEBUG, \"Resolved node name: %s\",\n\t\t\t\tconfig->node_name);\n\treturn rc;\n}\n",
                    "rendered": {
                      "text": "\t\t\tbreak;\n\t}\n\tif (rc == 0 && config->node_name)\n\t\taudit_msg(LOG_DEBUG, \"Resolved node name: %s\",\n\t\t\t\tconfig->node_name);\n\treturn rc;\n}\n",
                      "markdown": "`\t\t\tbreak;\n\t}\n\tif (rc == 0 && config->node_name)\n\t\taudit_msg(LOG_DEBUG, \"Resolved node name: %s\",\n\t\t\t\tconfig->node_name);\n\treturn rc;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditd-config.c"
                },
                "region": {
                  "startLine": 1541,
                  "startColumn": 31,
                  "endLine": 1541,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\t\tif (!isdigit((unsigned char)ptr[i])) {\n\t\t\taudit_msg(LOG_ERR, \n\t\t\t\t\"Value %s should only be numbers, or \"\n\t\t\t\t\"two numbers separated by a dash - line %d\",\n\t\t\t\tnv->value, line);\n\t\t\treturn 1;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\tif (!isdigit((unsigned char)ptr[i])) {\n\t\t\taudit_msg(LOG_ERR, \n\t\t\t\t\"Value %s should only be numbers, or \"\n\t\t\t\t\"two numbers separated by a dash - line %d\",\n\t\t\t\tnv->value, line);\n\t\t\treturn 1;\n\t\t}\n",
                      "markdown": "`\t\tif (!isdigit((unsigned char)ptr[i])) {\n\t\t\taudit_msg(LOG_ERR, \n\t\t\t\t\"Value %s should only be numbers, or \"\n\t\t\t\t\"two numbers separated by a dash - line %d\",\n\t\t\t\tnv->value, line);\n\t\t\treturn 1;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/auditd-config.c"
                },
                "region": {
                  "startLine": 1532,
                  "startColumn": 31,
                  "endLine": 1532,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\t\tif (!isdigit((unsigned char)ptr[i])) {\n\t\t\taudit_msg(LOG_ERR, \n\t\t\t\t\"Value %s should only be numbers, or \"\n\t\t\t\t\"two numbers separated by a dash - line %d\",\n\t\t\t\tnv->value, line);\n\t\t\treturn 1;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\tif (!isdigit((unsigned char)ptr[i])) {\n\t\t\taudit_msg(LOG_ERR, \n\t\t\t\t\"Value %s should only be numbers, or \"\n\t\t\t\t\"two numbers separated by a dash - line %d\",\n\t\t\t\tnv->value, line);\n\t\t\treturn 1;\n\t\t}\n",
                      "markdown": "`\t\tif (!isdigit((unsigned char)ptr[i])) {\n\t\t\taudit_msg(LOG_ERR, \n\t\t\t\t\"Value %s should only be numbers, or \"\n\t\t\t\t\"two numbers separated by a dash - line %d\",\n\t\t\t\tnv->value, line);\n\t\t\treturn 1;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-llist.h"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 8,
                  "endLine": 61,
                  "endColumn": 16,
                  "snippet": {
                    "text": "  uint32_t session_id;  // Login session id\n  long long exit;       // Syscall exit code\n  int exit_is_set;      // Syscall exit code is valid\n  char *hostname;       // remote hostname\n  slist *filename;      // filename list\n  char *cwd;            // current working dir\n  char *exe;            // executable\n",
                    "rendered": {
                      "text": "  uint32_t session_id;  // Login session id\n  long long exit;       // Syscall exit code\n  int exit_is_set;      // Syscall exit code is valid\n  char *hostname;       // remote hostname\n  slist *filename;      // filename list\n  char *cwd;            // current working dir\n  char *exe;            // executable\n",
                      "markdown": "`  uint32_t session_id;  // Login session id\n  long long exit;       // Syscall exit code\n  int exit_is_set;      // Syscall exit code is valid\n  char *hostname;       // remote hostname\n  slist *filename;      // filename list\n  char *cwd;            // current working dir\n  char *exe;            // executable\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/ausearch-llist.h"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 31,
                  "endLine": 42,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        time_t sec;\t\t// Event seconds\n        unsigned int milli;\t// millisecond of the timestamp\n        unsigned long serial;\t// Serial number of the event\n\tconst char *node;\t// Machine's node name\n\tint type;\t\t// type of first event\n} event;\n\n",
                    "rendered": {
                      "text": "        time_t sec;\t\t// Event seconds\n        unsigned int milli;\t// millisecond of the timestamp\n        unsigned long serial;\t// Serial number of the event\n\tconst char *node;\t// Machine's node name\n\tint type;\t\t// type of first event\n} event;\n\n",
                      "markdown": "`        time_t sec;\t\t// Event seconds\n        unsigned int milli;\t// millisecond of the timestamp\n        unsigned long serial;\t// Serial number of the event\n\tconst char *node;\t// Machine's node name\n\tint type;\t\t// type of first event\n} event;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-scan.c"
                },
                "region": {
                  "startLine": 886,
                  "startColumn": 36,
                  "endLine": 886,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\n\t// add hosts\n\tif (l->s.hostname)\n\t\tslist_add_if_uniq(&sd.hosts, l->s.hostname);\n\n\t// add execs\n\tif (l->s.exe)\n",
                    "rendered": {
                      "text": "\n\t// add hosts\n\tif (l->s.hostname)\n\t\tslist_add_if_uniq(&sd.hosts, l->s.hostname);\n\n\t// add execs\n\tif (l->s.exe)\n",
                      "markdown": "`\n\t// add hosts\n\tif (l->s.hostname)\n\t\tslist_add_if_uniq(&sd.hosts, l->s.hostname);\n\n\t// add execs\n\tif (l->s.exe)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-scan.c"
                },
                "region": {
                  "startLine": 885,
                  "startColumn": 10,
                  "endLine": 885,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t\tslist_add_if_uniq(&sd.terms, l->s.terminal);\n\n\t// add hosts\n\tif (l->s.hostname)\n\t\tslist_add_if_uniq(&sd.hosts, l->s.hostname);\n\n\t// add execs\n",
                    "rendered": {
                      "text": "\t\tslist_add_if_uniq(&sd.terms, l->s.terminal);\n\n\t// add hosts\n\tif (l->s.hostname)\n\t\tslist_add_if_uniq(&sd.hosts, l->s.hostname);\n\n\t// add execs\n",
                      "markdown": "`\t\tslist_add_if_uniq(&sd.terms, l->s.terminal);\n\n\t// add hosts\n\tif (l->s.hostname)\n\t\tslist_add_if_uniq(&sd.hosts, l->s.hostname);\n\n\t// add execs\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-scan.c"
                },
                "region": {
                  "startLine": 650,
                  "startColumn": 13,
                  "endLine": 650,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\tcase RPT_HOST:\n\t\t\tlist_first(l);\n\t\t\tif (report_detail == D_DETAILED) {\n\t\t\t\tif (l->s.hostname) {\n\t\t\t\t\tprint_per_event_item(l);\n\t\t\t\t\trc = 1;\n\t\t\t\t}\n",
                    "rendered": {
                      "text": "\t\tcase RPT_HOST:\n\t\t\tlist_first(l);\n\t\t\tif (report_detail == D_DETAILED) {\n\t\t\t\tif (l->s.hostname) {\n\t\t\t\t\tprint_per_event_item(l);\n\t\t\t\t\trc = 1;\n\t\t\t\t}\n",
                      "markdown": "`\t\tcase RPT_HOST:\n\t\t\tlist_first(l);\n\t\t\tif (report_detail == D_DETAILED) {\n\t\t\t\tif (l->s.hostname) {\n\t\t\t\t\tprint_per_event_item(l);\n\t\t\t\t\trc = 1;\n\t\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-scan.c"
                },
                "region": {
                  "startLine": 415,
                  "startColumn": 38,
                  "endLine": 415,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\t\t\tbreak;\n\t\tcase RPT_HOST:\n\t\t\tif (l->s.hostname)\n\t\t\t\tslist_add_if_uniq(&sd.hosts, l->s.hostname);\n\t\t\tbreak;\n\t\tcase RPT_PID:\n\t\t\tif (l->s.pid != -1) {\n",
                    "rendered": {
                      "text": "\t\t\tbreak;\n\t\tcase RPT_HOST:\n\t\t\tif (l->s.hostname)\n\t\t\t\tslist_add_if_uniq(&sd.hosts, l->s.hostname);\n\t\t\tbreak;\n\t\tcase RPT_PID:\n\t\t\tif (l->s.pid != -1) {\n",
                      "markdown": "`\t\t\tbreak;\n\t\tcase RPT_HOST:\n\t\t\tif (l->s.hostname)\n\t\t\t\tslist_add_if_uniq(&sd.hosts, l->s.hostname);\n\t\t\tbreak;\n\t\tcase RPT_PID:\n\t\t\tif (l->s.pid != -1) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/src/aureport-scan.c"
                },
                "region": {
                  "startLine": 414,
                  "startColumn": 12,
                  "endLine": 414,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t\t}\n\t\t\tbreak;\n\t\tcase RPT_HOST:\n\t\t\tif (l->s.hostname)\n\t\t\t\tslist_add_if_uniq(&sd.hosts, l->s.hostname);\n\t\t\tbreak;\n\t\tcase RPT_PID:\n",
                    "rendered": {
                      "text": "\t\t\t}\n\t\t\tbreak;\n\t\tcase RPT_HOST:\n\t\t\tif (l->s.hostname)\n\t\t\t\tslist_add_if_uniq(&sd.hosts, l->s.hostname);\n\t\t\tbreak;\n\t\tcase RPT_PID:\n",
                      "markdown": "`\t\t\t}\n\t\t\tbreak;\n\t\tcase RPT_HOST:\n\t\t\tif (l->s.hostname)\n\t\t\t\tslist_add_if_uniq(&sd.hosts, l->s.hostname);\n\t\t\tbreak;\n\t\tcase RPT_PID:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/interpret.c"
                },
                "region": {
                  "startLine": 2324,
                  "endLine": 2324,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tconst char *str;\n\n\terrno = 0;\n\tcmd = strtoul(val, NULL, 16);\n\tif (errno) {\n\t\tif (asprintf(&out, \"conversion error(%s)\", val) < 0)\n\t\t\tout = NULL;\n",
                    "rendered": {
                      "text": "\tconst char *str;\n\n\terrno = 0;\n\tcmd = strtoul(val, NULL, 16);\n\tif (errno) {\n\t\tif (asprintf(&out, \"conversion error(%s)\", val) < 0)\n\t\t\tout = NULL;\n",
                      "markdown": "`\tconst char *str;\n\n\terrno = 0;\n\tcmd = strtoul(val, NULL, 16);\n\tif (errno) {\n\t\tif (asprintf(&out, \"conversion error(%s)\", val) < 0)\n\t\t\tout = NULL;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/interpret.c"
                },
                "region": {
                  "startLine": 1811,
                  "endLine": 1811,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tint cmd;\n\n\terrno = 0;\n\tcmd = strtoul(val, NULL, 16);\n\tif (errno) {\n\t\tif (asprintf(&out, \"conversion error(%s)\", val) < 0)\n\t\t\tout = NULL;\n",
                    "rendered": {
                      "text": "\tint cmd;\n\n\terrno = 0;\n\tcmd = strtoul(val, NULL, 16);\n\tif (errno) {\n\t\tif (asprintf(&out, \"conversion error(%s)\", val) < 0)\n\t\t\tout = NULL;\n",
                      "markdown": "`\tint cmd;\n\n\terrno = 0;\n\tcmd = strtoul(val, NULL, 16);\n\tif (errno) {\n\t\tif (asprintf(&out, \"conversion error(%s)\", val) < 0)\n\t\t\tout = NULL;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/interpret.c"
                },
                "region": {
                  "startLine": 1581,
                  "endLine": 1581,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tint cmd;\n\n\terrno = 0;\n\tcmd = strtoul(val, NULL, 16);\n\tif (errno) {\n\t\tif (asprintf(&out, \"conversion error(%s)\", val) < 0)\n\t\t\tout = NULL;\n",
                    "rendered": {
                      "text": "\tint cmd;\n\n\terrno = 0;\n\tcmd = strtoul(val, NULL, 16);\n\tif (errno) {\n\t\tif (asprintf(&out, \"conversion error(%s)\", val) < 0)\n\t\t\tout = NULL;\n",
                      "markdown": "`\tint cmd;\n\n\terrno = 0;\n\tcmd = strtoul(val, NULL, 16);\n\tif (errno) {\n\t\tif (asprintf(&out, \"conversion error(%s)\", val) < 0)\n\t\t\tout = NULL;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/interpret.c"
                },
                "region": {
                  "startLine": 1559,
                  "endLine": 1559,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tint cmd;\n\n\terrno = 0;\n\tcmd = strtoul(val, NULL, 16);\n        if (errno) {\n\t\tif (asprintf(&out, \"conversion error(%s)\", val) < 0)\n\t\t\tout = NULL;\n",
                    "rendered": {
                      "text": "\tint cmd;\n\n\terrno = 0;\n\tcmd = strtoul(val, NULL, 16);\n        if (errno) {\n\t\tif (asprintf(&out, \"conversion error(%s)\", val) < 0)\n\t\t\tout = NULL;\n",
                      "markdown": "`\tint cmd;\n\n\terrno = 0;\n\tcmd = strtoul(val, NULL, 16);\n        if (errno) {\n\t\tif (asprintf(&out, \"conversion error(%s)\", val) < 0)\n\t\t\tout = NULL;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/interpret.c"
                },
                "region": {
                  "startLine": 1313,
                  "startColumn": 61,
                  "endLine": 1313,
                  "endColumn": 65,
                  "snippet": {
                    "text": "#endif\n                case AF_ATMPVC:\n                        {\n                                const struct sockaddr_atmpvc* at =\n                                        (const struct sockaddr_atmpvc *)saddr;\n\t\t\t\trc = asprintf(&out, \"{ saddr_fam=%s int=%d }\",\n\t\t\t\t\t      str,\n",
                    "rendered": {
                      "text": "#endif\n                case AF_ATMPVC:\n                        {\n                                const struct sockaddr_atmpvc* at =\n                                        (const struct sockaddr_atmpvc *)saddr;\n\t\t\t\trc = asprintf(&out, \"{ saddr_fam=%s int=%d }\",\n\t\t\t\t\t      str,\n",
                      "markdown": "`#endif\n                case AF_ATMPVC:\n                        {\n                                const struct sockaddr_atmpvc* at =\n                                        (const struct sockaddr_atmpvc *)saddr;\n\t\t\t\trc = asprintf(&out, \"{ saddr_fam=%s int=%d }\",\n\t\t\t\t\t      str,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/interpret.c"
                },
                "region": {
                  "startLine": 3239,
                  "startColumn": 10,
                  "endLine": 3239,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\tif (interpretation_list_cnt()) {\n\t\tnvlist_first(&il);\n\t\tif (nvlist_find_name(&il, id->name)) {\n\t\t\tnvnode* node = &il.array[il.cur];\n\t\t\tconst char *val = node->interp_val;\n\n\t\t\tif (val) {\n",
                    "rendered": {
                      "text": "\tif (interpretation_list_cnt()) {\n\t\tnvlist_first(&il);\n\t\tif (nvlist_find_name(&il, id->name)) {\n\t\t\tnvnode* node = &il.array[il.cur];\n\t\t\tconst char *val = node->interp_val;\n\n\t\t\tif (val) {\n",
                      "markdown": "`\tif (interpretation_list_cnt()) {\n\t\tnvlist_first(&il);\n\t\tif (nvlist_find_name(&il, id->name)) {\n\t\t\tnvnode* node = &il.array[il.cur];\n\t\t\tconst char *val = node->interp_val;\n\n\t\t\tif (val) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/interpret.c"
                },
                "region": {
                  "startLine": 3110,
                  "startColumn": 7,
                  "endLine": 3110,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\tunsigned long nl;\n\n\terrno = 0;\n        nl = strtoul(val, NULL, 16);\n\tif (errno) {\n\t\tchar *out;\n\t\tif (asprintf(&out, \"conversion error(%s)\", val) < 0)\n",
                    "rendered": {
                      "text": "\tunsigned long nl;\n\n\terrno = 0;\n        nl = strtoul(val, NULL, 16);\n\tif (errno) {\n\t\tchar *out;\n\t\tif (asprintf(&out, \"conversion error(%s)\", val) < 0)\n",
                      "markdown": "`\tunsigned long nl;\n\n\terrno = 0;\n        nl = strtoul(val, NULL, 16);\n\tif (errno) {\n\t\tchar *out;\n\t\tif (asprintf(&out, \"conversion error(%s)\", val) < 0)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/normalize_record_map.h"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 39,
                  "endLine": 61,
                  "endColumn": 47,
                  "snippet": {
                    "text": "_S(AUDIT_SERVICE_START, \"started-service\")\n_S(AUDIT_SERVICE_STOP, \"stopped-service\")\n_S(AUDIT_GRP_MGMT, \"modified-group-account\")\n_S(AUDIT_GRP_CHAUTHTOK, \"changed-group-password\")\n_S(AUDIT_MAC_CHECK, \"mac-permission\")\n_S(AUDIT_ACCT_LOCK, \"locked-account\")\n_S(AUDIT_ACCT_UNLOCK, \"unlocked-account\")\n",
                    "rendered": {
                      "text": "_S(AUDIT_SERVICE_START, \"started-service\")\n_S(AUDIT_SERVICE_STOP, \"stopped-service\")\n_S(AUDIT_GRP_MGMT, \"modified-group-account\")\n_S(AUDIT_GRP_CHAUTHTOK, \"changed-group-password\")\n_S(AUDIT_MAC_CHECK, \"mac-permission\")\n_S(AUDIT_ACCT_LOCK, \"locked-account\")\n_S(AUDIT_ACCT_UNLOCK, \"unlocked-account\")\n",
                      "markdown": "`_S(AUDIT_SERVICE_START, \"started-service\")\n_S(AUDIT_SERVICE_STOP, \"stopped-service\")\n_S(AUDIT_GRP_MGMT, \"modified-group-account\")\n_S(AUDIT_GRP_CHAUTHTOK, \"changed-group-password\")\n_S(AUDIT_MAC_CHECK, \"mac-permission\")\n_S(AUDIT_ACCT_LOCK, \"locked-account\")\n_S(AUDIT_ACCT_UNLOCK, \"unlocked-account\")\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/auparse/normalize_record_map.h"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 34,
                  "endLine": 36,
                  "endColumn": 42,
                  "snippet": {
                    "text": "_S(AUDIT_USER_START, \"started-session\")\n_S(AUDIT_USER_END, \"ended-session\")\n_S(AUDIT_USER_AVC, \"accessed-mac-policy-controlled-object\")\n_S(AUDIT_USER_CHAUTHTOK, \"changed-password\")\n_S(AUDIT_USER_ERR, \"caused-account-error\")\n_S(AUDIT_CRED_REFR, \"refreshed-credentials\")\n_S(AUDIT_USYS_CONFIG, \"changed-configuration\")\n",
                    "rendered": {
                      "text": "_S(AUDIT_USER_START, \"started-session\")\n_S(AUDIT_USER_END, \"ended-session\")\n_S(AUDIT_USER_AVC, \"accessed-mac-policy-controlled-object\")\n_S(AUDIT_USER_CHAUTHTOK, \"changed-password\")\n_S(AUDIT_USER_ERR, \"caused-account-error\")\n_S(AUDIT_CRED_REFR, \"refreshed-credentials\")\n_S(AUDIT_USYS_CONFIG, \"changed-configuration\")\n",
                      "markdown": "`_S(AUDIT_USER_START, \"started-session\")\n_S(AUDIT_USER_END, \"ended-session\")\n_S(AUDIT_USER_AVC, \"accessed-mac-policy-controlled-object\")\n_S(AUDIT_USER_CHAUTHTOK, \"changed-password\")\n_S(AUDIT_USER_ERR, \"caused-account-error\")\n_S(AUDIT_CRED_REFR, \"refreshed-credentials\")\n_S(AUDIT_USYS_CONFIG, \"changed-configuration\")\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/tools/ausyscall/ausyscall.8"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 172,
                  "endLine": 17,
                  "endColumn": 176,
                  "snippet": {
                    "text": "\n.B \\-a always, exit \\-S open \\-F exit=\\-EPERM \\-k fail\\-open\n\nIf you wanted to verify that both 32 and 64 bit programs would be audited, run \"ausyscall i386 open\" and then \"ausyscall x86_64 open\". (Or use the b32 and b64 option.) Look at the returned numbers. If they are different, you will have to write two auditctl rules to get complete coverage.\n\n.nf\n.B \\-a always,exit \\-F arch=b32 \\-S open \\-F exit=\\-EPERM \\-k fail\\-open\n",
                    "rendered": {
                      "text": "\n.B \\-a always, exit \\-S open \\-F exit=\\-EPERM \\-k fail\\-open\n\nIf you wanted to verify that both 32 and 64 bit programs would be audited, run \"ausyscall i386 open\" and then \"ausyscall x86_64 open\". (Or use the b32 and b64 option.) Look at the returned numbers. If they are different, you will have to write two auditctl rules to get complete coverage.\n\n.nf\n.B \\-a always,exit \\-F arch=b32 \\-S open \\-F exit=\\-EPERM \\-k fail\\-open\n",
                      "markdown": "`\n.B \\-a always, exit \\-S open \\-F exit=\\-EPERM \\-k fail\\-open\n\nIf you wanted to verify that both 32 and 64 bit programs would be audited, run \"ausyscall i386 open\" and then \"ausyscall x86_64 open\". (Or use the b32 and b64 option.) Look at the returned numbers. If they are different, you will have to write two auditctl rules to get complete coverage.\n\n.nf\n.B \\-a always,exit \\-F arch=b32 \\-S open \\-F exit=\\-EPERM \\-k fail\\-open\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/tools/ausyscall/ausyscall.8"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 173,
                  "endLine": 24,
                  "endColumn": 181,
                  "snippet": {
                    "text": ".B \\-a always,exit \\-F arch=b64 \\-S open \\-F exit=\\-EPERM \\-k fail\\-open\n.fi\n\nFor more information about a specific syscall, use the man program and pass the number 2 as an argument to make sure that you get the syscall information rather than a shell script program or glibc function call of the same name. For example, if you wanted to learn about the open syscall, type: man 2 open.\n.SH OPTIONS\n.TP\n.B \\-\\-dump\n",
                    "rendered": {
                      "text": ".B \\-a always,exit \\-F arch=b64 \\-S open \\-F exit=\\-EPERM \\-k fail\\-open\n.fi\n\nFor more information about a specific syscall, use the man program and pass the number 2 as an argument to make sure that you get the syscall information rather than a shell script program or glibc function call of the same name. For example, if you wanted to learn about the open syscall, type: man 2 open.\n.SH OPTIONS\n.TP\n.B \\-\\-dump\n",
                      "markdown": "`.B \\-a always,exit \\-F arch=b64 \\-S open \\-F exit=\\-EPERM \\-k fail\\-open\n.fi\n\nFor more information about a specific syscall, use the man program and pass the number 2 as an argument to make sure that you get the syscall information rather than a shell script program or glibc function call of the same name. For example, if you wanted to learn about the open syscall, type: man 2 open.\n.SH OPTIONS\n.TP\n.B \\-\\-dump\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/tools/ausyscall/ausyscall.8"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 704,
                  "endLine": 7,
                  "endColumn": 711,
                  "snippet": {
                    "text": "the opposite. You can also dump the whole table with the \\-\\-dump option. By default a syscall name lookup will be a substring match meaning that it will try to match all occurrences of the given name with syscalls. So giving a name of chown will match both fchown and chown as any other syscall with chown in its name. If this behavior is not desired, pass the \\-\\-exact flag and it will do an exact string match.\n\nThe program takes the special arch,\n.B uring,\nto denote that you want to specify io_uring operations. In this case, the arch must be given because it will otherwise detect the underlying hard",
                    "rendered": {
                      "text": "the opposite. You can also dump the whole table with the \\-\\-dump option. By default a syscall name lookup will be a substring match meaning that it will try to match all occurrences of the given name with syscalls. So giving a name of chown will match both fchown and chown as any other syscall with chown in its name. If this behavior is not desired, pass the \\-\\-exact flag and it will do an exact string match.\n\nThe program takes the special arch,\n.B uring,\nto denote that you want to specify io_uring operations. In this case, the arch must be given because it will otherwise detect the underlying hard",
                      "markdown": "`the opposite. You can also dump the whole table with the \\-\\-dump option. By default a syscall name lookup will be a substring match meaning that it will try to match all occurrences of the given name with syscalls. So giving a name of chown will match both fchown and chown as any other syscall with chown in its name. If this behavior is not desired, pass the \\-\\-exact flag and it will do an exact string match.\n\nThe program takes the special arch,\n.B uring,\nto denote that you want to specify io_uring operations. In this case, the arch must be given because it will otherwise detect the underlying hard`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/tools/ausyscall/ausyscall.8"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 672,
                  "endLine": 7,
                  "endColumn": 679,
                  "snippet": {
                    "text": "name or number and it will find the opposite. You can also dump the whole table with the \\-\\-dump option. By default a syscall name lookup will be a substring match meaning that it will try to match all occurrences of the given name with syscalls. So giving a name of chown will match both fchown and chown as any other syscall with chown in its name. If this behavior is not desired, pass the \\-\\-exact flag and it will do an exact string match.\n\nThe program takes the special arch,\n.B uring,\nto denote that you want to specify io_uring operations. In this case, the arch must be given because it will othe",
                    "rendered": {
                      "text": "name or number and it will find the opposite. You can also dump the whole table with the \\-\\-dump option. By default a syscall name lookup will be a substring match meaning that it will try to match all occurrences of the given name with syscalls. So giving a name of chown will match both fchown and chown as any other syscall with chown in its name. If this behavior is not desired, pass the \\-\\-exact flag and it will do an exact string match.\n\nThe program takes the special arch,\n.B uring,\nto denote that you want to specify io_uring operations. In this case, the arch must be given because it will othe",
                      "markdown": "`name or number and it will find the opposite. You can also dump the whole table with the \\-\\-dump option. By default a syscall name lookup will be a substring match meaning that it will try to match all occurrences of the given name with syscalls. So giving a name of chown will match both fchown and chown as any other syscall with chown in its name. If this behavior is not desired, pass the \\-\\-exact flag and it will do an exact string match.\n\nThe program takes the special arch,\n.B uring,\nto denote that you want to specify io_uring operations. In this case, the arch must be given because it will othe`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/tools/ausyscall/ausyscall.8"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 639,
                  "endLine": 7,
                  "endColumn": 646,
                  "snippet": {
                    "text": "ic ABI. You may give the syscall name or number and it will find the opposite. You can also dump the whole table with the \\-\\-dump option. By default a syscall name lookup will be a substring match meaning that it will try to match all occurrences of the given name with syscalls. So giving a name of chown will match both fchown and chown as any other syscall with chown in its name. If this behavior is not desired, pass the \\-\\-exact flag and it will do an exact string match.\n\nThe program takes the special arch,\n.B uring,\nto denote that you want to specify io_uring operations. In this case, the arch m",
                    "rendered": {
                      "text": "ic ABI. You may give the syscall name or number and it will find the opposite. You can also dump the whole table with the \\-\\-dump option. By default a syscall name lookup will be a substring match meaning that it will try to match all occurrences of the given name with syscalls. So giving a name of chown will match both fchown and chown as any other syscall with chown in its name. If this behavior is not desired, pass the \\-\\-exact flag and it will do an exact string match.\n\nThe program takes the special arch,\n.B uring,\nto denote that you want to specify io_uring operations. In this case, the arch m",
                      "markdown": "`ic ABI. You may give the syscall name or number and it will find the opposite. You can also dump the whole table with the \\-\\-dump option. By default a syscall name lookup will be a substring match meaning that it will try to match all occurrences of the given name with syscalls. So giving a name of chown will match both fchown and chown as any other syscall with chown in its name. If this behavior is not desired, pass the \\-\\-exact flag and it will do an exact string match.\n\nThe program takes the special arch,\n.B uring,\nto denote that you want to specify io_uring operations. In this case, the arch m`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/tools/ausyscall/ausyscall.8"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 398,
                  "endLine": 7,
                  "endColumn": 404,
                  "snippet": {
                    "text": "or the given arch. The arch can be anything returned by `uname \\-m`. If arch is not given, the program will take a guess based on the running image. Or for convenience, you can pass \\fBb32\\fP or \\fBb64\\fP to use the current arch but a specific ABI. You may give the syscall name or number and it will find the opposite. You can also dump the whole table with the \\-\\-dump option. By default a syscall name lookup will be a substring match meaning that it will try to match all occurrences of the given name with syscalls. So giving a name of chown will match both fchown and chown as any other syscall with",
                    "rendered": {
                      "text": "or the given arch. The arch can be anything returned by `uname \\-m`. If arch is not given, the program will take a guess based on the running image. Or for convenience, you can pass \\fBb32\\fP or \\fBb64\\fP to use the current arch but a specific ABI. You may give the syscall name or number and it will find the opposite. You can also dump the whole table with the \\-\\-dump option. By default a syscall name lookup will be a substring match meaning that it will try to match all occurrences of the given name with syscalls. So giving a name of chown will match both fchown and chown as any other syscall with",
                      "markdown": "`or the given arch. The arch can be anything returned by `uname \\-m`. If arch is not given, the program will take a guess based on the running image. Or for convenience, you can pass \\fBb32\\fP or \\fBb64\\fP to use the current arch but a specific ABI. You may give the syscall name or number and it will find the opposite. You can also dump the whole table with the \\-\\-dump option. By default a syscall name lookup will be a substring match meaning that it will try to match all occurrences of the given name with syscalls. So giving a name of chown will match both fchown and chown as any other syscall with`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/tools/ausyscall/Makefile.am"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 26,
                  "endLine": 2,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# Makefile.am --\n# Copyright 2008,2015,2019 Red Hat Inc., Durham, North Carolina.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                    "rendered": {
                      "text": "# Makefile.am --\n# Copyright 2008,2015,2019 Red Hat Inc., Durham, North Carolina.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n",
                      "markdown": "`# Makefile.am --\n# Copyright 2008,2015,2019 Red Hat Inc., Durham, North Carolina.\n# All Rights Reserved.\n#\n# This library is free software; you can redistribute it and/or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/tools/aulast/aulast.8"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 305,
                  "endLine": 33,
                  "endColumn": 311,
                  "snippet": {
                    "text": "\n.TP\n.B \\-\\-proof\nPrint out the audit event serial numbers used to determine the preceding line of the report. A Serial number of 0 is a place holder and not an actual event serial number. The serial numbers can be used to examine the actual audit records in more detail. Also an ausearch query is printed that will let you find the audit records associated with that session.\n\n.TP\n.B \\-\\-stdin\n",
                    "rendered": {
                      "text": "\n.TP\n.B \\-\\-proof\nPrint out the audit event serial numbers used to determine the preceding line of the report. A Serial number of 0 is a place holder and not an actual event serial number. The serial numbers can be used to examine the actual audit records in more detail. Also an ausearch query is printed that will let you find the audit records associated with that session.\n\n.TP\n.B \\-\\-stdin\n",
                      "markdown": "`\n.TP\n.B \\-\\-proof\nPrint out the audit event serial numbers used to determine the preceding line of the report. A Serial number of 0 is a place holder and not an actual event serial number. The serial numbers can be used to examine the actual audit records in more detail. Also an ausearch query is printed that will let you find the audit records associated with that session.\n\n.TP\n.B \\-\\-stdin\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/tools/aulast/aulast.8"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 199,
                  "endLine": 12,
                  "endColumn": 205,
                  "snippet": {
                    "text": "\nThe pseudo user reboot logs in each time the system is rebooted. Thus last reboot will show a log of all reboots since the log file was created.\n\nThe main difference that a user will notice is that \\fBaulast\\fP print events from oldest to newest, while \\fBlast\\fP prints records from newest to oldest. Also, the audit system is not notified each time a tty or pty is allocated, so you may not see quite as many records indicating users and their tty's.\n\n.SH OPTIONS\n.TP\n",
                    "rendered": {
                      "text": "\nThe pseudo user reboot logs in each time the system is rebooted. Thus last reboot will show a log of all reboots since the log file was created.\n\nThe main difference that a user will notice is that \\fBaulast\\fP print events from oldest to newest, while \\fBlast\\fP prints records from newest to oldest. Also, the audit system is not notified each time a tty or pty is allocated, so you may not see quite as many records indicating users and their tty's.\n\n.SH OPTIONS\n.TP\n",
                      "markdown": "`\nThe pseudo user reboot logs in each time the system is rebooted. Thus last reboot will show a log of all reboots since the log file was created.\n\nThe main difference that a user will notice is that \\fBaulast\\fP print events from oldest to newest, while \\fBlast\\fP prints records from newest to oldest. Also, the audit system is not notified each time a tty or pty is allocated, so you may not see quite as many records indicating users and their tty's.\n\n.SH OPTIONS\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/tools/aulast/aulast.8"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 35,
                  "endLine": 10,
                  "endColumn": 41,
                  "snippet": {
                    "text": " through the audit logs or the given audit log file and displays a list of all users logged in (and out) based on the range of time in the audit logs. Names of users and tty’s can be given, in which case aulast will show only those entries matching the arguments.\n\nThe pseudo user reboot logs in each time the system is rebooted. Thus last reboot will show a log of all reboots since the log file was created.\n\nThe main difference that a user will notice is that \\fBaulast\\fP print events from oldest to newest, while \\fBlast\\fP prints records from newest to oldest. Also, the audit system is not notified ",
                    "rendered": {
                      "text": " through the audit logs or the given audit log file and displays a list of all users logged in (and out) based on the range of time in the audit logs. Names of users and tty’s can be given, in which case aulast will show only those entries matching the arguments.\n\nThe pseudo user reboot logs in each time the system is rebooted. Thus last reboot will show a log of all reboots since the log file was created.\n\nThe main difference that a user will notice is that \\fBaulast\\fP print events from oldest to newest, while \\fBlast\\fP prints records from newest to oldest. Also, the audit system is not notified ",
                      "markdown": "` through the audit logs or the given audit log file and displays a list of all users logged in (and out) based on the range of time in the audit logs. Names of users and tty’s can be given, in which case aulast will show only those entries matching the arguments.\n\nThe pseudo user reboot logs in each time the system is rebooted. Thus last reboot will show a log of all reboots since the log file was created.\n\nThe main difference that a user will notice is that \\fBaulast\\fP print events from oldest to newest, while \\fBlast\\fP prints records from newest to oldest. Also, the audit system is not notified `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/tools/aulast/aulast.8"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 279,
                  "endLine": 8,
                  "endColumn": 285,
                  "snippet": {
                    "text": ".B aulast [ options ] \n\n.SH DESCRIPTION\n\\fBaulast\\fP is a program that prints out a listing of the last logged in users similarly to the program \\fBlast\\fP and \\fBlastb\\fP. Aulast searches back through the audit logs or the given audit log file and displays a list of all users logged in (and out) based on the range of time in the audit logs. Names of users and tty’s can be given, in which case aulast will show only those entries matching the arguments.\n\nThe pseudo user reboot logs in each time the system is rebooted. Thus last reboot will show a log of all reboots since the log file was created.\n\n",
                    "rendered": {
                      "text": ".B aulast [ options ] \n\n.SH DESCRIPTION\n\\fBaulast\\fP is a program that prints out a listing of the last logged in users similarly to the program \\fBlast\\fP and \\fBlastb\\fP. Aulast searches back through the audit logs or the given audit log file and displays a list of all users logged in (and out) based on the range of time in the audit logs. Names of users and tty’s can be given, in which case aulast will show only those entries matching the arguments.\n\nThe pseudo user reboot logs in each time the system is rebooted. Thus last reboot will show a log of all reboots since the log file was created.\n\n",
                      "markdown": "`.B aulast [ options ] \n\n.SH DESCRIPTION\n\\fBaulast\\fP is a program that prints out a listing of the last logged in users similarly to the program \\fBlast\\fP and \\fBlastb\\fP. Aulast searches back through the audit logs or the given audit log file and displays a list of all users logged in (and out) based on the range of time in the audit logs. Names of users and tty’s can be given, in which case aulast will show only those entries matching the arguments.\n\nThe pseudo user reboot logs in each time the system is rebooted. Thus last reboot will show a log of all reboots since the log file was created.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/tools/aulast/aulast.c"
                },
                "region": {
                  "startLine": 280,
                  "startColumn": 32,
                  "endLine": 280,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\n\tstart = auparse_get_time(au);\n\n\thost = auparse_find_field(au, \"hostname\");\n\tif (host && strcmp(host, \"?\") == 0)\n\t\thost = auparse_find_field(au, \"addr\");\n\n",
                    "rendered": {
                      "text": "\n\tstart = auparse_get_time(au);\n\n\thost = auparse_find_field(au, \"hostname\");\n\tif (host && strcmp(host, \"?\") == 0)\n\t\thost = auparse_find_field(au, \"addr\");\n\n",
                      "markdown": "`\n\tstart = auparse_get_time(au);\n\n\thost = auparse_find_field(au, \"hostname\");\n\tif (host && strcmp(host, \"?\") == 0)\n\t\thost = auparse_find_field(au, \"addr\");\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/tools/aulast/aulast.c"
                },
                "region": {
                  "startLine": 402,
                  "startColumn": 25,
                  "endLine": 402,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\t\t\tlist_update_logout(&l, end, auparse_get_serial(au));\n\t\t\treport_session(cur);\n\t\t} else if (debug)\n\t\t\tfprintf(stderr, \"start time error for event: %lu\\n\",\n\t\t\t\t\tauparse_get_serial(au));\n\t\tlist_delete_cur(&l);\n\t}\n",
                    "rendered": {
                      "text": "\t\t\tlist_update_logout(&l, end, auparse_get_serial(au));\n\t\t\treport_session(cur);\n\t\t} else if (debug)\n\t\t\tfprintf(stderr, \"start time error for event: %lu\\n\",\n\t\t\t\t\tauparse_get_serial(au));\n\t\tlist_delete_cur(&l);\n\t}\n",
                      "markdown": "`\t\t\tlist_update_logout(&l, end, auparse_get_serial(au));\n\t\t\treport_session(cur);\n\t\t} else if (debug)\n\t\t\tfprintf(stderr, \"start time error for event: %lu\\n\",\n\t\t\t\t\tauparse_get_serial(au));\n\t\tlist_delete_cur(&l);\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/42-injection.rules"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 1,
                  "endColumn": 21,
                  "snippet": {
                    "text": "## These rules watch for code injection by the ptrace facility.\n## This could indicate someone trying to do something bad or\n## just debugging\n\n",
                    "rendered": {
                      "text": "## These rules watch for code injection by the ptrace facility.\n## This could indicate someone trying to do something bad or\n## just debugging\n\n",
                      "markdown": "`## These rules watch for code injection by the ptrace facility.\n## This could indicate someone trying to do something bad or\n## just debugging\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/30-ospp-v42.rules"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 2,
                  "endLine": 86,
                  "endColumn": 9,
                  "snippet": {
                    "text": "-a always,exit -F arch=b64 -F path=/usr/bin/pkexec -F perm=x -F key=maybe-escalation\n\n\n## Watch for configuration changes to privilege escalation.\n-a always,exit -F arch=b32 -F path=/etc/sudoers -F perm=wa -F key=special-config-changes\n-a always,exit -F arch=b64 -F path=/etc/sudoers -F perm=wa -F key=special-config-changes\n-a always,exit -F arch=b32 -F dir=/etc/sudoers.d/ -F perm=wa -F key=special-config-changes\n",
                    "rendered": {
                      "text": "-a always,exit -F arch=b64 -F path=/usr/bin/pkexec -F perm=x -F key=maybe-escalation\n\n\n## Watch for configuration changes to privilege escalation.\n-a always,exit -F arch=b32 -F path=/etc/sudoers -F perm=wa -F key=special-config-changes\n-a always,exit -F arch=b64 -F path=/etc/sudoers -F perm=wa -F key=special-config-changes\n-a always,exit -F arch=b32 -F dir=/etc/sudoers.d/ -F perm=wa -F key=special-config-changes\n",
                      "markdown": "`-a always,exit -F arch=b64 -F path=/usr/bin/pkexec -F perm=x -F key=maybe-escalation\n\n\n## Watch for configuration changes to privilege escalation.\n-a always,exit -F arch=b32 -F path=/etc/sudoers -F perm=wa -F key=special-config-changes\n-a always,exit -F arch=b64 -F path=/etc/sudoers -F perm=wa -F key=special-config-changes\n-a always,exit -F arch=b32 -F dir=/etc/sudoers.d/ -F perm=wa -F key=special-config-changes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/30-ospp-v42.rules"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 63,
                  "endLine": 81,
                  "endColumn": 70,
                  "snippet": {
                    "text": "## Special case for systemd-run. It is not audit aware, specifically watch it\n-a always,exit -F arch=b32 -F path=/usr/bin/systemd-run -F perm=x -F auid!=unset -F key=maybe-escalation\n-a always,exit -F arch=b64 -F path=/usr/bin/systemd-run -F perm=x -F auid!=unset -F key=maybe-escalation\n## Special case for pkexec. It is not audit aware, specifically watch it\n-a always,exit -F arch=b32 -F path=/usr/bin/pkexec -F perm=x -F key=maybe-escalation\n-a always,exit -F arch=b64 -F path=/usr/bin/pkexec -F perm=x -F key=maybe-escalation\n\n",
                    "rendered": {
                      "text": "## Special case for systemd-run. It is not audit aware, specifically watch it\n-a always,exit -F arch=b32 -F path=/usr/bin/systemd-run -F perm=x -F auid!=unset -F key=maybe-escalation\n-a always,exit -F arch=b64 -F path=/usr/bin/systemd-run -F perm=x -F auid!=unset -F key=maybe-escalation\n## Special case for pkexec. It is not audit aware, specifically watch it\n-a always,exit -F arch=b32 -F path=/usr/bin/pkexec -F perm=x -F key=maybe-escalation\n-a always,exit -F arch=b64 -F path=/usr/bin/pkexec -F perm=x -F key=maybe-escalation\n\n",
                      "markdown": "`## Special case for systemd-run. It is not audit aware, specifically watch it\n-a always,exit -F arch=b32 -F path=/usr/bin/systemd-run -F perm=x -F auid!=unset -F key=maybe-escalation\n-a always,exit -F arch=b64 -F path=/usr/bin/systemd-run -F perm=x -F auid!=unset -F key=maybe-escalation\n## Special case for pkexec. It is not audit aware, specifically watch it\n-a always,exit -F arch=b32 -F path=/usr/bin/pkexec -F perm=x -F key=maybe-escalation\n-a always,exit -F arch=b64 -F path=/usr/bin/pkexec -F perm=x -F key=maybe-escalation\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/30-ospp-v42.rules"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 68,
                  "endLine": 78,
                  "endColumn": 75,
                  "snippet": {
                    "text": "-a always,exit -F arch=b64 -F path=/usr/sbin/grub2-set-bootflag -F perm=x -F auid>=1000 -F auid!=unset -F key=special-config-changes\n\n## Privilege escalation via su or sudo. This is entirely handled by pam.\n## Special case for systemd-run. It is not audit aware, specifically watch it\n-a always,exit -F arch=b32 -F path=/usr/bin/systemd-run -F perm=x -F auid!=unset -F key=maybe-escalation\n-a always,exit -F arch=b64 -F path=/usr/bin/systemd-run -F perm=x -F auid!=unset -F key=maybe-escalation\n## Special case for pkexec. It is not audit aware, specifically watch it\n",
                    "rendered": {
                      "text": "-a always,exit -F arch=b64 -F path=/usr/sbin/grub2-set-bootflag -F perm=x -F auid>=1000 -F auid!=unset -F key=special-config-changes\n\n## Privilege escalation via su or sudo. This is entirely handled by pam.\n## Special case for systemd-run. It is not audit aware, specifically watch it\n-a always,exit -F arch=b32 -F path=/usr/bin/systemd-run -F perm=x -F auid!=unset -F key=maybe-escalation\n-a always,exit -F arch=b64 -F path=/usr/bin/systemd-run -F perm=x -F auid!=unset -F key=maybe-escalation\n## Special case for pkexec. It is not audit aware, specifically watch it\n",
                      "markdown": "`-a always,exit -F arch=b64 -F path=/usr/sbin/grub2-set-bootflag -F perm=x -F auid>=1000 -F auid!=unset -F key=special-config-changes\n\n## Privilege escalation via su or sudo. This is entirely handled by pam.\n## Special case for systemd-run. It is not audit aware, specifically watch it\n-a always,exit -F arch=b32 -F path=/usr/bin/systemd-run -F perm=x -F auid!=unset -F key=maybe-escalation\n-a always,exit -F arch=b64 -F path=/usr/bin/systemd-run -F perm=x -F auid!=unset -F key=maybe-escalation\n## Special case for pkexec. It is not audit aware, specifically watch it\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/30-ospp-v42.rules"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 61,
                  "endLine": 33,
                  "endColumn": 68,
                  "snippet": {
                    "text": "## User enable and disable. This is entirely handled by pam.\n\n## Group add delete modify. This is covered by pam. However, someone could\n## open a file and directly create or modify a user, so we'll watch group and\n## gshadow for writes\n-a always,exit -F arch=b32 -F path=/etc/passwd -F perm=wa -F auid>=1000 -F auid!=unset -F key=user-modify\n-a always,exit -F arch=b64 -F path=/etc/passwd -F perm=wa -F auid>=1000 -F auid!=unset -F key=user-modify\n",
                    "rendered": {
                      "text": "## User enable and disable. This is entirely handled by pam.\n\n## Group add delete modify. This is covered by pam. However, someone could\n## open a file and directly create or modify a user, so we'll watch group and\n## gshadow for writes\n-a always,exit -F arch=b32 -F path=/etc/passwd -F perm=wa -F auid>=1000 -F auid!=unset -F key=user-modify\n-a always,exit -F arch=b64 -F path=/etc/passwd -F perm=wa -F auid>=1000 -F auid!=unset -F key=user-modify\n",
                      "markdown": "`## User enable and disable. This is entirely handled by pam.\n\n## Group add delete modify. This is covered by pam. However, someone could\n## open a file and directly create or modify a user, so we'll watch group and\n## gshadow for writes\n-a always,exit -F arch=b32 -F path=/etc/passwd -F perm=wa -F auid>=1000 -F auid!=unset -F key=user-modify\n-a always,exit -F arch=b64 -F path=/etc/passwd -F perm=wa -F auid>=1000 -F auid!=unset -F key=user-modify\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/30-ospp-v42.rules"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 61,
                  "endLine": 19,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\n\n## User add delete modify. This is covered by pam. However, someone could\n## open a file and directly create or modify a user, so we'll watch passwd and\n## shadow for writes\n-a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=user-modify\n-a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=user-modify\n",
                    "rendered": {
                      "text": "\n\n## User add delete modify. This is covered by pam. However, someone could\n## open a file and directly create or modify a user, so we'll watch passwd and\n## shadow for writes\n-a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=user-modify\n-a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=user-modify\n",
                      "markdown": "`\n\n## User add delete modify. This is covered by pam. However, someone could\n## open a file and directly create or modify a user, so we'll watch passwd and\n## shadow for writes\n-a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=user-modify\n-a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=user-modify\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/44-installers.rules"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 13,
                  "endLine": 1,
                  "endColumn": 20,
                  "snippet": {
                    "text": "# These rules watch for invocation of things known to install software\n\n-a always,exit -F arch=b32 -F perm=x -F path=/usr/bin/dnf-3 -F key=software-installer\n-a always,exit -F arch=b64 -F perm=x -F path=/usr/bin/dnf-3 -F key=software-installer\n",
                    "rendered": {
                      "text": "# These rules watch for invocation of things known to install software\n\n-a always,exit -F arch=b32 -F perm=x -F path=/usr/bin/dnf-3 -F key=software-installer\n-a always,exit -F arch=b64 -F perm=x -F path=/usr/bin/dnf-3 -F key=software-installer\n",
                      "markdown": "`# These rules watch for invocation of things known to install software\n\n-a always,exit -F arch=b32 -F perm=x -F path=/usr/bin/dnf-3 -F key=software-installer\n-a always,exit -F arch=b64 -F perm=x -F path=/usr/bin/dnf-3 -F key=software-installer\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/README-rules"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 38,
                  "endLine": 19,
                  "endColumn": 42,
                  "snippet": {
                    "text": "There is a script in the comments of that file. You can uncomment the commands\nand run the script and then rename the resulting file.\n\nThe rules are not meant to be used all at once. They are pieces of a policy\nthat should be thought out and individual files copied to /etc/audit/rules.d/\nFor example, if you wanted to set a system up in the STIG configuration, copy\nrules 10-base-config, 30-stig, 31-privileged, and 99-finalize. You can add\n",
                    "rendered": {
                      "text": "There is a script in the comments of that file. You can uncomment the commands\nand run the script and then rename the resulting file.\n\nThe rules are not meant to be used all at once. They are pieces of a policy\nthat should be thought out and individual files copied to /etc/audit/rules.d/\nFor example, if you wanted to set a system up in the STIG configuration, copy\nrules 10-base-config, 30-stig, 31-privileged, and 99-finalize. You can add\n",
                      "markdown": "`There is a script in the comments of that file. You can uncomment the commands\nand run the script and then rename the resulting file.\n\nThe rules are not meant to be used all at once. They are pieces of a policy\nthat should be thought out and individual files copied to /etc/audit/rules.d/\nFor example, if you wanted to set a system up in the STIG configuration, copy\nrules 10-base-config, 30-stig, 31-privileged, and 99-finalize. You can add\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/README-rules"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 11,
                  "endLine": 17,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\nThere is one set of rules, 31-privileged.rules, that should be regenerated.\nThere is a script in the comments of that file. You can uncomment the commands\nand run the script and then rename the resulting file.\n\nThe rules are not meant to be used all at once. They are pieces of a policy\nthat should be thought out and individual files copied to /etc/audit/rules.d/\n",
                    "rendered": {
                      "text": "\nThere is one set of rules, 31-privileged.rules, that should be regenerated.\nThere is a script in the comments of that file. You can uncomment the commands\nand run the script and then rename the resulting file.\n\nThe rules are not meant to be used all at once. They are pieces of a policy\nthat should be thought out and individual files copied to /etc/audit/rules.d/\n",
                      "markdown": "`\nThere is one set of rules, 31-privileged.rules, that should be regenerated.\nThere is a script in the comments of that file. You can uncomment the commands\nand run the script and then rename the resulting file.\n\nThe rules are not meant to be used all at once. They are pieces of a policy\nthat should be thought out and individual files copied to /etc/audit/rules.d/\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/README-rules"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 10,
                  "endLine": 16,
                  "endColumn": 18,
                  "snippet": {
                    "text": "90 - Finalize (immutable)\n\nThere is one set of rules, 31-privileged.rules, that should be regenerated.\nThere is a script in the comments of that file. You can uncomment the commands\nand run the script and then rename the resulting file.\n\nThe rules are not meant to be used all at once. They are pieces of a policy\n",
                    "rendered": {
                      "text": "90 - Finalize (immutable)\n\nThere is one set of rules, 31-privileged.rules, that should be regenerated.\nThere is a script in the comments of that file. You can uncomment the commands\nand run the script and then rename the resulting file.\n\nThe rules are not meant to be used all at once. They are pieces of a policy\n",
                      "markdown": "`90 - Finalize (immutable)\n\nThere is one set of rules, 31-privileged.rules, that should be regenerated.\nThere is a script in the comments of that file. You can uncomment the commands\nand run the script and then rename the resulting file.\n\nThe rules are not meant to be used all at once. They are pieces of a policy\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/README-rules"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 71,
                  "endLine": 4,
                  "endColumn": 5,
                  "snippet": {
                    "text": "This group of rules are meant to be used with the augenrules program.\nThe augenrules program expects rules to be located in /etc/audit/rules.d/\nThe rules will get processed in a specific order based on their natural\nsort order. To make things easier to use, the files in this directory are\norganized into groups with the following meanings:\n\n10 - Kernel and auditctl configuration\n",
                    "rendered": {
                      "text": "This group of rules are meant to be used with the augenrules program.\nThe augenrules program expects rules to be located in /etc/audit/rules.d/\nThe rules will get processed in a specific order based on their natural\nsort order. To make things easier to use, the files in this directory are\norganized into groups with the following meanings:\n\n10 - Kernel and auditctl configuration\n",
                      "markdown": "`This group of rules are meant to be used with the augenrules program.\nThe augenrules program expects rules to be located in /etc/audit/rules.d/\nThe rules will get processed in a specific order based on their natural\nsort order. To make things easier to use, the files in this directory are\norganized into groups with the following meanings:\n\n10 - Kernel and auditctl configuration\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/rules/43-module-load.rules"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 1,
                  "endColumn": 21,
                  "snippet": {
                    "text": "## These rules watch for kernel module insertion. By monitoring\n## the syscall, we do not need any watches on programs.\n-a always,exit -F arch=b32 -S init_module,finit_module -F key=module-load\n-a always,exit -F arch=b64 -S init_module,finit_module -F key=module-load\n",
                    "rendered": {
                      "text": "## These rules watch for kernel module insertion. By monitoring\n## the syscall, we do not need any watches on programs.\n-a always,exit -F arch=b32 -S init_module,finit_module -F key=module-load\n-a always,exit -F arch=b64 -S init_module,finit_module -F key=module-load\n",
                      "markdown": "`## These rules watch for kernel module insertion. By monitoring\n## the syscall, we do not need any watches on programs.\n-a always,exit -F arch=b32 -S init_module,finit_module -F key=module-load\n-a always,exit -F arch=b64 -S init_module,finit_module -F key=module-load\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/COPYING"
                },
                "region": {
                  "startLine": 331,
                  "startColumn": 35,
                  "endLine": 331,
                  "endColumn": 39,
                  "snippet": {
                    "text": "necessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n",
                    "rendered": {
                      "text": "necessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n",
                      "markdown": "`necessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/COPYING"
                },
                "region": {
                  "startLine": 290,
                  "startColumn": 59,
                  "endLine": 290,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n",
                    "rendered": {
                      "text": "\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n",
                      "markdown": "`\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/COPYING"
                },
                "region": {
                  "startLine": 204,
                  "startColumn": 30,
                  "endLine": 204,
                  "endColumn": 34,
                  "snippet": {
                    "text": "excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n",
                    "rendered": {
                      "text": "excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n",
                      "markdown": "`excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/COPYING"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 63,
                  "endLine": 159,
                  "endColumn": 8,
                  "snippet": {
                    "text": "The source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\n",
                    "rendered": {
                      "text": "The source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\n",
                      "markdown": "`The source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/COPYING"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 51,
                  "endLine": 142,
                  "endColumn": 55,
                  "snippet": {
                    "text": "    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n",
                    "rendered": {
                      "text": "    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n",
                      "markdown": "`    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/COPYING"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 21,
                  "endLine": 126,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\n",
                    "rendered": {
                      "text": "\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\n",
                      "markdown": "`\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/COPYING"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 43,
                  "endLine": 100,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n",
                    "rendered": {
                      "text": "\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n",
                      "markdown": "`\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/COPYING"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 7,
                  "endLine": 88,
                  "endColumn": 11,
                  "snippet": {
                    "text": "along with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\n",
                    "rendered": {
                      "text": "along with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\n",
                      "markdown": "`along with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/COPYING"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 63,
                  "endLine": 54,
                  "endColumn": 67,
                  "snippet": {
                    "text": "patents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n",
                    "rendered": {
                      "text": "patents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n",
                      "markdown": "`patents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/COPYING"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 12,
                  "endLine": 250,
                  "endColumn": 18,
                  "snippet": {
                    "text": "this License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\n",
                    "rendered": {
                      "text": "this License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\n",
                      "markdown": "`this License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/COPYING"
                },
                "region": {
                  "startLine": 238,
                  "startColumn": 34,
                  "endLine": 238,
                  "endColumn": 40,
                  "snippet": {
                    "text": "the limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n",
                    "rendered": {
                      "text": "the limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n",
                      "markdown": "`the limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/COPYING"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 9,
                  "endLine": 189,
                  "endColumn": 15,
                  "snippet": {
                    "text": "all its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\n",
                    "rendered": {
                      "text": "all its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\n",
                      "markdown": "`all its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/COPYING"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 12,
                  "endLine": 51,
                  "endColumn": 18,
                  "snippet": {
                    "text": "authors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n",
                    "rendered": {
                      "text": "authors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n",
                      "markdown": "`authors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/COPYING"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 4,
                  "endLine": 24,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n",
                    "rendered": {
                      "text": "  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n",
                      "markdown": "`  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audit.spec"
                },
                "region": {
                  "startLine": 154,
                  "endLine": 154,
                  "endColumn": 7,
                  "snippet": {
                    "text": "if [ \"$files\" -eq 0 ] ; then\n\tcp %{_datadir}/%{name}-rules/10-base-config.rules /etc/audit/rules.d/audit.rules\n\t# Fix up permissions\n\tchmod 0600 /etc/audit/rules.d/audit.rules\n\t# Make the new rules active\n\taugenrules --load\nfi\n",
                    "rendered": {
                      "text": "if [ \"$files\" -eq 0 ] ; then\n\tcp %{_datadir}/%{name}-rules/10-base-config.rules /etc/audit/rules.d/audit.rules\n\t# Fix up permissions\n\tchmod 0600 /etc/audit/rules.d/audit.rules\n\t# Make the new rules active\n\taugenrules --load\nfi\n",
                      "markdown": "`if [ \"$files\" -eq 0 ] ; then\n\tcp %{_datadir}/%{name}-rules/10-base-config.rules /etc/audit/rules.d/audit.rules\n\t# Fix up permissions\n\tchmod 0600 /etc/audit/rules.d/audit.rules\n\t# Make the new rules active\n\taugenrules --load\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audit.spec"
                },
                "region": {
                  "startLine": 152,
                  "endLine": 152,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Copy default rules into place on new installation\nfiles=`ls /etc/audit/rules.d/ 2>/dev/null | wc -w`\nif [ \"$files\" -eq 0 ] ; then\n\tcp %{_datadir}/%{name}-rules/10-base-config.rules /etc/audit/rules.d/audit.rules\n\t# Fix up permissions\n\tchmod 0600 /etc/audit/rules.d/audit.rules\n\t# Make the new rules active\n",
                    "rendered": {
                      "text": "# Copy default rules into place on new installation\nfiles=`ls /etc/audit/rules.d/ 2>/dev/null | wc -w`\nif [ \"$files\" -eq 0 ] ; then\n\tcp %{_datadir}/%{name}-rules/10-base-config.rules /etc/audit/rules.d/audit.rules\n\t# Fix up permissions\n\tchmod 0600 /etc/audit/rules.d/audit.rules\n\t# Make the new rules active\n",
                      "markdown": "`# Copy default rules into place on new installation\nfiles=`ls /etc/audit/rules.d/ 2>/dev/null | wc -w`\nif [ \"$files\" -eq 0 ] ; then\n\tcp %{_datadir}/%{name}-rules/10-base-config.rules /etc/audit/rules.d/audit.rules\n\t# Fix up permissions\n\tchmod 0600 /etc/audit/rules.d/audit.rules\n\t# Make the new rules active\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audit.spec"
                },
                "region": {
                  "startLine": 144,
                  "endLine": 144,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    fi\n# if an install, start it since preset says we should be running\nelif [ $1 -eq 1 ]; then\n\tsystemctl start auditd\nfi\n\n%post rules\n",
                    "rendered": {
                      "text": "    fi\n# if an install, start it since preset says we should be running\nelif [ $1 -eq 1 ]; then\n\tsystemctl start auditd\nfi\n\n%post rules\n",
                      "markdown": "`    fi\n# if an install, start it since preset says we should be running\nelif [ $1 -eq 1 ]; then\n\tsystemctl start auditd\nfi\n\n%post rules\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audit.spec"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 7,
                  "endLine": 140,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    state=$(systemctl status auditd | awk '/Active:/ { print $2 }')\n    if [ $state = \"active\" ] ; then\n        auditctl --signal stop || true\n        systemctl start auditd\n    fi\n# if an install, start it since preset says we should be running\nelif [ $1 -eq 1 ]; then\n",
                    "rendered": {
                      "text": "    state=$(systemctl status auditd | awk '/Active:/ { print $2 }')\n    if [ $state = \"active\" ] ; then\n        auditctl --signal stop || true\n        systemctl start auditd\n    fi\n# if an install, start it since preset says we should be running\nelif [ $1 -eq 1 ]; then\n",
                      "markdown": "`    state=$(systemctl status auditd | awk '/Active:/ { print $2 }')\n    if [ $state = \"active\" ] ; then\n        auditctl --signal stop || true\n        systemctl start auditd\n    fi\n# if an install, start it since preset says we should be running\nelif [ $1 -eq 1 ]; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audit.spec"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 37,
                  "endLine": 137,
                  "endColumn": 42,
                  "snippet": {
                    "text": "%systemd_post auditd.service\n# If an upgrade, restart it if it's running\nif [ $1 -eq 2 ]; then\n    state=$(systemctl status auditd | awk '/Active:/ { print $2 }')\n    if [ $state = \"active\" ] ; then\n        auditctl --signal stop || true\n        systemctl start auditd\n",
                    "rendered": {
                      "text": "%systemd_post auditd.service\n# If an upgrade, restart it if it's running\nif [ $1 -eq 2 ]; then\n    state=$(systemctl status auditd | awk '/Active:/ { print $2 }')\n    if [ $state = \"active\" ] ; then\n        auditctl --signal stop || true\n        systemctl start auditd\n",
                      "markdown": "`%systemd_post auditd.service\n# If an upgrade, restart it if it's running\nif [ $1 -eq 2 ]; then\n    state=$(systemctl status auditd | awk '/Active:/ { print $2 }')\n    if [ $state = \"active\" ] ; then\n        auditctl --signal stop || true\n        systemctl start auditd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audit.spec"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 41,
                  "endLine": 122,
                  "endColumn": 5,
                  "snippet": {
                    "text": "rm -f $RPM_BUILD_ROOT/%{_libdir}/libaudit.a\nrm -f $RPM_BUILD_ROOT/%{_libdir}/libauparse.a\n\nfind $RPM_BUILD_ROOT -name '*.la' -delete\nfind $RPM_BUILD_ROOT/%{_libdir}/python3.?/site-packages -name '*.a' -delete\n\n# On platforms with 32 & 64 bit libs, we need to coordinate the timestamp\ntouch -r ./audit.spec $RPM_BUILD_ROOT/etc/libaudit.conf\n",
                    "rendered": {
                      "text": "rm -f $RPM_BUILD_ROOT/%{_libdir}/libaudit.a\nrm -f $RPM_BUILD_ROOT/%{_libdir}/libauparse.a\n\nfind $RPM_BUILD_ROOT -name '*.la' -delete\nfind $RPM_BUILD_ROOT/%{_libdir}/python3.?/site-packages -name '*.a' -delete\n\n# On platforms with 32 & 64 bit libs, we need to coordinate the timestamp\ntouch -r ./audit.spec $RPM_BUILD_ROOT/etc/libaudit.conf\n",
                      "markdown": "`rm -f $RPM_BUILD_ROOT/%{_libdir}/libaudit.a\nrm -f $RPM_BUILD_ROOT/%{_libdir}/libauparse.a\n\nfind $RPM_BUILD_ROOT -name '*.la' -delete\nfind $RPM_BUILD_ROOT/%{_libdir}/python3.?/site-packages -name '*.a' -delete\n\n# On platforms with 32 & 64 bit libs, we need to coordinate the timestamp\ntouch -r ./audit.spec $RPM_BUILD_ROOT/etc/libaudit.conf\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/audit.spec"
                },
                "region": {
                  "startLine": 120,
                  "endLine": 121,
                  "endColumn": 5,
                  "snippet": {
                    "text": "# Remove these items so they don't get picked up.\nrm -f $RPM_BUILD_ROOT/%{_libdir}/libaudit.a\nrm -f $RPM_BUILD_ROOT/%{_libdir}/libauparse.a\n\nfind $RPM_BUILD_ROOT -name '*.la' -delete\nfind $RPM_BUILD_ROOT/%{_libdir}/python3.?/site-packages -name '*.a' -delete\n\n# On platforms with 32 & 64 bit libs, we need to coordinate the timestamp\n",
                    "rendered": {
                      "text": "# Remove these items so they don't get picked up.\nrm -f $RPM_BUILD_ROOT/%{_libdir}/libaudit.a\nrm -f $RPM_BUILD_ROOT/%{_libdir}/libauparse.a\n\nfind $RPM_BUILD_ROOT -name '*.la' -delete\nfind $RPM_BUILD_ROOT/%{_libdir}/python3.?/site-packages -name '*.a' -delete\n\n# On platforms with 32 & 64 bit libs, we need to coordinate the timestamp\n",
                      "markdown": "`# Remove these items so they don't get picked up.\nrm -f $RPM_BUILD_ROOT/%{_libdir}/libaudit.a\nrm -f $RPM_BUILD_ROOT/%{_libdir}/libauparse.a\n\nfind $RPM_BUILD_ROOT -name '*.la' -delete\nfind $RPM_BUILD_ROOT/%{_libdir}/python3.?/site-packages -name '*.a' -delete\n\n# On platforms with 32 & 64 bit libs, we need to coordinate the timestamp\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/configure.ac"
                },
                "region": {
                  "startLine": 416,
                  "startColumn": 27,
                  "endLine": 416,
                  "endColumn": 32,
                  "snippet": {
                    "text": "  Installation prefix:    $prefix\n  Compiler:               $CC\n  Compiler flags:\n`echo $CFLAGS | fmt -w 50 | sed 's,^,                          ,'`\n  __attr_access support:  $ACCESS\n  __attr_dealloc_free support:  $DEALLOC\n\"\n",
                    "rendered": {
                      "text": "  Installation prefix:    $prefix\n  Compiler:               $CC\n  Compiler flags:\n`echo $CFLAGS | fmt -w 50 | sed 's,^,                          ,'`\n  __attr_access support:  $ACCESS\n  __attr_dealloc_free support:  $DEALLOC\n\"\n",
                      "markdown": "`  Installation prefix:    $prefix\n  Compiler:               $CC\n  Compiler flags:\n`echo $CFLAGS | fmt -w 50 | sed 's,^,                          ,'`\n  __attr_access support:  $ACCESS\n  __attr_dealloc_free support:  $DEALLOC\n\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/configure.ac"
                },
                "region": {
                  "startLine": 416,
                  "startColumn": 15,
                  "endLine": 416,
                  "endColumn": 20,
                  "snippet": {
                    "text": "  Installation prefix:    $prefix\n  Compiler:               $CC\n  Compiler flags:\n`echo $CFLAGS | fmt -w 50 | sed 's,^,                          ,'`\n  __attr_access support:  $ACCESS\n  __attr_dealloc_free support:  $DEALLOC\n\"\n",
                    "rendered": {
                      "text": "  Installation prefix:    $prefix\n  Compiler:               $CC\n  Compiler flags:\n`echo $CFLAGS | fmt -w 50 | sed 's,^,                          ,'`\n  __attr_access support:  $ACCESS\n  __attr_dealloc_free support:  $DEALLOC\n\"\n",
                      "markdown": "`  Installation prefix:    $prefix\n  Compiler:               $CC\n  Compiler flags:\n`echo $CFLAGS | fmt -w 50 | sed 's,^,                          ,'`\n  __attr_access support:  $ACCESS\n  __attr_dealloc_free support:  $DEALLOC\n\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/configure.ac"
                },
                "region": {
                  "startLine": 370,
                  "startColumn": 27,
                  "endLine": 370,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t\tAC_LINK_IFELSE([AC_LANG_PROGRAM(\n\t\t\t[[ int allow_severity; int deny_severity; ]],\n\t\t\t[[ hosts_access(); ]])],[],\n\t\t\t[ AC_MSG_ERROR(Could not find the $withval library.  You must first install tcp_wrappers.) ])\n\t\tLIBS=\"$OLDLIBS\"\n\t\t;;\n\tesac ],\n",
                    "rendered": {
                      "text": "\t\tAC_LINK_IFELSE([AC_LANG_PROGRAM(\n\t\t\t[[ int allow_severity; int deny_severity; ]],\n\t\t\t[[ hosts_access(); ]])],[],\n\t\t\t[ AC_MSG_ERROR(Could not find the $withval library.  You must first install tcp_wrappers.) ])\n\t\tLIBS=\"$OLDLIBS\"\n\t\t;;\n\tesac ],\n",
                      "markdown": "`\t\tAC_LINK_IFELSE([AC_LANG_PROGRAM(\n\t\t\t[[ int allow_severity; int deny_severity; ]],\n\t\t\t[[ hosts_access(); ]])],[],\n\t\t\t[ AC_MSG_ERROR(Could not find the $withval library.  You must first install tcp_wrappers.) ])\n\t\tLIBS=\"$OLDLIBS\"\n\t\t;;\n\tesac ],\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/configure.ac"
                },
                "region": {
                  "startLine": 361,
                  "startColumn": 26,
                  "endLine": 361,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t\t\tLIBWRAP_LIBS=\"$withval\"\n\t\tfi\n\t\tAC_CHECK_HEADER(tcpd.h, [],\n\t\t\tAC_MSG_ERROR([Could not find libwrap headers]))\n\t\tAC_CHECK_LIB(wrap, request_init, [])\n\t\tAC_CHECK_LIB(nsl, yp_get_default_domain, [\n\t\t\tLIBWRAP_LIBS=\"$LIBWRAP_LIBS -lnsl\" ])\n",
                    "rendered": {
                      "text": "\t\t\tLIBWRAP_LIBS=\"$withval\"\n\t\tfi\n\t\tAC_CHECK_HEADER(tcpd.h, [],\n\t\t\tAC_MSG_ERROR([Could not find libwrap headers]))\n\t\tAC_CHECK_LIB(wrap, request_init, [])\n\t\tAC_CHECK_LIB(nsl, yp_get_default_domain, [\n\t\t\tLIBWRAP_LIBS=\"$LIBWRAP_LIBS -lnsl\" ])\n",
                      "markdown": "`\t\t\tLIBWRAP_LIBS=\"$withval\"\n\t\tfi\n\t\tAC_CHECK_HEADER(tcpd.h, [],\n\t\t\tAC_MSG_ERROR([Could not find libwrap headers]))\n\t\tAC_CHECK_LIB(wrap, request_init, [])\n\t\tAC_CHECK_LIB(nsl, yp_get_default_domain, [\n\t\t\tLIBWRAP_LIBS=\"$LIBWRAP_LIBS -lnsl\" ])\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/configure.ac"
                },
                "region": {
                  "startLine": 348,
                  "startColumn": 26,
                  "endLine": 348,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\tyes)\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_CHECK_HEADER(tcpd.h, [],\n\t\t\tAC_MSG_ERROR([Could not find libwrap headers]),)\n\t\tAC_CHECK_LIB(wrap, request_init, [ LIBWRAP_LIBS=\"-lwrap\" ])\n\t\tAC_CHECK_LIB(nsl, yp_get_default_domain, [\n\t\t\tLIBWRAP_LIBS=\"$LIBWRAP_LIBS -lnsl\" ])\n",
                    "rendered": {
                      "text": "\tyes)\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_CHECK_HEADER(tcpd.h, [],\n\t\t\tAC_MSG_ERROR([Could not find libwrap headers]),)\n\t\tAC_CHECK_LIB(wrap, request_init, [ LIBWRAP_LIBS=\"-lwrap\" ])\n\t\tAC_CHECK_LIB(nsl, yp_get_default_domain, [\n\t\t\tLIBWRAP_LIBS=\"$LIBWRAP_LIBS -lnsl\" ])\n",
                      "markdown": "`\tyes)\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_CHECK_HEADER(tcpd.h, [],\n\t\t\tAC_MSG_ERROR([Could not find libwrap headers]),)\n\t\tAC_CHECK_LIB(wrap, request_init, [ LIBWRAP_LIBS=\"-lwrap\" ])\n\t\tAC_CHECK_LIB(nsl, yp_get_default_domain, [\n\t\t\tLIBWRAP_LIBS=\"$LIBWRAP_LIBS -lnsl\" ])\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/configure.ac"
                },
                "region": {
                  "startLine": 184,
                  "startColumn": 23,
                  "endLine": 184,
                  "endColumn": 28,
                  "snippet": {
                    "text": "        golang_found=\"yes\"\n\n        # Substitute some golang environment.\n        GOROOT=`$GOLANG env GOROOT`\n        AC_SUBST([GOROOT])\n    ], [\n\tif test \"x$use_golang\" = xyes ; then\n",
                    "rendered": {
                      "text": "        golang_found=\"yes\"\n\n        # Substitute some golang environment.\n        GOROOT=`$GOLANG env GOROOT`\n        AC_SUBST([GOROOT])\n    ], [\n\tif test \"x$use_golang\" = xyes ; then\n",
                      "markdown": "`        golang_found=\"yes\"\n\n        # Substitute some golang environment.\n        GOROOT=`$GOLANG env GOROOT`\n        AC_SUBST([GOROOT])\n    ], [\n\tif test \"x$use_golang\" = xyes ; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/TODO"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 18,
                  "endLine": 7,
                  "endColumn": 24,
                  "snippet": {
                    "text": "* In auditd, look into non-blocking handling of write to plugins\n* Basic HIDS based on reactive audit component\n* Multi-thread audisp-remote\n* Support multiple time streams when searching\n* If searching user/group doesn't map to uid/gid, do translated string search\n\n4.1\n",
                    "rendered": {
                      "text": "* In auditd, look into non-blocking handling of write to plugins\n* Basic HIDS based on reactive audit component\n* Multi-thread audisp-remote\n* Support multiple time streams when searching\n* If searching user/group doesn't map to uid/gid, do translated string search\n\n4.1\n",
                      "markdown": "`* In auditd, look into non-blocking handling of write to plugins\n* Basic HIDS based on reactive audit component\n* Multi-thread audisp-remote\n* Support multiple time streams when searching\n* If searching user/group doesn't map to uid/gid, do translated string search\n\n4.1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/THANKS"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 15,
                  "endLine": 15,
                  "endColumn": 20,
                  "snippet": {
                    "text": "* Dan Walsh of Red Hat for Python bindings\n* John Dennis of Red Hat for rewriting the python bindings and auparse updates\n* Miloslav Trmac of Red Hat for numerous patches including store forward remote logging\n* DJ Delorie of Red Hat for the remote logging code\n* Marcelo Cerri of IBM for the auvirt program\n* Peter Moody of Google for the interfield comparator code\n* Burn Alting for the augenrules code and the auparse list of lists conversion\n",
                    "rendered": {
                      "text": "* Dan Walsh of Red Hat for Python bindings\n* John Dennis of Red Hat for rewriting the python bindings and auparse updates\n* Miloslav Trmac of Red Hat for numerous patches including store forward remote logging\n* DJ Delorie of Red Hat for the remote logging code\n* Marcelo Cerri of IBM for the auvirt program\n* Peter Moody of Google for the interfield comparator code\n* Burn Alting for the augenrules code and the auparse list of lists conversion\n",
                      "markdown": "`* Dan Walsh of Red Hat for Python bindings\n* John Dennis of Red Hat for rewriting the python bindings and auparse updates\n* Miloslav Trmac of Red Hat for numerous patches including store forward remote logging\n* DJ Delorie of Red Hat for the remote logging code\n* Marcelo Cerri of IBM for the auvirt program\n* Peter Moody of Google for the interfield comparator code\n* Burn Alting for the augenrules code and the auparse list of lists conversion\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/THANKS"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 19,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "* Lisa Smith of HP for the audit failure query function\n* Dan Walsh of Red Hat for Python bindings\n* John Dennis of Red Hat for rewriting the python bindings and auparse updates\n* Miloslav Trmac of Red Hat for numerous patches including store forward remote logging\n* DJ Delorie of Red Hat for the remote logging code\n* Marcelo Cerri of IBM for the auvirt program\n* Peter Moody of Google for the interfield comparator code\n",
                    "rendered": {
                      "text": "* Lisa Smith of HP for the audit failure query function\n* Dan Walsh of Red Hat for Python bindings\n* John Dennis of Red Hat for rewriting the python bindings and auparse updates\n* Miloslav Trmac of Red Hat for numerous patches including store forward remote logging\n* DJ Delorie of Red Hat for the remote logging code\n* Marcelo Cerri of IBM for the auvirt program\n* Peter Moody of Google for the interfield comparator code\n",
                      "markdown": "`* Lisa Smith of HP for the audit failure query function\n* Dan Walsh of Red Hat for Python bindings\n* John Dennis of Red Hat for rewriting the python bindings and auparse updates\n* Miloslav Trmac of Red Hat for numerous patches including store forward remote logging\n* DJ Delorie of Red Hat for the remote logging code\n* Marcelo Cerri of IBM for the auvirt program\n* Peter Moody of Google for the interfield comparator code\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/THANKS"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 16,
                  "endLine": 13,
                  "endColumn": 21,
                  "snippet": {
                    "text": "* Darrel Goeddel of TCS for new audit rule format patch\n* Lisa Smith of HP for the audit failure query function\n* Dan Walsh of Red Hat for Python bindings\n* John Dennis of Red Hat for rewriting the python bindings and auparse updates\n* Miloslav Trmac of Red Hat for numerous patches including store forward remote logging\n* DJ Delorie of Red Hat for the remote logging code\n* Marcelo Cerri of IBM for the auvirt program\n",
                    "rendered": {
                      "text": "* Darrel Goeddel of TCS for new audit rule format patch\n* Lisa Smith of HP for the audit failure query function\n* Dan Walsh of Red Hat for Python bindings\n* John Dennis of Red Hat for rewriting the python bindings and auparse updates\n* Miloslav Trmac of Red Hat for numerous patches including store forward remote logging\n* DJ Delorie of Red Hat for the remote logging code\n* Marcelo Cerri of IBM for the auvirt program\n",
                      "markdown": "`* Darrel Goeddel of TCS for new audit rule format patch\n* Lisa Smith of HP for the audit failure query function\n* Dan Walsh of Red Hat for Python bindings\n* John Dennis of Red Hat for rewriting the python bindings and auparse updates\n* Miloslav Trmac of Red Hat for numerous patches including store forward remote logging\n* DJ Delorie of Red Hat for the remote logging code\n* Marcelo Cerri of IBM for the auvirt program\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/THANKS"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 14,
                  "endLine": 12,
                  "endColumn": 19,
                  "snippet": {
                    "text": "* Sergey Tikhonov for the Alpha Processor support patch\n* Darrel Goeddel of TCS for new audit rule format patch\n* Lisa Smith of HP for the audit failure query function\n* Dan Walsh of Red Hat for Python bindings\n* John Dennis of Red Hat for rewriting the python bindings and auparse updates\n* Miloslav Trmac of Red Hat for numerous patches including store forward remote logging\n* DJ Delorie of Red Hat for the remote logging code\n",
                    "rendered": {
                      "text": "* Sergey Tikhonov for the Alpha Processor support patch\n* Darrel Goeddel of TCS for new audit rule format patch\n* Lisa Smith of HP for the audit failure query function\n* Dan Walsh of Red Hat for Python bindings\n* John Dennis of Red Hat for rewriting the python bindings and auparse updates\n* Miloslav Trmac of Red Hat for numerous patches including store forward remote logging\n* DJ Delorie of Red Hat for the remote logging code\n",
                      "markdown": "`* Sergey Tikhonov for the Alpha Processor support patch\n* Darrel Goeddel of TCS for new audit rule format patch\n* Lisa Smith of HP for the audit failure query function\n* Dan Walsh of Red Hat for Python bindings\n* John Dennis of Red Hat for rewriting the python bindings and auparse updates\n* Miloslav Trmac of Red Hat for numerous patches including store forward remote logging\n* DJ Delorie of Red Hat for the remote logging code\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/audit.zip/THANKS"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 47,
                  "endLine": 5,
                  "endColumn": 54,
                  "snippet": {
                    "text": "to this project.\n\n* Kris Wilson of IBM for all the testing and bug reports\n* Tim Chavez of IBM for the auditctl filesystem watch code\n* Debbie Velarde of IBM for the command line parsing code of ausearch and lspp rules sample configuration\n* Amy Griffis of HP for the capp.rules sample configuration\n* Dustin Kirkland of IBM for the new rule operator & exclude filter patch\n",
                    "rendered": {
                      "text": "to this project.\n\n* Kris Wilson of IBM for all the testing and bug reports\n* Tim Chavez of IBM for the auditctl filesystem watch code\n* Debbie Velarde of IBM for the command line parsing code of ausearch and lspp rules sample configuration\n* Amy Griffis of HP for the capp.rules sample configuration\n* Dustin Kirkland of IBM for the new rule operator & exclude filter patch\n",
                      "markdown": "`to this project.\n\n* Kris Wilson of IBM for all the testing and bug reports\n* Tim Chavez of IBM for the auditctl filesystem watch code\n* Debbie Velarde of IBM for the command line parsing code of ausearch and lspp rules sample configuration\n* Amy Griffis of HP for the capp.rules sample configuration\n* Dustin Kirkland of IBM for the new rule operator & exclude filter patch\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}