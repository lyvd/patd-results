{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/post-vanilla/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/post-vanilla/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-space-normalized/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-space-normalized/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/aws_imds_client.c"
                },
                "region": {
                  "startLine": 994,
                  "startColumn": 73,
                  "endLine": 994,
                  "endColumn": 81,
                  "snippet": {
                    "text": "        AWS_LOGF_DEBUG(\n            AWS_LS_IMDS_CLIENT, \"(id=%p) IMDS client updated the cached token successfully.\", (void *)client);\n    } else {\n        AWS_LOGF_ERROR(AWS_LS_IMDS_CLIENT, \"(id=%p) IMDS client failed to update the token from IMDS.\", (void *)client);\n    }\n}\n\n",
                    "rendered": {
                      "text": "        AWS_LOGF_DEBUG(\n            AWS_LS_IMDS_CLIENT, \"(id=%p) IMDS client updated the cached token successfully.\", (void *)client);\n    } else {\n        AWS_LOGF_ERROR(AWS_LS_IMDS_CLIENT, \"(id=%p) IMDS client failed to update the token from IMDS.\", (void *)client);\n    }\n}\n\n",
                      "markdown": "`        AWS_LOGF_DEBUG(\n            AWS_LS_IMDS_CLIENT, \"(id=%p) IMDS client updated the cached token successfully.\", (void *)client);\n    } else {\n        AWS_LOGF_ERROR(AWS_LS_IMDS_CLIENT, \"(id=%p) IMDS client failed to update the token from IMDS.\", (void *)client);\n    }\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_profile.c"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 63,
                  "endLine": 124,
                  "endColumn": 69,
                  "snippet": {
                    "text": "        } else {\n            AWS_LOGF_INFO(\n                AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n                \"(id=%p) Profile credentials provider could not find a profile named \\\"%s\\\"\",\n                (void *)provider,\n                aws_string_c_str(impl->profile_name));\n        }\n",
                    "rendered": {
                      "text": "        } else {\n            AWS_LOGF_INFO(\n                AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n                \"(id=%p) Profile credentials provider could not find a profile named \\\"%s\\\"\",\n                (void *)provider,\n                aws_string_c_str(impl->profile_name));\n        }\n",
                      "markdown": "`        } else {\n            AWS_LOGF_INFO(\n                AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n                \"(id=%p) Profile credentials provider could not find a profile named \\\"%s\\\"\",\n                (void *)provider,\n                aws_string_c_str(impl->profile_name));\n        }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_profile.c"
                },
                "region": {
                  "startLine": 512,
                  "startColumn": 23,
                  "endLine": 512,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        AWS_LOGF_ERROR(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n            \"static: Profile credentials provider could not load\"\n            \" a profile at %s.\",\n            aws_string_c_str(profile_name));\n        goto on_finished;\n    }\n",
                    "rendered": {
                      "text": "        AWS_LOGF_ERROR(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n            \"static: Profile credentials provider could not load\"\n            \" a profile at %s.\",\n            aws_string_c_str(profile_name));\n        goto on_finished;\n    }\n",
                      "markdown": "`        AWS_LOGF_ERROR(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n            \"static: Profile credentials provider could not load\"\n            \" a profile at %s.\",\n            aws_string_c_str(profile_name));\n        goto on_finished;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_profile.c"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 110,
                  "endLine": 97,
                  "endColumn": 114,
                  "snippet": {
                    "text": "        } else {\n            AWS_LOGF_DEBUG(\n                AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n                \"(id=%p) Profile credentials provider failed to build credentials profile collection from file at (%s)\",\n                (void *)provider,\n                aws_string_c_str(impl->credentials_file_path));\n        }\n",
                    "rendered": {
                      "text": "        } else {\n            AWS_LOGF_DEBUG(\n                AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n                \"(id=%p) Profile credentials provider failed to build credentials profile collection from file at (%s)\",\n                (void *)provider,\n                aws_string_c_str(impl->credentials_file_path));\n        }\n",
                      "markdown": "`        } else {\n            AWS_LOGF_DEBUG(\n                AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n                \"(id=%p) Profile credentials provider failed to build credentials profile collection from file at (%s)\",\n                (void *)provider,\n                aws_string_c_str(impl->credentials_file_path));\n        }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_profile.c"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 113,
                  "endLine": 90,
                  "endColumn": 117,
                  "snippet": {
                    "text": "        if (credentials_profiles != NULL) {\n            AWS_LOGF_DEBUG(\n                AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n                \"(id=%p) Profile credentials provider successfully built credentials profile collection from file at \"\n                \"(%s)\",\n                (void *)provider,\n                aws_string_c_str(impl->credentials_file_path));\n",
                    "rendered": {
                      "text": "        if (credentials_profiles != NULL) {\n            AWS_LOGF_DEBUG(\n                AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n                \"(id=%p) Profile credentials provider successfully built credentials profile collection from file at \"\n                \"(%s)\",\n                (void *)provider,\n                aws_string_c_str(impl->credentials_file_path));\n",
                      "markdown": "`        if (credentials_profiles != NULL) {\n            AWS_LOGF_DEBUG(\n                AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n                \"(id=%p) Profile credentials provider successfully built credentials profile collection from file at \"\n                \"(%s)\",\n                (void *)provider,\n                aws_string_c_str(impl->credentials_file_path));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_profile.c"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 105,
                  "endLine": 76,
                  "endColumn": 109,
                  "snippet": {
                    "text": "        } else {\n            AWS_LOGF_DEBUG(\n                AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n                \"(id=%p) Profile credentials provider failed to build config profile collection from file at (%s)\",\n                (void *)provider,\n                aws_string_c_str(impl->config_file_path));\n        }\n",
                    "rendered": {
                      "text": "        } else {\n            AWS_LOGF_DEBUG(\n                AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n                \"(id=%p) Profile credentials provider failed to build config profile collection from file at (%s)\",\n                (void *)provider,\n                aws_string_c_str(impl->config_file_path));\n        }\n",
                      "markdown": "`        } else {\n            AWS_LOGF_DEBUG(\n                AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n                \"(id=%p) Profile credentials provider failed to build config profile collection from file at (%s)\",\n                (void *)provider,\n                aws_string_c_str(impl->config_file_path));\n        }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_profile.c"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 108,
                  "endLine": 70,
                  "endColumn": 112,
                  "snippet": {
                    "text": "        if (config_profiles != NULL) {\n            AWS_LOGF_DEBUG(\n                AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n                \"(id=%p) Profile credentials provider successfully built config profile collection from file at (%s)\",\n                (void *)provider,\n                aws_string_c_str(impl->config_file_path));\n        } else {\n",
                    "rendered": {
                      "text": "        if (config_profiles != NULL) {\n            AWS_LOGF_DEBUG(\n                AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n                \"(id=%p) Profile credentials provider successfully built config profile collection from file at (%s)\",\n                (void *)provider,\n                aws_string_c_str(impl->config_file_path));\n        } else {\n",
                      "markdown": "`        if (config_profiles != NULL) {\n            AWS_LOGF_DEBUG(\n                AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n                \"(id=%p) Profile credentials provider successfully built config profile collection from file at (%s)\",\n                (void *)provider,\n                aws_string_c_str(impl->config_file_path));\n        } else {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/signing_config.c"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 42,
                  "endLine": 11,
                  "endColumn": 108,
                  "snippet": {
                    "text": "#include <aws/auth/credentials.h>\n\nconst struct aws_byte_cursor g_aws_signed_body_value_empty_sha256 =\n    AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\");\n\nconst struct aws_byte_cursor g_aws_signed_body_value_unsigned_payload =\n    AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"UNSIGNED-PAYLOAD\");\n",
                    "rendered": {
                      "text": "#include <aws/auth/credentials.h>\n\nconst struct aws_byte_cursor g_aws_signed_body_value_empty_sha256 =\n    AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\");\n\nconst struct aws_byte_cursor g_aws_signed_body_value_unsigned_payload =\n    AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"UNSIGNED-PAYLOAD\");\n",
                      "markdown": "`#include <aws/auth/credentials.h>\n\nconst struct aws_byte_cursor g_aws_signed_body_value_empty_sha256 =\n    AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\");\n\nconst struct aws_byte_cursor g_aws_signed_body_value_unsigned_payload =\n    AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"UNSIGNED-PAYLOAD\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/signing_config.c"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 80,
                  "endLine": 95,
                  "endColumn": 89,
                  "snippet": {
                    "text": "    }\n\n    if (config->service.len == 0) {\n        AWS_LOGF_ERROR(AWS_LS_AUTH_SIGNING, \"(id=%p) Signing config is missing a service identifier\", (void *)config);\n        return aws_raise_error(AWS_AUTH_SIGNING_INVALID_CONFIGURATION);\n    }\n\n",
                    "rendered": {
                      "text": "    }\n\n    if (config->service.len == 0) {\n        AWS_LOGF_ERROR(AWS_LS_AUTH_SIGNING, \"(id=%p) Signing config is missing a service identifier\", (void *)config);\n        return aws_raise_error(AWS_AUTH_SIGNING_INVALID_CONFIGURATION);\n    }\n\n",
                      "markdown": "`    }\n\n    if (config->service.len == 0) {\n        AWS_LOGF_ERROR(AWS_LS_AUTH_SIGNING, \"(id=%p) Signing config is missing a service identifier\", (void *)config);\n        return aws_raise_error(AWS_AUTH_SIGNING_INVALID_CONFIGURATION);\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_ecs.c"
                },
                "region": {
                  "startLine": 775,
                  "startColumn": 25,
                  "endLine": 775,
                  "endColumn": 35,
                  "snippet": {
                    "text": "        explicit_options.auth_token_file_path = aws_byte_cursor_from_string(ecs_env_token_file_path);\n    }\n    if (ecs_env_token != NULL && ecs_env_token->len > 0) {\n        explicit_options.auth_token = aws_byte_cursor_from_string(ecs_env_token);\n    }\n\n    if (relative_uri_str != NULL && relative_uri_str->len != 0) {\n",
                    "rendered": {
                      "text": "        explicit_options.auth_token_file_path = aws_byte_cursor_from_string(ecs_env_token_file_path);\n    }\n    if (ecs_env_token != NULL && ecs_env_token->len > 0) {\n        explicit_options.auth_token = aws_byte_cursor_from_string(ecs_env_token);\n    }\n\n    if (relative_uri_str != NULL && relative_uri_str->len != 0) {\n",
                      "markdown": "`        explicit_options.auth_token_file_path = aws_byte_cursor_from_string(ecs_env_token_file_path);\n    }\n    if (ecs_env_token != NULL && ecs_env_token->len > 0) {\n        explicit_options.auth_token = aws_byte_cursor_from_string(ecs_env_token);\n    }\n\n    if (relative_uri_str != NULL && relative_uri_str->len != 0) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_ecs.c"
                },
                "region": {
                  "startLine": 772,
                  "startColumn": 25,
                  "endLine": 772,
                  "endColumn": 35,
                  "snippet": {
                    "text": "    aws_get_environment_value(allocator, s_ecs_creds_env_full_uri, &full_uri_str);\n\n    if (ecs_env_token_file_path != NULL && ecs_env_token_file_path->len > 0) {\n        explicit_options.auth_token_file_path = aws_byte_cursor_from_string(ecs_env_token_file_path);\n    }\n    if (ecs_env_token != NULL && ecs_env_token->len > 0) {\n        explicit_options.auth_token = aws_byte_cursor_from_string(ecs_env_token);\n",
                    "rendered": {
                      "text": "    aws_get_environment_value(allocator, s_ecs_creds_env_full_uri, &full_uri_str);\n\n    if (ecs_env_token_file_path != NULL && ecs_env_token_file_path->len > 0) {\n        explicit_options.auth_token_file_path = aws_byte_cursor_from_string(ecs_env_token_file_path);\n    }\n    if (ecs_env_token != NULL && ecs_env_token->len > 0) {\n        explicit_options.auth_token = aws_byte_cursor_from_string(ecs_env_token);\n",
                      "markdown": "`    aws_get_environment_value(allocator, s_ecs_creds_env_full_uri, &full_uri_str);\n\n    if (ecs_env_token_file_path != NULL && ecs_env_token_file_path->len > 0) {\n        explicit_options.auth_token_file_path = aws_byte_cursor_from_string(ecs_env_token_file_path);\n    }\n    if (ecs_env_token != NULL && ecs_env_token->len > 0) {\n        explicit_options.auth_token = aws_byte_cursor_from_string(ecs_env_token);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_ecs.c"
                },
                "region": {
                  "startLine": 712,
                  "startColumn": 18,
                  "endLine": 712,
                  "endColumn": 28,
                  "snippet": {
                    "text": "    }\n    if (options->auth_token_file_path.len != 0) {\n        impl->auth_token_file_path = aws_string_new_from_cursor(allocator, &options->auth_token_file_path);\n        if (impl->auth_token_file_path == NULL) {\n            goto on_error;\n        }\n    }\n",
                    "rendered": {
                      "text": "    }\n    if (options->auth_token_file_path.len != 0) {\n        impl->auth_token_file_path = aws_string_new_from_cursor(allocator, &options->auth_token_file_path);\n        if (impl->auth_token_file_path == NULL) {\n            goto on_error;\n        }\n    }\n",
                      "markdown": "`    }\n    if (options->auth_token_file_path.len != 0) {\n        impl->auth_token_file_path = aws_string_new_from_cursor(allocator, &options->auth_token_file_path);\n        if (impl->auth_token_file_path == NULL) {\n            goto on_error;\n        }\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_ecs.c"
                },
                "region": {
                  "startLine": 711,
                  "startColumn": 85,
                  "endLine": 711,
                  "endColumn": 95,
                  "snippet": {
                    "text": "        }\n    }\n    if (options->auth_token_file_path.len != 0) {\n        impl->auth_token_file_path = aws_string_new_from_cursor(allocator, &options->auth_token_file_path);\n        if (impl->auth_token_file_path == NULL) {\n            goto on_error;\n        }\n",
                    "rendered": {
                      "text": "        }\n    }\n    if (options->auth_token_file_path.len != 0) {\n        impl->auth_token_file_path = aws_string_new_from_cursor(allocator, &options->auth_token_file_path);\n        if (impl->auth_token_file_path == NULL) {\n            goto on_error;\n        }\n",
                      "markdown": "`        }\n    }\n    if (options->auth_token_file_path.len != 0) {\n        impl->auth_token_file_path = aws_string_new_from_cursor(allocator, &options->auth_token_file_path);\n        if (impl->auth_token_file_path == NULL) {\n            goto on_error;\n        }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_ecs.c"
                },
                "region": {
                  "startLine": 711,
                  "startColumn": 14,
                  "endLine": 711,
                  "endColumn": 24,
                  "snippet": {
                    "text": "        }\n    }\n    if (options->auth_token_file_path.len != 0) {\n        impl->auth_token_file_path = aws_string_new_from_cursor(allocator, &options->auth_token_file_path);\n        if (impl->auth_token_file_path == NULL) {\n            goto on_error;\n        }\n",
                    "rendered": {
                      "text": "        }\n    }\n    if (options->auth_token_file_path.len != 0) {\n        impl->auth_token_file_path = aws_string_new_from_cursor(allocator, &options->auth_token_file_path);\n        if (impl->auth_token_file_path == NULL) {\n            goto on_error;\n        }\n",
                      "markdown": "`        }\n    }\n    if (options->auth_token_file_path.len != 0) {\n        impl->auth_token_file_path = aws_string_new_from_cursor(allocator, &options->auth_token_file_path);\n        if (impl->auth_token_file_path == NULL) {\n            goto on_error;\n        }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_ecs.c"
                },
                "region": {
                  "startLine": 710,
                  "startColumn": 17,
                  "endLine": 710,
                  "endColumn": 27,
                  "snippet": {
                    "text": "            goto on_error;\n        }\n    }\n    if (options->auth_token_file_path.len != 0) {\n        impl->auth_token_file_path = aws_string_new_from_cursor(allocator, &options->auth_token_file_path);\n        if (impl->auth_token_file_path == NULL) {\n            goto on_error;\n",
                    "rendered": {
                      "text": "            goto on_error;\n        }\n    }\n    if (options->auth_token_file_path.len != 0) {\n        impl->auth_token_file_path = aws_string_new_from_cursor(allocator, &options->auth_token_file_path);\n        if (impl->auth_token_file_path == NULL) {\n            goto on_error;\n",
                      "markdown": "`            goto on_error;\n        }\n    }\n    if (options->auth_token_file_path.len != 0) {\n        impl->auth_token_file_path = aws_string_new_from_cursor(allocator, &options->auth_token_file_path);\n        if (impl->auth_token_file_path == NULL) {\n            goto on_error;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_ecs.c"
                },
                "region": {
                  "startLine": 706,
                  "startColumn": 18,
                  "endLine": 706,
                  "endColumn": 28,
                  "snippet": {
                    "text": "    }\n    if (options->auth_token.len != 0) {\n        impl->auth_token = aws_string_new_from_cursor(allocator, &options->auth_token);\n        if (impl->auth_token == NULL) {\n            goto on_error;\n        }\n    }\n",
                    "rendered": {
                      "text": "    }\n    if (options->auth_token.len != 0) {\n        impl->auth_token = aws_string_new_from_cursor(allocator, &options->auth_token);\n        if (impl->auth_token == NULL) {\n            goto on_error;\n        }\n    }\n",
                      "markdown": "`    }\n    if (options->auth_token.len != 0) {\n        impl->auth_token = aws_string_new_from_cursor(allocator, &options->auth_token);\n        if (impl->auth_token == NULL) {\n            goto on_error;\n        }\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_ecs.c"
                },
                "region": {
                  "startLine": 705,
                  "startColumn": 75,
                  "endLine": 705,
                  "endColumn": 85,
                  "snippet": {
                    "text": "        goto on_error;\n    }\n    if (options->auth_token.len != 0) {\n        impl->auth_token = aws_string_new_from_cursor(allocator, &options->auth_token);\n        if (impl->auth_token == NULL) {\n            goto on_error;\n        }\n",
                    "rendered": {
                      "text": "        goto on_error;\n    }\n    if (options->auth_token.len != 0) {\n        impl->auth_token = aws_string_new_from_cursor(allocator, &options->auth_token);\n        if (impl->auth_token == NULL) {\n            goto on_error;\n        }\n",
                      "markdown": "`        goto on_error;\n    }\n    if (options->auth_token.len != 0) {\n        impl->auth_token = aws_string_new_from_cursor(allocator, &options->auth_token);\n        if (impl->auth_token == NULL) {\n            goto on_error;\n        }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_ecs.c"
                },
                "region": {
                  "startLine": 705,
                  "startColumn": 14,
                  "endLine": 705,
                  "endColumn": 24,
                  "snippet": {
                    "text": "        goto on_error;\n    }\n    if (options->auth_token.len != 0) {\n        impl->auth_token = aws_string_new_from_cursor(allocator, &options->auth_token);\n        if (impl->auth_token == NULL) {\n            goto on_error;\n        }\n",
                    "rendered": {
                      "text": "        goto on_error;\n    }\n    if (options->auth_token.len != 0) {\n        impl->auth_token = aws_string_new_from_cursor(allocator, &options->auth_token);\n        if (impl->auth_token == NULL) {\n            goto on_error;\n        }\n",
                      "markdown": "`        goto on_error;\n    }\n    if (options->auth_token.len != 0) {\n        impl->auth_token = aws_string_new_from_cursor(allocator, &options->auth_token);\n        if (impl->auth_token == NULL) {\n            goto on_error;\n        }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_ecs.c"
                },
                "region": {
                  "startLine": 704,
                  "startColumn": 17,
                  "endLine": 704,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    if (impl->connection_manager == NULL) {\n        goto on_error;\n    }\n    if (options->auth_token.len != 0) {\n        impl->auth_token = aws_string_new_from_cursor(allocator, &options->auth_token);\n        if (impl->auth_token == NULL) {\n            goto on_error;\n",
                    "rendered": {
                      "text": "    if (impl->connection_manager == NULL) {\n        goto on_error;\n    }\n    if (options->auth_token.len != 0) {\n        impl->auth_token = aws_string_new_from_cursor(allocator, &options->auth_token);\n        if (impl->auth_token == NULL) {\n            goto on_error;\n",
                      "markdown": "`    if (impl->connection_manager == NULL) {\n        goto on_error;\n    }\n    if (options->auth_token.len != 0) {\n        impl->auth_token = aws_string_new_from_cursor(allocator, &options->auth_token);\n        if (impl->auth_token == NULL) {\n            goto on_error;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_ecs.c"
                },
                "region": {
                  "startLine": 595,
                  "startColumn": 29,
                  "endLine": 595,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n    aws_string_destroy(impl->path_and_query);\n    aws_string_destroy(impl->auth_token);\n    aws_string_destroy(impl->auth_token_file_path);\n    aws_string_destroy(impl->host);\n    aws_client_bootstrap_release(impl->bootstrap);\n\n",
                    "rendered": {
                      "text": "\n    aws_string_destroy(impl->path_and_query);\n    aws_string_destroy(impl->auth_token);\n    aws_string_destroy(impl->auth_token_file_path);\n    aws_string_destroy(impl->host);\n    aws_client_bootstrap_release(impl->bootstrap);\n\n",
                      "markdown": "`\n    aws_string_destroy(impl->path_and_query);\n    aws_string_destroy(impl->auth_token);\n    aws_string_destroy(impl->auth_token_file_path);\n    aws_string_destroy(impl->host);\n    aws_client_bootstrap_release(impl->bootstrap);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_ecs.c"
                },
                "region": {
                  "startLine": 594,
                  "startColumn": 29,
                  "endLine": 594,
                  "endColumn": 39,
                  "snippet": {
                    "text": "    }\n\n    aws_string_destroy(impl->path_and_query);\n    aws_string_destroy(impl->auth_token);\n    aws_string_destroy(impl->auth_token_file_path);\n    aws_string_destroy(impl->host);\n    aws_client_bootstrap_release(impl->bootstrap);\n",
                    "rendered": {
                      "text": "    }\n\n    aws_string_destroy(impl->path_and_query);\n    aws_string_destroy(impl->auth_token);\n    aws_string_destroy(impl->auth_token_file_path);\n    aws_string_destroy(impl->host);\n    aws_client_bootstrap_release(impl->bootstrap);\n",
                      "markdown": "`    }\n\n    aws_string_destroy(impl->path_and_query);\n    aws_string_destroy(impl->auth_token);\n    aws_string_destroy(impl->auth_token_file_path);\n    aws_string_destroy(impl->host);\n    aws_client_bootstrap_release(impl->bootstrap);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_ecs.c"
                },
                "region": {
                  "startLine": 358,
                  "startColumn": 62,
                  "endLine": 358,
                  "endColumn": 72,
                  "snippet": {
                    "text": "    if (ecs_user_data->auth_token.len) {\n        struct aws_http_header auth_header = {\n            .name = aws_byte_cursor_from_string(s_ecs_authorization_header),\n            .value = aws_byte_cursor_from_buf(&ecs_user_data->auth_token),\n        };\n        if (aws_http_message_add_header(request, auth_header)) {\n            goto on_error;\n",
                    "rendered": {
                      "text": "    if (ecs_user_data->auth_token.len) {\n        struct aws_http_header auth_header = {\n            .name = aws_byte_cursor_from_string(s_ecs_authorization_header),\n            .value = aws_byte_cursor_from_buf(&ecs_user_data->auth_token),\n        };\n        if (aws_http_message_add_header(request, auth_header)) {\n            goto on_error;\n",
                      "markdown": "`    if (ecs_user_data->auth_token.len) {\n        struct aws_http_header auth_header = {\n            .name = aws_byte_cursor_from_string(s_ecs_authorization_header),\n            .value = aws_byte_cursor_from_buf(&ecs_user_data->auth_token),\n        };\n        if (aws_http_message_add_header(request, auth_header)) {\n            goto on_error;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_ecs.c"
                },
                "region": {
                  "startLine": 355,
                  "startColumn": 23,
                  "endLine": 355,
                  "endColumn": 33,
                  "snippet": {
                    "text": "        goto on_error;\n    }\n\n    if (ecs_user_data->auth_token.len) {\n        struct aws_http_header auth_header = {\n            .name = aws_byte_cursor_from_string(s_ecs_authorization_header),\n            .value = aws_byte_cursor_from_buf(&ecs_user_data->auth_token),\n",
                    "rendered": {
                      "text": "        goto on_error;\n    }\n\n    if (ecs_user_data->auth_token.len) {\n        struct aws_http_header auth_header = {\n            .name = aws_byte_cursor_from_string(s_ecs_authorization_header),\n            .value = aws_byte_cursor_from_buf(&ecs_user_data->auth_token),\n",
                      "markdown": "`        goto on_error;\n    }\n\n    if (ecs_user_data->auth_token.len) {\n        struct aws_http_header auth_header = {\n            .name = aws_byte_cursor_from_string(s_ecs_authorization_header),\n            .value = aws_byte_cursor_from_buf(&ecs_user_data->auth_token),\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_ecs.c"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 50,
                  "endLine": 133,
                  "endColumn": 60,
                  "snippet": {
                    "text": "        if (aws_byte_buf_init_copy_from_cursor(\n                &wrapped_user_data->auth_token,\n                ecs_provider->allocator,\n                aws_byte_cursor_from_string(impl->auth_token))) {\n            goto on_error;\n        }\n    }\n",
                    "rendered": {
                      "text": "        if (aws_byte_buf_init_copy_from_cursor(\n                &wrapped_user_data->auth_token,\n                ecs_provider->allocator,\n                aws_byte_cursor_from_string(impl->auth_token))) {\n            goto on_error;\n        }\n    }\n",
                      "markdown": "`        if (aws_byte_buf_init_copy_from_cursor(\n                &wrapped_user_data->auth_token,\n                ecs_provider->allocator,\n                aws_byte_cursor_from_string(impl->auth_token))) {\n            goto on_error;\n        }\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_ecs.c"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 36,
                  "endLine": 131,
                  "endColumn": 46,
                  "snippet": {
                    "text": "        }\n    } else if (impl->auth_token != NULL && impl->auth_token->len > 0) {\n        if (aws_byte_buf_init_copy_from_cursor(\n                &wrapped_user_data->auth_token,\n                ecs_provider->allocator,\n                aws_byte_cursor_from_string(impl->auth_token))) {\n            goto on_error;\n",
                    "rendered": {
                      "text": "        }\n    } else if (impl->auth_token != NULL && impl->auth_token->len > 0) {\n        if (aws_byte_buf_init_copy_from_cursor(\n                &wrapped_user_data->auth_token,\n                ecs_provider->allocator,\n                aws_byte_cursor_from_string(impl->auth_token))) {\n            goto on_error;\n",
                      "markdown": "`        }\n    } else if (impl->auth_token != NULL && impl->auth_token->len > 0) {\n        if (aws_byte_buf_init_copy_from_cursor(\n                &wrapped_user_data->auth_token,\n                ecs_provider->allocator,\n                aws_byte_cursor_from_string(impl->auth_token))) {\n            goto on_error;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_ecs.c"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 49,
                  "endLine": 129,
                  "endColumn": 59,
                  "snippet": {
                    "text": "            aws_raise_error(AWS_AUTH_CREDENTIALS_PROVIDER_ECS_INVALID_TOKEN_FILE_PATH);\n            goto on_error;\n        }\n    } else if (impl->auth_token != NULL && impl->auth_token->len > 0) {\n        if (aws_byte_buf_init_copy_from_cursor(\n                &wrapped_user_data->auth_token,\n                ecs_provider->allocator,\n",
                    "rendered": {
                      "text": "            aws_raise_error(AWS_AUTH_CREDENTIALS_PROVIDER_ECS_INVALID_TOKEN_FILE_PATH);\n            goto on_error;\n        }\n    } else if (impl->auth_token != NULL && impl->auth_token->len > 0) {\n        if (aws_byte_buf_init_copy_from_cursor(\n                &wrapped_user_data->auth_token,\n                ecs_provider->allocator,\n",
                      "markdown": "`            aws_raise_error(AWS_AUTH_CREDENTIALS_PROVIDER_ECS_INVALID_TOKEN_FILE_PATH);\n            goto on_error;\n        }\n    } else if (impl->auth_token != NULL && impl->auth_token->len > 0) {\n        if (aws_byte_buf_init_copy_from_cursor(\n                &wrapped_user_data->auth_token,\n                ecs_provider->allocator,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_ecs.c"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 21,
                  "endLine": 129,
                  "endColumn": 31,
                  "snippet": {
                    "text": "            aws_raise_error(AWS_AUTH_CREDENTIALS_PROVIDER_ECS_INVALID_TOKEN_FILE_PATH);\n            goto on_error;\n        }\n    } else if (impl->auth_token != NULL && impl->auth_token->len > 0) {\n        if (aws_byte_buf_init_copy_from_cursor(\n                &wrapped_user_data->auth_token,\n                ecs_provider->allocator,\n",
                    "rendered": {
                      "text": "            aws_raise_error(AWS_AUTH_CREDENTIALS_PROVIDER_ECS_INVALID_TOKEN_FILE_PATH);\n            goto on_error;\n        }\n    } else if (impl->auth_token != NULL && impl->auth_token->len > 0) {\n        if (aws_byte_buf_init_copy_from_cursor(\n                &wrapped_user_data->auth_token,\n                ecs_provider->allocator,\n",
                      "markdown": "`            aws_raise_error(AWS_AUTH_CREDENTIALS_PROVIDER_ECS_INVALID_TOKEN_FILE_PATH);\n            goto on_error;\n        }\n    } else if (impl->auth_token != NULL && impl->auth_token->len > 0) {\n        if (aws_byte_buf_init_copy_from_cursor(\n                &wrapped_user_data->auth_token,\n                ecs_provider->allocator,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_ecs.c"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 39,
                  "endLine": 124,
                  "endColumn": 49,
                  "snippet": {
                    "text": "                AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n                \"(id=%p) ECS credentials provider failed to read token from the path: %s with error: %d\",\n                (void *)ecs_provider,\n                aws_string_c_str(impl->auth_token_file_path),\n                aws_last_error());\n            aws_raise_error(AWS_AUTH_CREDENTIALS_PROVIDER_ECS_INVALID_TOKEN_FILE_PATH);\n            goto on_error;\n",
                    "rendered": {
                      "text": "                AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n                \"(id=%p) ECS credentials provider failed to read token from the path: %s with error: %d\",\n                (void *)ecs_provider,\n                aws_string_c_str(impl->auth_token_file_path),\n                aws_last_error());\n            aws_raise_error(AWS_AUTH_CREDENTIALS_PROVIDER_ECS_INVALID_TOKEN_FILE_PATH);\n            goto on_error;\n",
                      "markdown": "`                AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n                \"(id=%p) ECS credentials provider failed to read token from the path: %s with error: %d\",\n                (void *)ecs_provider,\n                aws_string_c_str(impl->auth_token_file_path),\n                aws_last_error());\n            aws_raise_error(AWS_AUTH_CREDENTIALS_PROVIDER_ECS_INVALID_TOKEN_FILE_PATH);\n            goto on_error;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_ecs.c"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 39,
                  "endLine": 119,
                  "endColumn": 49,
                  "snippet": {
                    "text": "        if (aws_byte_buf_init_from_file(\n                &wrapped_user_data->auth_token,\n                ecs_provider->allocator,\n                aws_string_c_str(impl->auth_token_file_path))) {\n            AWS_LOGF_ERROR(\n                AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n                \"(id=%p) ECS credentials provider failed to read token from the path: %s with error: %d\",\n",
                    "rendered": {
                      "text": "        if (aws_byte_buf_init_from_file(\n                &wrapped_user_data->auth_token,\n                ecs_provider->allocator,\n                aws_string_c_str(impl->auth_token_file_path))) {\n            AWS_LOGF_ERROR(\n                AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n                \"(id=%p) ECS credentials provider failed to read token from the path: %s with error: %d\",\n",
                      "markdown": "`        if (aws_byte_buf_init_from_file(\n                &wrapped_user_data->auth_token,\n                ecs_provider->allocator,\n                aws_string_c_str(impl->auth_token_file_path))) {\n            AWS_LOGF_ERROR(\n                AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n                \"(id=%p) ECS credentials provider failed to read token from the path: %s with error: %d\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_ecs.c"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 36,
                  "endLine": 117,
                  "endColumn": 46,
                  "snippet": {
                    "text": "    struct aws_credentials_provider_ecs_impl *impl = ecs_provider->impl;\n    if (impl->auth_token_file_path != NULL && impl->auth_token_file_path->len > 0) {\n        if (aws_byte_buf_init_from_file(\n                &wrapped_user_data->auth_token,\n                ecs_provider->allocator,\n                aws_string_c_str(impl->auth_token_file_path))) {\n            AWS_LOGF_ERROR(\n",
                    "rendered": {
                      "text": "    struct aws_credentials_provider_ecs_impl *impl = ecs_provider->impl;\n    if (impl->auth_token_file_path != NULL && impl->auth_token_file_path->len > 0) {\n        if (aws_byte_buf_init_from_file(\n                &wrapped_user_data->auth_token,\n                ecs_provider->allocator,\n                aws_string_c_str(impl->auth_token_file_path))) {\n            AWS_LOGF_ERROR(\n",
                      "markdown": "`    struct aws_credentials_provider_ecs_impl *impl = ecs_provider->impl;\n    if (impl->auth_token_file_path != NULL && impl->auth_token_file_path->len > 0) {\n        if (aws_byte_buf_init_from_file(\n                &wrapped_user_data->auth_token,\n                ecs_provider->allocator,\n                aws_string_c_str(impl->auth_token_file_path))) {\n            AWS_LOGF_ERROR(\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_ecs.c"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 52,
                  "endLine": 115,
                  "endColumn": 62,
                  "snippet": {
                    "text": "    }\n\n    struct aws_credentials_provider_ecs_impl *impl = ecs_provider->impl;\n    if (impl->auth_token_file_path != NULL && impl->auth_token_file_path->len > 0) {\n        if (aws_byte_buf_init_from_file(\n                &wrapped_user_data->auth_token,\n                ecs_provider->allocator,\n",
                    "rendered": {
                      "text": "    }\n\n    struct aws_credentials_provider_ecs_impl *impl = ecs_provider->impl;\n    if (impl->auth_token_file_path != NULL && impl->auth_token_file_path->len > 0) {\n        if (aws_byte_buf_init_from_file(\n                &wrapped_user_data->auth_token,\n                ecs_provider->allocator,\n",
                      "markdown": "`    }\n\n    struct aws_credentials_provider_ecs_impl *impl = ecs_provider->impl;\n    if (impl->auth_token_file_path != NULL && impl->auth_token_file_path->len > 0) {\n        if (aws_byte_buf_init_from_file(\n                &wrapped_user_data->auth_token,\n                ecs_provider->allocator,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_ecs.c"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 14,
                  "endLine": 115,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    }\n\n    struct aws_credentials_provider_ecs_impl *impl = ecs_provider->impl;\n    if (impl->auth_token_file_path != NULL && impl->auth_token_file_path->len > 0) {\n        if (aws_byte_buf_init_from_file(\n                &wrapped_user_data->auth_token,\n                ecs_provider->allocator,\n",
                    "rendered": {
                      "text": "    }\n\n    struct aws_credentials_provider_ecs_impl *impl = ecs_provider->impl;\n    if (impl->auth_token_file_path != NULL && impl->auth_token_file_path->len > 0) {\n        if (aws_byte_buf_init_from_file(\n                &wrapped_user_data->auth_token,\n                ecs_provider->allocator,\n",
                      "markdown": "`    }\n\n    struct aws_credentials_provider_ecs_impl *impl = ecs_provider->impl;\n    if (impl->auth_token_file_path != NULL && impl->auth_token_file_path->len > 0) {\n        if (aws_byte_buf_init_from_file(\n                &wrapped_user_data->auth_token,\n                ecs_provider->allocator,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_ecs.c"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 38,
                  "endLine": 86,
                  "endColumn": 48,
                  "snippet": {
                    "text": "            impl->connection_manager, user_data->connection);\n    }\n\n    aws_byte_buf_clean_up(&user_data->auth_token);\n    aws_byte_buf_clean_up(&user_data->current_result);\n\n    if (user_data->request) {\n",
                    "rendered": {
                      "text": "            impl->connection_manager, user_data->connection);\n    }\n\n    aws_byte_buf_clean_up(&user_data->auth_token);\n    aws_byte_buf_clean_up(&user_data->current_result);\n\n    if (user_data->request) {\n",
                      "markdown": "`            impl->connection_manager, user_data->connection);\n    }\n\n    aws_byte_buf_clean_up(&user_data->auth_token);\n    aws_byte_buf_clean_up(&user_data->current_result);\n\n    if (user_data->request) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_ecs.c"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 24,
                  "endLine": 64,
                  "endColumn": 34,
                  "snippet": {
                    "text": "    struct aws_credentials_provider *ecs_provider;\n    aws_on_get_credentials_callback_fn *original_callback;\n    void *original_user_data;\n    struct aws_byte_buf auth_token;\n\n    /* mutable */\n    struct aws_http_connection *connection;\n",
                    "rendered": {
                      "text": "    struct aws_credentials_provider *ecs_provider;\n    aws_on_get_credentials_callback_fn *original_callback;\n    void *original_user_data;\n    struct aws_byte_buf auth_token;\n\n    /* mutable */\n    struct aws_http_connection *connection;\n",
                      "markdown": "`    struct aws_credentials_provider *ecs_provider;\n    aws_on_get_credentials_callback_fn *original_callback;\n    void *original_user_data;\n    struct aws_byte_buf auth_token;\n\n    /* mutable */\n    struct aws_http_connection *connection;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_ecs.c"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 23,
                  "endLine": 50,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    struct aws_string *host;\n    struct aws_string *path_and_query;\n    struct aws_string *auth_token_file_path;\n    struct aws_string *auth_token;\n    struct aws_client_bootstrap *bootstrap;\n    bool is_https;\n};\n",
                    "rendered": {
                      "text": "    struct aws_string *host;\n    struct aws_string *path_and_query;\n    struct aws_string *auth_token_file_path;\n    struct aws_string *auth_token;\n    struct aws_client_bootstrap *bootstrap;\n    bool is_https;\n};\n",
                      "markdown": "`    struct aws_string *host;\n    struct aws_string *path_and_query;\n    struct aws_string *auth_token_file_path;\n    struct aws_string *auth_token;\n    struct aws_client_bootstrap *bootstrap;\n    bool is_https;\n};\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_ecs.c"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 23,
                  "endLine": 49,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    const struct aws_auth_http_system_vtable *function_table;\n    struct aws_string *host;\n    struct aws_string *path_and_query;\n    struct aws_string *auth_token_file_path;\n    struct aws_string *auth_token;\n    struct aws_client_bootstrap *bootstrap;\n    bool is_https;\n",
                    "rendered": {
                      "text": "    const struct aws_auth_http_system_vtable *function_table;\n    struct aws_string *host;\n    struct aws_string *path_and_query;\n    struct aws_string *auth_token_file_path;\n    struct aws_string *auth_token;\n    struct aws_client_bootstrap *bootstrap;\n    bool is_https;\n",
                      "markdown": "`    const struct aws_auth_http_system_vtable *function_table;\n    struct aws_string *host;\n    struct aws_string *path_and_query;\n    struct aws_string *auth_token_file_path;\n    struct aws_string *auth_token;\n    struct aws_client_bootstrap *bootstrap;\n    bool is_https;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_ecs.c"
                },
                "region": {
                  "startLine": 542,
                  "startColumn": 68,
                  "endLine": 542,
                  "endColumn": 72,
                  "snippet": {
                    "text": "on_error:\n    AWS_LOGF_ERROR(\n        AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n        \"id=%p: ECS provider failed to resolve address to an allowed ip address with error %d(%s)\",\n        (void *)ecs_user_data->ecs_provider,\n        AWS_AUTH_CREDENTIALS_PROVIDER_ECS_INVALID_HOST,\n        aws_error_str(AWS_AUTH_CREDENTIALS_PROVIDER_ECS_INVALID_HOST));\n",
                    "rendered": {
                      "text": "on_error:\n    AWS_LOGF_ERROR(\n        AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n        \"id=%p: ECS provider failed to resolve address to an allowed ip address with error %d(%s)\",\n        (void *)ecs_user_data->ecs_provider,\n        AWS_AUTH_CREDENTIALS_PROVIDER_ECS_INVALID_HOST,\n        aws_error_str(AWS_AUTH_CREDENTIALS_PROVIDER_ECS_INVALID_HOST));\n",
                      "markdown": "`on_error:\n    AWS_LOGF_ERROR(\n        AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n        \"id=%p: ECS provider failed to resolve address to an allowed ip address with error %d(%s)\",\n        (void *)ecs_user_data->ecs_provider,\n        AWS_AUTH_CREDENTIALS_PROVIDER_ECS_INVALID_HOST,\n        aws_error_str(AWS_AUTH_CREDENTIALS_PROVIDER_ECS_INVALID_HOST));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-space-unnormalized/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-space-unnormalized/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/post-vanilla-query/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/post-vanilla-query/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_process.c"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 64,
                  "endLine": 125,
                  "endColumn": 68,
                  "snippet": {
                    "text": "    } else {\n        AWS_LOGF_ERROR(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n            \"Failed to build config profile collection from file at (%s) : %s\",\n            aws_string_c_str(config_file_path),\n            aws_error_str(aws_last_error()));\n        goto on_done;\n",
                    "rendered": {
                      "text": "    } else {\n        AWS_LOGF_ERROR(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n            \"Failed to build config profile collection from file at (%s) : %s\",\n            aws_string_c_str(config_file_path),\n            aws_error_str(aws_last_error()));\n        goto on_done;\n",
                      "markdown": "`    } else {\n        AWS_LOGF_ERROR(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n            \"Failed to build config profile collection from file at (%s) : %s\",\n            aws_string_c_str(config_file_path),\n            aws_error_str(aws_last_error()));\n        goto on_done;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_process.c"
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 67,
                  "endLine": 120,
                  "endColumn": 71,
                  "snippet": {
                    "text": "    if (config_profiles != NULL) {\n        AWS_LOGF_DEBUG(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n            \"Successfully built config profile collection from file at (%s)\",\n            aws_string_c_str(config_file_path));\n    } else {\n        AWS_LOGF_ERROR(\n",
                    "rendered": {
                      "text": "    if (config_profiles != NULL) {\n        AWS_LOGF_DEBUG(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n            \"Successfully built config profile collection from file at (%s)\",\n            aws_string_c_str(config_file_path));\n    } else {\n        AWS_LOGF_ERROR(\n",
                      "markdown": "`    if (config_profiles != NULL) {\n        AWS_LOGF_DEBUG(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n            \"Successfully built config profile collection from file at (%s)\",\n            aws_string_c_str(config_file_path));\n    } else {\n        AWS_LOGF_ERROR(\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-header-value-trim/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-header-value-trim/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-slash-unnormalized/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-slash-unnormalized/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-header-value-order/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-header-value-order/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-slash-dot-slash-unnormalized/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-slash-dot-slash-unnormalized/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-header-key-duplicate/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-header-key-duplicate/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_cognito.c"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 58,
                  "endLine": 154,
                  "endColumn": 67,
                  "snippet": {
                    "text": "/* Keys per Cognito-Identity service model */\nAWS_STATIC_STRING_FROM_LITERAL(s_credentials_key, \"Credentials\");\nAWS_STATIC_STRING_FROM_LITERAL(s_access_key_id_name, \"AccessKeyId\");\nAWS_STATIC_STRING_FROM_LITERAL(s_secret_access_key_name, \"SecretKey\");\nAWS_STATIC_STRING_FROM_LITERAL(s_session_token_name, \"SessionToken\");\nAWS_STATIC_STRING_FROM_LITERAL(s_expiration_name, \"Expiration\");\n\n",
                    "rendered": {
                      "text": "/* Keys per Cognito-Identity service model */\nAWS_STATIC_STRING_FROM_LITERAL(s_credentials_key, \"Credentials\");\nAWS_STATIC_STRING_FROM_LITERAL(s_access_key_id_name, \"AccessKeyId\");\nAWS_STATIC_STRING_FROM_LITERAL(s_secret_access_key_name, \"SecretKey\");\nAWS_STATIC_STRING_FROM_LITERAL(s_session_token_name, \"SessionToken\");\nAWS_STATIC_STRING_FROM_LITERAL(s_expiration_name, \"Expiration\");\n\n",
                      "markdown": "`/* Keys per Cognito-Identity service model */\nAWS_STATIC_STRING_FROM_LITERAL(s_credentials_key, \"Credentials\");\nAWS_STATIC_STRING_FROM_LITERAL(s_access_key_id_name, \"AccessKeyId\");\nAWS_STATIC_STRING_FROM_LITERAL(s_secret_access_key_name, \"SecretKey\");\nAWS_STATIC_STRING_FROM_LITERAL(s_session_token_name, \"SessionToken\");\nAWS_STATIC_STRING_FROM_LITERAL(s_expiration_name, \"Expiration\");\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-slash-normalized/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-slash-normalized/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_environment.c"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 46,
                  "endLine": 71,
                  "endColumn": 79,
                  "snippet": {
                    "text": "}\n\nstatic struct aws_credentials_provider_vtable s_aws_credentials_provider_environment_vtable = {\n    .get_credentials = s_credentials_provider_environment_get_credentials_async,\n    .destroy = s_credentials_provider_environment_destroy,\n};\n\n",
                    "rendered": {
                      "text": "}\n\nstatic struct aws_credentials_provider_vtable s_aws_credentials_provider_environment_vtable = {\n    .get_credentials = s_credentials_provider_environment_get_credentials_async,\n    .destroy = s_credentials_provider_environment_destroy,\n};\n\n",
                      "markdown": "`}\n\nstatic struct aws_credentials_provider_vtable s_aws_credentials_provider_environment_vtable = {\n    .get_credentials = s_credentials_provider_environment_get_credentials_async,\n    .destroy = s_credentials_provider_environment_destroy,\n};\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_environment.c"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 34,
                  "endLine": 16,
                  "endColumn": 67,
                  "snippet": {
                    "text": "AWS_STATIC_STRING_FROM_LITERAL(s_secret_access_key_env_var, \"AWS_SECRET_ACCESS_KEY\");\nAWS_STATIC_STRING_FROM_LITERAL(s_session_token_env_var, \"AWS_SESSION_TOKEN\");\n\nstatic int s_credentials_provider_environment_get_credentials_async(\n    struct aws_credentials_provider *provider,\n    aws_on_get_credentials_callback_fn callback,\n    void *user_data) {\n",
                    "rendered": {
                      "text": "AWS_STATIC_STRING_FROM_LITERAL(s_secret_access_key_env_var, \"AWS_SECRET_ACCESS_KEY\");\nAWS_STATIC_STRING_FROM_LITERAL(s_session_token_env_var, \"AWS_SESSION_TOKEN\");\n\nstatic int s_credentials_provider_environment_get_credentials_async(\n    struct aws_credentials_provider *provider,\n    aws_on_get_credentials_callback_fn callback,\n    void *user_data) {\n",
                      "markdown": "`AWS_STATIC_STRING_FROM_LITERAL(s_secret_access_key_env_var, \"AWS_SECRET_ACCESS_KEY\");\nAWS_STATIC_STRING_FROM_LITERAL(s_session_token_env_var, \"AWS_SESSION_TOKEN\");\n\nstatic int s_credentials_provider_environment_get_credentials_async(\n    struct aws_credentials_provider *provider,\n    aws_on_get_credentials_callback_fn callback,\n    void *user_data) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/aws_profile.c"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 66,
                  "endLine": 39,
                  "endColumn": 76,
                  "snippet": {
                    "text": "\n    const struct aws_string *session_token = s_profile_get_property_value(profile, s_session_token_profile_var);\n\n    return aws_credentials_new_from_string(allocator, access_key, secret_key, session_token, UINT64_MAX);\n}\n",
                    "rendered": {
                      "text": "\n    const struct aws_string *session_token = s_profile_get_property_value(profile, s_session_token_profile_var);\n\n    return aws_credentials_new_from_string(allocator, access_key, secret_key, session_token, UINT64_MAX);\n}\n",
                      "markdown": "`\n    const struct aws_string *session_token = s_profile_get_property_value(profile, s_session_token_profile_var);\n\n    return aws_credentials_new_from_string(allocator, access_key, secret_key, session_token, UINT64_MAX);\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/aws_profile.c"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 30,
                  "endLine": 33,
                  "endColumn": 40,
                  "snippet": {
                    "text": "    const struct aws_profile *profile) {\n    const struct aws_string *access_key = s_profile_get_property_value(profile, s_access_key_id_profile_var);\n    const struct aws_string *secret_key = s_profile_get_property_value(profile, s_secret_access_key_profile_var);\n    if (access_key == NULL || secret_key == NULL) {\n        return NULL;\n    }\n\n",
                    "rendered": {
                      "text": "    const struct aws_profile *profile) {\n    const struct aws_string *access_key = s_profile_get_property_value(profile, s_access_key_id_profile_var);\n    const struct aws_string *secret_key = s_profile_get_property_value(profile, s_secret_access_key_profile_var);\n    if (access_key == NULL || secret_key == NULL) {\n        return NULL;\n    }\n\n",
                      "markdown": "`    const struct aws_profile *profile) {\n    const struct aws_string *access_key = s_profile_get_property_value(profile, s_access_key_id_profile_var);\n    const struct aws_string *secret_key = s_profile_get_property_value(profile, s_secret_access_key_profile_var);\n    if (access_key == NULL || secret_key == NULL) {\n        return NULL;\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/aws_profile.c"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 29,
                  "endLine": 32,
                  "endColumn": 39,
                  "snippet": {
                    "text": "    struct aws_allocator *allocator,\n    const struct aws_profile *profile) {\n    const struct aws_string *access_key = s_profile_get_property_value(profile, s_access_key_id_profile_var);\n    const struct aws_string *secret_key = s_profile_get_property_value(profile, s_secret_access_key_profile_var);\n    if (access_key == NULL || secret_key == NULL) {\n        return NULL;\n    }\n",
                    "rendered": {
                      "text": "    struct aws_allocator *allocator,\n    const struct aws_profile *profile) {\n    const struct aws_string *access_key = s_profile_get_property_value(profile, s_access_key_id_profile_var);\n    const struct aws_string *secret_key = s_profile_get_property_value(profile, s_secret_access_key_profile_var);\n    if (access_key == NULL || secret_key == NULL) {\n        return NULL;\n    }\n",
                      "markdown": "`    struct aws_allocator *allocator,\n    const struct aws_profile *profile) {\n    const struct aws_string *access_key = s_profile_get_property_value(profile, s_access_key_id_profile_var);\n    const struct aws_string *secret_key = s_profile_get_property_value(profile, s_secret_access_key_profile_var);\n    if (access_key == NULL || secret_key == NULL) {\n        return NULL;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-vanilla-empty-query-key/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-vanilla-empty-query-key/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-vanilla-query/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-vanilla-query/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-vanilla-query-order-key-case/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-vanilla-query-order-key-case/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/post-sts-header-after/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/post-sts-header-after/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-vanilla-query-unreserved/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-vanilla-query-unreserved/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_utils.c"
                },
                "region": {
                  "startLine": 352,
                  "startColumn": 64,
                  "endLine": 352,
                  "endColumn": 68,
                  "snippet": {
                    "text": "    } else {\n        AWS_LOGF_ERROR(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n            \"Failed to build config profile collection from file at (%s) : %s\",\n            aws_string_c_str(config_file_path),\n            aws_error_str(aws_last_error()));\n    }\n",
                    "rendered": {
                      "text": "    } else {\n        AWS_LOGF_ERROR(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n            \"Failed to build config profile collection from file at (%s) : %s\",\n            aws_string_c_str(config_file_path),\n            aws_error_str(aws_last_error()));\n    }\n",
                      "markdown": "`    } else {\n        AWS_LOGF_ERROR(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n            \"Failed to build config profile collection from file at (%s) : %s\",\n            aws_string_c_str(config_file_path),\n            aws_error_str(aws_last_error()));\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_utils.c"
                },
                "region": {
                  "startLine": 347,
                  "startColumn": 67,
                  "endLine": 347,
                  "endColumn": 71,
                  "snippet": {
                    "text": "    if (config_profiles != NULL) {\n        AWS_LOGF_DEBUG(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n            \"Successfully built config profile collection from file at (%s)\",\n            aws_string_c_str(config_file_path));\n    } else {\n        AWS_LOGF_ERROR(\n",
                    "rendered": {
                      "text": "    if (config_profiles != NULL) {\n        AWS_LOGF_DEBUG(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n            \"Successfully built config profile collection from file at (%s)\",\n            aws_string_c_str(config_file_path));\n    } else {\n        AWS_LOGF_ERROR(\n",
                      "markdown": "`    if (config_profiles != NULL) {\n        AWS_LOGF_DEBUG(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n            \"Successfully built config profile collection from file at (%s)\",\n            aws_string_c_str(config_file_path));\n    } else {\n        AWS_LOGF_ERROR(\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_utils.c"
                },
                "region": {
                  "startLine": 287,
                  "startColumn": 77,
                  "endLine": 287,
                  "endColumn": 82,
                  "snippet": {
                    "text": "        top_level_object =\n            aws_json_value_get_from_object(document_root, aws_byte_cursor_from_c_str(options->top_level_object_name));\n        if (!top_level_object) {\n            AWS_LOGF_ERROR(AWS_LS_AUTH_CREDENTIALS_PROVIDER, \"failed to parse top level object in json document.\");\n            goto done;\n        }\n    }\n",
                    "rendered": {
                      "text": "        top_level_object =\n            aws_json_value_get_from_object(document_root, aws_byte_cursor_from_c_str(options->top_level_object_name));\n        if (!top_level_object) {\n            AWS_LOGF_ERROR(AWS_LS_AUTH_CREDENTIALS_PROVIDER, \"failed to parse top level object in json document.\");\n            goto done;\n        }\n    }\n",
                      "markdown": "`        top_level_object =\n            aws_json_value_get_from_object(document_root, aws_byte_cursor_from_c_str(options->top_level_object_name));\n        if (!top_level_object) {\n            AWS_LOGF_ERROR(AWS_LS_AUTH_CREDENTIALS_PROVIDER, \"failed to parse top level object in json document.\");\n            goto done;\n        }\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/post-x-www-form-urlencoded/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/post-x-www-form-urlencoded/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-vanilla/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-vanilla/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-vanilla-with-session-token/context.json"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 17,
                  "endLine": 5,
                  "endColumn": 83,
                  "snippet": {
                    "text": "    \"credentials\": {\n        \"access_key_id\": \"AKIDEXAMPLE\",\n        \"secret_access_key\": \"wJalrXUtnFEMI/K7MDENG+bPxRfiCYEXAMPLEKEY\",\n        \"token\": \"6e86291e8372ff2a2260956d9b8aae1d763fbf315fa00fa31553b73ebf194267\"\n    },\n    \"expiration_in_seconds\": 3600,\n    \"normalize\": true,\n",
                    "rendered": {
                      "text": "    \"credentials\": {\n        \"access_key_id\": \"AKIDEXAMPLE\",\n        \"secret_access_key\": \"wJalrXUtnFEMI/K7MDENG+bPxRfiCYEXAMPLEKEY\",\n        \"token\": \"6e86291e8372ff2a2260956d9b8aae1d763fbf315fa00fa31553b73ebf194267\"\n    },\n    \"expiration_in_seconds\": 3600,\n    \"normalize\": true,\n",
                      "markdown": "`    \"credentials\": {\n        \"access_key_id\": \"AKIDEXAMPLE\",\n        \"secret_access_key\": \"wJalrXUtnFEMI/K7MDENG+bPxRfiCYEXAMPLEKEY\",\n        \"token\": \"6e86291e8372ff2a2260956d9b8aae1d763fbf315fa00fa31553b73ebf194267\"\n    },\n    \"expiration_in_seconds\": 3600,\n    \"normalize\": true,\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-vanilla-query-order-encoded/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-vanilla-query-order-encoded/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/test_chunked_signing.c"
                },
                "region": {
                  "startLine": 679,
                  "startColumn": 4,
                  "endLine": 679,
                  "endColumn": 70,
                  "snippet": {
                    "text": "AWS_STATIC_STRING_FROM_LITERAL(\n    s_chunk3_sts_post_signature,\n    \"\\ne3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\\n\"\n    \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\");\n\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_trailing_headers_expected_sts_pre_signature,\n",
                    "rendered": {
                      "text": "AWS_STATIC_STRING_FROM_LITERAL(\n    s_chunk3_sts_post_signature,\n    \"\\ne3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\\n\"\n    \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\");\n\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_trailing_headers_expected_sts_pre_signature,\n",
                      "markdown": "`AWS_STATIC_STRING_FROM_LITERAL(\n    s_chunk3_sts_post_signature,\n    \"\\ne3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\\n\"\n    \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\");\n\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_trailing_headers_expected_sts_pre_signature,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/test_chunked_signing.c"
                },
                "region": {
                  "startLine": 674,
                  "startColumn": 4,
                  "endLine": 674,
                  "endColumn": 70,
                  "snippet": {
                    "text": "AWS_STATIC_STRING_FROM_LITERAL(\n    s_chunk2_sts_post_signature,\n    \"\\ne3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\\n\"\n    \"2edc986847e209b4016e141a6dc8716d3207350f416969382d431539bf292e4a\");\n\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_chunk3_sts_post_signature,\n",
                    "rendered": {
                      "text": "AWS_STATIC_STRING_FROM_LITERAL(\n    s_chunk2_sts_post_signature,\n    \"\\ne3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\\n\"\n    \"2edc986847e209b4016e141a6dc8716d3207350f416969382d431539bf292e4a\");\n\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_chunk3_sts_post_signature,\n",
                      "markdown": "`AWS_STATIC_STRING_FROM_LITERAL(\n    s_chunk2_sts_post_signature,\n    \"\\ne3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\\n\"\n    \"2edc986847e209b4016e141a6dc8716d3207350f416969382d431539bf292e4a\");\n\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_chunk3_sts_post_signature,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/test_chunked_signing.c"
                },
                "region": {
                  "startLine": 669,
                  "startColumn": 4,
                  "endLine": 669,
                  "endColumn": 70,
                  "snippet": {
                    "text": "AWS_STATIC_STRING_FROM_LITERAL(\n    s_chunk1_sts_post_signature,\n    \"\\ne3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\\n\"\n    \"bf718b6f653bebc184e1479f1935b8da974d701b893afcf49e701f3e2f9f9c5a\");\n\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_chunk2_sts_post_signature,\n",
                    "rendered": {
                      "text": "AWS_STATIC_STRING_FROM_LITERAL(\n    s_chunk1_sts_post_signature,\n    \"\\ne3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\\n\"\n    \"bf718b6f653bebc184e1479f1935b8da974d701b893afcf49e701f3e2f9f9c5a\");\n\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_chunk2_sts_post_signature,\n",
                      "markdown": "`AWS_STATIC_STRING_FROM_LITERAL(\n    s_chunk1_sts_post_signature,\n    \"\\ne3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\\n\"\n    \"bf718b6f653bebc184e1479f1935b8da974d701b893afcf49e701f3e2f9f9c5a\");\n\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_chunk2_sts_post_signature,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/test_chunked_signing.c"
                },
                "region": {
                  "startLine": 456,
                  "startColumn": 4,
                  "endLine": 456,
                  "endColumn": 70,
                  "snippet": {
                    "text": "    \"b6c6ea8a5354eaf15b3cb7646744f4275b71ea724fed81ceb9323e279d449df9\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_trailing_headers_signature,\n    \"df5735bd9f3295cd9386572292562fefc93ba94e80a0a1ddcbd652c4e0a75e6c\");\n\nstatic int s_sigv4_chunked_signing_test(struct aws_allocator *allocator, void *ctx) {\n    (void)ctx;\n",
                    "rendered": {
                      "text": "    \"b6c6ea8a5354eaf15b3cb7646744f4275b71ea724fed81ceb9323e279d449df9\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_trailing_headers_signature,\n    \"df5735bd9f3295cd9386572292562fefc93ba94e80a0a1ddcbd652c4e0a75e6c\");\n\nstatic int s_sigv4_chunked_signing_test(struct aws_allocator *allocator, void *ctx) {\n    (void)ctx;\n",
                      "markdown": "`    \"b6c6ea8a5354eaf15b3cb7646744f4275b71ea724fed81ceb9323e279d449df9\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_trailing_headers_signature,\n    \"df5735bd9f3295cd9386572292562fefc93ba94e80a0a1ddcbd652c4e0a75e6c\");\n\nstatic int s_sigv4_chunked_signing_test(struct aws_allocator *allocator, void *ctx) {\n    (void)ctx;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/test_chunked_signing.c"
                },
                "region": {
                  "startLine": 453,
                  "startColumn": 4,
                  "endLine": 453,
                  "endColumn": 70,
                  "snippet": {
                    "text": "    \"0055627c9e194cb4542bae2aa5492e3c1575bbb81b612b7d234b86a503ef5497\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_final_chunk_signature,\n    \"b6c6ea8a5354eaf15b3cb7646744f4275b71ea724fed81ceb9323e279d449df9\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_trailing_headers_signature,\n    \"df5735bd9f3295cd9386572292562fefc93ba94e80a0a1ddcbd652c4e0a75e6c\");\n",
                    "rendered": {
                      "text": "    \"0055627c9e194cb4542bae2aa5492e3c1575bbb81b612b7d234b86a503ef5497\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_final_chunk_signature,\n    \"b6c6ea8a5354eaf15b3cb7646744f4275b71ea724fed81ceb9323e279d449df9\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_trailing_headers_signature,\n    \"df5735bd9f3295cd9386572292562fefc93ba94e80a0a1ddcbd652c4e0a75e6c\");\n",
                      "markdown": "`    \"0055627c9e194cb4542bae2aa5492e3c1575bbb81b612b7d234b86a503ef5497\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_final_chunk_signature,\n    \"b6c6ea8a5354eaf15b3cb7646744f4275b71ea724fed81ceb9323e279d449df9\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_trailing_headers_signature,\n    \"df5735bd9f3295cd9386572292562fefc93ba94e80a0a1ddcbd652c4e0a75e6c\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/test_chunked_signing.c"
                },
                "region": {
                  "startLine": 450,
                  "startColumn": 4,
                  "endLine": 450,
                  "endColumn": 70,
                  "snippet": {
                    "text": "    \"ad80c730a21e5b8d04586a2213dd63b9a0e99e0e2307b0ade35a65485a288648\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_second_chunk_signature,\n    \"0055627c9e194cb4542bae2aa5492e3c1575bbb81b612b7d234b86a503ef5497\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_final_chunk_signature,\n    \"b6c6ea8a5354eaf15b3cb7646744f4275b71ea724fed81ceb9323e279d449df9\");\n",
                    "rendered": {
                      "text": "    \"ad80c730a21e5b8d04586a2213dd63b9a0e99e0e2307b0ade35a65485a288648\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_second_chunk_signature,\n    \"0055627c9e194cb4542bae2aa5492e3c1575bbb81b612b7d234b86a503ef5497\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_final_chunk_signature,\n    \"b6c6ea8a5354eaf15b3cb7646744f4275b71ea724fed81ceb9323e279d449df9\");\n",
                      "markdown": "`    \"ad80c730a21e5b8d04586a2213dd63b9a0e99e0e2307b0ade35a65485a288648\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_second_chunk_signature,\n    \"0055627c9e194cb4542bae2aa5492e3c1575bbb81b612b7d234b86a503ef5497\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_final_chunk_signature,\n    \"b6c6ea8a5354eaf15b3cb7646744f4275b71ea724fed81ceb9323e279d449df9\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/test_chunked_signing.c"
                },
                "region": {
                  "startLine": 447,
                  "startColumn": 4,
                  "endLine": 447,
                  "endColumn": 70,
                  "snippet": {
                    "text": "    \"4f232c4386841ef735655705268965c44a0e4690baa4adea153f7db9fa80a0a9\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_first_chunk_signature,\n    \"ad80c730a21e5b8d04586a2213dd63b9a0e99e0e2307b0ade35a65485a288648\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_second_chunk_signature,\n    \"0055627c9e194cb4542bae2aa5492e3c1575bbb81b612b7d234b86a503ef5497\");\n",
                    "rendered": {
                      "text": "    \"4f232c4386841ef735655705268965c44a0e4690baa4adea153f7db9fa80a0a9\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_first_chunk_signature,\n    \"ad80c730a21e5b8d04586a2213dd63b9a0e99e0e2307b0ade35a65485a288648\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_second_chunk_signature,\n    \"0055627c9e194cb4542bae2aa5492e3c1575bbb81b612b7d234b86a503ef5497\");\n",
                      "markdown": "`    \"4f232c4386841ef735655705268965c44a0e4690baa4adea153f7db9fa80a0a9\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_first_chunk_signature,\n    \"ad80c730a21e5b8d04586a2213dd63b9a0e99e0e2307b0ade35a65485a288648\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_second_chunk_signature,\n    \"0055627c9e194cb4542bae2aa5492e3c1575bbb81b612b7d234b86a503ef5497\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/test_chunked_signing.c"
                },
                "region": {
                  "startLine": 444,
                  "startColumn": 4,
                  "endLine": 444,
                  "endColumn": 70,
                  "snippet": {
                    "text": "    \"amz-storage-class, Signature=4f232c4386841ef735655705268965c44a0e4690baa4adea153f7db9fa80a0a9\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_request_signature,\n    \"4f232c4386841ef735655705268965c44a0e4690baa4adea153f7db9fa80a0a9\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_first_chunk_signature,\n    \"ad80c730a21e5b8d04586a2213dd63b9a0e99e0e2307b0ade35a65485a288648\");\n",
                    "rendered": {
                      "text": "    \"amz-storage-class, Signature=4f232c4386841ef735655705268965c44a0e4690baa4adea153f7db9fa80a0a9\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_request_signature,\n    \"4f232c4386841ef735655705268965c44a0e4690baa4adea153f7db9fa80a0a9\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_first_chunk_signature,\n    \"ad80c730a21e5b8d04586a2213dd63b9a0e99e0e2307b0ade35a65485a288648\");\n",
                      "markdown": "`    \"amz-storage-class, Signature=4f232c4386841ef735655705268965c44a0e4690baa4adea153f7db9fa80a0a9\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_request_signature,\n    \"4f232c4386841ef735655705268965c44a0e4690baa4adea153f7db9fa80a0a9\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_first_chunk_signature,\n    \"ad80c730a21e5b8d04586a2213dd63b9a0e99e0e2307b0ade35a65485a288648\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/test_chunked_signing.c"
                },
                "region": {
                  "startLine": 238,
                  "startColumn": 4,
                  "endLine": 238,
                  "endColumn": 70,
                  "snippet": {
                    "text": "    \"18b7d04643359f6ec270dcbab8dce6d169d66ddc9778c75cfb08dfdb701637ab\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_chunked_test_ecc_pub_y,\n    \"fa36b35e4fe67e3112261d2e17a956ef85b06e44712d2850bcd3c2161e9993f2\");\n\nstatic struct aws_http_headers *s_trailing_headers_new(struct aws_allocator *allocator) {\n    struct aws_http_headers *trailing_headers = aws_http_headers_new(allocator);\n",
                    "rendered": {
                      "text": "    \"18b7d04643359f6ec270dcbab8dce6d169d66ddc9778c75cfb08dfdb701637ab\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_chunked_test_ecc_pub_y,\n    \"fa36b35e4fe67e3112261d2e17a956ef85b06e44712d2850bcd3c2161e9993f2\");\n\nstatic struct aws_http_headers *s_trailing_headers_new(struct aws_allocator *allocator) {\n    struct aws_http_headers *trailing_headers = aws_http_headers_new(allocator);\n",
                      "markdown": "`    \"18b7d04643359f6ec270dcbab8dce6d169d66ddc9778c75cfb08dfdb701637ab\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_chunked_test_ecc_pub_y,\n    \"fa36b35e4fe67e3112261d2e17a956ef85b06e44712d2850bcd3c2161e9993f2\");\n\nstatic struct aws_http_headers *s_trailing_headers_new(struct aws_allocator *allocator) {\n    struct aws_http_headers *trailing_headers = aws_http_headers_new(allocator);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/test_chunked_signing.c"
                },
                "region": {
                  "startLine": 235,
                  "startColumn": 4,
                  "endLine": 235,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_chunked_test_ecc_pub_x,\n    \"18b7d04643359f6ec270dcbab8dce6d169d66ddc9778c75cfb08dfdb701637ab\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_chunked_test_ecc_pub_y,\n    \"fa36b35e4fe67e3112261d2e17a956ef85b06e44712d2850bcd3c2161e9993f2\");\n",
                    "rendered": {
                      "text": "\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_chunked_test_ecc_pub_x,\n    \"18b7d04643359f6ec270dcbab8dce6d169d66ddc9778c75cfb08dfdb701637ab\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_chunked_test_ecc_pub_y,\n    \"fa36b35e4fe67e3112261d2e17a956ef85b06e44712d2850bcd3c2161e9993f2\");\n",
                      "markdown": "`\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_chunked_test_ecc_pub_x,\n    \"18b7d04643359f6ec270dcbab8dce6d169d66ddc9778c75cfb08dfdb701637ab\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_chunked_test_ecc_pub_y,\n    \"fa36b35e4fe67e3112261d2e17a956ef85b06e44712d2850bcd3c2161e9993f2\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/token_provider_sso_profile.c"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 95,
                  "endLine": 139,
                  "endColumn": 101,
                  "snippet": {
                    "text": "        aws_profile_get_property(profile, s_profile_sso_start_url_name);\n\n    if (!sso_start_url_property) {\n        AWS_LOGF_ERROR(AWS_LS_AUTH_CREDENTIALS_PROVIDER, \"token-provider-sso-profile: failed to find sso_start_url\");\n        aws_raise_error(AWS_AUTH_SSO_TOKEN_PROVIDER_SOURCE_FAILURE);\n        goto cleanup;\n    }\n",
                    "rendered": {
                      "text": "        aws_profile_get_property(profile, s_profile_sso_start_url_name);\n\n    if (!sso_start_url_property) {\n        AWS_LOGF_ERROR(AWS_LS_AUTH_CREDENTIALS_PROVIDER, \"token-provider-sso-profile: failed to find sso_start_url\");\n        aws_raise_error(AWS_AUTH_SSO_TOKEN_PROVIDER_SOURCE_FAILURE);\n        goto cleanup;\n    }\n",
                      "markdown": "`        aws_profile_get_property(profile, s_profile_sso_start_url_name);\n\n    if (!sso_start_url_property) {\n        AWS_LOGF_ERROR(AWS_LS_AUTH_CREDENTIALS_PROVIDER, \"token-provider-sso-profile: failed to find sso_start_url\");\n        aws_raise_error(AWS_AUTH_SSO_TOKEN_PROVIDER_SOURCE_FAILURE);\n        goto cleanup;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/token_provider_sso_profile.c"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 23,
                  "endLine": 129,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        AWS_LOGF_ERROR(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n            \"token-provider-sso-profile: could not load\"\n            \" a profile at %s.\",\n            aws_string_c_str(profile_name));\n        aws_raise_error(AWS_AUTH_SSO_TOKEN_PROVIDER_SOURCE_FAILURE);\n        goto cleanup;\n",
                    "rendered": {
                      "text": "        AWS_LOGF_ERROR(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n            \"token-provider-sso-profile: could not load\"\n            \" a profile at %s.\",\n            aws_string_c_str(profile_name));\n        aws_raise_error(AWS_AUTH_SSO_TOKEN_PROVIDER_SOURCE_FAILURE);\n        goto cleanup;\n",
                      "markdown": "`        AWS_LOGF_ERROR(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n            \"token-provider-sso-profile: could not load\"\n            \" a profile at %s.\",\n            aws_string_c_str(profile_name));\n        aws_raise_error(AWS_AUTH_SSO_TOKEN_PROVIDER_SOURCE_FAILURE);\n        goto cleanup;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/key_derivation.c"
                },
                "region": {
                  "startLine": 365,
                  "startColumn": 34,
                  "endLine": 365,
                  "endColumn": 45,
                  "snippet": {
                    "text": "done:\n\n    aws_byte_buf_clean_up_secure(&secret_buf);\n    aws_byte_buf_clean_up_secure(&private_key_buf);\n    aws_byte_buf_clean_up_secure(&fixed_input_hmac_digest);\n    aws_byte_buf_clean_up(&fixed_input);\n\n",
                    "rendered": {
                      "text": "done:\n\n    aws_byte_buf_clean_up_secure(&secret_buf);\n    aws_byte_buf_clean_up_secure(&private_key_buf);\n    aws_byte_buf_clean_up_secure(&fixed_input_hmac_digest);\n    aws_byte_buf_clean_up(&fixed_input);\n\n",
                      "markdown": "`done:\n\n    aws_byte_buf_clean_up_secure(&secret_buf);\n    aws_byte_buf_clean_up_secure(&private_key_buf);\n    aws_byte_buf_clean_up_secure(&fixed_input_hmac_digest);\n    aws_byte_buf_clean_up(&fixed_input);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/key_derivation.c"
                },
                "region": {
                  "startLine": 359,
                  "startColumn": 93,
                  "endLine": 359,
                  "endColumn": 104,
                  "snippet": {
                    "text": "\n    if (result == AKDR_SUCCESS) {\n        struct aws_byte_cursor private_key_cursor = aws_byte_cursor_from_buf(&private_key_buf);\n        ecc_key_pair = aws_ecc_key_pair_new_from_private_key(allocator, AWS_CAL_ECDSA_P256, &private_key_cursor);\n    }\n\ndone:\n",
                    "rendered": {
                      "text": "\n    if (result == AKDR_SUCCESS) {\n        struct aws_byte_cursor private_key_cursor = aws_byte_cursor_from_buf(&private_key_buf);\n        ecc_key_pair = aws_ecc_key_pair_new_from_private_key(allocator, AWS_CAL_ECDSA_P256, &private_key_cursor);\n    }\n\ndone:\n",
                      "markdown": "`\n    if (result == AKDR_SUCCESS) {\n        struct aws_byte_cursor private_key_cursor = aws_byte_cursor_from_buf(&private_key_buf);\n        ecc_key_pair = aws_ecc_key_pair_new_from_private_key(allocator, AWS_CAL_ECDSA_P256, &private_key_cursor);\n    }\n\ndone:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/key_derivation.c"
                },
                "region": {
                  "startLine": 359,
                  "startColumn": 49,
                  "endLine": 359,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\n    if (result == AKDR_SUCCESS) {\n        struct aws_byte_cursor private_key_cursor = aws_byte_cursor_from_buf(&private_key_buf);\n        ecc_key_pair = aws_ecc_key_pair_new_from_private_key(allocator, AWS_CAL_ECDSA_P256, &private_key_cursor);\n    }\n\ndone:\n",
                    "rendered": {
                      "text": "\n    if (result == AKDR_SUCCESS) {\n        struct aws_byte_cursor private_key_cursor = aws_byte_cursor_from_buf(&private_key_buf);\n        ecc_key_pair = aws_ecc_key_pair_new_from_private_key(allocator, AWS_CAL_ECDSA_P256, &private_key_cursor);\n    }\n\ndone:\n",
                      "markdown": "`\n    if (result == AKDR_SUCCESS) {\n        struct aws_byte_cursor private_key_cursor = aws_byte_cursor_from_buf(&private_key_buf);\n        ecc_key_pair = aws_ecc_key_pair_new_from_private_key(allocator, AWS_CAL_ECDSA_P256, &private_key_cursor);\n    }\n\ndone:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/key_derivation.c"
                },
                "region": {
                  "startLine": 358,
                  "startColumn": 78,
                  "endLine": 358,
                  "endColumn": 89,
                  "snippet": {
                    "text": "    }\n\n    if (result == AKDR_SUCCESS) {\n        struct aws_byte_cursor private_key_cursor = aws_byte_cursor_from_buf(&private_key_buf);\n        ecc_key_pair = aws_ecc_key_pair_new_from_private_key(allocator, AWS_CAL_ECDSA_P256, &private_key_cursor);\n    }\n\n",
                    "rendered": {
                      "text": "    }\n\n    if (result == AKDR_SUCCESS) {\n        struct aws_byte_cursor private_key_cursor = aws_byte_cursor_from_buf(&private_key_buf);\n        ecc_key_pair = aws_ecc_key_pair_new_from_private_key(allocator, AWS_CAL_ECDSA_P256, &private_key_cursor);\n    }\n\n",
                      "markdown": "`    }\n\n    if (result == AKDR_SUCCESS) {\n        struct aws_byte_cursor private_key_cursor = aws_byte_cursor_from_buf(&private_key_buf);\n        ecc_key_pair = aws_ecc_key_pair_new_from_private_key(allocator, AWS_CAL_ECDSA_P256, &private_key_cursor);\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/key_derivation.c"
                },
                "region": {
                  "startLine": 358,
                  "startColumn": 31,
                  "endLine": 358,
                  "endColumn": 42,
                  "snippet": {
                    "text": "    }\n\n    if (result == AKDR_SUCCESS) {\n        struct aws_byte_cursor private_key_cursor = aws_byte_cursor_from_buf(&private_key_buf);\n        ecc_key_pair = aws_ecc_key_pair_new_from_private_key(allocator, AWS_CAL_ECDSA_P256, &private_key_cursor);\n    }\n\n",
                    "rendered": {
                      "text": "    }\n\n    if (result == AKDR_SUCCESS) {\n        struct aws_byte_cursor private_key_cursor = aws_byte_cursor_from_buf(&private_key_buf);\n        ecc_key_pair = aws_ecc_key_pair_new_from_private_key(allocator, AWS_CAL_ECDSA_P256, &private_key_cursor);\n    }\n\n",
                      "markdown": "`    }\n\n    if (result == AKDR_SUCCESS) {\n        struct aws_byte_cursor private_key_cursor = aws_byte_cursor_from_buf(&private_key_buf);\n        ecc_key_pair = aws_ecc_key_pair_new_from_private_key(allocator, AWS_CAL_ECDSA_P256, &private_key_cursor);\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/key_derivation.c"
                },
                "region": {
                  "startLine": 354,
                  "startColumn": 47,
                  "endLine": 354,
                  "endColumn": 58,
                  "snippet": {
                    "text": "            break;\n        }\n\n        result = s_aws_derive_ecc_private_key(&private_key_buf, &fixed_input_hmac_digest);\n    }\n\n    if (result == AKDR_SUCCESS) {\n",
                    "rendered": {
                      "text": "            break;\n        }\n\n        result = s_aws_derive_ecc_private_key(&private_key_buf, &fixed_input_hmac_digest);\n    }\n\n    if (result == AKDR_SUCCESS) {\n",
                      "markdown": "`            break;\n        }\n\n        result = s_aws_derive_ecc_private_key(&private_key_buf, &fixed_input_hmac_digest);\n    }\n\n    if (result == AKDR_SUCCESS) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/key_derivation.c"
                },
                "region": {
                  "startLine": 354,
                  "startColumn": 34,
                  "endLine": 354,
                  "endColumn": 45,
                  "snippet": {
                    "text": "            break;\n        }\n\n        result = s_aws_derive_ecc_private_key(&private_key_buf, &fixed_input_hmac_digest);\n    }\n\n    if (result == AKDR_SUCCESS) {\n",
                    "rendered": {
                      "text": "            break;\n        }\n\n        result = s_aws_derive_ecc_private_key(&private_key_buf, &fixed_input_hmac_digest);\n    }\n\n    if (result == AKDR_SUCCESS) {\n",
                      "markdown": "`            break;\n        }\n\n        result = s_aws_derive_ecc_private_key(&private_key_buf, &fixed_input_hmac_digest);\n    }\n\n    if (result == AKDR_SUCCESS) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/key_derivation.c"
                },
                "region": {
                  "startLine": 331,
                  "startColumn": 27,
                  "endLine": 331,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\n    size_t key_length = aws_ecc_key_coordinate_byte_size_from_curve_name(AWS_CAL_ECDSA_P256);\n    AWS_FATAL_ASSERT(key_length == AWS_SHA256_LEN);\n    if (aws_byte_buf_init(&private_key_buf, allocator, key_length)) {\n        goto done;\n    }\n\n",
                    "rendered": {
                      "text": "\n    size_t key_length = aws_ecc_key_coordinate_byte_size_from_curve_name(AWS_CAL_ECDSA_P256);\n    AWS_FATAL_ASSERT(key_length == AWS_SHA256_LEN);\n    if (aws_byte_buf_init(&private_key_buf, allocator, key_length)) {\n        goto done;\n    }\n\n",
                      "markdown": "`\n    size_t key_length = aws_ecc_key_coordinate_byte_size_from_curve_name(AWS_CAL_ECDSA_P256);\n    AWS_FATAL_ASSERT(key_length == AWS_SHA256_LEN);\n    if (aws_byte_buf_init(&private_key_buf, allocator, key_length)) {\n        goto done;\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/key_derivation.c"
                },
                "region": {
                  "startLine": 309,
                  "startColumn": 20,
                  "endLine": 309,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    AWS_ZERO_STRUCT(fixed_input_hmac_digest);\n\n    struct aws_byte_buf private_key_buf;\n    AWS_ZERO_STRUCT(private_key_buf);\n\n    struct aws_byte_buf secret_buf;\n    AWS_ZERO_STRUCT(secret_buf);\n",
                    "rendered": {
                      "text": "    AWS_ZERO_STRUCT(fixed_input_hmac_digest);\n\n    struct aws_byte_buf private_key_buf;\n    AWS_ZERO_STRUCT(private_key_buf);\n\n    struct aws_byte_buf secret_buf;\n    AWS_ZERO_STRUCT(secret_buf);\n",
                      "markdown": "`    AWS_ZERO_STRUCT(fixed_input_hmac_digest);\n\n    struct aws_byte_buf private_key_buf;\n    AWS_ZERO_STRUCT(private_key_buf);\n\n    struct aws_byte_buf secret_buf;\n    AWS_ZERO_STRUCT(secret_buf);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/key_derivation.c"
                },
                "region": {
                  "startLine": 308,
                  "startColumn": 24,
                  "endLine": 308,
                  "endColumn": 35,
                  "snippet": {
                    "text": "    struct aws_byte_buf fixed_input_hmac_digest;\n    AWS_ZERO_STRUCT(fixed_input_hmac_digest);\n\n    struct aws_byte_buf private_key_buf;\n    AWS_ZERO_STRUCT(private_key_buf);\n\n    struct aws_byte_buf secret_buf;\n",
                    "rendered": {
                      "text": "    struct aws_byte_buf fixed_input_hmac_digest;\n    AWS_ZERO_STRUCT(fixed_input_hmac_digest);\n\n    struct aws_byte_buf private_key_buf;\n    AWS_ZERO_STRUCT(private_key_buf);\n\n    struct aws_byte_buf secret_buf;\n",
                      "markdown": "`    struct aws_byte_buf fixed_input_hmac_digest;\n    AWS_ZERO_STRUCT(fixed_input_hmac_digest);\n\n    struct aws_byte_buf private_key_buf;\n    AWS_ZERO_STRUCT(private_key_buf);\n\n    struct aws_byte_buf secret_buf;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/key_derivation.c"
                },
                "region": {
                  "startLine": 263,
                  "startColumn": 39,
                  "endLine": 263,
                  "endColumn": 50,
                  "snippet": {
                    "text": "        return AKDR_FAILURE;\n    }\n\n    aws_be_bytes_add_one_constant_time(private_key_value);\n\n    return AKDR_SUCCESS;\n}\n",
                    "rendered": {
                      "text": "        return AKDR_FAILURE;\n    }\n\n    aws_be_bytes_add_one_constant_time(private_key_value);\n\n    return AKDR_SUCCESS;\n}\n",
                      "markdown": "`        return AKDR_FAILURE;\n    }\n\n    aws_be_bytes_add_one_constant_time(private_key_value);\n\n    return AKDR_SUCCESS;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/key_derivation.c"
                },
                "region": {
                  "startLine": 259,
                  "startColumn": 28,
                  "endLine": 259,
                  "endColumn": 39,
                  "snippet": {
                    "text": "    }\n\n    struct aws_byte_cursor k0_cursor = aws_byte_cursor_from_buf(k0);\n    if (aws_byte_buf_append(private_key_value, &k0_cursor)) {\n        return AKDR_FAILURE;\n    }\n\n",
                    "rendered": {
                      "text": "    }\n\n    struct aws_byte_cursor k0_cursor = aws_byte_cursor_from_buf(k0);\n    if (aws_byte_buf_append(private_key_value, &k0_cursor)) {\n        return AKDR_FAILURE;\n    }\n\n",
                      "markdown": "`    }\n\n    struct aws_byte_cursor k0_cursor = aws_byte_cursor_from_buf(k0);\n    if (aws_byte_buf_append(private_key_value, &k0_cursor)) {\n        return AKDR_FAILURE;\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/key_derivation.c"
                },
                "region": {
                  "startLine": 240,
                  "startColumn": 23,
                  "endLine": 240,
                  "endColumn": 34,
                  "snippet": {
                    "text": "    const struct aws_byte_buf *k0) {\n    AWS_FATAL_ASSERT(k0->len == aws_ecc_key_coordinate_byte_size_from_curve_name(AWS_CAL_ECDSA_P256));\n\n    aws_byte_buf_reset(private_key_value, false);\n\n    struct aws_byte_buf s_n_minus_2_buf = {\n        .allocator = NULL,\n",
                    "rendered": {
                      "text": "    const struct aws_byte_buf *k0) {\n    AWS_FATAL_ASSERT(k0->len == aws_ecc_key_coordinate_byte_size_from_curve_name(AWS_CAL_ECDSA_P256));\n\n    aws_byte_buf_reset(private_key_value, false);\n\n    struct aws_byte_buf s_n_minus_2_buf = {\n        .allocator = NULL,\n",
                      "markdown": "`    const struct aws_byte_buf *k0) {\n    AWS_FATAL_ASSERT(k0->len == aws_ecc_key_coordinate_byte_size_from_curve_name(AWS_CAL_ECDSA_P256));\n\n    aws_byte_buf_reset(private_key_value, false);\n\n    struct aws_byte_buf s_n_minus_2_buf = {\n        .allocator = NULL,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/key_derivation.c"
                },
                "region": {
                  "startLine": 236,
                  "startColumn": 25,
                  "endLine": 236,
                  "endColumn": 36,
                  "snippet": {
                    "text": "};\n\nstatic enum aws_key_derivation_result s_aws_derive_ecc_private_key(\n    struct aws_byte_buf *private_key_value,\n    const struct aws_byte_buf *k0) {\n    AWS_FATAL_ASSERT(k0->len == aws_ecc_key_coordinate_byte_size_from_curve_name(AWS_CAL_ECDSA_P256));\n\n",
                    "rendered": {
                      "text": "};\n\nstatic enum aws_key_derivation_result s_aws_derive_ecc_private_key(\n    struct aws_byte_buf *private_key_value,\n    const struct aws_byte_buf *k0) {\n    AWS_FATAL_ASSERT(k0->len == aws_ecc_key_coordinate_byte_size_from_curve_name(AWS_CAL_ECDSA_P256));\n\n",
                      "markdown": "`};\n\nstatic enum aws_key_derivation_result s_aws_derive_ecc_private_key(\n    struct aws_byte_buf *private_key_value,\n    const struct aws_byte_buf *k0) {\n    AWS_FATAL_ASSERT(k0->len == aws_ecc_key_coordinate_byte_size_from_curve_name(AWS_CAL_ECDSA_P256));\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/key_derivation.c"
                },
                "region": {
                  "startLine": 235,
                  "startColumn": 55,
                  "endLine": 235,
                  "endColumn": 66,
                  "snippet": {
                    "text": "    AKDR_FAILURE,\n};\n\nstatic enum aws_key_derivation_result s_aws_derive_ecc_private_key(\n    struct aws_byte_buf *private_key_value,\n    const struct aws_byte_buf *k0) {\n    AWS_FATAL_ASSERT(k0->len == aws_ecc_key_coordinate_byte_size_from_curve_name(AWS_CAL_ECDSA_P256));\n",
                    "rendered": {
                      "text": "    AKDR_FAILURE,\n};\n\nstatic enum aws_key_derivation_result s_aws_derive_ecc_private_key(\n    struct aws_byte_buf *private_key_value,\n    const struct aws_byte_buf *k0) {\n    AWS_FATAL_ASSERT(k0->len == aws_ecc_key_coordinate_byte_size_from_curve_name(AWS_CAL_ECDSA_P256));\n",
                      "markdown": "`    AKDR_FAILURE,\n};\n\nstatic enum aws_key_derivation_result s_aws_derive_ecc_private_key(\n    struct aws_byte_buf *private_key_value,\n    const struct aws_byte_buf *k0) {\n    AWS_FATAL_ASSERT(k0->len == aws_ecc_key_coordinate_byte_size_from_curve_name(AWS_CAL_ECDSA_P256));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_cached.c"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 57,
                  "endLine": 134,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\n    AWS_LOGF_DEBUG(\n        AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n        \"(id=%p) Cached credentials provider next refresh time set to %\" PRIu64,\n        (void *)provider,\n        impl->next_refresh_time);\n\n",
                    "rendered": {
                      "text": "\n    AWS_LOGF_DEBUG(\n        AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n        \"(id=%p) Cached credentials provider next refresh time set to %\" PRIu64,\n        (void *)provider,\n        impl->next_refresh_time);\n\n",
                      "markdown": "`\n    AWS_LOGF_DEBUG(\n        AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n        \"(id=%p) Cached credentials provider next refresh time set to %\" PRIu64,\n        (void *)provider,\n        impl->next_refresh_time);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_sts_web_identity.c"
                },
                "region": {
                  "startLine": 850,
                  "startColumn": 64,
                  "endLine": 850,
                  "endColumn": 68,
                  "snippet": {
                    "text": "    } else {\n        AWS_LOGF_ERROR(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n            \"Failed to build config profile collection from file at (%s) : %s\",\n            aws_string_c_str(config_file_path),\n            aws_error_str(aws_last_error()));\n        goto on_error;\n",
                    "rendered": {
                      "text": "    } else {\n        AWS_LOGF_ERROR(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n            \"Failed to build config profile collection from file at (%s) : %s\",\n            aws_string_c_str(config_file_path),\n            aws_error_str(aws_last_error()));\n        goto on_error;\n",
                      "markdown": "`    } else {\n        AWS_LOGF_ERROR(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n            \"Failed to build config profile collection from file at (%s) : %s\",\n            aws_string_c_str(config_file_path),\n            aws_error_str(aws_last_error()));\n        goto on_error;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_sts_web_identity.c"
                },
                "region": {
                  "startLine": 845,
                  "startColumn": 67,
                  "endLine": 845,
                  "endColumn": 71,
                  "snippet": {
                    "text": "    if (config_profiles != NULL) {\n        AWS_LOGF_DEBUG(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n            \"Successfully built config profile collection from file at (%s)\",\n            aws_string_c_str(config_file_path));\n    } else {\n        AWS_LOGF_ERROR(\n",
                    "rendered": {
                      "text": "    if (config_profiles != NULL) {\n        AWS_LOGF_DEBUG(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n            \"Successfully built config profile collection from file at (%s)\",\n            aws_string_c_str(config_file_path));\n    } else {\n        AWS_LOGF_ERROR(\n",
                      "markdown": "`    if (config_profiles != NULL) {\n        AWS_LOGF_DEBUG(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n            \"Successfully built config profile collection from file at (%s)\",\n            aws_string_c_str(config_file_path));\n    } else {\n        AWS_LOGF_ERROR(\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_sts_web_identity.c"
                },
                "region": {
                  "startLine": 319,
                  "startColumn": 36,
                  "endLine": 319,
                  "endColumn": 42,
                  "snippet": {
                    "text": "            } else {\n                AWS_LOGF_ERROR(\n                    AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n                    \"Failed to parse time string from sts web identity xml response: %s\",\n                    aws_error_str(aws_last_error()));\n                return AWS_OP_ERR;\n            }\n",
                    "rendered": {
                      "text": "            } else {\n                AWS_LOGF_ERROR(\n                    AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n                    \"Failed to parse time string from sts web identity xml response: %s\",\n                    aws_error_str(aws_last_error()));\n                return AWS_OP_ERR;\n            }\n",
                      "markdown": "`            } else {\n                AWS_LOGF_ERROR(\n                    AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n                    \"Failed to parse time string from sts web identity xml response: %s\",\n                    aws_error_str(aws_last_error()));\n                return AWS_OP_ERR;\n            }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/aws_signing.c"
                },
                "region": {
                  "startLine": 2248,
                  "startColumn": 34,
                  "endLine": 2248,
                  "endColumn": 44,
                  "snippet": {
                    "text": "    result = AWS_OP_SUCCESS;\n\ncleanup:\n    aws_byte_buf_clean_up_secure(&secret_key);\n    aws_byte_buf_clean_up(&output);\n    aws_byte_buf_clean_up(&date_buf);\n\n",
                    "rendered": {
                      "text": "    result = AWS_OP_SUCCESS;\n\ncleanup:\n    aws_byte_buf_clean_up_secure(&secret_key);\n    aws_byte_buf_clean_up(&output);\n    aws_byte_buf_clean_up(&date_buf);\n\n",
                      "markdown": "`    result = AWS_OP_SUCCESS;\n\ncleanup:\n    aws_byte_buf_clean_up_secure(&secret_key);\n    aws_byte_buf_clean_up(&output);\n    aws_byte_buf_clean_up(&date_buf);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/aws_signing.c"
                },
                "region": {
                  "startLine": 2223,
                  "startColumn": 44,
                  "endLine": 2223,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\n    struct aws_byte_cursor date_cursor = aws_byte_cursor_from_buf(&date_buf);\n    struct aws_byte_cursor secret_key_cursor = aws_byte_cursor_from_buf(&secret_key);\n    if (aws_sha256_hmac_compute(allocator, &secret_key_cursor, &date_cursor, &output, 0)) {\n        goto cleanup;\n    }\n\n",
                    "rendered": {
                      "text": "\n    struct aws_byte_cursor date_cursor = aws_byte_cursor_from_buf(&date_buf);\n    struct aws_byte_cursor secret_key_cursor = aws_byte_cursor_from_buf(&secret_key);\n    if (aws_sha256_hmac_compute(allocator, &secret_key_cursor, &date_cursor, &output, 0)) {\n        goto cleanup;\n    }\n\n",
                      "markdown": "`\n    struct aws_byte_cursor date_cursor = aws_byte_cursor_from_buf(&date_buf);\n    struct aws_byte_cursor secret_key_cursor = aws_byte_cursor_from_buf(&secret_key);\n    if (aws_sha256_hmac_compute(allocator, &secret_key_cursor, &date_cursor, &output, 0)) {\n        goto cleanup;\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/aws_signing.c"
                },
                "region": {
                  "startLine": 2222,
                  "startColumn": 73,
                  "endLine": 2222,
                  "endColumn": 83,
                  "snippet": {
                    "text": "    }\n\n    struct aws_byte_cursor date_cursor = aws_byte_cursor_from_buf(&date_buf);\n    struct aws_byte_cursor secret_key_cursor = aws_byte_cursor_from_buf(&secret_key);\n    if (aws_sha256_hmac_compute(allocator, &secret_key_cursor, &date_cursor, &output, 0)) {\n        goto cleanup;\n    }\n",
                    "rendered": {
                      "text": "    }\n\n    struct aws_byte_cursor date_cursor = aws_byte_cursor_from_buf(&date_buf);\n    struct aws_byte_cursor secret_key_cursor = aws_byte_cursor_from_buf(&secret_key);\n    if (aws_sha256_hmac_compute(allocator, &secret_key_cursor, &date_cursor, &output, 0)) {\n        goto cleanup;\n    }\n",
                      "markdown": "`    }\n\n    struct aws_byte_cursor date_cursor = aws_byte_cursor_from_buf(&date_buf);\n    struct aws_byte_cursor secret_key_cursor = aws_byte_cursor_from_buf(&secret_key);\n    if (aws_sha256_hmac_compute(allocator, &secret_key_cursor, &date_cursor, &output, 0)) {\n        goto cleanup;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/aws_signing.c"
                },
                "region": {
                  "startLine": 2222,
                  "startColumn": 27,
                  "endLine": 2222,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    }\n\n    struct aws_byte_cursor date_cursor = aws_byte_cursor_from_buf(&date_buf);\n    struct aws_byte_cursor secret_key_cursor = aws_byte_cursor_from_buf(&secret_key);\n    if (aws_sha256_hmac_compute(allocator, &secret_key_cursor, &date_cursor, &output, 0)) {\n        goto cleanup;\n    }\n",
                    "rendered": {
                      "text": "    }\n\n    struct aws_byte_cursor date_cursor = aws_byte_cursor_from_buf(&date_buf);\n    struct aws_byte_cursor secret_key_cursor = aws_byte_cursor_from_buf(&secret_key);\n    if (aws_sha256_hmac_compute(allocator, &secret_key_cursor, &date_cursor, &output, 0)) {\n        goto cleanup;\n    }\n",
                      "markdown": "`    }\n\n    struct aws_byte_cursor date_cursor = aws_byte_cursor_from_buf(&date_buf);\n    struct aws_byte_cursor secret_key_cursor = aws_byte_cursor_from_buf(&secret_key);\n    if (aws_sha256_hmac_compute(allocator, &secret_key_cursor, &date_cursor, &output, 0)) {\n        goto cleanup;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/aws_signing.c"
                },
                "region": {
                  "startLine": 2210,
                  "startColumn": 37,
                  "endLine": 2210,
                  "endColumn": 47,
                  "snippet": {
                    "text": "     */\n    struct aws_byte_cursor prefix_cursor = aws_byte_cursor_from_string(s_secret_key_prefix);\n    if (aws_byte_buf_append_dynamic(&secret_key, &prefix_cursor) ||\n        aws_byte_buf_append_dynamic(&secret_key, &secret_access_key_cursor)) {\n        goto cleanup;\n    }\n\n",
                    "rendered": {
                      "text": "     */\n    struct aws_byte_cursor prefix_cursor = aws_byte_cursor_from_string(s_secret_key_prefix);\n    if (aws_byte_buf_append_dynamic(&secret_key, &prefix_cursor) ||\n        aws_byte_buf_append_dynamic(&secret_key, &secret_access_key_cursor)) {\n        goto cleanup;\n    }\n\n",
                      "markdown": "`     */\n    struct aws_byte_cursor prefix_cursor = aws_byte_cursor_from_string(s_secret_key_prefix);\n    if (aws_byte_buf_append_dynamic(&secret_key, &prefix_cursor) ||\n        aws_byte_buf_append_dynamic(&secret_key, &secret_access_key_cursor)) {\n        goto cleanup;\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/aws_signing.c"
                },
                "region": {
                  "startLine": 2209,
                  "startColumn": 37,
                  "endLine": 2209,
                  "endColumn": 47,
                  "snippet": {
                    "text": "     * Prep Key\n     */\n    struct aws_byte_cursor prefix_cursor = aws_byte_cursor_from_string(s_secret_key_prefix);\n    if (aws_byte_buf_append_dynamic(&secret_key, &prefix_cursor) ||\n        aws_byte_buf_append_dynamic(&secret_key, &secret_access_key_cursor)) {\n        goto cleanup;\n    }\n",
                    "rendered": {
                      "text": "     * Prep Key\n     */\n    struct aws_byte_cursor prefix_cursor = aws_byte_cursor_from_string(s_secret_key_prefix);\n    if (aws_byte_buf_append_dynamic(&secret_key, &prefix_cursor) ||\n        aws_byte_buf_append_dynamic(&secret_key, &secret_access_key_cursor)) {\n        goto cleanup;\n    }\n",
                      "markdown": "`     * Prep Key\n     */\n    struct aws_byte_cursor prefix_cursor = aws_byte_cursor_from_string(s_secret_key_prefix);\n    if (aws_byte_buf_append_dynamic(&secret_key, &prefix_cursor) ||\n        aws_byte_buf_append_dynamic(&secret_key, &secret_access_key_cursor)) {\n        goto cleanup;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/aws_signing.c"
                },
                "region": {
                  "startLine": 2208,
                  "startColumn": 73,
                  "endLine": 2208,
                  "endColumn": 83,
                  "snippet": {
                    "text": "    /*\n     * Prep Key\n     */\n    struct aws_byte_cursor prefix_cursor = aws_byte_cursor_from_string(s_secret_key_prefix);\n    if (aws_byte_buf_append_dynamic(&secret_key, &prefix_cursor) ||\n        aws_byte_buf_append_dynamic(&secret_key, &secret_access_key_cursor)) {\n        goto cleanup;\n",
                    "rendered": {
                      "text": "    /*\n     * Prep Key\n     */\n    struct aws_byte_cursor prefix_cursor = aws_byte_cursor_from_string(s_secret_key_prefix);\n    if (aws_byte_buf_append_dynamic(&secret_key, &prefix_cursor) ||\n        aws_byte_buf_append_dynamic(&secret_key, &secret_access_key_cursor)) {\n        goto cleanup;\n",
                      "markdown": "`    /*\n     * Prep Key\n     */\n    struct aws_byte_cursor prefix_cursor = aws_byte_cursor_from_string(s_secret_key_prefix);\n    if (aws_byte_buf_append_dynamic(&secret_key, &prefix_cursor) ||\n        aws_byte_buf_append_dynamic(&secret_key, &secret_access_key_cursor)) {\n        goto cleanup;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/aws_signing.c"
                },
                "region": {
                  "startLine": 2199,
                  "startColumn": 52,
                  "endLine": 2199,
                  "endColumn": 62,
                  "snippet": {
                    "text": "    AWS_ZERO_STRUCT(date_buf);\n\n    struct aws_byte_cursor secret_access_key_cursor = aws_credentials_get_secret_access_key(state->config.credentials);\n    if (aws_byte_buf_init(&secret_key, allocator, s_secret_key_prefix->len + secret_access_key_cursor.len) ||\n        aws_byte_buf_init(&output, allocator, AWS_SHA256_LEN) ||\n        aws_byte_buf_init(&date_buf, allocator, AWS_DATE_TIME_STR_MAX_LEN)) {\n        goto cleanup;\n",
                    "rendered": {
                      "text": "    AWS_ZERO_STRUCT(date_buf);\n\n    struct aws_byte_cursor secret_access_key_cursor = aws_credentials_get_secret_access_key(state->config.credentials);\n    if (aws_byte_buf_init(&secret_key, allocator, s_secret_key_prefix->len + secret_access_key_cursor.len) ||\n        aws_byte_buf_init(&output, allocator, AWS_SHA256_LEN) ||\n        aws_byte_buf_init(&date_buf, allocator, AWS_DATE_TIME_STR_MAX_LEN)) {\n        goto cleanup;\n",
                      "markdown": "`    AWS_ZERO_STRUCT(date_buf);\n\n    struct aws_byte_cursor secret_access_key_cursor = aws_credentials_get_secret_access_key(state->config.credentials);\n    if (aws_byte_buf_init(&secret_key, allocator, s_secret_key_prefix->len + secret_access_key_cursor.len) ||\n        aws_byte_buf_init(&output, allocator, AWS_SHA256_LEN) ||\n        aws_byte_buf_init(&date_buf, allocator, AWS_DATE_TIME_STR_MAX_LEN)) {\n        goto cleanup;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/aws_signing.c"
                },
                "region": {
                  "startLine": 2199,
                  "startColumn": 27,
                  "endLine": 2199,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    AWS_ZERO_STRUCT(date_buf);\n\n    struct aws_byte_cursor secret_access_key_cursor = aws_credentials_get_secret_access_key(state->config.credentials);\n    if (aws_byte_buf_init(&secret_key, allocator, s_secret_key_prefix->len + secret_access_key_cursor.len) ||\n        aws_byte_buf_init(&output, allocator, AWS_SHA256_LEN) ||\n        aws_byte_buf_init(&date_buf, allocator, AWS_DATE_TIME_STR_MAX_LEN)) {\n        goto cleanup;\n",
                    "rendered": {
                      "text": "    AWS_ZERO_STRUCT(date_buf);\n\n    struct aws_byte_cursor secret_access_key_cursor = aws_credentials_get_secret_access_key(state->config.credentials);\n    if (aws_byte_buf_init(&secret_key, allocator, s_secret_key_prefix->len + secret_access_key_cursor.len) ||\n        aws_byte_buf_init(&output, allocator, AWS_SHA256_LEN) ||\n        aws_byte_buf_init(&date_buf, allocator, AWS_DATE_TIME_STR_MAX_LEN)) {\n        goto cleanup;\n",
                      "markdown": "`    AWS_ZERO_STRUCT(date_buf);\n\n    struct aws_byte_cursor secret_access_key_cursor = aws_credentials_get_secret_access_key(state->config.credentials);\n    if (aws_byte_buf_init(&secret_key, allocator, s_secret_key_prefix->len + secret_access_key_cursor.len) ||\n        aws_byte_buf_init(&output, allocator, AWS_SHA256_LEN) ||\n        aws_byte_buf_init(&date_buf, allocator, AWS_DATE_TIME_STR_MAX_LEN)) {\n        goto cleanup;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/aws_signing.c"
                },
                "region": {
                  "startLine": 2190,
                  "startColumn": 20,
                  "endLine": 2190,
                  "endColumn": 30,
                  "snippet": {
                    "text": "    int result = AWS_OP_ERR;\n\n    struct aws_byte_buf secret_key;\n    AWS_ZERO_STRUCT(secret_key);\n\n    struct aws_byte_buf output;\n    AWS_ZERO_STRUCT(output);\n",
                    "rendered": {
                      "text": "    int result = AWS_OP_ERR;\n\n    struct aws_byte_buf secret_key;\n    AWS_ZERO_STRUCT(secret_key);\n\n    struct aws_byte_buf output;\n    AWS_ZERO_STRUCT(output);\n",
                      "markdown": "`    int result = AWS_OP_ERR;\n\n    struct aws_byte_buf secret_key;\n    AWS_ZERO_STRUCT(secret_key);\n\n    struct aws_byte_buf output;\n    AWS_ZERO_STRUCT(output);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/aws_signing.c"
                },
                "region": {
                  "startLine": 2189,
                  "startColumn": 24,
                  "endLine": 2189,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n    int result = AWS_OP_ERR;\n\n    struct aws_byte_buf secret_key;\n    AWS_ZERO_STRUCT(secret_key);\n\n    struct aws_byte_buf output;\n",
                    "rendered": {
                      "text": "\n    int result = AWS_OP_ERR;\n\n    struct aws_byte_buf secret_key;\n    AWS_ZERO_STRUCT(secret_key);\n\n    struct aws_byte_buf output;\n",
                      "markdown": "`\n    int result = AWS_OP_ERR;\n\n    struct aws_byte_buf secret_key;\n    AWS_ZERO_STRUCT(secret_key);\n\n    struct aws_byte_buf output;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/aws_signing.c"
                },
                "region": {
                  "startLine": 2174,
                  "startColumn": 33,
                  "endLine": 2174,
                  "endColumn": 43,
                  "snippet": {
                    "text": " * Signature calculation utility functions\n */\n\nAWS_STATIC_STRING_FROM_LITERAL(s_secret_key_prefix, \"AWS4\");\n\n/*\n * Computes the key to sign with as a function of the secret access key in the credentials and\n",
                    "rendered": {
                      "text": " * Signature calculation utility functions\n */\n\nAWS_STATIC_STRING_FROM_LITERAL(s_secret_key_prefix, \"AWS4\");\n\n/*\n * Computes the key to sign with as a function of the secret access key in the credentials and\n",
                      "markdown": "` * Signature calculation utility functions\n */\n\nAWS_STATIC_STRING_FROM_LITERAL(s_secret_key_prefix, \"AWS4\");\n\n/*\n * Computes the key to sign with as a function of the secret access key in the credentials and\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/credentials_provider_sts.c"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 30,
                  "endLine": 201,
                  "endColumn": 39,
                  "snippet": {
                    "text": "     <AssumeRoleResult>\n          <Credentials>\n             <AccessKeyId>accessKeyId</AccessKeyId>\n             <SecretAccessKey>secretKey</SecretAccessKey>\n             <SessionToken>sessionToken</SessionToken>\n          </Credentials>\n         <AssumedRoleUser>\n",
                    "rendered": {
                      "text": "     <AssumeRoleResult>\n          <Credentials>\n             <AccessKeyId>accessKeyId</AccessKeyId>\n             <SecretAccessKey>secretKey</SecretAccessKey>\n             <SessionToken>sessionToken</SessionToken>\n          </Credentials>\n         <AssumedRoleUser>\n",
                      "markdown": "`     <AssumeRoleResult>\n          <Credentials>\n             <AccessKeyId>accessKeyId</AccessKeyId>\n             <SecretAccessKey>secretKey</SecretAccessKey>\n             <SessionToken>sessionToken</SessionToken>\n          </Credentials>\n         <AssumedRoleUser>\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/token_provider_sso_session.c"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 85,
                  "endLine": 145,
                  "endColumn": 89,
                  "snippet": {
                    "text": "    if (!sso_session_property) {\n        AWS_LOGF_ERROR(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n            \"token-provider-sso-session: token provider could not find an sso-session at profile %s\",\n            aws_string_c_str(profile_name));\n        aws_raise_error(AWS_AUTH_SSO_TOKEN_PROVIDER_SOURCE_FAILURE);\n        goto cleanup;\n",
                    "rendered": {
                      "text": "    if (!sso_session_property) {\n        AWS_LOGF_ERROR(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n            \"token-provider-sso-session: token provider could not find an sso-session at profile %s\",\n            aws_string_c_str(profile_name));\n        aws_raise_error(AWS_AUTH_SSO_TOKEN_PROVIDER_SOURCE_FAILURE);\n        goto cleanup;\n",
                      "markdown": "`    if (!sso_session_property) {\n        AWS_LOGF_ERROR(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n            \"token-provider-sso-session: token provider could not find an sso-session at profile %s\",\n            aws_string_c_str(profile_name));\n        aws_raise_error(AWS_AUTH_SSO_TOKEN_PROVIDER_SOURCE_FAILURE);\n        goto cleanup;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/token_provider_sso_session.c"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 23,
                  "endLine": 136,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        AWS_LOGF_ERROR(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n            \"sso-session: token provider could not load\"\n            \" a profile at %s.\",\n            aws_string_c_str(profile_name));\n        goto cleanup;\n    }\n",
                    "rendered": {
                      "text": "        AWS_LOGF_ERROR(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n            \"sso-session: token provider could not load\"\n            \" a profile at %s.\",\n            aws_string_c_str(profile_name));\n        goto cleanup;\n    }\n",
                      "markdown": "`        AWS_LOGF_ERROR(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n            \"sso-session: token provider could not load\"\n            \" a profile at %s.\",\n            aws_string_c_str(profile_name));\n        goto cleanup;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/token_provider_sso_session.c"
                },
                "region": {
                  "startLine": 176,
                  "startColumn": 50,
                  "endLine": 176,
                  "endColumn": 56,
                  "snippet": {
                    "text": "    if (!sso_start_url_property) {\n        AWS_LOGF_ERROR(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n            \"token-provider-sso-session: failed to find sso_start_url in sso-session\");\n        aws_raise_error(AWS_AUTH_SSO_TOKEN_PROVIDER_SOURCE_FAILURE);\n        goto cleanup;\n    }\n",
                    "rendered": {
                      "text": "    if (!sso_start_url_property) {\n        AWS_LOGF_ERROR(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n            \"token-provider-sso-session: failed to find sso_start_url in sso-session\");\n        aws_raise_error(AWS_AUTH_SSO_TOKEN_PROVIDER_SOURCE_FAILURE);\n        goto cleanup;\n    }\n",
                      "markdown": "`    if (!sso_start_url_property) {\n        AWS_LOGF_ERROR(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n            \"token-provider-sso-session: failed to find sso_start_url in sso-session\");\n        aws_raise_error(AWS_AUTH_SSO_TOKEN_PROVIDER_SOURCE_FAILURE);\n        goto cleanup;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/token_provider_sso_session.c"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 84,
                  "endLine": 168,
                  "endColumn": 90,
                  "snippet": {
                    "text": "\n    if (!sso_region_property) {\n        AWS_LOGF_ERROR(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER, \"token-provider-sso-session: failed to find sso_region in sso-session\");\n        aws_raise_error(AWS_AUTH_SSO_TOKEN_PROVIDER_SOURCE_FAILURE);\n        goto cleanup;\n    }\n",
                    "rendered": {
                      "text": "\n    if (!sso_region_property) {\n        AWS_LOGF_ERROR(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER, \"token-provider-sso-session: failed to find sso_region in sso-session\");\n        aws_raise_error(AWS_AUTH_SSO_TOKEN_PROVIDER_SOURCE_FAILURE);\n        goto cleanup;\n    }\n",
                      "markdown": "`\n    if (!sso_region_property) {\n        AWS_LOGF_ERROR(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER, \"token-provider-sso-session: failed to find sso_region in sso-session\");\n        aws_raise_error(AWS_AUTH_SSO_TOKEN_PROVIDER_SOURCE_FAILURE);\n        goto cleanup;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/token_provider_sso_session.c"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 95,
                  "endLine": 156,
                  "endColumn": 101,
                  "snippet": {
                    "text": "    const struct aws_profile *session_profile =\n        aws_profile_collection_get_section(config_collection, AWS_PROFILE_SECTION_TYPE_SSO_SESSION, sso_session_name);\n    if (!session_profile) {\n        AWS_LOGF_ERROR(AWS_LS_AUTH_CREDENTIALS_PROVIDER, \"token-provider-sso-session: failed to find an sso-session\");\n        aws_raise_error(AWS_AUTH_SSO_TOKEN_PROVIDER_SOURCE_FAILURE);\n        goto cleanup;\n    }\n",
                    "rendered": {
                      "text": "    const struct aws_profile *session_profile =\n        aws_profile_collection_get_section(config_collection, AWS_PROFILE_SECTION_TYPE_SSO_SESSION, sso_session_name);\n    if (!session_profile) {\n        AWS_LOGF_ERROR(AWS_LS_AUTH_CREDENTIALS_PROVIDER, \"token-provider-sso-session: failed to find an sso-session\");\n        aws_raise_error(AWS_AUTH_SSO_TOKEN_PROVIDER_SOURCE_FAILURE);\n        goto cleanup;\n    }\n",
                      "markdown": "`    const struct aws_profile *session_profile =\n        aws_profile_collection_get_section(config_collection, AWS_PROFILE_SECTION_TYPE_SSO_SESSION, sso_session_name);\n    if (!session_profile) {\n        AWS_LOGF_ERROR(AWS_LS_AUTH_CREDENTIALS_PROVIDER, \"token-provider-sso-session: failed to find an sso-session\");\n        aws_raise_error(AWS_AUTH_SSO_TOKEN_PROVIDER_SOURCE_FAILURE);\n        goto cleanup;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/source/token_provider_sso_session.c"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 65,
                  "endLine": 145,
                  "endColumn": 71,
                  "snippet": {
                    "text": "    if (!sso_session_property) {\n        AWS_LOGF_ERROR(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n            \"token-provider-sso-session: token provider could not find an sso-session at profile %s\",\n            aws_string_c_str(profile_name));\n        aws_raise_error(AWS_AUTH_SSO_TOKEN_PROVIDER_SOURCE_FAILURE);\n        goto cleanup;\n",
                    "rendered": {
                      "text": "    if (!sso_session_property) {\n        AWS_LOGF_ERROR(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n            \"token-provider-sso-session: token provider could not find an sso-session at profile %s\",\n            aws_string_c_str(profile_name));\n        aws_raise_error(AWS_AUTH_SSO_TOKEN_PROVIDER_SOURCE_FAILURE);\n        goto cleanup;\n",
                      "markdown": "`    if (!sso_session_property) {\n        AWS_LOGF_ERROR(\n            AWS_LS_AUTH_CREDENTIALS_PROVIDER,\n            \"token-provider-sso-session: token provider could not find an sso-session at profile %s\",\n            aws_string_c_str(profile_name));\n        aws_raise_error(AWS_AUTH_SSO_TOKEN_PROVIDER_SOURCE_FAILURE);\n        goto cleanup;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/post-header-key-case/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/post-header-key-case/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-relative-relative-normalized/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-relative-relative-normalized/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/post-vanilla-empty-query-value/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/post-vanilla-empty-query-value/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/sigv4_signing_tests.c"
                },
                "region": {
                  "startLine": 1618,
                  "startColumn": 4,
                  "endLine": 1618,
                  "endColumn": 70,
                  "snippet": {
                    "text": "    \"x-amz-date:20150830T123600Z\\n\"\n    \"\\n\"\n    \"host;x-amz-date\\n\"\n    \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\");\n\nstatic bool s_should_sign_header(const struct aws_byte_cursor *name, void *userdata) {\n    (void)userdata;\n",
                    "rendered": {
                      "text": "    \"x-amz-date:20150830T123600Z\\n\"\n    \"\\n\"\n    \"host;x-amz-date\\n\"\n    \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\");\n\nstatic bool s_should_sign_header(const struct aws_byte_cursor *name, void *userdata) {\n    (void)userdata;\n",
                      "markdown": "`    \"x-amz-date:20150830T123600Z\\n\"\n    \"\\n\"\n    \"host;x-amz-date\\n\"\n    \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\");\n\nstatic bool s_should_sign_header(const struct aws_byte_cursor *name, void *userdata) {\n    (void)userdata;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/sigv4_signing_tests.c"
                },
                "region": {
                  "startLine": 1593,
                  "startColumn": 4,
                  "endLine": 1593,
                  "endColumn": 70,
                  "snippet": {
                    "text": "    \"x-amz-date:20150830T123600Z\\n\"\n    \"\\n\"\n    \"host;x-amz-date\\n\"\n    \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\");\n\nstatic int s_sigv4_skip_user_agent_header_test(struct aws_allocator *allocator, void *ctx) {\n    (void)ctx;\n",
                    "rendered": {
                      "text": "    \"x-amz-date:20150830T123600Z\\n\"\n    \"\\n\"\n    \"host;x-amz-date\\n\"\n    \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\");\n\nstatic int s_sigv4_skip_user_agent_header_test(struct aws_allocator *allocator, void *ctx) {\n    (void)ctx;\n",
                      "markdown": "`    \"x-amz-date:20150830T123600Z\\n\"\n    \"\\n\"\n    \"host;x-amz-date\\n\"\n    \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\");\n\nstatic int s_sigv4_skip_user_agent_header_test(struct aws_allocator *allocator, void *ctx) {\n    (void)ctx;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/sigv4_signing_tests.c"
                },
                "region": {
                  "startLine": 1569,
                  "startColumn": 4,
                  "endLine": 1569,
                  "endColumn": 70,
                  "snippet": {
                    "text": "    \"x-amz-date:20150830T123600Z\\n\"\n    \"\\n\"\n    \"host;x-amz-date\\n\"\n    \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\");\n\nstatic int s_sigv4_skip_xray_header_test(struct aws_allocator *allocator, void *ctx) {\n    (void)ctx;\n",
                    "rendered": {
                      "text": "    \"x-amz-date:20150830T123600Z\\n\"\n    \"\\n\"\n    \"host;x-amz-date\\n\"\n    \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\");\n\nstatic int s_sigv4_skip_xray_header_test(struct aws_allocator *allocator, void *ctx) {\n    (void)ctx;\n",
                      "markdown": "`    \"x-amz-date:20150830T123600Z\\n\"\n    \"\\n\"\n    \"host;x-amz-date\\n\"\n    \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\");\n\nstatic int s_sigv4_skip_xray_header_test(struct aws_allocator *allocator, void *ctx) {\n    (void)ctx;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/key_derivation_tests.c"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 62,
                  "endLine": 255,
                  "endColumn": 73,
                  "snippet": {
                    "text": "    ASSERT_SUCCESS(aws_hex_encode(&private_key_cursor, &private_buf));\n    private_buf.len -= 1;\n    ASSERT_BIN_ARRAYS_EQUALS(\n        s_expected_fixed_private_key->bytes, s_expected_fixed_private_key->len, private_buf.buffer, private_buf.len);\n\n    aws_byte_buf_clean_up(&private_buf);\n\n",
                    "rendered": {
                      "text": "    ASSERT_SUCCESS(aws_hex_encode(&private_key_cursor, &private_buf));\n    private_buf.len -= 1;\n    ASSERT_BIN_ARRAYS_EQUALS(\n        s_expected_fixed_private_key->bytes, s_expected_fixed_private_key->len, private_buf.buffer, private_buf.len);\n\n    aws_byte_buf_clean_up(&private_buf);\n\n",
                      "markdown": "`    ASSERT_SUCCESS(aws_hex_encode(&private_key_cursor, &private_buf));\n    private_buf.len -= 1;\n    ASSERT_BIN_ARRAYS_EQUALS(\n        s_expected_fixed_private_key->bytes, s_expected_fixed_private_key->len, private_buf.buffer, private_buf.len);\n\n    aws_byte_buf_clean_up(&private_buf);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/key_derivation_tests.c"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 25,
                  "endLine": 255,
                  "endColumn": 36,
                  "snippet": {
                    "text": "    ASSERT_SUCCESS(aws_hex_encode(&private_key_cursor, &private_buf));\n    private_buf.len -= 1;\n    ASSERT_BIN_ARRAYS_EQUALS(\n        s_expected_fixed_private_key->bytes, s_expected_fixed_private_key->len, private_buf.buffer, private_buf.len);\n\n    aws_byte_buf_clean_up(&private_buf);\n\n",
                    "rendered": {
                      "text": "    ASSERT_SUCCESS(aws_hex_encode(&private_key_cursor, &private_buf));\n    private_buf.len -= 1;\n    ASSERT_BIN_ARRAYS_EQUALS(\n        s_expected_fixed_private_key->bytes, s_expected_fixed_private_key->len, private_buf.buffer, private_buf.len);\n\n    aws_byte_buf_clean_up(&private_buf);\n\n",
                      "markdown": "`    ASSERT_SUCCESS(aws_hex_encode(&private_key_cursor, &private_buf));\n    private_buf.len -= 1;\n    ASSERT_BIN_ARRAYS_EQUALS(\n        s_expected_fixed_private_key->bytes, s_expected_fixed_private_key->len, private_buf.buffer, private_buf.len);\n\n    aws_byte_buf_clean_up(&private_buf);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/key_derivation_tests.c"
                },
                "region": {
                  "startLine": 252,
                  "startColumn": 35,
                  "endLine": 252,
                  "endColumn": 46,
                  "snippet": {
                    "text": "    struct aws_byte_buf private_buf;\n    ASSERT_SUCCESS(aws_byte_buf_init(&private_buf, allocator, 128));\n\n    ASSERT_SUCCESS(aws_hex_encode(&private_key_cursor, &private_buf));\n    private_buf.len -= 1;\n    ASSERT_BIN_ARRAYS_EQUALS(\n        s_expected_fixed_private_key->bytes, s_expected_fixed_private_key->len, private_buf.buffer, private_buf.len);\n",
                    "rendered": {
                      "text": "    struct aws_byte_buf private_buf;\n    ASSERT_SUCCESS(aws_byte_buf_init(&private_buf, allocator, 128));\n\n    ASSERT_SUCCESS(aws_hex_encode(&private_key_cursor, &private_buf));\n    private_buf.len -= 1;\n    ASSERT_BIN_ARRAYS_EQUALS(\n        s_expected_fixed_private_key->bytes, s_expected_fixed_private_key->len, private_buf.buffer, private_buf.len);\n",
                      "markdown": "`    struct aws_byte_buf private_buf;\n    ASSERT_SUCCESS(aws_byte_buf_init(&private_buf, allocator, 128));\n\n    ASSERT_SUCCESS(aws_hex_encode(&private_key_cursor, &private_buf));\n    private_buf.len -= 1;\n    ASSERT_BIN_ARRAYS_EQUALS(\n        s_expected_fixed_private_key->bytes, s_expected_fixed_private_key->len, private_buf.buffer, private_buf.len);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/key_derivation_tests.c"
                },
                "region": {
                  "startLine": 247,
                  "startColumn": 43,
                  "endLine": 247,
                  "endColumn": 54,
                  "snippet": {
                    "text": "    struct aws_byte_cursor private_key_cursor;\n    AWS_ZERO_STRUCT(private_key_cursor);\n\n    aws_ecc_key_pair_get_private_key(key, &private_key_cursor);\n\n    struct aws_byte_buf private_buf;\n    ASSERT_SUCCESS(aws_byte_buf_init(&private_buf, allocator, 128));\n",
                    "rendered": {
                      "text": "    struct aws_byte_cursor private_key_cursor;\n    AWS_ZERO_STRUCT(private_key_cursor);\n\n    aws_ecc_key_pair_get_private_key(key, &private_key_cursor);\n\n    struct aws_byte_buf private_buf;\n    ASSERT_SUCCESS(aws_byte_buf_init(&private_buf, allocator, 128));\n",
                      "markdown": "`    struct aws_byte_cursor private_key_cursor;\n    AWS_ZERO_STRUCT(private_key_cursor);\n\n    aws_ecc_key_pair_get_private_key(key, &private_key_cursor);\n\n    struct aws_byte_buf private_buf;\n    ASSERT_SUCCESS(aws_byte_buf_init(&private_buf, allocator, 128));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/key_derivation_tests.c"
                },
                "region": {
                  "startLine": 247,
                  "startColumn": 25,
                  "endLine": 247,
                  "endColumn": 36,
                  "snippet": {
                    "text": "    struct aws_byte_cursor private_key_cursor;\n    AWS_ZERO_STRUCT(private_key_cursor);\n\n    aws_ecc_key_pair_get_private_key(key, &private_key_cursor);\n\n    struct aws_byte_buf private_buf;\n    ASSERT_SUCCESS(aws_byte_buf_init(&private_buf, allocator, 128));\n",
                    "rendered": {
                      "text": "    struct aws_byte_cursor private_key_cursor;\n    AWS_ZERO_STRUCT(private_key_cursor);\n\n    aws_ecc_key_pair_get_private_key(key, &private_key_cursor);\n\n    struct aws_byte_buf private_buf;\n    ASSERT_SUCCESS(aws_byte_buf_init(&private_buf, allocator, 128));\n",
                      "markdown": "`    struct aws_byte_cursor private_key_cursor;\n    AWS_ZERO_STRUCT(private_key_cursor);\n\n    aws_ecc_key_pair_get_private_key(key, &private_key_cursor);\n\n    struct aws_byte_buf private_buf;\n    ASSERT_SUCCESS(aws_byte_buf_init(&private_buf, allocator, 128));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/key_derivation_tests.c"
                },
                "region": {
                  "startLine": 245,
                  "startColumn": 20,
                  "endLine": 245,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\nstatic int s_verify_fixed_ecc_key_private(struct aws_ecc_key_pair *key, struct aws_allocator *allocator) {\n    struct aws_byte_cursor private_key_cursor;\n    AWS_ZERO_STRUCT(private_key_cursor);\n\n    aws_ecc_key_pair_get_private_key(key, &private_key_cursor);\n\n",
                    "rendered": {
                      "text": "\nstatic int s_verify_fixed_ecc_key_private(struct aws_ecc_key_pair *key, struct aws_allocator *allocator) {\n    struct aws_byte_cursor private_key_cursor;\n    AWS_ZERO_STRUCT(private_key_cursor);\n\n    aws_ecc_key_pair_get_private_key(key, &private_key_cursor);\n\n",
                      "markdown": "`\nstatic int s_verify_fixed_ecc_key_private(struct aws_ecc_key_pair *key, struct aws_allocator *allocator) {\n    struct aws_byte_cursor private_key_cursor;\n    AWS_ZERO_STRUCT(private_key_cursor);\n\n    aws_ecc_key_pair_get_private_key(key, &private_key_cursor);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/key_derivation_tests.c"
                },
                "region": {
                  "startLine": 244,
                  "startColumn": 27,
                  "endLine": 244,
                  "endColumn": 38,
                  "snippet": {
                    "text": "}\n\nstatic int s_verify_fixed_ecc_key_private(struct aws_ecc_key_pair *key, struct aws_allocator *allocator) {\n    struct aws_byte_cursor private_key_cursor;\n    AWS_ZERO_STRUCT(private_key_cursor);\n\n    aws_ecc_key_pair_get_private_key(key, &private_key_cursor);\n",
                    "rendered": {
                      "text": "}\n\nstatic int s_verify_fixed_ecc_key_private(struct aws_ecc_key_pair *key, struct aws_allocator *allocator) {\n    struct aws_byte_cursor private_key_cursor;\n    AWS_ZERO_STRUCT(private_key_cursor);\n\n    aws_ecc_key_pair_get_private_key(key, &private_key_cursor);\n",
                      "markdown": "`}\n\nstatic int s_verify_fixed_ecc_key_private(struct aws_ecc_key_pair *key, struct aws_allocator *allocator) {\n    struct aws_byte_cursor private_key_cursor;\n    AWS_ZERO_STRUCT(private_key_cursor);\n\n    aws_ecc_key_pair_get_private_key(key, &private_key_cursor);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/key_derivation_tests.c"
                },
                "region": {
                  "startLine": 203,
                  "startColumn": 21,
                  "endLine": 203,
                  "endColumn": 32,
                  "snippet": {
                    "text": "#endif /* __APPLE__ */\n\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_fixed_private_key,\n    \"7fd3bd010c0d9c292141c2b77bfbde1042c92e6836fff749d1269ec890fca1bd\");\n\nstatic int s_verify_fixed_ecc_key_public(struct aws_ecc_key_pair *key, struct aws_allocator *allocator) {\n",
                    "rendered": {
                      "text": "#endif /* __APPLE__ */\n\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_fixed_private_key,\n    \"7fd3bd010c0d9c292141c2b77bfbde1042c92e6836fff749d1269ec890fca1bd\");\n\nstatic int s_verify_fixed_ecc_key_public(struct aws_ecc_key_pair *key, struct aws_allocator *allocator) {\n",
                      "markdown": "`#endif /* __APPLE__ */\n\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_fixed_private_key,\n    \"7fd3bd010c0d9c292141c2b77bfbde1042c92e6836fff749d1269ec890fca1bd\");\n\nstatic int s_verify_fixed_ecc_key_public(struct aws_ecc_key_pair *key, struct aws_allocator *allocator) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/key_derivation_tests.c"
                },
                "region": {
                  "startLine": 324,
                  "startColumn": 4,
                  "endLine": 324,
                  "endColumn": 106,
                  "snippet": {
                    "text": "    s_ecc_derive_long_access_key_id_test_value,\n    \"AKISORANDOMAASORANDOMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFf\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_ecc_derive_long_secret_access_key_test_value,\n    \"q+jcrXGc+0zWN6uzclKVhvMmUsIfRPa4rlRandom\");\n",
                    "rendered": {
                      "text": "    s_ecc_derive_long_access_key_id_test_value,\n    \"AKISORANDOMAASORANDOMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFf\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_ecc_derive_long_secret_access_key_test_value,\n    \"q+jcrXGc+0zWN6uzclKVhvMmUsIfRPa4rlRandom\");\n",
                      "markdown": "`    s_ecc_derive_long_access_key_id_test_value,\n    \"AKISORANDOMAASORANDOMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFf\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_ecc_derive_long_secret_access_key_test_value,\n    \"q+jcrXGc+0zWN6uzclKVhvMmUsIfRPa4rlRandom\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/key_derivation_tests.c"
                },
                "region": {
                  "startLine": 323,
                  "startColumn": 4,
                  "endLine": 323,
                  "endColumn": 120,
                  "snippet": {
                    "text": "AWS_STATIC_STRING_FROM_LITERAL(\n    s_ecc_derive_long_access_key_id_test_value,\n    \"AKISORANDOMAASORANDOMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFf\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_ecc_derive_long_secret_access_key_test_value,\n",
                    "rendered": {
                      "text": "AWS_STATIC_STRING_FROM_LITERAL(\n    s_ecc_derive_long_access_key_id_test_value,\n    \"AKISORANDOMAASORANDOMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFf\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_ecc_derive_long_secret_access_key_test_value,\n",
                      "markdown": "`AWS_STATIC_STRING_FROM_LITERAL(\n    s_ecc_derive_long_access_key_id_test_value,\n    \"AKISORANDOMAASORANDOMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFf\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_ecc_derive_long_secret_access_key_test_value,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/key_derivation_tests.c"
                },
                "region": {
                  "startLine": 322,
                  "startColumn": 4,
                  "endLine": 322,
                  "endColumn": 120,
                  "snippet": {
                    "text": "\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_ecc_derive_long_access_key_id_test_value,\n    \"AKISORANDOMAASORANDOMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFf\");\nAWS_STATIC_STRING_FROM_LITERAL(\n",
                    "rendered": {
                      "text": "\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_ecc_derive_long_access_key_id_test_value,\n    \"AKISORANDOMAASORANDOMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFf\");\nAWS_STATIC_STRING_FROM_LITERAL(\n",
                      "markdown": "`\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_ecc_derive_long_access_key_id_test_value,\n    \"AKISORANDOMAASORANDOMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\"\n    \"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFf\");\nAWS_STATIC_STRING_FROM_LITERAL(\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/key_derivation_tests.c"
                },
                "region": {
                  "startLine": 204,
                  "startColumn": 4,
                  "endLine": 204,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_fixed_private_key,\n    \"7fd3bd010c0d9c292141c2b77bfbde1042c92e6836fff749d1269ec890fca1bd\");\n\nstatic int s_verify_fixed_ecc_key_public(struct aws_ecc_key_pair *key, struct aws_allocator *allocator) {\n#ifdef __APPLE__\n",
                    "rendered": {
                      "text": "\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_fixed_private_key,\n    \"7fd3bd010c0d9c292141c2b77bfbde1042c92e6836fff749d1269ec890fca1bd\");\n\nstatic int s_verify_fixed_ecc_key_public(struct aws_ecc_key_pair *key, struct aws_allocator *allocator) {\n#ifdef __APPLE__\n",
                      "markdown": "`\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_fixed_private_key,\n    \"7fd3bd010c0d9c292141c2b77bfbde1042c92e6836fff749d1269ec890fca1bd\");\n\nstatic int s_verify_fixed_ecc_key_public(struct aws_ecc_key_pair *key, struct aws_allocator *allocator) {\n#ifdef __APPLE__\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/key_derivation_tests.c"
                },
                "region": {
                  "startLine": 199,
                  "startColumn": 4,
                  "endLine": 199,
                  "endColumn": 70,
                  "snippet": {
                    "text": "    \"15d242ceebf8d8169fd6a8b5a746c41140414c3b07579038da06af89190fffcb\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_fixed_pub_y,\n    \"0515242cedd82e94799482e4c0514b505afccf2c0c98d6a553bf539f424c5ec0\");\n#endif /* __APPLE__ */\n\nAWS_STATIC_STRING_FROM_LITERAL(\n",
                    "rendered": {
                      "text": "    \"15d242ceebf8d8169fd6a8b5a746c41140414c3b07579038da06af89190fffcb\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_fixed_pub_y,\n    \"0515242cedd82e94799482e4c0514b505afccf2c0c98d6a553bf539f424c5ec0\");\n#endif /* __APPLE__ */\n\nAWS_STATIC_STRING_FROM_LITERAL(\n",
                      "markdown": "`    \"15d242ceebf8d8169fd6a8b5a746c41140414c3b07579038da06af89190fffcb\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_fixed_pub_y,\n    \"0515242cedd82e94799482e4c0514b505afccf2c0c98d6a553bf539f424c5ec0\");\n#endif /* __APPLE__ */\n\nAWS_STATIC_STRING_FROM_LITERAL(\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/key_derivation_tests.c"
                },
                "region": {
                  "startLine": 196,
                  "startColumn": 4,
                  "endLine": 196,
                  "endColumn": 70,
                  "snippet": {
                    "text": "#ifndef __APPLE__\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_fixed_pub_x,\n    \"15d242ceebf8d8169fd6a8b5a746c41140414c3b07579038da06af89190fffcb\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_fixed_pub_y,\n    \"0515242cedd82e94799482e4c0514b505afccf2c0c98d6a553bf539f424c5ec0\");\n",
                    "rendered": {
                      "text": "#ifndef __APPLE__\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_fixed_pub_x,\n    \"15d242ceebf8d8169fd6a8b5a746c41140414c3b07579038da06af89190fffcb\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_fixed_pub_y,\n    \"0515242cedd82e94799482e4c0514b505afccf2c0c98d6a553bf539f424c5ec0\");\n",
                      "markdown": "`#ifndef __APPLE__\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_fixed_pub_x,\n    \"15d242ceebf8d8169fd6a8b5a746c41140414c3b07579038da06af89190fffcb\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_fixed_pub_y,\n    \"0515242cedd82e94799482e4c0514b505afccf2c0c98d6a553bf539f424c5ec0\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 1137,
                  "startColumn": 9,
                  "endLine": 1137,
                  "endColumn": 19,
                  "snippet": {
                    "text": "            },\n        .host = aws_byte_cursor_from_c_str(\"www.xxx123321testmocknonexsitingawsservice.com\"),\n        .path_and_query = aws_byte_cursor_from_c_str(\"/path/to/resource/?a=b&c=d\"),\n        .auth_token = aws_byte_cursor_from_c_str(\"test-token-1234-abcd\"),\n    };\n\n    struct aws_credentials_provider *provider = aws_credentials_provider_new_ecs(allocator, &options);\n",
                    "rendered": {
                      "text": "            },\n        .host = aws_byte_cursor_from_c_str(\"www.xxx123321testmocknonexsitingawsservice.com\"),\n        .path_and_query = aws_byte_cursor_from_c_str(\"/path/to/resource/?a=b&c=d\"),\n        .auth_token = aws_byte_cursor_from_c_str(\"test-token-1234-abcd\"),\n    };\n\n    struct aws_credentials_provider *provider = aws_credentials_provider_new_ecs(allocator, &options);\n",
                      "markdown": "`            },\n        .host = aws_byte_cursor_from_c_str(\"www.xxx123321testmocknonexsitingawsservice.com\"),\n        .path_and_query = aws_byte_cursor_from_c_str(\"/path/to/resource/?a=b&c=d\"),\n        .auth_token = aws_byte_cursor_from_c_str(\"test-token-1234-abcd\"),\n    };\n\n    struct aws_credentials_provider *provider = aws_credentials_provider_new_ecs(allocator, &options);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 1081,
                  "startColumn": 9,
                  "endLine": 1081,
                  "endColumn": 19,
                  "snippet": {
                    "text": "            },\n        .host = aws_byte_cursor_from_c_str(\"www.xxx123321testmocknonexsitingawsservice.com\"),\n        .path_and_query = aws_byte_cursor_from_c_str(\"/path/to/resource/?a=b&c=d\"),\n        .auth_token = aws_byte_cursor_from_c_str(\"test-token-1234-abcd\"),\n    };\n\n    struct aws_credentials_provider *provider = aws_credentials_provider_new_ecs(allocator, &options);\n",
                    "rendered": {
                      "text": "            },\n        .host = aws_byte_cursor_from_c_str(\"www.xxx123321testmocknonexsitingawsservice.com\"),\n        .path_and_query = aws_byte_cursor_from_c_str(\"/path/to/resource/?a=b&c=d\"),\n        .auth_token = aws_byte_cursor_from_c_str(\"test-token-1234-abcd\"),\n    };\n\n    struct aws_credentials_provider *provider = aws_credentials_provider_new_ecs(allocator, &options);\n",
                      "markdown": "`            },\n        .host = aws_byte_cursor_from_c_str(\"www.xxx123321testmocknonexsitingawsservice.com\"),\n        .path_and_query = aws_byte_cursor_from_c_str(\"/path/to/resource/?a=b&c=d\"),\n        .auth_token = aws_byte_cursor_from_c_str(\"test-token-1234-abcd\"),\n    };\n\n    struct aws_credentials_provider *provider = aws_credentials_provider_new_ecs(allocator, &options);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 1011,
                  "startColumn": 9,
                  "endLine": 1011,
                  "endColumn": 19,
                  "snippet": {
                    "text": "            },\n        .host = aws_byte_cursor_from_c_str(\"www.xxx123321testmocknonexsitingawsservice.com\"),\n        .path_and_query = aws_byte_cursor_from_c_str(\"/path/to/resource/?a=b&c=d\"),\n        .auth_token = aws_byte_cursor_from_c_str(\"test-token-1234-abcd\"),\n        .tls_ctx = s_tester.tls_ctx,\n    };\n\n",
                    "rendered": {
                      "text": "            },\n        .host = aws_byte_cursor_from_c_str(\"www.xxx123321testmocknonexsitingawsservice.com\"),\n        .path_and_query = aws_byte_cursor_from_c_str(\"/path/to/resource/?a=b&c=d\"),\n        .auth_token = aws_byte_cursor_from_c_str(\"test-token-1234-abcd\"),\n        .tls_ctx = s_tester.tls_ctx,\n    };\n\n",
                      "markdown": "`            },\n        .host = aws_byte_cursor_from_c_str(\"www.xxx123321testmocknonexsitingawsservice.com\"),\n        .path_and_query = aws_byte_cursor_from_c_str(\"/path/to/resource/?a=b&c=d\"),\n        .auth_token = aws_byte_cursor_from_c_str(\"test-token-1234-abcd\"),\n        .tls_ctx = s_tester.tls_ctx,\n    };\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 983,
                  "startColumn": 92,
                  "endLine": 983,
                  "endColumn": 102,
                  "snippet": {
                    "text": "    return 0;\n}\n\nAWS_TEST_CASE(credentials_provider_ecs_no_auth_token_success, s_credentials_provider_ecs_no_auth_token_success);\n\nAWS_STATIC_STRING_FROM_LITERAL(s_good_response_first_part, \"{\\\"AccessKeyId\\\":\\\"SuccessfulAccessKey\\\", \\n  \\\"Secret\");\nAWS_STATIC_STRING_FROM_LITERAL(s_good_response_second_part, \"AccessKey\\\":\\\"SuccessfulSecret\\\", \\n  \\\"Token\\\":\\\"Token\");\n",
                    "rendered": {
                      "text": "    return 0;\n}\n\nAWS_TEST_CASE(credentials_provider_ecs_no_auth_token_success, s_credentials_provider_ecs_no_auth_token_success);\n\nAWS_STATIC_STRING_FROM_LITERAL(s_good_response_first_part, \"{\\\"AccessKeyId\\\":\\\"SuccessfulAccessKey\\\", \\n  \\\"Secret\");\nAWS_STATIC_STRING_FROM_LITERAL(s_good_response_second_part, \"AccessKey\\\":\\\"SuccessfulSecret\\\", \\n  \\\"Token\\\":\\\"Token\");\n",
                      "markdown": "`    return 0;\n}\n\nAWS_TEST_CASE(credentials_provider_ecs_no_auth_token_success, s_credentials_provider_ecs_no_auth_token_success);\n\nAWS_STATIC_STRING_FROM_LITERAL(s_good_response_first_part, \"{\\\"AccessKeyId\\\":\\\"SuccessfulAccessKey\\\", \\n  \\\"Secret\");\nAWS_STATIC_STRING_FROM_LITERAL(s_good_response_second_part, \"AccessKey\\\":\\\"SuccessfulSecret\\\", \\n  \\\"Token\\\":\\\"Token\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 983,
                  "startColumn": 42,
                  "endLine": 983,
                  "endColumn": 52,
                  "snippet": {
                    "text": "    return 0;\n}\n\nAWS_TEST_CASE(credentials_provider_ecs_no_auth_token_success, s_credentials_provider_ecs_no_auth_token_success);\n\nAWS_STATIC_STRING_FROM_LITERAL(s_good_response_first_part, \"{\\\"AccessKeyId\\\":\\\"SuccessfulAccessKey\\\", \\n  \\\"Secret\");\nAWS_STATIC_STRING_FROM_LITERAL(s_good_response_second_part, \"AccessKey\\\":\\\"SuccessfulSecret\\\", \\n  \\\"Token\\\":\\\"Token\");\n",
                    "rendered": {
                      "text": "    return 0;\n}\n\nAWS_TEST_CASE(credentials_provider_ecs_no_auth_token_success, s_credentials_provider_ecs_no_auth_token_success);\n\nAWS_STATIC_STRING_FROM_LITERAL(s_good_response_first_part, \"{\\\"AccessKeyId\\\":\\\"SuccessfulAccessKey\\\", \\n  \\\"Secret\");\nAWS_STATIC_STRING_FROM_LITERAL(s_good_response_second_part, \"AccessKey\\\":\\\"SuccessfulSecret\\\", \\n  \\\"Token\\\":\\\"Token\");\n",
                      "markdown": "`    return 0;\n}\n\nAWS_TEST_CASE(credentials_provider_ecs_no_auth_token_success, s_credentials_provider_ecs_no_auth_token_success);\n\nAWS_STATIC_STRING_FROM_LITERAL(s_good_response_first_part, \"{\\\"AccessKeyId\\\":\\\"SuccessfulAccessKey\\\", \\n  \\\"Secret\");\nAWS_STATIC_STRING_FROM_LITERAL(s_good_response_second_part, \"AccessKey\\\":\\\"SuccessfulSecret\\\", \\n  \\\"Token\\\":\\\"Token\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 951,
                  "startColumn": 41,
                  "endLine": 951,
                  "endColumn": 51,
                  "snippet": {
                    "text": "}\nAWS_TEST_CASE(credentials_provider_ecs_basic_success_uri_env, s_credentials_provider_ecs_basic_success_uri_env);\n\nstatic int s_credentials_provider_ecs_no_auth_token_success(struct aws_allocator *allocator, void *ctx) {\n    (void)ctx;\n\n    s_aws_ecs_tester_init(allocator);\n",
                    "rendered": {
                      "text": "}\nAWS_TEST_CASE(credentials_provider_ecs_basic_success_uri_env, s_credentials_provider_ecs_basic_success_uri_env);\n\nstatic int s_credentials_provider_ecs_no_auth_token_success(struct aws_allocator *allocator, void *ctx) {\n    (void)ctx;\n\n    s_aws_ecs_tester_init(allocator);\n",
                      "markdown": "`}\nAWS_TEST_CASE(credentials_provider_ecs_basic_success_uri_env, s_credentials_provider_ecs_basic_success_uri_env);\n\nstatic int s_credentials_provider_ecs_no_auth_token_success(struct aws_allocator *allocator, void *ctx) {\n    (void)ctx;\n\n    s_aws_ecs_tester_init(allocator);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 941,
                  "startColumn": 28,
                  "endLine": 941,
                  "endColumn": 38,
                  "snippet": {
                    "text": "            case_i.auth_token,\n            case_i.auth_token_file_content,\n            case_i.expected_uri,\n            case_i.expected_auth_token));\n\n        s_aws_ecs_tester_reset();\n    }\n",
                    "rendered": {
                      "text": "            case_i.auth_token,\n            case_i.auth_token_file_content,\n            case_i.expected_uri,\n            case_i.expected_auth_token));\n\n        s_aws_ecs_tester_reset();\n    }\n",
                      "markdown": "`            case_i.auth_token,\n            case_i.auth_token_file_content,\n            case_i.expected_uri,\n            case_i.expected_auth_token));\n\n        s_aws_ecs_tester_reset();\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 939,
                  "startColumn": 19,
                  "endLine": 939,
                  "endColumn": 29,
                  "snippet": {
                    "text": "            case_i.relative_uri,\n            case_i.full_uri,\n            case_i.auth_token,\n            case_i.auth_token_file_content,\n            case_i.expected_uri,\n            case_i.expected_auth_token));\n\n",
                    "rendered": {
                      "text": "            case_i.relative_uri,\n            case_i.full_uri,\n            case_i.auth_token,\n            case_i.auth_token_file_content,\n            case_i.expected_uri,\n            case_i.expected_auth_token));\n\n",
                      "markdown": "`            case_i.relative_uri,\n            case_i.full_uri,\n            case_i.auth_token,\n            case_i.auth_token_file_content,\n            case_i.expected_uri,\n            case_i.expected_auth_token));\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 938,
                  "startColumn": 19,
                  "endLine": 938,
                  "endColumn": 29,
                  "snippet": {
                    "text": "            &options,\n            case_i.relative_uri,\n            case_i.full_uri,\n            case_i.auth_token,\n            case_i.auth_token_file_content,\n            case_i.expected_uri,\n            case_i.expected_auth_token));\n",
                    "rendered": {
                      "text": "            &options,\n            case_i.relative_uri,\n            case_i.full_uri,\n            case_i.auth_token,\n            case_i.auth_token_file_content,\n            case_i.expected_uri,\n            case_i.expected_auth_token));\n",
                      "markdown": "`            &options,\n            case_i.relative_uri,\n            case_i.full_uri,\n            case_i.auth_token,\n            case_i.auth_token_file_content,\n            case_i.expected_uri,\n            case_i.expected_auth_token));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 914,
                  "startColumn": 52,
                  "endLine": 914,
                  "endColumn": 62,
                  "snippet": {
                    "text": "            case_i.relative_uri ? case_i.relative_uri : \"<UNSET>\",\n            case_i.full_uri ? case_i.full_uri : \"<UNSET>\",\n            case_i.auth_token ? case_i.auth_token : \"<UNSET>\",\n            case_i.auth_token_file_content ? case_i.auth_token_file_content : \"<UNSET>\");\n\n        /* This unsets previous env vars */\n        ASSERT_SUCCESS(s_aws_ecs_tester_init(allocator));\n",
                    "rendered": {
                      "text": "            case_i.relative_uri ? case_i.relative_uri : \"<UNSET>\",\n            case_i.full_uri ? case_i.full_uri : \"<UNSET>\",\n            case_i.auth_token ? case_i.auth_token : \"<UNSET>\",\n            case_i.auth_token_file_content ? case_i.auth_token_file_content : \"<UNSET>\");\n\n        /* This unsets previous env vars */\n        ASSERT_SUCCESS(s_aws_ecs_tester_init(allocator));\n",
                      "markdown": "`            case_i.relative_uri ? case_i.relative_uri : \"<UNSET>\",\n            case_i.full_uri ? case_i.full_uri : \"<UNSET>\",\n            case_i.auth_token ? case_i.auth_token : \"<UNSET>\",\n            case_i.auth_token_file_content ? case_i.auth_token_file_content : \"<UNSET>\");\n\n        /* This unsets previous env vars */\n        ASSERT_SUCCESS(s_aws_ecs_tester_init(allocator));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 914,
                  "startColumn": 19,
                  "endLine": 914,
                  "endColumn": 29,
                  "snippet": {
                    "text": "            case_i.relative_uri ? case_i.relative_uri : \"<UNSET>\",\n            case_i.full_uri ? case_i.full_uri : \"<UNSET>\",\n            case_i.auth_token ? case_i.auth_token : \"<UNSET>\",\n            case_i.auth_token_file_content ? case_i.auth_token_file_content : \"<UNSET>\");\n\n        /* This unsets previous env vars */\n        ASSERT_SUCCESS(s_aws_ecs_tester_init(allocator));\n",
                    "rendered": {
                      "text": "            case_i.relative_uri ? case_i.relative_uri : \"<UNSET>\",\n            case_i.full_uri ? case_i.full_uri : \"<UNSET>\",\n            case_i.auth_token ? case_i.auth_token : \"<UNSET>\",\n            case_i.auth_token_file_content ? case_i.auth_token_file_content : \"<UNSET>\");\n\n        /* This unsets previous env vars */\n        ASSERT_SUCCESS(s_aws_ecs_tester_init(allocator));\n",
                      "markdown": "`            case_i.relative_uri ? case_i.relative_uri : \"<UNSET>\",\n            case_i.full_uri ? case_i.full_uri : \"<UNSET>\",\n            case_i.auth_token ? case_i.auth_token : \"<UNSET>\",\n            case_i.auth_token_file_content ? case_i.auth_token_file_content : \"<UNSET>\");\n\n        /* This unsets previous env vars */\n        ASSERT_SUCCESS(s_aws_ecs_tester_init(allocator));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 913,
                  "startColumn": 39,
                  "endLine": 913,
                  "endColumn": 49,
                  "snippet": {
                    "text": "            case_idx,\n            case_i.relative_uri ? case_i.relative_uri : \"<UNSET>\",\n            case_i.full_uri ? case_i.full_uri : \"<UNSET>\",\n            case_i.auth_token ? case_i.auth_token : \"<UNSET>\",\n            case_i.auth_token_file_content ? case_i.auth_token_file_content : \"<UNSET>\");\n\n        /* This unsets previous env vars */\n",
                    "rendered": {
                      "text": "            case_idx,\n            case_i.relative_uri ? case_i.relative_uri : \"<UNSET>\",\n            case_i.full_uri ? case_i.full_uri : \"<UNSET>\",\n            case_i.auth_token ? case_i.auth_token : \"<UNSET>\",\n            case_i.auth_token_file_content ? case_i.auth_token_file_content : \"<UNSET>\");\n\n        /* This unsets previous env vars */\n",
                      "markdown": "`            case_idx,\n            case_i.relative_uri ? case_i.relative_uri : \"<UNSET>\",\n            case_i.full_uri ? case_i.full_uri : \"<UNSET>\",\n            case_i.auth_token ? case_i.auth_token : \"<UNSET>\",\n            case_i.auth_token_file_content ? case_i.auth_token_file_content : \"<UNSET>\");\n\n        /* This unsets previous env vars */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 913,
                  "startColumn": 19,
                  "endLine": 913,
                  "endColumn": 29,
                  "snippet": {
                    "text": "            case_idx,\n            case_i.relative_uri ? case_i.relative_uri : \"<UNSET>\",\n            case_i.full_uri ? case_i.full_uri : \"<UNSET>\",\n            case_i.auth_token ? case_i.auth_token : \"<UNSET>\",\n            case_i.auth_token_file_content ? case_i.auth_token_file_content : \"<UNSET>\");\n\n        /* This unsets previous env vars */\n",
                    "rendered": {
                      "text": "            case_idx,\n            case_i.relative_uri ? case_i.relative_uri : \"<UNSET>\",\n            case_i.full_uri ? case_i.full_uri : \"<UNSET>\",\n            case_i.auth_token ? case_i.auth_token : \"<UNSET>\",\n            case_i.auth_token_file_content ? case_i.auth_token_file_content : \"<UNSET>\");\n\n        /* This unsets previous env vars */\n",
                      "markdown": "`            case_idx,\n            case_i.relative_uri ? case_i.relative_uri : \"<UNSET>\",\n            case_i.full_uri ? case_i.full_uri : \"<UNSET>\",\n            case_i.auth_token ? case_i.auth_token : \"<UNSET>\",\n            case_i.auth_token_file_content ? case_i.auth_token_file_content : \"<UNSET>\");\n\n        /* This unsets previous env vars */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 909,
                  "startColumn": 53,
                  "endLine": 909,
                  "endColumn": 63,
                  "snippet": {
                    "text": "        struct test_case case_i = test_cases[case_idx];\n        printf(\n            \"CASE[%zu]: AWS_CONTAINER_CREDENTIALS_RELATIVE_URI=%s AWS_CONTAINER_CREDENTIALS_FULL_URI=%s\\n, \"\n            \"AWS_CONTAINER_AUTHORIZATION_TOKEN=%s\\n, auth_token_file_content=%s\\n\",\n            case_idx,\n            case_i.relative_uri ? case_i.relative_uri : \"<UNSET>\",\n            case_i.full_uri ? case_i.full_uri : \"<UNSET>\",\n",
                    "rendered": {
                      "text": "        struct test_case case_i = test_cases[case_idx];\n        printf(\n            \"CASE[%zu]: AWS_CONTAINER_CREDENTIALS_RELATIVE_URI=%s AWS_CONTAINER_CREDENTIALS_FULL_URI=%s\\n, \"\n            \"AWS_CONTAINER_AUTHORIZATION_TOKEN=%s\\n, auth_token_file_content=%s\\n\",\n            case_idx,\n            case_i.relative_uri ? case_i.relative_uri : \"<UNSET>\",\n            case_i.full_uri ? case_i.full_uri : \"<UNSET>\",\n",
                      "markdown": "`        struct test_case case_i = test_cases[case_idx];\n        printf(\n            \"CASE[%zu]: AWS_CONTAINER_CREDENTIALS_RELATIVE_URI=%s AWS_CONTAINER_CREDENTIALS_FULL_URI=%s\\n, \"\n            \"AWS_CONTAINER_AUTHORIZATION_TOKEN=%s\\n, auth_token_file_content=%s\\n\",\n            case_idx,\n            case_i.relative_uri ? case_i.relative_uri : \"<UNSET>\",\n            case_i.full_uri ? case_i.full_uri : \"<UNSET>\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 876,
                  "startColumn": 22,
                  "endLine": 876,
                  "endColumn": 32,
                  "snippet": {
                    "text": "            .expected_uri = \"http://127.0.0.1:8080/credentials\",\n            .auth_token = \"BadToken\",\n            .auth_token_file_content = \"testToken\",\n            .expected_auth_token = \"testToken\",\n        },\n        /* IPv4 loopback address */\n        {\n",
                    "rendered": {
                      "text": "            .expected_uri = \"http://127.0.0.1:8080/credentials\",\n            .auth_token = \"BadToken\",\n            .auth_token_file_content = \"testToken\",\n            .expected_auth_token = \"testToken\",\n        },\n        /* IPv4 loopback address */\n        {\n",
                      "markdown": "`            .expected_uri = \"http://127.0.0.1:8080/credentials\",\n            .auth_token = \"BadToken\",\n            .auth_token_file_content = \"testToken\",\n            .expected_auth_token = \"testToken\",\n        },\n        /* IPv4 loopback address */\n        {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 875,
                  "startColumn": 13,
                  "endLine": 875,
                  "endColumn": 23,
                  "snippet": {
                    "text": "            .full_uri = \"http://127.0.0.1:8080/credentials\",\n            .expected_uri = \"http://127.0.0.1:8080/credentials\",\n            .auth_token = \"BadToken\",\n            .auth_token_file_content = \"testToken\",\n            .expected_auth_token = \"testToken\",\n        },\n        /* IPv4 loopback address */\n",
                    "rendered": {
                      "text": "            .full_uri = \"http://127.0.0.1:8080/credentials\",\n            .expected_uri = \"http://127.0.0.1:8080/credentials\",\n            .auth_token = \"BadToken\",\n            .auth_token_file_content = \"testToken\",\n            .expected_auth_token = \"testToken\",\n        },\n        /* IPv4 loopback address */\n",
                      "markdown": "`            .full_uri = \"http://127.0.0.1:8080/credentials\",\n            .expected_uri = \"http://127.0.0.1:8080/credentials\",\n            .auth_token = \"BadToken\",\n            .auth_token_file_content = \"testToken\",\n            .expected_auth_token = \"testToken\",\n        },\n        /* IPv4 loopback address */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 874,
                  "startColumn": 13,
                  "endLine": 874,
                  "endColumn": 23,
                  "snippet": {
                    "text": "        {\n            .full_uri = \"http://127.0.0.1:8080/credentials\",\n            .expected_uri = \"http://127.0.0.1:8080/credentials\",\n            .auth_token = \"BadToken\",\n            .auth_token_file_content = \"testToken\",\n            .expected_auth_token = \"testToken\",\n        },\n",
                    "rendered": {
                      "text": "        {\n            .full_uri = \"http://127.0.0.1:8080/credentials\",\n            .expected_uri = \"http://127.0.0.1:8080/credentials\",\n            .auth_token = \"BadToken\",\n            .auth_token_file_content = \"testToken\",\n            .expected_auth_token = \"testToken\",\n        },\n",
                      "markdown": "`        {\n            .full_uri = \"http://127.0.0.1:8080/credentials\",\n            .expected_uri = \"http://127.0.0.1:8080/credentials\",\n            .auth_token = \"BadToken\",\n            .auth_token_file_content = \"testToken\",\n            .expected_auth_token = \"testToken\",\n        },\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 870,
                  "startColumn": 11,
                  "endLine": 870,
                  "endColumn": 21,
                  "snippet": {
                    "text": "            .auth_token_file_content = \"testToken\",\n            .expected_auth_token = \"testToken\",\n        },\n        /* auth_token_file_path is preferred */\n        {\n            .full_uri = \"http://127.0.0.1:8080/credentials\",\n            .expected_uri = \"http://127.0.0.1:8080/credentials\",\n",
                    "rendered": {
                      "text": "            .auth_token_file_content = \"testToken\",\n            .expected_auth_token = \"testToken\",\n        },\n        /* auth_token_file_path is preferred */\n        {\n            .full_uri = \"http://127.0.0.1:8080/credentials\",\n            .expected_uri = \"http://127.0.0.1:8080/credentials\",\n",
                      "markdown": "`            .auth_token_file_content = \"testToken\",\n            .expected_auth_token = \"testToken\",\n        },\n        /* auth_token_file_path is preferred */\n        {\n            .full_uri = \"http://127.0.0.1:8080/credentials\",\n            .expected_uri = \"http://127.0.0.1:8080/credentials\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 868,
                  "startColumn": 22,
                  "endLine": 868,
                  "endColumn": 32,
                  "snippet": {
                    "text": "            .full_uri = \"http://127.0.0.1:8080/credentials\",\n            .expected_uri = \"http://127.0.0.1:8080/credentials\",\n            .auth_token_file_content = \"testToken\",\n            .expected_auth_token = \"testToken\",\n        },\n        /* auth_token_file_path is preferred */\n        {\n",
                    "rendered": {
                      "text": "            .full_uri = \"http://127.0.0.1:8080/credentials\",\n            .expected_uri = \"http://127.0.0.1:8080/credentials\",\n            .auth_token_file_content = \"testToken\",\n            .expected_auth_token = \"testToken\",\n        },\n        /* auth_token_file_path is preferred */\n        {\n",
                      "markdown": "`            .full_uri = \"http://127.0.0.1:8080/credentials\",\n            .expected_uri = \"http://127.0.0.1:8080/credentials\",\n            .auth_token_file_content = \"testToken\",\n            .expected_auth_token = \"testToken\",\n        },\n        /* auth_token_file_path is preferred */\n        {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 867,
                  "startColumn": 13,
                  "endLine": 867,
                  "endColumn": 23,
                  "snippet": {
                    "text": "        {\n            .full_uri = \"http://127.0.0.1:8080/credentials\",\n            .expected_uri = \"http://127.0.0.1:8080/credentials\",\n            .auth_token_file_content = \"testToken\",\n            .expected_auth_token = \"testToken\",\n        },\n        /* auth_token_file_path is preferred */\n",
                    "rendered": {
                      "text": "        {\n            .full_uri = \"http://127.0.0.1:8080/credentials\",\n            .expected_uri = \"http://127.0.0.1:8080/credentials\",\n            .auth_token_file_content = \"testToken\",\n            .expected_auth_token = \"testToken\",\n        },\n        /* auth_token_file_path is preferred */\n",
                      "markdown": "`        {\n            .full_uri = \"http://127.0.0.1:8080/credentials\",\n            .expected_uri = \"http://127.0.0.1:8080/credentials\",\n            .auth_token_file_content = \"testToken\",\n            .expected_auth_token = \"testToken\",\n        },\n        /* auth_token_file_path is preferred */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 863,
                  "startColumn": 11,
                  "endLine": 863,
                  "endColumn": 21,
                  "snippet": {
                    "text": "            .auth_token = \"testToken\",\n            .expected_auth_token = \"testToken\",\n        },\n        /* auth_token_file_path is respected */\n        {\n            .full_uri = \"http://127.0.0.1:8080/credentials\",\n            .expected_uri = \"http://127.0.0.1:8080/credentials\",\n",
                    "rendered": {
                      "text": "            .auth_token = \"testToken\",\n            .expected_auth_token = \"testToken\",\n        },\n        /* auth_token_file_path is respected */\n        {\n            .full_uri = \"http://127.0.0.1:8080/credentials\",\n            .expected_uri = \"http://127.0.0.1:8080/credentials\",\n",
                      "markdown": "`            .auth_token = \"testToken\",\n            .expected_auth_token = \"testToken\",\n        },\n        /* auth_token_file_path is respected */\n        {\n            .full_uri = \"http://127.0.0.1:8080/credentials\",\n            .expected_uri = \"http://127.0.0.1:8080/credentials\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 861,
                  "startColumn": 22,
                  "endLine": 861,
                  "endColumn": 32,
                  "snippet": {
                    "text": "            .full_uri = \"http://127.0.0.1:8080/credentials\",\n            .expected_uri = \"http://127.0.0.1:8080/credentials\",\n            .auth_token = \"testToken\",\n            .expected_auth_token = \"testToken\",\n        },\n        /* auth_token_file_path is respected */\n        {\n",
                    "rendered": {
                      "text": "            .full_uri = \"http://127.0.0.1:8080/credentials\",\n            .expected_uri = \"http://127.0.0.1:8080/credentials\",\n            .auth_token = \"testToken\",\n            .expected_auth_token = \"testToken\",\n        },\n        /* auth_token_file_path is respected */\n        {\n",
                      "markdown": "`            .full_uri = \"http://127.0.0.1:8080/credentials\",\n            .expected_uri = \"http://127.0.0.1:8080/credentials\",\n            .auth_token = \"testToken\",\n            .expected_auth_token = \"testToken\",\n        },\n        /* auth_token_file_path is respected */\n        {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 860,
                  "startColumn": 13,
                  "endLine": 860,
                  "endColumn": 23,
                  "snippet": {
                    "text": "        {\n            .full_uri = \"http://127.0.0.1:8080/credentials\",\n            .expected_uri = \"http://127.0.0.1:8080/credentials\",\n            .auth_token = \"testToken\",\n            .expected_auth_token = \"testToken\",\n        },\n        /* auth_token_file_path is respected */\n",
                    "rendered": {
                      "text": "        {\n            .full_uri = \"http://127.0.0.1:8080/credentials\",\n            .expected_uri = \"http://127.0.0.1:8080/credentials\",\n            .auth_token = \"testToken\",\n            .expected_auth_token = \"testToken\",\n        },\n        /* auth_token_file_path is respected */\n",
                      "markdown": "`        {\n            .full_uri = \"http://127.0.0.1:8080/credentials\",\n            .expected_uri = \"http://127.0.0.1:8080/credentials\",\n            .auth_token = \"testToken\",\n            .expected_auth_token = \"testToken\",\n        },\n        /* auth_token_file_path is respected */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 856,
                  "startColumn": 11,
                  "endLine": 856,
                  "endColumn": 21,
                  "snippet": {
                    "text": "            .auth_token = \"testToken\",\n            .expected_auth_token = \"testToken\",\n        },\n        /* auth_token is respected */\n        {\n            .full_uri = \"http://127.0.0.1:8080/credentials\",\n            .expected_uri = \"http://127.0.0.1:8080/credentials\",\n",
                    "rendered": {
                      "text": "            .auth_token = \"testToken\",\n            .expected_auth_token = \"testToken\",\n        },\n        /* auth_token is respected */\n        {\n            .full_uri = \"http://127.0.0.1:8080/credentials\",\n            .expected_uri = \"http://127.0.0.1:8080/credentials\",\n",
                      "markdown": "`            .auth_token = \"testToken\",\n            .expected_auth_token = \"testToken\",\n        },\n        /* auth_token is respected */\n        {\n            .full_uri = \"http://127.0.0.1:8080/credentials\",\n            .expected_uri = \"http://127.0.0.1:8080/credentials\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 854,
                  "startColumn": 22,
                  "endLine": 854,
                  "endColumn": 32,
                  "snippet": {
                    "text": "            .full_uri = \"http://127.0.0.1:8080/credentials\",\n            .expected_uri = \"http://127.0.0.1:8080/credentials\",\n            .auth_token = \"testToken\",\n            .expected_auth_token = \"testToken\",\n        },\n        /* auth_token is respected */\n        {\n",
                    "rendered": {
                      "text": "            .full_uri = \"http://127.0.0.1:8080/credentials\",\n            .expected_uri = \"http://127.0.0.1:8080/credentials\",\n            .auth_token = \"testToken\",\n            .expected_auth_token = \"testToken\",\n        },\n        /* auth_token is respected */\n        {\n",
                      "markdown": "`            .full_uri = \"http://127.0.0.1:8080/credentials\",\n            .expected_uri = \"http://127.0.0.1:8080/credentials\",\n            .auth_token = \"testToken\",\n            .expected_auth_token = \"testToken\",\n        },\n        /* auth_token is respected */\n        {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 853,
                  "startColumn": 13,
                  "endLine": 853,
                  "endColumn": 23,
                  "snippet": {
                    "text": "        {\n            .full_uri = \"http://127.0.0.1:8080/credentials\",\n            .expected_uri = \"http://127.0.0.1:8080/credentials\",\n            .auth_token = \"testToken\",\n            .expected_auth_token = \"testToken\",\n        },\n        /* auth_token is respected */\n",
                    "rendered": {
                      "text": "        {\n            .full_uri = \"http://127.0.0.1:8080/credentials\",\n            .expected_uri = \"http://127.0.0.1:8080/credentials\",\n            .auth_token = \"testToken\",\n            .expected_auth_token = \"testToken\",\n        },\n        /* auth_token is respected */\n",
                      "markdown": "`        {\n            .full_uri = \"http://127.0.0.1:8080/credentials\",\n            .expected_uri = \"http://127.0.0.1:8080/credentials\",\n            .auth_token = \"testToken\",\n            .expected_auth_token = \"testToken\",\n        },\n        /* auth_token is respected */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 816,
                  "startColumn": 29,
                  "endLine": 816,
                  "endColumn": 39,
                  "snippet": {
                    "text": "        const char *expected_uri;\n        const char *auth_token;\n        const char *auth_token_file_content;\n        const char *expected_auth_token;\n    } test_cases[] = {\n        /* simple full uri*/\n        {\n",
                    "rendered": {
                      "text": "        const char *expected_uri;\n        const char *auth_token;\n        const char *auth_token_file_content;\n        const char *expected_auth_token;\n    } test_cases[] = {\n        /* simple full uri*/\n        {\n",
                      "markdown": "`        const char *expected_uri;\n        const char *auth_token;\n        const char *auth_token_file_content;\n        const char *expected_auth_token;\n    } test_cases[] = {\n        /* simple full uri*/\n        {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 815,
                  "startColumn": 20,
                  "endLine": 815,
                  "endColumn": 30,
                  "snippet": {
                    "text": "        const char *full_uri;\n        const char *expected_uri;\n        const char *auth_token;\n        const char *auth_token_file_content;\n        const char *expected_auth_token;\n    } test_cases[] = {\n        /* simple full uri*/\n",
                    "rendered": {
                      "text": "        const char *full_uri;\n        const char *expected_uri;\n        const char *auth_token;\n        const char *auth_token_file_content;\n        const char *expected_auth_token;\n    } test_cases[] = {\n        /* simple full uri*/\n",
                      "markdown": "`        const char *full_uri;\n        const char *expected_uri;\n        const char *auth_token;\n        const char *auth_token_file_content;\n        const char *expected_auth_token;\n    } test_cases[] = {\n        /* simple full uri*/\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 814,
                  "startColumn": 20,
                  "endLine": 814,
                  "endColumn": 30,
                  "snippet": {
                    "text": "        const char *relative_uri;\n        const char *full_uri;\n        const char *expected_uri;\n        const char *auth_token;\n        const char *auth_token_file_content;\n        const char *expected_auth_token;\n    } test_cases[] = {\n",
                    "rendered": {
                      "text": "        const char *relative_uri;\n        const char *full_uri;\n        const char *expected_uri;\n        const char *auth_token;\n        const char *auth_token_file_content;\n        const char *expected_auth_token;\n    } test_cases[] = {\n",
                      "markdown": "`        const char *relative_uri;\n        const char *full_uri;\n        const char *expected_uri;\n        const char *auth_token;\n        const char *auth_token_file_content;\n        const char *expected_auth_token;\n    } test_cases[] = {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 802,
                  "startColumn": 27,
                  "endLine": 802,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    aws_string_destroy(auth_token);\n    aws_string_destroy(auth_token2);\n    aws_string_destroy(token_file_path);\n    aws_string_destroy(bad_auth_token);\n    return 0;\n}\nAWS_TEST_CASE(credentials_provider_ecs_basic_success_token_file, s_credentials_provider_ecs_basic_success_token_file);\n",
                    "rendered": {
                      "text": "    aws_string_destroy(auth_token);\n    aws_string_destroy(auth_token2);\n    aws_string_destroy(token_file_path);\n    aws_string_destroy(bad_auth_token);\n    return 0;\n}\nAWS_TEST_CASE(credentials_provider_ecs_basic_success_token_file, s_credentials_provider_ecs_basic_success_token_file);\n",
                      "markdown": "`    aws_string_destroy(auth_token);\n    aws_string_destroy(auth_token2);\n    aws_string_destroy(token_file_path);\n    aws_string_destroy(bad_auth_token);\n    return 0;\n}\nAWS_TEST_CASE(credentials_provider_ecs_basic_success_token_file, s_credentials_provider_ecs_basic_success_token_file);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 800,
                  "startColumn": 23,
                  "endLine": 800,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    s_aws_ecs_tester_cleanup();\n    aws_file_delete(token_file_path);\n    aws_string_destroy(auth_token);\n    aws_string_destroy(auth_token2);\n    aws_string_destroy(token_file_path);\n    aws_string_destroy(bad_auth_token);\n    return 0;\n",
                    "rendered": {
                      "text": "    s_aws_ecs_tester_cleanup();\n    aws_file_delete(token_file_path);\n    aws_string_destroy(auth_token);\n    aws_string_destroy(auth_token2);\n    aws_string_destroy(token_file_path);\n    aws_string_destroy(bad_auth_token);\n    return 0;\n",
                      "markdown": "`    s_aws_ecs_tester_cleanup();\n    aws_file_delete(token_file_path);\n    aws_string_destroy(auth_token);\n    aws_string_destroy(auth_token2);\n    aws_string_destroy(token_file_path);\n    aws_string_destroy(bad_auth_token);\n    return 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 799,
                  "startColumn": 23,
                  "endLine": 799,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n    s_aws_ecs_tester_cleanup();\n    aws_file_delete(token_file_path);\n    aws_string_destroy(auth_token);\n    aws_string_destroy(auth_token2);\n    aws_string_destroy(token_file_path);\n    aws_string_destroy(bad_auth_token);\n",
                    "rendered": {
                      "text": "\n    s_aws_ecs_tester_cleanup();\n    aws_file_delete(token_file_path);\n    aws_string_destroy(auth_token);\n    aws_string_destroy(auth_token2);\n    aws_string_destroy(token_file_path);\n    aws_string_destroy(bad_auth_token);\n",
                      "markdown": "`\n    s_aws_ecs_tester_cleanup();\n    aws_file_delete(token_file_path);\n    aws_string_destroy(auth_token);\n    aws_string_destroy(auth_token2);\n    aws_string_destroy(token_file_path);\n    aws_string_destroy(bad_auth_token);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 786,
                  "startColumn": 25,
                  "endLine": 786,
                  "endColumn": 35,
                  "snippet": {
                    "text": "    aws_mutex_lock(&s_tester.lock);\n    ASSERT_SUCCESS(s_check_ecs_tester_request_uri_and_authorization(\n        \"https://www.xxx123321testmocknonexsitingawsservice.com:443/path/to/resource/?a=b&c=d\",\n        aws_string_c_str(auth_token2)));\n\n    aws_mutex_unlock(&s_tester.lock);\n\n",
                    "rendered": {
                      "text": "    aws_mutex_lock(&s_tester.lock);\n    ASSERT_SUCCESS(s_check_ecs_tester_request_uri_and_authorization(\n        \"https://www.xxx123321testmocknonexsitingawsservice.com:443/path/to/resource/?a=b&c=d\",\n        aws_string_c_str(auth_token2)));\n\n    aws_mutex_unlock(&s_tester.lock);\n\n",
                      "markdown": "`    aws_mutex_lock(&s_tester.lock);\n    ASSERT_SUCCESS(s_check_ecs_tester_request_uri_and_authorization(\n        \"https://www.xxx123321testmocknonexsitingawsservice.com:443/path/to/resource/?a=b&c=d\",\n        aws_string_c_str(auth_token2)));\n\n    aws_mutex_unlock(&s_tester.lock);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 777,
                  "startColumn": 57,
                  "endLine": 777,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\n    /* update the file with updated token */\n    struct aws_string *auth_token2 = aws_string_new_from_c_str(allocator, \"test-token2-4321-qwer\");\n    ASSERT_TRUE(aws_create_profile_file(token_file_path, auth_token2) == AWS_OP_SUCCESS);\n\n    aws_credentials_provider_get_credentials(provider, s_get_credentials_callback, NULL);\n\n",
                    "rendered": {
                      "text": "\n    /* update the file with updated token */\n    struct aws_string *auth_token2 = aws_string_new_from_c_str(allocator, \"test-token2-4321-qwer\");\n    ASSERT_TRUE(aws_create_profile_file(token_file_path, auth_token2) == AWS_OP_SUCCESS);\n\n    aws_credentials_provider_get_credentials(provider, s_get_credentials_callback, NULL);\n\n",
                      "markdown": "`\n    /* update the file with updated token */\n    struct aws_string *auth_token2 = aws_string_new_from_c_str(allocator, \"test-token2-4321-qwer\");\n    ASSERT_TRUE(aws_create_profile_file(token_file_path, auth_token2) == AWS_OP_SUCCESS);\n\n    aws_credentials_provider_get_credentials(provider, s_get_credentials_callback, NULL);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 776,
                  "startColumn": 23,
                  "endLine": 776,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    aws_mutex_unlock(&s_tester.lock);\n\n    /* update the file with updated token */\n    struct aws_string *auth_token2 = aws_string_new_from_c_str(allocator, \"test-token2-4321-qwer\");\n    ASSERT_TRUE(aws_create_profile_file(token_file_path, auth_token2) == AWS_OP_SUCCESS);\n\n    aws_credentials_provider_get_credentials(provider, s_get_credentials_callback, NULL);\n",
                    "rendered": {
                      "text": "    aws_mutex_unlock(&s_tester.lock);\n\n    /* update the file with updated token */\n    struct aws_string *auth_token2 = aws_string_new_from_c_str(allocator, \"test-token2-4321-qwer\");\n    ASSERT_TRUE(aws_create_profile_file(token_file_path, auth_token2) == AWS_OP_SUCCESS);\n\n    aws_credentials_provider_get_credentials(provider, s_get_credentials_callback, NULL);\n",
                      "markdown": "`    aws_mutex_unlock(&s_tester.lock);\n\n    /* update the file with updated token */\n    struct aws_string *auth_token2 = aws_string_new_from_c_str(allocator, \"test-token2-4321-qwer\");\n    ASSERT_TRUE(aws_create_profile_file(token_file_path, auth_token2) == AWS_OP_SUCCESS);\n\n    aws_credentials_provider_get_credentials(provider, s_get_credentials_callback, NULL);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 767,
                  "startColumn": 25,
                  "endLine": 767,
                  "endColumn": 35,
                  "snippet": {
                    "text": "    aws_mutex_lock(&s_tester.lock);\n    ASSERT_SUCCESS(s_check_ecs_tester_request_uri_and_authorization(\n        \"https://www.xxx123321testmocknonexsitingawsservice.com:443/path/to/resource/?a=b&c=d\",\n        aws_string_c_str(auth_token)));\n\n    aws_string_destroy(s_tester.request_path_and_query);\n    aws_string_destroy(s_tester.request_authorization_header);\n",
                    "rendered": {
                      "text": "    aws_mutex_lock(&s_tester.lock);\n    ASSERT_SUCCESS(s_check_ecs_tester_request_uri_and_authorization(\n        \"https://www.xxx123321testmocknonexsitingawsservice.com:443/path/to/resource/?a=b&c=d\",\n        aws_string_c_str(auth_token)));\n\n    aws_string_destroy(s_tester.request_path_and_query);\n    aws_string_destroy(s_tester.request_authorization_header);\n",
                      "markdown": "`    aws_mutex_lock(&s_tester.lock);\n    ASSERT_SUCCESS(s_check_ecs_tester_request_uri_and_authorization(\n        \"https://www.xxx123321testmocknonexsitingawsservice.com:443/path/to/resource/?a=b&c=d\",\n        aws_string_c_str(auth_token)));\n\n    aws_string_destroy(s_tester.request_path_and_query);\n    aws_string_destroy(s_tester.request_authorization_header);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 754,
                  "startColumn": 9,
                  "endLine": 754,
                  "endColumn": 19,
                  "snippet": {
                    "text": "        .host = aws_byte_cursor_from_c_str(\"www.xxx123321testmocknonexsitingawsservice.com\"),\n        .path_and_query = aws_byte_cursor_from_c_str(\"/path/to/resource/?a=b&c=d\"),\n        .auth_token = aws_byte_cursor_from_string(auth_token),\n        .auth_token_file_path = aws_byte_cursor_from_string(token_file_path),\n        .tls_ctx = s_tester.tls_ctx,\n    };\n\n",
                    "rendered": {
                      "text": "        .host = aws_byte_cursor_from_c_str(\"www.xxx123321testmocknonexsitingawsservice.com\"),\n        .path_and_query = aws_byte_cursor_from_c_str(\"/path/to/resource/?a=b&c=d\"),\n        .auth_token = aws_byte_cursor_from_string(auth_token),\n        .auth_token_file_path = aws_byte_cursor_from_string(token_file_path),\n        .tls_ctx = s_tester.tls_ctx,\n    };\n\n",
                      "markdown": "`        .host = aws_byte_cursor_from_c_str(\"www.xxx123321testmocknonexsitingawsservice.com\"),\n        .path_and_query = aws_byte_cursor_from_c_str(\"/path/to/resource/?a=b&c=d\"),\n        .auth_token = aws_byte_cursor_from_string(auth_token),\n        .auth_token_file_path = aws_byte_cursor_from_string(token_file_path),\n        .tls_ctx = s_tester.tls_ctx,\n    };\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 753,
                  "startColumn": 50,
                  "endLine": 753,
                  "endColumn": 60,
                  "snippet": {
                    "text": "            },\n        .host = aws_byte_cursor_from_c_str(\"www.xxx123321testmocknonexsitingawsservice.com\"),\n        .path_and_query = aws_byte_cursor_from_c_str(\"/path/to/resource/?a=b&c=d\"),\n        .auth_token = aws_byte_cursor_from_string(auth_token),\n        .auth_token_file_path = aws_byte_cursor_from_string(token_file_path),\n        .tls_ctx = s_tester.tls_ctx,\n    };\n",
                    "rendered": {
                      "text": "            },\n        .host = aws_byte_cursor_from_c_str(\"www.xxx123321testmocknonexsitingawsservice.com\"),\n        .path_and_query = aws_byte_cursor_from_c_str(\"/path/to/resource/?a=b&c=d\"),\n        .auth_token = aws_byte_cursor_from_string(auth_token),\n        .auth_token_file_path = aws_byte_cursor_from_string(token_file_path),\n        .tls_ctx = s_tester.tls_ctx,\n    };\n",
                      "markdown": "`            },\n        .host = aws_byte_cursor_from_c_str(\"www.xxx123321testmocknonexsitingawsservice.com\"),\n        .path_and_query = aws_byte_cursor_from_c_str(\"/path/to/resource/?a=b&c=d\"),\n        .auth_token = aws_byte_cursor_from_string(auth_token),\n        .auth_token_file_path = aws_byte_cursor_from_string(token_file_path),\n        .tls_ctx = s_tester.tls_ctx,\n    };\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 753,
                  "startColumn": 9,
                  "endLine": 753,
                  "endColumn": 19,
                  "snippet": {
                    "text": "            },\n        .host = aws_byte_cursor_from_c_str(\"www.xxx123321testmocknonexsitingawsservice.com\"),\n        .path_and_query = aws_byte_cursor_from_c_str(\"/path/to/resource/?a=b&c=d\"),\n        .auth_token = aws_byte_cursor_from_string(auth_token),\n        .auth_token_file_path = aws_byte_cursor_from_string(token_file_path),\n        .tls_ctx = s_tester.tls_ctx,\n    };\n",
                    "rendered": {
                      "text": "            },\n        .host = aws_byte_cursor_from_c_str(\"www.xxx123321testmocknonexsitingawsservice.com\"),\n        .path_and_query = aws_byte_cursor_from_c_str(\"/path/to/resource/?a=b&c=d\"),\n        .auth_token = aws_byte_cursor_from_string(auth_token),\n        .auth_token_file_path = aws_byte_cursor_from_string(token_file_path),\n        .tls_ctx = s_tester.tls_ctx,\n    };\n",
                      "markdown": "`            },\n        .host = aws_byte_cursor_from_c_str(\"www.xxx123321testmocknonexsitingawsservice.com\"),\n        .path_and_query = aws_byte_cursor_from_c_str(\"/path/to/resource/?a=b&c=d\"),\n        .auth_token = aws_byte_cursor_from_string(auth_token),\n        .auth_token_file_path = aws_byte_cursor_from_string(token_file_path),\n        .tls_ctx = s_tester.tls_ctx,\n    };\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 739,
                  "startColumn": 27,
                  "endLine": 739,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    ASSERT_TRUE(aws_create_profile_file(token_file_path, auth_token) == AWS_OP_SUCCESS);\n\n    /* test that static auth token is not preferred over file token */\n    struct aws_string *bad_auth_token = aws_string_new_from_c_str(allocator, \"badtoken\");\n\n    struct aws_byte_cursor good_response_cursor = aws_byte_cursor_from_string(s_good_response);\n    aws_array_list_push_back(&s_tester.response_data_callbacks, &good_response_cursor);\n",
                    "rendered": {
                      "text": "    ASSERT_TRUE(aws_create_profile_file(token_file_path, auth_token) == AWS_OP_SUCCESS);\n\n    /* test that static auth token is not preferred over file token */\n    struct aws_string *bad_auth_token = aws_string_new_from_c_str(allocator, \"badtoken\");\n\n    struct aws_byte_cursor good_response_cursor = aws_byte_cursor_from_string(s_good_response);\n    aws_array_list_push_back(&s_tester.response_data_callbacks, &good_response_cursor);\n",
                      "markdown": "`    ASSERT_TRUE(aws_create_profile_file(token_file_path, auth_token) == AWS_OP_SUCCESS);\n\n    /* test that static auth token is not preferred over file token */\n    struct aws_string *bad_auth_token = aws_string_new_from_c_str(allocator, \"badtoken\");\n\n    struct aws_byte_cursor good_response_cursor = aws_byte_cursor_from_string(s_good_response);\n    aws_array_list_push_back(&s_tester.response_data_callbacks, &good_response_cursor);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 736,
                  "startColumn": 57,
                  "endLine": 736,
                  "endColumn": 67,
                  "snippet": {
                    "text": "    struct aws_string *auth_token = aws_string_new_from_c_str(allocator, \"test-token-1234-abcd\");\n    struct aws_string *token_file_path = aws_create_process_unique_file_name(allocator);\n    ASSERT_NOT_NULL(token_file_path);\n    ASSERT_TRUE(aws_create_profile_file(token_file_path, auth_token) == AWS_OP_SUCCESS);\n\n    /* test that static auth token is not preferred over file token */\n    struct aws_string *bad_auth_token = aws_string_new_from_c_str(allocator, \"badtoken\");\n",
                    "rendered": {
                      "text": "    struct aws_string *auth_token = aws_string_new_from_c_str(allocator, \"test-token-1234-abcd\");\n    struct aws_string *token_file_path = aws_create_process_unique_file_name(allocator);\n    ASSERT_NOT_NULL(token_file_path);\n    ASSERT_TRUE(aws_create_profile_file(token_file_path, auth_token) == AWS_OP_SUCCESS);\n\n    /* test that static auth token is not preferred over file token */\n    struct aws_string *bad_auth_token = aws_string_new_from_c_str(allocator, \"badtoken\");\n",
                      "markdown": "`    struct aws_string *auth_token = aws_string_new_from_c_str(allocator, \"test-token-1234-abcd\");\n    struct aws_string *token_file_path = aws_create_process_unique_file_name(allocator);\n    ASSERT_NOT_NULL(token_file_path);\n    ASSERT_TRUE(aws_create_profile_file(token_file_path, auth_token) == AWS_OP_SUCCESS);\n\n    /* test that static auth token is not preferred over file token */\n    struct aws_string *bad_auth_token = aws_string_new_from_c_str(allocator, \"badtoken\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 733,
                  "startColumn": 23,
                  "endLine": 733,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n    s_aws_ecs_tester_init(allocator);\n\n    struct aws_string *auth_token = aws_string_new_from_c_str(allocator, \"test-token-1234-abcd\");\n    struct aws_string *token_file_path = aws_create_process_unique_file_name(allocator);\n    ASSERT_NOT_NULL(token_file_path);\n    ASSERT_TRUE(aws_create_profile_file(token_file_path, auth_token) == AWS_OP_SUCCESS);\n",
                    "rendered": {
                      "text": "\n    s_aws_ecs_tester_init(allocator);\n\n    struct aws_string *auth_token = aws_string_new_from_c_str(allocator, \"test-token-1234-abcd\");\n    struct aws_string *token_file_path = aws_create_process_unique_file_name(allocator);\n    ASSERT_NOT_NULL(token_file_path);\n    ASSERT_TRUE(aws_create_profile_file(token_file_path, auth_token) == AWS_OP_SUCCESS);\n",
                      "markdown": "`\n    s_aws_ecs_tester_init(allocator);\n\n    struct aws_string *auth_token = aws_string_new_from_c_str(allocator, \"test-token-1234-abcd\");\n    struct aws_string *token_file_path = aws_create_process_unique_file_name(allocator);\n    ASSERT_NOT_NULL(token_file_path);\n    ASSERT_TRUE(aws_create_profile_file(token_file_path, auth_token) == AWS_OP_SUCCESS);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 711,
                  "startColumn": 9,
                  "endLine": 711,
                  "endColumn": 19,
                  "snippet": {
                    "text": "            },\n        .host = aws_byte_cursor_from_c_str(\"www.xxx123321testmocknonexsitingawsservice.com\"),\n        .path_and_query = aws_byte_cursor_from_c_str(\"/path/to/resource/?a=b&c=d\"),\n        .auth_token = aws_byte_cursor_from_c_str(\"test-token-1234-abcd\"),\n        .tls_ctx = s_tester.tls_ctx,\n    };\n\n",
                    "rendered": {
                      "text": "            },\n        .host = aws_byte_cursor_from_c_str(\"www.xxx123321testmocknonexsitingawsservice.com\"),\n        .path_and_query = aws_byte_cursor_from_c_str(\"/path/to/resource/?a=b&c=d\"),\n        .auth_token = aws_byte_cursor_from_c_str(\"test-token-1234-abcd\"),\n        .tls_ctx = s_tester.tls_ctx,\n    };\n\n",
                      "markdown": "`            },\n        .host = aws_byte_cursor_from_c_str(\"www.xxx123321testmocknonexsitingawsservice.com\"),\n        .path_and_query = aws_byte_cursor_from_c_str(\"/path/to/resource/?a=b&c=d\"),\n        .auth_token = aws_byte_cursor_from_c_str(\"test-token-1234-abcd\"),\n        .tls_ctx = s_tester.tls_ctx,\n    };\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 688,
                  "startColumn": 23,
                  "endLine": 688,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    aws_string_destroy(full_uri_str);\n    aws_string_destroy(auth_token_str);\n    aws_string_destroy(auth_token_file_contents_str);\n    aws_string_destroy(auth_token_file_path);\n\n    return AWS_OP_SUCCESS;\n}\n",
                    "rendered": {
                      "text": "    aws_string_destroy(full_uri_str);\n    aws_string_destroy(auth_token_str);\n    aws_string_destroy(auth_token_file_contents_str);\n    aws_string_destroy(auth_token_file_path);\n\n    return AWS_OP_SUCCESS;\n}\n",
                      "markdown": "`    aws_string_destroy(full_uri_str);\n    aws_string_destroy(auth_token_str);\n    aws_string_destroy(auth_token_file_contents_str);\n    aws_string_destroy(auth_token_file_path);\n\n    return AWS_OP_SUCCESS;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 687,
                  "startColumn": 23,
                  "endLine": 687,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    aws_string_destroy(relative_uri_str);\n    aws_string_destroy(full_uri_str);\n    aws_string_destroy(auth_token_str);\n    aws_string_destroy(auth_token_file_contents_str);\n    aws_string_destroy(auth_token_file_path);\n\n    return AWS_OP_SUCCESS;\n",
                    "rendered": {
                      "text": "    aws_string_destroy(relative_uri_str);\n    aws_string_destroy(full_uri_str);\n    aws_string_destroy(auth_token_str);\n    aws_string_destroy(auth_token_file_contents_str);\n    aws_string_destroy(auth_token_file_path);\n\n    return AWS_OP_SUCCESS;\n",
                      "markdown": "`    aws_string_destroy(relative_uri_str);\n    aws_string_destroy(full_uri_str);\n    aws_string_destroy(auth_token_str);\n    aws_string_destroy(auth_token_file_contents_str);\n    aws_string_destroy(auth_token_file_path);\n\n    return AWS_OP_SUCCESS;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 686,
                  "startColumn": 23,
                  "endLine": 686,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    }\n    aws_string_destroy(relative_uri_str);\n    aws_string_destroy(full_uri_str);\n    aws_string_destroy(auth_token_str);\n    aws_string_destroy(auth_token_file_contents_str);\n    aws_string_destroy(auth_token_file_path);\n\n",
                    "rendered": {
                      "text": "    }\n    aws_string_destroy(relative_uri_str);\n    aws_string_destroy(full_uri_str);\n    aws_string_destroy(auth_token_str);\n    aws_string_destroy(auth_token_file_contents_str);\n    aws_string_destroy(auth_token_file_path);\n\n",
                      "markdown": "`    }\n    aws_string_destroy(relative_uri_str);\n    aws_string_destroy(full_uri_str);\n    aws_string_destroy(auth_token_str);\n    aws_string_destroy(auth_token_file_contents_str);\n    aws_string_destroy(auth_token_file_path);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 682,
                  "startColumn": 24,
                  "endLine": 682,
                  "endColumn": 34,
                  "snippet": {
                    "text": "    /* Because we mock the http connection manager, we never get a callback back from it */\n    aws_mem_release(provider->allocator, provider);\n    if (auth_token_file_path != NULL) {\n        aws_file_delete(auth_token_file_path);\n    }\n    aws_string_destroy(relative_uri_str);\n    aws_string_destroy(full_uri_str);\n",
                    "rendered": {
                      "text": "    /* Because we mock the http connection manager, we never get a callback back from it */\n    aws_mem_release(provider->allocator, provider);\n    if (auth_token_file_path != NULL) {\n        aws_file_delete(auth_token_file_path);\n    }\n    aws_string_destroy(relative_uri_str);\n    aws_string_destroy(full_uri_str);\n",
                      "markdown": "`    /* Because we mock the http connection manager, we never get a callback back from it */\n    aws_mem_release(provider->allocator, provider);\n    if (auth_token_file_path != NULL) {\n        aws_file_delete(auth_token_file_path);\n    }\n    aws_string_destroy(relative_uri_str);\n    aws_string_destroy(full_uri_str);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 681,
                  "startColumn": 8,
                  "endLine": 681,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n    /* Because we mock the http connection manager, we never get a callback back from it */\n    aws_mem_release(provider->allocator, provider);\n    if (auth_token_file_path != NULL) {\n        aws_file_delete(auth_token_file_path);\n    }\n    aws_string_destroy(relative_uri_str);\n",
                    "rendered": {
                      "text": "\n    /* Because we mock the http connection manager, we never get a callback back from it */\n    aws_mem_release(provider->allocator, provider);\n    if (auth_token_file_path != NULL) {\n        aws_file_delete(auth_token_file_path);\n    }\n    aws_string_destroy(relative_uri_str);\n",
                      "markdown": "`\n    /* Because we mock the http connection manager, we never get a callback back from it */\n    aws_mem_release(provider->allocator, provider);\n    if (auth_token_file_path != NULL) {\n        aws_file_delete(auth_token_file_path);\n    }\n    aws_string_destroy(relative_uri_str);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 649,
                  "startColumn": 77,
                  "endLine": 649,
                  "endColumn": 87,
                  "snippet": {
                    "text": "        auth_token_file_path = aws_create_process_unique_file_name(allocator);\n        ASSERT_NOT_NULL(auth_token_file_path);\n        ASSERT_TRUE(aws_create_profile_file(auth_token_file_path, auth_token_file_contents_str) == AWS_OP_SUCCESS);\n        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_token_file, auth_token_file_path));\n    }\n\n    struct aws_credentials_provider *provider = aws_credentials_provider_new_ecs_from_environment(allocator, options);\n",
                    "rendered": {
                      "text": "        auth_token_file_path = aws_create_process_unique_file_name(allocator);\n        ASSERT_NOT_NULL(auth_token_file_path);\n        ASSERT_TRUE(aws_create_profile_file(auth_token_file_path, auth_token_file_contents_str) == AWS_OP_SUCCESS);\n        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_token_file, auth_token_file_path));\n    }\n\n    struct aws_credentials_provider *provider = aws_credentials_provider_new_ecs_from_environment(allocator, options);\n",
                      "markdown": "`        auth_token_file_path = aws_create_process_unique_file_name(allocator);\n        ASSERT_NOT_NULL(auth_token_file_path);\n        ASSERT_TRUE(aws_create_profile_file(auth_token_file_path, auth_token_file_contents_str) == AWS_OP_SUCCESS);\n        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_token_file, auth_token_file_path));\n    }\n\n    struct aws_credentials_provider *provider = aws_credentials_provider_new_ecs_from_environment(allocator, options);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 648,
                  "startColumn": 66,
                  "endLine": 648,
                  "endColumn": 76,
                  "snippet": {
                    "text": "\n        auth_token_file_path = aws_create_process_unique_file_name(allocator);\n        ASSERT_NOT_NULL(auth_token_file_path);\n        ASSERT_TRUE(aws_create_profile_file(auth_token_file_path, auth_token_file_contents_str) == AWS_OP_SUCCESS);\n        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_token_file, auth_token_file_path));\n    }\n\n",
                    "rendered": {
                      "text": "\n        auth_token_file_path = aws_create_process_unique_file_name(allocator);\n        ASSERT_NOT_NULL(auth_token_file_path);\n        ASSERT_TRUE(aws_create_profile_file(auth_token_file_path, auth_token_file_contents_str) == AWS_OP_SUCCESS);\n        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_token_file, auth_token_file_path));\n    }\n\n",
                      "markdown": "`\n        auth_token_file_path = aws_create_process_unique_file_name(allocator);\n        ASSERT_NOT_NULL(auth_token_file_path);\n        ASSERT_TRUE(aws_create_profile_file(auth_token_file_path, auth_token_file_contents_str) == AWS_OP_SUCCESS);\n        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_token_file, auth_token_file_path));\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 648,
                  "startColumn": 44,
                  "endLine": 648,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\n        auth_token_file_path = aws_create_process_unique_file_name(allocator);\n        ASSERT_NOT_NULL(auth_token_file_path);\n        ASSERT_TRUE(aws_create_profile_file(auth_token_file_path, auth_token_file_contents_str) == AWS_OP_SUCCESS);\n        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_token_file, auth_token_file_path));\n    }\n\n",
                    "rendered": {
                      "text": "\n        auth_token_file_path = aws_create_process_unique_file_name(allocator);\n        ASSERT_NOT_NULL(auth_token_file_path);\n        ASSERT_TRUE(aws_create_profile_file(auth_token_file_path, auth_token_file_contents_str) == AWS_OP_SUCCESS);\n        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_token_file, auth_token_file_path));\n    }\n\n",
                      "markdown": "`\n        auth_token_file_path = aws_create_process_unique_file_name(allocator);\n        ASSERT_NOT_NULL(auth_token_file_path);\n        ASSERT_TRUE(aws_create_profile_file(auth_token_file_path, auth_token_file_contents_str) == AWS_OP_SUCCESS);\n        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_token_file, auth_token_file_path));\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 647,
                  "startColumn": 24,
                  "endLine": 647,
                  "endColumn": 34,
                  "snippet": {
                    "text": "        auth_token_file_contents_str = aws_string_new_from_c_str(allocator, auth_token_file_content);\n\n        auth_token_file_path = aws_create_process_unique_file_name(allocator);\n        ASSERT_NOT_NULL(auth_token_file_path);\n        ASSERT_TRUE(aws_create_profile_file(auth_token_file_path, auth_token_file_contents_str) == AWS_OP_SUCCESS);\n        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_token_file, auth_token_file_path));\n    }\n",
                    "rendered": {
                      "text": "        auth_token_file_contents_str = aws_string_new_from_c_str(allocator, auth_token_file_content);\n\n        auth_token_file_path = aws_create_process_unique_file_name(allocator);\n        ASSERT_NOT_NULL(auth_token_file_path);\n        ASSERT_TRUE(aws_create_profile_file(auth_token_file_path, auth_token_file_contents_str) == AWS_OP_SUCCESS);\n        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_token_file, auth_token_file_path));\n    }\n",
                      "markdown": "`        auth_token_file_contents_str = aws_string_new_from_c_str(allocator, auth_token_file_content);\n\n        auth_token_file_path = aws_create_process_unique_file_name(allocator);\n        ASSERT_NOT_NULL(auth_token_file_path);\n        ASSERT_TRUE(aws_create_profile_file(auth_token_file_path, auth_token_file_contents_str) == AWS_OP_SUCCESS);\n        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_token_file, auth_token_file_path));\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 646,
                  "startColumn": 8,
                  "endLine": 646,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    if (auth_token_file_content != NULL) {\n        auth_token_file_contents_str = aws_string_new_from_c_str(allocator, auth_token_file_content);\n\n        auth_token_file_path = aws_create_process_unique_file_name(allocator);\n        ASSERT_NOT_NULL(auth_token_file_path);\n        ASSERT_TRUE(aws_create_profile_file(auth_token_file_path, auth_token_file_contents_str) == AWS_OP_SUCCESS);\n        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_token_file, auth_token_file_path));\n",
                    "rendered": {
                      "text": "    if (auth_token_file_content != NULL) {\n        auth_token_file_contents_str = aws_string_new_from_c_str(allocator, auth_token_file_content);\n\n        auth_token_file_path = aws_create_process_unique_file_name(allocator);\n        ASSERT_NOT_NULL(auth_token_file_path);\n        ASSERT_TRUE(aws_create_profile_file(auth_token_file_path, auth_token_file_contents_str) == AWS_OP_SUCCESS);\n        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_token_file, auth_token_file_path));\n",
                      "markdown": "`    if (auth_token_file_content != NULL) {\n        auth_token_file_contents_str = aws_string_new_from_c_str(allocator, auth_token_file_content);\n\n        auth_token_file_path = aws_create_process_unique_file_name(allocator);\n        ASSERT_NOT_NULL(auth_token_file_path);\n        ASSERT_TRUE(aws_create_profile_file(auth_token_file_path, auth_token_file_contents_str) == AWS_OP_SUCCESS);\n        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_token_file, auth_token_file_path));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 644,
                  "startColumn": 76,
                  "endLine": 644,
                  "endColumn": 86,
                  "snippet": {
                    "text": "    struct aws_string *auth_token_file_contents_str = NULL;\n    struct aws_string *auth_token_file_path = NULL;\n    if (auth_token_file_content != NULL) {\n        auth_token_file_contents_str = aws_string_new_from_c_str(allocator, auth_token_file_content);\n\n        auth_token_file_path = aws_create_process_unique_file_name(allocator);\n        ASSERT_NOT_NULL(auth_token_file_path);\n",
                    "rendered": {
                      "text": "    struct aws_string *auth_token_file_contents_str = NULL;\n    struct aws_string *auth_token_file_path = NULL;\n    if (auth_token_file_content != NULL) {\n        auth_token_file_contents_str = aws_string_new_from_c_str(allocator, auth_token_file_content);\n\n        auth_token_file_path = aws_create_process_unique_file_name(allocator);\n        ASSERT_NOT_NULL(auth_token_file_path);\n",
                      "markdown": "`    struct aws_string *auth_token_file_contents_str = NULL;\n    struct aws_string *auth_token_file_path = NULL;\n    if (auth_token_file_content != NULL) {\n        auth_token_file_contents_str = aws_string_new_from_c_str(allocator, auth_token_file_content);\n\n        auth_token_file_path = aws_create_process_unique_file_name(allocator);\n        ASSERT_NOT_NULL(auth_token_file_path);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 644,
                  "startColumn": 8,
                  "endLine": 644,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    struct aws_string *auth_token_file_contents_str = NULL;\n    struct aws_string *auth_token_file_path = NULL;\n    if (auth_token_file_content != NULL) {\n        auth_token_file_contents_str = aws_string_new_from_c_str(allocator, auth_token_file_content);\n\n        auth_token_file_path = aws_create_process_unique_file_name(allocator);\n        ASSERT_NOT_NULL(auth_token_file_path);\n",
                    "rendered": {
                      "text": "    struct aws_string *auth_token_file_contents_str = NULL;\n    struct aws_string *auth_token_file_path = NULL;\n    if (auth_token_file_content != NULL) {\n        auth_token_file_contents_str = aws_string_new_from_c_str(allocator, auth_token_file_content);\n\n        auth_token_file_path = aws_create_process_unique_file_name(allocator);\n        ASSERT_NOT_NULL(auth_token_file_path);\n",
                      "markdown": "`    struct aws_string *auth_token_file_contents_str = NULL;\n    struct aws_string *auth_token_file_path = NULL;\n    if (auth_token_file_content != NULL) {\n        auth_token_file_contents_str = aws_string_new_from_c_str(allocator, auth_token_file_content);\n\n        auth_token_file_path = aws_create_process_unique_file_name(allocator);\n        ASSERT_NOT_NULL(auth_token_file_path);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 643,
                  "startColumn": 8,
                  "endLine": 643,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    }\n    struct aws_string *auth_token_file_contents_str = NULL;\n    struct aws_string *auth_token_file_path = NULL;\n    if (auth_token_file_content != NULL) {\n        auth_token_file_contents_str = aws_string_new_from_c_str(allocator, auth_token_file_content);\n\n        auth_token_file_path = aws_create_process_unique_file_name(allocator);\n",
                    "rendered": {
                      "text": "    }\n    struct aws_string *auth_token_file_contents_str = NULL;\n    struct aws_string *auth_token_file_path = NULL;\n    if (auth_token_file_content != NULL) {\n        auth_token_file_contents_str = aws_string_new_from_c_str(allocator, auth_token_file_content);\n\n        auth_token_file_path = aws_create_process_unique_file_name(allocator);\n",
                      "markdown": "`    }\n    struct aws_string *auth_token_file_contents_str = NULL;\n    struct aws_string *auth_token_file_path = NULL;\n    if (auth_token_file_content != NULL) {\n        auth_token_file_contents_str = aws_string_new_from_c_str(allocator, auth_token_file_content);\n\n        auth_token_file_path = aws_create_process_unique_file_name(allocator);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 642,
                  "startColumn": 23,
                  "endLine": 642,
                  "endColumn": 33,
                  "snippet": {
                    "text": "        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_token, auth_token_str));\n    }\n    struct aws_string *auth_token_file_contents_str = NULL;\n    struct aws_string *auth_token_file_path = NULL;\n    if (auth_token_file_content != NULL) {\n        auth_token_file_contents_str = aws_string_new_from_c_str(allocator, auth_token_file_content);\n\n",
                    "rendered": {
                      "text": "        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_token, auth_token_str));\n    }\n    struct aws_string *auth_token_file_contents_str = NULL;\n    struct aws_string *auth_token_file_path = NULL;\n    if (auth_token_file_content != NULL) {\n        auth_token_file_contents_str = aws_string_new_from_c_str(allocator, auth_token_file_content);\n\n",
                      "markdown": "`        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_token, auth_token_str));\n    }\n    struct aws_string *auth_token_file_contents_str = NULL;\n    struct aws_string *auth_token_file_path = NULL;\n    if (auth_token_file_content != NULL) {\n        auth_token_file_contents_str = aws_string_new_from_c_str(allocator, auth_token_file_content);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 641,
                  "startColumn": 23,
                  "endLine": 641,
                  "endColumn": 33,
                  "snippet": {
                    "text": "        auth_token_str = aws_string_new_from_c_str(allocator, auth_token);\n        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_token, auth_token_str));\n    }\n    struct aws_string *auth_token_file_contents_str = NULL;\n    struct aws_string *auth_token_file_path = NULL;\n    if (auth_token_file_content != NULL) {\n        auth_token_file_contents_str = aws_string_new_from_c_str(allocator, auth_token_file_content);\n",
                    "rendered": {
                      "text": "        auth_token_str = aws_string_new_from_c_str(allocator, auth_token);\n        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_token, auth_token_str));\n    }\n    struct aws_string *auth_token_file_contents_str = NULL;\n    struct aws_string *auth_token_file_path = NULL;\n    if (auth_token_file_content != NULL) {\n        auth_token_file_contents_str = aws_string_new_from_c_str(allocator, auth_token_file_content);\n",
                      "markdown": "`        auth_token_str = aws_string_new_from_c_str(allocator, auth_token);\n        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_token, auth_token_str));\n    }\n    struct aws_string *auth_token_file_contents_str = NULL;\n    struct aws_string *auth_token_file_path = NULL;\n    if (auth_token_file_content != NULL) {\n        auth_token_file_contents_str = aws_string_new_from_c_str(allocator, auth_token_file_content);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 639,
                  "startColumn": 72,
                  "endLine": 639,
                  "endColumn": 82,
                  "snippet": {
                    "text": "    struct aws_string *auth_token_str = NULL;\n    if (auth_token != NULL) {\n        auth_token_str = aws_string_new_from_c_str(allocator, auth_token);\n        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_token, auth_token_str));\n    }\n    struct aws_string *auth_token_file_contents_str = NULL;\n    struct aws_string *auth_token_file_path = NULL;\n",
                    "rendered": {
                      "text": "    struct aws_string *auth_token_str = NULL;\n    if (auth_token != NULL) {\n        auth_token_str = aws_string_new_from_c_str(allocator, auth_token);\n        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_token, auth_token_str));\n    }\n    struct aws_string *auth_token_file_contents_str = NULL;\n    struct aws_string *auth_token_file_path = NULL;\n",
                      "markdown": "`    struct aws_string *auth_token_str = NULL;\n    if (auth_token != NULL) {\n        auth_token_str = aws_string_new_from_c_str(allocator, auth_token);\n        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_token, auth_token_str));\n    }\n    struct aws_string *auth_token_file_contents_str = NULL;\n    struct aws_string *auth_token_file_path = NULL;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 638,
                  "startColumn": 62,
                  "endLine": 638,
                  "endColumn": 72,
                  "snippet": {
                    "text": "    }\n    struct aws_string *auth_token_str = NULL;\n    if (auth_token != NULL) {\n        auth_token_str = aws_string_new_from_c_str(allocator, auth_token);\n        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_token, auth_token_str));\n    }\n    struct aws_string *auth_token_file_contents_str = NULL;\n",
                    "rendered": {
                      "text": "    }\n    struct aws_string *auth_token_str = NULL;\n    if (auth_token != NULL) {\n        auth_token_str = aws_string_new_from_c_str(allocator, auth_token);\n        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_token, auth_token_str));\n    }\n    struct aws_string *auth_token_file_contents_str = NULL;\n",
                      "markdown": "`    }\n    struct aws_string *auth_token_str = NULL;\n    if (auth_token != NULL) {\n        auth_token_str = aws_string_new_from_c_str(allocator, auth_token);\n        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_token, auth_token_str));\n    }\n    struct aws_string *auth_token_file_contents_str = NULL;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 638,
                  "startColumn": 8,
                  "endLine": 638,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    }\n    struct aws_string *auth_token_str = NULL;\n    if (auth_token != NULL) {\n        auth_token_str = aws_string_new_from_c_str(allocator, auth_token);\n        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_token, auth_token_str));\n    }\n    struct aws_string *auth_token_file_contents_str = NULL;\n",
                    "rendered": {
                      "text": "    }\n    struct aws_string *auth_token_str = NULL;\n    if (auth_token != NULL) {\n        auth_token_str = aws_string_new_from_c_str(allocator, auth_token);\n        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_token, auth_token_str));\n    }\n    struct aws_string *auth_token_file_contents_str = NULL;\n",
                      "markdown": "`    }\n    struct aws_string *auth_token_str = NULL;\n    if (auth_token != NULL) {\n        auth_token_str = aws_string_new_from_c_str(allocator, auth_token);\n        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_token, auth_token_str));\n    }\n    struct aws_string *auth_token_file_contents_str = NULL;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 637,
                  "startColumn": 8,
                  "endLine": 637,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_full_uri, full_uri_str));\n    }\n    struct aws_string *auth_token_str = NULL;\n    if (auth_token != NULL) {\n        auth_token_str = aws_string_new_from_c_str(allocator, auth_token);\n        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_token, auth_token_str));\n    }\n",
                    "rendered": {
                      "text": "        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_full_uri, full_uri_str));\n    }\n    struct aws_string *auth_token_str = NULL;\n    if (auth_token != NULL) {\n        auth_token_str = aws_string_new_from_c_str(allocator, auth_token);\n        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_token, auth_token_str));\n    }\n",
                      "markdown": "`        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_full_uri, full_uri_str));\n    }\n    struct aws_string *auth_token_str = NULL;\n    if (auth_token != NULL) {\n        auth_token_str = aws_string_new_from_c_str(allocator, auth_token);\n        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_token, auth_token_str));\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 636,
                  "startColumn": 23,
                  "endLine": 636,
                  "endColumn": 33,
                  "snippet": {
                    "text": "        full_uri_str = aws_string_new_from_c_str(allocator, full_uri);\n        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_full_uri, full_uri_str));\n    }\n    struct aws_string *auth_token_str = NULL;\n    if (auth_token != NULL) {\n        auth_token_str = aws_string_new_from_c_str(allocator, auth_token);\n        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_token, auth_token_str));\n",
                    "rendered": {
                      "text": "        full_uri_str = aws_string_new_from_c_str(allocator, full_uri);\n        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_full_uri, full_uri_str));\n    }\n    struct aws_string *auth_token_str = NULL;\n    if (auth_token != NULL) {\n        auth_token_str = aws_string_new_from_c_str(allocator, auth_token);\n        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_token, auth_token_str));\n",
                      "markdown": "`        full_uri_str = aws_string_new_from_c_str(allocator, full_uri);\n        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_full_uri, full_uri_str));\n    }\n    struct aws_string *auth_token_str = NULL;\n    if (auth_token != NULL) {\n        auth_token_str = aws_string_new_from_c_str(allocator, auth_token);\n        ASSERT_SUCCESS(aws_set_environment_value(s_ecs_creds_env_token, auth_token_str));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 622,
                  "startColumn": 16,
                  "endLine": 622,
                  "endColumn": 26,
                  "snippet": {
                    "text": "    const char *relative_uri,\n    const char *full_uri,\n    const char *auth_token,\n    const char *auth_token_file_content,\n    const char *expected_uri,\n    const char *expected_token) {\n\n",
                    "rendered": {
                      "text": "    const char *relative_uri,\n    const char *full_uri,\n    const char *auth_token,\n    const char *auth_token_file_content,\n    const char *expected_uri,\n    const char *expected_token) {\n\n",
                      "markdown": "`    const char *relative_uri,\n    const char *full_uri,\n    const char *auth_token,\n    const char *auth_token_file_content,\n    const char *expected_uri,\n    const char *expected_token) {\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 621,
                  "startColumn": 16,
                  "endLine": 621,
                  "endColumn": 26,
                  "snippet": {
                    "text": "    struct aws_credentials_provider_ecs_environment_options *options,\n    const char *relative_uri,\n    const char *full_uri,\n    const char *auth_token,\n    const char *auth_token_file_content,\n    const char *expected_uri,\n    const char *expected_token) {\n",
                    "rendered": {
                      "text": "    struct aws_credentials_provider_ecs_environment_options *options,\n    const char *relative_uri,\n    const char *full_uri,\n    const char *auth_token,\n    const char *auth_token_file_content,\n    const char *expected_uri,\n    const char *expected_token) {\n",
                      "markdown": "`    struct aws_credentials_provider_ecs_environment_options *options,\n    const char *relative_uri,\n    const char *full_uri,\n    const char *auth_token,\n    const char *auth_token_file_content,\n    const char *expected_uri,\n    const char *expected_token) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 517,
                  "startColumn": 9,
                  "endLine": 517,
                  "endColumn": 19,
                  "snippet": {
                    "text": "            },\n        .host = aws_byte_cursor_from_c_str(\"www.google.com\"),\n        .path_and_query = aws_byte_cursor_from_c_str(\"/path/to/resource/?a=b&c=d\"),\n        .auth_token = aws_byte_cursor_from_c_str(\"test-token-1234-abcd\"),\n    };\n\n    struct aws_credentials_provider *provider = aws_credentials_provider_new_ecs(allocator, &options);\n",
                    "rendered": {
                      "text": "            },\n        .host = aws_byte_cursor_from_c_str(\"www.google.com\"),\n        .path_and_query = aws_byte_cursor_from_c_str(\"/path/to/resource/?a=b&c=d\"),\n        .auth_token = aws_byte_cursor_from_c_str(\"test-token-1234-abcd\"),\n    };\n\n    struct aws_credentials_provider *provider = aws_credentials_provider_new_ecs(allocator, &options);\n",
                      "markdown": "`            },\n        .host = aws_byte_cursor_from_c_str(\"www.google.com\"),\n        .path_and_query = aws_byte_cursor_from_c_str(\"/path/to/resource/?a=b&c=d\"),\n        .auth_token = aws_byte_cursor_from_c_str(\"test-token-1234-abcd\"),\n    };\n\n    struct aws_credentials_provider *provider = aws_credentials_provider_new_ecs(allocator, &options);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 470,
                  "startColumn": 9,
                  "endLine": 470,
                  "endColumn": 19,
                  "snippet": {
                    "text": "            },\n        .host = aws_byte_cursor_from_c_str(\"www.xxx123321testmocknonexsitingawsservice.com\"),\n        .path_and_query = aws_byte_cursor_from_c_str(\"/path/to/resource/?a=b&c=d\"),\n        .auth_token = aws_byte_cursor_from_c_str(\"test-token-1234-abcd\"),\n        .tls_ctx = s_tester.tls_ctx,\n    };\n\n",
                    "rendered": {
                      "text": "            },\n        .host = aws_byte_cursor_from_c_str(\"www.xxx123321testmocknonexsitingawsservice.com\"),\n        .path_and_query = aws_byte_cursor_from_c_str(\"/path/to/resource/?a=b&c=d\"),\n        .auth_token = aws_byte_cursor_from_c_str(\"test-token-1234-abcd\"),\n        .tls_ctx = s_tester.tls_ctx,\n    };\n\n",
                      "markdown": "`            },\n        .host = aws_byte_cursor_from_c_str(\"www.xxx123321testmocknonexsitingawsservice.com\"),\n        .path_and_query = aws_byte_cursor_from_c_str(\"/path/to/resource/?a=b&c=d\"),\n        .auth_token = aws_byte_cursor_from_c_str(\"test-token-1234-abcd\"),\n        .tls_ctx = s_tester.tls_ctx,\n    };\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 419,
                  "startColumn": 9,
                  "endLine": 419,
                  "endColumn": 19,
                  "snippet": {
                    "text": "            },\n        .host = aws_byte_cursor_from_c_str(\"www.xxx123321testmocknonexsitingawsservice.com\"),\n        .path_and_query = aws_byte_cursor_from_c_str(\"/path/to/resource/?a=b&c=d\"),\n        .auth_token = aws_byte_cursor_from_c_str(\"test-token-1234-abcd\"),\n        .tls_ctx = s_tester.tls_ctx,\n    };\n\n",
                    "rendered": {
                      "text": "            },\n        .host = aws_byte_cursor_from_c_str(\"www.xxx123321testmocknonexsitingawsservice.com\"),\n        .path_and_query = aws_byte_cursor_from_c_str(\"/path/to/resource/?a=b&c=d\"),\n        .auth_token = aws_byte_cursor_from_c_str(\"test-token-1234-abcd\"),\n        .tls_ctx = s_tester.tls_ctx,\n    };\n\n",
                      "markdown": "`            },\n        .host = aws_byte_cursor_from_c_str(\"www.xxx123321testmocknonexsitingawsservice.com\"),\n        .path_and_query = aws_byte_cursor_from_c_str(\"/path/to/resource/?a=b&c=d\"),\n        .auth_token = aws_byte_cursor_from_c_str(\"test-token-1234-abcd\"),\n        .tls_ctx = s_tester.tls_ctx,\n    };\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 373,
                  "startColumn": 9,
                  "endLine": 373,
                  "endColumn": 19,
                  "snippet": {
                    "text": "            },\n        .host = aws_byte_cursor_from_c_str(\"www.xxx123321testmocknonexsitingawsservice.com\"),\n        .path_and_query = aws_byte_cursor_from_c_str(\"/path/to/resource/?a=b&c=d\"),\n        .auth_token = aws_byte_cursor_from_c_str(\"test-token-1234-abcd\"),\n        .tls_ctx = s_tester.tls_ctx,\n    };\n\n",
                    "rendered": {
                      "text": "            },\n        .host = aws_byte_cursor_from_c_str(\"www.xxx123321testmocknonexsitingawsservice.com\"),\n        .path_and_query = aws_byte_cursor_from_c_str(\"/path/to/resource/?a=b&c=d\"),\n        .auth_token = aws_byte_cursor_from_c_str(\"test-token-1234-abcd\"),\n        .tls_ctx = s_tester.tls_ctx,\n    };\n\n",
                      "markdown": "`            },\n        .host = aws_byte_cursor_from_c_str(\"www.xxx123321testmocknonexsitingawsservice.com\"),\n        .path_and_query = aws_byte_cursor_from_c_str(\"/path/to/resource/?a=b&c=d\"),\n        .auth_token = aws_byte_cursor_from_c_str(\"test-token-1234-abcd\"),\n        .tls_ctx = s_tester.tls_ctx,\n    };\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_ecs_tests.c"
                },
                "region": {
                  "startLine": 339,
                  "startColumn": 9,
                  "endLine": 339,
                  "endColumn": 19,
                  "snippet": {
                    "text": "            },\n        .host = aws_byte_cursor_from_c_str(\"www.xxx123321testmocknonexsitingawsservice.com\"),\n        .path_and_query = aws_byte_cursor_from_c_str(\"/path/to/resource/?a=b&c=d\"),\n        .auth_token = aws_byte_cursor_from_c_str(\"test-token-1234-abcd\"),\n    };\n\n    struct aws_credentials_provider *provider = aws_credentials_provider_new_ecs(allocator, &options);\n",
                    "rendered": {
                      "text": "            },\n        .host = aws_byte_cursor_from_c_str(\"www.xxx123321testmocknonexsitingawsservice.com\"),\n        .path_and_query = aws_byte_cursor_from_c_str(\"/path/to/resource/?a=b&c=d\"),\n        .auth_token = aws_byte_cursor_from_c_str(\"test-token-1234-abcd\"),\n    };\n\n    struct aws_credentials_provider *provider = aws_credentials_provider_new_ecs(allocator, &options);\n",
                      "markdown": "`            },\n        .host = aws_byte_cursor_from_c_str(\"www.xxx123321testmocknonexsitingawsservice.com\"),\n        .path_and_query = aws_byte_cursor_from_c_str(\"/path/to/resource/?a=b&c=d\"),\n        .auth_token = aws_byte_cursor_from_c_str(\"test-token-1234-abcd\"),\n    };\n\n    struct aws_credentials_provider *provider = aws_credentials_provider_new_ecs(allocator, &options);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_sts_tests.c"
                },
                "region": {
                  "startLine": 2045,
                  "startColumn": 31,
                  "endLine": 2045,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n    struct aws_credentials_provider_static_options static_options = {\n        .access_key_id = s_access_key_cur,\n        .secret_access_key = s_secret_key_cur,\n        .session_token = s_session_token_cur,\n    };\n    struct aws_credentials_provider *static_provider = aws_credentials_provider_new_static(allocator, &static_options);\n",
                    "rendered": {
                      "text": "\n    struct aws_credentials_provider_static_options static_options = {\n        .access_key_id = s_access_key_cur,\n        .secret_access_key = s_secret_key_cur,\n        .session_token = s_session_token_cur,\n    };\n    struct aws_credentials_provider *static_provider = aws_credentials_provider_new_static(allocator, &static_options);\n",
                      "markdown": "`\n    struct aws_credentials_provider_static_options static_options = {\n        .access_key_id = s_access_key_cur,\n        .secret_access_key = s_secret_key_cur,\n        .session_token = s_session_token_cur,\n    };\n    struct aws_credentials_provider *static_provider = aws_credentials_provider_new_static(allocator, &static_options);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_sts_tests.c"
                },
                "region": {
                  "startLine": 1093,
                  "startColumn": 31,
                  "endLine": 1093,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n    struct aws_credentials_provider_static_options static_options = {\n        .access_key_id = s_access_key_cur,\n        .secret_access_key = s_secret_key_cur,\n        .session_token = s_session_token_cur,\n    };\n    struct aws_credentials_provider *static_provider = aws_credentials_provider_new_static(allocator, &static_options);\n",
                    "rendered": {
                      "text": "\n    struct aws_credentials_provider_static_options static_options = {\n        .access_key_id = s_access_key_cur,\n        .secret_access_key = s_secret_key_cur,\n        .session_token = s_session_token_cur,\n    };\n    struct aws_credentials_provider *static_provider = aws_credentials_provider_new_static(allocator, &static_options);\n",
                      "markdown": "`\n    struct aws_credentials_provider_static_options static_options = {\n        .access_key_id = s_access_key_cur,\n        .secret_access_key = s_secret_key_cur,\n        .session_token = s_session_token_cur,\n    };\n    struct aws_credentials_provider *static_provider = aws_credentials_provider_new_static(allocator, &static_options);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_sts_tests.c"
                },
                "region": {
                  "startLine": 1046,
                  "startColumn": 31,
                  "endLine": 1046,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n    struct aws_credentials_provider_static_options static_options = {\n        .access_key_id = s_access_key_cur,\n        .secret_access_key = s_secret_key_cur,\n        .session_token = s_session_token_cur,\n    };\n    struct aws_credentials_provider *static_provider = aws_credentials_provider_new_static(allocator, &static_options);\n",
                    "rendered": {
                      "text": "\n    struct aws_credentials_provider_static_options static_options = {\n        .access_key_id = s_access_key_cur,\n        .secret_access_key = s_secret_key_cur,\n        .session_token = s_session_token_cur,\n    };\n    struct aws_credentials_provider *static_provider = aws_credentials_provider_new_static(allocator, &static_options);\n",
                      "markdown": "`\n    struct aws_credentials_provider_static_options static_options = {\n        .access_key_id = s_access_key_cur,\n        .secret_access_key = s_secret_key_cur,\n        .session_token = s_session_token_cur,\n    };\n    struct aws_credentials_provider *static_provider = aws_credentials_provider_new_static(allocator, &static_options);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_sts_tests.c"
                },
                "region": {
                  "startLine": 970,
                  "startColumn": 31,
                  "endLine": 970,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n    struct aws_credentials_provider_static_options static_options = {\n        .access_key_id = s_access_key_cur,\n        .secret_access_key = s_secret_key_cur,\n        .session_token = s_session_token_cur,\n    };\n    struct aws_credentials_provider *static_provider = aws_credentials_provider_new_static(allocator, &static_options);\n",
                    "rendered": {
                      "text": "\n    struct aws_credentials_provider_static_options static_options = {\n        .access_key_id = s_access_key_cur,\n        .secret_access_key = s_secret_key_cur,\n        .session_token = s_session_token_cur,\n    };\n    struct aws_credentials_provider *static_provider = aws_credentials_provider_new_static(allocator, &static_options);\n",
                      "markdown": "`\n    struct aws_credentials_provider_static_options static_options = {\n        .access_key_id = s_access_key_cur,\n        .secret_access_key = s_secret_key_cur,\n        .session_token = s_session_token_cur,\n    };\n    struct aws_credentials_provider *static_provider = aws_credentials_provider_new_static(allocator, &static_options);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_sts_tests.c"
                },
                "region": {
                  "startLine": 880,
                  "startColumn": 31,
                  "endLine": 880,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n    struct aws_credentials_provider_static_options static_options = {\n        .access_key_id = s_access_key_cur,\n        .secret_access_key = s_secret_key_cur,\n        .session_token = s_session_token_cur,\n    };\n    struct aws_credentials_provider *static_provider = aws_credentials_provider_new_static(allocator, &static_options);\n",
                    "rendered": {
                      "text": "\n    struct aws_credentials_provider_static_options static_options = {\n        .access_key_id = s_access_key_cur,\n        .secret_access_key = s_secret_key_cur,\n        .session_token = s_session_token_cur,\n    };\n    struct aws_credentials_provider *static_provider = aws_credentials_provider_new_static(allocator, &static_options);\n",
                      "markdown": "`\n    struct aws_credentials_provider_static_options static_options = {\n        .access_key_id = s_access_key_cur,\n        .secret_access_key = s_secret_key_cur,\n        .session_token = s_session_token_cur,\n    };\n    struct aws_credentials_provider *static_provider = aws_credentials_provider_new_static(allocator, &static_options);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_sts_tests.c"
                },
                "region": {
                  "startLine": 797,
                  "startColumn": 31,
                  "endLine": 797,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n    struct aws_credentials_provider_static_options static_options = {\n        .access_key_id = s_access_key_cur,\n        .secret_access_key = s_secret_key_cur,\n        .session_token = s_session_token_cur,\n    };\n    struct aws_credentials_provider *static_provider = aws_credentials_provider_new_static(allocator, &static_options);\n",
                    "rendered": {
                      "text": "\n    struct aws_credentials_provider_static_options static_options = {\n        .access_key_id = s_access_key_cur,\n        .secret_access_key = s_secret_key_cur,\n        .session_token = s_session_token_cur,\n    };\n    struct aws_credentials_provider *static_provider = aws_credentials_provider_new_static(allocator, &static_options);\n",
                      "markdown": "`\n    struct aws_credentials_provider_static_options static_options = {\n        .access_key_id = s_access_key_cur,\n        .secret_access_key = s_secret_key_cur,\n        .session_token = s_session_token_cur,\n    };\n    struct aws_credentials_provider *static_provider = aws_credentials_provider_new_static(allocator, &static_options);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_sts_tests.c"
                },
                "region": {
                  "startLine": 710,
                  "startColumn": 31,
                  "endLine": 710,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n    struct aws_credentials_provider_static_options static_options = {\n        .access_key_id = s_access_key_cur,\n        .secret_access_key = s_secret_key_cur,\n        .session_token = s_session_token_cur,\n    };\n    struct aws_credentials_provider *static_provider = aws_credentials_provider_new_static(allocator, &static_options);\n",
                    "rendered": {
                      "text": "\n    struct aws_credentials_provider_static_options static_options = {\n        .access_key_id = s_access_key_cur,\n        .secret_access_key = s_secret_key_cur,\n        .session_token = s_session_token_cur,\n    };\n    struct aws_credentials_provider *static_provider = aws_credentials_provider_new_static(allocator, &static_options);\n",
                      "markdown": "`\n    struct aws_credentials_provider_static_options static_options = {\n        .access_key_id = s_access_key_cur,\n        .secret_access_key = s_secret_key_cur,\n        .session_token = s_session_token_cur,\n    };\n    struct aws_credentials_provider *static_provider = aws_credentials_provider_new_static(allocator, &static_options);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_sts_tests.c"
                },
                "region": {
                  "startLine": 617,
                  "startColumn": 31,
                  "endLine": 617,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n    struct aws_credentials_provider_static_options static_options = {\n        .access_key_id = s_access_key_cur,\n        .secret_access_key = s_secret_key_cur,\n        .session_token = s_session_token_cur,\n    };\n    struct aws_credentials_provider *static_provider = aws_credentials_provider_new_static(allocator, &static_options);\n",
                    "rendered": {
                      "text": "\n    struct aws_credentials_provider_static_options static_options = {\n        .access_key_id = s_access_key_cur,\n        .secret_access_key = s_secret_key_cur,\n        .session_token = s_session_token_cur,\n    };\n    struct aws_credentials_provider *static_provider = aws_credentials_provider_new_static(allocator, &static_options);\n",
                      "markdown": "`\n    struct aws_credentials_provider_static_options static_options = {\n        .access_key_id = s_access_key_cur,\n        .secret_access_key = s_secret_key_cur,\n        .session_token = s_session_token_cur,\n    };\n    struct aws_credentials_provider *static_provider = aws_credentials_provider_new_static(allocator, &static_options);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_sts_tests.c"
                },
                "region": {
                  "startLine": 555,
                  "startColumn": 31,
                  "endLine": 555,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n    struct aws_credentials_provider_static_options static_options = {\n        .access_key_id = s_access_key_cur,\n        .secret_access_key = s_secret_key_cur,\n        .session_token = s_session_token_cur,\n    };\n    struct aws_credentials_provider *static_provider = aws_credentials_provider_new_static(allocator, &static_options);\n",
                    "rendered": {
                      "text": "\n    struct aws_credentials_provider_static_options static_options = {\n        .access_key_id = s_access_key_cur,\n        .secret_access_key = s_secret_key_cur,\n        .session_token = s_session_token_cur,\n    };\n    struct aws_credentials_provider *static_provider = aws_credentials_provider_new_static(allocator, &static_options);\n",
                      "markdown": "`\n    struct aws_credentials_provider_static_options static_options = {\n        .access_key_id = s_access_key_cur,\n        .secret_access_key = s_secret_key_cur,\n        .session_token = s_session_token_cur,\n    };\n    struct aws_credentials_provider *static_provider = aws_credentials_provider_new_static(allocator, &static_options);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_sts_tests.c"
                },
                "region": {
                  "startLine": 468,
                  "startColumn": 31,
                  "endLine": 468,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n    struct aws_credentials_provider_static_options static_options = {\n        .access_key_id = s_access_key_cur,\n        .secret_access_key = s_secret_key_cur,\n        .session_token = s_session_token_cur,\n    };\n    struct aws_credentials_provider *static_provider = aws_credentials_provider_new_static(allocator, &static_options);\n",
                    "rendered": {
                      "text": "\n    struct aws_credentials_provider_static_options static_options = {\n        .access_key_id = s_access_key_cur,\n        .secret_access_key = s_secret_key_cur,\n        .session_token = s_session_token_cur,\n    };\n    struct aws_credentials_provider *static_provider = aws_credentials_provider_new_static(allocator, &static_options);\n",
                      "markdown": "`\n    struct aws_credentials_provider_static_options static_options = {\n        .access_key_id = s_access_key_cur,\n        .secret_access_key = s_secret_key_cur,\n        .session_token = s_session_token_cur,\n    };\n    struct aws_credentials_provider *static_provider = aws_credentials_provider_new_static(allocator, &static_options);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_sts_tests.c"
                },
                "region": {
                  "startLine": 449,
                  "startColumn": 62,
                  "endLine": 449,
                  "endColumn": 71,
                  "snippet": {
                    "text": "                                          \"&DurationSeconds=900\");\n\nAWS_STATIC_STRING_FROM_LITERAL(s_access_key_id_response, \"accessKeyIdResp\");\nAWS_STATIC_STRING_FROM_LITERAL(s_secret_access_key_response, \"secretKeyResp\");\nAWS_STATIC_STRING_FROM_LITERAL(s_session_token_response, \"sessionTokenResp\");\n\nstatic int s_verify_credentials(struct aws_credentials *credentials) {\n",
                    "rendered": {
                      "text": "                                          \"&DurationSeconds=900\");\n\nAWS_STATIC_STRING_FROM_LITERAL(s_access_key_id_response, \"accessKeyIdResp\");\nAWS_STATIC_STRING_FROM_LITERAL(s_secret_access_key_response, \"secretKeyResp\");\nAWS_STATIC_STRING_FROM_LITERAL(s_session_token_response, \"sessionTokenResp\");\n\nstatic int s_verify_credentials(struct aws_credentials *credentials) {\n",
                      "markdown": "`                                          \"&DurationSeconds=900\");\n\nAWS_STATIC_STRING_FROM_LITERAL(s_access_key_id_response, \"accessKeyIdResp\");\nAWS_STATIC_STRING_FROM_LITERAL(s_secret_access_key_response, \"secretKeyResp\");\nAWS_STATIC_STRING_FROM_LITERAL(s_session_token_response, \"sessionTokenResp\");\n\nstatic int s_verify_credentials(struct aws_credentials *credentials) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_sts_tests.c"
                },
                "region": {
                  "startLine": 426,
                  "startColumn": 73,
                  "endLine": 426,
                  "endColumn": 82,
                  "snippet": {
                    "text": "                                          \"         </fuzzMePlz>\\n\"\n                                          \"         <Credentials>\\n\"\n                                          \"             <AccessKeyId>accessKeyIdResp</AccessKeyId>\\n\"\n                                          \"             <SecretAccessKey>secretKeyResp</SecretAccessKey>\\n\"\n                                          \"             <SessionToken>sessionTokenResp</SessionToken>\\n\"\n                                          \"         </Credentials>\\n\"\n                                          \"         <AssumeRoleUser>\\n\"\n",
                    "rendered": {
                      "text": "                                          \"         </fuzzMePlz>\\n\"\n                                          \"         <Credentials>\\n\"\n                                          \"             <AccessKeyId>accessKeyIdResp</AccessKeyId>\\n\"\n                                          \"             <SecretAccessKey>secretKeyResp</SecretAccessKey>\\n\"\n                                          \"             <SessionToken>sessionTokenResp</SessionToken>\\n\"\n                                          \"         </Credentials>\\n\"\n                                          \"         <AssumeRoleUser>\\n\"\n",
                      "markdown": "`                                          \"         </fuzzMePlz>\\n\"\n                                          \"         <Credentials>\\n\"\n                                          \"             <AccessKeyId>accessKeyIdResp</AccessKeyId>\\n\"\n                                          \"             <SecretAccessKey>secretKeyResp</SecretAccessKey>\\n\"\n                                          \"             <SessionToken>sessionTokenResp</SessionToken>\\n\"\n                                          \"         </Credentials>\\n\"\n                                          \"         <AssumeRoleUser>\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_sts_tests.c"
                },
                "region": {
                  "startLine": 412,
                  "startColumn": 88,
                  "endLine": 412,
                  "endColumn": 97,
                  "snippet": {
                    "text": "}\n\nstatic struct aws_byte_cursor s_access_key_cur = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"accessKey12345\");\nstatic struct aws_byte_cursor s_secret_key_cur = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"secretKey12345\");\nstatic struct aws_byte_cursor s_session_token_cur = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"sessionToken123456789\");\nstatic struct aws_byte_cursor s_role_arn_cur =\n    AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"arn:aws:iam::67895:role/test_role\");\n",
                    "rendered": {
                      "text": "}\n\nstatic struct aws_byte_cursor s_access_key_cur = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"accessKey12345\");\nstatic struct aws_byte_cursor s_secret_key_cur = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"secretKey12345\");\nstatic struct aws_byte_cursor s_session_token_cur = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"sessionToken123456789\");\nstatic struct aws_byte_cursor s_role_arn_cur =\n    AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"arn:aws:iam::67895:role/test_role\");\n",
                      "markdown": "`}\n\nstatic struct aws_byte_cursor s_access_key_cur = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"accessKey12345\");\nstatic struct aws_byte_cursor s_secret_key_cur = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"secretKey12345\");\nstatic struct aws_byte_cursor s_session_token_cur = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"sessionToken123456789\");\nstatic struct aws_byte_cursor s_role_arn_cur =\n    AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"arn:aws:iam::67895:role/test_role\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_sts_tests.c"
                },
                "region": {
                  "startLine": 412,
                  "startColumn": 32,
                  "endLine": 412,
                  "endColumn": 42,
                  "snippet": {
                    "text": "}\n\nstatic struct aws_byte_cursor s_access_key_cur = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"accessKey12345\");\nstatic struct aws_byte_cursor s_secret_key_cur = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"secretKey12345\");\nstatic struct aws_byte_cursor s_session_token_cur = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"sessionToken123456789\");\nstatic struct aws_byte_cursor s_role_arn_cur =\n    AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"arn:aws:iam::67895:role/test_role\");\n",
                    "rendered": {
                      "text": "}\n\nstatic struct aws_byte_cursor s_access_key_cur = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"accessKey12345\");\nstatic struct aws_byte_cursor s_secret_key_cur = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"secretKey12345\");\nstatic struct aws_byte_cursor s_session_token_cur = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"sessionToken123456789\");\nstatic struct aws_byte_cursor s_role_arn_cur =\n    AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"arn:aws:iam::67895:role/test_role\");\n",
                      "markdown": "`}\n\nstatic struct aws_byte_cursor s_access_key_cur = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"accessKey12345\");\nstatic struct aws_byte_cursor s_secret_key_cur = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"secretKey12345\");\nstatic struct aws_byte_cursor s_session_token_cur = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"sessionToken123456789\");\nstatic struct aws_byte_cursor s_role_arn_cur =\n    AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"arn:aws:iam::67895:role/test_role\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/token_provider_sso_tests.c"
                },
                "region": {
                  "startLine": 269,
                  "startColumn": 33,
                  "endLine": 269,
                  "endColumn": 43,
                  "snippet": {
                    "text": "            .name = \"with profile sso_region and sso_start_url\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\n                \"[default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                \"access_key=fake_secret_key\\nsso_region=us-east-1\\nsso_start_url=url\\nsso_\"\n                \"session=dev\\n[sso-session dev]\\nsso_region=us-east-\"\n                \"1\\nsso_start_url=url\"),\n        },\n",
                    "rendered": {
                      "text": "            .name = \"with profile sso_region and sso_start_url\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\n                \"[default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                \"access_key=fake_secret_key\\nsso_region=us-east-1\\nsso_start_url=url\\nsso_\"\n                \"session=dev\\n[sso-session dev]\\nsso_region=us-east-\"\n                \"1\\nsso_start_url=url\"),\n        },\n",
                      "markdown": "`            .name = \"with profile sso_region and sso_start_url\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\n                \"[default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                \"access_key=fake_secret_key\\nsso_region=us-east-1\\nsso_start_url=url\\nsso_\"\n                \"session=dev\\n[sso-session dev]\\nsso_region=us-east-\"\n                \"1\\nsso_start_url=url\"),\n        },\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/token_provider_sso_tests.c"
                },
                "region": {
                  "startLine": 261,
                  "startColumn": 75,
                  "endLine": 261,
                  "endColumn": 85,
                  "snippet": {
                    "text": "        {\n            .name = \"with profile sso_start_url\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"[default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                                                          \"access_key=fake_secret_key\\nsso_start_url=url\\nsso_\"\n                                                          \"session=dev\\n[sso-session dev]\\nsso_region=us-east-\"\n                                                          \"1\\nsso_start_url=url\"),\n        },\n",
                    "rendered": {
                      "text": "        {\n            .name = \"with profile sso_start_url\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"[default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                                                          \"access_key=fake_secret_key\\nsso_start_url=url\\nsso_\"\n                                                          \"session=dev\\n[sso-session dev]\\nsso_region=us-east-\"\n                                                          \"1\\nsso_start_url=url\"),\n        },\n",
                      "markdown": "`        {\n            .name = \"with profile sso_start_url\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"[default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                                                          \"access_key=fake_secret_key\\nsso_start_url=url\\nsso_\"\n                                                          \"session=dev\\n[sso-session dev]\\nsso_region=us-east-\"\n                                                          \"1\\nsso_start_url=url\"),\n        },\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/token_provider_sso_tests.c"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 75,
                  "endLine": 254,
                  "endColumn": 85,
                  "snippet": {
                    "text": "        {\n            .name = \"with profile sso_region\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"[default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                                                          \"access_key=fake_secret_key\\nsso_region=us-east-1\\nsso_\"\n                                                          \"session=dev\\n[sso-session dev]\\nsso_region=us-east-\"\n                                                          \"1\\nsso_start_url=url\"),\n        },\n",
                    "rendered": {
                      "text": "        {\n            .name = \"with profile sso_region\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"[default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                                                          \"access_key=fake_secret_key\\nsso_region=us-east-1\\nsso_\"\n                                                          \"session=dev\\n[sso-session dev]\\nsso_region=us-east-\"\n                                                          \"1\\nsso_start_url=url\"),\n        },\n",
                      "markdown": "`        {\n            .name = \"with profile sso_region\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"[default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                                                          \"access_key=fake_secret_key\\nsso_region=us-east-1\\nsso_\"\n                                                          \"session=dev\\n[sso-session dev]\\nsso_region=us-east-\"\n                                                          \"1\\nsso_start_url=url\"),\n        },\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/token_provider_sso_tests.c"
                },
                "region": {
                  "startLine": 247,
                  "startColumn": 75,
                  "endLine": 247,
                  "endColumn": 85,
                  "snippet": {
                    "text": "        {\n            .name = \"sso-session\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"[default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                                                          \"access_key=fake_secret_key\\nsso_\"\n                                                          \"session=dev\\n[sso-session dev]\\nsso_region=us-east-\"\n                                                          \"1\\nsso_start_url=url\"),\n        },\n",
                    "rendered": {
                      "text": "        {\n            .name = \"sso-session\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"[default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                                                          \"access_key=fake_secret_key\\nsso_\"\n                                                          \"session=dev\\n[sso-session dev]\\nsso_region=us-east-\"\n                                                          \"1\\nsso_start_url=url\"),\n        },\n",
                      "markdown": "`        {\n            .name = \"sso-session\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"[default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                                                          \"access_key=fake_secret_key\\nsso_\"\n                                                          \"session=dev\\n[sso-session dev]\\nsso_region=us-east-\"\n                                                          \"1\\nsso_start_url=url\"),\n        },\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/token_provider_sso_tests.c"
                },
                "region": {
                  "startLine": 211,
                  "startColumn": 33,
                  "endLine": 211,
                  "endColumn": 43,
                  "snippet": {
                    "text": "            .name = \"different sso_session name\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\n                \"[default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                \"access_key=fake_secret_key\\nsso_region=us-east-1\\nsso_start_url=url\\nsso_\"\n                \"session=dev\\n[sso-session dev2]\\nsso_region=us-east-\"\n                \"1\\nsso_start_url=url\"),\n        },\n",
                    "rendered": {
                      "text": "            .name = \"different sso_session name\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\n                \"[default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                \"access_key=fake_secret_key\\nsso_region=us-east-1\\nsso_start_url=url\\nsso_\"\n                \"session=dev\\n[sso-session dev2]\\nsso_region=us-east-\"\n                \"1\\nsso_start_url=url\"),\n        },\n",
                      "markdown": "`            .name = \"different sso_session name\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\n                \"[default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                \"access_key=fake_secret_key\\nsso_region=us-east-1\\nsso_start_url=url\\nsso_\"\n                \"session=dev\\n[sso-session dev2]\\nsso_region=us-east-\"\n                \"1\\nsso_start_url=url\"),\n        },\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/token_provider_sso_tests.c"
                },
                "region": {
                  "startLine": 204,
                  "startColumn": 33,
                  "endLine": 204,
                  "endColumn": 43,
                  "snippet": {
                    "text": "            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\n                \"[profile \"\n                \"default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                \"access_key=fake_secret_key\\nsso_session=dev\\nsso_region=us-east-\"\n                \"1\\nsso_start_url=url\\n[sso-session dev]\\nsso_region=us-east-1\\nsso_start_url=url2\"),\n        },\n        {\n",
                    "rendered": {
                      "text": "            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\n                \"[profile \"\n                \"default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                \"access_key=fake_secret_key\\nsso_session=dev\\nsso_region=us-east-\"\n                \"1\\nsso_start_url=url\\n[sso-session dev]\\nsso_region=us-east-1\\nsso_start_url=url2\"),\n        },\n        {\n",
                      "markdown": "`            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\n                \"[profile \"\n                \"default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                \"access_key=fake_secret_key\\nsso_session=dev\\nsso_region=us-east-\"\n                \"1\\nsso_start_url=url\\n[sso-session dev]\\nsso_region=us-east-1\\nsso_start_url=url2\"),\n        },\n        {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/token_provider_sso_tests.c"
                },
                "region": {
                  "startLine": 196,
                  "startColumn": 33,
                  "endLine": 196,
                  "endColumn": 43,
                  "snippet": {
                    "text": "            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\n                \"[profile \"\n                \"default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                \"access_key=fake_secret_key\\nsso_session=dev\\nsso_region=us-west-\"\n                \"1\\nsso_start_url=url\\n[sso-session dev]\\nsso_region=us-east-1\\nsso_start_url=url\"),\n        },\n        {\n",
                    "rendered": {
                      "text": "            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\n                \"[profile \"\n                \"default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                \"access_key=fake_secret_key\\nsso_session=dev\\nsso_region=us-west-\"\n                \"1\\nsso_start_url=url\\n[sso-session dev]\\nsso_region=us-east-1\\nsso_start_url=url\"),\n        },\n        {\n",
                      "markdown": "`            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\n                \"[profile \"\n                \"default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                \"access_key=fake_secret_key\\nsso_session=dev\\nsso_region=us-west-\"\n                \"1\\nsso_start_url=url\\n[sso-session dev]\\nsso_region=us-east-1\\nsso_start_url=url\"),\n        },\n        {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/token_provider_sso_tests.c"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 75,
                  "endLine": 188,
                  "endColumn": 85,
                  "snippet": {
                    "text": "            .name = \"sso_session with without sso_start_url\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"[profile \"\n                                                          \"default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                                                          \"access_key=fake_secret_key\\nsso_session=dev\\n[sso-session \"\n                                                          \"dev]\\nsso_region=us-east-1\"),\n        },\n        {\n",
                    "rendered": {
                      "text": "            .name = \"sso_session with without sso_start_url\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"[profile \"\n                                                          \"default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                                                          \"access_key=fake_secret_key\\nsso_session=dev\\n[sso-session \"\n                                                          \"dev]\\nsso_region=us-east-1\"),\n        },\n        {\n",
                      "markdown": "`            .name = \"sso_session with without sso_start_url\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"[profile \"\n                                                          \"default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                                                          \"access_key=fake_secret_key\\nsso_session=dev\\n[sso-session \"\n                                                          \"dev]\\nsso_region=us-east-1\"),\n        },\n        {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/token_provider_sso_tests.c"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 75,
                  "endLine": 181,
                  "endColumn": 85,
                  "snippet": {
                    "text": "            .name = \"sso_session with without sso_region\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"[profile \"\n                                                          \"default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                                                          \"access_key=fake_secret_key\\nsso_session=dev\\n[sso-session \"\n                                                          \"dev]\\nsso_start_url=url\"),\n        },\n        {\n",
                    "rendered": {
                      "text": "            .name = \"sso_session with without sso_region\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"[profile \"\n                                                          \"default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                                                          \"access_key=fake_secret_key\\nsso_session=dev\\n[sso-session \"\n                                                          \"dev]\\nsso_start_url=url\"),\n        },\n        {\n",
                      "markdown": "`            .name = \"sso_session with without sso_region\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"[profile \"\n                                                          \"default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                                                          \"access_key=fake_secret_key\\nsso_session=dev\\n[sso-session \"\n                                                          \"dev]\\nsso_start_url=url\"),\n        },\n        {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/token_provider_sso_tests.c"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 75,
                  "endLine": 174,
                  "endColumn": 85,
                  "snippet": {
                    "text": "        {\n            .name = \"no sso-session\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"[default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                                                          \"access_key=fake_secret_key\\nsso_region=us-east-\"\n                                                          \"1\\nsso_start_url=url\"),\n        },\n        {\n",
                    "rendered": {
                      "text": "        {\n            .name = \"no sso-session\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"[default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                                                          \"access_key=fake_secret_key\\nsso_region=us-east-\"\n                                                          \"1\\nsso_start_url=url\"),\n        },\n        {\n",
                      "markdown": "`        {\n            .name = \"no sso-session\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"[default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                                                          \"access_key=fake_secret_key\\nsso_region=us-east-\"\n                                                          \"1\\nsso_start_url=url\"),\n        },\n        {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/token_provider_sso_tests.c"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 33,
                  "endLine": 85,
                  "endColumn": 43,
                  "snippet": {
                    "text": "            .name = \"with sso_session\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\n                \"[default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                \"access_key=fake_secret_key\\nsso_region=us-east-1\\nsso_start_url=url\\nsso_\"\n                \"session=dev\\n[sso-session dev]\\nsso_region=us-east-\"\n                \"1\\nsso_start_url=url2\"),\n        },\n",
                    "rendered": {
                      "text": "            .name = \"with sso_session\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\n                \"[default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                \"access_key=fake_secret_key\\nsso_region=us-east-1\\nsso_start_url=url\\nsso_\"\n                \"session=dev\\n[sso-session dev]\\nsso_region=us-east-\"\n                \"1\\nsso_start_url=url2\"),\n        },\n",
                      "markdown": "`            .name = \"with sso_session\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\n                \"[default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                \"access_key=fake_secret_key\\nsso_region=us-east-1\\nsso_start_url=url\\nsso_\"\n                \"session=dev\\n[sso-session dev]\\nsso_region=us-east-\"\n                \"1\\nsso_start_url=url2\"),\n        },\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/token_provider_sso_tests.c"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 75,
                  "endLine": 78,
                  "endColumn": 85,
                  "snippet": {
                    "text": "        {\n            .name = \"profile\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"[default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                                                          \"access_key=fake_secret_key\\nsso_region=us-east-\"\n                                                          \"1\\nsso_start_url=url\"),\n        },\n        {\n",
                    "rendered": {
                      "text": "        {\n            .name = \"profile\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"[default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                                                          \"access_key=fake_secret_key\\nsso_region=us-east-\"\n                                                          \"1\\nsso_start_url=url\"),\n        },\n        {\n",
                      "markdown": "`        {\n            .name = \"profile\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"[default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                                                          \"access_key=fake_secret_key\\nsso_region=us-east-\"\n                                                          \"1\\nsso_start_url=url\"),\n        },\n        {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/token_provider_sso_tests.c"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 75,
                  "endLine": 46,
                  "endColumn": 85,
                  "snippet": {
                    "text": "            .name = \"only sso_session\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"[profile \"\n                                                          \"default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                                                          \"access_key=fake_secret_key\\nsso_session=dev\\n[sso-session \"\n                                                          \"dev]\\nsso_start_url=url\\nsso_region=us-east-1\"),\n        },\n    };\n",
                    "rendered": {
                      "text": "            .name = \"only sso_session\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"[profile \"\n                                                          \"default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                                                          \"access_key=fake_secret_key\\nsso_session=dev\\n[sso-session \"\n                                                          \"dev]\\nsso_start_url=url\\nsso_region=us-east-1\"),\n        },\n    };\n",
                      "markdown": "`            .name = \"only sso_session\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"[profile \"\n                                                          \"default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                                                          \"access_key=fake_secret_key\\nsso_session=dev\\n[sso-session \"\n                                                          \"dev]\\nsso_start_url=url\\nsso_region=us-east-1\"),\n        },\n    };\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/token_provider_sso_tests.c"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 75,
                  "endLine": 40,
                  "endColumn": 85,
                  "snippet": {
                    "text": "            .name = \"No sso_start_url\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"[profile \"\n                                                          \"default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                                                          \"access_key=fake_secret_key\\nsso_region=us-east-1\\n\"),\n        },\n        {\n            .name = \"only sso_session\",\n",
                    "rendered": {
                      "text": "            .name = \"No sso_start_url\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"[profile \"\n                                                          \"default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                                                          \"access_key=fake_secret_key\\nsso_region=us-east-1\\n\"),\n        },\n        {\n            .name = \"only sso_session\",\n",
                      "markdown": "`            .name = \"No sso_start_url\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\"[profile \"\n                                                          \"default]\\naws_access_key_id=fake_access_key\\naws_secret_\"\n                                                          \"access_key=fake_secret_key\\nsso_region=us-east-1\\n\"),\n        },\n        {\n            .name = \"only sso_session\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/token_provider_sso_tests.c"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 98,
                  "endLine": 34,
                  "endColumn": 108,
                  "snippet": {
                    "text": "        {\n            .name = \"No config\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\n                \"[profile default]\\naws_access_key_id=fake_access_key\\naws_secret_access_key=fake_secret_key\\n\"),\n        },\n        {\n            .name = \"No sso_start_url\",\n",
                    "rendered": {
                      "text": "        {\n            .name = \"No config\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\n                \"[profile default]\\naws_access_key_id=fake_access_key\\naws_secret_access_key=fake_secret_key\\n\"),\n        },\n        {\n            .name = \"No sso_start_url\",\n",
                      "markdown": "`        {\n            .name = \"No config\",\n            .text = AWS_BYTE_CUR_INIT_FROM_STRING_LITERAL(\n                \"[profile default]\\naws_access_key_id=fake_access_key\\naws_secret_access_key=fake_secret_key\\n\"),\n        },\n        {\n            .name = \"No sso_start_url\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/include/aws/auth/private/sso_token_providers.h"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 14,
                  "endLine": 112,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\nAWS_EXTERN_C_END\n\n#endif /* AWS_AUTH_TOKEN_PROVIDERS_PRIVATE_H */\n",
                    "rendered": {
                      "text": "\nAWS_EXTERN_C_END\n\n#endif /* AWS_AUTH_TOKEN_PROVIDERS_PRIVATE_H */\n",
                      "markdown": "`\nAWS_EXTERN_C_END\n\n#endif /* AWS_AUTH_TOKEN_PROVIDERS_PRIVATE_H */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/include/aws/auth/private/sso_token_providers.h"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 12,
                  "endLine": 2,
                  "endColumn": 22,
                  "snippet": {
                    "text": "#ifndef AWS_AUTH_TOKEN_PROVIDERS_PRIVATE_H\n#define AWS_AUTH_TOKEN_PROVIDERS_PRIVATE_H\n\n/**\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n",
                    "rendered": {
                      "text": "#ifndef AWS_AUTH_TOKEN_PROVIDERS_PRIVATE_H\n#define AWS_AUTH_TOKEN_PROVIDERS_PRIVATE_H\n\n/**\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n",
                      "markdown": "`#ifndef AWS_AUTH_TOKEN_PROVIDERS_PRIVATE_H\n#define AWS_AUTH_TOKEN_PROVIDERS_PRIVATE_H\n\n/**\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/include/aws/auth/private/sso_token_providers.h"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 12,
                  "endLine": 1,
                  "endColumn": 22,
                  "snippet": {
                    "text": "#ifndef AWS_AUTH_TOKEN_PROVIDERS_PRIVATE_H\n#define AWS_AUTH_TOKEN_PROVIDERS_PRIVATE_H\n\n/**\n",
                    "rendered": {
                      "text": "#ifndef AWS_AUTH_TOKEN_PROVIDERS_PRIVATE_H\n#define AWS_AUTH_TOKEN_PROVIDERS_PRIVATE_H\n\n/**\n",
                      "markdown": "`#ifndef AWS_AUTH_TOKEN_PROVIDERS_PRIVATE_H\n#define AWS_AUTH_TOKEN_PROVIDERS_PRIVATE_H\n\n/**\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/include/aws/auth/private/sso_token_utils.h"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 14,
                  "endLine": 58,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\nAWS_EXTERN_C_END\n\n#endif /* AWS_AUTH_TOKEN_PRIVATE_H */\n",
                    "rendered": {
                      "text": "\nAWS_EXTERN_C_END\n\n#endif /* AWS_AUTH_TOKEN_PRIVATE_H */\n",
                      "markdown": "`\nAWS_EXTERN_C_END\n\n#endif /* AWS_AUTH_TOKEN_PRIVATE_H */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/include/aws/auth/private/sso_token_utils.h"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 12,
                  "endLine": 2,
                  "endColumn": 22,
                  "snippet": {
                    "text": "#ifndef AWS_AUTH_TOKEN_PRIVATE_H\n#define AWS_AUTH_TOKEN_PRIVATE_H\n\n/**\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n",
                    "rendered": {
                      "text": "#ifndef AWS_AUTH_TOKEN_PRIVATE_H\n#define AWS_AUTH_TOKEN_PRIVATE_H\n\n/**\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n",
                      "markdown": "`#ifndef AWS_AUTH_TOKEN_PRIVATE_H\n#define AWS_AUTH_TOKEN_PRIVATE_H\n\n/**\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/include/aws/auth/private/sso_token_utils.h"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 12,
                  "endLine": 1,
                  "endColumn": 22,
                  "snippet": {
                    "text": "#ifndef AWS_AUTH_TOKEN_PRIVATE_H\n#define AWS_AUTH_TOKEN_PRIVATE_H\n\n/**\n",
                    "rendered": {
                      "text": "#ifndef AWS_AUTH_TOKEN_PRIVATE_H\n#define AWS_AUTH_TOKEN_PRIVATE_H\n\n/**\n",
                      "markdown": "`#ifndef AWS_AUTH_TOKEN_PRIVATE_H\n#define AWS_AUTH_TOKEN_PRIVATE_H\n\n/**\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.github/ISSUE_TEMPLATE/bug-report.yml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 10,
                  "endLine": 31,
                  "endColumn": 19,
                  "snippet": {
                    "text": "        What actually happened?\n        \n        Please include full errors, uncaught exceptions, stack traces, and relevant logs.\n        If service responses are relevant, please include wire logs.\n    validations:\n      required: true\n  - type: textarea\n",
                    "rendered": {
                      "text": "        What actually happened?\n        \n        Please include full errors, uncaught exceptions, stack traces, and relevant logs.\n        If service responses are relevant, please include wire logs.\n    validations:\n      required: true\n  - type: textarea\n",
                      "markdown": "`        What actually happened?\n        \n        Please include full errors, uncaught exceptions, stack traces, and relevant logs.\n        If service responses are relevant, please include wire logs.\n    validations:\n      required: true\n  - type: textarea\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.github/ISSUE_TEMPLATE/bug-report.yml"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 20,
                  "endLine": 20,
                  "endColumn": 28,
                  "snippet": {
                    "text": "    attributes:\n      label: Expected Behavior\n      description: |\n        What did you expect to happen?\n    validations:\n      required: true\n  - type: textarea\n",
                    "rendered": {
                      "text": "    attributes:\n      label: Expected Behavior\n      description: |\n        What did you expect to happen?\n    validations:\n      required: true\n  - type: textarea\n",
                      "markdown": "`    attributes:\n      label: Expected Behavior\n      description: |\n        What did you expect to happen?\n    validations:\n      required: true\n  - type: textarea\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.github/workflows/codecov.yml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 9,
                  "endLine": 24,
                  "endColumn": 16,
                  "snippet": {
                    "text": "      - name: Build ${{ env.PACKAGE_NAME }} + consumers\n        run: |\n          python3 -c \"from urllib.request import urlretrieve; urlretrieve('${{ env.BUILDER_HOST }}/${{ env.BUILDER_SOURCE }}/${{ env.BUILDER_VERSION }}/builder.pyz?run=${{ env.RUN }}', 'builder')\"\n          chmod a+x builder\n          ./builder build -p ${{ env.PACKAGE_NAME }} --compiler=gcc-9 --cmake-extra=-DASSERT_LOCK_HELD=ON --coverage\n",
                    "rendered": {
                      "text": "      - name: Build ${{ env.PACKAGE_NAME }} + consumers\n        run: |\n          python3 -c \"from urllib.request import urlretrieve; urlretrieve('${{ env.BUILDER_HOST }}/${{ env.BUILDER_SOURCE }}/${{ env.BUILDER_VERSION }}/builder.pyz?run=${{ env.RUN }}', 'builder')\"\n          chmod a+x builder\n          ./builder build -p ${{ env.PACKAGE_NAME }} --compiler=gcc-9 --cmake-extra=-DASSERT_LOCK_HELD=ON --coverage\n",
                      "markdown": "`      - name: Build ${{ env.PACKAGE_NAME }} + consumers\n        run: |\n          python3 -c \"from urllib.request import urlretrieve; urlretrieve('${{ env.BUILDER_HOST }}/${{ env.BUILDER_SOURCE }}/${{ env.BUILDER_VERSION }}/builder.pyz?run=${{ env.RUN }}', 'builder')\"\n          chmod a+x builder\n          ./builder build -p ${{ env.PACKAGE_NAME }} --compiler=gcc-9 --cmake-extra=-DASSERT_LOCK_HELD=ON --coverage\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.builder/action/auth-ci-prep.py"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 21,
                  "endLine": 12,
                  "endColumn": 70,
                  "snippet": {
                    "text": "class AuthCiPrep(Builder.Action):\n\n    def run(self, env):\n        env.shell.setenv(\"AWS_TESTING_COGNITO_IDENTITY\", env.shell.get_secret(\"aws-c-auth-testing/cognito-identity\"), quiet=True)\n\n        actions = []\n\n",
                    "rendered": {
                      "text": "class AuthCiPrep(Builder.Action):\n\n    def run(self, env):\n        env.shell.setenv(\"AWS_TESTING_COGNITO_IDENTITY\", env.shell.get_secret(\"aws-c-auth-testing/cognito-identity\"), quiet=True)\n\n        actions = []\n\n",
                      "markdown": "`class AuthCiPrep(Builder.Action):\n\n    def run(self, env):\n        env.shell.setenv(\"AWS_TESTING_COGNITO_IDENTITY\", env.shell.get_secret(\"aws-c-auth-testing/cognito-identity\"), quiet=True)\n\n        actions = []\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-slashes-normalized/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-slashes-normalized/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-slash-pointless-dot-normalized/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-slash-pointless-dot-normalized/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/post-header-value-case/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/post-header-value-case/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-relative-relative-unnormalized/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-relative-relative-unnormalized/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-vanilla-with-session-token/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-vanilla-with-session-token/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/post-sts-header-before/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/post-sts-header-before/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-utf8/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-utf8/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-slash-dot-slash-normalized/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-slash-dot-slash-normalized/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/CMakeLists.txt"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 46,
                  "endLine": 56,
                  "endColumn": 56,
                  "snippet": {
                    "text": "add_net_test_case(credentials_provider_ecs_basic_success)\nadd_net_test_case(credentials_provider_ecs_basic_success_token_file)\nadd_net_test_case(credentials_provider_ecs_basic_success_uri_env)\nadd_net_test_case(credentials_provider_ecs_no_auth_token_success)\nadd_net_test_case(credentials_provider_ecs_success_multi_part_doc)\nadd_net_test_case(credentials_provider_ecs_real_new_destroy)\n\n",
                    "rendered": {
                      "text": "add_net_test_case(credentials_provider_ecs_basic_success)\nadd_net_test_case(credentials_provider_ecs_basic_success_token_file)\nadd_net_test_case(credentials_provider_ecs_basic_success_uri_env)\nadd_net_test_case(credentials_provider_ecs_no_auth_token_success)\nadd_net_test_case(credentials_provider_ecs_success_multi_part_doc)\nadd_net_test_case(credentials_provider_ecs_real_new_destroy)\n\n",
                      "markdown": "`add_net_test_case(credentials_provider_ecs_basic_success)\nadd_net_test_case(credentials_provider_ecs_basic_success_token_file)\nadd_net_test_case(credentials_provider_ecs_basic_success_uri_env)\nadd_net_test_case(credentials_provider_ecs_no_auth_token_success)\nadd_net_test_case(credentials_provider_ecs_success_multi_part_doc)\nadd_net_test_case(credentials_provider_ecs_real_new_destroy)\n\n`"
                    }
                  },
                  "sourceLanguage": "plaintext"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_tests.c"
                },
                "region": {
                  "startLine": 895,
                  "startColumn": 52,
                  "endLine": 895,
                  "endColumn": 62,
                  "snippet": {
                    "text": "    \"[foo]\\naws_access_key_id=foo_access2\\naws_secret_access_key=foo_secret2\\naws_session_token=foo_session2\\n\");\n\nAWS_STATIC_STRING_FROM_LITERAL(s_fake_access, \"fake_access_key\");\nAWS_STATIC_STRING_FROM_LITERAL(s_fake_secret, \"fake_secret_key\");\n\nint s_verify_default_credentials_callback(struct aws_get_credentials_test_callback_result *callback_results) {\n    ASSERT_TRUE(callback_results->count == 1);\n",
                    "rendered": {
                      "text": "    \"[foo]\\naws_access_key_id=foo_access2\\naws_secret_access_key=foo_secret2\\naws_session_token=foo_session2\\n\");\n\nAWS_STATIC_STRING_FROM_LITERAL(s_fake_access, \"fake_access_key\");\nAWS_STATIC_STRING_FROM_LITERAL(s_fake_secret, \"fake_secret_key\");\n\nint s_verify_default_credentials_callback(struct aws_get_credentials_test_callback_result *callback_results) {\n    ASSERT_TRUE(callback_results->count == 1);\n",
                      "markdown": "`    \"[foo]\\naws_access_key_id=foo_access2\\naws_secret_access_key=foo_secret2\\naws_session_token=foo_session2\\n\");\n\nAWS_STATIC_STRING_FROM_LITERAL(s_fake_access, \"fake_access_key\");\nAWS_STATIC_STRING_FROM_LITERAL(s_fake_secret, \"fake_secret_key\");\n\nint s_verify_default_credentials_callback(struct aws_get_credentials_test_callback_result *callback_results) {\n    ASSERT_TRUE(callback_results->count == 1);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_tests.c"
                },
                "region": {
                  "startLine": 885,
                  "startColumn": 87,
                  "endLine": 885,
                  "endColumn": 97,
                  "snippet": {
                    "text": "    \"[profile default]\\naws_access_key_id=fake_access_key\\naws_secret_access_key=fake_secret_key\\n\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_config_contents2,\n    \"[profile default]\\naws_access_key_id=fake_access_key2\\naws_secret_access_key=fake_secret_key2\\n\");\n\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_credentials_contents,\n",
                    "rendered": {
                      "text": "    \"[profile default]\\naws_access_key_id=fake_access_key\\naws_secret_access_key=fake_secret_key\\n\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_config_contents2,\n    \"[profile default]\\naws_access_key_id=fake_access_key2\\naws_secret_access_key=fake_secret_key2\\n\");\n\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_credentials_contents,\n",
                      "markdown": "`    \"[profile default]\\naws_access_key_id=fake_access_key\\naws_secret_access_key=fake_secret_key\\n\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_config_contents2,\n    \"[profile default]\\naws_access_key_id=fake_access_key2\\naws_secret_access_key=fake_secret_key2\\n\");\n\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_credentials_contents,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_tests.c"
                },
                "region": {
                  "startLine": 882,
                  "startColumn": 86,
                  "endLine": 882,
                  "endColumn": 96,
                  "snippet": {
                    "text": "\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_config_contents,\n    \"[profile default]\\naws_access_key_id=fake_access_key\\naws_secret_access_key=fake_secret_key\\n\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_config_contents2,\n    \"[profile default]\\naws_access_key_id=fake_access_key2\\naws_secret_access_key=fake_secret_key2\\n\");\n",
                    "rendered": {
                      "text": "\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_config_contents,\n    \"[profile default]\\naws_access_key_id=fake_access_key\\naws_secret_access_key=fake_secret_key\\n\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_config_contents2,\n    \"[profile default]\\naws_access_key_id=fake_access_key2\\naws_secret_access_key=fake_secret_key2\\n\");\n",
                      "markdown": "`\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_config_contents,\n    \"[profile default]\\naws_access_key_id=fake_access_key\\naws_secret_access_key=fake_secret_key\\n\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_config_contents2,\n    \"[profile default]\\naws_access_key_id=fake_access_key2\\naws_secret_access_key=fake_secret_key2\\n\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_tests.c"
                },
                "region": {
                  "startLine": 345,
                  "startColumn": 55,
                  "endLine": 345,
                  "endColumn": 64,
                  "snippet": {
                    "text": "AWS_STATIC_STRING_FROM_LITERAL(s_secret_access_key_1, \"SecretKey1\");\nAWS_STATIC_STRING_FROM_LITERAL(s_session_token_1, \"SessionToken1\");\nAWS_STATIC_STRING_FROM_LITERAL(s_access_key_id_2, \"AccessKey2\");\nAWS_STATIC_STRING_FROM_LITERAL(s_secret_access_key_2, \"SecretKey2\");\nAWS_STATIC_STRING_FROM_LITERAL(s_session_token_2, \"SessionToken2\");\n\nint s_wait_for_get_credentials(struct aws_get_credentials_test_callback_result *callback_results) {\n",
                    "rendered": {
                      "text": "AWS_STATIC_STRING_FROM_LITERAL(s_secret_access_key_1, \"SecretKey1\");\nAWS_STATIC_STRING_FROM_LITERAL(s_session_token_1, \"SessionToken1\");\nAWS_STATIC_STRING_FROM_LITERAL(s_access_key_id_2, \"AccessKey2\");\nAWS_STATIC_STRING_FROM_LITERAL(s_secret_access_key_2, \"SecretKey2\");\nAWS_STATIC_STRING_FROM_LITERAL(s_session_token_2, \"SessionToken2\");\n\nint s_wait_for_get_credentials(struct aws_get_credentials_test_callback_result *callback_results) {\n",
                      "markdown": "`AWS_STATIC_STRING_FROM_LITERAL(s_secret_access_key_1, \"SecretKey1\");\nAWS_STATIC_STRING_FROM_LITERAL(s_session_token_1, \"SessionToken1\");\nAWS_STATIC_STRING_FROM_LITERAL(s_access_key_id_2, \"AccessKey2\");\nAWS_STATIC_STRING_FROM_LITERAL(s_secret_access_key_2, \"SecretKey2\");\nAWS_STATIC_STRING_FROM_LITERAL(s_session_token_2, \"SessionToken2\");\n\nint s_wait_for_get_credentials(struct aws_get_credentials_test_callback_result *callback_results) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_tests.c"
                },
                "region": {
                  "startLine": 342,
                  "startColumn": 55,
                  "endLine": 342,
                  "endColumn": 64,
                  "snippet": {
                    "text": "#define TEST_CACHE_REFRESH_TIME_MS 10000\n\nAWS_STATIC_STRING_FROM_LITERAL(s_access_key_id_1, \"AccessKey1\");\nAWS_STATIC_STRING_FROM_LITERAL(s_secret_access_key_1, \"SecretKey1\");\nAWS_STATIC_STRING_FROM_LITERAL(s_session_token_1, \"SessionToken1\");\nAWS_STATIC_STRING_FROM_LITERAL(s_access_key_id_2, \"AccessKey2\");\nAWS_STATIC_STRING_FROM_LITERAL(s_secret_access_key_2, \"SecretKey2\");\n",
                    "rendered": {
                      "text": "#define TEST_CACHE_REFRESH_TIME_MS 10000\n\nAWS_STATIC_STRING_FROM_LITERAL(s_access_key_id_1, \"AccessKey1\");\nAWS_STATIC_STRING_FROM_LITERAL(s_secret_access_key_1, \"SecretKey1\");\nAWS_STATIC_STRING_FROM_LITERAL(s_session_token_1, \"SessionToken1\");\nAWS_STATIC_STRING_FROM_LITERAL(s_access_key_id_2, \"AccessKey2\");\nAWS_STATIC_STRING_FROM_LITERAL(s_secret_access_key_2, \"SecretKey2\");\n",
                      "markdown": "`#define TEST_CACHE_REFRESH_TIME_MS 10000\n\nAWS_STATIC_STRING_FROM_LITERAL(s_access_key_id_1, \"AccessKey1\");\nAWS_STATIC_STRING_FROM_LITERAL(s_secret_access_key_1, \"SecretKey1\");\nAWS_STATIC_STRING_FROM_LITERAL(s_session_token_1, \"SessionToken1\");\nAWS_STATIC_STRING_FROM_LITERAL(s_access_key_id_2, \"AccessKey2\");\nAWS_STATIC_STRING_FROM_LITERAL(s_secret_access_key_2, \"SecretKey2\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_tests.c"
                },
                "region": {
                  "startLine": 316,
                  "startColumn": 34,
                  "endLine": 316,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\n/*\n * Set of related tests that all check and make sure that if you don't specify enough\n * of the credentials data in the environment, you get nothing when you query an\n * environment provider.\n */\nstatic int s_environment_credentials_provider_negative_test(struct aws_allocator *allocator, void *ctx) {\n",
                    "rendered": {
                      "text": "\n/*\n * Set of related tests that all check and make sure that if you don't specify enough\n * of the credentials data in the environment, you get nothing when you query an\n * environment provider.\n */\nstatic int s_environment_credentials_provider_negative_test(struct aws_allocator *allocator, void *ctx) {\n",
                      "markdown": "`\n/*\n * Set of related tests that all check and make sure that if you don't specify enough\n * of the credentials data in the environment, you get nothing when you query an\n * environment provider.\n */\nstatic int s_environment_credentials_provider_negative_test(struct aws_allocator *allocator, void *ctx) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_cognito_tests.c"
                },
                "region": {
                  "startLine": 433,
                  "startColumn": 66,
                  "endLine": 433,
                  "endColumn": 75,
                  "snippet": {
                    "text": "    \"\\\"SomeSessionTokenValue\\\",\\\"Expiration\\\":1663003154}}\");\n\nAWS_STATIC_STRING_FROM_LITERAL(s_expected_access_key_id, \"SomeAccessKeyIdValue\");\nAWS_STATIC_STRING_FROM_LITERAL(s_expected_secret_access_key, \"SomeSecretKeyValue\");\nAWS_STATIC_STRING_FROM_LITERAL(s_expected_session_token, \"SomeSessionTokenValue\");\n\nstatic int s_verify_credentials(struct aws_credentials *credentials) {\n",
                    "rendered": {
                      "text": "    \"\\\"SomeSessionTokenValue\\\",\\\"Expiration\\\":1663003154}}\");\n\nAWS_STATIC_STRING_FROM_LITERAL(s_expected_access_key_id, \"SomeAccessKeyIdValue\");\nAWS_STATIC_STRING_FROM_LITERAL(s_expected_secret_access_key, \"SomeSecretKeyValue\");\nAWS_STATIC_STRING_FROM_LITERAL(s_expected_session_token, \"SomeSessionTokenValue\");\n\nstatic int s_verify_credentials(struct aws_credentials *credentials) {\n",
                      "markdown": "`    \"\\\"SomeSessionTokenValue\\\",\\\"Expiration\\\":1663003154}}\");\n\nAWS_STATIC_STRING_FROM_LITERAL(s_expected_access_key_id, \"SomeAccessKeyIdValue\");\nAWS_STATIC_STRING_FROM_LITERAL(s_expected_secret_access_key, \"SomeSecretKeyValue\");\nAWS_STATIC_STRING_FROM_LITERAL(s_expected_session_token, \"SomeSessionTokenValue\");\n\nstatic int s_verify_credentials(struct aws_credentials *credentials) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_cognito_tests.c"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 84,
                  "endLine": 429,
                  "endColumn": 93,
                  "snippet": {
                    "text": "\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_good_document_response,\n    \"{\\\"Credentials\\\":{\\\"AccessKeyId\\\":\\\"SomeAccessKeyIdValue\\\",\\\"SecretKey\\\":\\\"SomeSecretKeyValue\\\",\\\"SessionToken\\\":\"\n    \"\\\"SomeSessionTokenValue\\\",\\\"Expiration\\\":1663003154}}\");\n\nAWS_STATIC_STRING_FROM_LITERAL(s_expected_access_key_id, \"SomeAccessKeyIdValue\");\n",
                    "rendered": {
                      "text": "\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_good_document_response,\n    \"{\\\"Credentials\\\":{\\\"AccessKeyId\\\":\\\"SomeAccessKeyIdValue\\\",\\\"SecretKey\\\":\\\"SomeSecretKeyValue\\\",\\\"SessionToken\\\":\"\n    \"\\\"SomeSessionTokenValue\\\",\\\"Expiration\\\":1663003154}}\");\n\nAWS_STATIC_STRING_FROM_LITERAL(s_expected_access_key_id, \"SomeAccessKeyIdValue\");\n",
                      "markdown": "`\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_good_document_response,\n    \"{\\\"Credentials\\\":{\\\"AccessKeyId\\\":\\\"SomeAccessKeyIdValue\\\",\\\"SecretKey\\\":\\\"SomeSecretKeyValue\\\",\\\"SessionToken\\\":\"\n    \"\\\"SomeSessionTokenValue\\\",\\\"Expiration\\\":1663003154}}\");\n\nAWS_STATIC_STRING_FROM_LITERAL(s_expected_access_key_id, \"SomeAccessKeyIdValue\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/credentials_provider_cognito_tests.c"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 66,
                  "endLine": 429,
                  "endColumn": 75,
                  "snippet": {
                    "text": "\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_good_document_response,\n    \"{\\\"Credentials\\\":{\\\"AccessKeyId\\\":\\\"SomeAccessKeyIdValue\\\",\\\"SecretKey\\\":\\\"SomeSecretKeyValue\\\",\\\"SessionToken\\\":\"\n    \"\\\"SomeSessionTokenValue\\\",\\\"Expiration\\\":1663003154}}\");\n\nAWS_STATIC_STRING_FROM_LITERAL(s_expected_access_key_id, \"SomeAccessKeyIdValue\");\n",
                    "rendered": {
                      "text": "\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_good_document_response,\n    \"{\\\"Credentials\\\":{\\\"AccessKeyId\\\":\\\"SomeAccessKeyIdValue\\\",\\\"SecretKey\\\":\\\"SomeSecretKeyValue\\\",\\\"SessionToken\\\":\"\n    \"\\\"SomeSessionTokenValue\\\",\\\"Expiration\\\":1663003154}}\");\n\nAWS_STATIC_STRING_FROM_LITERAL(s_expected_access_key_id, \"SomeAccessKeyIdValue\");\n",
                      "markdown": "`\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_good_document_response,\n    \"{\\\"Credentials\\\":{\\\"AccessKeyId\\\":\\\"SomeAccessKeyIdValue\\\",\\\"SecretKey\\\":\\\"SomeSecretKeyValue\\\",\\\"SessionToken\\\":\"\n    \"\\\"SomeSessionTokenValue\\\",\\\"Expiration\\\":1663003154}}\");\n\nAWS_STATIC_STRING_FROM_LITERAL(s_expected_access_key_id, \"SomeAccessKeyIdValue\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.github/workflows/closed-issue-message.yml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 27,
                  "endLine": 17,
                  "endColumn": 33,
                  "snippet": {
                    "text": "                     ### ⚠️COMMENT VISIBILITY WARNING⚠️ \n                     Comments on closed issues are hard for our team to see. \n                     If you need more assistance, please either tag a team member or open a new issue that references this one. \n                     If you wish to keep having a conversation with other community members under this issue feel free to do so.\n",
                    "rendered": {
                      "text": "                     ### ⚠️COMMENT VISIBILITY WARNING⚠️ \n                     Comments on closed issues are hard for our team to see. \n                     If you need more assistance, please either tag a team member or open a new issue that references this one. \n                     If you wish to keep having a conversation with other community members under this issue feel free to do so.\n",
                      "markdown": "`                     ### ⚠️COMMENT VISIBILITY WARNING⚠️ \n                     Comments on closed issues are hard for our team to see. \n                     If you need more assistance, please either tag a team member or open a new issue that references this one. \n                     If you wish to keep having a conversation with other community members under this issue feel free to do so.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.github/workflows/stale_issue.yml"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 235,
                  "endLine": 21,
                  "endColumn": 243,
                  "snippet": {
                    "text": "hat this is still a problem, please feel free to open a new one.\n        stale-issue-message: Greetings! It looks like this issue hasn’t been active in longer than a week. We encourage you to check if this is still an issue in the latest release. Because it has been longer than a week since the last update on this, and in the absence of more information, we will be closing this issue soon. If you find that this is still a problem, please feel free to provide a comment or add an upvote to prevent automatic closure, or if the issue is already closed, please feel free to open a new one.\n        stale-pr-",
                    "rendered": {
                      "text": "hat this is still a problem, please feel free to open a new one.\n        stale-issue-message: Greetings! It looks like this issue hasn’t been active in longer than a week. We encourage you to check if this is still an issue in the latest release. Because it has been longer than a week since the last update on this, and in the absence of more information, we will be closing this issue soon. If you find that this is still a problem, please feel free to provide a comment or add an upvote to prevent automatic closure, or if the issue is already closed, please feel free to open a new one.\n        stale-pr-",
                      "markdown": "`hat this is still a problem, please feel free to open a new one.\n        stale-issue-message: Greetings! It looks like this issue hasn’t been active in longer than a week. We encourage you to check if this is still an issue in the latest release. Because it has been longer than a week since the last update on this, and in the absence of more information, we will be closing this issue soon. If you find that this is still a problem, please feel free to provide a comment or add an upvote to prevent automatic closure, or if the issue is already closed, please feel free to open a new one.\n        stale-pr-`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.github/workflows/stale_issue.yml"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 334,
                  "endLine": 21,
                  "endColumn": 340,
                  "snippet": {
                    "text": "ings! It looks like this issue hasn’t been active in longer than a week. We encourage you to check if this is still an issue in the latest release. Because it has been longer than a week since the last update on this, and in the absence of more information, we will be closing this issue soon. If you find that this is still a problem, please feel free to provide a comment or add an upvote to prevent automatic closure, or if the issue is already closed, please feel free to open a new one.\n        stale-pr-message: Greetings! It looks like this PR hasn’t been active in longer than a week, add a comment",
                    "rendered": {
                      "text": "ings! It looks like this issue hasn’t been active in longer than a week. We encourage you to check if this is still an issue in the latest release. Because it has been longer than a week since the last update on this, and in the absence of more information, we will be closing this issue soon. If you find that this is still a problem, please feel free to provide a comment or add an upvote to prevent automatic closure, or if the issue is already closed, please feel free to open a new one.\n        stale-pr-message: Greetings! It looks like this PR hasn’t been active in longer than a week, add a comment",
                      "markdown": "`ings! It looks like this issue hasn’t been active in longer than a week. We encourage you to check if this is still an issue in the latest release. Because it has been longer than a week since the last update on this, and in the absence of more information, we will be closing this issue soon. If you find that this is still a problem, please feel free to provide a comment or add an upvote to prevent automatic closure, or if the issue is already closed, please feel free to open a new one.\n        stale-pr-message: Greetings! It looks like this PR hasn’t been active in longer than a week, add a comment`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.github/workflows/stale_issue.yml"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 232,
                  "endLine": 20,
                  "endColumn": 238,
                  "snippet": {
                    "text": "ty string will cause the automation to skip\n        # that category\n        ancient-issue-message: Greetings! Sorry to say but this is a very old issue that is probably not getting as much attention as it deservers. We encourage you to check if this is still an issue in the latest release and if you find that this is still a problem, please feel free to open a new one.\n        stale-issue-message: Greetings! It looks like this issue hasn’t been active in longer than a week. We encourage you to check if this is still an issue in the latest release. Because it has been longer than a week since the las",
                    "rendered": {
                      "text": "ty string will cause the automation to skip\n        # that category\n        ancient-issue-message: Greetings! Sorry to say but this is a very old issue that is probably not getting as much attention as it deservers. We encourage you to check if this is still an issue in the latest release and if you find that this is still a problem, please feel free to open a new one.\n        stale-issue-message: Greetings! It looks like this issue hasn’t been active in longer than a week. We encourage you to check if this is still an issue in the latest release. Because it has been longer than a week since the las",
                      "markdown": "`ty string will cause the automation to skip\n        # that category\n        ancient-issue-message: Greetings! Sorry to say but this is a very old issue that is probably not getting as much attention as it deservers. We encourage you to check if this is still an issue in the latest release and if you find that this is still a problem, please feel free to open a new one.\n        stale-issue-message: Greetings! It looks like this issue hasn’t been active in longer than a week. We encourage you to check if this is still an issue in the latest release. Because it has been longer than a week since the las`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/README.md"
                },
                "region": {
                  "startLine": 56,
                  "endLine": 57,
                  "endColumn": 4,
                  "snippet": {
                    "text": "git clone git@github.com:awslabs/aws-c-http.git\ncmake -S aws-c-http -B aws-c-http/build -DCMAKE_INSTALL_PREFIX=<install-path> -DCMAKE_PREFIX_PATH=<install-path>\ncmake --build aws-c-http/build --target install\n\ngit clone git@github.com:awslabs/aws-c-auth.git\ncmake -S aws-c-auth -B aws-c-auth/build -DCMAKE_INSTALL_PREFIX=<install-path> -DCMAKE_PREFIX_PATH=<install-path>\ncmake --build aws-c-auth/build --target install\n```\n",
                    "rendered": {
                      "text": "git clone git@github.com:awslabs/aws-c-http.git\ncmake -S aws-c-http -B aws-c-http/build -DCMAKE_INSTALL_PREFIX=<install-path> -DCMAKE_PREFIX_PATH=<install-path>\ncmake --build aws-c-http/build --target install\n\ngit clone git@github.com:awslabs/aws-c-auth.git\ncmake -S aws-c-auth -B aws-c-auth/build -DCMAKE_INSTALL_PREFIX=<install-path> -DCMAKE_PREFIX_PATH=<install-path>\ncmake --build aws-c-auth/build --target install\n```\n",
                      "markdown": "`git clone git@github.com:awslabs/aws-c-http.git\ncmake -S aws-c-http -B aws-c-http/build -DCMAKE_INSTALL_PREFIX=<install-path> -DCMAKE_PREFIX_PATH=<install-path>\ncmake --build aws-c-http/build --target install\n\ngit clone git@github.com:awslabs/aws-c-auth.git\ncmake -S aws-c-auth -B aws-c-auth/build -DCMAKE_INSTALL_PREFIX=<install-path> -DCMAKE_PREFIX_PATH=<install-path>\ncmake --build aws-c-auth/build --target install\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/README.md"
                },
                "region": {
                  "startLine": 52,
                  "endLine": 53,
                  "endColumn": 4,
                  "snippet": {
                    "text": "git clone git@github.com:awslabs/aws-c-compression.git\ncmake -S aws-c-compression -B aws-c-compression/build -DCMAKE_INSTALL_PREFIX=<install-path> -DCMAKE_PREFIX_PATH=<install-path>\ncmake --build aws-c-compression/build --target install\n\ngit clone git@github.com:awslabs/aws-c-http.git\ncmake -S aws-c-http -B aws-c-http/build -DCMAKE_INSTALL_PREFIX=<install-path> -DCMAKE_PREFIX_PATH=<install-path>\ncmake --build aws-c-http/build --target install\n\n",
                    "rendered": {
                      "text": "git clone git@github.com:awslabs/aws-c-compression.git\ncmake -S aws-c-compression -B aws-c-compression/build -DCMAKE_INSTALL_PREFIX=<install-path> -DCMAKE_PREFIX_PATH=<install-path>\ncmake --build aws-c-compression/build --target install\n\ngit clone git@github.com:awslabs/aws-c-http.git\ncmake -S aws-c-http -B aws-c-http/build -DCMAKE_INSTALL_PREFIX=<install-path> -DCMAKE_PREFIX_PATH=<install-path>\ncmake --build aws-c-http/build --target install\n\n",
                      "markdown": "`git clone git@github.com:awslabs/aws-c-compression.git\ncmake -S aws-c-compression -B aws-c-compression/build -DCMAKE_INSTALL_PREFIX=<install-path> -DCMAKE_PREFIX_PATH=<install-path>\ncmake --build aws-c-compression/build --target install\n\ngit clone git@github.com:awslabs/aws-c-http.git\ncmake -S aws-c-http -B aws-c-http/build -DCMAKE_INSTALL_PREFIX=<install-path> -DCMAKE_PREFIX_PATH=<install-path>\ncmake --build aws-c-http/build --target install\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/README.md"
                },
                "region": {
                  "startLine": 48,
                  "endLine": 49,
                  "endColumn": 4,
                  "snippet": {
                    "text": "git clone git@github.com:awslabs/aws-c-io.git\ncmake -S aws-c-io -B aws-c-io/build -DCMAKE_INSTALL_PREFIX=<install-path> -DCMAKE_PREFIX_PATH=<install-path>\ncmake --build aws-c-io/build --target install\n\ngit clone git@github.com:awslabs/aws-c-compression.git\ncmake -S aws-c-compression -B aws-c-compression/build -DCMAKE_INSTALL_PREFIX=<install-path> -DCMAKE_PREFIX_PATH=<install-path>\ncmake --build aws-c-compression/build --target install\n\n",
                    "rendered": {
                      "text": "git clone git@github.com:awslabs/aws-c-io.git\ncmake -S aws-c-io -B aws-c-io/build -DCMAKE_INSTALL_PREFIX=<install-path> -DCMAKE_PREFIX_PATH=<install-path>\ncmake --build aws-c-io/build --target install\n\ngit clone git@github.com:awslabs/aws-c-compression.git\ncmake -S aws-c-compression -B aws-c-compression/build -DCMAKE_INSTALL_PREFIX=<install-path> -DCMAKE_PREFIX_PATH=<install-path>\ncmake --build aws-c-compression/build --target install\n\n",
                      "markdown": "`git clone git@github.com:awslabs/aws-c-io.git\ncmake -S aws-c-io -B aws-c-io/build -DCMAKE_INSTALL_PREFIX=<install-path> -DCMAKE_PREFIX_PATH=<install-path>\ncmake --build aws-c-io/build --target install\n\ngit clone git@github.com:awslabs/aws-c-compression.git\ncmake -S aws-c-compression -B aws-c-compression/build -DCMAKE_INSTALL_PREFIX=<install-path> -DCMAKE_PREFIX_PATH=<install-path>\ncmake --build aws-c-compression/build --target install\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/README.md"
                },
                "region": {
                  "startLine": 44,
                  "endLine": 45,
                  "endColumn": 4,
                  "snippet": {
                    "text": "git clone git@github.com:awslabs/aws-c-cal.git\ncmake -S aws-c-cal -B aws-c-cal/build -DCMAKE_INSTALL_PREFIX=<install-path> -DCMAKE_PREFIX_PATH=<install-path>\ncmake --build aws-c-cal/build --target install\n\ngit clone git@github.com:awslabs/aws-c-io.git\ncmake -S aws-c-io -B aws-c-io/build -DCMAKE_INSTALL_PREFIX=<install-path> -DCMAKE_PREFIX_PATH=<install-path>\ncmake --build aws-c-io/build --target install\n\n",
                    "rendered": {
                      "text": "git clone git@github.com:awslabs/aws-c-cal.git\ncmake -S aws-c-cal -B aws-c-cal/build -DCMAKE_INSTALL_PREFIX=<install-path> -DCMAKE_PREFIX_PATH=<install-path>\ncmake --build aws-c-cal/build --target install\n\ngit clone git@github.com:awslabs/aws-c-io.git\ncmake -S aws-c-io -B aws-c-io/build -DCMAKE_INSTALL_PREFIX=<install-path> -DCMAKE_PREFIX_PATH=<install-path>\ncmake --build aws-c-io/build --target install\n\n",
                      "markdown": "`git clone git@github.com:awslabs/aws-c-cal.git\ncmake -S aws-c-cal -B aws-c-cal/build -DCMAKE_INSTALL_PREFIX=<install-path> -DCMAKE_PREFIX_PATH=<install-path>\ncmake --build aws-c-cal/build --target install\n\ngit clone git@github.com:awslabs/aws-c-io.git\ncmake -S aws-c-io -B aws-c-io/build -DCMAKE_INSTALL_PREFIX=<install-path> -DCMAKE_PREFIX_PATH=<install-path>\ncmake --build aws-c-io/build --target install\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/README.md"
                },
                "region": {
                  "startLine": 40,
                  "endLine": 41,
                  "endColumn": 4,
                  "snippet": {
                    "text": "git clone git@github.com:awslabs/aws-c-common.git\ncmake -S aws-c-common -B aws-c-common/build -DCMAKE_INSTALL_PREFIX=<install-path>\ncmake --build aws-c-common/build --target install\n\ngit clone git@github.com:awslabs/aws-c-cal.git\ncmake -S aws-c-cal -B aws-c-cal/build -DCMAKE_INSTALL_PREFIX=<install-path> -DCMAKE_PREFIX_PATH=<install-path>\ncmake --build aws-c-cal/build --target install\n\n",
                    "rendered": {
                      "text": "git clone git@github.com:awslabs/aws-c-common.git\ncmake -S aws-c-common -B aws-c-common/build -DCMAKE_INSTALL_PREFIX=<install-path>\ncmake --build aws-c-common/build --target install\n\ngit clone git@github.com:awslabs/aws-c-cal.git\ncmake -S aws-c-cal -B aws-c-cal/build -DCMAKE_INSTALL_PREFIX=<install-path> -DCMAKE_PREFIX_PATH=<install-path>\ncmake --build aws-c-cal/build --target install\n\n",
                      "markdown": "`git clone git@github.com:awslabs/aws-c-common.git\ncmake -S aws-c-common -B aws-c-common/build -DCMAKE_INSTALL_PREFIX=<install-path>\ncmake --build aws-c-common/build --target install\n\ngit clone git@github.com:awslabs/aws-c-cal.git\ncmake -S aws-c-cal -B aws-c-cal/build -DCMAKE_INSTALL_PREFIX=<install-path> -DCMAKE_PREFIX_PATH=<install-path>\ncmake --build aws-c-cal/build --target install\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/README.md"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 3,
                  "endLine": 37,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n#### Building aws-c-auth and Remaining Dependencies\n\n```\ngit clone git@github.com:awslabs/aws-c-common.git\ncmake -S aws-c-common -B aws-c-common/build -DCMAKE_INSTALL_PREFIX=<install-path>\ncmake --build aws-c-common/build --target install\n\n",
                    "rendered": {
                      "text": "\n#### Building aws-c-auth and Remaining Dependencies\n\n```\ngit clone git@github.com:awslabs/aws-c-common.git\ncmake -S aws-c-common -B aws-c-common/build -DCMAKE_INSTALL_PREFIX=<install-path>\ncmake --build aws-c-common/build --target install\n\n",
                      "markdown": "`\n#### Building aws-c-auth and Remaining Dependencies\n\n```\ngit clone git@github.com:awslabs/aws-c-common.git\ncmake -S aws-c-common -B aws-c-common/build -DCMAKE_INSTALL_PREFIX=<install-path>\ncmake --build aws-c-common/build --target install\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/README.md"
                },
                "region": {
                  "startLine": 28,
                  "endLine": 29,
                  "endColumn": 4,
                  "snippet": {
                    "text": "git clone git@github.com:awslabs/aws-lc.git\ncmake -S aws-lc -B aws-lc/build -DCMAKE_INSTALL_PREFIX=<install-path>\ncmake --build aws-lc/build --target install\n\ngit clone git@github.com:aws/s2n-tls.git\ncmake -S s2n-tls -B s2n-tls/build -DCMAKE_INSTALL_PREFIX=<install-path> -DCMAKE_PREFIX_PATH=<install-path>\ncmake --build s2n-tls/build --target install\n```\n",
                    "rendered": {
                      "text": "git clone git@github.com:awslabs/aws-lc.git\ncmake -S aws-lc -B aws-lc/build -DCMAKE_INSTALL_PREFIX=<install-path>\ncmake --build aws-lc/build --target install\n\ngit clone git@github.com:aws/s2n-tls.git\ncmake -S s2n-tls -B s2n-tls/build -DCMAKE_INSTALL_PREFIX=<install-path> -DCMAKE_PREFIX_PATH=<install-path>\ncmake --build s2n-tls/build --target install\n```\n",
                      "markdown": "`git clone git@github.com:awslabs/aws-lc.git\ncmake -S aws-lc -B aws-lc/build -DCMAKE_INSTALL_PREFIX=<install-path>\ncmake --build aws-lc/build --target install\n\ngit clone git@github.com:aws/s2n-tls.git\ncmake -S s2n-tls -B s2n-tls/build -DCMAKE_INSTALL_PREFIX=<install-path> -DCMAKE_PREFIX_PATH=<install-path>\ncmake --build s2n-tls/build --target install\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/README.md"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 3,
                  "endLine": 25,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nIf you are building on Linux, you will need to build aws-lc and s2n-tls first.\n\n```\ngit clone git@github.com:awslabs/aws-lc.git\ncmake -S aws-lc -B aws-lc/build -DCMAKE_INSTALL_PREFIX=<install-path>\ncmake --build aws-lc/build --target install\n\n",
                    "rendered": {
                      "text": "\nIf you are building on Linux, you will need to build aws-lc and s2n-tls first.\n\n```\ngit clone git@github.com:awslabs/aws-lc.git\ncmake -S aws-lc -B aws-lc/build -DCMAKE_INSTALL_PREFIX=<install-path>\ncmake --build aws-lc/build --target install\n\n",
                      "markdown": "`\nIf you are building on Linux, you will need to build aws-lc and s2n-tls first.\n\n```\ngit clone git@github.com:awslabs/aws-lc.git\ncmake -S aws-lc -B aws-lc/build -DCMAKE_INSTALL_PREFIX=<install-path>\ncmake --build aws-lc/build --target install\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/post-x-www-form-urlencoded-parameters/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/post-x-www-form-urlencoded-parameters/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-header-value-multiline/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-header-value-multiline/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-unreserved/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-unreserved/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-relative-unnormalized/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-relative-unnormalized/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-slashes-unnormalized/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-slashes-unnormalized/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/post-header-key-sort/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/post-header-key-sort/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-relative-normalized/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-relative-normalized/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-vanilla-utf8-query/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-vanilla-utf8-query/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-slash-pointless-dot-unnormalized/public-key.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4a/get-slash-pointless-dot-unnormalized/public-key.json"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                    "rendered": {
                      "text": "{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n",
                      "markdown": "`{\n  \"X\":\"b6618f6a65740a99e650b33b6b4b5bd0d43b176d721a3edfea7e7d2d56d936b1\",\n  \"Y\":\"865ed22a7eadc9c5cb9d2cbaca1b3699139fedc5043dc6661864218330c8e518\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws-signing-test-suite/v4/get-vanilla-with-session-token/context.json"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 17,
                  "endLine": 5,
                  "endColumn": 83,
                  "snippet": {
                    "text": "    \"credentials\": {\n        \"access_key_id\": \"AKIDEXAMPLE\",\n        \"secret_access_key\": \"wJalrXUtnFEMI/K7MDENG+bPxRfiCYEXAMPLEKEY\",\n        \"token\": \"6e86291e8372ff2a2260956d9b8aae1d763fbf315fa00fa31553b73ebf194267\"\n    },\n    \"expiration_in_seconds\": 3600,\n    \"normalize\": true,\n",
                    "rendered": {
                      "text": "    \"credentials\": {\n        \"access_key_id\": \"AKIDEXAMPLE\",\n        \"secret_access_key\": \"wJalrXUtnFEMI/K7MDENG+bPxRfiCYEXAMPLEKEY\",\n        \"token\": \"6e86291e8372ff2a2260956d9b8aae1d763fbf315fa00fa31553b73ebf194267\"\n    },\n    \"expiration_in_seconds\": 3600,\n    \"normalize\": true,\n",
                      "markdown": "`    \"credentials\": {\n        \"access_key_id\": \"AKIDEXAMPLE\",\n        \"secret_access_key\": \"wJalrXUtnFEMI/K7MDENG+bPxRfiCYEXAMPLEKEY\",\n        \"token\": \"6e86291e8372ff2a2260956d9b8aae1d763fbf315fa00fa31553b73ebf194267\"\n    },\n    \"expiration_in_seconds\": 3600,\n    \"normalize\": true,\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/seed_tests.py"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 18,
                  "endLine": 93,
                  "endColumn": 84,
                  "snippet": {
                    "text": "token_context = {\n    \"normalize\" : True,\n    \"credentials\" : {\n        \"token\" : \"6e86291e8372ff2a2260956d9b8aae1d763fbf315fa00fa31553b73ebf194267\"\n    }    \n}\n\n",
                    "rendered": {
                      "text": "token_context = {\n    \"normalize\" : True,\n    \"credentials\" : {\n        \"token\" : \"6e86291e8372ff2a2260956d9b8aae1d763fbf315fa00fa31553b73ebf194267\"\n    }    \n}\n\n",
                      "markdown": "`token_context = {\n    \"normalize\" : True,\n    \"credentials\" : {\n        \"token\" : \"6e86291e8372ff2a2260956d9b8aae1d763fbf315fa00fa31553b73ebf194267\"\n    }    \n}\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/seed_tests.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 34,
                  "endLine": 7,
                  "snippet": {
                    "text": "# \n# Licensed under the Apache License, Version 2.0 (the \"License\").\n# You may not use this file except in compliance with the License.\n# A copy of the License is located at\n# \n#  http://aws.amazon.com/apache2.0\n# \n# or in the \"license\" file accompanying this file. This file is distributed\n",
                    "rendered": {
                      "text": "# \n# Licensed under the Apache License, Version 2.0 (the \"License\").\n# You may not use this file except in compliance with the License.\n# A copy of the License is located at\n# \n#  http://aws.amazon.com/apache2.0\n# \n# or in the \"license\" file accompanying this file. This file is distributed\n",
                      "markdown": "`# \n# Licensed under the Apache License, Version 2.0 (the \"License\").\n# You may not use this file except in compliance with the License.\n# A copy of the License is located at\n# \n#  http://aws.amazon.com/apache2.0\n# \n# or in the \"license\" file accompanying this file. This file is distributed\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/seed_tests.py"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 11,
                  "endLine": 47,
                  "endColumn": 17,
                  "snippet": {
                    "text": "    for key, value in source.items():\n        if isinstance(value, dict):\n            # get node or create one\n            node = destination.setdefault(key, {})\n            merge_dicts(value, node)\n        else:\n            destination[key] = value\n",
                    "rendered": {
                      "text": "    for key, value in source.items():\n        if isinstance(value, dict):\n            # get node or create one\n            node = destination.setdefault(key, {})\n            merge_dicts(value, node)\n        else:\n            destination[key] = value\n",
                      "markdown": "`    for key, value in source.items():\n        if isinstance(value, dict):\n            # get node or create one\n            node = destination.setdefault(key, {})\n            merge_dicts(value, node)\n        else:\n            destination[key] = value\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/seed_tests.py"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 17,
                  "endLine": 46,
                  "endColumn": 23,
                  "snippet": {
                    "text": "def merge_dicts(source, destination):\n    for key, value in source.items():\n        if isinstance(value, dict):\n            # get node or create one\n            node = destination.setdefault(key, {})\n            merge_dicts(value, node)\n        else:\n",
                    "rendered": {
                      "text": "def merge_dicts(source, destination):\n    for key, value in source.items():\n        if isinstance(value, dict):\n            # get node or create one\n            node = destination.setdefault(key, {})\n            merge_dicts(value, node)\n        else:\n",
                      "markdown": "`def merge_dicts(source, destination):\n    for key, value in source.items():\n        if isinstance(value, dict):\n            # get node or create one\n            node = destination.setdefault(key, {})\n            merge_dicts(value, node)\n        else:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws_imds_client_test.c"
                },
                "region": {
                  "startLine": 1415,
                  "startColumn": 86,
                  "endLine": 1415,
                  "endColumn": 96,
                  "snippet": {
                    "text": "    s_tester.has_received_resource_callback = true;\n\n    ASSERT_CURSOR_VALUE_STRING_EQUALS(aws_credentials_get_access_key_id(creds), s_access_key);\n    ASSERT_CURSOR_VALUE_STRING_EQUALS(aws_credentials_get_secret_access_key(creds), s_secret_key);\n    ASSERT_CURSOR_VALUE_STRING_EQUALS(aws_credentials_get_session_token(creds), s_token);\n\n    struct aws_byte_buf buf;\n",
                    "rendered": {
                      "text": "    s_tester.has_received_resource_callback = true;\n\n    ASSERT_CURSOR_VALUE_STRING_EQUALS(aws_credentials_get_access_key_id(creds), s_access_key);\n    ASSERT_CURSOR_VALUE_STRING_EQUALS(aws_credentials_get_secret_access_key(creds), s_secret_key);\n    ASSERT_CURSOR_VALUE_STRING_EQUALS(aws_credentials_get_session_token(creds), s_token);\n\n    struct aws_byte_buf buf;\n",
                      "markdown": "`    s_tester.has_received_resource_callback = true;\n\n    ASSERT_CURSOR_VALUE_STRING_EQUALS(aws_credentials_get_access_key_id(creds), s_access_key);\n    ASSERT_CURSOR_VALUE_STRING_EQUALS(aws_credentials_get_secret_access_key(creds), s_secret_key);\n    ASSERT_CURSOR_VALUE_STRING_EQUALS(aws_credentials_get_session_token(creds), s_token);\n\n    struct aws_byte_buf buf;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/aws_imds_client_test.c"
                },
                "region": {
                  "startLine": 617,
                  "startColumn": 33,
                  "endLine": 617,
                  "endColumn": 43,
                  "snippet": {
                    "text": "    \"{\\\"AccessKeyId\\\":\\\"SuccessfulAccessKey\\\", \\n  \\\"SecretAccessKey\\\":\\\"SuccessfulSecret\\\", \\n  \"\n    \"\\\"Token\\\":\\\"TokenSuccess\\\", \\n \\\"Expiration\\\":\\\"2020-02-25T06:03:31Z\\\"}\");\nAWS_STATIC_STRING_FROM_LITERAL(s_access_key, \"SuccessfulAccessKey\");\nAWS_STATIC_STRING_FROM_LITERAL(s_secret_key, \"SuccessfulSecret\");\nAWS_STATIC_STRING_FROM_LITERAL(s_token, \"TokenSuccess\");\nAWS_STATIC_STRING_FROM_LITERAL(s_expiration, \"2020-02-25T06:03:31Z\");\n\n",
                    "rendered": {
                      "text": "    \"{\\\"AccessKeyId\\\":\\\"SuccessfulAccessKey\\\", \\n  \\\"SecretAccessKey\\\":\\\"SuccessfulSecret\\\", \\n  \"\n    \"\\\"Token\\\":\\\"TokenSuccess\\\", \\n \\\"Expiration\\\":\\\"2020-02-25T06:03:31Z\\\"}\");\nAWS_STATIC_STRING_FROM_LITERAL(s_access_key, \"SuccessfulAccessKey\");\nAWS_STATIC_STRING_FROM_LITERAL(s_secret_key, \"SuccessfulSecret\");\nAWS_STATIC_STRING_FROM_LITERAL(s_token, \"TokenSuccess\");\nAWS_STATIC_STRING_FROM_LITERAL(s_expiration, \"2020-02-25T06:03:31Z\");\n\n",
                      "markdown": "`    \"{\\\"AccessKeyId\\\":\\\"SuccessfulAccessKey\\\", \\n  \\\"SecretAccessKey\\\":\\\"SuccessfulSecret\\\", \\n  \"\n    \"\\\"Token\\\":\\\"TokenSuccess\\\", \\n \\\"Expiration\\\":\\\"2020-02-25T06:03:31Z\\\"}\");\nAWS_STATIC_STRING_FROM_LITERAL(s_access_key, \"SuccessfulAccessKey\");\nAWS_STATIC_STRING_FROM_LITERAL(s_secret_key, \"SuccessfulSecret\");\nAWS_STATIC_STRING_FROM_LITERAL(s_token, \"TokenSuccess\");\nAWS_STATIC_STRING_FROM_LITERAL(s_expiration, \"2020-02-25T06:03:31Z\");\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/test_event_signing.c"
                },
                "region": {
                  "startLine": 246,
                  "startColumn": 4,
                  "endLine": 246,
                  "endColumn": 70,
                  "snippet": {
                    "text": "    \"632af120435b57ec241d8bfbb12e496dfd5e2730a1a02ac0ab6eaa230ae02e9a\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_final_chunk_signature,\n    \"c6f679ddb3af68f5e82f0cf6761244cb2338cf11e7d01a24130aea1b7c17e53e\");\n\nstatic int s_sigv4_event_signing_test(struct aws_allocator *allocator, void *ctx) {\n    (void)ctx;\n",
                    "rendered": {
                      "text": "    \"632af120435b57ec241d8bfbb12e496dfd5e2730a1a02ac0ab6eaa230ae02e9a\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_final_chunk_signature,\n    \"c6f679ddb3af68f5e82f0cf6761244cb2338cf11e7d01a24130aea1b7c17e53e\");\n\nstatic int s_sigv4_event_signing_test(struct aws_allocator *allocator, void *ctx) {\n    (void)ctx;\n",
                      "markdown": "`    \"632af120435b57ec241d8bfbb12e496dfd5e2730a1a02ac0ab6eaa230ae02e9a\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_final_chunk_signature,\n    \"c6f679ddb3af68f5e82f0cf6761244cb2338cf11e7d01a24130aea1b7c17e53e\");\n\nstatic int s_sigv4_event_signing_test(struct aws_allocator *allocator, void *ctx) {\n    (void)ctx;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/test_event_signing.c"
                },
                "region": {
                  "startLine": 243,
                  "startColumn": 4,
                  "endLine": 243,
                  "endColumn": 70,
                  "snippet": {
                    "text": "    \"f72aa9642f571d24a6e1ae42f10f073ad9448d8a028b6bcd82da081335adda02\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_third_chunk_signature,\n    \"632af120435b57ec241d8bfbb12e496dfd5e2730a1a02ac0ab6eaa230ae02e9a\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_final_chunk_signature,\n    \"c6f679ddb3af68f5e82f0cf6761244cb2338cf11e7d01a24130aea1b7c17e53e\");\n",
                    "rendered": {
                      "text": "    \"f72aa9642f571d24a6e1ae42f10f073ad9448d8a028b6bcd82da081335adda02\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_third_chunk_signature,\n    \"632af120435b57ec241d8bfbb12e496dfd5e2730a1a02ac0ab6eaa230ae02e9a\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_final_chunk_signature,\n    \"c6f679ddb3af68f5e82f0cf6761244cb2338cf11e7d01a24130aea1b7c17e53e\");\n",
                      "markdown": "`    \"f72aa9642f571d24a6e1ae42f10f073ad9448d8a028b6bcd82da081335adda02\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_third_chunk_signature,\n    \"632af120435b57ec241d8bfbb12e496dfd5e2730a1a02ac0ab6eaa230ae02e9a\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_final_chunk_signature,\n    \"c6f679ddb3af68f5e82f0cf6761244cb2338cf11e7d01a24130aea1b7c17e53e\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/test_event_signing.c"
                },
                "region": {
                  "startLine": 240,
                  "startColumn": 4,
                  "endLine": 240,
                  "endColumn": 70,
                  "snippet": {
                    "text": "    \"7aabf85b765e6a4d0d500b6e968657b14726fa3e1eb7e839302728ffd77629a5\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_second_chunk_signature,\n    \"f72aa9642f571d24a6e1ae42f10f073ad9448d8a028b6bcd82da081335adda02\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_third_chunk_signature,\n    \"632af120435b57ec241d8bfbb12e496dfd5e2730a1a02ac0ab6eaa230ae02e9a\");\n",
                    "rendered": {
                      "text": "    \"7aabf85b765e6a4d0d500b6e968657b14726fa3e1eb7e839302728ffd77629a5\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_second_chunk_signature,\n    \"f72aa9642f571d24a6e1ae42f10f073ad9448d8a028b6bcd82da081335adda02\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_third_chunk_signature,\n    \"632af120435b57ec241d8bfbb12e496dfd5e2730a1a02ac0ab6eaa230ae02e9a\");\n",
                      "markdown": "`    \"7aabf85b765e6a4d0d500b6e968657b14726fa3e1eb7e839302728ffd77629a5\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_second_chunk_signature,\n    \"f72aa9642f571d24a6e1ae42f10f073ad9448d8a028b6bcd82da081335adda02\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_third_chunk_signature,\n    \"632af120435b57ec241d8bfbb12e496dfd5e2730a1a02ac0ab6eaa230ae02e9a\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/test_event_signing.c"
                },
                "region": {
                  "startLine": 237,
                  "startColumn": 4,
                  "endLine": 237,
                  "endColumn": 70,
                  "snippet": {
                    "text": "    \"e1d8e8c8815e60969f2a34765c9a15945ffc0badbaa4b7e3b163ea19131e949b\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_first_chunk_signature,\n    \"7aabf85b765e6a4d0d500b6e968657b14726fa3e1eb7e839302728ffd77629a5\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_second_chunk_signature,\n    \"f72aa9642f571d24a6e1ae42f10f073ad9448d8a028b6bcd82da081335adda02\");\n",
                    "rendered": {
                      "text": "    \"e1d8e8c8815e60969f2a34765c9a15945ffc0badbaa4b7e3b163ea19131e949b\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_first_chunk_signature,\n    \"7aabf85b765e6a4d0d500b6e968657b14726fa3e1eb7e839302728ffd77629a5\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_second_chunk_signature,\n    \"f72aa9642f571d24a6e1ae42f10f073ad9448d8a028b6bcd82da081335adda02\");\n",
                      "markdown": "`    \"e1d8e8c8815e60969f2a34765c9a15945ffc0badbaa4b7e3b163ea19131e949b\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_first_chunk_signature,\n    \"7aabf85b765e6a4d0d500b6e968657b14726fa3e1eb7e839302728ffd77629a5\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_second_chunk_signature,\n    \"f72aa9642f571d24a6e1ae42f10f073ad9448d8a028b6bcd82da081335adda02\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/tests/test_event_signing.c"
                },
                "region": {
                  "startLine": 234,
                  "startColumn": 4,
                  "endLine": 234,
                  "endColumn": 70,
                  "snippet": {
                    "text": "    \"Signature=e1d8e8c8815e60969f2a34765c9a15945ffc0badbaa4b7e3b163ea19131e949b\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_request_signature,\n    \"e1d8e8c8815e60969f2a34765c9a15945ffc0badbaa4b7e3b163ea19131e949b\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_first_chunk_signature,\n    \"7aabf85b765e6a4d0d500b6e968657b14726fa3e1eb7e839302728ffd77629a5\");\n",
                    "rendered": {
                      "text": "    \"Signature=e1d8e8c8815e60969f2a34765c9a15945ffc0badbaa4b7e3b163ea19131e949b\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_request_signature,\n    \"e1d8e8c8815e60969f2a34765c9a15945ffc0badbaa4b7e3b163ea19131e949b\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_first_chunk_signature,\n    \"7aabf85b765e6a4d0d500b6e968657b14726fa3e1eb7e839302728ffd77629a5\");\n",
                      "markdown": "`    \"Signature=e1d8e8c8815e60969f2a34765c9a15945ffc0badbaa4b7e3b163ea19131e949b\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_request_signature,\n    \"e1d8e8c8815e60969f2a34765c9a15945ffc0badbaa4b7e3b163ea19131e949b\");\nAWS_STATIC_STRING_FROM_LITERAL(\n    s_expected_first_chunk_signature,\n    \"7aabf85b765e6a4d0d500b6e968657b14726fa3e1eb7e839302728ffd77629a5\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/include/aws/auth/credentials.h"
                },
                "region": {
                  "startLine": 304,
                  "startColumn": 27,
                  "endLine": 304,
                  "endColumn": 37,
                  "snippet": {
                    "text": "     * Authorization token to include in the credentials query.\n     * No effect if `auth_token_file_path` is set.\n     */\n    struct aws_byte_cursor auth_token;\n\n    /*\n     * Client TLS context to use when making query.\n",
                    "rendered": {
                      "text": "     * Authorization token to include in the credentials query.\n     * No effect if `auth_token_file_path` is set.\n     */\n    struct aws_byte_cursor auth_token;\n\n    /*\n     * Client TLS context to use when making query.\n",
                      "markdown": "`     * Authorization token to include in the credentials query.\n     * No effect if `auth_token_file_path` is set.\n     */\n    struct aws_byte_cursor auth_token;\n\n    /*\n     * Client TLS context to use when making query.\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/include/aws/auth/credentials.h"
                },
                "region": {
                  "startLine": 302,
                  "startColumn": 21,
                  "endLine": 302,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\n    /*\n     * Authorization token to include in the credentials query.\n     * No effect if `auth_token_file_path` is set.\n     */\n    struct aws_byte_cursor auth_token;\n\n",
                    "rendered": {
                      "text": "\n    /*\n     * Authorization token to include in the credentials query.\n     * No effect if `auth_token_file_path` is set.\n     */\n    struct aws_byte_cursor auth_token;\n\n",
                      "markdown": "`\n    /*\n     * Authorization token to include in the credentials query.\n     * No effect if `auth_token_file_path` is set.\n     */\n    struct aws_byte_cursor auth_token;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/include/aws/auth/credentials.h"
                },
                "region": {
                  "startLine": 298,
                  "startColumn": 27,
                  "endLine": 298,
                  "endColumn": 37,
                  "snippet": {
                    "text": "     * get_credentials.\n     * This has higher priority than `auth_token`.\n     */\n    struct aws_byte_cursor auth_token_file_path;\n\n    /*\n     * Authorization token to include in the credentials query.\n",
                    "rendered": {
                      "text": "     * get_credentials.\n     * This has higher priority than `auth_token`.\n     */\n    struct aws_byte_cursor auth_token_file_path;\n\n    /*\n     * Authorization token to include in the credentials query.\n",
                      "markdown": "`     * get_credentials.\n     * This has higher priority than `auth_token`.\n     */\n    struct aws_byte_cursor auth_token_file_path;\n\n    /*\n     * Authorization token to include in the credentials query.\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/include/aws/auth/credentials.h"
                },
                "region": {
                  "startLine": 296,
                  "startColumn": 38,
                  "endLine": 296,
                  "endColumn": 48,
                  "snippet": {
                    "text": "    /*\n     * Authorization token file path to include in the credentials query. The file will be re-read for each call to\n     * get_credentials.\n     * This has higher priority than `auth_token`.\n     */\n    struct aws_byte_cursor auth_token_file_path;\n\n",
                    "rendered": {
                      "text": "    /*\n     * Authorization token file path to include in the credentials query. The file will be re-read for each call to\n     * get_credentials.\n     * This has higher priority than `auth_token`.\n     */\n    struct aws_byte_cursor auth_token_file_path;\n\n",
                      "markdown": "`    /*\n     * Authorization token file path to include in the credentials query. The file will be re-read for each call to\n     * get_credentials.\n     * This has higher priority than `auth_token`.\n     */\n    struct aws_byte_cursor auth_token_file_path;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 40,
                  "endLine": 92,
                  "endColumn": 68,
                  "snippet": {
                    "text": "    - name: Build ${{ env.PACKAGE_NAME }} + consumers\n      run: |\n        python -c \"from urllib.request import urlretrieve; urlretrieve('${{ env.BUILDER_HOST }}/${{ env.BUILDER_SOURCE }}/${{ env.BUILDER_VERSION }}/builder.pyz?run=${{ env.RUN }}', 'builder.pyz')\"\n        python builder.pyz build -p ${{ env.PACKAGE_NAME }} --target windows-${{ matrix.arch }} --compiler msvc-14\n\n  windows-shared-libs:\n    runs-on: windows-2022 # latest\n",
                    "rendered": {
                      "text": "    - name: Build ${{ env.PACKAGE_NAME }} + consumers\n      run: |\n        python -c \"from urllib.request import urlretrieve; urlretrieve('${{ env.BUILDER_HOST }}/${{ env.BUILDER_SOURCE }}/${{ env.BUILDER_VERSION }}/builder.pyz?run=${{ env.RUN }}', 'builder.pyz')\"\n        python builder.pyz build -p ${{ env.PACKAGE_NAME }} --target windows-${{ matrix.arch }} --compiler msvc-14\n\n  windows-shared-libs:\n    runs-on: windows-2022 # latest\n",
                      "markdown": "`    - name: Build ${{ env.PACKAGE_NAME }} + consumers\n      run: |\n        python -c \"from urllib.request import urlretrieve; urlretrieve('${{ env.BUILDER_HOST }}/${{ env.BUILDER_SOURCE }}/${{ env.BUILDER_VERSION }}/builder.pyz?run=${{ env.RUN }}', 'builder.pyz')\"\n        python builder.pyz build -p ${{ env.PACKAGE_NAME }} --target windows-${{ matrix.arch }} --compiler msvc-14\n\n  windows-shared-libs:\n    runs-on: windows-2022 # latest\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 122,
                  "endLine": 139,
                  "endColumn": 129,
                  "snippet": {
                    "text": "      # We can't use the `uses: docker://image` version yet, GitHub lacks authentication for actions -> packages\n      - name: Build ${{ env.PACKAGE_NAME }}\n        run: |\n          aws s3 cp s3://aws-crt-test-stuff/ci/${{ env.BUILDER_VERSION }}/linux-container-ci.sh ./linux-container-ci.sh && chmod a+x ./linux-container-ci.sh\n          ./linux-container-ci.sh ${{ env.BUILDER_VERSION }} aws-crt-${{ env.LINUX_BASE_IMAGE }} build downstream -p ${{ env.PACKAGE_NAME }}\n",
                    "rendered": {
                      "text": "      # We can't use the `uses: docker://image` version yet, GitHub lacks authentication for actions -> packages\n      - name: Build ${{ env.PACKAGE_NAME }}\n        run: |\n          aws s3 cp s3://aws-crt-test-stuff/ci/${{ env.BUILDER_VERSION }}/linux-container-ci.sh ./linux-container-ci.sh && chmod a+x ./linux-container-ci.sh\n          ./linux-container-ci.sh ${{ env.BUILDER_VERSION }} aws-crt-${{ env.LINUX_BASE_IMAGE }} build downstream -p ${{ env.PACKAGE_NAME }}\n",
                      "markdown": "`      # We can't use the `uses: docker://image` version yet, GitHub lacks authentication for actions -> packages\n      - name: Build ${{ env.PACKAGE_NAME }}\n        run: |\n          aws s3 cp s3://aws-crt-test-stuff/ci/${{ env.BUILDER_VERSION }}/linux-container-ci.sh ./linux-container-ci.sh && chmod a+x ./linux-container-ci.sh\n          ./linux-container-ci.sh ${{ env.BUILDER_VERSION }} aws-crt-${{ env.LINUX_BASE_IMAGE }} build downstream -p ${{ env.PACKAGE_NAME }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 16,
                  "endLine": 139,
                  "endColumn": 20,
                  "snippet": {
                    "text": "      # We can't use the `uses: docker://image` version yet, GitHub lacks authentication for actions -> packages\n      - name: Build ${{ env.PACKAGE_NAME }}\n        run: |\n          aws s3 cp s3://aws-crt-test-stuff/ci/${{ env.BUILDER_VERSION }}/linux-container-ci.sh ./linux-container-ci.sh && chmod a+x ./linux-container-ci.sh\n          ./linux-container-ci.sh ${{ env.BUILDER_VERSION }} aws-crt-${{ env.LINUX_BASE_IMAGE }} build downstream -p ${{ env.PACKAGE_NAME }}\n",
                    "rendered": {
                      "text": "      # We can't use the `uses: docker://image` version yet, GitHub lacks authentication for actions -> packages\n      - name: Build ${{ env.PACKAGE_NAME }}\n        run: |\n          aws s3 cp s3://aws-crt-test-stuff/ci/${{ env.BUILDER_VERSION }}/linux-container-ci.sh ./linux-container-ci.sh && chmod a+x ./linux-container-ci.sh\n          ./linux-container-ci.sh ${{ env.BUILDER_VERSION }} aws-crt-${{ env.LINUX_BASE_IMAGE }} build downstream -p ${{ env.PACKAGE_NAME }}\n",
                      "markdown": "`      # We can't use the `uses: docker://image` version yet, GitHub lacks authentication for actions -> packages\n      - name: Build ${{ env.PACKAGE_NAME }}\n        run: |\n          aws s3 cp s3://aws-crt-test-stuff/ci/${{ env.BUILDER_VERSION }}/linux-container-ci.sh ./linux-container-ci.sh && chmod a+x ./linux-container-ci.sh\n          ./linux-container-ci.sh ${{ env.BUILDER_VERSION }} aws-crt-${{ env.LINUX_BASE_IMAGE }} build downstream -p ${{ env.PACKAGE_NAME }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 7,
                  "endLine": 128,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    - name: Build ${{ env.PACKAGE_NAME }} + consumers\n      run: |\n        python3 -c \"from urllib.request import urlretrieve; urlretrieve('${{ env.BUILDER_HOST }}/${{ env.BUILDER_SOURCE }}/${{ env.BUILDER_VERSION }}/builder.pyz?run=${{ env.RUN }}', 'builder')\"\n        chmod a+x builder\n        ./builder build -p ${{ env.PACKAGE_NAME }}\n\n  # Test downstream repos.\n",
                    "rendered": {
                      "text": "    - name: Build ${{ env.PACKAGE_NAME }} + consumers\n      run: |\n        python3 -c \"from urllib.request import urlretrieve; urlretrieve('${{ env.BUILDER_HOST }}/${{ env.BUILDER_SOURCE }}/${{ env.BUILDER_VERSION }}/builder.pyz?run=${{ env.RUN }}', 'builder')\"\n        chmod a+x builder\n        ./builder build -p ${{ env.PACKAGE_NAME }}\n\n  # Test downstream repos.\n",
                      "markdown": "`    - name: Build ${{ env.PACKAGE_NAME }} + consumers\n      run: |\n        python3 -c \"from urllib.request import urlretrieve; urlretrieve('${{ env.BUILDER_HOST }}/${{ env.BUILDER_SOURCE }}/${{ env.BUILDER_VERSION }}/builder.pyz?run=${{ env.RUN }}', 'builder')\"\n        chmod a+x builder\n        ./builder build -p ${{ env.PACKAGE_NAME }}\n\n  # Test downstream repos.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 7,
                  "endLine": 119,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    - name: Build ${{ env.PACKAGE_NAME }} + consumers\n      run: |\n        python3 -c \"from urllib.request import urlretrieve; urlretrieve('${{ env.BUILDER_HOST }}/${{ env.BUILDER_SOURCE }}/${{ env.BUILDER_VERSION }}/builder.pyz?run=${{ env.RUN }}', 'builder')\"\n        chmod a+x builder\n        ./builder build -p ${{ env.PACKAGE_NAME }}\n\n  macos-x64:\n",
                    "rendered": {
                      "text": "    - name: Build ${{ env.PACKAGE_NAME }} + consumers\n      run: |\n        python3 -c \"from urllib.request import urlretrieve; urlretrieve('${{ env.BUILDER_HOST }}/${{ env.BUILDER_SOURCE }}/${{ env.BUILDER_VERSION }}/builder.pyz?run=${{ env.RUN }}', 'builder')\"\n        chmod a+x builder\n        ./builder build -p ${{ env.PACKAGE_NAME }}\n\n  macos-x64:\n",
                      "markdown": "`    - name: Build ${{ env.PACKAGE_NAME }} + consumers\n      run: |\n        python3 -c \"from urllib.request import urlretrieve; urlretrieve('${{ env.BUILDER_HOST }}/${{ env.BUILDER_SOURCE }}/${{ env.BUILDER_VERSION }}/builder.pyz?run=${{ env.RUN }}', 'builder')\"\n        chmod a+x builder\n        ./builder build -p ${{ env.PACKAGE_NAME }}\n\n  macos-x64:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 48,
                  "endLine": 83,
                  "endColumn": 53,
                  "snippet": {
                    "text": "        python builder.pyz build -p ${{ env.PACKAGE_NAME }}\n\n  windows-vc14:\n    runs-on: windows-2019 # windows-2019 is last env with Visual Studio 2015 (v14.0)\n    strategy:\n      fail-fast: false\n      matrix:\n",
                    "rendered": {
                      "text": "        python builder.pyz build -p ${{ env.PACKAGE_NAME }}\n\n  windows-vc14:\n    runs-on: windows-2019 # windows-2019 is last env with Visual Studio 2015 (v14.0)\n    strategy:\n      fail-fast: false\n      matrix:\n",
                      "markdown": "`        python builder.pyz build -p ${{ env.PACKAGE_NAME }}\n\n  windows-vc14:\n    runs-on: windows-2019 # windows-2019 is last env with Visual Studio 2015 (v14.0)\n    strategy:\n      fail-fast: false\n      matrix:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 122,
                  "endLine": 71,
                  "endColumn": 129,
                  "snippet": {
                    "text": "      # We can't use the `uses: docker://image` version yet, GitHub lacks authentication for actions -> packages\n      - name: Build ${{ env.PACKAGE_NAME }}\n        run: |\n          aws s3 cp s3://aws-crt-test-stuff/ci/${{ env.BUILDER_VERSION }}/linux-container-ci.sh ./linux-container-ci.sh && chmod a+x ./linux-container-ci.sh\n          ./linux-container-ci.sh ${{ env.BUILDER_VERSION }} aws-crt-${{ env.LINUX_BASE_IMAGE }} build -p ${{ env.PACKAGE_NAME }} --cmake-extra=-DBUILD_SHARED_LIBS=ON\n\n  windows:\n",
                    "rendered": {
                      "text": "      # We can't use the `uses: docker://image` version yet, GitHub lacks authentication for actions -> packages\n      - name: Build ${{ env.PACKAGE_NAME }}\n        run: |\n          aws s3 cp s3://aws-crt-test-stuff/ci/${{ env.BUILDER_VERSION }}/linux-container-ci.sh ./linux-container-ci.sh && chmod a+x ./linux-container-ci.sh\n          ./linux-container-ci.sh ${{ env.BUILDER_VERSION }} aws-crt-${{ env.LINUX_BASE_IMAGE }} build -p ${{ env.PACKAGE_NAME }} --cmake-extra=-DBUILD_SHARED_LIBS=ON\n\n  windows:\n",
                      "markdown": "`      # We can't use the `uses: docker://image` version yet, GitHub lacks authentication for actions -> packages\n      - name: Build ${{ env.PACKAGE_NAME }}\n        run: |\n          aws s3 cp s3://aws-crt-test-stuff/ci/${{ env.BUILDER_VERSION }}/linux-container-ci.sh ./linux-container-ci.sh && chmod a+x ./linux-container-ci.sh\n          ./linux-container-ci.sh ${{ env.BUILDER_VERSION }} aws-crt-${{ env.LINUX_BASE_IMAGE }} build -p ${{ env.PACKAGE_NAME }} --cmake-extra=-DBUILD_SHARED_LIBS=ON\n\n  windows:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 16,
                  "endLine": 71,
                  "endColumn": 20,
                  "snippet": {
                    "text": "      # We can't use the `uses: docker://image` version yet, GitHub lacks authentication for actions -> packages\n      - name: Build ${{ env.PACKAGE_NAME }}\n        run: |\n          aws s3 cp s3://aws-crt-test-stuff/ci/${{ env.BUILDER_VERSION }}/linux-container-ci.sh ./linux-container-ci.sh && chmod a+x ./linux-container-ci.sh\n          ./linux-container-ci.sh ${{ env.BUILDER_VERSION }} aws-crt-${{ env.LINUX_BASE_IMAGE }} build -p ${{ env.PACKAGE_NAME }} --cmake-extra=-DBUILD_SHARED_LIBS=ON\n\n  windows:\n",
                    "rendered": {
                      "text": "      # We can't use the `uses: docker://image` version yet, GitHub lacks authentication for actions -> packages\n      - name: Build ${{ env.PACKAGE_NAME }}\n        run: |\n          aws s3 cp s3://aws-crt-test-stuff/ci/${{ env.BUILDER_VERSION }}/linux-container-ci.sh ./linux-container-ci.sh && chmod a+x ./linux-container-ci.sh\n          ./linux-container-ci.sh ${{ env.BUILDER_VERSION }} aws-crt-${{ env.LINUX_BASE_IMAGE }} build -p ${{ env.PACKAGE_NAME }} --cmake-extra=-DBUILD_SHARED_LIBS=ON\n\n  windows:\n",
                      "markdown": "`      # We can't use the `uses: docker://image` version yet, GitHub lacks authentication for actions -> packages\n      - name: Build ${{ env.PACKAGE_NAME }}\n        run: |\n          aws s3 cp s3://aws-crt-test-stuff/ci/${{ env.BUILDER_VERSION }}/linux-container-ci.sh ./linux-container-ci.sh && chmod a+x ./linux-container-ci.sh\n          ./linux-container-ci.sh ${{ env.BUILDER_VERSION }} aws-crt-${{ env.LINUX_BASE_IMAGE }} build -p ${{ env.PACKAGE_NAME }} --cmake-extra=-DBUILD_SHARED_LIBS=ON\n\n  windows:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 122,
                  "endLine": 62,
                  "endColumn": 129,
                  "snippet": {
                    "text": "      # We can't use the `uses: docker://image` version yet, GitHub lacks authentication for actions -> packages\n      - name: Build ${{ env.PACKAGE_NAME }}\n        run: |\n          aws s3 cp s3://aws-crt-test-stuff/ci/${{ env.BUILDER_VERSION }}/linux-container-ci.sh ./linux-container-ci.sh && chmod a+x ./linux-container-ci.sh\n          ./linux-container-ci.sh ${{ env.BUILDER_VERSION }} aws-crt-${{ env.LINUX_BASE_IMAGE }} build -p ${{ env.PACKAGE_NAME }} --compiler=${{ matrix.compiler }}\n\n  linux-shared-libs:\n",
                    "rendered": {
                      "text": "      # We can't use the `uses: docker://image` version yet, GitHub lacks authentication for actions -> packages\n      - name: Build ${{ env.PACKAGE_NAME }}\n        run: |\n          aws s3 cp s3://aws-crt-test-stuff/ci/${{ env.BUILDER_VERSION }}/linux-container-ci.sh ./linux-container-ci.sh && chmod a+x ./linux-container-ci.sh\n          ./linux-container-ci.sh ${{ env.BUILDER_VERSION }} aws-crt-${{ env.LINUX_BASE_IMAGE }} build -p ${{ env.PACKAGE_NAME }} --compiler=${{ matrix.compiler }}\n\n  linux-shared-libs:\n",
                      "markdown": "`      # We can't use the `uses: docker://image` version yet, GitHub lacks authentication for actions -> packages\n      - name: Build ${{ env.PACKAGE_NAME }}\n        run: |\n          aws s3 cp s3://aws-crt-test-stuff/ci/${{ env.BUILDER_VERSION }}/linux-container-ci.sh ./linux-container-ci.sh && chmod a+x ./linux-container-ci.sh\n          ./linux-container-ci.sh ${{ env.BUILDER_VERSION }} aws-crt-${{ env.LINUX_BASE_IMAGE }} build -p ${{ env.PACKAGE_NAME }} --compiler=${{ matrix.compiler }}\n\n  linux-shared-libs:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 16,
                  "endLine": 62,
                  "endColumn": 20,
                  "snippet": {
                    "text": "      # We can't use the `uses: docker://image` version yet, GitHub lacks authentication for actions -> packages\n      - name: Build ${{ env.PACKAGE_NAME }}\n        run: |\n          aws s3 cp s3://aws-crt-test-stuff/ci/${{ env.BUILDER_VERSION }}/linux-container-ci.sh ./linux-container-ci.sh && chmod a+x ./linux-container-ci.sh\n          ./linux-container-ci.sh ${{ env.BUILDER_VERSION }} aws-crt-${{ env.LINUX_BASE_IMAGE }} build -p ${{ env.PACKAGE_NAME }} --compiler=${{ matrix.compiler }}\n\n  linux-shared-libs:\n",
                    "rendered": {
                      "text": "      # We can't use the `uses: docker://image` version yet, GitHub lacks authentication for actions -> packages\n      - name: Build ${{ env.PACKAGE_NAME }}\n        run: |\n          aws s3 cp s3://aws-crt-test-stuff/ci/${{ env.BUILDER_VERSION }}/linux-container-ci.sh ./linux-container-ci.sh && chmod a+x ./linux-container-ci.sh\n          ./linux-container-ci.sh ${{ env.BUILDER_VERSION }} aws-crt-${{ env.LINUX_BASE_IMAGE }} build -p ${{ env.PACKAGE_NAME }} --compiler=${{ matrix.compiler }}\n\n  linux-shared-libs:\n",
                      "markdown": "`      # We can't use the `uses: docker://image` version yet, GitHub lacks authentication for actions -> packages\n      - name: Build ${{ env.PACKAGE_NAME }}\n        run: |\n          aws s3 cp s3://aws-crt-test-stuff/ci/${{ env.BUILDER_VERSION }}/linux-container-ci.sh ./linux-container-ci.sh && chmod a+x ./linux-container-ci.sh\n          ./linux-container-ci.sh ${{ env.BUILDER_VERSION }} aws-crt-${{ env.LINUX_BASE_IMAGE }} build -p ${{ env.PACKAGE_NAME }} --compiler=${{ matrix.compiler }}\n\n  linux-shared-libs:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 120,
                  "endLine": 38,
                  "endColumn": 127,
                  "snippet": {
                    "text": "        # We can't use the `uses: docker://image` version yet, GitHub lacks authentication for actions -> packages\n    - name: Build ${{ env.PACKAGE_NAME }}\n      run: |\n        aws s3 cp s3://aws-crt-test-stuff/ci/${{ env.BUILDER_VERSION }}/linux-container-ci.sh ./linux-container-ci.sh && chmod a+x ./linux-container-ci.sh\n        ./linux-container-ci.sh ${{ env.BUILDER_VERSION }} aws-crt-${{ matrix.image }} build -p ${{ env.PACKAGE_NAME }}\n\n  linux-compiler-compat:\n",
                    "rendered": {
                      "text": "        # We can't use the `uses: docker://image` version yet, GitHub lacks authentication for actions -> packages\n    - name: Build ${{ env.PACKAGE_NAME }}\n      run: |\n        aws s3 cp s3://aws-crt-test-stuff/ci/${{ env.BUILDER_VERSION }}/linux-container-ci.sh ./linux-container-ci.sh && chmod a+x ./linux-container-ci.sh\n        ./linux-container-ci.sh ${{ env.BUILDER_VERSION }} aws-crt-${{ matrix.image }} build -p ${{ env.PACKAGE_NAME }}\n\n  linux-compiler-compat:\n",
                      "markdown": "`        # We can't use the `uses: docker://image` version yet, GitHub lacks authentication for actions -> packages\n    - name: Build ${{ env.PACKAGE_NAME }}\n      run: |\n        aws s3 cp s3://aws-crt-test-stuff/ci/${{ env.BUILDER_VERSION }}/linux-container-ci.sh ./linux-container-ci.sh && chmod a+x ./linux-container-ci.sh\n        ./linux-container-ci.sh ${{ env.BUILDER_VERSION }} aws-crt-${{ matrix.image }} build -p ${{ env.PACKAGE_NAME }}\n\n  linux-compiler-compat:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 14,
                  "endLine": 38,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        # We can't use the `uses: docker://image` version yet, GitHub lacks authentication for actions -> packages\n    - name: Build ${{ env.PACKAGE_NAME }}\n      run: |\n        aws s3 cp s3://aws-crt-test-stuff/ci/${{ env.BUILDER_VERSION }}/linux-container-ci.sh ./linux-container-ci.sh && chmod a+x ./linux-container-ci.sh\n        ./linux-container-ci.sh ${{ env.BUILDER_VERSION }} aws-crt-${{ matrix.image }} build -p ${{ env.PACKAGE_NAME }}\n\n  linux-compiler-compat:\n",
                    "rendered": {
                      "text": "        # We can't use the `uses: docker://image` version yet, GitHub lacks authentication for actions -> packages\n    - name: Build ${{ env.PACKAGE_NAME }}\n      run: |\n        aws s3 cp s3://aws-crt-test-stuff/ci/${{ env.BUILDER_VERSION }}/linux-container-ci.sh ./linux-container-ci.sh && chmod a+x ./linux-container-ci.sh\n        ./linux-container-ci.sh ${{ env.BUILDER_VERSION }} aws-crt-${{ matrix.image }} build -p ${{ env.PACKAGE_NAME }}\n\n  linux-compiler-compat:\n",
                      "markdown": "`        # We can't use the `uses: docker://image` version yet, GitHub lacks authentication for actions -> packages\n    - name: Build ${{ env.PACKAGE_NAME }}\n      run: |\n        aws s3 cp s3://aws-crt-test-stuff/ci/${{ env.BUILDER_VERSION }}/linux-container-ci.sh ./linux-container-ci.sh && chmod a+x ./linux-container-ci.sh\n        ./linux-container-ci.sh ${{ env.BUILDER_VERSION }} aws-crt-${{ matrix.image }} build -p ${{ env.PACKAGE_NAME }}\n\n  linux-compiler-compat:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/format-check.py"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 3,
                  "endLine": 43,
                  "endColumn": 8,
                  "snippet": {
                    "text": "if args.inplace_edit:\n    cmd += ['-i']\nelse:\n    cmd += ['--Werror', '--dry-run']\n\nprint(f\"{Path.cwd()}$ {list2cmdline(cmd)}\")\nif run(cmd).returncode:\n",
                    "rendered": {
                      "text": "if args.inplace_edit:\n    cmd += ['-i']\nelse:\n    cmd += ['--Werror', '--dry-run']\n\nprint(f\"{Path.cwd()}$ {list2cmdline(cmd)}\")\nif run(cmd).returncode:\n",
                      "markdown": "`if args.inplace_edit:\n    cmd += ['-i']\nelse:\n    cmd += ['--Werror', '--dry-run']\n\nprint(f\"{Path.cwd()}$ {list2cmdline(cmd)}\")\nif run(cmd).returncode:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/format-check.py"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 3,
                  "endLine": 41,
                  "endColumn": 8,
                  "snippet": {
                    "text": "cmd = ['pipx', 'run', f'clang-format=={CLANG_FORMAT_VERSION}',\n       f'--files={filepaths_file.name}']\nif args.inplace_edit:\n    cmd += ['-i']\nelse:\n    cmd += ['--Werror', '--dry-run']\n\n",
                    "rendered": {
                      "text": "cmd = ['pipx', 'run', f'clang-format=={CLANG_FORMAT_VERSION}',\n       f'--files={filepaths_file.name}']\nif args.inplace_edit:\n    cmd += ['-i']\nelse:\n    cmd += ['--Werror', '--dry-run']\n\n",
                      "markdown": "`cmd = ['pipx', 'run', f'clang-format=={CLANG_FORMAT_VERSION}',\n       f'--files={filepaths_file.name}']\nif args.inplace_edit:\n    cmd += ['-i']\nelse:\n    cmd += ['--Werror', '--dry-run']\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/format-check.py"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 76,
                  "endLine": 38,
                  "endColumn": 4,
                  "snippet": {
                    "text": "filepaths_file.close()\n\n# use pipx to run clang-format from PyPI\n# this is a simple way to run the same clang-format version regardless of OS\ncmd = ['pipx', 'run', f'clang-format=={CLANG_FORMAT_VERSION}',\n       f'--files={filepaths_file.name}']\nif args.inplace_edit:\n    cmd += ['-i']\n",
                    "rendered": {
                      "text": "filepaths_file.close()\n\n# use pipx to run clang-format from PyPI\n# this is a simple way to run the same clang-format version regardless of OS\ncmd = ['pipx', 'run', f'clang-format=={CLANG_FORMAT_VERSION}',\n       f'--files={filepaths_file.name}']\nif args.inplace_edit:\n    cmd += ['-i']\n",
                      "markdown": "`filepaths_file.close()\n\n# use pipx to run clang-format from PyPI\n# this is a simple way to run the same clang-format version regardless of OS\ncmd = ['pipx', 'run', f'clang-format=={CLANG_FORMAT_VERSION}',\n       f'--files={filepaths_file.name}']\nif args.inplace_edit:\n    cmd += ['-i']\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/format-check.py"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 21,
                  "endLine": 26,
                  "endColumn": 29,
                  "snippet": {
                    "text": "filepaths_file = NamedTemporaryFile(delete=False)\nfor dirpath, dirnames, filenames in os.walk('.'):\n    for filename in filenames:\n        # our regexes expect filepath to use forward slash\n        filepath = Path(dirpath, filename).as_posix()\n        if not INCLUDE_REGEX.match(filepath):\n            continue\n",
                    "rendered": {
                      "text": "filepaths_file = NamedTemporaryFile(delete=False)\nfor dirpath, dirnames, filenames in os.walk('.'):\n    for filename in filenames:\n        # our regexes expect filepath to use forward slash\n        filepath = Path(dirpath, filename).as_posix()\n        if not INCLUDE_REGEX.match(filepath):\n            continue\n",
                      "markdown": "`filepaths_file = NamedTemporaryFile(delete=False)\nfor dirpath, dirnames, filenames in os.walk('.'):\n    for filename in filenames:\n        # our regexes expect filepath to use forward slash\n        filepath = Path(dirpath, filename).as_posix()\n        if not INCLUDE_REGEX.match(filepath):\n            continue\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 220,
                  "endLine": 44,
                  "endColumn": 224,
                  "snippet": {
                    "text": "\n\n## Finding contributions to work on\nLooking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels (enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any ['help wanted'](https://github.com/awslabs/aws-c-auth/labels/help%20wanted) issues is a great place to start.\n\n\n## Code of Conduct\n",
                    "rendered": {
                      "text": "\n\n## Finding contributions to work on\nLooking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels (enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any ['help wanted'](https://github.com/awslabs/aws-c-auth/labels/help%20wanted) issues is a great place to start.\n\n\n## Code of Conduct\n",
                      "markdown": "`\n\n## Finding contributions to work on\nLooking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels (enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any ['help wanted'](https://github.com/awslabs/aws-c-auth/labels/help%20wanted) issues is a great place to start.\n\n\n## Code of Conduct\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 7,
                  "endLine": 44,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n\n## Finding contributions to work on\nLooking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels (enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any ['help wanted'](https://github.com/awslabs/aws-c-auth/labels/help%20wanted) issues is a great place to start.\n\n\n## Code of Conduct\n",
                    "rendered": {
                      "text": "\n\n## Finding contributions to work on\nLooking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels (enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any ['help wanted'](https://github.com/awslabs/aws-c-auth/labels/help%20wanted) issues is a great place to start.\n\n\n## Code of Conduct\n",
                      "markdown": "`\n\n## Finding contributions to work on\nLooking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels (enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any ['help wanted'](https://github.com/awslabs/aws-c-auth/labels/help%20wanted) issues is a great place to start.\n\n\n## Code of Conduct\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 38,
                  "endLine": 12,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n## Reporting Bugs/Feature Requests\n\nWe welcome you to use the GitHub issue tracker to report bugs or suggest features.\n\nWhen filing an issue, please check [existing open](https://github.com/awslabs/aws-c-auth/issues), or [recently closed](https://github.com/awslabs/aws-c-auth/issues?utf8=%E2%9C%93&q=is%3Aissue%20is%3Aclosed%20), issues to make sure somebody else hasn't already\nreported the issue. Please try to include as much information as you can. Details like these are incredibly useful:\n",
                    "rendered": {
                      "text": "\n## Reporting Bugs/Feature Requests\n\nWe welcome you to use the GitHub issue tracker to report bugs or suggest features.\n\nWhen filing an issue, please check [existing open](https://github.com/awslabs/aws-c-auth/issues), or [recently closed](https://github.com/awslabs/aws-c-auth/issues?utf8=%E2%9C%93&q=is%3Aissue%20is%3Aclosed%20), issues to make sure somebody else hasn't already\nreported the issue. Please try to include as much information as you can. Details like these are incredibly useful:\n",
                      "markdown": "`\n## Reporting Bugs/Feature Requests\n\nWe welcome you to use the GitHub issue tracker to report bugs or suggest features.\n\nWhen filing an issue, please check [existing open](https://github.com/awslabs/aws-c-auth/issues), or [recently closed](https://github.com/awslabs/aws-c-auth/issues?utf8=%E2%9C%93&q=is%3Aissue%20is%3Aclosed%20), issues to make sure somebody else hasn't already\nreported the issue. Please try to include as much information as you can. Details like these are incredibly useful:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 48,
                  "endLine": 44,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\n\n## Finding contributions to work on\nLooking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels (enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any ['help wanted'](https://github.com/awslabs/aws-c-auth/labels/help%20wanted) issues is a great place to start.\n\n\n## Code of Conduct\n",
                    "rendered": {
                      "text": "\n\n## Finding contributions to work on\nLooking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels (enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any ['help wanted'](https://github.com/awslabs/aws-c-auth/labels/help%20wanted) issues is a great place to start.\n\n\n## Code of Conduct\n",
                      "markdown": "`\n\n## Finding contributions to work on\nLooking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels (enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any ['help wanted'](https://github.com/awslabs/aws-c-auth/labels/help%20wanted) issues is a great place to start.\n\n\n## Code of Conduct\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/aws-c-auth.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 77,
                  "endLine": 28,
                  "endColumn": 83,
                  "snippet": {
                    "text": "\n1. You are working against the latest source on the *main* branch.\n2. You check existing open, and recently merged, pull requests to make sure someone else hasn't addressed the problem already.\n3. You open an issue to discuss any significant work - we would hate for your time to be wasted.\n\nTo send us a pull request, please:\n\n",
                    "rendered": {
                      "text": "\n1. You are working against the latest source on the *main* branch.\n2. You check existing open, and recently merged, pull requests to make sure someone else hasn't addressed the problem already.\n3. You open an issue to discuss any significant work - we would hate for your time to be wasted.\n\nTo send us a pull request, please:\n\n",
                      "markdown": "`\n1. You are working against the latest source on the *main* branch.\n2. You check existing open, and recently merged, pull requests to make sure someone else hasn't addressed the problem already.\n3. You open an issue to discuss any significant work - we would hate for your time to be wasted.\n\nTo send us a pull request, please:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}