{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/gh-label-release-assets.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\nset -o errexit\nset -o nounset\nset -o pipefail\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\nset -o errexit\nset -o nounset\nset -o pipefail\n",
                      "markdown": "`#!/usr/bin/env bash\n\nset -o errexit\nset -o nounset\nset -o pipefail\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/gh-label-release-assets.sh"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "set -o nounset\nset -o pipefail\n\n# Use this script to add labels to GitHub release assets for a given release.\n#\n# Based on the following console workflow:\n#\n",
                    "rendered": {
                      "text": "set -o nounset\nset -o pipefail\n\n# Use this script to add labels to GitHub release assets for a given release.\n#\n# Based on the following console workflow:\n#\n",
                      "markdown": "`set -o nounset\nset -o pipefail\n\n# Use this script to add labels to GitHub release assets for a given release.\n#\n# Based on the following console workflow:\n#\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/gh-label-release-assets.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\nset -o errexit\nset -o nounset\nset -o pipefail\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\nset -o errexit\nset -o nounset\nset -o pipefail\n",
                      "markdown": "`#!/usr/bin/env bash\n\nset -o errexit\nset -o nounset\nset -o pipefail\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/bash-completion/bpftool"
                },
                "region": {
                  "startLine": 881,
                  "startColumn": 59,
                  "endLine": 881,
                  "endColumn": 67,
                  "snippet": {
                    "text": "                *)\n                    [[ $prev == $object ]] && \\\n                        COMPREPLY=( $( compgen -W 'delete dump getnext help \\\n                            lookup pin event_pipe show list update create \\\n                            peek push enqueue pop dequeue freeze' -- \\\n                            \"$cur\" ) )\n                    ;;\n",
                    "rendered": {
                      "text": "                *)\n                    [[ $prev == $object ]] && \\\n                        COMPREPLY=( $( compgen -W 'delete dump getnext help \\\n                            lookup pin event_pipe show list update create \\\n                            peek push enqueue pop dequeue freeze' -- \\\n                            \"$cur\" ) )\n                    ;;\n",
                      "markdown": "`                *)\n                    [[ $prev == $object ]] && \\\n                        COMPREPLY=( $( compgen -W 'delete dump getnext help \\\n                            lookup pin event_pipe show list update create \\\n                            peek push enqueue pop dequeue freeze' -- \\\n                            \"$cur\" ) )\n                    ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/bash-completion/bpftool"
                },
                "region": {
                  "startLine": 449,
                  "startColumn": 24,
                  "endLine": 449,
                  "endColumn": 30,
                  "snippet": {
                    "text": "                    local obj\n\n                    # Propose \"load/loadall\" to complete \"bpftool prog load\",\n                    # or bash tries to complete \"load\" as a filename below.\n                    if [[ ${#words[@]} -eq 3 ]]; then\n                        COMPREPLY=( $( compgen -W \"load loadall\" -- \"$cur\" ) )\n                        return 0\n",
                    "rendered": {
                      "text": "                    local obj\n\n                    # Propose \"load/loadall\" to complete \"bpftool prog load\",\n                    # or bash tries to complete \"load\" as a filename below.\n                    if [[ ${#words[@]} -eq 3 ]]; then\n                        COMPREPLY=( $( compgen -W \"load loadall\" -- \"$cur\" ) )\n                        return 0\n",
                      "markdown": "`                    local obj\n\n                    # Propose \"load/loadall\" to complete \"bpftool prog load\",\n                    # or bash tries to complete \"load\" as a filename below.\n                    if [[ ${#words[@]} -eq 3 ]]; then\n                        COMPREPLY=( $( compgen -W \"load loadall\" -- \"$cur\" ) )\n                        return 0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/bash-completion/bpftool"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 12,
                  "endLine": 1,
                  "endColumn": 18,
                  "snippet": {
                    "text": "# bpftool(8) bash completion                               -*- shell-script -*-\n#\n# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)\n# Copyright (C) 2017-2018 Netronome Systems, Inc.\n",
                    "rendered": {
                      "text": "# bpftool(8) bash completion                               -*- shell-script -*-\n#\n# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)\n# Copyright (C) 2017-2018 Netronome Systems, Inc.\n",
                      "markdown": "`# bpftool(8) bash completion                               -*- shell-script -*-\n#\n# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)\n# Copyright (C) 2017-2018 Netronome Systems, Inc.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/bash-completion/bpftool"
                },
                "region": {
                  "startLine": 1028,
                  "startColumn": 23,
                  "endLine": 1028,
                  "endColumn": 29,
                  "snippet": {
                    "text": "                    ;;\n                attach|detach)\n                    local BPFTOOL_CGROUP_ATTACH_TYPES=\"$(bpftool feature list_builtins attach_types 2>/dev/null | \\\n                        grep '^cgroup_')\"\n                    local ATTACH_FLAGS='multi override'\n                    # Check for $prev = $command first\n                    if [ $prev = $command ]; then\n",
                    "rendered": {
                      "text": "                    ;;\n                attach|detach)\n                    local BPFTOOL_CGROUP_ATTACH_TYPES=\"$(bpftool feature list_builtins attach_types 2>/dev/null | \\\n                        grep '^cgroup_')\"\n                    local ATTACH_FLAGS='multi override'\n                    # Check for $prev = $command first\n                    if [ $prev = $command ]; then\n",
                      "markdown": "`                    ;;\n                attach|detach)\n                    local BPFTOOL_CGROUP_ATTACH_TYPES=\"$(bpftool feature list_builtins attach_types 2>/dev/null | \\\n                        grep '^cgroup_')\"\n                    local ATTACH_FLAGS='multi override'\n                    # Check for $prev = $command first\n                    if [ $prev = $command ]; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/bash-completion/bpftool"
                },
                "region": {
                  "startLine": 706,
                  "startColumn": 31,
                  "endLine": 706,
                  "endColumn": 37,
                  "snippet": {
                    "text": "                            ;;\n                        type)\n                            local BPFTOOL_MAP_CREATE_TYPES=\"$(bpftool feature list_builtins map_types 2>/dev/null | \\\n                                grep -v '^unspec$')\"\n                            COMPREPLY=( $( compgen -W \"$BPFTOOL_MAP_CREATE_TYPES\" -- \"$cur\" ) )\n                            return 0\n                            ;;\n",
                    "rendered": {
                      "text": "                            ;;\n                        type)\n                            local BPFTOOL_MAP_CREATE_TYPES=\"$(bpftool feature list_builtins map_types 2>/dev/null | \\\n                                grep -v '^unspec$')\"\n                            COMPREPLY=( $( compgen -W \"$BPFTOOL_MAP_CREATE_TYPES\" -- \"$cur\" ) )\n                            return 0\n                            ;;\n",
                      "markdown": "`                            ;;\n                        type)\n                            local BPFTOOL_MAP_CREATE_TYPES=\"$(bpftool feature list_builtins map_types 2>/dev/null | \\\n                                grep -v '^unspec$')\"\n                            COMPREPLY=( $( compgen -W \"$BPFTOOL_MAP_CREATE_TYPES\" -- \"$cur\" ) )\n                            return 0\n                            ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/bash-completion/bpftool"
                },
                "region": {
                  "startLine": 449,
                  "startColumn": 24,
                  "endLine": 449,
                  "endColumn": 30,
                  "snippet": {
                    "text": "                    local obj\n\n                    # Propose \"load/loadall\" to complete \"bpftool prog load\",\n                    # or bash tries to complete \"load\" as a filename below.\n                    if [[ ${#words[@]} -eq 3 ]]; then\n                        COMPREPLY=( $( compgen -W \"load loadall\" -- \"$cur\" ) )\n                        return 0\n",
                    "rendered": {
                      "text": "                    local obj\n\n                    # Propose \"load/loadall\" to complete \"bpftool prog load\",\n                    # or bash tries to complete \"load\" as a filename below.\n                    if [[ ${#words[@]} -eq 3 ]]; then\n                        COMPREPLY=( $( compgen -W \"load loadall\" -- \"$cur\" ) )\n                        return 0\n",
                      "markdown": "`                    local obj\n\n                    # Propose \"load/loadall\" to complete \"bpftool prog load\",\n                    # or bash tries to complete \"load\" as a filename below.\n                    if [[ ${#words[@]} -eq 3 ]]; then\n                        COMPREPLY=( $( compgen -W \"load loadall\" -- \"$cur\" ) )\n                        return 0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/bash-completion/bpftool"
                },
                "region": {
                  "startLine": 317,
                  "startColumn": 27,
                  "endLine": 317,
                  "endColumn": 32,
                  "snippet": {
                    "text": "        case $cur in\n            *)\n                COMPREPLY=( $( compgen -W \"$( bpftool help 2>&1 | \\\n                    command sed \\\n                    -e '/OBJECT := /!d' \\\n                    -e 's/.*{//' \\\n                    -e 's/}.*//' \\\n",
                    "rendered": {
                      "text": "        case $cur in\n            *)\n                COMPREPLY=( $( compgen -W \"$( bpftool help 2>&1 | \\\n                    command sed \\\n                    -e '/OBJECT := /!d' \\\n                    -e 's/.*{//' \\\n                    -e 's/}.*//' \\\n",
                      "markdown": "`        case $cur in\n            *)\n                COMPREPLY=( $( compgen -W \"$( bpftool help 2>&1 | \\\n                    command sed \\\n                    -e '/OBJECT := /!d' \\\n                    -e 's/.*{//' \\\n                    -e 's/}.*//' \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/bash-completion/bpftool"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 15,
                  "endLine": 160,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n    local type\n    type=$(bpftool -jp map show $keyword $ref | \\\n        command sed -n 's/.*\"type\": \"\\(.*\\)\",$/\\1/p')\n    [[ -n $type ]] && printf $type\n}\n\n",
                    "rendered": {
                      "text": "\n    local type\n    type=$(bpftool -jp map show $keyword $ref | \\\n        command sed -n 's/.*\"type\": \"\\(.*\\)\",$/\\1/p')\n    [[ -n $type ]] && printf $type\n}\n\n",
                      "markdown": "`\n    local type\n    type=$(bpftool -jp map show $keyword $ref | \\\n        command sed -n 's/.*\"type\": \"\\(.*\\)\",$/\\1/p')\n    [[ -n $type ]] && printf $type\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/bash-completion/bpftool"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 49,
                  "endLine": 125,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\n    obj=$1\n\n    nmaps=$(objdump -j maps -t $obj 2>/dev/null | grep -c 'g     . maps')\n\n    COMPREPLY+=( $( compgen -W \"$(seq 0 $((nmaps - 1)))\" -- \"$cur\" ) )\n}\n",
                    "rendered": {
                      "text": "\n    obj=$1\n\n    nmaps=$(objdump -j maps -t $obj 2>/dev/null | grep -c 'g     . maps')\n\n    COMPREPLY+=( $( compgen -W \"$(seq 0 $((nmaps - 1)))\" -- \"$cur\" ) )\n}\n",
                      "markdown": "`\n    obj=$1\n\n    nmaps=$(objdump -j maps -t $obj 2>/dev/null | grep -c 'g     . maps')\n\n    COMPREPLY+=( $( compgen -W \"$(seq 0 $((nmaps - 1)))\" -- \"$cur\" ) )\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/bash-completion/bpftool"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 15,
                  "endLine": 114,
                  "endColumn": 20,
                  "snippet": {
                    "text": "    obj=$1\n\n    maps=$(objdump -j .maps -t $obj 2>/dev/null | \\\n        command awk '/g     . .maps/ {print $NF}')\n\n    COMPREPLY+=( $( compgen -W \"$maps\" -- \"$cur\" ) )\n}\n",
                    "rendered": {
                      "text": "    obj=$1\n\n    maps=$(objdump -j .maps -t $obj 2>/dev/null | \\\n        command awk '/g     . .maps/ {print $NF}')\n\n    COMPREPLY+=( $( compgen -W \"$maps\" -- \"$cur\" ) )\n}\n",
                      "markdown": "`    obj=$1\n\n    maps=$(objdump -j .maps -t $obj 2>/dev/null | \\\n        command awk '/g     . .maps/ {print $NF}')\n\n    COMPREPLY+=( $( compgen -W \"$maps\" -- \"$cur\" ) )\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/bash-completion/bpftool"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 15,
                  "endLine": 104,
                  "endColumn": 20,
                  "snippet": {
                    "text": "_bpftool_get_link_ids()\n{\n    COMPREPLY+=( $( compgen -W \"$( bpftool -jp link 2>&1 | \\\n        command sed -n 's/.*\"id\": \\(.*\\),$/\\1/p' )\" -- \"$cur\" ) )\n}\n\n_bpftool_get_obj_map_names()\n",
                    "rendered": {
                      "text": "_bpftool_get_link_ids()\n{\n    COMPREPLY+=( $( compgen -W \"$( bpftool -jp link 2>&1 | \\\n        command sed -n 's/.*\"id\": \\(.*\\),$/\\1/p' )\" -- \"$cur\" ) )\n}\n\n_bpftool_get_obj_map_names()\n",
                      "markdown": "`_bpftool_get_link_ids()\n{\n    COMPREPLY+=( $( compgen -W \"$( bpftool -jp link 2>&1 | \\\n        command sed -n 's/.*\"id\": \\(.*\\),$/\\1/p' )\" -- \"$cur\" ) )\n}\n\n_bpftool_get_obj_map_names()\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/bash-completion/bpftool"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 15,
                  "endLine": 98,
                  "endColumn": 20,
                  "snippet": {
                    "text": "_bpftool_get_btf_ids()\n{\n    COMPREPLY+=( $( compgen -W \"$( bpftool -jp btf 2>&1 | \\\n        command sed -n 's/.*\"id\": \\(.*\\),$/\\1/p' )\" -- \"$cur\" ) )\n}\n\n_bpftool_get_link_ids()\n",
                    "rendered": {
                      "text": "_bpftool_get_btf_ids()\n{\n    COMPREPLY+=( $( compgen -W \"$( bpftool -jp btf 2>&1 | \\\n        command sed -n 's/.*\"id\": \\(.*\\),$/\\1/p' )\" -- \"$cur\" ) )\n}\n\n_bpftool_get_link_ids()\n",
                      "markdown": "`_bpftool_get_btf_ids()\n{\n    COMPREPLY+=( $( compgen -W \"$( bpftool -jp btf 2>&1 | \\\n        command sed -n 's/.*\"id\": \\(.*\\),$/\\1/p' )\" -- \"$cur\" ) )\n}\n\n_bpftool_get_link_ids()\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/bash-completion/bpftool"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 15,
                  "endLine": 92,
                  "endColumn": 20,
                  "snippet": {
                    "text": "_bpftool_get_prog_names()\n{\n    COMPREPLY+=( $( compgen -W \"$( bpftool -jp prog 2>&1 | \\\n        command sed -n 's/.*\"name\": \"\\(.*\\)\",$/\\1/p' )\" -- \"$cur\" ) )\n}\n\n_bpftool_get_btf_ids()\n",
                    "rendered": {
                      "text": "_bpftool_get_prog_names()\n{\n    COMPREPLY+=( $( compgen -W \"$( bpftool -jp prog 2>&1 | \\\n        command sed -n 's/.*\"name\": \"\\(.*\\)\",$/\\1/p' )\" -- \"$cur\" ) )\n}\n\n_bpftool_get_btf_ids()\n",
                      "markdown": "`_bpftool_get_prog_names()\n{\n    COMPREPLY+=( $( compgen -W \"$( bpftool -jp prog 2>&1 | \\\n        command sed -n 's/.*\"name\": \"\\(.*\\)\",$/\\1/p' )\" -- \"$cur\" ) )\n}\n\n_bpftool_get_btf_ids()\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/bash-completion/bpftool"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 15,
                  "endLine": 86,
                  "endColumn": 20,
                  "snippet": {
                    "text": "_bpftool_get_prog_tags()\n{\n    COMPREPLY+=( $( compgen -W \"$( bpftool -jp prog 2>&1 | \\\n        command sed -n 's/.*\"tag\": \"\\(.*\\)\",$/\\1/p' )\" -- \"$cur\" ) )\n}\n\n_bpftool_get_prog_names()\n",
                    "rendered": {
                      "text": "_bpftool_get_prog_tags()\n{\n    COMPREPLY+=( $( compgen -W \"$( bpftool -jp prog 2>&1 | \\\n        command sed -n 's/.*\"tag\": \"\\(.*\\)\",$/\\1/p' )\" -- \"$cur\" ) )\n}\n\n_bpftool_get_prog_names()\n",
                      "markdown": "`_bpftool_get_prog_tags()\n{\n    COMPREPLY+=( $( compgen -W \"$( bpftool -jp prog 2>&1 | \\\n        command sed -n 's/.*\"tag\": \"\\(.*\\)\",$/\\1/p' )\" -- \"$cur\" ) )\n}\n\n_bpftool_get_prog_names()\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/bash-completion/bpftool"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 15,
                  "endLine": 80,
                  "endColumn": 20,
                  "snippet": {
                    "text": "_bpftool_get_prog_ids()\n{\n    COMPREPLY+=( $( compgen -W \"$( bpftool -jp prog 2>&1 | \\\n        command sed -n 's/.*\"id\": \\(.*\\),$/\\1/p' )\" -- \"$cur\" ) )\n}\n\n_bpftool_get_prog_tags()\n",
                    "rendered": {
                      "text": "_bpftool_get_prog_ids()\n{\n    COMPREPLY+=( $( compgen -W \"$( bpftool -jp prog 2>&1 | \\\n        command sed -n 's/.*\"id\": \\(.*\\),$/\\1/p' )\" -- \"$cur\" ) )\n}\n\n_bpftool_get_prog_tags()\n",
                      "markdown": "`_bpftool_get_prog_ids()\n{\n    COMPREPLY+=( $( compgen -W \"$( bpftool -jp prog 2>&1 | \\\n        command sed -n 's/.*\"id\": \\(.*\\),$/\\1/p' )\" -- \"$cur\" ) )\n}\n\n_bpftool_get_prog_tags()\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/bash-completion/bpftool"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 15,
                  "endLine": 74,
                  "endColumn": 20,
                  "snippet": {
                    "text": "    local type=\"$1\"\n    COMPREPLY+=( $( compgen -W \"$( bpftool -jp map  2>&1 | \\\n        command grep -C2 \"$type\" | \\\n        command sed -n 's/.*\"name\": \\(.*\\),$/\\1/p' )\" -- \"$cur\" ) )\n}\n\n_bpftool_get_prog_ids()\n",
                    "rendered": {
                      "text": "    local type=\"$1\"\n    COMPREPLY+=( $( compgen -W \"$( bpftool -jp map  2>&1 | \\\n        command grep -C2 \"$type\" | \\\n        command sed -n 's/.*\"name\": \\(.*\\),$/\\1/p' )\" -- \"$cur\" ) )\n}\n\n_bpftool_get_prog_ids()\n",
                      "markdown": "`    local type=\"$1\"\n    COMPREPLY+=( $( compgen -W \"$( bpftool -jp map  2>&1 | \\\n        command grep -C2 \"$type\" | \\\n        command sed -n 's/.*\"name\": \\(.*\\),$/\\1/p' )\" -- \"$cur\" ) )\n}\n\n_bpftool_get_prog_ids()\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/bash-completion/bpftool"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 15,
                  "endLine": 73,
                  "endColumn": 21,
                  "snippet": {
                    "text": "{\n    local type=\"$1\"\n    COMPREPLY+=( $( compgen -W \"$( bpftool -jp map  2>&1 | \\\n        command grep -C2 \"$type\" | \\\n        command sed -n 's/.*\"name\": \\(.*\\),$/\\1/p' )\" -- \"$cur\" ) )\n}\n\n",
                    "rendered": {
                      "text": "{\n    local type=\"$1\"\n    COMPREPLY+=( $( compgen -W \"$( bpftool -jp map  2>&1 | \\\n        command grep -C2 \"$type\" | \\\n        command sed -n 's/.*\"name\": \\(.*\\),$/\\1/p' )\" -- \"$cur\" ) )\n}\n\n",
                      "markdown": "`{\n    local type=\"$1\"\n    COMPREPLY+=( $( compgen -W \"$( bpftool -jp map  2>&1 | \\\n        command grep -C2 \"$type\" | \\\n        command sed -n 's/.*\"name\": \\(.*\\),$/\\1/p' )\" -- \"$cur\" ) )\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/bash-completion/bpftool"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 15,
                  "endLine": 65,
                  "endColumn": 20,
                  "snippet": {
                    "text": "_bpftool_get_map_names()\n{\n    COMPREPLY+=( $( compgen -W \"$( bpftool -jp map  2>&1 | \\\n        command sed -n 's/.*\"name\": \\(.*\\),$/\\1/p' )\" -- \"$cur\" ) )\n}\n\n# Takes map type and adds matching map names to the list of suggestions.\n",
                    "rendered": {
                      "text": "_bpftool_get_map_names()\n{\n    COMPREPLY+=( $( compgen -W \"$( bpftool -jp map  2>&1 | \\\n        command sed -n 's/.*\"name\": \\(.*\\),$/\\1/p' )\" -- \"$cur\" ) )\n}\n\n# Takes map type and adds matching map names to the list of suggestions.\n",
                      "markdown": "`_bpftool_get_map_names()\n{\n    COMPREPLY+=( $( compgen -W \"$( bpftool -jp map  2>&1 | \\\n        command sed -n 's/.*\"name\": \\(.*\\),$/\\1/p' )\" -- \"$cur\" ) )\n}\n\n# Takes map type and adds matching map names to the list of suggestions.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/bash-completion/bpftool"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 15,
                  "endLine": 59,
                  "endColumn": 20,
                  "snippet": {
                    "text": "    local type=\"$1\"\n    COMPREPLY+=( $( compgen -W \"$( bpftool -jp map  2>&1 | \\\n        command grep -C2 \"$type\" | \\\n        command sed -n 's/.*\"id\": \\(.*\\),$/\\1/p' )\" -- \"$cur\" ) )\n}\n\n_bpftool_get_map_names()\n",
                    "rendered": {
                      "text": "    local type=\"$1\"\n    COMPREPLY+=( $( compgen -W \"$( bpftool -jp map  2>&1 | \\\n        command grep -C2 \"$type\" | \\\n        command sed -n 's/.*\"id\": \\(.*\\),$/\\1/p' )\" -- \"$cur\" ) )\n}\n\n_bpftool_get_map_names()\n",
                      "markdown": "`    local type=\"$1\"\n    COMPREPLY+=( $( compgen -W \"$( bpftool -jp map  2>&1 | \\\n        command grep -C2 \"$type\" | \\\n        command sed -n 's/.*\"id\": \\(.*\\),$/\\1/p' )\" -- \"$cur\" ) )\n}\n\n_bpftool_get_map_names()\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/bash-completion/bpftool"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 15,
                  "endLine": 58,
                  "endColumn": 21,
                  "snippet": {
                    "text": "{\n    local type=\"$1\"\n    COMPREPLY+=( $( compgen -W \"$( bpftool -jp map  2>&1 | \\\n        command grep -C2 \"$type\" | \\\n        command sed -n 's/.*\"id\": \\(.*\\),$/\\1/p' )\" -- \"$cur\" ) )\n}\n\n",
                    "rendered": {
                      "text": "{\n    local type=\"$1\"\n    COMPREPLY+=( $( compgen -W \"$( bpftool -jp map  2>&1 | \\\n        command grep -C2 \"$type\" | \\\n        command sed -n 's/.*\"id\": \\(.*\\),$/\\1/p' )\" -- \"$cur\" ) )\n}\n\n",
                      "markdown": "`{\n    local type=\"$1\"\n    COMPREPLY+=( $( compgen -W \"$( bpftool -jp map  2>&1 | \\\n        command grep -C2 \"$type\" | \\\n        command sed -n 's/.*\"id\": \\(.*\\),$/\\1/p' )\" -- \"$cur\" ) )\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/bash-completion/bpftool"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 15,
                  "endLine": 50,
                  "endColumn": 20,
                  "snippet": {
                    "text": "_bpftool_get_map_ids()\n{\n    COMPREPLY+=( $( compgen -W \"$( bpftool -jp map  2>&1 | \\\n        command sed -n 's/.*\"id\": \\(.*\\),$/\\1/p' )\" -- \"$cur\" ) )\n}\n\n# Takes map type and adds matching map ids to the list of suggestions.\n",
                    "rendered": {
                      "text": "_bpftool_get_map_ids()\n{\n    COMPREPLY+=( $( compgen -W \"$( bpftool -jp map  2>&1 | \\\n        command sed -n 's/.*\"id\": \\(.*\\),$/\\1/p' )\" -- \"$cur\" ) )\n}\n\n# Takes map type and adds matching map ids to the list of suggestions.\n",
                      "markdown": "`_bpftool_get_map_ids()\n{\n    COMPREPLY+=( $( compgen -W \"$( bpftool -jp map  2>&1 | \\\n        command sed -n 's/.*\"id\": \\(.*\\),$/\\1/p' )\" -- \"$cur\" ) )\n}\n\n# Takes map type and adds matching map ids to the list of suggestions.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/bash-completion/bpftool"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 12,
                  "endLine": 1,
                  "endColumn": 18,
                  "snippet": {
                    "text": "# bpftool(8) bash completion                               -*- shell-script -*-\n#\n# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)\n# Copyright (C) 2017-2018 Netronome Systems, Inc.\n",
                    "rendered": {
                      "text": "# bpftool(8) bash completion                               -*- shell-script -*-\n#\n# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)\n# Copyright (C) 2017-2018 Netronome Systems, Inc.\n",
                      "markdown": "`# bpftool(8) bash completion                               -*- shell-script -*-\n#\n# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)\n# Copyright (C) 2017-2018 Netronome Systems, Inc.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool-prog.rst"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 52,
                  "endLine": 197,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\n    Keyword **repeat** is used to indicate the number of consecutive runs to\n    perform. Note that output data and context printed to files correspond to\n    the last of those runs. The duration printed out at the end of the runs is\n    an average over all runs performed by the command.\n\n    Not all program types support test run. Among those which do, not all of\n",
                    "rendered": {
                      "text": "\n    Keyword **repeat** is used to indicate the number of consecutive runs to\n    perform. Note that output data and context printed to files correspond to\n    the last of those runs. The duration printed out at the end of the runs is\n    an average over all runs performed by the command.\n\n    Not all program types support test run. Among those which do, not all of\n",
                      "markdown": "`\n    Keyword **repeat** is used to indicate the number of consecutive runs to\n    perform. Note that output data and context printed to files correspond to\n    the last of those runs. The duration printed out at the end of the runs is\n    an average over all runs performed by the command.\n\n    Not all program types support test run. Among those which do, not all of\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool-prog.rst"
                },
                "region": {
                  "startLine": 171,
                  "startColumn": 60,
                  "endLine": 171,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\nbpftool prog tracelog\n    Dump the trace pipe of the system to the console (stdout). Hit <Ctrl+C> to\n    stop printing. BPF programs can write to this trace pipe at runtime with\n    the **bpf_trace_printk**\\ () helper. This should be used only for debugging\n    purposes. For streaming data from BPF programs to user space, one can use\n    perf events (see also **bpftool-map**\\ (8)).\n",
                    "rendered": {
                      "text": "\nbpftool prog tracelog\n    Dump the trace pipe of the system to the console (stdout). Hit <Ctrl+C> to\n    stop printing. BPF programs can write to this trace pipe at runtime with\n    the **bpf_trace_printk**\\ () helper. This should be used only for debugging\n    purposes. For streaming data from BPF programs to user space, one can use\n    perf events (see also **bpftool-map**\\ (8)).\n",
                      "markdown": "`\nbpftool prog tracelog\n    Dump the trace pipe of the system to the console (stdout). Hit <Ctrl+C> to\n    stop printing. BPF programs can write to this trace pipe at runtime with\n    the **bpf_trace_printk**\\ () helper. This should be used only for debugging\n    purposes. For streaming data from BPF programs to user space, one can use\n    perf events (see also **bpftool-map**\\ (8)).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool-prog.rst"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 31,
                  "endLine": 103,
                  "endColumn": 40,
                  "snippet": {
                    "text": "    If **file** is specified, the binary image will instead be written to\n    *FILE*.\n\n    If **visual** is specified, control flow graph (CFG) will be built instead,\n    and eBPF instructions will be presented with CFG in DOT format, on standard\n    output.\n\n",
                    "rendered": {
                      "text": "    If **file** is specified, the binary image will instead be written to\n    *FILE*.\n\n    If **visual** is specified, control flow graph (CFG) will be built instead,\n    and eBPF instructions will be presented with CFG in DOT format, on standard\n    output.\n\n",
                      "markdown": "`    If **file** is specified, the binary image will instead be written to\n    *FILE*.\n\n    If **visual** is specified, control flow graph (CFG) will be built instead,\n    and eBPF instructions will be presented with CFG in DOT format, on standard\n    output.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool-prog.rst"
                },
                "region": {
                  "startLine": 316,
                  "startColumn": 13,
                  "endLine": 316,
                  "endColumn": 17,
                  "snippet": {
                    "text": "   4:   sub    $0x228,%rsp\n        48 81 ec 28 02 00 00\n   b:   sub    $0x28,%rbp\n        48 83 ed 28\n   f:   mov    %rbx,0x0(%rbp)\n        48 89 5d 00\n\n",
                    "rendered": {
                      "text": "   4:   sub    $0x228,%rsp\n        48 81 ec 28 02 00 00\n   b:   sub    $0x28,%rbp\n        48 83 ed 28\n   f:   mov    %rbx,0x0(%rbp)\n        48 89 5d 00\n\n",
                      "markdown": "`   4:   sub    $0x228,%rsp\n        48 81 ec 28 02 00 00\n   b:   sub    $0x28,%rbp\n        48 83 ed 28\n   f:   mov    %rbx,0x0(%rbp)\n        48 89 5d 00\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool-prog.rst"
                },
                "region": {
                  "startLine": 295,
                  "startColumn": 5,
                  "endLine": 295,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    4:   mov    %rbx,0x0(%rbp)\n\n|\n| **# mount -t bpf none /sys/fs/bpf/**\n| **# bpftool prog pin id 10 /sys/fs/bpf/prog**\n| **# bpftool prog load ./my_prog.o /sys/fs/bpf/prog2**\n| **# ls -l /sys/fs/bpf/**\n",
                    "rendered": {
                      "text": "    4:   mov    %rbx,0x0(%rbp)\n\n|\n| **# mount -t bpf none /sys/fs/bpf/**\n| **# bpftool prog pin id 10 /sys/fs/bpf/prog**\n| **# bpftool prog load ./my_prog.o /sys/fs/bpf/prog2**\n| **# ls -l /sys/fs/bpf/**\n",
                      "markdown": "`    4:   mov    %rbx,0x0(%rbp)\n\n|\n| **# mount -t bpf none /sys/fs/bpf/**\n| **# bpftool prog pin id 10 /sys/fs/bpf/prog**\n| **# bpftool prog load ./my_prog.o /sys/fs/bpf/prog2**\n| **# ls -l /sys/fs/bpf/**\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool-prog.rst"
                },
                "region": {
                  "startLine": 223,
                  "startColumn": 35,
                  "endLine": 223,
                  "endColumn": 42,
                  "snippet": {
                    "text": "    Allow loading maps with unknown map definitions.\n\n-n, --nomount\n    Do not automatically attempt to mount any virtual file system (such as\n    tracefs or BPF virtual file system) when necessary.\n\n-L, --use-loader\n",
                    "rendered": {
                      "text": "    Allow loading maps with unknown map definitions.\n\n-n, --nomount\n    Do not automatically attempt to mount any virtual file system (such as\n    tracefs or BPF virtual file system) when necessary.\n\n-L, --use-loader\n",
                      "markdown": "`    Allow loading maps with unknown map definitions.\n\n-n, --nomount\n    Do not automatically attempt to mount any virtual file system (such as\n    tracefs or BPF virtual file system) when necessary.\n\n-L, --use-loader\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool-prog.rst"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 50,
                  "endLine": 137,
                  "endColumn": 56,
                  "snippet": {
                    "text": "    is optional, if not specified program type will be inferred from section\n    names. By default bpftool will create new maps as declared in the ELF\n    object being loaded.  **map** parameter allows for the reuse of existing\n    maps. It can be specified multiple times, each time for a different map.\n    *IDX* refers to index of the map to be replaced in the ELF file counting\n    from 0, while *NAME* allows to replace a map by name. *MAP* specifies the\n    map to use, referring to it by **id** or through a **pinned** file. If\n",
                    "rendered": {
                      "text": "    is optional, if not specified program type will be inferred from section\n    names. By default bpftool will create new maps as declared in the ELF\n    object being loaded.  **map** parameter allows for the reuse of existing\n    maps. It can be specified multiple times, each time for a different map.\n    *IDX* refers to index of the map to be replaced in the ELF file counting\n    from 0, while *NAME* allows to replace a map by name. *MAP* specifies the\n    map to use, referring to it by **id** or through a **pinned** file. If\n",
                      "markdown": "`    is optional, if not specified program type will be inferred from section\n    names. By default bpftool will create new maps as declared in the ELF\n    object being loaded.  **map** parameter allows for the reuse of existing\n    maps. It can be specified multiple times, each time for a different map.\n    *IDX* refers to index of the map to be replaced in the ELF file counting\n    from 0, while *NAME* allows to replace a map by name. *MAP* specifies the\n    map to use, referring to it by **id** or through a **pinned** file. If\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool-prog.rst"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 13,
                  "endLine": 80,
                  "endColumn": 19,
                  "snippet": {
                    "text": "    named attributes (depending on kernel version).\n\n    Since Linux 5.1 the kernel can collect statistics on BPF programs (such as\n    the total time spent running the program, and the number of times it was\n    run). If available, bpftool shows such statistics. However, the kernel does\n    not collect them by defaults, as it slightly impacts performance on each\n    program run. Activation or deactivation of the feature is performed via the\n",
                    "rendered": {
                      "text": "    named attributes (depending on kernel version).\n\n    Since Linux 5.1 the kernel can collect statistics on BPF programs (such as\n    the total time spent running the program, and the number of times it was\n    run). If available, bpftool shows such statistics. However, the kernel does\n    not collect them by defaults, as it slightly impacts performance on each\n    program run. Activation or deactivation of the feature is performed via the\n",
                      "markdown": "`    named attributes (depending on kernel version).\n\n    Since Linux 5.1 the kernel can collect statistics on BPF programs (such as\n    the total time spent running the program, and the number of times it was\n    run). If available, bpftool shows such statistics. However, the kernel does\n    not collect them by defaults, as it slightly impacts performance on each\n    program run. Activation or deactivation of the feature is performed via the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool.rst"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 35,
                  "endLine": 69,
                  "endColumn": 42,
                  "snippet": {
                    "text": "    Allow loading maps with unknown map definitions.\n\n-n, --nomount\n    Do not automatically attempt to mount any virtual file system (such as\n    tracefs or BPF virtual file system) when necessary.\n",
                    "rendered": {
                      "text": "    Allow loading maps with unknown map definitions.\n\n-n, --nomount\n    Do not automatically attempt to mount any virtual file system (such as\n    tracefs or BPF virtual file system) when necessary.\n",
                      "markdown": "`    Allow loading maps with unknown map definitions.\n\n-n, --nomount\n    Do not automatically attempt to mount any virtual file system (such as\n    tracefs or BPF virtual file system) when necessary.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool-link.rst"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 39,
                  "endLine": 71,
                  "endColumn": 46,
                  "snippet": {
                    "text": "        When showing BPF links, show file names of pinned links.\n\n    -n, --nomount\n        Do not automatically attempt to mount any virtual file system (such as\n        tracefs or BPF virtual file system) when necessary.\n\nEXAMPLES\n",
                    "rendered": {
                      "text": "        When showing BPF links, show file names of pinned links.\n\n    -n, --nomount\n        Do not automatically attempt to mount any virtual file system (such as\n        tracefs or BPF virtual file system) when necessary.\n\nEXAMPLES\n",
                      "markdown": "`        When showing BPF links, show file names of pinned links.\n\n    -n, --nomount\n        Do not automatically attempt to mount any virtual file system (such as\n        tracefs or BPF virtual file system) when necessary.\n\nEXAMPLES\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool-cgroup.rst"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 5,
                  "endLine": 140,
                  "endColumn": 12,
                  "snippet": {
                    "text": "EXAMPLES\n========\n|\n| **# mount -t bpf none /sys/fs/bpf/**\n| **# mkdir /sys/fs/cgroup/test.slice**\n| **# bpftool prog load ./device_cgroup.o /sys/fs/bpf/prog**\n| **# bpftool cgroup attach /sys/fs/cgroup/test.slice/ device id 1 allow_multi**\n",
                    "rendered": {
                      "text": "EXAMPLES\n========\n|\n| **# mount -t bpf none /sys/fs/bpf/**\n| **# mkdir /sys/fs/cgroup/test.slice**\n| **# bpftool prog load ./device_cgroup.o /sys/fs/bpf/prog**\n| **# bpftool cgroup attach /sys/fs/cgroup/test.slice/ device id 1 allow_multi**\n",
                      "markdown": "`EXAMPLES\n========\n|\n| **# mount -t bpf none /sys/fs/bpf/**\n| **# mkdir /sys/fs/cgroup/test.slice**\n| **# bpftool prog load ./device_cgroup.o /sys/fs/bpf/prog**\n| **# bpftool cgroup attach /sys/fs/cgroup/test.slice/ device id 1 allow_multi**\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool-map.rst"
                },
                "region": {
                  "startLine": 265,
                  "startColumn": 17,
                  "endLine": 265,
                  "endColumn": 25,
                  "snippet": {
                    "text": "  Found 0 elements\n\n|\n| **# bpftool map update pinned /sys/fs/bpf/bar key 0 0 0 0 value pinned /sys/fs/bpf/foo/debug**\n| **# bpftool map dump pinned /sys/fs/bpf/bar**\n\n::\n",
                    "rendered": {
                      "text": "  Found 0 elements\n\n|\n| **# bpftool map update pinned /sys/fs/bpf/bar key 0 0 0 0 value pinned /sys/fs/bpf/foo/debug**\n| **# bpftool map dump pinned /sys/fs/bpf/bar**\n\n::\n",
                      "markdown": "`  Found 0 elements\n\n|\n| **# bpftool map update pinned /sys/fs/bpf/bar key 0 0 0 0 value pinned /sys/fs/bpf/foo/debug**\n| **# bpftool map dump pinned /sys/fs/bpf/bar**\n\n::\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool-map.rst"
                },
                "region": {
                  "startLine": 226,
                  "startColumn": 69,
                  "endLine": 227,
                  "snippet": {
                    "text": "to other programs that can be used either to \"process\" packets or to \"debug\"\nprocessing. Note that the prog array map MUST be pinned into the BPF virtual\nfile system for the map update to work successfully, as kernel flushes prog\narray maps when they have no more references from user space (and the update\nwould be lost as soon as bpftool exits).\n\n|\n| **# bpftool prog loadall tail_calls.o /sys/fs/bpf/foo type xdp**\n",
                    "rendered": {
                      "text": "to other programs that can be used either to \"process\" packets or to \"debug\"\nprocessing. Note that the prog array map MUST be pinned into the BPF virtual\nfile system for the map update to work successfully, as kernel flushes prog\narray maps when they have no more references from user space (and the update\nwould be lost as soon as bpftool exits).\n\n|\n| **# bpftool prog loadall tail_calls.o /sys/fs/bpf/foo type xdp**\n",
                      "markdown": "`to other programs that can be used either to \"process\" packets or to \"debug\"\nprocessing. Note that the prog array map MUST be pinned into the BPF virtual\nfile system for the map update to work successfully, as kernel flushes prog\narray maps when they have no more references from user space (and the update\nwould be lost as soon as bpftool exits).\n\n|\n| **# bpftool prog loadall tail_calls.o /sys/fs/bpf/foo type xdp**\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool-map.rst"
                },
                "region": {
                  "startLine": 225,
                  "startColumn": 23,
                  "endLine": 225,
                  "endColumn": 31,
                  "snippet": {
                    "text": "defining a prog array map, and with a main function that contains a tail call\nto other programs that can be used either to \"process\" packets or to \"debug\"\nprocessing. Note that the prog array map MUST be pinned into the BPF virtual\nfile system for the map update to work successfully, as kernel flushes prog\narray maps when they have no more references from user space (and the update\nwould be lost as soon as bpftool exits).\n\n",
                    "rendered": {
                      "text": "defining a prog array map, and with a main function that contains a tail call\nto other programs that can be used either to \"process\" packets or to \"debug\"\nprocessing. Note that the prog array map MUST be pinned into the BPF virtual\nfile system for the map update to work successfully, as kernel flushes prog\narray maps when they have no more references from user space (and the update\nwould be lost as soon as bpftool exits).\n\n",
                      "markdown": "`defining a prog array map, and with a main function that contains a tail call\nto other programs that can be used either to \"process\" packets or to \"debug\"\nprocessing. Note that the prog array map MUST be pinned into the BPF virtual\nfile system for the map update to work successfully, as kernel flushes prog\narray maps when they have no more references from user space (and the update\nwould be lost as soon as bpftool exits).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool-map.rst"
                },
                "region": {
                  "startLine": 220,
                  "startColumn": 33,
                  "endLine": 220,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\nNote that map update can also be used in order to change the program references\nhold by a program array map. This can be used, for example, to change the\nprograms used for tail-call jumps at runtime, without having to reload the\nentry-point program. Below is an example for this use case: we load a program\ndefining a prog array map, and with a main function that contains a tail call\nto other programs that can be used either to \"process\" packets or to \"debug\"\n",
                    "rendered": {
                      "text": "\nNote that map update can also be used in order to change the program references\nhold by a program array map. This can be used, for example, to change the\nprograms used for tail-call jumps at runtime, without having to reload the\nentry-point program. Below is an example for this use case: we load a program\ndefining a prog array map, and with a main function that contains a tail call\nto other programs that can be used either to \"process\" packets or to \"debug\"\n",
                      "markdown": "`\nNote that map update can also be used in order to change the program references\nhold by a program array map. This can be used, for example, to change the\nprograms used for tail-call jumps at runtime, without having to reload the\nentry-point program. Below is an example for this use case: we load a program\ndefining a prog array map, and with a main function that contains a tail call\nto other programs that can be used either to \"process\" packets or to \"debug\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool-map.rst"
                },
                "region": {
                  "startLine": 218,
                  "startColumn": 13,
                  "endLine": 218,
                  "endColumn": 21,
                  "snippet": {
                    "text": "| **# bpftool map pin id 10 /sys/fs/bpf/map**\n| **# bpftool map del pinned /sys/fs/bpf/map key 13 00 07 00**\n\nNote that map update can also be used in order to change the program references\nhold by a program array map. This can be used, for example, to change the\nprograms used for tail-call jumps at runtime, without having to reload the\nentry-point program. Below is an example for this use case: we load a program\n",
                    "rendered": {
                      "text": "| **# bpftool map pin id 10 /sys/fs/bpf/map**\n| **# bpftool map del pinned /sys/fs/bpf/map key 13 00 07 00**\n\nNote that map update can also be used in order to change the program references\nhold by a program array map. This can be used, for example, to change the\nprograms used for tail-call jumps at runtime, without having to reload the\nentry-point program. Below is an example for this use case: we load a program\n",
                      "markdown": "`| **# bpftool map pin id 10 /sys/fs/bpf/map**\n| **# bpftool map del pinned /sys/fs/bpf/map key 13 00 07 00**\n\nNote that map update can also be used in order to change the program references\nhold by a program array map. This can be used, for example, to change the\nprograms used for tail-call jumps at runtime, without having to reload the\nentry-point program. Below is an example for this use case: we load a program\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool-map.rst"
                },
                "region": {
                  "startLine": 187,
                  "startColumn": 17,
                  "endLine": 187,
                  "endColumn": 25,
                  "snippet": {
                    "text": "|\n| **# bpftool map update id 10 key hex   20   c4   b7   00 value hex   0f   ff   ff   ab   01   02   03   4c**\n| **# bpftool map update id 10 key     0x20 0xc4 0xb7 0x00 value     0x0f 0xff 0xff 0xab 0x01 0x02 0x03 0x4c**\n| **# bpftool map update id 10 key       32  196  183    0 value       15  255  255  171    1    2    3   76**\n\n**# bpftool map lookup id 10 key 0 1 2 3**\n\n",
                    "rendered": {
                      "text": "|\n| **# bpftool map update id 10 key hex   20   c4   b7   00 value hex   0f   ff   ff   ab   01   02   03   4c**\n| **# bpftool map update id 10 key     0x20 0xc4 0xb7 0x00 value     0x0f 0xff 0xff 0xab 0x01 0x02 0x03 0x4c**\n| **# bpftool map update id 10 key       32  196  183    0 value       15  255  255  171    1    2    3   76**\n\n**# bpftool map lookup id 10 key 0 1 2 3**\n\n",
                      "markdown": "`|\n| **# bpftool map update id 10 key hex   20   c4   b7   00 value hex   0f   ff   ff   ab   01   02   03   4c**\n| **# bpftool map update id 10 key     0x20 0xc4 0xb7 0x00 value     0x0f 0xff 0xff 0xab 0x01 0x02 0x03 0x4c**\n| **# bpftool map update id 10 key       32  196  183    0 value       15  255  255  171    1    2    3   76**\n\n**# bpftool map lookup id 10 key 0 1 2 3**\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool-map.rst"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 17,
                  "endLine": 186,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\n|\n| **# bpftool map update id 10 key hex   20   c4   b7   00 value hex   0f   ff   ff   ab   01   02   03   4c**\n| **# bpftool map update id 10 key     0x20 0xc4 0xb7 0x00 value     0x0f 0xff 0xff 0xab 0x01 0x02 0x03 0x4c**\n| **# bpftool map update id 10 key       32  196  183    0 value       15  255  255  171    1    2    3   76**\n\n**# bpftool map lookup id 10 key 0 1 2 3**\n",
                    "rendered": {
                      "text": "\n|\n| **# bpftool map update id 10 key hex   20   c4   b7   00 value hex   0f   ff   ff   ab   01   02   03   4c**\n| **# bpftool map update id 10 key     0x20 0xc4 0xb7 0x00 value     0x0f 0xff 0xff 0xab 0x01 0x02 0x03 0x4c**\n| **# bpftool map update id 10 key       32  196  183    0 value       15  255  255  171    1    2    3   76**\n\n**# bpftool map lookup id 10 key 0 1 2 3**\n",
                      "markdown": "`\n|\n| **# bpftool map update id 10 key hex   20   c4   b7   00 value hex   0f   ff   ff   ab   01   02   03   4c**\n| **# bpftool map update id 10 key     0x20 0xc4 0xb7 0x00 value     0x0f 0xff 0xff 0xab 0x01 0x02 0x03 0x4c**\n| **# bpftool map update id 10 key       32  196  183    0 value       15  255  255  171    1    2    3   76**\n\n**# bpftool map lookup id 10 key 0 1 2 3**\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool-map.rst"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 17,
                  "endLine": 185,
                  "endColumn": 25,
                  "snippet": {
                    "text": "The following three commands are equivalent:\n\n|\n| **# bpftool map update id 10 key hex   20   c4   b7   00 value hex   0f   ff   ff   ab   01   02   03   4c**\n| **# bpftool map update id 10 key     0x20 0xc4 0xb7 0x00 value     0x0f 0xff 0xff 0xab 0x01 0x02 0x03 0x4c**\n| **# bpftool map update id 10 key       32  196  183    0 value       15  255  255  171    1    2    3   76**\n\n",
                    "rendered": {
                      "text": "The following three commands are equivalent:\n\n|\n| **# bpftool map update id 10 key hex   20   c4   b7   00 value hex   0f   ff   ff   ab   01   02   03   4c**\n| **# bpftool map update id 10 key     0x20 0xc4 0xb7 0x00 value     0x0f 0xff 0xff 0xab 0x01 0x02 0x03 0x4c**\n| **# bpftool map update id 10 key       32  196  183    0 value       15  255  255  171    1    2    3   76**\n\n",
                      "markdown": "`The following three commands are equivalent:\n\n|\n| **# bpftool map update id 10 key hex   20   c4   b7   00 value hex   0f   ff   ff   ab   01   02   03   4c**\n| **# bpftool map update id 10 key     0x20 0xc4 0xb7 0x00 value     0x0f 0xff 0xff 0xab 0x01 0x02 0x03 0x4c**\n| **# bpftool map update id 10 key       32  196  183    0 value       15  255  255  171    1    2    3   76**\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool-map.rst"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 3,
                  "endLine": 130,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    corresponding index in the array.\n\n    If **cpu** and **index** are specified, install perf ring for given **cpu**\n    at **index** in the array (single ring).\n\n    Note that installing a perf ring into an array will silently replace any\n    existing ring.  Any other application will stop receiving events if it\n",
                    "rendered": {
                      "text": "    corresponding index in the array.\n\n    If **cpu** and **index** are specified, install perf ring for given **cpu**\n    at **index** in the array (single ring).\n\n    Note that installing a perf ring into an array will silently replace any\n    existing ring.  Any other application will stop receiving events if it\n",
                      "markdown": "`    corresponding index in the array.\n\n    If **cpu** and **index** are specified, install perf ring for given **cpu**\n    at **index** in the array (single ring).\n\n    Note that installing a perf ring into an array will silently replace any\n    existing ring.  Any other application will stop receiving events if it\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool-map.rst"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 3,
                  "endLine": 98,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n    *UPDATE_FLAGS* can be one of: **any** update existing entry or add if\n    doesn't exit; **exist** update only if entry already exists; **noexist**\n    update only if entry doesn't exist.\n\n    If the **hex** keyword is provided in front of the bytes sequence, the\n    bytes are parsed as hexadecimal values, even if no \"0x\" prefix is added. If\n",
                    "rendered": {
                      "text": "\n    *UPDATE_FLAGS* can be one of: **any** update existing entry or add if\n    doesn't exit; **exist** update only if entry already exists; **noexist**\n    update only if entry doesn't exist.\n\n    If the **hex** keyword is provided in front of the bytes sequence, the\n    bytes are parsed as hexadecimal values, even if no \"0x\" prefix is added. If\n",
                      "markdown": "`\n    *UPDATE_FLAGS* can be one of: **any** update existing entry or add if\n    doesn't exit; **exist** update only if entry already exists; **noexist**\n    update only if entry doesn't exist.\n\n    If the **hex** keyword is provided in front of the bytes sequence, the\n    bytes are parsed as hexadecimal values, even if no \"0x\" prefix is added. If\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool-map.rst"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 27,
                  "endLine": 97,
                  "endColumn": 35,
                  "snippet": {
                    "text": "    Update map entry for a given *KEY*.\n\n    *UPDATE_FLAGS* can be one of: **any** update existing entry or add if\n    doesn't exit; **exist** update only if entry already exists; **noexist**\n    update only if entry doesn't exist.\n\n    If the **hex** keyword is provided in front of the bytes sequence, the\n",
                    "rendered": {
                      "text": "    Update map entry for a given *KEY*.\n\n    *UPDATE_FLAGS* can be one of: **any** update existing entry or add if\n    doesn't exit; **exist** update only if entry already exists; **noexist**\n    update only if entry doesn't exist.\n\n    If the **hex** keyword is provided in front of the bytes sequence, the\n",
                      "markdown": "`    Update map entry for a given *KEY*.\n\n    *UPDATE_FLAGS* can be one of: **any** update existing entry or add if\n    doesn't exit; **exist** update only if entry already exists; **noexist**\n    update only if entry doesn't exist.\n\n    If the **hex** keyword is provided in front of the bytes sequence, the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool-map.rst"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 41,
                  "endLine": 96,
                  "endColumn": 49,
                  "snippet": {
                    "text": "bpftool map update  *MAP* [key *DATA*] [value *VALUE*] [*UPDATE_FLAGS*]\n    Update map entry for a given *KEY*.\n\n    *UPDATE_FLAGS* can be one of: **any** update existing entry or add if\n    doesn't exit; **exist** update only if entry already exists; **noexist**\n    update only if entry doesn't exist.\n\n",
                    "rendered": {
                      "text": "bpftool map update  *MAP* [key *DATA*] [value *VALUE*] [*UPDATE_FLAGS*]\n    Update map entry for a given *KEY*.\n\n    *UPDATE_FLAGS* can be one of: **any** update existing entry or add if\n    doesn't exit; **exist** update only if entry already exists; **noexist**\n    update only if entry doesn't exist.\n\n",
                      "markdown": "`bpftool map update  *MAP* [key *DATA*] [value *VALUE*] [*UPDATE_FLAGS*]\n    Update map entry for a given *KEY*.\n\n    *UPDATE_FLAGS* can be one of: **any** update existing entry or add if\n    doesn't exit; **exist** update only if entry already exists; **noexist**\n    update only if entry doesn't exist.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool-map.rst"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 3,
                  "endLine": 94,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    several maps which will all be dumped.\n\nbpftool map update  *MAP* [key *DATA*] [value *VALUE*] [*UPDATE_FLAGS*]\n    Update map entry for a given *KEY*.\n\n    *UPDATE_FLAGS* can be one of: **any** update existing entry or add if\n    doesn't exit; **exist** update only if entry already exists; **noexist**\n",
                    "rendered": {
                      "text": "    several maps which will all be dumped.\n\nbpftool map update  *MAP* [key *DATA*] [value *VALUE*] [*UPDATE_FLAGS*]\n    Update map entry for a given *KEY*.\n\n    *UPDATE_FLAGS* can be one of: **any** update existing entry or add if\n    doesn't exit; **exist** update only if entry already exists; **noexist**\n",
                      "markdown": "`    several maps which will all be dumped.\n\nbpftool map update  *MAP* [key *DATA*] [value *VALUE*] [*UPDATE_FLAGS*]\n    Update map entry for a given *KEY*.\n\n    *UPDATE_FLAGS* can be one of: **any** update existing entry or add if\n    doesn't exit; **exist** update only if entry already exists; **noexist**\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool-map.rst"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 11,
                  "endLine": 93,
                  "endColumn": 19,
                  "snippet": {
                    "text": "    Dump all entries in a given *MAP*.  In case of **name**, *MAP* may match\n    several maps which will all be dumped.\n\nbpftool map update  *MAP* [key *DATA*] [value *VALUE*] [*UPDATE_FLAGS*]\n    Update map entry for a given *KEY*.\n\n    *UPDATE_FLAGS* can be one of: **any** update existing entry or add if\n",
                    "rendered": {
                      "text": "    Dump all entries in a given *MAP*.  In case of **name**, *MAP* may match\n    several maps which will all be dumped.\n\nbpftool map update  *MAP* [key *DATA*] [value *VALUE*] [*UPDATE_FLAGS*]\n    Update map entry for a given *KEY*.\n\n    *UPDATE_FLAGS* can be one of: **any** update existing entry or add if\n",
                      "markdown": "`    Dump all entries in a given *MAP*.  In case of **name**, *MAP* may match\n    several maps which will all be dumped.\n\nbpftool map update  *MAP* [key *DATA*] [value *VALUE*] [*UPDATE_FLAGS*]\n    Update map entry for a given *KEY*.\n\n    *UPDATE_FLAGS* can be one of: **any** update existing entry or add if\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool-map.rst"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 67,
                  "endLine": 222,
                  "endColumn": 73,
                  "snippet": {
                    "text": "hold by a program array map. This can be used, for example, to change the\nprograms used for tail-call jumps at runtime, without having to reload the\nentry-point program. Below is an example for this use case: we load a program\ndefining a prog array map, and with a main function that contains a tail call\nto other programs that can be used either to \"process\" packets or to \"debug\"\nprocessing. Note that the prog array map MUST be pinned into the BPF virtual\nfile system for the map update to work successfully, as kernel flushes prog\n",
                    "rendered": {
                      "text": "hold by a program array map. This can be used, for example, to change the\nprograms used for tail-call jumps at runtime, without having to reload the\nentry-point program. Below is an example for this use case: we load a program\ndefining a prog array map, and with a main function that contains a tail call\nto other programs that can be used either to \"process\" packets or to \"debug\"\nprocessing. Note that the prog array map MUST be pinned into the BPF virtual\nfile system for the map update to work successfully, as kernel flushes prog\n",
                      "markdown": "`hold by a program array map. This can be used, for example, to change the\nprograms used for tail-call jumps at runtime, without having to reload the\nentry-point program. Below is an example for this use case: we load a program\ndefining a prog array map, and with a main function that contains a tail call\nto other programs that can be used either to \"process\" packets or to \"debug\"\nprocessing. Note that the prog array map MUST be pinned into the BPF virtual\nfile system for the map update to work successfully, as kernel flushes prog\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool-map.rst"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 5,
                  "endLine": 214,
                  "endColumn": 12,
                  "snippet": {
                    "text": "  0d 00 07 00\n\n|\n| **# mount -t bpf none /sys/fs/bpf/**\n| **# bpftool map pin id 10 /sys/fs/bpf/map**\n| **# bpftool map del pinned /sys/fs/bpf/map key 13 00 07 00**\n\n",
                    "rendered": {
                      "text": "  0d 00 07 00\n\n|\n| **# mount -t bpf none /sys/fs/bpf/**\n| **# bpftool map pin id 10 /sys/fs/bpf/map**\n| **# bpftool map del pinned /sys/fs/bpf/map key 13 00 07 00**\n\n",
                      "markdown": "`  0d 00 07 00\n\n|\n| **# mount -t bpf none /sys/fs/bpf/**\n| **# bpftool map pin id 10 /sys/fs/bpf/map**\n| **# bpftool map del pinned /sys/fs/bpf/map key 13 00 07 00**\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool-map.rst"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 35,
                  "endLine": 169,
                  "endColumn": 42,
                  "snippet": {
                    "text": "    Show file names of pinned maps.\n\n-n, --nomount\n    Do not automatically attempt to mount any virtual file system (such as\n    tracefs or BPF virtual file system) when necessary.\n\nEXAMPLES\n",
                    "rendered": {
                      "text": "    Show file names of pinned maps.\n\n-n, --nomount\n    Do not automatically attempt to mount any virtual file system (such as\n    tracefs or BPF virtual file system) when necessary.\n\nEXAMPLES\n",
                      "markdown": "`    Show file names of pinned maps.\n\n-n, --nomount\n    Do not automatically attempt to mount any virtual file system (such as\n    tracefs or BPF virtual file system) when necessary.\n\nEXAMPLES\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/Makefile"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 14,
                  "endLine": 43,
                  "endColumn": 19,
                  "snippet": {
                    "text": "ifndef RST2MAN_DEP\n\t$(error \"rst2man not found, but required to generate man pages\")\nendif\n\t$(QUIET_GEN)( cat $< ; printf \"%b\" $(call see_also,$<) ) | rst2man $(RST2MAN_OPTS) > $@\n\nclean:\n\t$(call QUIET_CLEAN, Documentation)\n",
                    "rendered": {
                      "text": "ifndef RST2MAN_DEP\n\t$(error \"rst2man not found, but required to generate man pages\")\nendif\n\t$(QUIET_GEN)( cat $< ; printf \"%b\" $(call see_also,$<) ) | rst2man $(RST2MAN_OPTS) > $@\n\nclean:\n\t$(call QUIET_CLEAN, Documentation)\n",
                      "markdown": "`ifndef RST2MAN_DEP\n\t$(error \"rst2man not found, but required to generate man pages\")\nendif\n\t$(QUIET_GEN)( cat $< ; printf \"%b\" $(call see_also,$<) ) | rst2man $(RST2MAN_OPTS) > $@\n\nclean:\n\t$(call QUIET_CLEAN, Documentation)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool-btf.rst"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 3,
                  "endLine": 106,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nThis gives an example of default output for all supported BTF kinds.\n\n**$ cat prog.c**\n\n::\n\n",
                    "rendered": {
                      "text": "\nThis gives an example of default output for all supported BTF kinds.\n\n**$ cat prog.c**\n\n::\n\n",
                      "markdown": "`\nThis gives an example of default output for all supported BTF kinds.\n\n**$ cat prog.c**\n\n::\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool-btf.rst"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 26,
                  "endLine": 81,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    Pass a base BTF object. Base BTF objects are typically used with BTF\n    objects for kernel modules. To avoid duplicating all kernel symbols\n    required by modules, BTF objects for modules are \"split\", they are\n    built incrementally on top of the kernel (vmlinux) BTF object. So the\n    base BTF reference should usually point to the kernel BTF.\n\n    When the main BTF object to process (for example, the module BTF to\n",
                    "rendered": {
                      "text": "    Pass a base BTF object. Base BTF objects are typically used with BTF\n    objects for kernel modules. To avoid duplicating all kernel symbols\n    required by modules, BTF objects for modules are \"split\", they are\n    built incrementally on top of the kernel (vmlinux) BTF object. So the\n    base BTF reference should usually point to the kernel BTF.\n\n    When the main BTF object to process (for example, the module BTF to\n",
                      "markdown": "`    Pass a base BTF object. Base BTF objects are typically used with BTF\n    objects for kernel modules. To avoid duplicating all kernel symbols\n    required by modules, BTF objects for modules are \"split\", they are\n    built incrementally on top of the kernel (vmlinux) BTF object. So the\n    base BTF reference should usually point to the kernel BTF.\n\n    When the main BTF object to process (for example, the module BTF to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool-net.rst"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 38,
                  "endLine": 69,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\n    *ATTACH_TYPE* can be of:\n    **xdp** - try native XDP and fallback to generic XDP if NIC driver does not support it;\n    **xdpgeneric** - Generic XDP. runs at generic XDP hook when packet already enters receive path as skb;\n    **xdpdrv** - Native XDP. runs earliest point in driver's receive path;\n    **xdpoffload** - Offload XDP. runs directly on NIC on each packet reception;\n    **tcx_ingress** - Ingress TCX. runs on ingress net traffic;\n",
                    "rendered": {
                      "text": "\n    *ATTACH_TYPE* can be of:\n    **xdp** - try native XDP and fallback to generic XDP if NIC driver does not support it;\n    **xdpgeneric** - Generic XDP. runs at generic XDP hook when packet already enters receive path as skb;\n    **xdpdrv** - Native XDP. runs earliest point in driver's receive path;\n    **xdpoffload** - Offload XDP. runs directly on NIC on each packet reception;\n    **tcx_ingress** - Ingress TCX. runs on ingress net traffic;\n",
                      "markdown": "`\n    *ATTACH_TYPE* can be of:\n    **xdp** - try native XDP and fallback to generic XDP if NIC driver does not support it;\n    **xdpgeneric** - Generic XDP. runs at generic XDP hook when packet already enters receive path as skb;\n    **xdpdrv** - Native XDP. runs earliest point in driver's receive path;\n    **xdpoffload** - Offload XDP. runs directly on NIC on each packet reception;\n    **tcx_ingress** - Ingress TCX. runs on ingress net traffic;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/Makefile.feature"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 47,
                  "endLine": 136,
                  "endColumn": 51,
                  "snippet": {
                    "text": "LLVM_PROBE += '}'\n\n# We need some adjustments for the flags.\n# - $(CFLAGS) was set to parent $(EXTRA_CFLAGS) at the beginning of this file.\n# - $(EXTRA_LDFLAGS) from parent Makefile should be kept as well.\n# - Libraries to use depend on whether we have a static or shared version of\n#   LLVM, pass the llvm-config flag and adjust the list of libraries\n",
                    "rendered": {
                      "text": "LLVM_PROBE += '}'\n\n# We need some adjustments for the flags.\n# - $(CFLAGS) was set to parent $(EXTRA_CFLAGS) at the beginning of this file.\n# - $(EXTRA_LDFLAGS) from parent Makefile should be kept as well.\n# - Libraries to use depend on whether we have a static or shared version of\n#   LLVM, pass the llvm-config flag and adjust the list of libraries\n",
                      "markdown": "`LLVM_PROBE += '}'\n\n# We need some adjustments for the flags.\n# - $(CFLAGS) was set to parent $(EXTRA_CFLAGS) at the beginning of this file.\n# - $(EXTRA_LDFLAGS) from parent Makefile should be kept as well.\n# - Libraries to use depend on whether we have a static or shared version of\n#   LLVM, pass the llvm-config flag and adjust the list of libraries\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/Makefile.feature"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 60,
                  "endLine": 31,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\nCLANG_BPF_CO_RE_PROBE_CMD = \\\n  printf '%s\\n' 'struct s { int i; } __attribute__((preserve_access_index)); struct s foo = {};' | \\\n    $(CLANG) -g -target bpf -S -o - -x c - $(QUIET_STDERR) | grep -q BTF_KIND_VAR\n\nifneq ($(findstring clang-bpf-co-re,$(FEATURE_TESTS)),)\n$(call LOG,Probing: feature-clang-bpf-co-re)\n",
                    "rendered": {
                      "text": "\nCLANG_BPF_CO_RE_PROBE_CMD = \\\n  printf '%s\\n' 'struct s { int i; } __attribute__((preserve_access_index)); struct s foo = {};' | \\\n    $(CLANG) -g -target bpf -S -o - -x c - $(QUIET_STDERR) | grep -q BTF_KIND_VAR\n\nifneq ($(findstring clang-bpf-co-re,$(FEATURE_TESTS)),)\n$(call LOG,Probing: feature-clang-bpf-co-re)\n",
                      "markdown": "`\nCLANG_BPF_CO_RE_PROBE_CMD = \\\n  printf '%s\\n' 'struct s { int i; } __attribute__((preserve_access_index)); struct s foo = {};' | \\\n    $(CLANG) -g -target bpf -S -o - -x c - $(QUIET_STDERR) | grep -q BTF_KIND_VAR\n\nifneq ($(findstring clang-bpf-co-re,$(FEATURE_TESTS)),)\n$(call LOG,Probing: feature-clang-bpf-co-re)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/perf.c"
                },
                "region": {
                  "startLine": 248,
                  "startColumn": 19,
                  "endLine": 248,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\treturn 0;\n}\n\nstatic const struct cmd cmds[] = {\n\t{ \"show\",\tdo_show },\n\t{ \"list\",\tdo_show },\n\t{ \"help\",\tdo_help },\n",
                    "rendered": {
                      "text": "\treturn 0;\n}\n\nstatic const struct cmd cmds[] = {\n\t{ \"show\",\tdo_show },\n\t{ \"list\",\tdo_show },\n\t{ \"help\",\tdo_help },\n",
                      "markdown": "`\treturn 0;\n}\n\nstatic const struct cmd cmds[] = {\n\t{ \"show\",\tdo_show },\n\t{ \"list\",\tdo_show },\n\t{ \"help\",\tdo_help },\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/prog.c"
                },
                "region": {
                  "startLine": 2507,
                  "startColumn": 19,
                  "endLine": 2507,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\treturn 0;\n}\n\nstatic const struct cmd cmds[] = {\n\t{ \"show\",\tdo_show },\n\t{ \"list\",\tdo_show },\n\t{ \"help\",\tdo_help },\n",
                    "rendered": {
                      "text": "\treturn 0;\n}\n\nstatic const struct cmd cmds[] = {\n\t{ \"show\",\tdo_show },\n\t{ \"list\",\tdo_show },\n\t{ \"help\",\tdo_help },\n",
                      "markdown": "`\treturn 0;\n}\n\nstatic const struct cmd cmds[] = {\n\t{ \"show\",\tdo_show },\n\t{ \"list\",\tdo_show },\n\t{ \"help\",\tdo_help },\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/prog.c"
                },
                "region": {
                  "startLine": 2088,
                  "startColumn": 70,
                  "endLine": 2088,
                  "endColumn": 74,
                  "snippet": {
                    "text": "\t\tNEXT_ARG();\n\t}\n\tif (selected_cnt > MAX_NUM_PROFILE_METRICS) {\n\t\tp_err(\"too many (%d) metrics, please specify no more than %d metrics at a time\",\n\t\t      selected_cnt, MAX_NUM_PROFILE_METRICS);\n\t\treturn -1;\n\t}\n",
                    "rendered": {
                      "text": "\t\tNEXT_ARG();\n\t}\n\tif (selected_cnt > MAX_NUM_PROFILE_METRICS) {\n\t\tp_err(\"too many (%d) metrics, please specify no more than %d metrics at a time\",\n\t\t      selected_cnt, MAX_NUM_PROFILE_METRICS);\n\t\treturn -1;\n\t}\n",
                      "markdown": "`\t\tNEXT_ARG();\n\t}\n\tif (selected_cnt > MAX_NUM_PROFILE_METRICS) {\n\t\tp_err(\"too many (%d) metrics, please specify no more than %d metrics at a time\",\n\t\t      selected_cnt, MAX_NUM_PROFILE_METRICS);\n\t\treturn -1;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/prog.c"
                },
                "region": {
                  "startLine": 1939,
                  "startColumn": 18,
                  "endLine": 1939,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t}\n\n\tif (verifier_logs) {\n\t\tstruct dump_data dd = {};\n\n\t\tkernel_syms_load(&dd);\n\t\tdump_xlated_plain(&dd, (void *)gen.insns, gen.insns_sz, false, false);\n",
                    "rendered": {
                      "text": "\t}\n\n\tif (verifier_logs) {\n\t\tstruct dump_data dd = {};\n\n\t\tkernel_syms_load(&dd);\n\t\tdump_xlated_plain(&dd, (void *)gen.insns, gen.insns_sz, false, false);\n",
                      "markdown": "`\t}\n\n\tif (verifier_logs) {\n\t\tstruct dump_data dd = {};\n\n\t\tkernel_syms_load(&dd);\n\t\tdump_xlated_plain(&dd, (void *)gen.insns, gen.insns_sz, false, false);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/prog.c"
                },
                "region": {
                  "startLine": 1736,
                  "startColumn": 19,
                  "endLine": 1736,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\t\ti++;\n\t\t}\n\t\tif (map_replace[j].idx == -1) {\n\t\t\tp_err(\"unable to find map '%s'\", map_replace[j].name);\n\t\t\tgoto err_close_obj;\n\t\t}\n\t\tj++;\n",
                    "rendered": {
                      "text": "\t\t\ti++;\n\t\t}\n\t\tif (map_replace[j].idx == -1) {\n\t\t\tp_err(\"unable to find map '%s'\", map_replace[j].name);\n\t\t\tgoto err_close_obj;\n\t\t}\n\t\tj++;\n",
                      "markdown": "`\t\t\ti++;\n\t\t}\n\t\tif (map_replace[j].idx == -1) {\n\t\t\tp_err(\"unable to find map '%s'\", map_replace[j].name);\n\t\t\tgoto err_close_obj;\n\t\t}\n\t\tj++;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/prog.c"
                },
                "region": {
                  "startLine": 706,
                  "startColumn": 17,
                  "endLine": 706,
                  "endColumn": 21,
                  "snippet": {
                    "text": "{\n\tstruct bpf_prog_linfo *prog_linfo = NULL;\n\tconst char *disasm_opt = NULL;\n\tstruct dump_data dd = {};\n\tvoid *func_info = NULL;\n\tstruct btf *btf = NULL;\n\tchar func_sig[1024];\n",
                    "rendered": {
                      "text": "{\n\tstruct bpf_prog_linfo *prog_linfo = NULL;\n\tconst char *disasm_opt = NULL;\n\tstruct dump_data dd = {};\n\tvoid *func_info = NULL;\n\tstruct btf *btf = NULL;\n\tchar func_sig[1024];\n",
                      "markdown": "`{\n\tstruct bpf_prog_linfo *prog_linfo = NULL;\n\tconst char *disasm_opt = NULL;\n\tstruct dump_data dd = {};\n\tvoid *func_info = NULL;\n\tstruct btf *btf = NULL;\n\tchar func_sig[1024];\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/map.c"
                },
                "region": {
                  "startLine": 1475,
                  "startColumn": 19,
                  "endLine": 1475,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\treturn 0;\n}\n\nstatic const struct cmd cmds[] = {\n\t{ \"show\",\tdo_show },\n\t{ \"list\",\tdo_show },\n\t{ \"help\",\tdo_help },\n",
                    "rendered": {
                      "text": "\treturn 0;\n}\n\nstatic const struct cmd cmds[] = {\n\t{ \"show\",\tdo_show },\n\t{ \"list\",\tdo_show },\n\t{ \"help\",\tdo_help },\n",
                      "markdown": "`\treturn 0;\n}\n\nstatic const struct cmd cmds[] = {\n\t{ \"show\",\tdo_show },\n\t{ \"list\",\tdo_show },\n\t{ \"help\",\tdo_help },\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/map.c"
                },
                "region": {
                  "startLine": 1441,
                  "startColumn": 19,
                  "endLine": 1441,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\t\"                                  entries MAX_ENTRIES name NAME [flags FLAGS] \\\\\\n\"\n\t\t\"                                  [inner_map MAP] [offload_dev NAME]\\n\"\n\t\t\"       %1$s %2$s dump       MAP\\n\"\n\t\t\"       %1$s %2$s update     MAP [key DATA] [value VALUE] [UPDATE_FLAGS]\\n\"\n\t\t\"       %1$s %2$s lookup     MAP [key DATA]\\n\"\n\t\t\"       %1$s %2$s getnext    MAP [key DATA]\\n\"\n\t\t\"       %1$s %2$s delete     MAP  key DATA\\n\"\n",
                    "rendered": {
                      "text": "\t\t\"                                  entries MAX_ENTRIES name NAME [flags FLAGS] \\\\\\n\"\n\t\t\"                                  [inner_map MAP] [offload_dev NAME]\\n\"\n\t\t\"       %1$s %2$s dump       MAP\\n\"\n\t\t\"       %1$s %2$s update     MAP [key DATA] [value VALUE] [UPDATE_FLAGS]\\n\"\n\t\t\"       %1$s %2$s lookup     MAP [key DATA]\\n\"\n\t\t\"       %1$s %2$s getnext    MAP [key DATA]\\n\"\n\t\t\"       %1$s %2$s delete     MAP  key DATA\\n\"\n",
                      "markdown": "`\t\t\"                                  entries MAX_ENTRIES name NAME [flags FLAGS] \\\\\\n\"\n\t\t\"                                  [inner_map MAP] [offload_dev NAME]\\n\"\n\t\t\"       %1$s %2$s dump       MAP\\n\"\n\t\t\"       %1$s %2$s update     MAP [key DATA] [value VALUE] [UPDATE_FLAGS]\\n\"\n\t\t\"       %1$s %2$s lookup     MAP [key DATA]\\n\"\n\t\t\"       %1$s %2$s getnext    MAP [key DATA]\\n\"\n\t\t\"       %1$s %2$s delete     MAP  key DATA\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/map.c"
                },
                "region": {
                  "startLine": 410,
                  "startColumn": 56,
                  "endLine": 410,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\t\t\t}\n\t\t\tif (is_prefix(*argv, \"id\"))\n\t\t\t\tp_info(\"Warning: updating program array via MAP_ID, make sure this map is kept open\\n\"\n\t\t\t\t       \"         by some process or pinned otherwise update will be lost\");\n\n\t\t\tfd = prog_parse_fd(&argc, &argv);\n\t\t\tif (fd < 0)\n",
                    "rendered": {
                      "text": "\t\t\t}\n\t\t\tif (is_prefix(*argv, \"id\"))\n\t\t\t\tp_info(\"Warning: updating program array via MAP_ID, make sure this map is kept open\\n\"\n\t\t\t\t       \"         by some process or pinned otherwise update will be lost\");\n\n\t\t\tfd = prog_parse_fd(&argc, &argv);\n\t\t\tif (fd < 0)\n",
                      "markdown": "`\t\t\t}\n\t\t\tif (is_prefix(*argv, \"id\"))\n\t\t\t\tp_info(\"Warning: updating program array via MAP_ID, make sure this map is kept open\\n\"\n\t\t\t\t       \"         by some process or pinned otherwise update will be lost\");\n\n\t\t\tfd = prog_parse_fd(&argc, &argv);\n\t\t\tif (fd < 0)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/map.c"
                },
                "region": {
                  "startLine": 347,
                  "startColumn": 16,
                  "endLine": 347,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\tif (!*argv) {\n\t\tif (!key && !value)\n\t\t\treturn 0;\n\t\tp_err(\"did not find %s\", key ? \"key\" : \"value\");\n\t\treturn -1;\n\t}\n\n",
                    "rendered": {
                      "text": "\tif (!*argv) {\n\t\tif (!key && !value)\n\t\t\treturn 0;\n\t\tp_err(\"did not find %s\", key ? \"key\" : \"value\");\n\t\treturn -1;\n\t}\n\n",
                      "markdown": "`\tif (!*argv) {\n\t\tif (!key && !value)\n\t\t\treturn 0;\n\t\tp_err(\"did not find %s\", key ? \"key\" : \"value\");\n\t\treturn -1;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/link.c"
                },
                "region": {
                  "startLine": 1231,
                  "startColumn": 19,
                  "endLine": 1231,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\treturn 0;\n}\n\nstatic const struct cmd cmds[] = {\n\t{ \"show\",\tdo_show },\n\t{ \"list\",\tdo_show },\n\t{ \"help\",\tdo_help },\n",
                    "rendered": {
                      "text": "\treturn 0;\n}\n\nstatic const struct cmd cmds[] = {\n\t{ \"show\",\tdo_show },\n\t{ \"list\",\tdo_show },\n\t{ \"help\",\tdo_help },\n",
                      "markdown": "`\treturn 0;\n}\n\nstatic const struct cmd cmds[] = {\n\t{ \"show\",\tdo_show },\n\t{ \"list\",\tdo_show },\n\t{ \"help\",\tdo_help },\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/assets/bpftool_horizontal_color.svg"
                },
                "region": {
                  "startLine": 304,
                  "startColumn": 34,
                  "endLine": 304,
                  "endColumn": 77,
                  "snippet": {
                    "text": ",-0.32211 -2.12423,-0.55027 -3.46067,-0.66282 -0.50117,-0.0423 -1.03529,-0.0679 -1.60067,-0.0688 z m 6.3082,11.83006 c -0.0842,-0.002 -0.10571,0.0452 -0.0787,0.13257 0.0727,-0.0346 0.14329,-0.0691 0.21769,-0.10367 -0.0575,-0.0182 -0.10401,-0.028 -0.13906,-0.0289 z\"\n               sodipodi:nodetypes=\"sssssszszszsssssssssssssccssscssssssccscc\" />\n            <path\n               id=\"path10100-5\"\n               style=\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.307244px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"\n               d=\"m 281.35538,-82.62657 c -0.84239,-0.0121 -1.06349,1.68873 -0.20829,5.645 0.85848,3",
                    "rendered": {
                      "text": ",-0.32211 -2.12423,-0.55027 -3.46067,-0.66282 -0.50117,-0.0423 -1.03529,-0.0679 -1.60067,-0.0688 z m 6.3082,11.83006 c -0.0842,-0.002 -0.10571,0.0452 -0.0787,0.13257 0.0727,-0.0346 0.14329,-0.0691 0.21769,-0.10367 -0.0575,-0.0182 -0.10401,-0.028 -0.13906,-0.0289 z\"\n               sodipodi:nodetypes=\"sssssszszszsssssssssssssccssscssssssccscc\" />\n            <path\n               id=\"path10100-5\"\n               style=\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.307244px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"\n               d=\"m 281.35538,-82.62657 c -0.84239,-0.0121 -1.06349,1.68873 -0.20829,5.645 0.85848,3",
                      "markdown": "`,-0.32211 -2.12423,-0.55027 -3.46067,-0.66282 -0.50117,-0.0423 -1.03529,-0.0679 -1.60067,-0.0688 z m 6.3082,11.83006 c -0.0842,-0.002 -0.10571,0.0452 -0.0787,0.13257 0.0727,-0.0346 0.14329,-0.0691 0.21769,-0.10367 -0.0575,-0.0182 -0.10401,-0.028 -0.13906,-0.0289 z\"\n               sodipodi:nodetypes=\"sssssszszszsssssssssssssccssscssssssccscc\" />\n            <path\n               id=\"path10100-5\"\n               style=\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.307244px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"\n               d=\"m 281.35538,-82.62657 c -0.84239,-0.0121 -1.06349,1.68873 -0.20829,5.645 0.85848,3`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/assets/bpftool_horizontal_color.svg"
                },
                "region": {
                  "startLine": 283,
                  "startColumn": 34,
                  "endLine": 283,
                  "endColumn": 98,
                  "snippet": {
                    "text": " 0.1616,13.003343 1.11168,4.222791 3.33482,7.681514 4.40497,9.393453 1.07016,1.711938 0.98691,1.677166 0.90398,1.642526 -0.44871,-0.399367 -0.93427,-0.831527 -1.1402,-1.014813 -0.20593,-0.183287 -0.20588,-0.183307 -0.0709,0.167107 z\"\n               id=\"path11324-9\"\n               sodipodi:nodetypes=\"cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\"\n               inkscape:original-d=\"m 328.58531,-50.71174 c 0.27008,0.70077 0.53442,1.38707 0.79479,2.06356 -0.35539,-0.18409 -0.71126,-0.36859 -1.06708,-0.55323 -0.52327,-0.0213 -1.04709,-0.0428 -1.57147,-0.0646 0.75528,1.42685 1.50929,2.85156 2.26385,4.27755 -0.42545,0.49102 -0.85091,0.9814 -1.27",
                    "rendered": {
                      "text": " 0.1616,13.003343 1.11168,4.222791 3.33482,7.681514 4.40497,9.393453 1.07016,1.711938 0.98691,1.677166 0.90398,1.642526 -0.44871,-0.399367 -0.93427,-0.831527 -1.1402,-1.014813 -0.20593,-0.183287 -0.20588,-0.183307 -0.0709,0.167107 z\"\n               id=\"path11324-9\"\n               sodipodi:nodetypes=\"cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\"\n               inkscape:original-d=\"m 328.58531,-50.71174 c 0.27008,0.70077 0.53442,1.38707 0.79479,2.06356 -0.35539,-0.18409 -0.71126,-0.36859 -1.06708,-0.55323 -0.52327,-0.0213 -1.04709,-0.0428 -1.57147,-0.0646 0.75528,1.42685 1.50929,2.85156 2.26385,4.27755 -0.42545,0.49102 -0.85091,0.9814 -1.27",
                      "markdown": "` 0.1616,13.003343 1.11168,4.222791 3.33482,7.681514 4.40497,9.393453 1.07016,1.711938 0.98691,1.677166 0.90398,1.642526 -0.44871,-0.399367 -0.93427,-0.831527 -1.1402,-1.014813 -0.20593,-0.183287 -0.20588,-0.183307 -0.0709,0.167107 z\"\n               id=\"path11324-9\"\n               sodipodi:nodetypes=\"cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\"\n               inkscape:original-d=\"m 328.58531,-50.71174 c 0.27008,0.70077 0.53442,1.38707 0.79479,2.06356 -0.35539,-0.18409 -0.71126,-0.36859 -1.06708,-0.55323 -0.52327,-0.0213 -1.04709,-0.0428 -1.57147,-0.0646 0.75528,1.42685 1.50929,2.85156 2.26385,4.27755 -0.42545,0.49102 -0.85091,0.9814 -1.27`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/assets/bpftool_horizontal_color.svg"
                },
                "region": {
                  "startLine": 268,
                  "startColumn": 36,
                  "endLine": 268,
                  "endColumn": 101,
                  "snippet": {
                    "text": "4219,-4.56836 -0.380823,-1.74758 -0.453634,-3.71452 -0.542969,-4.85546 -0.02233,-0.28525 -0.03621,-0.49764 0.02148,-0.63477 0.0577,-0.13713 0.183057,-0.24438 0.541015,-0.33594 0.715917,-0.1831 2.278145,-0.22662 5.441407,-0.16797 z\"\n                 id=\"path17819\"\n                 sodipodi:nodetypes=\"csssssssssssszssssssssscssssccssssscsssssscssssccssssssssssssss\" />\n            </g>\n            <path\n               id=\"path12684\"\n               style=\"fill:#000000;stroke:none;stroke-width:0.307244px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"\n               d=\"m 323.77069,-73.99766 c -1.27623,-0.008 -2.85363,0.62843 -2.98306,3.54669 -0.19722",
                    "rendered": {
                      "text": "4219,-4.56836 -0.380823,-1.74758 -0.453634,-3.71452 -0.542969,-4.85546 -0.02233,-0.28525 -0.03621,-0.49764 0.02148,-0.63477 0.0577,-0.13713 0.183057,-0.24438 0.541015,-0.33594 0.715917,-0.1831 2.278145,-0.22662 5.441407,-0.16797 z\"\n                 id=\"path17819\"\n                 sodipodi:nodetypes=\"csssssssssssszssssssssscssssccssssscsssssscssssccssssssssssssss\" />\n            </g>\n            <path\n               id=\"path12684\"\n               style=\"fill:#000000;stroke:none;stroke-width:0.307244px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"\n               d=\"m 323.77069,-73.99766 c -1.27623,-0.008 -2.85363,0.62843 -2.98306,3.54669 -0.19722",
                      "markdown": "`4219,-4.56836 -0.380823,-1.74758 -0.453634,-3.71452 -0.542969,-4.85546 -0.02233,-0.28525 -0.03621,-0.49764 0.02148,-0.63477 0.0577,-0.13713 0.183057,-0.24438 0.541015,-0.33594 0.715917,-0.1831 2.278145,-0.22662 5.441407,-0.16797 z\"\n                 id=\"path17819\"\n                 sodipodi:nodetypes=\"csssssssssssszssssssssscssssccssssscsssssscssssccssssssssssssss\" />\n            </g>\n            <path\n               id=\"path12684\"\n               style=\"fill:#000000;stroke:none;stroke-width:0.307244px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"\n               d=\"m 323.77069,-73.99766 c -1.27623,-0.008 -2.85363,0.62843 -2.98306,3.54669 -0.19722`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/assets/bpftool_horizontal_color.svg"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 32,
                  "endLine": 201,
                  "endColumn": 280,
                  "snippet": {
                    "text": "614 -2.49634,-1.521065 -3.90766,-1.879869 -1.37202,-0.363623 -2.79953,-0.497374 -4.21631,-0.479625 z m 12.33,7.897705 c -0.13151,0.0973 -0.28996,0.27877 -0.30291,0.005 -0.0518,-0.15568 -0.15927,-0.38657 0.0591,-0.17678 0.0813,0.0572 0.16255,0.11431 0.24383,0.17147 z\"\n             sodipodi:nodetypes=\"cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccscccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\"\n             transform=\"matrix(1.1688387,0,0,1.1688387,193.8161,-218.04774)\" />\n          <g\n             id=\"g939\">\n            <path\n               id=\"path10096-6\"\n               style=\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.307244px;stroke-linecap:butt;stroke-linejoin:miter;stro",
                    "rendered": {
                      "text": "614 -2.49634,-1.521065 -3.90766,-1.879869 -1.37202,-0.363623 -2.79953,-0.497374 -4.21631,-0.479625 z m 12.33,7.897705 c -0.13151,0.0973 -0.28996,0.27877 -0.30291,0.005 -0.0518,-0.15568 -0.15927,-0.38657 0.0591,-0.17678 0.0813,0.0572 0.16255,0.11431 0.24383,0.17147 z\"\n             sodipodi:nodetypes=\"cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccscccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\"\n             transform=\"matrix(1.1688387,0,0,1.1688387,193.8161,-218.04774)\" />\n          <g\n             id=\"g939\">\n            <path\n               id=\"path10096-6\"\n               style=\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.307244px;stroke-linecap:butt;stroke-linejoin:miter;stro",
                      "markdown": "`614 -2.49634,-1.521065 -3.90766,-1.879869 -1.37202,-0.363623 -2.79953,-0.497374 -4.21631,-0.479625 z m 12.33,7.897705 c -0.13151,0.0973 -0.28996,0.27877 -0.30291,0.005 -0.0518,-0.15568 -0.15927,-0.38657 0.0591,-0.17678 0.0813,0.0572 0.16255,0.11431 0.24383,0.17147 z\"\n             sodipodi:nodetypes=\"cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccscccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\"\n             transform=\"matrix(1.1688387,0,0,1.1688387,193.8161,-218.04774)\" />\n          <g\n             id=\"g939\">\n            <path\n               id=\"path10096-6\"\n               style=\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.307244px;stroke-linecap:butt;stroke-linejoin:miter;stro`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/assets/README.md"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 72,
                  "endLine": 33,
                  "snippet": {
                    "text": "\nGreater honeyguides are also brood parasites: the females lay their eggs in the\nnests of birds of different species, and the chicks attempt to get rid of any\ncompetitors as soon as they hatch. Thankfully, Hannah chose not to fight at\nbirth. As for bpftool? Shhhh, we may well have placed it in a particular\npenguin's nest, so it could thrive. But we're happy to report that bpftool\nnever pushed any other project out of the Linux repository!\n\n",
                    "rendered": {
                      "text": "\nGreater honeyguides are also brood parasites: the females lay their eggs in the\nnests of birds of different species, and the chicks attempt to get rid of any\ncompetitors as soon as they hatch. Thankfully, Hannah chose not to fight at\nbirth. As for bpftool? Shhhh, we may well have placed it in a particular\npenguin's nest, so it could thrive. But we're happy to report that bpftool\nnever pushed any other project out of the Linux repository!\n\n",
                      "markdown": "`\nGreater honeyguides are also brood parasites: the females lay their eggs in the\nnests of birds of different species, and the chicks attempt to get rid of any\ncompetitors as soon as they hatch. Thankfully, Hannah chose not to fight at\nbirth. As for bpftool? Shhhh, we may well have placed it in a particular\npenguin's nest, so it could thrive. But we're happy to report that bpftool\nnever pushed any other project out of the Linux repository!\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/docker.yaml"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 18,
                  "endLine": 41,
                  "endColumn": 26,
                  "snippet": {
                    "text": "          docker run --rm --privileged --pid=host bpftool prog\n          docker run --rm --privileged --pid=host bpftool map\n\n      - name: Lint Docker image\n        uses: hadolint/hadolint-action@54c9adbab1582c2ef04b2016b760714a4bfde3cf # v3.1.0\n        with:\n          dockerfile: Dockerfile\n",
                    "rendered": {
                      "text": "          docker run --rm --privileged --pid=host bpftool prog\n          docker run --rm --privileged --pid=host bpftool map\n\n      - name: Lint Docker image\n        uses: hadolint/hadolint-action@54c9adbab1582c2ef04b2016b760714a4bfde3cf # v3.1.0\n        with:\n          dockerfile: Dockerfile\n",
                      "markdown": "`          docker run --rm --privileged --pid=host bpftool prog\n          docker run --rm --privileged --pid=host bpftool map\n\n      - name: Lint Docker image\n        uses: hadolint/hadolint-action@54c9adbab1582c2ef04b2016b760714a4bfde3cf # v3.1.0\n        with:\n          dockerfile: Dockerfile\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/docker.yaml"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 9,
                  "endLine": 39,
                  "endColumn": 17,
                  "snippet": {
                    "text": "        run: |\n          docker run --rm --privileged --pid=host bpftool version\n          docker run --rm --privileged --pid=host bpftool prog\n          docker run --rm --privileged --pid=host bpftool map\n\n      - name: Lint Docker image\n        uses: hadolint/hadolint-action@54c9adbab1582c2ef04b2016b760714a4bfde3cf # v3.1.0\n",
                    "rendered": {
                      "text": "        run: |\n          docker run --rm --privileged --pid=host bpftool version\n          docker run --rm --privileged --pid=host bpftool prog\n          docker run --rm --privileged --pid=host bpftool map\n\n      - name: Lint Docker image\n        uses: hadolint/hadolint-action@54c9adbab1582c2ef04b2016b760714a4bfde3cf # v3.1.0\n",
                      "markdown": "`        run: |\n          docker run --rm --privileged --pid=host bpftool version\n          docker run --rm --privileged --pid=host bpftool prog\n          docker run --rm --privileged --pid=host bpftool map\n\n      - name: Lint Docker image\n        uses: hadolint/hadolint-action@54c9adbab1582c2ef04b2016b760714a4bfde3cf # v3.1.0\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/docker.yaml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 9,
                  "endLine": 38,
                  "endColumn": 17,
                  "snippet": {
                    "text": "      - name: Test bpftool container image\n        run: |\n          docker run --rm --privileged --pid=host bpftool version\n          docker run --rm --privileged --pid=host bpftool prog\n          docker run --rm --privileged --pid=host bpftool map\n\n      - name: Lint Docker image\n",
                    "rendered": {
                      "text": "      - name: Test bpftool container image\n        run: |\n          docker run --rm --privileged --pid=host bpftool version\n          docker run --rm --privileged --pid=host bpftool prog\n          docker run --rm --privileged --pid=host bpftool map\n\n      - name: Lint Docker image\n",
                      "markdown": "`      - name: Test bpftool container image\n        run: |\n          docker run --rm --privileged --pid=host bpftool version\n          docker run --rm --privileged --pid=host bpftool prog\n          docker run --rm --privileged --pid=host bpftool map\n\n      - name: Lint Docker image\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/docker.yaml"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 9,
                  "endLine": 37,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n      - name: Test bpftool container image\n        run: |\n          docker run --rm --privileged --pid=host bpftool version\n          docker run --rm --privileged --pid=host bpftool prog\n          docker run --rm --privileged --pid=host bpftool map\n\n",
                    "rendered": {
                      "text": "\n      - name: Test bpftool container image\n        run: |\n          docker run --rm --privileged --pid=host bpftool version\n          docker run --rm --privileged --pid=host bpftool prog\n          docker run --rm --privileged --pid=host bpftool map\n\n",
                      "markdown": "`\n      - name: Test bpftool container image\n        run: |\n          docker run --rm --privileged --pid=host bpftool version\n          docker run --rm --privileged --pid=host bpftool prog\n          docker run --rm --privileged --pid=host bpftool map\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/docker.yaml"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 9,
                  "endLine": 21,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\njobs:\n  dockerimage:\n    name: Docker image\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout repository\n",
                    "rendered": {
                      "text": "\njobs:\n  dockerimage:\n    name: Docker image\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout repository\n",
                      "markdown": "`\njobs:\n  dockerimage:\n    name: Docker image\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout repository\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/docker.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 5,
                  "endLine": 2,
                  "snippet": {
                    "text": "name: docker\n\non:\n  pull_request:\n    paths:\n",
                    "rendered": {
                      "text": "name: docker\n\non:\n  pull_request:\n    paths:\n",
                      "markdown": "`name: docker\n\non:\n  pull_request:\n    paths:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 353,
                  "endLine": 354,
                  "endColumn": 7,
                  "snippet": {
                    "text": "if ((mailmap_changes == 1)); then\n\tgit add .mailmap\n\tgit commit -s -m \"sync: update .mailmap\n\nUpdate .mailmap based on bpftool's list of contributors and on the\nlatest .mailmap version in the upstream repository.\n\" -- .mailmap\nfi\n",
                    "rendered": {
                      "text": "if ((mailmap_changes == 1)); then\n\tgit add .mailmap\n\tgit commit -s -m \"sync: update .mailmap\n\nUpdate .mailmap based on bpftool's list of contributors and on the\nlatest .mailmap version in the upstream repository.\n\" -- .mailmap\nfi\n",
                      "markdown": "`if ((mailmap_changes == 1)); then\n\tgit add .mailmap\n\tgit commit -s -m \"sync: update .mailmap\n\nUpdate .mailmap based on bpftool's list of contributors and on the\nlatest .mailmap version in the upstream repository.\n\" -- .mailmap\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 352,
                  "startColumn": 24,
                  "endLine": 352,
                  "endColumn": 32,
                  "snippet": {
                    "text": "mailmap_changes=$(git status --porcelain .mailmap | wc -l)\nif ((mailmap_changes == 1)); then\n\tgit add .mailmap\n\tgit commit -s -m \"sync: update .mailmap\n\nUpdate .mailmap based on bpftool's list of contributors and on the\nlatest .mailmap version in the upstream repository.\n",
                    "rendered": {
                      "text": "mailmap_changes=$(git status --porcelain .mailmap | wc -l)\nif ((mailmap_changes == 1)); then\n\tgit add .mailmap\n\tgit commit -s -m \"sync: update .mailmap\n\nUpdate .mailmap based on bpftool's list of contributors and on the\nlatest .mailmap version in the upstream repository.\n",
                      "markdown": "`mailmap_changes=$(git status --porcelain .mailmap | wc -l)\nif ((mailmap_changes == 1)); then\n\tgit add .mailmap\n\tgit commit -s -m \"sync: update .mailmap\n\nUpdate .mailmap based on bpftool's list of contributors and on the\nlatest .mailmap version in the upstream repository.\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 279,
                  "startColumn": 29,
                  "endLine": 279,
                  "endColumn": 33,
                  "snippet": {
                    "text": "BPF_TIP_TAG=\"bpftool-bpf-tip-${SUFFIX}\"\nVIEW_TAG=\"bpftool-view-${SUFFIX}\"\n\n# Squash state of kernel repo at baseline into single commit\nSQUASH_BASE_TAG=\"bpftool-squash-base-${SUFFIX}\"\nSQUASH_TIP_TAG=\"bpftool-squash-tip-${SUFFIX}\"\nSQUASH_COMMIT=$(git commit-tree \"${BASELINE_COMMIT}^{tree}\" -m \"BASELINE SQUASH ${BASELINE_COMMIT}\")\n",
                    "rendered": {
                      "text": "BPF_TIP_TAG=\"bpftool-bpf-tip-${SUFFIX}\"\nVIEW_TAG=\"bpftool-view-${SUFFIX}\"\n\n# Squash state of kernel repo at baseline into single commit\nSQUASH_BASE_TAG=\"bpftool-squash-base-${SUFFIX}\"\nSQUASH_TIP_TAG=\"bpftool-squash-tip-${SUFFIX}\"\nSQUASH_COMMIT=$(git commit-tree \"${BASELINE_COMMIT}^{tree}\" -m \"BASELINE SQUASH ${BASELINE_COMMIT}\")\n",
                      "markdown": "`BPF_TIP_TAG=\"bpftool-bpf-tip-${SUFFIX}\"\nVIEW_TAG=\"bpftool-view-${SUFFIX}\"\n\n# Squash state of kernel repo at baseline into single commit\nSQUASH_BASE_TAG=\"bpftool-squash-base-${SUFFIX}\"\nSQUASH_TIP_TAG=\"bpftool-squash-tip-${SUFFIX}\"\nSQUASH_COMMIT=$(git commit-tree \"${BASELINE_COMMIT}^{tree}\" -m \"BASELINE SQUASH ${BASELINE_COMMIT}\")\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 245,
                  "startColumn": 32,
                  "endLine": 245,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\tcd_to \"${BPFTOOL_REPO}\"\n\tif [[ -n \"$(git status --porcelain --untracked-files=no)\" ]]; then\n\t\tgit add libbpf\n\t\tgit commit --signoff -m 'sync: Update libbpf submodule' \\\n\t\t\t-m \"\\\nPull latest libbpf from mirror.\nLibbpf version: ${LIBBPF_VERSION}\n",
                    "rendered": {
                      "text": "\tcd_to \"${BPFTOOL_REPO}\"\n\tif [[ -n \"$(git status --porcelain --untracked-files=no)\" ]]; then\n\t\tgit add libbpf\n\t\tgit commit --signoff -m 'sync: Update libbpf submodule' \\\n\t\t\t-m \"\\\nPull latest libbpf from mirror.\nLibbpf version: ${LIBBPF_VERSION}\n",
                      "markdown": "`\tcd_to \"${BPFTOOL_REPO}\"\n\tif [[ -n \"$(git status --porcelain --untracked-files=no)\" ]]; then\n\t\tgit add libbpf\n\t\tgit commit --signoff -m 'sync: Update libbpf submodule' \\\n\t\t\t-m \"\\\nPull latest libbpf from mirror.\nLibbpf version: ${LIBBPF_VERSION}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 236,
                  "startColumn": 1,
                  "endLine": 236,
                  "endColumn": 9,
                  "snippet": {
                    "text": "BPFTOOL_SYNC_TAG=\"bpftool-sync-${SUFFIX}\"\ngit checkout -b \"${BPFTOOL_SYNC_TAG}\"\n\n# Update libbpf\nif [[ \"${SKIP_LIBBPF_UPDATE:-0}\" -ne 1 ]]; then\n\tcd_to \"${BPFTOOL_REPO}\"/libbpf\n\tgit pull origin master\n",
                    "rendered": {
                      "text": "BPFTOOL_SYNC_TAG=\"bpftool-sync-${SUFFIX}\"\ngit checkout -b \"${BPFTOOL_SYNC_TAG}\"\n\n# Update libbpf\nif [[ \"${SKIP_LIBBPF_UPDATE:-0}\" -ne 1 ]]; then\n\tcd_to \"${BPFTOOL_REPO}\"/libbpf\n\tgit pull origin master\n",
                      "markdown": "`BPFTOOL_SYNC_TAG=\"bpftool-sync-${SUFFIX}\"\ngit checkout -b \"${BPFTOOL_SYNC_TAG}\"\n\n# Update libbpf\nif [[ \"${SKIP_LIBBPF_UPDATE:-0}\" -ne 1 ]]; then\n\tcd_to \"${BPFTOOL_REPO}\"/libbpf\n\tgit pull origin master\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 209,
                  "startColumn": 32,
                  "endLine": 209,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t\tfi\n\t\t# Append signature of just cherry-picked commit to avoid\n\t\t# potentially cherry-picking the same commit twice later when\n\t\t# processing bpf tree commits. At this point we don't know yet\n\t\t# the final commit sha in bpftool repo, so we record Linux SHA\n\t\t# instead as LINUX_<sha>.\n\t\techo \"LINUX_$(git log --pretty='%h' -n1) ${signature}\" >> \"${TMP_DIR}\"/bpftool_commits.txt\n",
                    "rendered": {
                      "text": "\t\tfi\n\t\t# Append signature of just cherry-picked commit to avoid\n\t\t# potentially cherry-picking the same commit twice later when\n\t\t# processing bpf tree commits. At this point we don't know yet\n\t\t# the final commit sha in bpftool repo, so we record Linux SHA\n\t\t# instead as LINUX_<sha>.\n\t\techo \"LINUX_$(git log --pretty='%h' -n1) ${signature}\" >> \"${TMP_DIR}\"/bpftool_commits.txt\n",
                      "markdown": "`\t\tfi\n\t\t# Append signature of just cherry-picked commit to avoid\n\t\t# potentially cherry-picking the same commit twice later when\n\t\t# processing bpf tree commits. At this point we don't know yet\n\t\t# the final commit sha in bpftool repo, so we record Linux SHA\n\t\t# instead as LINUX_<sha>.\n\t\techo \"LINUX_$(git log --pretty='%h' -n1) ${signature}\" >> \"${TMP_DIR}\"/bpftool_commits.txt\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 22,
                  "endLine": 111,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# - full commit subject\n# - author date in ISO8601 format\n# - full commit body with newlines replaced with vertical bars (|)\n# - shortstat appended at the end\n# The idea is that this single-line signature is good enough to make final\n# decision about whether two commits are the same, across different repos.\n# $1 - commit ref\n",
                    "rendered": {
                      "text": "# - full commit subject\n# - author date in ISO8601 format\n# - full commit body with newlines replaced with vertical bars (|)\n# - shortstat appended at the end\n# The idea is that this single-line signature is good enough to make final\n# decision about whether two commits are the same, across different repos.\n# $1 - commit ref\n",
                      "markdown": "`# - full commit subject\n# - author date in ISO8601 format\n# - full commit body with newlines replaced with vertical bars (|)\n# - shortstat appended at the end\n# The idea is that this single-line signature is good enough to make final\n# decision about whether two commits are the same, across different repos.\n# $1 - commit ref\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 39,
                  "endLine": 19,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\techo \"Set BPF_NEXT_TIP_COMMIT to override bpf-next tree target commit, otherwise read from <bpftool-repo>/libbpf/CHECKPOINT-COMMIT, after libbpf update.\"\n\techo \"Set BPF_TIP_COMMIT to override bpf tree target commit, otherwise read from <bpftool-repo>/libbpf/BPF-CHECKPOINT-COMMIT, after libbpf update.\"\n\techo \"Set SKIP_LIBBPF_UPDATE to 1 to avoid updating libbpf automatically.\"\n\techo \"Set MANUAL_MODE to 1 to manually control every cherry-picked commit.\"\n\texit 1\n}\n\n",
                    "rendered": {
                      "text": "\techo \"Set BPF_NEXT_TIP_COMMIT to override bpf-next tree target commit, otherwise read from <bpftool-repo>/libbpf/CHECKPOINT-COMMIT, after libbpf update.\"\n\techo \"Set BPF_TIP_COMMIT to override bpf tree target commit, otherwise read from <bpftool-repo>/libbpf/BPF-CHECKPOINT-COMMIT, after libbpf update.\"\n\techo \"Set SKIP_LIBBPF_UPDATE to 1 to avoid updating libbpf automatically.\"\n\techo \"Set MANUAL_MODE to 1 to manually control every cherry-picked commit.\"\n\texit 1\n}\n\n",
                      "markdown": "`\techo \"Set BPF_NEXT_TIP_COMMIT to override bpf-next tree target commit, otherwise read from <bpftool-repo>/libbpf/CHECKPOINT-COMMIT, after libbpf update.\"\n\techo \"Set BPF_TIP_COMMIT to override bpf tree target commit, otherwise read from <bpftool-repo>/libbpf/BPF-CHECKPOINT-COMMIT, after libbpf update.\"\n\techo \"Set SKIP_LIBBPF_UPDATE to 1 to avoid updating libbpf automatically.\"\n\techo \"Set MANUAL_MODE to 1 to manually control every cherry-picked commit.\"\n\texit 1\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 10,
                  "endLine": 8,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\techo \"\"\n\techo \"This script synchronizes the mirror with upstream bpftool sources from the kernel repository.\"\n\techo \"It performs the following steps:\"\n\techo \"  - Update the libbpf submodule, commit, and use its new checkpoints as target commits for bpftool.\"\n\techo \"  - Cherry-pick commits from the bpf-next branch, up to the bpf-next target commit.\"\n\techo \"  - Cherry-pick commits from the bpf branch, up to the bpf target commit.\"\n\techo \"  - Create a new commit with the updated version and checkpoints.\"\n",
                    "rendered": {
                      "text": "\techo \"\"\n\techo \"This script synchronizes the mirror with upstream bpftool sources from the kernel repository.\"\n\techo \"It performs the following steps:\"\n\techo \"  - Update the libbpf submodule, commit, and use its new checkpoints as target commits for bpftool.\"\n\techo \"  - Cherry-pick commits from the bpf-next branch, up to the bpf-next target commit.\"\n\techo \"  - Cherry-pick commits from the bpf branch, up to the bpf target commit.\"\n\techo \"  - Create a new commit with the updated version and checkpoints.\"\n",
                      "markdown": "`\techo \"\"\n\techo \"This script synchronizes the mirror with upstream bpftool sources from the kernel repository.\"\n\techo \"It performs the following steps:\"\n\techo \"  - Update the libbpf submodule, commit, and use its new checkpoints as target commits for bpftool.\"\n\techo \"  - Cherry-pick commits from the bpf-next branch, up to the bpf-next target commit.\"\n\techo \"  - Cherry-pick commits from the bpf branch, up to the bpf target commit.\"\n\techo \"  - Create a new commit with the updated version and checkpoints.\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\nusage () {\n\techo \"USAGE: ./sync-kernel.sh <bpftool-repo> <kernel-repo>\"\n\techo \"\"\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\nusage () {\n\techo \"USAGE: ./sync-kernel.sh <bpftool-repo> <kernel-repo>\"\n\techo \"\"\n",
                      "markdown": "`#!/usr/bin/env bash\n\nusage () {\n\techo \"USAGE: ./sync-kernel.sh <bpftool-repo> <kernel-repo>\"\n\techo \"\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 423,
                  "startColumn": 14,
                  "endLine": 423,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\techo \"------\"\n\techo \"    (cd \\\"${LINUX_ABS_DIR}\\\" && git -c advice.detachedHead=false checkout HEAD~)\"\n\techo \"    for f in \\$(cat \\\"${TMP_DIR}/linux-view.ls\\\"); do\"\n\techo \"        diff -u --label \\\"\\${f}\\\" --label \\\"\\${f}\\\" \\\\\"\n\techo \"            \\\"${LINUX_ABS_DIR}/\\${f}\\\" \\\\\"\n\techo \"            \\\"${GITHUB_ABS_DIR}/\\${f}\\\"\"\n\techo \"    done > \\\"${GITHUB_ABS_DIR}/scripts/sync-kernel-expected-diff.patch\\\"\"\n",
                    "rendered": {
                      "text": "\techo \"------\"\n\techo \"    (cd \\\"${LINUX_ABS_DIR}\\\" && git -c advice.detachedHead=false checkout HEAD~)\"\n\techo \"    for f in \\$(cat \\\"${TMP_DIR}/linux-view.ls\\\"); do\"\n\techo \"        diff -u --label \\\"\\${f}\\\" --label \\\"\\${f}\\\" \\\\\"\n\techo \"            \\\"${LINUX_ABS_DIR}/\\${f}\\\" \\\\\"\n\techo \"            \\\"${GITHUB_ABS_DIR}/\\${f}\\\"\"\n\techo \"    done > \\\"${GITHUB_ABS_DIR}/scripts/sync-kernel-expected-diff.patch\\\"\"\n",
                      "markdown": "`\techo \"------\"\n\techo \"    (cd \\\"${LINUX_ABS_DIR}\\\" && git -c advice.detachedHead=false checkout HEAD~)\"\n\techo \"    for f in \\$(cat \\\"${TMP_DIR}/linux-view.ls\\\"); do\"\n\techo \"        diff -u --label \\\"\\${f}\\\" --label \\\"\\${f}\\\" \\\\\"\n\techo \"            \\\"${LINUX_ABS_DIR}/\\${f}\\\" \\\\\"\n\techo \"            \\\"${GITHUB_ABS_DIR}/\\${f}\\\"\"\n\techo \"    done > \\\"${GITHUB_ABS_DIR}/scripts/sync-kernel-expected-diff.patch\\\"\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 421,
                  "startColumn": 38,
                  "endLine": 421,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\techo \"to account for expected changes. If this patch needs an update,\"\n\techo \"you can do it now with:\"\n\techo \"------\"\n\techo \"    (cd \\\"${LINUX_ABS_DIR}\\\" && git -c advice.detachedHead=false checkout HEAD~)\"\n\techo \"    for f in \\$(cat \\\"${TMP_DIR}/linux-view.ls\\\"); do\"\n\techo \"        diff -u --label \\\"\\${f}\\\" --label \\\"\\${f}\\\" \\\\\"\n\techo \"            \\\"${LINUX_ABS_DIR}/\\${f}\\\" \\\\\"\n",
                    "rendered": {
                      "text": "\techo \"to account for expected changes. If this patch needs an update,\"\n\techo \"you can do it now with:\"\n\techo \"------\"\n\techo \"    (cd \\\"${LINUX_ABS_DIR}\\\" && git -c advice.detachedHead=false checkout HEAD~)\"\n\techo \"    for f in \\$(cat \\\"${TMP_DIR}/linux-view.ls\\\"); do\"\n\techo \"        diff -u --label \\\"\\${f}\\\" --label \\\"\\${f}\\\" \\\\\"\n\techo \"            \\\"${LINUX_ABS_DIR}/\\${f}\\\" \\\\\"\n",
                      "markdown": "`\techo \"to account for expected changes. If this patch needs an update,\"\n\techo \"you can do it now with:\"\n\techo \"------\"\n\techo \"    (cd \\\"${LINUX_ABS_DIR}\\\" && git -c advice.detachedHead=false checkout HEAD~)\"\n\techo \"    for f in \\$(cat \\\"${TMP_DIR}/linux-view.ls\\\"); do\"\n\techo \"        diff -u --label \\\"\\${f}\\\" --label \\\"\\${f}\\\" \\\\\"\n\techo \"            \\\"${LINUX_ABS_DIR}/\\${f}\\\" \\\\\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 405,
                  "startColumn": 5,
                  "endLine": 405,
                  "endColumn": 11,
                  "snippet": {
                    "text": "echo \"Comparing file contents...\"\nCONSISTENT=1\nwhile IFS= read -r F; do\n\tif ! diff -u --color \"${LINUX_ABS_DIR}/${F}\" \"${GITHUB_ABS_DIR}/${F}\"; then\n\t\techo \"${LINUX_ABS_DIR}/${F} and ${GITHUB_ABS_DIR}/${F} are different!\"\n\t\tCONSISTENT=0\n\tfi\n",
                    "rendered": {
                      "text": "echo \"Comparing file contents...\"\nCONSISTENT=1\nwhile IFS= read -r F; do\n\tif ! diff -u --color \"${LINUX_ABS_DIR}/${F}\" \"${GITHUB_ABS_DIR}/${F}\"; then\n\t\techo \"${LINUX_ABS_DIR}/${F} and ${GITHUB_ABS_DIR}/${F} are different!\"\n\t\tCONSISTENT=0\n\tfi\n",
                      "markdown": "`echo \"Comparing file contents...\"\nCONSISTENT=1\nwhile IFS= read -r F; do\n\tif ! diff -u --color \"${LINUX_ABS_DIR}/${F}\" \"${GITHUB_ABS_DIR}/${F}\"; then\n\t\techo \"${LINUX_ABS_DIR}/${F} and ${GITHUB_ABS_DIR}/${F} are different!\"\n\t\tCONSISTENT=0\n\tfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 400,
                  "startColumn": 33,
                  "endLine": 401,
                  "endColumn": 5,
                  "snippet": {
                    "text": "# shellcheck disable=SC2068\ngit ls-files -- ${BPFTOOL_VIEW_PATHS[@]} | grep -v -E \"${BPFTOOL_VIEW_EXCLUDE_REGEX}\" > \"${TMP_DIR}\"/github-view.ls\n\necho \"Comparing list of files...\"\ndiff -u \"${TMP_DIR}\"/linux-view.ls \"${TMP_DIR}\"/github-view.ls\necho \"Comparing file contents...\"\nCONSISTENT=1\nwhile IFS= read -r F; do\n",
                    "rendered": {
                      "text": "# shellcheck disable=SC2068\ngit ls-files -- ${BPFTOOL_VIEW_PATHS[@]} | grep -v -E \"${BPFTOOL_VIEW_EXCLUDE_REGEX}\" > \"${TMP_DIR}\"/github-view.ls\n\necho \"Comparing list of files...\"\ndiff -u \"${TMP_DIR}\"/linux-view.ls \"${TMP_DIR}\"/github-view.ls\necho \"Comparing file contents...\"\nCONSISTENT=1\nwhile IFS= read -r F; do\n",
                      "markdown": "`# shellcheck disable=SC2068\ngit ls-files -- ${BPFTOOL_VIEW_PATHS[@]} | grep -v -E \"${BPFTOOL_VIEW_EXCLUDE_REGEX}\" > \"${TMP_DIR}\"/github-view.ls\n\necho \"Comparing list of files...\"\ndiff -u \"${TMP_DIR}\"/linux-view.ls \"${TMP_DIR}\"/github-view.ls\necho \"Comparing file contents...\"\nCONSISTENT=1\nwhile IFS= read -r F; do\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 398,
                  "startColumn": 42,
                  "endLine": 398,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\ncd_to \"${BPFTOOL_REPO}\"\n# shellcheck disable=SC2068\ngit ls-files -- ${BPFTOOL_VIEW_PATHS[@]} | grep -v -E \"${BPFTOOL_VIEW_EXCLUDE_REGEX}\" > \"${TMP_DIR}\"/github-view.ls\n\necho \"Comparing list of files...\"\ndiff -u \"${TMP_DIR}\"/linux-view.ls \"${TMP_DIR}\"/github-view.ls\n",
                    "rendered": {
                      "text": "\ncd_to \"${BPFTOOL_REPO}\"\n# shellcheck disable=SC2068\ngit ls-files -- ${BPFTOOL_VIEW_PATHS[@]} | grep -v -E \"${BPFTOOL_VIEW_EXCLUDE_REGEX}\" > \"${TMP_DIR}\"/github-view.ls\n\necho \"Comparing list of files...\"\ndiff -u \"${TMP_DIR}\"/linux-view.ls \"${TMP_DIR}\"/github-view.ls\n",
                      "markdown": "`\ncd_to \"${BPFTOOL_REPO}\"\n# shellcheck disable=SC2068\ngit ls-files -- ${BPFTOOL_VIEW_PATHS[@]} | grep -v -E \"${BPFTOOL_VIEW_EXCLUDE_REGEX}\" > \"${TMP_DIR}\"/github-view.ls\n\necho \"Comparing list of files...\"\ndiff -u \"${TMP_DIR}\"/linux-view.ls \"${TMP_DIR}\"/github-view.ls\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 397,
                  "startColumn": 27,
                  "endLine": 398,
                  "endColumn": 4,
                  "snippet": {
                    "text": "git commit -m 'tmp: apply expected differences to compare github/kernel repos' || true\n\ncd_to \"${BPFTOOL_REPO}\"\n# shellcheck disable=SC2068\ngit ls-files -- ${BPFTOOL_VIEW_PATHS[@]} | grep -v -E \"${BPFTOOL_VIEW_EXCLUDE_REGEX}\" > \"${TMP_DIR}\"/github-view.ls\n\necho \"Comparing list of files...\"\ndiff -u \"${TMP_DIR}\"/linux-view.ls \"${TMP_DIR}\"/github-view.ls\n",
                    "rendered": {
                      "text": "git commit -m 'tmp: apply expected differences to compare github/kernel repos' || true\n\ncd_to \"${BPFTOOL_REPO}\"\n# shellcheck disable=SC2068\ngit ls-files -- ${BPFTOOL_VIEW_PATHS[@]} | grep -v -E \"${BPFTOOL_VIEW_EXCLUDE_REGEX}\" > \"${TMP_DIR}\"/github-view.ls\n\necho \"Comparing list of files...\"\ndiff -u \"${TMP_DIR}\"/linux-view.ls \"${TMP_DIR}\"/github-view.ls\n",
                      "markdown": "`git commit -m 'tmp: apply expected differences to compare github/kernel repos' || true\n\ncd_to \"${BPFTOOL_REPO}\"\n# shellcheck disable=SC2068\ngit ls-files -- ${BPFTOOL_VIEW_PATHS[@]} | grep -v -E \"${BPFTOOL_VIEW_EXCLUDE_REGEX}\" > \"${TMP_DIR}\"/github-view.ls\n\necho \"Comparing list of files...\"\ndiff -u \"${TMP_DIR}\"/linux-view.ls \"${TMP_DIR}\"/github-view.ls\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 393,
                  "startColumn": 10,
                  "endLine": 394,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# differences.\necho \"Patching to account for expected differences...\"\npatch -d \"${LINUX_ABS_DIR}\" -p0 -f --reject-file=- --no-backup-if-mismatch < \"${GITHUB_ABS_DIR}/scripts/sync-kernel-expected-diff.patch\" || true\ngit add -u\ngit commit -m 'tmp: apply expected differences to compare github/kernel repos' || true\n\ncd_to \"${BPFTOOL_REPO}\"\n# shellcheck disable=SC2068\n",
                    "rendered": {
                      "text": "# differences.\necho \"Patching to account for expected differences...\"\npatch -d \"${LINUX_ABS_DIR}\" -p0 -f --reject-file=- --no-backup-if-mismatch < \"${GITHUB_ABS_DIR}/scripts/sync-kernel-expected-diff.patch\" || true\ngit add -u\ngit commit -m 'tmp: apply expected differences to compare github/kernel repos' || true\n\ncd_to \"${BPFTOOL_REPO}\"\n# shellcheck disable=SC2068\n",
                      "markdown": "`# differences.\necho \"Patching to account for expected differences...\"\npatch -d \"${LINUX_ABS_DIR}\" -p0 -f --reject-file=- --no-backup-if-mismatch < \"${GITHUB_ABS_DIR}/scripts/sync-kernel-expected-diff.patch\" || true\ngit add -u\ngit commit -m 'tmp: apply expected differences to compare github/kernel repos' || true\n\ncd_to \"${BPFTOOL_REPO}\"\n# shellcheck disable=SC2068\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 392,
                  "startColumn": 144,
                  "endLine": 393,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# \"known\" differences visually and taking the risk of missing a new, relevant\n# differences.\necho \"Patching to account for expected differences...\"\npatch -d \"${LINUX_ABS_DIR}\" -p0 -f --reject-file=- --no-backup-if-mismatch < \"${GITHUB_ABS_DIR}/scripts/sync-kernel-expected-diff.patch\" || true\ngit add -u\ngit commit -m 'tmp: apply expected differences to compare github/kernel repos' || true\n\ncd_to \"${BPFTOOL_REPO}\"\n",
                    "rendered": {
                      "text": "# \"known\" differences visually and taking the risk of missing a new, relevant\n# differences.\necho \"Patching to account for expected differences...\"\npatch -d \"${LINUX_ABS_DIR}\" -p0 -f --reject-file=- --no-backup-if-mismatch < \"${GITHUB_ABS_DIR}/scripts/sync-kernel-expected-diff.patch\" || true\ngit add -u\ngit commit -m 'tmp: apply expected differences to compare github/kernel repos' || true\n\ncd_to \"${BPFTOOL_REPO}\"\n",
                      "markdown": "`# \"known\" differences visually and taking the risk of missing a new, relevant\n# differences.\necho \"Patching to account for expected differences...\"\npatch -d \"${LINUX_ABS_DIR}\" -p0 -f --reject-file=- --no-backup-if-mismatch < \"${GITHUB_ABS_DIR}/scripts/sync-kernel-expected-diff.patch\" || true\ngit add -u\ngit commit -m 'tmp: apply expected differences to compare github/kernel repos' || true\n\ncd_to \"${BPFTOOL_REPO}\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 386,
                  "startColumn": 42,
                  "endLine": 386,
                  "endColumn": 48,
                  "snippet": {
                    "text": "BRANCH_SQUELCH_WARNING=1 git filter-branch -f --tree-filter \"${BPFTOOL_TREE_FILTER}\" \"${VIEW_TAG}\"^..\"${VIEW_TAG}\"\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --subdirectory-filter __bpftool \"${VIEW_TAG}\"^..\"${VIEW_TAG}\"\n# shellcheck disable=SC2068\ngit ls-files -- ${BPFTOOL_VIEW_PATHS[@]} | grep -v -E \"${LINUX_VIEW_EXCLUDE_REGEX}\" > \"${TMP_DIR}\"/linux-view.ls\n# Before we compare each file, try to apply to the mirror a patch containing the\n# expected differences between the two repositories; this is to avoid checking\n# \"known\" differences visually and taking the risk of missing a new, releva",
                    "rendered": {
                      "text": "BRANCH_SQUELCH_WARNING=1 git filter-branch -f --tree-filter \"${BPFTOOL_TREE_FILTER}\" \"${VIEW_TAG}\"^..\"${VIEW_TAG}\"\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --subdirectory-filter __bpftool \"${VIEW_TAG}\"^..\"${VIEW_TAG}\"\n# shellcheck disable=SC2068\ngit ls-files -- ${BPFTOOL_VIEW_PATHS[@]} | grep -v -E \"${LINUX_VIEW_EXCLUDE_REGEX}\" > \"${TMP_DIR}\"/linux-view.ls\n# Before we compare each file, try to apply to the mirror a patch containing the\n# expected differences between the two repositories; this is to avoid checking\n# \"known\" differences visually and taking the risk of missing a new, releva",
                      "markdown": "`BRANCH_SQUELCH_WARNING=1 git filter-branch -f --tree-filter \"${BPFTOOL_TREE_FILTER}\" \"${VIEW_TAG}\"^..\"${VIEW_TAG}\"\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --subdirectory-filter __bpftool \"${VIEW_TAG}\"^..\"${VIEW_TAG}\"\n# shellcheck disable=SC2068\ngit ls-files -- ${BPFTOOL_VIEW_PATHS[@]} | grep -v -E \"${LINUX_VIEW_EXCLUDE_REGEX}\" > \"${TMP_DIR}\"/linux-view.ls\n# Before we compare each file, try to apply to the mirror a patch containing the\n# expected differences between the two repositories; this is to avoid checking\n# \"known\" differences visually and taking the risk of missing a new, releva`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 385,
                  "startColumn": 27,
                  "endLine": 386,
                  "endColumn": 4,
                  "snippet": {
                    "text": "ut -b \"${VIEW_TAG}\" \"${TIP_COMMIT}\"\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --tree-filter \"${BPFTOOL_TREE_FILTER}\" \"${VIEW_TAG}\"^..\"${VIEW_TAG}\"\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --subdirectory-filter __bpftool \"${VIEW_TAG}\"^..\"${VIEW_TAG}\"\n# shellcheck disable=SC2068\ngit ls-files -- ${BPFTOOL_VIEW_PATHS[@]} | grep -v -E \"${LINUX_VIEW_EXCLUDE_REGEX}\" > \"${TMP_DIR}\"/linux-view.ls\n# Before we compare each file, try to apply to the mirror a patch containing the\n# expected differences between the two repositories; this is to avoid checking\n# \"known\" differences visually ",
                    "rendered": {
                      "text": "ut -b \"${VIEW_TAG}\" \"${TIP_COMMIT}\"\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --tree-filter \"${BPFTOOL_TREE_FILTER}\" \"${VIEW_TAG}\"^..\"${VIEW_TAG}\"\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --subdirectory-filter __bpftool \"${VIEW_TAG}\"^..\"${VIEW_TAG}\"\n# shellcheck disable=SC2068\ngit ls-files -- ${BPFTOOL_VIEW_PATHS[@]} | grep -v -E \"${LINUX_VIEW_EXCLUDE_REGEX}\" > \"${TMP_DIR}\"/linux-view.ls\n# Before we compare each file, try to apply to the mirror a patch containing the\n# expected differences between the two repositories; this is to avoid checking\n# \"known\" differences visually ",
                      "markdown": "`ut -b \"${VIEW_TAG}\" \"${TIP_COMMIT}\"\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --tree-filter \"${BPFTOOL_TREE_FILTER}\" \"${VIEW_TAG}\"^..\"${VIEW_TAG}\"\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --subdirectory-filter __bpftool \"${VIEW_TAG}\"^..\"${VIEW_TAG}\"\n# shellcheck disable=SC2068\ngit ls-files -- ${BPFTOOL_VIEW_PATHS[@]} | grep -v -E \"${LINUX_VIEW_EXCLUDE_REGEX}\" > \"${TMP_DIR}\"/linux-view.ls\n# Before we compare each file, try to apply to the mirror a patch containing the\n# expected differences between the two repositories; this is to avoid checking\n# \"known\" differences visually `"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 384,
                  "startColumn": 31,
                  "endLine": 384,
                  "endColumn": 36,
                  "snippet": {
                    "text": "cd_to \"${LINUX_REPO}\"\ngit checkout -b \"${VIEW_TAG}\" \"${TIP_COMMIT}\"\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --tree-filter \"${BPFTOOL_TREE_FILTER}\" \"${VIEW_TAG}\"^..\"${VIEW_TAG}\"\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --subdirectory-filter __bpftool \"${VIEW_TAG}\"^..\"${VIEW_TAG}\"\n# shellcheck disable=SC2068\ngit ls-files -- ${BPFTOOL_VIEW_PATHS[@]} | grep -v -E \"${LINUX_VIEW_EXCLUDE_REGEX}\" > \"${TMP_DIR}\"/linux-view.ls\n# Before we compare each file, try to apply to the mirror a patch containing the\n",
                    "rendered": {
                      "text": "cd_to \"${LINUX_REPO}\"\ngit checkout -b \"${VIEW_TAG}\" \"${TIP_COMMIT}\"\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --tree-filter \"${BPFTOOL_TREE_FILTER}\" \"${VIEW_TAG}\"^..\"${VIEW_TAG}\"\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --subdirectory-filter __bpftool \"${VIEW_TAG}\"^..\"${VIEW_TAG}\"\n# shellcheck disable=SC2068\ngit ls-files -- ${BPFTOOL_VIEW_PATHS[@]} | grep -v -E \"${LINUX_VIEW_EXCLUDE_REGEX}\" > \"${TMP_DIR}\"/linux-view.ls\n# Before we compare each file, try to apply to the mirror a patch containing the\n",
                      "markdown": "`cd_to \"${LINUX_REPO}\"\ngit checkout -b \"${VIEW_TAG}\" \"${TIP_COMMIT}\"\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --tree-filter \"${BPFTOOL_TREE_FILTER}\" \"${VIEW_TAG}\"^..\"${VIEW_TAG}\"\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --subdirectory-filter __bpftool \"${VIEW_TAG}\"^..\"${VIEW_TAG}\"\n# shellcheck disable=SC2068\ngit ls-files -- ${BPFTOOL_VIEW_PATHS[@]} | grep -v -E \"${LINUX_VIEW_EXCLUDE_REGEX}\" > \"${TMP_DIR}\"/linux-view.ls\n# Before we compare each file, try to apply to the mirror a patch containing the\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 383,
                  "startColumn": 31,
                  "endLine": 383,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\ncd_to \"${LINUX_REPO}\"\ngit checkout -b \"${VIEW_TAG}\" \"${TIP_COMMIT}\"\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --tree-filter \"${BPFTOOL_TREE_FILTER}\" \"${VIEW_TAG}\"^..\"${VIEW_TAG}\"\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --subdirectory-filter __bpftool \"${VIEW_TAG}\"^..\"${VIEW_TAG}\"\n# shellcheck disable=SC2068\ngit ls-files -- ${BPFTOOL_VIEW_PATHS[@]} | grep -v -E \"${LINUX_VIEW_EXCLUDE_REGEX}\" > \"${TMP_DIR}\"/linux-view.ls\n",
                    "rendered": {
                      "text": "\ncd_to \"${LINUX_REPO}\"\ngit checkout -b \"${VIEW_TAG}\" \"${TIP_COMMIT}\"\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --tree-filter \"${BPFTOOL_TREE_FILTER}\" \"${VIEW_TAG}\"^..\"${VIEW_TAG}\"\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --subdirectory-filter __bpftool \"${VIEW_TAG}\"^..\"${VIEW_TAG}\"\n# shellcheck disable=SC2068\ngit ls-files -- ${BPFTOOL_VIEW_PATHS[@]} | grep -v -E \"${LINUX_VIEW_EXCLUDE_REGEX}\" > \"${TMP_DIR}\"/linux-view.ls\n",
                      "markdown": "`\ncd_to \"${LINUX_REPO}\"\ngit checkout -b \"${VIEW_TAG}\" \"${TIP_COMMIT}\"\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --tree-filter \"${BPFTOOL_TREE_FILTER}\" \"${VIEW_TAG}\"^..\"${VIEW_TAG}\"\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --subdirectory-filter __bpftool \"${VIEW_TAG}\"^..\"${VIEW_TAG}\"\n# shellcheck disable=SC2068\ngit ls-files -- ${BPFTOOL_VIEW_PATHS[@]} | grep -v -E \"${LINUX_VIEW_EXCLUDE_REGEX}\" > \"${TMP_DIR}\"/linux-view.ls\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 381,
                  "startColumn": 21,
                  "endLine": 382,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\necho \"Verifying Linux's and Github's bpftool state\"\n\ncd_to \"${LINUX_REPO}\"\ngit checkout -b \"${VIEW_TAG}\" \"${TIP_COMMIT}\"\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --tree-filter \"${BPFTOOL_TREE_FILTER}\" \"${VIEW_TAG}\"^..\"${VIEW_TAG}\"\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --subdirectory-filter __bpftool \"${VIEW_TAG}\"^..\"${VIEW_TAG}\"\n# shellcheck disable=SC2068\n",
                    "rendered": {
                      "text": "\necho \"Verifying Linux's and Github's bpftool state\"\n\ncd_to \"${LINUX_REPO}\"\ngit checkout -b \"${VIEW_TAG}\" \"${TIP_COMMIT}\"\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --tree-filter \"${BPFTOOL_TREE_FILTER}\" \"${VIEW_TAG}\"^..\"${VIEW_TAG}\"\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --subdirectory-filter __bpftool \"${VIEW_TAG}\"^..\"${VIEW_TAG}\"\n# shellcheck disable=SC2068\n",
                      "markdown": "`\necho \"Verifying Linux's and Github's bpftool state\"\n\ncd_to \"${LINUX_REPO}\"\ngit checkout -b \"${VIEW_TAG}\" \"${TIP_COMMIT}\"\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --tree-filter \"${BPFTOOL_TREE_FILTER}\" \"${VIEW_TAG}\"^..\"${VIEW_TAG}\"\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --subdirectory-filter __bpftool \"${VIEW_TAG}\"^..\"${VIEW_TAG}\"\n# shellcheck disable=SC2068\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 374,
                  "startColumn": 60,
                  "endLine": 375,
                  "endColumn": 4,
                  "snippet": {
                    "text": "Baseline bpf-next commit:   ${BASELINE_COMMIT}\\n\\\nCheckpoint bpf-next commit: ${TIP_COMMIT}\\n\\\nBaseline bpf commit:        ${BPF_BASELINE_COMMIT}\\n\\\nCheckpoint bpf commit:      ${BPF_TIP_COMMIT}/\" |\t\t\t\t      \\\ngit commit --signoff --file=-\n\necho \"SUCCESS! ${COMMIT_CNT} commits synced.\"\n\n",
                    "rendered": {
                      "text": "Baseline bpf-next commit:   ${BASELINE_COMMIT}\\n\\\nCheckpoint bpf-next commit: ${TIP_COMMIT}\\n\\\nBaseline bpf commit:        ${BPF_BASELINE_COMMIT}\\n\\\nCheckpoint bpf commit:      ${BPF_TIP_COMMIT}/\" |\t\t\t\t      \\\ngit commit --signoff --file=-\n\necho \"SUCCESS! ${COMMIT_CNT} commits synced.\"\n\n",
                      "markdown": "`Baseline bpf-next commit:   ${BASELINE_COMMIT}\\n\\\nCheckpoint bpf-next commit: ${TIP_COMMIT}\\n\\\nBaseline bpf commit:        ${BPF_BASELINE_COMMIT}\\n\\\nCheckpoint bpf commit:      ${BPF_TIP_COMMIT}/\" |\t\t\t\t      \\\ngit commit --signoff --file=-\n\necho \"SUCCESS! ${COMMIT_CNT} commits synced.\"\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 366,
                  "startColumn": 89,
                  "endLine": 367,
                  "endColumn": 4,
                  "snippet": {
                    "text": "echo \"${BPF_TIP_COMMIT}\" > BPF-CHECKPOINT-COMMIT &&\t\t\t\t      \\\ngit add CHECKPOINT-COMMIT &&\t\t\t\t\t\t\t      \\\ngit add BPF-CHECKPOINT-COMMIT &&\t\t\t\t\t\t      \\\nawk '/\\*\\*\\* BLURB HERE \\*\\*\\*/ {p=1} p' \"${TMP_DIR}\"/patches/0000-cover-letter.patch | \\\nsed \"s/\\*\\*\\* BLURB HERE \\*\\*\\*/\\\nsync: Pull latest bpftool changes from kernel\\n\\\n\\n\\\nSyncing latest bpftool commits from kernel repository.\\n\\\n",
                    "rendered": {
                      "text": "echo \"${BPF_TIP_COMMIT}\" > BPF-CHECKPOINT-COMMIT &&\t\t\t\t      \\\ngit add CHECKPOINT-COMMIT &&\t\t\t\t\t\t\t      \\\ngit add BPF-CHECKPOINT-COMMIT &&\t\t\t\t\t\t      \\\nawk '/\\*\\*\\* BLURB HERE \\*\\*\\*/ {p=1} p' \"${TMP_DIR}\"/patches/0000-cover-letter.patch | \\\nsed \"s/\\*\\*\\* BLURB HERE \\*\\*\\*/\\\nsync: Pull latest bpftool changes from kernel\\n\\\n\\n\\\nSyncing latest bpftool commits from kernel repository.\\n\\\n",
                      "markdown": "`echo \"${BPF_TIP_COMMIT}\" > BPF-CHECKPOINT-COMMIT &&\t\t\t\t      \\\ngit add CHECKPOINT-COMMIT &&\t\t\t\t\t\t\t      \\\ngit add BPF-CHECKPOINT-COMMIT &&\t\t\t\t\t\t      \\\nawk '/\\*\\*\\* BLURB HERE \\*\\*\\*/ {p=1} p' \"${TMP_DIR}\"/patches/0000-cover-letter.patch | \\\nsed \"s/\\*\\*\\* BLURB HERE \\*\\*\\*/\\\nsync: Pull latest bpftool changes from kernel\\n\\\n\\n\\\nSyncing latest bpftool commits from kernel repository.\\n\\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 365,
                  "startColumn": 45,
                  "endLine": 366,
                  "endColumn": 4,
                  "snippet": {
                    "text": "echo \"${TIP_COMMIT}\" > CHECKPOINT-COMMIT &&\t\t\t\t\t      \\\necho \"${BPF_TIP_COMMIT}\" > BPF-CHECKPOINT-COMMIT &&\t\t\t\t      \\\ngit add CHECKPOINT-COMMIT &&\t\t\t\t\t\t\t      \\\ngit add BPF-CHECKPOINT-COMMIT &&\t\t\t\t\t\t      \\\nawk '/\\*\\*\\* BLURB HERE \\*\\*\\*/ {p=1} p' \"${TMP_DIR}\"/patches/0000-cover-letter.patch | \\\nsed \"s/\\*\\*\\* BLURB HERE \\*\\*\\*/\\\nsync: Pull latest bpftool changes from kernel\\n\\\n\\n\\\n",
                    "rendered": {
                      "text": "echo \"${TIP_COMMIT}\" > CHECKPOINT-COMMIT &&\t\t\t\t\t      \\\necho \"${BPF_TIP_COMMIT}\" > BPF-CHECKPOINT-COMMIT &&\t\t\t\t      \\\ngit add CHECKPOINT-COMMIT &&\t\t\t\t\t\t\t      \\\ngit add BPF-CHECKPOINT-COMMIT &&\t\t\t\t\t\t      \\\nawk '/\\*\\*\\* BLURB HERE \\*\\*\\*/ {p=1} p' \"${TMP_DIR}\"/patches/0000-cover-letter.patch | \\\nsed \"s/\\*\\*\\* BLURB HERE \\*\\*\\*/\\\nsync: Pull latest bpftool changes from kernel\\n\\\n\\n\\\n",
                      "markdown": "`echo \"${TIP_COMMIT}\" > CHECKPOINT-COMMIT &&\t\t\t\t\t      \\\necho \"${BPF_TIP_COMMIT}\" > BPF-CHECKPOINT-COMMIT &&\t\t\t\t      \\\ngit add CHECKPOINT-COMMIT &&\t\t\t\t\t\t\t      \\\ngit add BPF-CHECKPOINT-COMMIT &&\t\t\t\t\t\t      \\\nawk '/\\*\\*\\* BLURB HERE \\*\\*\\*/ {p=1} p' \"${TMP_DIR}\"/patches/0000-cover-letter.patch | \\\nsed \"s/\\*\\*\\* BLURB HERE \\*\\*\\*/\\\nsync: Pull latest bpftool changes from kernel\\n\\\n\\n\\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 364,
                  "startColumn": 42,
                  "endLine": 365,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# from cover letter intact, of course)\necho \"${TIP_COMMIT}\" > CHECKPOINT-COMMIT &&\t\t\t\t\t      \\\necho \"${BPF_TIP_COMMIT}\" > BPF-CHECKPOINT-COMMIT &&\t\t\t\t      \\\ngit add CHECKPOINT-COMMIT &&\t\t\t\t\t\t\t      \\\ngit add BPF-CHECKPOINT-COMMIT &&\t\t\t\t\t\t      \\\nawk '/\\*\\*\\* BLURB HERE \\*\\*\\*/ {p=1} p' \"${TMP_DIR}\"/patches/0000-cover-letter.patch | \\\nsed \"s/\\*\\*\\* BLURB HERE \\*\\*\\*/\\\nsync: Pull latest bpftool changes from kernel\\n\\\n",
                    "rendered": {
                      "text": "# from cover letter intact, of course)\necho \"${TIP_COMMIT}\" > CHECKPOINT-COMMIT &&\t\t\t\t\t      \\\necho \"${BPF_TIP_COMMIT}\" > BPF-CHECKPOINT-COMMIT &&\t\t\t\t      \\\ngit add CHECKPOINT-COMMIT &&\t\t\t\t\t\t\t      \\\ngit add BPF-CHECKPOINT-COMMIT &&\t\t\t\t\t\t      \\\nawk '/\\*\\*\\* BLURB HERE \\*\\*\\*/ {p=1} p' \"${TMP_DIR}\"/patches/0000-cover-letter.patch | \\\nsed \"s/\\*\\*\\* BLURB HERE \\*\\*\\*/\\\nsync: Pull latest bpftool changes from kernel\\n\\\n",
                      "markdown": "`# from cover letter intact, of course)\necho \"${TIP_COMMIT}\" > CHECKPOINT-COMMIT &&\t\t\t\t\t      \\\necho \"${BPF_TIP_COMMIT}\" > BPF-CHECKPOINT-COMMIT &&\t\t\t\t      \\\ngit add CHECKPOINT-COMMIT &&\t\t\t\t\t\t\t      \\\ngit add BPF-CHECKPOINT-COMMIT &&\t\t\t\t\t\t      \\\nawk '/\\*\\*\\* BLURB HERE \\*\\*\\*/ {p=1} p' \"${TMP_DIR}\"/patches/0000-cover-letter.patch | \\\nsed \"s/\\*\\*\\* BLURB HERE \\*\\*\\*/\\\nsync: Pull latest bpftool changes from kernel\\n\\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 363,
                  "startColumn": 62,
                  "endLine": 364,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# baseline and checkpoint commits from kernel repo (and leave summary\n# from cover letter intact, of course)\necho \"${TIP_COMMIT}\" > CHECKPOINT-COMMIT &&\t\t\t\t\t      \\\necho \"${BPF_TIP_COMMIT}\" > BPF-CHECKPOINT-COMMIT &&\t\t\t\t      \\\ngit add CHECKPOINT-COMMIT &&\t\t\t\t\t\t\t      \\\ngit add BPF-CHECKPOINT-COMMIT &&\t\t\t\t\t\t      \\\nawk '/\\*\\*\\* BLURB HERE \\*\\*\\*/ {p=1} p' \"${TMP_DIR}\"/patches/0000-cover-letter.patch | \\\nsed \"s/\\*\\*\\* BLURB HERE \\*\\*\\*/\\\n",
                    "rendered": {
                      "text": "# baseline and checkpoint commits from kernel repo (and leave summary\n# from cover letter intact, of course)\necho \"${TIP_COMMIT}\" > CHECKPOINT-COMMIT &&\t\t\t\t\t      \\\necho \"${BPF_TIP_COMMIT}\" > BPF-CHECKPOINT-COMMIT &&\t\t\t\t      \\\ngit add CHECKPOINT-COMMIT &&\t\t\t\t\t\t\t      \\\ngit add BPF-CHECKPOINT-COMMIT &&\t\t\t\t\t\t      \\\nawk '/\\*\\*\\* BLURB HERE \\*\\*\\*/ {p=1} p' \"${TMP_DIR}\"/patches/0000-cover-letter.patch | \\\nsed \"s/\\*\\*\\* BLURB HERE \\*\\*\\*/\\\n",
                      "markdown": "`# baseline and checkpoint commits from kernel repo (and leave summary\n# from cover letter intact, of course)\necho \"${TIP_COMMIT}\" > CHECKPOINT-COMMIT &&\t\t\t\t\t      \\\necho \"${BPF_TIP_COMMIT}\" > BPF-CHECKPOINT-COMMIT &&\t\t\t\t      \\\ngit add CHECKPOINT-COMMIT &&\t\t\t\t\t\t\t      \\\ngit add BPF-CHECKPOINT-COMMIT &&\t\t\t\t\t\t      \\\nawk '/\\*\\*\\* BLURB HERE \\*\\*\\*/ {p=1} p' \"${TMP_DIR}\"/patches/0000-cover-letter.patch | \\\nsed \"s/\\*\\*\\* BLURB HERE \\*\\*\\*/\\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 352,
                  "endLine": 352,
                  "endColumn": 5,
                  "snippet": {
                    "text": "mailmap_changes=$(git status --porcelain .mailmap | wc -l)\nif ((mailmap_changes == 1)); then\n\tgit add .mailmap\n\tgit commit -s -m \"sync: update .mailmap\n\nUpdate .mailmap based on bpftool's list of contributors and on the\nlatest .mailmap version in the upstream repository.\n",
                    "rendered": {
                      "text": "mailmap_changes=$(git status --porcelain .mailmap | wc -l)\nif ((mailmap_changes == 1)); then\n\tgit add .mailmap\n\tgit commit -s -m \"sync: update .mailmap\n\nUpdate .mailmap based on bpftool's list of contributors and on the\nlatest .mailmap version in the upstream repository.\n",
                      "markdown": "`mailmap_changes=$(git status --porcelain .mailmap | wc -l)\nif ((mailmap_changes == 1)); then\n\tgit add .mailmap\n\tgit commit -s -m \"sync: update .mailmap\n\nUpdate .mailmap based on bpftool's list of contributors and on the\nlatest .mailmap version in the upstream repository.\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 351,
                  "endLine": 351,
                  "endColumn": 5,
                  "snippet": {
                    "text": "# If anything changed, commit it\nmailmap_changes=$(git status --porcelain .mailmap | wc -l)\nif ((mailmap_changes == 1)); then\n\tgit add .mailmap\n\tgit commit -s -m \"sync: update .mailmap\n\nUpdate .mailmap based on bpftool's list of contributors and on the\n",
                    "rendered": {
                      "text": "# If anything changed, commit it\nmailmap_changes=$(git status --porcelain .mailmap | wc -l)\nif ((mailmap_changes == 1)); then\n\tgit add .mailmap\n\tgit commit -s -m \"sync: update .mailmap\n\nUpdate .mailmap based on bpftool's list of contributors and on the\n",
                      "markdown": "`# If anything changed, commit it\nmailmap_changes=$(git status --porcelain .mailmap | wc -l)\nif ((mailmap_changes == 1)); then\n\tgit add .mailmap\n\tgit commit -s -m \"sync: update .mailmap\n\nUpdate .mailmap based on bpftool's list of contributors and on the\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 344,
                  "startColumn": 21,
                  "endLine": 345,
                  "endColumn": 4,
                  "snippet": {
                    "text": "done\n\necho \"Regenerating .mailmap...\"\ncd_to \"${LINUX_REPO}\"\ngit checkout \"${TIP_SYM_REF}\"\ncd_to \"${BPFTOOL_REPO}\"\n\"${BPFTOOL_REPO}\"/scripts/mailmap-update.sh \"${BPFTOOL_REPO}\" \"${LINUX_REPO}\"\n# If anything changed, commit it\n",
                    "rendered": {
                      "text": "done\n\necho \"Regenerating .mailmap...\"\ncd_to \"${LINUX_REPO}\"\ngit checkout \"${TIP_SYM_REF}\"\ncd_to \"${BPFTOOL_REPO}\"\n\"${BPFTOOL_REPO}\"/scripts/mailmap-update.sh \"${BPFTOOL_REPO}\" \"${LINUX_REPO}\"\n# If anything changed, commit it\n",
                      "markdown": "`done\n\necho \"Regenerating .mailmap...\"\ncd_to \"${LINUX_REPO}\"\ngit checkout \"${TIP_SYM_REF}\"\ncd_to \"${BPFTOOL_REPO}\"\n\"${BPFTOOL_REPO}\"/scripts/mailmap-update.sh \"${BPFTOOL_REPO}\" \"${LINUX_REPO}\"\n# If anything changed, commit it\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 338,
                  "startColumn": 5,
                  "endLine": 338,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n# shellcheck disable=SC2012\nfor patch in $(ls -1 \"${TMP_DIR}\"/patches | tail -n +2); do\n\tif ! git am --3way --committer-date-is-author-date \"${TMP_DIR}/patches/${patch}\"; then\n\t\tread -rp \"Applying ${TMP_DIR}/patches/${patch} failed, please resolve manually and press <return> to proceed...\"\n\tfi\ndone\n",
                    "rendered": {
                      "text": "\n# shellcheck disable=SC2012\nfor patch in $(ls -1 \"${TMP_DIR}\"/patches | tail -n +2); do\n\tif ! git am --3way --committer-date-is-author-date \"${TMP_DIR}/patches/${patch}\"; then\n\t\tread -rp \"Applying ${TMP_DIR}/patches/${patch} failed, please resolve manually and press <return> to proceed...\"\n\tfi\ndone\n",
                      "markdown": "`\n# shellcheck disable=SC2012\nfor patch in $(ls -1 \"${TMP_DIR}\"/patches | tail -n +2); do\n\tif ! git am --3way --committer-date-is-author-date \"${TMP_DIR}/patches/${patch}\"; then\n\t\tread -rp \"Applying ${TMP_DIR}/patches/${patch} failed, please resolve manually and press <return> to proceed...\"\n\tfi\ndone\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 337,
                  "startColumn": 43,
                  "endLine": 337,
                  "endColumn": 49,
                  "snippet": {
                    "text": "cd_to \"${BPFTOOL_REPO}\"\n\n# shellcheck disable=SC2012\nfor patch in $(ls -1 \"${TMP_DIR}\"/patches | tail -n +2); do\n\tif ! git am --3way --committer-date-is-author-date \"${TMP_DIR}/patches/${patch}\"; then\n\t\tread -rp \"Applying ${TMP_DIR}/patches/${patch} failed, please resolve manually and press <return> to proceed...\"\n\tfi\n",
                    "rendered": {
                      "text": "cd_to \"${BPFTOOL_REPO}\"\n\n# shellcheck disable=SC2012\nfor patch in $(ls -1 \"${TMP_DIR}\"/patches | tail -n +2); do\n\tif ! git am --3way --committer-date-is-author-date \"${TMP_DIR}/patches/${patch}\"; then\n\t\tread -rp \"Applying ${TMP_DIR}/patches/${patch} failed, please resolve manually and press <return> to proceed...\"\n\tfi\n",
                      "markdown": "`cd_to \"${BPFTOOL_REPO}\"\n\n# shellcheck disable=SC2012\nfor patch in $(ls -1 \"${TMP_DIR}\"/patches | tail -n +2); do\n\tif ! git am --3way --committer-date-is-author-date \"${TMP_DIR}/patches/${patch}\"; then\n\t\tread -rp \"Applying ${TMP_DIR}/patches/${patch} failed, please resolve manually and press <return> to proceed...\"\n\tfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 333,
                  "startColumn": 8,
                  "endLine": 333,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# Exclude baseline commit and generate nice cover letter with summary\ngit format-patch --no-signature \"${SQUASH_BASE_TAG}\"..\"${SQUASH_TIP_TAG}\" --cover-letter -o \"${TMP_DIR}\"/patches\n\n# Now is time to re-apply bpftool-related linux patches to bpftool repo\ncd_to \"${BPFTOOL_REPO}\"\n\n# shellcheck disable=SC2012\n",
                    "rendered": {
                      "text": "# Exclude baseline commit and generate nice cover letter with summary\ngit format-patch --no-signature \"${SQUASH_BASE_TAG}\"..\"${SQUASH_TIP_TAG}\" --cover-letter -o \"${TMP_DIR}\"/patches\n\n# Now is time to re-apply bpftool-related linux patches to bpftool repo\ncd_to \"${BPFTOOL_REPO}\"\n\n# shellcheck disable=SC2012\n",
                      "markdown": "`# Exclude baseline commit and generate nice cover letter with summary\ngit format-patch --no-signature \"${SQUASH_BASE_TAG}\"..\"${SQUASH_TIP_TAG}\" --cover-letter -o \"${TMP_DIR}\"/patches\n\n# Now is time to re-apply bpftool-related linux patches to bpftool repo\ncd_to \"${BPFTOOL_REPO}\"\n\n# shellcheck disable=SC2012\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 330,
                  "startColumn": 69,
                  "endLine": 331,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\texit 2\nfi\n\n# Exclude baseline commit and generate nice cover letter with summary\ngit format-patch --no-signature \"${SQUASH_BASE_TAG}\"..\"${SQUASH_TIP_TAG}\" --cover-letter -o \"${TMP_DIR}\"/patches\n\n# Now is time to re-apply bpftool-related linux patches to bpftool repo\ncd_to \"${BPFTOOL_REPO}\"\n",
                    "rendered": {
                      "text": "\texit 2\nfi\n\n# Exclude baseline commit and generate nice cover letter with summary\ngit format-patch --no-signature \"${SQUASH_BASE_TAG}\"..\"${SQUASH_TIP_TAG}\" --cover-letter -o \"${TMP_DIR}\"/patches\n\n# Now is time to re-apply bpftool-related linux patches to bpftool repo\ncd_to \"${BPFTOOL_REPO}\"\n",
                      "markdown": "`\texit 2\nfi\n\n# Exclude baseline commit and generate nice cover letter with summary\ngit format-patch --no-signature \"${SQUASH_BASE_TAG}\"..\"${SQUASH_TIP_TAG}\" --cover-letter -o \"${TMP_DIR}\"/patches\n\n# Now is time to re-apply bpftool-related linux patches to bpftool repo\ncd_to \"${BPFTOOL_REPO}\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 330,
                  "startColumn": 38,
                  "endLine": 330,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\texit 2\nfi\n\n# Exclude baseline commit and generate nice cover letter with summary\ngit format-patch --no-signature \"${SQUASH_BASE_TAG}\"..\"${SQUASH_TIP_TAG}\" --cover-letter -o \"${TMP_DIR}\"/patches\n\n# Now is time to re-apply bpftool-related linux patches to bpftool repo\n",
                    "rendered": {
                      "text": "\texit 2\nfi\n\n# Exclude baseline commit and generate nice cover letter with summary\ngit format-patch --no-signature \"${SQUASH_BASE_TAG}\"..\"${SQUASH_TIP_TAG}\" --cover-letter -o \"${TMP_DIR}\"/patches\n\n# Now is time to re-apply bpftool-related linux patches to bpftool repo\n",
                      "markdown": "`\texit 2\nfi\n\n# Exclude baseline commit and generate nice cover letter with summary\ngit format-patch --no-signature \"${SQUASH_BASE_TAG}\"..\"${SQUASH_TIP_TAG}\" --cover-letter -o \"${TMP_DIR}\"/patches\n\n# Now is time to re-apply bpftool-related linux patches to bpftool repo\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 320,
                  "startColumn": 31,
                  "endLine": 320,
                  "endColumn": 36,
                  "snippet": {
                    "text": "# Move all bpftool files into __bpftool directory.\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch --prune-empty -f --tree-filter \"${BPFTOOL_TREE_FILTER}\" \"${SQUASH_TIP_TAG}\" \"${SQUASH_BASE_TAG}\"\n# Make __bpftool a new root directory\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch --prune-empty -f --subdirectory-filter __bpftool \"${SQUASH_TIP_TAG}\" \"${SQUASH_BASE_TAG}\"\n\n# If there are no new commits with  bpftool-related changes, bail out\nCOMMIT_CNT=$(git rev-list --count \"${SQUASH_BASE_TAG}\"..\"${SQUASH_TIP_TAG}\")\n",
                    "rendered": {
                      "text": "# Move all bpftool files into __bpftool directory.\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch --prune-empty -f --tree-filter \"${BPFTOOL_TREE_FILTER}\" \"${SQUASH_TIP_TAG}\" \"${SQUASH_BASE_TAG}\"\n# Make __bpftool a new root directory\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch --prune-empty -f --subdirectory-filter __bpftool \"${SQUASH_TIP_TAG}\" \"${SQUASH_BASE_TAG}\"\n\n# If there are no new commits with  bpftool-related changes, bail out\nCOMMIT_CNT=$(git rev-list --count \"${SQUASH_BASE_TAG}\"..\"${SQUASH_TIP_TAG}\")\n",
                      "markdown": "`# Move all bpftool files into __bpftool directory.\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch --prune-empty -f --tree-filter \"${BPFTOOL_TREE_FILTER}\" \"${SQUASH_TIP_TAG}\" \"${SQUASH_BASE_TAG}\"\n# Make __bpftool a new root directory\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch --prune-empty -f --subdirectory-filter __bpftool \"${SQUASH_TIP_TAG}\" \"${SQUASH_BASE_TAG}\"\n\n# If there are no new commits with  bpftool-related changes, bail out\nCOMMIT_CNT=$(git rev-list --count \"${SQUASH_BASE_TAG}\"..\"${SQUASH_TIP_TAG}\")\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 318,
                  "startColumn": 31,
                  "endLine": 318,
                  "endColumn": 36,
                  "snippet": {
                    "text": "cherry_pick_commits \"${BPF_BASELINE_TAG}\" \"${BPF_TIP_TAG}\"\n\n# Move all bpftool files into __bpftool directory.\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch --prune-empty -f --tree-filter \"${BPFTOOL_TREE_FILTER}\" \"${SQUASH_TIP_TAG}\" \"${SQUASH_BASE_TAG}\"\n# Make __bpftool a new root directory\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch --prune-empty -f --subdirectory-filter __bpftool \"${SQUASH_TIP_TAG}\" \"${SQUASH_BASE_TAG}\"\n\n",
                    "rendered": {
                      "text": "cherry_pick_commits \"${BPF_BASELINE_TAG}\" \"${BPF_TIP_TAG}\"\n\n# Move all bpftool files into __bpftool directory.\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch --prune-empty -f --tree-filter \"${BPFTOOL_TREE_FILTER}\" \"${SQUASH_TIP_TAG}\" \"${SQUASH_BASE_TAG}\"\n# Make __bpftool a new root directory\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch --prune-empty -f --subdirectory-filter __bpftool \"${SQUASH_TIP_TAG}\" \"${SQUASH_BASE_TAG}\"\n\n",
                      "markdown": "`cherry_pick_commits \"${BPF_BASELINE_TAG}\" \"${BPF_TIP_TAG}\"\n\n# Move all bpftool files into __bpftool directory.\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch --prune-empty -f --tree-filter \"${BPFTOOL_TREE_FILTER}\" \"${SQUASH_TIP_TAG}\" \"${SQUASH_BASE_TAG}\"\n# Make __bpftool a new root directory\nFILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch --prune-empty -f --subdirectory-filter __bpftool \"${SQUASH_TIP_TAG}\" \"${SQUASH_BASE_TAG}\"\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 308,
                  "startColumn": 50,
                  "endLine": 309,
                  "endColumn": 4,
                  "snippet": {
                    "text": "git branch \"${TIP_TAG}\" \"${TIP_COMMIT}\"\ngit branch \"${BPF_BASELINE_TAG}\" \"${BPF_BASELINE_COMMIT}\"\ngit branch \"${BPF_TIP_TAG}\" \"${BPF_TIP_COMMIT}\"\ngit branch \"${SQUASH_BASE_TAG}\" \"${SQUASH_COMMIT}\"\ngit checkout -b \"${SQUASH_TIP_TAG}\" \"${SQUASH_COMMIT}\"\n\n# Cherry-pick new commits onto squashed baseline commit\necho \"Cherry-pick for bpf-next...\"\n",
                    "rendered": {
                      "text": "git branch \"${TIP_TAG}\" \"${TIP_COMMIT}\"\ngit branch \"${BPF_BASELINE_TAG}\" \"${BPF_BASELINE_COMMIT}\"\ngit branch \"${BPF_TIP_TAG}\" \"${BPF_TIP_COMMIT}\"\ngit branch \"${SQUASH_BASE_TAG}\" \"${SQUASH_COMMIT}\"\ngit checkout -b \"${SQUASH_TIP_TAG}\" \"${SQUASH_COMMIT}\"\n\n# Cherry-pick new commits onto squashed baseline commit\necho \"Cherry-pick for bpf-next...\"\n",
                      "markdown": "`git branch \"${TIP_TAG}\" \"${TIP_COMMIT}\"\ngit branch \"${BPF_BASELINE_TAG}\" \"${BPF_BASELINE_COMMIT}\"\ngit branch \"${BPF_TIP_TAG}\" \"${BPF_TIP_COMMIT}\"\ngit branch \"${SQUASH_BASE_TAG}\" \"${SQUASH_COMMIT}\"\ngit checkout -b \"${SQUASH_TIP_TAG}\" \"${SQUASH_COMMIT}\"\n\n# Cherry-pick new commits onto squashed baseline commit\necho \"Cherry-pick for bpf-next...\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 307,
                  "startColumn": 47,
                  "endLine": 308,
                  "endColumn": 4,
                  "snippet": {
                    "text": "git branch \"${BASELINE_TAG}\" \"${BASELINE_COMMIT}\"\ngit branch \"${TIP_TAG}\" \"${TIP_COMMIT}\"\ngit branch \"${BPF_BASELINE_TAG}\" \"${BPF_BASELINE_COMMIT}\"\ngit branch \"${BPF_TIP_TAG}\" \"${BPF_TIP_COMMIT}\"\ngit branch \"${SQUASH_BASE_TAG}\" \"${SQUASH_COMMIT}\"\ngit checkout -b \"${SQUASH_TIP_TAG}\" \"${SQUASH_COMMIT}\"\n\n# Cherry-pick new commits onto squashed baseline commit\n",
                    "rendered": {
                      "text": "git branch \"${BASELINE_TAG}\" \"${BASELINE_COMMIT}\"\ngit branch \"${TIP_TAG}\" \"${TIP_COMMIT}\"\ngit branch \"${BPF_BASELINE_TAG}\" \"${BPF_BASELINE_COMMIT}\"\ngit branch \"${BPF_TIP_TAG}\" \"${BPF_TIP_COMMIT}\"\ngit branch \"${SQUASH_BASE_TAG}\" \"${SQUASH_COMMIT}\"\ngit checkout -b \"${SQUASH_TIP_TAG}\" \"${SQUASH_COMMIT}\"\n\n# Cherry-pick new commits onto squashed baseline commit\n",
                      "markdown": "`git branch \"${BASELINE_TAG}\" \"${BASELINE_COMMIT}\"\ngit branch \"${TIP_TAG}\" \"${TIP_COMMIT}\"\ngit branch \"${BPF_BASELINE_TAG}\" \"${BPF_BASELINE_COMMIT}\"\ngit branch \"${BPF_TIP_TAG}\" \"${BPF_TIP_COMMIT}\"\ngit branch \"${SQUASH_BASE_TAG}\" \"${SQUASH_COMMIT}\"\ngit checkout -b \"${SQUASH_TIP_TAG}\" \"${SQUASH_COMMIT}\"\n\n# Cherry-pick new commits onto squashed baseline commit\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 306,
                  "startColumn": 57,
                  "endLine": 307,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\ngit branch \"${BASELINE_TAG}\" \"${BASELINE_COMMIT}\"\ngit branch \"${TIP_TAG}\" \"${TIP_COMMIT}\"\ngit branch \"${BPF_BASELINE_TAG}\" \"${BPF_BASELINE_COMMIT}\"\ngit branch \"${BPF_TIP_TAG}\" \"${BPF_TIP_COMMIT}\"\ngit branch \"${SQUASH_BASE_TAG}\" \"${SQUASH_COMMIT}\"\ngit checkout -b \"${SQUASH_TIP_TAG}\" \"${SQUASH_COMMIT}\"\n\n",
                    "rendered": {
                      "text": "\ngit branch \"${BASELINE_TAG}\" \"${BASELINE_COMMIT}\"\ngit branch \"${TIP_TAG}\" \"${TIP_COMMIT}\"\ngit branch \"${BPF_BASELINE_TAG}\" \"${BPF_BASELINE_COMMIT}\"\ngit branch \"${BPF_TIP_TAG}\" \"${BPF_TIP_COMMIT}\"\ngit branch \"${SQUASH_BASE_TAG}\" \"${SQUASH_COMMIT}\"\ngit checkout -b \"${SQUASH_TIP_TAG}\" \"${SQUASH_COMMIT}\"\n\n",
                      "markdown": "`\ngit branch \"${BASELINE_TAG}\" \"${BASELINE_COMMIT}\"\ngit branch \"${TIP_TAG}\" \"${TIP_COMMIT}\"\ngit branch \"${BPF_BASELINE_TAG}\" \"${BPF_BASELINE_COMMIT}\"\ngit branch \"${BPF_TIP_TAG}\" \"${BPF_TIP_COMMIT}\"\ngit branch \"${SQUASH_BASE_TAG}\" \"${SQUASH_COMMIT}\"\ngit checkout -b \"${SQUASH_TIP_TAG}\" \"${SQUASH_COMMIT}\"\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 305,
                  "startColumn": 39,
                  "endLine": 306,
                  "endColumn": 4,
                  "snippet": {
                    "text": "echo \"PATCHES:          ${TMP_DIR}/patches\"\n\ngit branch \"${BASELINE_TAG}\" \"${BASELINE_COMMIT}\"\ngit branch \"${TIP_TAG}\" \"${TIP_COMMIT}\"\ngit branch \"${BPF_BASELINE_TAG}\" \"${BPF_BASELINE_COMMIT}\"\ngit branch \"${BPF_TIP_TAG}\" \"${BPF_TIP_COMMIT}\"\ngit branch \"${SQUASH_BASE_TAG}\" \"${SQUASH_COMMIT}\"\ngit checkout -b \"${SQUASH_TIP_TAG}\" \"${SQUASH_COMMIT}\"\n",
                    "rendered": {
                      "text": "echo \"PATCHES:          ${TMP_DIR}/patches\"\n\ngit branch \"${BASELINE_TAG}\" \"${BASELINE_COMMIT}\"\ngit branch \"${TIP_TAG}\" \"${TIP_COMMIT}\"\ngit branch \"${BPF_BASELINE_TAG}\" \"${BPF_BASELINE_COMMIT}\"\ngit branch \"${BPF_TIP_TAG}\" \"${BPF_TIP_COMMIT}\"\ngit branch \"${SQUASH_BASE_TAG}\" \"${SQUASH_COMMIT}\"\ngit checkout -b \"${SQUASH_TIP_TAG}\" \"${SQUASH_COMMIT}\"\n",
                      "markdown": "`echo \"PATCHES:          ${TMP_DIR}/patches\"\n\ngit branch \"${BASELINE_TAG}\" \"${BASELINE_COMMIT}\"\ngit branch \"${TIP_TAG}\" \"${TIP_COMMIT}\"\ngit branch \"${BPF_BASELINE_TAG}\" \"${BPF_BASELINE_COMMIT}\"\ngit branch \"${BPF_TIP_TAG}\" \"${BPF_TIP_COMMIT}\"\ngit branch \"${SQUASH_BASE_TAG}\" \"${SQUASH_COMMIT}\"\ngit checkout -b \"${SQUASH_TIP_TAG}\" \"${SQUASH_COMMIT}\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 304,
                  "startColumn": 49,
                  "endLine": 305,
                  "endColumn": 4,
                  "snippet": {
                    "text": "echo \"BPFTOOL SYNC TAG: ${BPFTOOL_SYNC_TAG}\"\necho \"PATCHES:          ${TMP_DIR}/patches\"\n\ngit branch \"${BASELINE_TAG}\" \"${BASELINE_COMMIT}\"\ngit branch \"${TIP_TAG}\" \"${TIP_COMMIT}\"\ngit branch \"${BPF_BASELINE_TAG}\" \"${BPF_BASELINE_COMMIT}\"\ngit branch \"${BPF_TIP_TAG}\" \"${BPF_TIP_COMMIT}\"\ngit branch \"${SQUASH_BASE_TAG}\" \"${SQUASH_COMMIT}\"\n",
                    "rendered": {
                      "text": "echo \"BPFTOOL SYNC TAG: ${BPFTOOL_SYNC_TAG}\"\necho \"PATCHES:          ${TMP_DIR}/patches\"\n\ngit branch \"${BASELINE_TAG}\" \"${BASELINE_COMMIT}\"\ngit branch \"${TIP_TAG}\" \"${TIP_COMMIT}\"\ngit branch \"${BPF_BASELINE_TAG}\" \"${BPF_BASELINE_COMMIT}\"\ngit branch \"${BPF_TIP_TAG}\" \"${BPF_TIP_COMMIT}\"\ngit branch \"${SQUASH_BASE_TAG}\" \"${SQUASH_COMMIT}\"\n",
                      "markdown": "`echo \"BPFTOOL SYNC TAG: ${BPFTOOL_SYNC_TAG}\"\necho \"PATCHES:          ${TMP_DIR}/patches\"\n\ngit branch \"${BASELINE_TAG}\" \"${BASELINE_COMMIT}\"\ngit branch \"${TIP_TAG}\" \"${TIP_COMMIT}\"\ngit branch \"${BPF_BASELINE_TAG}\" \"${BPF_BASELINE_COMMIT}\"\ngit branch \"${BPF_TIP_TAG}\" \"${BPF_TIP_COMMIT}\"\ngit branch \"${SQUASH_BASE_TAG}\" \"${SQUASH_COMMIT}\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 303,
                  "endLine": 304,
                  "endColumn": 4,
                  "snippet": {
                    "text": "echo \"VIEW TAG:         ${VIEW_TAG}\"\necho \"BPFTOOL SYNC TAG: ${BPFTOOL_SYNC_TAG}\"\necho \"PATCHES:          ${TMP_DIR}/patches\"\n\ngit branch \"${BASELINE_TAG}\" \"${BASELINE_COMMIT}\"\ngit branch \"${TIP_TAG}\" \"${TIP_COMMIT}\"\ngit branch \"${BPF_BASELINE_TAG}\" \"${BPF_BASELINE_COMMIT}\"\ngit branch \"${BPF_TIP_TAG}\" \"${BPF_TIP_COMMIT}\"\n",
                    "rendered": {
                      "text": "echo \"VIEW TAG:         ${VIEW_TAG}\"\necho \"BPFTOOL SYNC TAG: ${BPFTOOL_SYNC_TAG}\"\necho \"PATCHES:          ${TMP_DIR}/patches\"\n\ngit branch \"${BASELINE_TAG}\" \"${BASELINE_COMMIT}\"\ngit branch \"${TIP_TAG}\" \"${TIP_COMMIT}\"\ngit branch \"${BPF_BASELINE_TAG}\" \"${BPF_BASELINE_COMMIT}\"\ngit branch \"${BPF_TIP_TAG}\" \"${BPF_TIP_COMMIT}\"\n",
                      "markdown": "`echo \"VIEW TAG:         ${VIEW_TAG}\"\necho \"BPFTOOL SYNC TAG: ${BPFTOOL_SYNC_TAG}\"\necho \"PATCHES:          ${TMP_DIR}/patches\"\n\ngit branch \"${BASELINE_TAG}\" \"${BASELINE_COMMIT}\"\ngit branch \"${TIP_TAG}\" \"${TIP_COMMIT}\"\ngit branch \"${BPF_BASELINE_TAG}\" \"${BPF_BASELINE_COMMIT}\"\ngit branch \"${BPF_TIP_TAG}\" \"${BPF_TIP_COMMIT}\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 272,
                  "startColumn": 49,
                  "endLine": 272,
                  "endColumn": 54,
                  "snippet": {
                    "text": "# Use current kernel repo HEAD as a source of patches\ncd_to \"${LINUX_REPO}\"\nLINUX_ABS_DIR=$(pwd)\nTIP_SYM_REF=$(git symbolic-ref -q --short HEAD || git rev-parse HEAD)\nBASELINE_TAG=\"bpftool-baseline-${SUFFIX}\"\nTIP_TAG=\"bpftool-tip-${SUFFIX}\"\nBPF_BASELINE_TAG=\"bpftool-bpf-baseline-${SUFFIX}\"\n",
                    "rendered": {
                      "text": "# Use current kernel repo HEAD as a source of patches\ncd_to \"${LINUX_REPO}\"\nLINUX_ABS_DIR=$(pwd)\nTIP_SYM_REF=$(git symbolic-ref -q --short HEAD || git rev-parse HEAD)\nBASELINE_TAG=\"bpftool-baseline-${SUFFIX}\"\nTIP_TAG=\"bpftool-tip-${SUFFIX}\"\nBPF_BASELINE_TAG=\"bpftool-bpf-baseline-${SUFFIX}\"\n",
                      "markdown": "`# Use current kernel repo HEAD as a source of patches\ncd_to \"${LINUX_REPO}\"\nLINUX_ABS_DIR=$(pwd)\nTIP_SYM_REF=$(git symbolic-ref -q --short HEAD || git rev-parse HEAD)\nBASELINE_TAG=\"bpftool-baseline-${SUFFIX}\"\nTIP_TAG=\"bpftool-tip-${SUFFIX}\"\nBPF_BASELINE_TAG=\"bpftool-bpf-baseline-${SUFFIX}\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 272,
                  "startColumn": 41,
                  "endLine": 272,
                  "endColumn": 47,
                  "snippet": {
                    "text": "# Use current kernel repo HEAD as a source of patches\ncd_to \"${LINUX_REPO}\"\nLINUX_ABS_DIR=$(pwd)\nTIP_SYM_REF=$(git symbolic-ref -q --short HEAD || git rev-parse HEAD)\nBASELINE_TAG=\"bpftool-baseline-${SUFFIX}\"\nTIP_TAG=\"bpftool-tip-${SUFFIX}\"\nBPF_BASELINE_TAG=\"bpftool-bpf-baseline-${SUFFIX}\"\n",
                    "rendered": {
                      "text": "# Use current kernel repo HEAD as a source of patches\ncd_to \"${LINUX_REPO}\"\nLINUX_ABS_DIR=$(pwd)\nTIP_SYM_REF=$(git symbolic-ref -q --short HEAD || git rev-parse HEAD)\nBASELINE_TAG=\"bpftool-baseline-${SUFFIX}\"\nTIP_TAG=\"bpftool-tip-${SUFFIX}\"\nBPF_BASELINE_TAG=\"bpftool-bpf-baseline-${SUFFIX}\"\n",
                      "markdown": "`# Use current kernel repo HEAD as a source of patches\ncd_to \"${LINUX_REPO}\"\nLINUX_ABS_DIR=$(pwd)\nTIP_SYM_REF=$(git symbolic-ref -q --short HEAD || git rev-parse HEAD)\nBASELINE_TAG=\"bpftool-baseline-${SUFFIX}\"\nTIP_TAG=\"bpftool-tip-${SUFFIX}\"\nBPF_BASELINE_TAG=\"bpftool-bpf-baseline-${SUFFIX}\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 269,
                  "startColumn": 25,
                  "endLine": 269,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\techo \"$h\" \"$(commit_signature \"$h\")\" >> \"${TMP_DIR}\"/bpftool_commits.txt\ndone\n\n# Use current kernel repo HEAD as a source of patches\ncd_to \"${LINUX_REPO}\"\nLINUX_ABS_DIR=$(pwd)\nTIP_SYM_REF=$(git symbolic-ref -q --short HEAD || git rev-parse HEAD)\n",
                    "rendered": {
                      "text": "\techo \"$h\" \"$(commit_signature \"$h\")\" >> \"${TMP_DIR}\"/bpftool_commits.txt\ndone\n\n# Use current kernel repo HEAD as a source of patches\ncd_to \"${LINUX_REPO}\"\nLINUX_ABS_DIR=$(pwd)\nTIP_SYM_REF=$(git symbolic-ref -q --short HEAD || git rev-parse HEAD)\n",
                      "markdown": "`\techo \"$h\" \"$(commit_signature \"$h\")\" >> \"${TMP_DIR}\"/bpftool_commits.txt\ndone\n\n# Use current kernel repo HEAD as a source of patches\ncd_to \"${LINUX_REPO}\"\nLINUX_ABS_DIR=$(pwd)\nTIP_SYM_REF=$(git symbolic-ref -q --short HEAD || git rev-parse HEAD)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 245,
                  "startColumn": 1,
                  "endLine": 245,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tcd_to \"${BPFTOOL_REPO}\"\n\tif [[ -n \"$(git status --porcelain --untracked-files=no)\" ]]; then\n\t\tgit add libbpf\n\t\tgit commit --signoff -m 'sync: Update libbpf submodule' \\\n\t\t\t-m \"\\\nPull latest libbpf from mirror.\nLibbpf version: ${LIBBPF_VERSION}\n",
                    "rendered": {
                      "text": "\tcd_to \"${BPFTOOL_REPO}\"\n\tif [[ -n \"$(git status --porcelain --untracked-files=no)\" ]]; then\n\t\tgit add libbpf\n\t\tgit commit --signoff -m 'sync: Update libbpf submodule' \\\n\t\t\t-m \"\\\nPull latest libbpf from mirror.\nLibbpf version: ${LIBBPF_VERSION}\n",
                      "markdown": "`\tcd_to \"${BPFTOOL_REPO}\"\n\tif [[ -n \"$(git status --porcelain --untracked-files=no)\" ]]; then\n\t\tgit add libbpf\n\t\tgit commit --signoff -m 'sync: Update libbpf submodule' \\\n\t\t\t-m \"\\\nPull latest libbpf from mirror.\nLibbpf version: ${LIBBPF_VERSION}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 244,
                  "startColumn": 1,
                  "endLine": 244,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tLIBBPF_COMMIT=$(git rev-parse HEAD)\n\tcd_to \"${BPFTOOL_REPO}\"\n\tif [[ -n \"$(git status --porcelain --untracked-files=no)\" ]]; then\n\t\tgit add libbpf\n\t\tgit commit --signoff -m 'sync: Update libbpf submodule' \\\n\t\t\t-m \"\\\nPull latest libbpf from mirror.\n",
                    "rendered": {
                      "text": "\tLIBBPF_COMMIT=$(git rev-parse HEAD)\n\tcd_to \"${BPFTOOL_REPO}\"\n\tif [[ -n \"$(git status --porcelain --untracked-files=no)\" ]]; then\n\t\tgit add libbpf\n\t\tgit commit --signoff -m 'sync: Update libbpf submodule' \\\n\t\t\t-m \"\\\nPull latest libbpf from mirror.\n",
                      "markdown": "`\tLIBBPF_COMMIT=$(git rev-parse HEAD)\n\tcd_to \"${BPFTOOL_REPO}\"\n\tif [[ -n \"$(git status --porcelain --untracked-files=no)\" ]]; then\n\t\tgit add libbpf\n\t\tgit commit --signoff -m 'sync: Update libbpf submodule' \\\n\t\t\t-m \"\\\nPull latest libbpf from mirror.\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 240,
                  "startColumn": 85,
                  "endLine": 240,
                  "endColumn": 90,
                  "snippet": {
                    "text": "if [[ \"${SKIP_LIBBPF_UPDATE:-0}\" -ne 1 ]]; then\n\tcd_to \"${BPFTOOL_REPO}\"/libbpf\n\tgit pull origin master\n\tLIBBPF_VERSION=$(grep -oE '^LIBBPF_([0-9.]+)' src/libbpf.map | sort -rV | head -n1 | cut -d'_' -f2)\n\tLIBBPF_COMMIT=$(git rev-parse HEAD)\n\tcd_to \"${BPFTOOL_REPO}\"\n\tif [[ -n \"$(git status --porcelain --untracked-files=no)\" ]]; then\n",
                    "rendered": {
                      "text": "if [[ \"${SKIP_LIBBPF_UPDATE:-0}\" -ne 1 ]]; then\n\tcd_to \"${BPFTOOL_REPO}\"/libbpf\n\tgit pull origin master\n\tLIBBPF_VERSION=$(grep -oE '^LIBBPF_([0-9.]+)' src/libbpf.map | sort -rV | head -n1 | cut -d'_' -f2)\n\tLIBBPF_COMMIT=$(git rev-parse HEAD)\n\tcd_to \"${BPFTOOL_REPO}\"\n\tif [[ -n \"$(git status --porcelain --untracked-files=no)\" ]]; then\n",
                      "markdown": "`if [[ \"${SKIP_LIBBPF_UPDATE:-0}\" -ne 1 ]]; then\n\tcd_to \"${BPFTOOL_REPO}\"/libbpf\n\tgit pull origin master\n\tLIBBPF_VERSION=$(grep -oE '^LIBBPF_([0-9.]+)' src/libbpf.map | sort -rV | head -n1 | cut -d'_' -f2)\n\tLIBBPF_COMMIT=$(git rev-parse HEAD)\n\tcd_to \"${BPFTOOL_REPO}\"\n\tif [[ -n \"$(git status --porcelain --untracked-files=no)\" ]]; then\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 240,
                  "startColumn": 74,
                  "endLine": 240,
                  "endColumn": 80,
                  "snippet": {
                    "text": "if [[ \"${SKIP_LIBBPF_UPDATE:-0}\" -ne 1 ]]; then\n\tcd_to \"${BPFTOOL_REPO}\"/libbpf\n\tgit pull origin master\n\tLIBBPF_VERSION=$(grep -oE '^LIBBPF_([0-9.]+)' src/libbpf.map | sort -rV | head -n1 | cut -d'_' -f2)\n\tLIBBPF_COMMIT=$(git rev-parse HEAD)\n\tcd_to \"${BPFTOOL_REPO}\"\n\tif [[ -n \"$(git status --porcelain --untracked-files=no)\" ]]; then\n",
                    "rendered": {
                      "text": "if [[ \"${SKIP_LIBBPF_UPDATE:-0}\" -ne 1 ]]; then\n\tcd_to \"${BPFTOOL_REPO}\"/libbpf\n\tgit pull origin master\n\tLIBBPF_VERSION=$(grep -oE '^LIBBPF_([0-9.]+)' src/libbpf.map | sort -rV | head -n1 | cut -d'_' -f2)\n\tLIBBPF_COMMIT=$(git rev-parse HEAD)\n\tcd_to \"${BPFTOOL_REPO}\"\n\tif [[ -n \"$(git status --porcelain --untracked-files=no)\" ]]; then\n",
                      "markdown": "`if [[ \"${SKIP_LIBBPF_UPDATE:-0}\" -ne 1 ]]; then\n\tcd_to \"${BPFTOOL_REPO}\"/libbpf\n\tgit pull origin master\n\tLIBBPF_VERSION=$(grep -oE '^LIBBPF_([0-9.]+)' src/libbpf.map | sort -rV | head -n1 | cut -d'_' -f2)\n\tLIBBPF_COMMIT=$(git rev-parse HEAD)\n\tcd_to \"${BPFTOOL_REPO}\"\n\tif [[ -n \"$(git status --porcelain --untracked-files=no)\" ]]; then\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 240,
                  "startColumn": 63,
                  "endLine": 240,
                  "endColumn": 69,
                  "snippet": {
                    "text": "if [[ \"${SKIP_LIBBPF_UPDATE:-0}\" -ne 1 ]]; then\n\tcd_to \"${BPFTOOL_REPO}\"/libbpf\n\tgit pull origin master\n\tLIBBPF_VERSION=$(grep -oE '^LIBBPF_([0-9.]+)' src/libbpf.map | sort -rV | head -n1 | cut -d'_' -f2)\n\tLIBBPF_COMMIT=$(git rev-parse HEAD)\n\tcd_to \"${BPFTOOL_REPO}\"\n\tif [[ -n \"$(git status --porcelain --untracked-files=no)\" ]]; then\n",
                    "rendered": {
                      "text": "if [[ \"${SKIP_LIBBPF_UPDATE:-0}\" -ne 1 ]]; then\n\tcd_to \"${BPFTOOL_REPO}\"/libbpf\n\tgit pull origin master\n\tLIBBPF_VERSION=$(grep -oE '^LIBBPF_([0-9.]+)' src/libbpf.map | sort -rV | head -n1 | cut -d'_' -f2)\n\tLIBBPF_COMMIT=$(git rev-parse HEAD)\n\tcd_to \"${BPFTOOL_REPO}\"\n\tif [[ -n \"$(git status --porcelain --untracked-files=no)\" ]]; then\n",
                      "markdown": "`if [[ \"${SKIP_LIBBPF_UPDATE:-0}\" -ne 1 ]]; then\n\tcd_to \"${BPFTOOL_REPO}\"/libbpf\n\tgit pull origin master\n\tLIBBPF_VERSION=$(grep -oE '^LIBBPF_([0-9.]+)' src/libbpf.map | sort -rV | head -n1 | cut -d'_' -f2)\n\tLIBBPF_COMMIT=$(git rev-parse HEAD)\n\tcd_to \"${BPFTOOL_REPO}\"\n\tif [[ -n \"$(git status --porcelain --untracked-files=no)\" ]]; then\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 239,
                  "endLine": 239,
                  "endColumn": 5,
                  "snippet": {
                    "text": "# Update libbpf\nif [[ \"${SKIP_LIBBPF_UPDATE:-0}\" -ne 1 ]]; then\n\tcd_to \"${BPFTOOL_REPO}\"/libbpf\n\tgit pull origin master\n\tLIBBPF_VERSION=$(grep -oE '^LIBBPF_([0-9.]+)' src/libbpf.map | sort -rV | head -n1 | cut -d'_' -f2)\n\tLIBBPF_COMMIT=$(git rev-parse HEAD)\n\tcd_to \"${BPFTOOL_REPO}\"\n",
                    "rendered": {
                      "text": "# Update libbpf\nif [[ \"${SKIP_LIBBPF_UPDATE:-0}\" -ne 1 ]]; then\n\tcd_to \"${BPFTOOL_REPO}\"/libbpf\n\tgit pull origin master\n\tLIBBPF_VERSION=$(grep -oE '^LIBBPF_([0-9.]+)' src/libbpf.map | sort -rV | head -n1 | cut -d'_' -f2)\n\tLIBBPF_COMMIT=$(git rev-parse HEAD)\n\tcd_to \"${BPFTOOL_REPO}\"\n",
                      "markdown": "`# Update libbpf\nif [[ \"${SKIP_LIBBPF_UPDATE:-0}\" -ne 1 ]]; then\n\tcd_to \"${BPFTOOL_REPO}\"/libbpf\n\tgit pull origin master\n\tLIBBPF_VERSION=$(grep -oE '^LIBBPF_([0-9.]+)' src/libbpf.map | sort -rV | head -n1 | cut -d'_' -f2)\n\tLIBBPF_COMMIT=$(git rev-parse HEAD)\n\tcd_to \"${BPFTOOL_REPO}\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 233,
                  "startColumn": 41,
                  "endLine": 234,
                  "endColumn": 4,
                  "snippet": {
                    "text": "}\n\ncd_to \"${BPFTOOL_REPO}\"\nBPFTOOL_SYNC_TAG=\"bpftool-sync-${SUFFIX}\"\ngit checkout -b \"${BPFTOOL_SYNC_TAG}\"\n\n# Update libbpf\nif [[ \"${SKIP_LIBBPF_UPDATE:-0}\" -ne 1 ]]; then\n",
                    "rendered": {
                      "text": "}\n\ncd_to \"${BPFTOOL_REPO}\"\nBPFTOOL_SYNC_TAG=\"bpftool-sync-${SUFFIX}\"\ngit checkout -b \"${BPFTOOL_SYNC_TAG}\"\n\n# Update libbpf\nif [[ \"${SKIP_LIBBPF_UPDATE:-0}\" -ne 1 ]]; then\n",
                      "markdown": "`}\n\ncd_to \"${BPFTOOL_REPO}\"\nBPFTOOL_SYNC_TAG=\"bpftool-sync-${SUFFIX}\"\ngit checkout -b \"${BPFTOOL_SYNC_TAG}\"\n\n# Update libbpf\nif [[ \"${SKIP_LIBBPF_UPDATE:-0}\" -ne 1 ]]; then\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 226,
                  "startColumn": 1,
                  "endLine": 226,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\t      \"${SQUASH_BASE_TAG}\" \"${SQUASH_TIP_TAG}\" || true\n\t# shellcheck disable=SC2015\n\tgit show-ref --verify --quiet refs/heads/\"${VIEW_TAG}\" && \\\n\t\tgit branch -D \"${VIEW_TAG}\" || true\n\n\tcd_to .\n\techo \"DONE.\"\n",
                    "rendered": {
                      "text": "\t\t      \"${SQUASH_BASE_TAG}\" \"${SQUASH_TIP_TAG}\" || true\n\t# shellcheck disable=SC2015\n\tgit show-ref --verify --quiet refs/heads/\"${VIEW_TAG}\" && \\\n\t\tgit branch -D \"${VIEW_TAG}\" || true\n\n\tcd_to .\n\techo \"DONE.\"\n",
                      "markdown": "`\t\t      \"${SQUASH_BASE_TAG}\" \"${SQUASH_TIP_TAG}\" || true\n\t# shellcheck disable=SC2015\n\tgit show-ref --verify --quiet refs/heads/\"${VIEW_TAG}\" && \\\n\t\tgit branch -D \"${VIEW_TAG}\" || true\n\n\tcd_to .\n\techo \"DONE.\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 225,
                  "endLine": 225,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tgit branch -D \"${BASELINE_TAG}\" \"${TIP_TAG}\" \"${BPF_BASELINE_TAG}\" \"${BPF_TIP_TAG}\" \\\n\t\t      \"${SQUASH_BASE_TAG}\" \"${SQUASH_TIP_TAG}\" || true\n\t# shellcheck disable=SC2015\n\tgit show-ref --verify --quiet refs/heads/\"${VIEW_TAG}\" && \\\n\t\tgit branch -D \"${VIEW_TAG}\" || true\n\n\tcd_to .\n",
                    "rendered": {
                      "text": "\tgit branch -D \"${BASELINE_TAG}\" \"${TIP_TAG}\" \"${BPF_BASELINE_TAG}\" \"${BPF_TIP_TAG}\" \\\n\t\t      \"${SQUASH_BASE_TAG}\" \"${SQUASH_TIP_TAG}\" || true\n\t# shellcheck disable=SC2015\n\tgit show-ref --verify --quiet refs/heads/\"${VIEW_TAG}\" && \\\n\t\tgit branch -D \"${VIEW_TAG}\" || true\n\n\tcd_to .\n",
                      "markdown": "`\tgit branch -D \"${BASELINE_TAG}\" \"${TIP_TAG}\" \"${BPF_BASELINE_TAG}\" \"${BPF_TIP_TAG}\" \\\n\t\t      \"${SQUASH_BASE_TAG}\" \"${SQUASH_TIP_TAG}\" || true\n\t# shellcheck disable=SC2015\n\tgit show-ref --verify --quiet refs/heads/\"${VIEW_TAG}\" && \\\n\t\tgit branch -D \"${VIEW_TAG}\" || true\n\n\tcd_to .\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 222,
                  "endLine": 222,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\trm -r -- \"${TMP_DIR}\"\n\tcd_to \"${LINUX_REPO}\"\n\tgit checkout \"${TIP_SYM_REF}\"\n\tgit branch -D \"${BASELINE_TAG}\" \"${TIP_TAG}\" \"${BPF_BASELINE_TAG}\" \"${BPF_TIP_TAG}\" \\\n\t\t      \"${SQUASH_BASE_TAG}\" \"${SQUASH_TIP_TAG}\" || true\n\t# shellcheck disable=SC2015\n\tgit show-ref --verify --quiet refs/heads/\"${VIEW_TAG}\" && \\\n",
                    "rendered": {
                      "text": "\trm -r -- \"${TMP_DIR}\"\n\tcd_to \"${LINUX_REPO}\"\n\tgit checkout \"${TIP_SYM_REF}\"\n\tgit branch -D \"${BASELINE_TAG}\" \"${TIP_TAG}\" \"${BPF_BASELINE_TAG}\" \"${BPF_TIP_TAG}\" \\\n\t\t      \"${SQUASH_BASE_TAG}\" \"${SQUASH_TIP_TAG}\" || true\n\t# shellcheck disable=SC2015\n\tgit show-ref --verify --quiet refs/heads/\"${VIEW_TAG}\" && \\\n",
                      "markdown": "`\trm -r -- \"${TMP_DIR}\"\n\tcd_to \"${LINUX_REPO}\"\n\tgit checkout \"${TIP_SYM_REF}\"\n\tgit branch -D \"${BASELINE_TAG}\" \"${TIP_TAG}\" \"${BPF_BASELINE_TAG}\" \"${BPF_TIP_TAG}\" \\\n\t\t      \"${SQUASH_BASE_TAG}\" \"${SQUASH_TIP_TAG}\" || true\n\t# shellcheck disable=SC2015\n\tgit show-ref --verify --quiet refs/heads/\"${VIEW_TAG}\" && \\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 221,
                  "endLine": 221,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\techo \"Cleaning up...\"\n\trm -r -- \"${TMP_DIR}\"\n\tcd_to \"${LINUX_REPO}\"\n\tgit checkout \"${TIP_SYM_REF}\"\n\tgit branch -D \"${BASELINE_TAG}\" \"${TIP_TAG}\" \"${BPF_BASELINE_TAG}\" \"${BPF_TIP_TAG}\" \\\n\t\t      \"${SQUASH_BASE_TAG}\" \"${SQUASH_TIP_TAG}\" || true\n\t# shellcheck disable=SC2015\n",
                    "rendered": {
                      "text": "\techo \"Cleaning up...\"\n\trm -r -- \"${TMP_DIR}\"\n\tcd_to \"${LINUX_REPO}\"\n\tgit checkout \"${TIP_SYM_REF}\"\n\tgit branch -D \"${BASELINE_TAG}\" \"${TIP_TAG}\" \"${BPF_BASELINE_TAG}\" \"${BPF_TIP_TAG}\" \\\n\t\t      \"${SQUASH_BASE_TAG}\" \"${SQUASH_TIP_TAG}\" || true\n\t# shellcheck disable=SC2015\n",
                      "markdown": "`\techo \"Cleaning up...\"\n\trm -r -- \"${TMP_DIR}\"\n\tcd_to \"${LINUX_REPO}\"\n\tgit checkout \"${TIP_SYM_REF}\"\n\tgit branch -D \"${BASELINE_TAG}\" \"${TIP_TAG}\" \"${BPF_BASELINE_TAG}\" \"${BPF_TIP_TAG}\" \\\n\t\t      \"${SQUASH_BASE_TAG}\" \"${SQUASH_TIP_TAG}\" || true\n\t# shellcheck disable=SC2015\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 195,
                  "startColumn": 24,
                  "endLine": 195,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n\t\t\t\tgit add .\n\t\t\t\t# GIT_EDITOR=true to avoid editor popping up to edit commit message\n\t\t\t\tif ! GIT_EDITOR=true git cherry-pick --continue &>/dev/null; then\n\t\t\t\t\techo \"Error! That still failed! Please resolve manually.\"\n\t\t\t\telse\n\t\t\t\t\techo \"Success! All cherry-pick conflicts were resolved for '${desc}'!\"\n",
                    "rendered": {
                      "text": "\n\t\t\t\tgit add .\n\t\t\t\t# GIT_EDITOR=true to avoid editor popping up to edit commit message\n\t\t\t\tif ! GIT_EDITOR=true git cherry-pick --continue &>/dev/null; then\n\t\t\t\t\techo \"Error! That still failed! Please resolve manually.\"\n\t\t\t\telse\n\t\t\t\t\techo \"Success! All cherry-pick conflicts were resolved for '${desc}'!\"\n",
                      "markdown": "`\n\t\t\t\tgit add .\n\t\t\t\t# GIT_EDITOR=true to avoid editor popping up to edit commit message\n\t\t\t\tif ! GIT_EDITOR=true git cherry-pick --continue &>/dev/null; then\n\t\t\t\t\techo \"Error! That still failed! Please resolve manually.\"\n\t\t\t\telse\n\t\t\t\t\techo \"Success! All cherry-pick conflicts were resolved for '${desc}'!\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 193,
                  "startColumn": 3,
                  "endLine": 193,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\t\t\t\tcontinue\n\t\t\t\tfi\n\n\t\t\t\tgit add .\n\t\t\t\t# GIT_EDITOR=true to avoid editor popping up to edit commit message\n\t\t\t\tif ! GIT_EDITOR=true git cherry-pick --continue &>/dev/null; then\n\t\t\t\t\techo \"Error! That still failed! Please resolve manually.\"\n",
                    "rendered": {
                      "text": "\t\t\t\t\tcontinue\n\t\t\t\tfi\n\n\t\t\t\tgit add .\n\t\t\t\t# GIT_EDITOR=true to avoid editor popping up to edit commit message\n\t\t\t\tif ! GIT_EDITOR=true git cherry-pick --continue &>/dev/null; then\n\t\t\t\t\techo \"Error! That still failed! Please resolve manually.\"\n",
                      "markdown": "`\t\t\t\t\tcontinue\n\t\t\t\tfi\n\n\t\t\t\tgit add .\n\t\t\t\t# GIT_EDITOR=true to avoid editor popping up to edit commit message\n\t\t\t\tif ! GIT_EDITOR=true git cherry-pick --continue &>/dev/null; then\n\t\t\t\t\techo \"Error! That still failed! Please resolve manually.\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 4,
                  "endLine": 189,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t\t\techo \"Looks like only non-bpftool files have conflicts, ignoring...\"\n\t\t\t\tif ((\"${conflict_cnt}\" == 0)); then\n\t\t\t\t\techo \"Empty cherry-pick, skipping it...\"\n\t\t\t\t\tgit cherry-pick --abort\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t\techo \"Looks like only non-bpftool files have conflicts, ignoring...\"\n\t\t\t\tif ((\"${conflict_cnt}\" == 0)); then\n\t\t\t\t\techo \"Empty cherry-pick, skipping it...\"\n\t\t\t\t\tgit cherry-pick --abort\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\n",
                      "markdown": "`\t\t\t\techo \"Looks like only non-bpftool files have conflicts, ignoring...\"\n\t\t\t\tif ((\"${conflict_cnt}\" == 0)); then\n\t\t\t\t\techo \"Empty cherry-pick, skipping it...\"\n\t\t\t\t\tgit cherry-pick --abort\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 21,
                  "endLine": 182,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\t\techo \"Warning! Cherry-picking '${desc} failed, checking if it's non-bpftool files causing problems...\"\n\t\t\t# shellcheck disable=SC2068\n\t\t\tbpftool_conflict_cnt=$(git diff --name-only --diff-filter=U -- ${BPFTOOL_PATHS[@]} | wc -l)\n\t\t\tconflict_cnt=$(git diff --name-only | wc -l)\n\t\t\tprompt_resolution=1\n\n\t\t\tif ((\"${bpftool_conflict_cnt}\" == 0)); then\n",
                    "rendered": {
                      "text": "\t\t\techo \"Warning! Cherry-picking '${desc} failed, checking if it's non-bpftool files causing problems...\"\n\t\t\t# shellcheck disable=SC2068\n\t\t\tbpftool_conflict_cnt=$(git diff --name-only --diff-filter=U -- ${BPFTOOL_PATHS[@]} | wc -l)\n\t\t\tconflict_cnt=$(git diff --name-only | wc -l)\n\t\t\tprompt_resolution=1\n\n\t\t\tif ((\"${bpftool_conflict_cnt}\" == 0)); then\n",
                      "markdown": "`\t\t\techo \"Warning! Cherry-picking '${desc} failed, checking if it's non-bpftool files causing problems...\"\n\t\t\t# shellcheck disable=SC2068\n\t\t\tbpftool_conflict_cnt=$(git diff --name-only --diff-filter=U -- ${BPFTOOL_PATHS[@]} | wc -l)\n\t\t\tconflict_cnt=$(git diff --name-only | wc -l)\n\t\t\tprompt_resolution=1\n\n\t\t\tif ((\"${bpftool_conflict_cnt}\" == 0)); then\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 29,
                  "endLine": 181,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\t\tif ! git cherry-pick \"${new_commit}\" &>/dev/null; then\n\t\t\techo \"Warning! Cherry-picking '${desc} failed, checking if it's non-bpftool files causing problems...\"\n\t\t\t# shellcheck disable=SC2068\n\t\t\tbpftool_conflict_cnt=$(git diff --name-only --diff-filter=U -- ${BPFTOOL_PATHS[@]} | wc -l)\n\t\t\tconflict_cnt=$(git diff --name-only | wc -l)\n\t\t\tprompt_resolution=1\n\n",
                    "rendered": {
                      "text": "\t\tif ! git cherry-pick \"${new_commit}\" &>/dev/null; then\n\t\t\techo \"Warning! Cherry-picking '${desc} failed, checking if it's non-bpftool files causing problems...\"\n\t\t\t# shellcheck disable=SC2068\n\t\t\tbpftool_conflict_cnt=$(git diff --name-only --diff-filter=U -- ${BPFTOOL_PATHS[@]} | wc -l)\n\t\t\tconflict_cnt=$(git diff --name-only | wc -l)\n\t\t\tprompt_resolution=1\n\n",
                      "markdown": "`\t\tif ! git cherry-pick \"${new_commit}\" &>/dev/null; then\n\t\t\techo \"Warning! Cherry-picking '${desc} failed, checking if it's non-bpftool files causing problems...\"\n\t\t\t# shellcheck disable=SC2068\n\t\t\tbpftool_conflict_cnt=$(git diff --name-only --diff-filter=U -- ${BPFTOOL_PATHS[@]} | wc -l)\n\t\t\tconflict_cnt=$(git diff --name-only | wc -l)\n\t\t\tprompt_resolution=1\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 6,
                  "endLine": 178,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\tfi\n\t\t# commit hasn't been synced into bpftool yet\n\t\techo \"Picking '${desc}'...\"\n\t\tif ! git cherry-pick \"${new_commit}\" &>/dev/null; then\n\t\t\techo \"Warning! Cherry-picking '${desc} failed, checking if it's non-bpftool files causing problems...\"\n\t\t\t# shellcheck disable=SC2068\n\t\t\tbpftool_conflict_cnt=$(git diff --name-only --diff-filter=U -- ${BPFTOOL_PATHS[@]} | wc -l)\n",
                    "rendered": {
                      "text": "\t\tfi\n\t\t# commit hasn't been synced into bpftool yet\n\t\techo \"Picking '${desc}'...\"\n\t\tif ! git cherry-pick \"${new_commit}\" &>/dev/null; then\n\t\t\techo \"Warning! Cherry-picking '${desc} failed, checking if it's non-bpftool files causing problems...\"\n\t\t\t# shellcheck disable=SC2068\n\t\t\tbpftool_conflict_cnt=$(git diff --name-only --diff-filter=U -- ${BPFTOOL_PATHS[@]} | wc -l)\n",
                      "markdown": "`\t\tfi\n\t\t# commit hasn't been synced into bpftool yet\n\t\techo \"Picking '${desc}'...\"\n\t\tif ! git cherry-pick \"${new_commit}\" &>/dev/null; then\n\t\t\techo \"Warning! Cherry-picking '${desc} failed, checking if it's non-bpftool files causing problems...\"\n\t\t\t# shellcheck disable=SC2068\n\t\t\tbpftool_conflict_cnt=$(git diff --name-only --diff-filter=U -- ${BPFTOOL_PATHS[@]} | wc -l)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 19,
                  "endLine": 157,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\t\t# not 100% the same commit, so check with user\n\t\t\techo \"Commit '${desc}' is synced into bpftool as:\"\n\t\t\tgrep -F \"${signature}\" \"${TMP_DIR}\"/bpftool_commits.txt | \\\n\t\t\t\tcut -d'|' -f1 | sed -e 's/^/- /'\n\t\t\tif ((\"${manual_mode}\" != 1 && \"${synced_cnt}\" == 1)); then\n\t\t\t\techo \"Skipping '${desc}' due to unique match...\"\n\t\t\t\tcontinue\n",
                    "rendered": {
                      "text": "\t\t\t# not 100% the same commit, so check with user\n\t\t\techo \"Commit '${desc}' is synced into bpftool as:\"\n\t\t\tgrep -F \"${signature}\" \"${TMP_DIR}\"/bpftool_commits.txt | \\\n\t\t\t\tcut -d'|' -f1 | sed -e 's/^/- /'\n\t\t\tif ((\"${manual_mode}\" != 1 && \"${synced_cnt}\" == 1)); then\n\t\t\t\techo \"Skipping '${desc}' due to unique match...\"\n\t\t\t\tcontinue\n",
                      "markdown": "`\t\t\t# not 100% the same commit, so check with user\n\t\t\techo \"Commit '${desc}' is synced into bpftool as:\"\n\t\t\tgrep -F \"${signature}\" \"${TMP_DIR}\"/bpftool_commits.txt | \\\n\t\t\t\tcut -d'|' -f1 | sed -e 's/^/- /'\n\t\t\tif ((\"${manual_mode}\" != 1 && \"${synced_cnt}\" == 1)); then\n\t\t\t\techo \"Skipping '${desc}' due to unique match...\"\n\t\t\t\tcontinue\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 3,
                  "endLine": 157,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\t\t# not 100% the same commit, so check with user\n\t\t\techo \"Commit '${desc}' is synced into bpftool as:\"\n\t\t\tgrep -F \"${signature}\" \"${TMP_DIR}\"/bpftool_commits.txt | \\\n\t\t\t\tcut -d'|' -f1 | sed -e 's/^/- /'\n\t\t\tif ((\"${manual_mode}\" != 1 && \"${synced_cnt}\" == 1)); then\n\t\t\t\techo \"Skipping '${desc}' due to unique match...\"\n\t\t\t\tcontinue\n",
                    "rendered": {
                      "text": "\t\t\t# not 100% the same commit, so check with user\n\t\t\techo \"Commit '${desc}' is synced into bpftool as:\"\n\t\t\tgrep -F \"${signature}\" \"${TMP_DIR}\"/bpftool_commits.txt | \\\n\t\t\t\tcut -d'|' -f1 | sed -e 's/^/- /'\n\t\t\tif ((\"${manual_mode}\" != 1 && \"${synced_cnt}\" == 1)); then\n\t\t\t\techo \"Skipping '${desc}' due to unique match...\"\n\t\t\t\tcontinue\n",
                      "markdown": "`\t\t\t# not 100% the same commit, so check with user\n\t\t\techo \"Commit '${desc}' is synced into bpftool as:\"\n\t\t\tgrep -F \"${signature}\" \"${TMP_DIR}\"/bpftool_commits.txt | \\\n\t\t\t\tcut -d'|' -f1 | sed -e 's/^/- /'\n\t\t\tif ((\"${manual_mode}\" != 1 && \"${synced_cnt}\" == 1)); then\n\t\t\t\techo \"Skipping '${desc}' due to unique match...\"\n\t\t\t\tcontinue\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 2,
                  "endLine": 156,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\t\t# commit with the same subject is already in bpftool, but it's\n\t\t\t# not 100% the same commit, so check with user\n\t\t\techo \"Commit '${desc}' is synced into bpftool as:\"\n\t\t\tgrep -F \"${signature}\" \"${TMP_DIR}\"/bpftool_commits.txt | \\\n\t\t\t\tcut -d'|' -f1 | sed -e 's/^/- /'\n\t\t\tif ((\"${manual_mode}\" != 1 && \"${synced_cnt}\" == 1)); then\n\t\t\t\techo \"Skipping '${desc}' due to unique match...\"\n",
                    "rendered": {
                      "text": "\t\t\t# commit with the same subject is already in bpftool, but it's\n\t\t\t# not 100% the same commit, so check with user\n\t\t\techo \"Commit '${desc}' is synced into bpftool as:\"\n\t\t\tgrep -F \"${signature}\" \"${TMP_DIR}\"/bpftool_commits.txt | \\\n\t\t\t\tcut -d'|' -f1 | sed -e 's/^/- /'\n\t\t\tif ((\"${manual_mode}\" != 1 && \"${synced_cnt}\" == 1)); then\n\t\t\t\techo \"Skipping '${desc}' due to unique match...\"\n",
                      "markdown": "`\t\t\t# commit with the same subject is already in bpftool, but it's\n\t\t\t# not 100% the same commit, so check with user\n\t\t\techo \"Commit '${desc}' is synced into bpftool as:\"\n\t\t\tgrep -F \"${signature}\" \"${TMP_DIR}\"/bpftool_commits.txt | \\\n\t\t\t\tcut -d'|' -f1 | sed -e 's/^/- /'\n\t\t\tif ((\"${manual_mode}\" != 1 && \"${synced_cnt}\" == 1)); then\n\t\t\t\techo \"Skipping '${desc}' due to unique match...\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 5,
                  "endLine": 142,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\tnew_commits=$(git rev-list --no-merges --topo-order --reverse \"${baseline_tag}\"..\"${tip_tag}\" ${BPFTOOL_PATHS[@]})\n\tfor new_commit in ${new_commits}; do\n\t\tif [[ \"${baseline_tag}\" == \"${BPF_BASELINE_TAG}\" ]]; then\n\t\t\tif git merge-base --is-ancestor \"${new_commit}\" \"${BASELINE_COMMIT}\"; then\n\t\t\t\techo \"Commit ${new_commit::12} from bpf is already in bpf-next branch, skipping.\"\n\t\t\t\tcontinue\n\t\t\tfi\n",
                    "rendered": {
                      "text": "\tnew_commits=$(git rev-list --no-merges --topo-order --reverse \"${baseline_tag}\"..\"${tip_tag}\" ${BPFTOOL_PATHS[@]})\n\tfor new_commit in ${new_commits}; do\n\t\tif [[ \"${baseline_tag}\" == \"${BPF_BASELINE_TAG}\" ]]; then\n\t\t\tif git merge-base --is-ancestor \"${new_commit}\" \"${BASELINE_COMMIT}\"; then\n\t\t\t\techo \"Commit ${new_commit::12} from bpf is already in bpf-next branch, skipping.\"\n\t\t\t\tcontinue\n\t\t\tfi\n",
                      "markdown": "`\tnew_commits=$(git rev-list --no-merges --topo-order --reverse \"${baseline_tag}\"..\"${tip_tag}\" ${BPFTOOL_PATHS[@]})\n\tfor new_commit in ${new_commits}; do\n\t\tif [[ \"${baseline_tag}\" == \"${BPF_BASELINE_TAG}\" ]]; then\n\t\t\tif git merge-base --is-ancestor \"${new_commit}\" \"${BASELINE_COMMIT}\"; then\n\t\t\t\techo \"Commit ${new_commit::12} from bpf is already in bpf-next branch, skipping.\"\n\t\t\t\tcontinue\n\t\t\tfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 119,
                  "endLine": 119,
                  "endColumn": 5,
                  "snippet": {
                    "text": "commit_signature()\n{\n\t# shellcheck disable=SC2086\n\tgit show --pretty='(\"%s\")|%aI|%b' --shortstat \"$1\" -- ${2-.} | tr '\\n' '|'\n}\n\n# Cherry-pick commits touching bpftool-related files\n",
                    "rendered": {
                      "text": "commit_signature()\n{\n\t# shellcheck disable=SC2086\n\tgit show --pretty='(\"%s\")|%aI|%b' --shortstat \"$1\" -- ${2-.} | tr '\\n' '|'\n}\n\n# Cherry-pick commits touching bpftool-related files\n",
                      "markdown": "`commit_signature()\n{\n\t# shellcheck disable=SC2086\n\tgit show --pretty='(\"%s\")|%aI|%b' --shortstat \"$1\" -- ${2-.} | tr '\\n' '|'\n}\n\n# Cherry-pick commits touching bpftool-related files\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 104,
                  "endLine": 104,
                  "endColumn": 5,
                  "snippet": {
                    "text": "# $1 - commit ref\ncommit_desc()\n{\n\tgit log -n1 --pretty='%h (\"%s\")' \"$1\"\n}\n\n# Create commit single-line signature, which consists of:\n",
                    "rendered": {
                      "text": "# $1 - commit ref\ncommit_desc()\n{\n\tgit log -n1 --pretty='%h (\"%s\")' \"$1\"\n}\n\n# Create commit single-line signature, which consists of:\n",
                      "markdown": "`# $1 - commit ref\ncommit_desc()\n{\n\tgit log -n1 --pretty='%h (\"%s\")' \"$1\"\n}\n\n# Create commit single-line signature, which consists of:\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 26,
                  "endLine": 91,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t${BPFTOOL_SRC_DIR}*)\n\t\t\tcontinue;;\n\tesac\n\tBPFTOOL_TREE_FILTER+=\"git mv -kf ${p} __bpftool/${PATH_MAP[${p}]} && \"$'\\\\\\n'\ndone\nBPFTOOL_TREE_FILTER+=\"true >/dev/null\"\n\n",
                    "rendered": {
                      "text": "\t\t${BPFTOOL_SRC_DIR}*)\n\t\t\tcontinue;;\n\tesac\n\tBPFTOOL_TREE_FILTER+=\"git mv -kf ${p} __bpftool/${PATH_MAP[${p}]} && \"$'\\\\\\n'\ndone\nBPFTOOL_TREE_FILTER+=\"true >/dev/null\"\n\n",
                      "markdown": "`\t\t${BPFTOOL_SRC_DIR}*)\n\t\t\tcontinue;;\n\tesac\n\tBPFTOOL_TREE_FILTER+=\"git mv -kf ${p} __bpftool/${PATH_MAP[${p}]} && \"$'\\\\\\n'\ndone\nBPFTOOL_TREE_FILTER+=\"true >/dev/null\"\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 25,
                  "endLine": 83,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# Extract bash-completion and Documentation from src/.\nBPFTOOL_TREE_FILTER+=\"git mv -kf __bpftool/src/bash-completion __bpftool/bash-completion && \"$'\\\\\\n'\nBPFTOOL_TREE_FILTER+=\"git mv -kf __bpftool/src/Documentation __bpftool/docs && \"$'\\\\\\n'\n\nBPFTOOL_TREE_FILTER+=\"mkdir -p __bpftool/include/tools __bpftool/include/uapi/asm-generic __bpftool/include/uapi/linux/tc_act __bpftool/src/kernel/bpf && \"$'\\\\\\n'\nfor p in \"${!PATH_MAP[@]}\"; do\n",
                    "rendered": {
                      "text": "\n# Extract bash-completion and Documentation from src/.\nBPFTOOL_TREE_FILTER+=\"git mv -kf __bpftool/src/bash-completion __bpftool/bash-completion && \"$'\\\\\\n'\nBPFTOOL_TREE_FILTER+=\"git mv -kf __bpftool/src/Documentation __bpftool/docs && \"$'\\\\\\n'\n\nBPFTOOL_TREE_FILTER+=\"mkdir -p __bpftool/include/tools __bpftool/include/uapi/asm-generic __bpftool/include/uapi/linux/tc_act __bpftool/src/kernel/bpf && \"$'\\\\\\n'\nfor p in \"${!PATH_MAP[@]}\"; do\n",
                      "markdown": "`\n# Extract bash-completion and Documentation from src/.\nBPFTOOL_TREE_FILTER+=\"git mv -kf __bpftool/src/bash-completion __bpftool/bash-completion && \"$'\\\\\\n'\nBPFTOOL_TREE_FILTER+=\"git mv -kf __bpftool/src/Documentation __bpftool/docs && \"$'\\\\\\n'\n\nBPFTOOL_TREE_FILTER+=\"mkdir -p __bpftool/include/tools __bpftool/include/uapi/asm-generic __bpftool/include/uapi/linux/tc_act __bpftool/src/kernel/bpf && \"$'\\\\\\n'\nfor p in \"${!PATH_MAP[@]}\"; do\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 25,
                  "endLine": 82,
                  "endColumn": 29,
                  "snippet": {
                    "text": "BPFTOOL_TREE_FILTER+=\"git mv -kf ${BPFTOOL_SRC_DIR} __bpftool/${PATH_MAP[${BPFTOOL_SRC_DIR}]} && \"$'\\\\\\n'\n\n# Extract bash-completion and Documentation from src/.\nBPFTOOL_TREE_FILTER+=\"git mv -kf __bpftool/src/bash-completion __bpftool/bash-completion && \"$'\\\\\\n'\nBPFTOOL_TREE_FILTER+=\"git mv -kf __bpftool/src/Documentation __bpftool/docs && \"$'\\\\\\n'\n\nBPFTOOL_TREE_FILTER+=\"mkdir -p __bpftool/include/tools __bpftool/include/uapi/asm-generic __bpftool/include/uapi/linux/tc_act __bpftool/src/kernel/bpf && \"$'\\\\\\n'\n",
                    "rendered": {
                      "text": "BPFTOOL_TREE_FILTER+=\"git mv -kf ${BPFTOOL_SRC_DIR} __bpftool/${PATH_MAP[${BPFTOOL_SRC_DIR}]} && \"$'\\\\\\n'\n\n# Extract bash-completion and Documentation from src/.\nBPFTOOL_TREE_FILTER+=\"git mv -kf __bpftool/src/bash-completion __bpftool/bash-completion && \"$'\\\\\\n'\nBPFTOOL_TREE_FILTER+=\"git mv -kf __bpftool/src/Documentation __bpftool/docs && \"$'\\\\\\n'\n\nBPFTOOL_TREE_FILTER+=\"mkdir -p __bpftool/include/tools __bpftool/include/uapi/asm-generic __bpftool/include/uapi/linux/tc_act __bpftool/src/kernel/bpf && \"$'\\\\\\n'\n",
                      "markdown": "`BPFTOOL_TREE_FILTER+=\"git mv -kf ${BPFTOOL_SRC_DIR} __bpftool/${PATH_MAP[${BPFTOOL_SRC_DIR}]} && \"$'\\\\\\n'\n\n# Extract bash-completion and Documentation from src/.\nBPFTOOL_TREE_FILTER+=\"git mv -kf __bpftool/src/bash-completion __bpftool/bash-completion && \"$'\\\\\\n'\nBPFTOOL_TREE_FILTER+=\"git mv -kf __bpftool/src/Documentation __bpftool/docs && \"$'\\\\\\n'\n\nBPFTOOL_TREE_FILTER+=\"mkdir -p __bpftool/include/tools __bpftool/include/uapi/asm-generic __bpftool/include/uapi/linux/tc_act __bpftool/src/kernel/bpf && \"$'\\\\\\n'\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 25,
                  "endLine": 79,
                  "endColumn": 29,
                  "snippet": {
                    "text": "# Deal with tools/bpf/bpftool first, because once we've mkdir-ed src/, command\n# \"git mv\" doesn't move bpftool _as_ src but _into_ src/.\nBPFTOOL_TREE_FILTER=\"mkdir __bpftool && \"$'\\\\\\n'\nBPFTOOL_TREE_FILTER+=\"git mv -kf ${BPFTOOL_SRC_DIR} __bpftool/${PATH_MAP[${BPFTOOL_SRC_DIR}]} && \"$'\\\\\\n'\n\n# Extract bash-completion and Documentation from src/.\nBPFTOOL_TREE_FILTER+=\"git mv -kf __bpftool/src/bash-completion __bpftool/bash-completion && \"$'\\\\\\n'\n",
                    "rendered": {
                      "text": "# Deal with tools/bpf/bpftool first, because once we've mkdir-ed src/, command\n# \"git mv\" doesn't move bpftool _as_ src but _into_ src/.\nBPFTOOL_TREE_FILTER=\"mkdir __bpftool && \"$'\\\\\\n'\nBPFTOOL_TREE_FILTER+=\"git mv -kf ${BPFTOOL_SRC_DIR} __bpftool/${PATH_MAP[${BPFTOOL_SRC_DIR}]} && \"$'\\\\\\n'\n\n# Extract bash-completion and Documentation from src/.\nBPFTOOL_TREE_FILTER+=\"git mv -kf __bpftool/src/bash-completion __bpftool/bash-completion && \"$'\\\\\\n'\n",
                      "markdown": "`# Deal with tools/bpf/bpftool first, because once we've mkdir-ed src/, command\n# \"git mv\" doesn't move bpftool _as_ src but _into_ src/.\nBPFTOOL_TREE_FILTER=\"mkdir __bpftool && \"$'\\\\\\n'\nBPFTOOL_TREE_FILTER+=\"git mv -kf ${BPFTOOL_SRC_DIR} __bpftool/${PATH_MAP[${BPFTOOL_SRC_DIR}]} && \"$'\\\\\\n'\n\n# Extract bash-completion and Documentation from src/.\nBPFTOOL_TREE_FILTER+=\"git mv -kf __bpftool/src/bash-completion __bpftool/bash-completion && \"$'\\\\\\n'\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 11,
                  "endLine": 6,
                  "endColumn": 19,
                  "snippet": {
                    "text": "usage () {\n\techo \"USAGE: ./sync-kernel.sh <bpftool-repo> <kernel-repo>\"\n\techo \"\"\n\techo \"This script synchronizes the mirror with upstream bpftool sources from the kernel repository.\"\n\techo \"It performs the following steps:\"\n\techo \"  - Update the libbpf submodule, commit, and use its new checkpoints as target commits for bpftool.\"\n\techo \"  - Cherry-pick commits from the bpf-next branch, up to the bpf-next target commit.\"\n",
                    "rendered": {
                      "text": "usage () {\n\techo \"USAGE: ./sync-kernel.sh <bpftool-repo> <kernel-repo>\"\n\techo \"\"\n\techo \"This script synchronizes the mirror with upstream bpftool sources from the kernel repository.\"\n\techo \"It performs the following steps:\"\n\techo \"  - Update the libbpf submodule, commit, and use its new checkpoints as target commits for bpftool.\"\n\techo \"  - Cherry-pick commits from the bpf-next branch, up to the bpf-next target commit.\"\n",
                      "markdown": "`usage () {\n\techo \"USAGE: ./sync-kernel.sh <bpftool-repo> <kernel-repo>\"\n\techo \"\"\n\techo \"This script synchronizes the mirror with upstream bpftool sources from the kernel repository.\"\n\techo \"It performs the following steps:\"\n\techo \"  - Update the libbpf submodule, commit, and use its new checkpoints as target commits for bpftool.\"\n\techo \"  - Cherry-pick commits from the bpf-next branch, up to the bpf-next target commit.\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/sync-kernel.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\nusage () {\n\techo \"USAGE: ./sync-kernel.sh <bpftool-repo> <kernel-repo>\"\n\techo \"\"\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\nusage () {\n\techo \"USAGE: ./sync-kernel.sh <bpftool-repo> <kernel-repo>\"\n\techo \"\"\n",
                      "markdown": "`#!/usr/bin/env bash\n\nusage () {\n\techo \"USAGE: ./sync-kernel.sh <bpftool-repo> <kernel-repo>\"\n\techo \"\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool-gen.rst"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 21,
                  "endLine": 132,
                  "endColumn": 29,
                  "snippet": {
                    "text": "    structs/data sections. These data sections/structs can be used to set up\n    initial values of variables, if set before **example__load**. Afterwards,\n    if target kernel supports memory-mapped BPF arrays, same structs can be\n    used to fetch and update (non-read-only) data from userspace, with same\n    simplicity as for BPF side.\n\nbpftool gen subskeleton *FILE*\n",
                    "rendered": {
                      "text": "    structs/data sections. These data sections/structs can be used to set up\n    initial values of variables, if set before **example__load**. Afterwards,\n    if target kernel supports memory-mapped BPF arrays, same structs can be\n    used to fetch and update (non-read-only) data from userspace, with same\n    simplicity as for BPF side.\n\nbpftool gen subskeleton *FILE*\n",
                      "markdown": "`    structs/data sections. These data sections/structs can be used to set up\n    initial values of variables, if set before **example__load**. Afterwards,\n    if target kernel supports memory-mapped BPF arrays, same structs can be\n    used to fetch and update (non-read-only) data from userspace, with same\n    simplicity as for BPF side.\n\nbpftool gen subskeleton *FILE*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool-gen.rst"
                },
                "region": {
                  "startLine": 345,
                  "startColumn": 3,
                  "endLine": 345,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n  #endif /* __EXAMPLE_SKEL_H__ */\n\n**$ cat example.c**\n\n::\n\n",
                    "rendered": {
                      "text": "\n  #endif /* __EXAMPLE_SKEL_H__ */\n\n**$ cat example.c**\n\n::\n\n",
                      "markdown": "`\n  #endif /* __EXAMPLE_SKEL_H__ */\n\n**$ cat example.c**\n\n::\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool-gen.rst"
                },
                "region": {
                  "startLine": 281,
                  "startColumn": 53,
                  "endLine": 281,
                  "endColumn": 58,
                  "snippet": {
                    "text": "*example3.bpf.c* individually and then statically links respective object\nfiles into the final BPF ELF object file *example.bpf.o*.\n\n**$ bpftool gen skeleton example.bpf.o name example | tee example.skel.h**\n\n::\n\n",
                    "rendered": {
                      "text": "*example3.bpf.c* individually and then statically links respective object\nfiles into the final BPF ELF object file *example.bpf.o*.\n\n**$ bpftool gen skeleton example.bpf.o name example | tee example.skel.h**\n\n::\n\n",
                      "markdown": "`*example3.bpf.c* individually and then statically links respective object\nfiles into the final BPF ELF object file *example.bpf.o*.\n\n**$ bpftool gen skeleton example.bpf.o name example | tee example.skel.h**\n\n::\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool-gen.rst"
                },
                "region": {
                  "startLine": 238,
                  "startColumn": 3,
                  "endLine": 238,
                  "endColumn": 8,
                  "snippet": {
                    "text": "  \treturn 0;\n  }\n\n**$ cat example3.bpf.c**\n\n::\n\n",
                    "rendered": {
                      "text": "  \treturn 0;\n  }\n\n**$ cat example3.bpf.c**\n\n::\n\n",
                      "markdown": "`  \treturn 0;\n  }\n\n**$ cat example3.bpf.c**\n\n::\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool-gen.rst"
                },
                "region": {
                  "startLine": 215,
                  "startColumn": 3,
                  "endLine": 215,
                  "endColumn": 8,
                  "snippet": {
                    "text": "  \treturn 0;\n  }\n\n**$ cat example2.bpf.c**\n\n::\n\n",
                    "rendered": {
                      "text": "  \treturn 0;\n  }\n\n**$ cat example2.bpf.c**\n\n::\n\n",
                      "markdown": "`  \treturn 0;\n  }\n\n**$ cat example2.bpf.c**\n\n::\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/docs/bpftool-gen.rst"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 3,
                  "endLine": 191,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nEXAMPLES\n========\n**$ cat example1.bpf.c**\n\n::\n\n",
                    "rendered": {
                      "text": "\nEXAMPLES\n========\n**$ cat example1.bpf.c**\n\n::\n\n",
                      "markdown": "`\nEXAMPLES\n========\n**$ cat example1.bpf.c**\n\n::\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/net.c"
                },
                "region": {
                  "startLine": 1006,
                  "startColumn": 19,
                  "endLine": 1006,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\treturn 0;\n}\n\nstatic const struct cmd cmds[] = {\n\t{ \"show\",\tdo_show },\n\t{ \"list\",\tdo_show },\n\t{ \"attach\",\tdo_attach },\n",
                    "rendered": {
                      "text": "\treturn 0;\n}\n\nstatic const struct cmd cmds[] = {\n\t{ \"show\",\tdo_show },\n\t{ \"list\",\tdo_show },\n\t{ \"attach\",\tdo_attach },\n",
                      "markdown": "`\treturn 0;\n}\n\nstatic const struct cmd cmds[] = {\n\t{ \"show\",\tdo_show },\n\t{ \"list\",\tdo_show },\n\t{ \"attach\",\tdo_attach },\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/net.c"
                },
                "region": {
                  "startLine": 870,
                  "startColumn": 2,
                  "endLine": 870,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n\t\t\tnf_link_len += 16;\n\n\t\t\texpand = realloc(nf_link_info, nf_link_len * sizeof(info));\n\t\t\tif (!expand) {\n\t\t\t\tp_err(\"realloc: %s\",  strerror(errno));\n\t\t\t\tbreak;\n",
                    "rendered": {
                      "text": "\n\t\t\tnf_link_len += 16;\n\n\t\t\texpand = realloc(nf_link_info, nf_link_len * sizeof(info));\n\t\t\tif (!expand) {\n\t\t\t\tp_err(\"realloc: %s\",  strerror(errno));\n\t\t\t\tbreak;\n",
                      "markdown": "`\n\t\t\tnf_link_len += 16;\n\n\t\t\texpand = realloc(nf_link_info, nf_link_len * sizeof(info));\n\t\t\tif (!expand) {\n\t\t\t\tp_err(\"realloc: %s\",  strerror(errno));\n\t\t\t\tbreak;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/net.c"
                },
                "region": {
                  "startLine": 870,
                  "startColumn": 2,
                  "endLine": 870,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n\t\t\tnf_link_len += 16;\n\n\t\t\texpand = realloc(nf_link_info, nf_link_len * sizeof(info));\n\t\t\tif (!expand) {\n\t\t\t\tp_err(\"realloc: %s\",  strerror(errno));\n\t\t\t\tbreak;\n",
                    "rendered": {
                      "text": "\n\t\t\tnf_link_len += 16;\n\n\t\t\texpand = realloc(nf_link_info, nf_link_len * sizeof(info));\n\t\t\tif (!expand) {\n\t\t\t\tp_err(\"realloc: %s\",  strerror(errno));\n\t\t\t\tbreak;\n",
                      "markdown": "`\n\t\t\tnf_link_len += 16;\n\n\t\t\texpand = realloc(nf_link_info, nf_link_len * sizeof(info));\n\t\t\tif (!expand) {\n\t\t\t\tp_err(\"realloc: %s\",  strerror(errno));\n\t\t\t\tbreak;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/btf.c"
                },
                "region": {
                  "startLine": 1331,
                  "startColumn": 19,
                  "endLine": 1331,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\treturn 0;\n}\n\nstatic const struct cmd cmds[] = {\n\t{ \"show\",\tdo_show },\n\t{ \"list\",\tdo_show },\n\t{ \"help\",\tdo_help },\n",
                    "rendered": {
                      "text": "\treturn 0;\n}\n\nstatic const struct cmd cmds[] = {\n\t{ \"show\",\tdo_show },\n\t{ \"list\",\tdo_show },\n\t{ \"help\",\tdo_help },\n",
                      "markdown": "`\treturn 0;\n}\n\nstatic const struct cmd cmds[] = {\n\t{ \"show\",\tdo_show },\n\t{ \"list\",\tdo_show },\n\t{ \"help\",\tdo_help },\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/btf.c"
                },
                "region": {
                  "startLine": 766,
                  "startColumn": 36,
                  "endLine": 766,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\n\tbase = btf__parse(sysfs_vmlinux, NULL);\n\tif (!base)\n\t\tp_err(\"failed to parse vmlinux BTF at '%s': %d\\n\",\n\t\t      sysfs_vmlinux, -errno);\n\n\treturn base;\n",
                    "rendered": {
                      "text": "\n\tbase = btf__parse(sysfs_vmlinux, NULL);\n\tif (!base)\n\t\tp_err(\"failed to parse vmlinux BTF at '%s': %d\\n\",\n\t\t      sysfs_vmlinux, -errno);\n\n\treturn base;\n",
                      "markdown": "`\n\tbase = btf__parse(sysfs_vmlinux, NULL);\n\tif (!base)\n\t\tp_err(\"failed to parse vmlinux BTF at '%s': %d\\n\",\n\t\t      sysfs_vmlinux, -errno);\n\n\treturn base;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/common.c"
                },
                "region": {
                  "startLine": 351,
                  "startColumn": 14,
                  "endLine": 351,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\terr = mnt_fs(dir, \"bpf\", err_str, ERR_MAX_LEN);\n\tif (err) {\n\t\terr_str[ERR_MAX_LEN - 1] = '\\0';\n\t\tp_err(\"can't mount BPF file system to pin the object '%s': %s\",\n\t\t      file_name, err_str);\n\t}\n\n",
                    "rendered": {
                      "text": "\terr = mnt_fs(dir, \"bpf\", err_str, ERR_MAX_LEN);\n\tif (err) {\n\t\terr_str[ERR_MAX_LEN - 1] = '\\0';\n\t\tp_err(\"can't mount BPF file system to pin the object '%s': %s\",\n\t\t      file_name, err_str);\n\t}\n\n",
                      "markdown": "`\terr = mnt_fs(dir, \"bpf\", err_str, ERR_MAX_LEN);\n\tif (err) {\n\t\terr_str[ERR_MAX_LEN - 1] = '\\0';\n\t\tp_err(\"can't mount BPF file system to pin the object '%s': %s\",\n\t\t      file_name, err_str);\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/common.c"
                },
                "region": {
                  "startLine": 302,
                  "startColumn": 14,
                  "endLine": 302,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\terr = mnt_fs(dir_name, \"bpf\", err_str, ERR_MAX_LEN);\n\tif (err) {\n\t\terr_str[ERR_MAX_LEN - 1] = '\\0';\n\t\tp_err(\"can't mount BPF file system on given dir '%s': %s\",\n\t\t      dir_name, err_str);\n\n\t\tif (!dir_exists)\n",
                    "rendered": {
                      "text": "\terr = mnt_fs(dir_name, \"bpf\", err_str, ERR_MAX_LEN);\n\tif (err) {\n\t\terr_str[ERR_MAX_LEN - 1] = '\\0';\n\t\tp_err(\"can't mount BPF file system on given dir '%s': %s\",\n\t\t      dir_name, err_str);\n\n\t\tif (!dir_exists)\n",
                      "markdown": "`\terr = mnt_fs(dir_name, \"bpf\", err_str, ERR_MAX_LEN);\n\tif (err) {\n\t\terr_str[ERR_MAX_LEN - 1] = '\\0';\n\t\tp_err(\"can't mount BPF file system on given dir '%s': %s\",\n\t\t      dir_name, err_str);\n\n\t\tif (!dir_exists)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/common.c"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 14,
                  "endLine": 190,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\terr = mnt_fs(target, \"tracefs\", err_str, ERR_MAX_LEN);\n\tif (err) {\n\t\terr_str[ERR_MAX_LEN - 1] = '\\0';\n\t\tp_err(\"can't mount tracefs: %s\", err_str);\n\t}\n\n\treturn err;\n",
                    "rendered": {
                      "text": "\terr = mnt_fs(target, \"tracefs\", err_str, ERR_MAX_LEN);\n\tif (err) {\n\t\terr_str[ERR_MAX_LEN - 1] = '\\0';\n\t\tp_err(\"can't mount tracefs: %s\", err_str);\n\t}\n\n\treturn err;\n",
                      "markdown": "`\terr = mnt_fs(target, \"tracefs\", err_str, ERR_MAX_LEN);\n\tif (err) {\n\t\terr_str[ERR_MAX_LEN - 1] = '\\0';\n\t\tp_err(\"can't mount tracefs: %s\", err_str);\n\t}\n\n\treturn err;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/iter.c"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 19,
                  "endLine": 114,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\treturn 0;\n}\n\nstatic const struct cmd cmds[] = {\n\t{ \"help\",\tdo_help },\n\t{ \"pin\",\tdo_pin },\n\t{ 0 }\n",
                    "rendered": {
                      "text": "\treturn 0;\n}\n\nstatic const struct cmd cmds[] = {\n\t{ \"help\",\tdo_help },\n\t{ \"pin\",\tdo_pin },\n\t{ 0 }\n",
                      "markdown": "`\treturn 0;\n}\n\nstatic const struct cmd cmds[] = {\n\t{ \"help\",\tdo_help },\n\t{ \"pin\",\tdo_pin },\n\t{ 0 }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/iter.c"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 14,
                  "endLine": 67,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\tprog = bpf_object__next_program(obj, NULL);\n\tif (!prog) {\n\t\terr = -errno;\n\t\tp_err(\"can't find bpf program in objfile %s\", objfile);\n\t\tgoto close_obj;\n\t}\n\n",
                    "rendered": {
                      "text": "\tprog = bpf_object__next_program(obj, NULL);\n\tif (!prog) {\n\t\terr = -errno;\n\t\tp_err(\"can't find bpf program in objfile %s\", objfile);\n\t\tgoto close_obj;\n\t}\n\n",
                      "markdown": "`\tprog = bpf_object__next_program(obj, NULL);\n\tif (!prog) {\n\t\terr = -errno;\n\t\tp_err(\"can't find bpf program in objfile %s\", objfile);\n\t\tgoto close_obj;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/cgroup.c"
                },
                "region": {
                  "startLine": 676,
                  "startColumn": 19,
                  "endLine": 676,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\treturn 0;\n}\n\nstatic const struct cmd cmds[] = {\n\t{ \"show\",\tdo_show },\n\t{ \"list\",\tdo_show },\n\t{ \"tree\",       do_show_tree },\n",
                    "rendered": {
                      "text": "\treturn 0;\n}\n\nstatic const struct cmd cmds[] = {\n\t{ \"show\",\tdo_show },\n\t{ \"list\",\tdo_show },\n\t{ \"tree\",       do_show_tree },\n",
                      "markdown": "`\treturn 0;\n}\n\nstatic const struct cmd cmds[] = {\n\t{ \"show\",\tdo_show },\n\t{ \"list\",\tdo_show },\n\t{ \"tree\",       do_show_tree },\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/gen.c"
                },
                "region": {
                  "startLine": 2623,
                  "startColumn": 19,
                  "endLine": 2623,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\treturn err;\n}\n\nstatic const struct cmd cmds[] = {\n\t{ \"object\",\t\tdo_object },\n\t{ \"skeleton\",\t\tdo_skeleton },\n\t{ \"subskeleton\",\tdo_subskeleton },\n",
                    "rendered": {
                      "text": "\treturn err;\n}\n\nstatic const struct cmd cmds[] = {\n\t{ \"object\",\t\tdo_object },\n\t{ \"skeleton\",\t\tdo_skeleton },\n\t{ \"subskeleton\",\tdo_subskeleton },\n",
                      "markdown": "`\treturn err;\n}\n\nstatic const struct cmd cmds[] = {\n\t{ \"object\",\t\tdo_object },\n\t{ \"skeleton\",\t\tdo_skeleton },\n\t{ \"subskeleton\",\tdo_subskeleton },\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/gen.c"
                },
                "region": {
                  "startLine": 441,
                  "startColumn": 26,
                  "endLine": 441,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t/* skip baseline indentation tabs */\n\t\tfor (n = skip_tabs; n > 0; n--, src++) {\n\t\t\tif (*src != '\\t') {\n\t\t\t\tp_err(\"not enough tabs at pos %td in template '%s'\",\n\t\t\t\t      src - template - 1, template);\n\t\t\t\tfree(s);\n\t\t\t\texit(-1);\n",
                    "rendered": {
                      "text": "\t\t/* skip baseline indentation tabs */\n\t\tfor (n = skip_tabs; n > 0; n--, src++) {\n\t\t\tif (*src != '\\t') {\n\t\t\t\tp_err(\"not enough tabs at pos %td in template '%s'\",\n\t\t\t\t      src - template - 1, template);\n\t\t\t\tfree(s);\n\t\t\t\texit(-1);\n",
                      "markdown": "`\t\t/* skip baseline indentation tabs */\n\t\tfor (n = skip_tabs; n > 0; n--, src++) {\n\t\t\tif (*src != '\\t') {\n\t\t\t\tp_err(\"not enough tabs at pos %td in template '%s'\",\n\t\t\t\t      src - template - 1, template);\n\t\t\t\tfree(s);\n\t\t\t\texit(-1);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/gen.c"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t\t} else if (c == '\\n') {\n\t\t\tbreak;\n\t\t} else {\n\t\t\tp_err(\"unrecognized character at pos %td in template '%s': '%c'\",\n\t\t\t      src - template - 1, template, c);\n\t\t\tfree(s);\n\t\t\texit(-1);\n",
                    "rendered": {
                      "text": "\t\t} else if (c == '\\n') {\n\t\t\tbreak;\n\t\t} else {\n\t\t\tp_err(\"unrecognized character at pos %td in template '%s': '%c'\",\n\t\t\t      src - template - 1, template, c);\n\t\t\tfree(s);\n\t\t\texit(-1);\n",
                      "markdown": "`\t\t} else if (c == '\\n') {\n\t\t\tbreak;\n\t\t} else {\n\t\t\tp_err(\"unrecognized character at pos %td in template '%s': '%c'\",\n\t\t\t      src - template - 1, template, c);\n\t\t\tfree(s);\n\t\t\texit(-1);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/gen.c"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 75,
                  "endLine": 182,
                  "endColumn": 79,
                  "snippet": {
                    "text": "\t\t\tcontinue;\n\n\t\tif (off > need_off) {\n\t\t\tp_err(\"Something is wrong for %s's variable #%d: need offset %d, already at %d.\\n\",\n\t\t\t      sec_name, i, need_off, off);\n\t\t\treturn -EINVAL;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t\tcontinue;\n\n\t\tif (off > need_off) {\n\t\t\tp_err(\"Something is wrong for %s's variable #%d: need offset %d, already at %d.\\n\",\n\t\t\t      sec_name, i, need_off, off);\n\t\t\treturn -EINVAL;\n\t\t}\n",
                      "markdown": "`\t\t\tcontinue;\n\n\t\tif (off > need_off) {\n\t\t\tp_err(\"Something is wrong for %s's variable #%d: need offset %d, already at %d.\\n\",\n\t\t\t      sec_name, i, need_off, off);\n\t\t\treturn -EINVAL;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/main.c"
                },
                "region": {
                  "startLine": 514,
                  "startColumn": 35,
                  "endLine": 514,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\t\tcase 'B':\n\t\t\tbase_btf = btf__parse(optarg, NULL);\n\t\t\tif (!base_btf) {\n\t\t\t\tp_err(\"failed to parse base BTF at '%s': %d\\n\",\n\t\t\t\t      optarg, -errno);\n\t\t\t\treturn -1;\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\tcase 'B':\n\t\t\tbase_btf = btf__parse(optarg, NULL);\n\t\t\tif (!base_btf) {\n\t\t\t\tp_err(\"failed to parse base BTF at '%s': %d\\n\",\n\t\t\t\t      optarg, -errno);\n\t\t\t\treturn -1;\n\t\t\t}\n",
                      "markdown": "`\t\tcase 'B':\n\t\t\tbase_btf = btf__parse(optarg, NULL);\n\t\t\tif (!base_btf) {\n\t\t\t\tp_err(\"failed to parse base BTF at '%s': %d\\n\",\n\t\t\t\t      optarg, -errno);\n\t\t\t\treturn -1;\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/main.c"
                },
                "region": {
                  "startLine": 187,
                  "startColumn": 27,
                  "endLine": 187,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\treturn 0;\n}\n\nint cmd_select(const struct cmd *cmds, int argc, char **argv,\n\t       int (*help)(int argc, char **argv))\n{\n\tunsigned int i;\n",
                    "rendered": {
                      "text": "\treturn 0;\n}\n\nint cmd_select(const struct cmd *cmds, int argc, char **argv,\n\t       int (*help)(int argc, char **argv))\n{\n\tunsigned int i;\n",
                      "markdown": "`\treturn 0;\n}\n\nint cmd_select(const struct cmd *cmds, int argc, char **argv,\n\t       int (*help)(int argc, char **argv))\n{\n\tunsigned int i;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/main.c"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 19,
                  "endLine": 76,
                  "endColumn": 24,
                  "snippet": {
                    "text": "static int do_batch(int argc, char **argv);\nstatic int do_version(int argc, char **argv);\n\nstatic const struct cmd commands[] = {\n\t{ \"help\",\tdo_help },\n\t{ \"batch\",\tdo_batch },\n\t{ \"prog\",\tdo_prog },\n",
                    "rendered": {
                      "text": "static int do_batch(int argc, char **argv);\nstatic int do_version(int argc, char **argv);\n\nstatic const struct cmd commands[] = {\n\t{ \"help\",\tdo_help },\n\t{ \"batch\",\tdo_batch },\n\t{ \"prog\",\tdo_prog },\n",
                      "markdown": "`static int do_batch(int argc, char **argv);\nstatic int do_version(int argc, char **argv);\n\nstatic const struct cmd commands[] = {\n\t{ \"help\",\tdo_help },\n\t{ \"batch\",\tdo_batch },\n\t{ \"prog\",\tdo_prog },\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/main.c"
                },
                "region": {
                  "startLine": 379,
                  "startColumn": 2,
                  "endLine": 379,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\t\t\tgoto err_close;\n\t\t\t}\n\n\t\t\tcp = strchr(contline, '#');\n\t\t\tif (cp)\n\t\t\t\t*cp = '\\0';\n\n",
                    "rendered": {
                      "text": "\t\t\t\tgoto err_close;\n\t\t\t}\n\n\t\t\tcp = strchr(contline, '#');\n\t\t\tif (cp)\n\t\t\t\t*cp = '\\0';\n\n",
                      "markdown": "`\t\t\t\tgoto err_close;\n\t\t\t}\n\n\t\t\tcp = strchr(contline, '#');\n\t\t\tif (cp)\n\t\t\t\t*cp = '\\0';\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/main.c"
                },
                "region": {
                  "startLine": 358,
                  "startColumn": 1,
                  "endLine": 358,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tif (json_output)\n\t\tjsonw_start_array(json_wtr);\n\twhile (fgets(buf, sizeof(buf), fp)) {\n\t\tcp = strchr(buf, '#');\n\t\tif (cp)\n\t\t\t*cp = '\\0';\n\n",
                    "rendered": {
                      "text": "\tif (json_output)\n\t\tjsonw_start_array(json_wtr);\n\twhile (fgets(buf, sizeof(buf), fp)) {\n\t\tcp = strchr(buf, '#');\n\t\tif (cp)\n\t\t\t*cp = '\\0';\n\n",
                      "markdown": "`\tif (json_output)\n\t\tjsonw_start_array(json_wtr);\n\twhile (fgets(buf, sizeof(buf), fp)) {\n\t\tcp = strchr(buf, '#');\n\t\tif (cp)\n\t\t\t*cp = '\\0';\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/main.c"
                },
                "region": {
                  "startLine": 310,
                  "startColumn": 2,
                  "endLine": 310,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\t\tn_argv[n_argc++] = cp;\n\n\t\t\t/* Find end of word. */\n\t\t\tcp += strcspn(cp, ws);\n\t\t\tif (*cp == '\\0')\n\t\t\t\tbreak;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t\tn_argv[n_argc++] = cp;\n\n\t\t\t/* Find end of word. */\n\t\t\tcp += strcspn(cp, ws);\n\t\t\tif (*cp == '\\0')\n\t\t\t\tbreak;\n\t\t}\n",
                      "markdown": "`\t\t\tn_argv[n_argc++] = cp;\n\n\t\t\t/* Find end of word. */\n\t\t\tcp += strcspn(cp, ws);\n\t\t\tif (*cp == '\\0')\n\t\t\t\tbreak;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/main.c"
                },
                "region": {
                  "startLine": 300,
                  "startColumn": 2,
                  "endLine": 300,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n\t\t\tn_argv[n_argc++] = cp;\n\t\t\t/* Find ending quote. */\n\t\t\tcp = strchr(cp, quote);\n\t\t\tif (!cp) {\n\t\t\t\tp_err(\"unterminated quoted string in command %d\",\n\t\t\t\t      cmd_nb);\n",
                    "rendered": {
                      "text": "\n\t\t\tn_argv[n_argc++] = cp;\n\t\t\t/* Find ending quote. */\n\t\t\tcp = strchr(cp, quote);\n\t\t\tif (!cp) {\n\t\t\t\tp_err(\"unterminated quoted string in command %d\",\n\t\t\t\t      cmd_nb);\n",
                      "markdown": "`\n\t\t\tn_argv[n_argc++] = cp;\n\t\t\t/* Find ending quote. */\n\t\t\tcp = strchr(cp, quote);\n\t\t\tif (!cp) {\n\t\t\t\tp_err(\"unterminated quoted string in command %d\",\n\t\t\t\t      cmd_nb);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/main.c"
                },
                "region": {
                  "startLine": 284,
                  "startColumn": 1,
                  "endLine": 284,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n\twhile (*cp) {\n\t\t/* Skip leading whitespace. */\n\t\tcp += strspn(cp, ws);\n\n\t\tif (*cp == '\\0')\n\t\t\tbreak;\n",
                    "rendered": {
                      "text": "\n\twhile (*cp) {\n\t\t/* Skip leading whitespace. */\n\t\tcp += strspn(cp, ws);\n\n\t\tif (*cp == '\\0')\n\t\t\tbreak;\n",
                      "markdown": "`\n\twhile (*cp) {\n\t\t/* Skip leading whitespace. */\n\t\tcp += strspn(cp, ws);\n\n\t\tif (*cp == '\\0')\n\t\t\tbreak;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/main.h"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 27,
                  "endLine": 133,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\tint (*func)(int argc, char **argv);\n};\n\nint cmd_select(const struct cmd *cmds, int argc, char **argv,\n\t       int (*help)(int argc, char **argv));\n\n#define MAX_PROG_FULL_NAME 128\n",
                    "rendered": {
                      "text": "\tint (*func)(int argc, char **argv);\n};\n\nint cmd_select(const struct cmd *cmds, int argc, char **argv,\n\t       int (*help)(int argc, char **argv));\n\n#define MAX_PROG_FULL_NAME 128\n",
                      "markdown": "`\tint (*func)(int argc, char **argv);\n};\n\nint cmd_select(const struct cmd *cmds, int argc, char **argv,\n\t       int (*help)(int argc, char **argv));\n\n#define MAX_PROG_FULL_NAME 128\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/main.h"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 6,
                  "endLine": 128,
                  "endColumn": 11,
                  "snippet": {
                    "text": "void print_dev_plain(__u32 ifindex, __u64 ns_dev, __u64 ns_inode);\nvoid print_dev_json(__u32 ifindex, __u64 ns_dev, __u64 ns_inode);\n\nstruct cmd {\n\tconst char *cmd;\n\tint (*func)(int argc, char **argv);\n};\n",
                    "rendered": {
                      "text": "void print_dev_plain(__u32 ifindex, __u64 ns_dev, __u64 ns_inode);\nvoid print_dev_json(__u32 ifindex, __u64 ns_dev, __u64 ns_inode);\n\nstruct cmd {\n\tconst char *cmd;\n\tint (*func)(int argc, char **argv);\n};\n",
                      "markdown": "`void print_dev_plain(__u32 ifindex, __u64 ns_dev, __u64 ns_inode);\nvoid print_dev_json(__u32 ifindex, __u64 ns_dev, __u64 ns_inode);\n\nstruct cmd {\n\tconst char *cmd;\n\tint (*func)(int argc, char **argv);\n};\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/main.h"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 20,
                  "endLine": 44,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\tbool _res;\t\t\t\t\t\t\\\n\t\t\t\t\t\t\t\t\t\\\n\t\tif (argc < _cnt) {\t\t\t\t\t\\\n\t\t\tp_err(\"'%s' needs at least %d arguments, %d found\", \\\n\t\t\t      argv[-1], _cnt, argc);\t\t\t\\\n\t\t\t_res = false;\t\t\t\t\t\\\n\t\t} else {\t\t\t\t\t\t\\\n",
                    "rendered": {
                      "text": "\t\tbool _res;\t\t\t\t\t\t\\\n\t\t\t\t\t\t\t\t\t\\\n\t\tif (argc < _cnt) {\t\t\t\t\t\\\n\t\t\tp_err(\"'%s' needs at least %d arguments, %d found\", \\\n\t\t\t      argv[-1], _cnt, argc);\t\t\t\\\n\t\t\t_res = false;\t\t\t\t\t\\\n\t\t} else {\t\t\t\t\t\t\\\n",
                      "markdown": "`\t\tbool _res;\t\t\t\t\t\t\\\n\t\t\t\t\t\t\t\t\t\\\n\t\tif (argc < _cnt) {\t\t\t\t\t\\\n\t\t\tp_err(\"'%s' needs at least %d arguments, %d found\", \\\n\t\t\t      argv[-1], _cnt, argc);\t\t\t\\\n\t\t\t_res = false;\t\t\t\t\t\\\n\t\t} else {\t\t\t\t\t\t\\\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/tracelog.c"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 46,
                  "endLine": 97,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\tif (block_mount)\n\t\treturn false;\n\n\tp_info(\"could not find tracefs, attempting to mount it now\");\n\t/* Most of the time, tracefs is automatically mounted by debugfs at\n\t * /sys/kernel/debug/tracing when we try to access it. If we could not\n\t * find it, it is likely that debugfs is not mounted. Let's give one\n",
                    "rendered": {
                      "text": "\tif (block_mount)\n\t\treturn false;\n\n\tp_info(\"could not find tracefs, attempting to mount it now\");\n\t/* Most of the time, tracefs is automatically mounted by debugfs at\n\t * /sys/kernel/debug/tracing when we try to access it. If we could not\n\t * find it, it is likely that debugfs is not mounted. Let's give one\n",
                      "markdown": "`\tif (block_mount)\n\t\treturn false;\n\n\tp_info(\"could not find tracefs, attempting to mount it now\");\n\t/* Most of the time, tracefs is automatically mounted by debugfs at\n\t * /sys/kernel/debug/tracing when we try to access it. If we could not\n\t * find it, it is likely that debugfs is not mounted. Let's give one\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/tracelog.c"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 18,
                  "endLine": 97,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\tif (block_mount)\n\t\treturn false;\n\n\tp_info(\"could not find tracefs, attempting to mount it now\");\n\t/* Most of the time, tracefs is automatically mounted by debugfs at\n\t * /sys/kernel/debug/tracing when we try to access it. If we could not\n\t * find it, it is likely that debugfs is not mounted. Let's give one\n",
                    "rendered": {
                      "text": "\tif (block_mount)\n\t\treturn false;\n\n\tp_info(\"could not find tracefs, attempting to mount it now\");\n\t/* Most of the time, tracefs is automatically mounted by debugfs at\n\t * /sys/kernel/debug/tracing when we try to access it. If we could not\n\t * find it, it is likely that debugfs is not mounted. Let's give one\n",
                      "markdown": "`\tif (block_mount)\n\t\treturn false;\n\n\tp_info(\"could not find tracefs, attempting to mount it now\");\n\t/* Most of the time, tracefs is automatically mounted by debugfs at\n\t * /sys/kernel/debug/tracing when we try to access it. If we could not\n\t * find it, it is likely that debugfs is not mounted. Let's give one\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/tracelog.c"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 16,
                  "endLine": 49,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n\tsrc_len = strlen(mntpt);\n\tif (src_len + 1 >= PATH_MAX) {\n\t\tp_err(\"tracefs mount point name too long\");\n\t\treturn false;\n\t}\n\n",
                    "rendered": {
                      "text": "\n\tsrc_len = strlen(mntpt);\n\tif (src_len + 1 >= PATH_MAX) {\n\t\tp_err(\"tracefs mount point name too long\");\n\t\treturn false;\n\t}\n\n",
                      "markdown": "`\n\tsrc_len = strlen(mntpt);\n\tif (src_len + 1 >= PATH_MAX) {\n\t\tp_err(\"tracefs mount point name too long\");\n\t\treturn false;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/feature.c"
                },
                "region": {
                  "startLine": 1331,
                  "startColumn": 19,
                  "endLine": 1331,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\treturn 0;\n}\n\nstatic const struct cmd cmds[] = {\n\t{ \"probe\",\t\tdo_probe },\n\t{ \"list_builtins\",\tdo_list_builtins },\n\t{ \"help\",\t\tdo_help },\n",
                    "rendered": {
                      "text": "\treturn 0;\n}\n\nstatic const struct cmd cmds[] = {\n\t{ \"probe\",\t\tdo_probe },\n\t{ \"list_builtins\",\tdo_list_builtins },\n\t{ \"help\",\t\tdo_help },\n",
                      "markdown": "`\treturn 0;\n}\n\nstatic const struct cmd cmds[] = {\n\t{ \"probe\",\t\tdo_probe },\n\t{ \"list_builtins\",\tdo_list_builtins },\n\t{ \"help\",\t\tdo_help },\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/feature.c"
                },
                "region": {
                  "startLine": 471,
                  "startColumn": 39,
                  "endLine": 471,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\t\tgoto end_parse;\n\t}\n\tif (strcmp(buf, \"# Automatically generated file; DO NOT EDIT.\\n\")) {\n\t\tp_info(\"skipping kernel config, can't find correct file\");\n\t\tgoto end_parse;\n\t}\n\n",
                    "rendered": {
                      "text": "\t\tgoto end_parse;\n\t}\n\tif (strcmp(buf, \"# Automatically generated file; DO NOT EDIT.\\n\")) {\n\t\tp_info(\"skipping kernel config, can't find correct file\");\n\t\tgoto end_parse;\n\t}\n\n",
                      "markdown": "`\t\tgoto end_parse;\n\t}\n\tif (strcmp(buf, \"# Automatically generated file; DO NOT EDIT.\\n\")) {\n\t\tp_info(\"skipping kernel config, can't find correct file\");\n\t\tgoto end_parse;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/struct_ops.c"
                },
                "region": {
                  "startLine": 629,
                  "startColumn": 19,
                  "endLine": 629,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\treturn 0;\n}\n\nstatic const struct cmd cmds[] = {\n\t{ \"show\",\tdo_show },\n\t{ \"list\",\tdo_show },\n\t{ \"register\",\tdo_register },\n",
                    "rendered": {
                      "text": "\treturn 0;\n}\n\nstatic const struct cmd cmds[] = {\n\t{ \"show\",\tdo_show },\n\t{ \"list\",\tdo_show },\n\t{ \"register\",\tdo_register },\n",
                      "markdown": "`\treturn 0;\n}\n\nstatic const struct cmd cmds[] = {\n\t{ \"show\",\tdo_show },\n\t{ \"list\",\tdo_show },\n\t{ \"register\",\tdo_register },\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/struct_ops.c"
                },
                "region": {
                  "startLine": 570,
                  "startColumn": 33,
                  "endLine": 570,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\t\tif (bpf_link_get_info_by_fd(bpf_link__fd(link),\n\t\t\t\t\t    &link_info,\n\t\t\t\t\t    &link_info_len)) {\n\t\t\tp_err(\"Registered %s but can't find link id: %s\",\n\t\t\t      bpf_map__name(map), strerror(errno));\n\t\t\tnr_errs++;\n\t\t\tgoto clean_link;\n",
                    "rendered": {
                      "text": "\t\tif (bpf_link_get_info_by_fd(bpf_link__fd(link),\n\t\t\t\t\t    &link_info,\n\t\t\t\t\t    &link_info_len)) {\n\t\t\tp_err(\"Registered %s but can't find link id: %s\",\n\t\t\t      bpf_map__name(map), strerror(errno));\n\t\t\tnr_errs++;\n\t\t\tgoto clean_link;\n",
                      "markdown": "`\t\tif (bpf_link_get_info_by_fd(bpf_link__fd(link),\n\t\t\t\t\t    &link_info,\n\t\t\t\t\t    &link_info_len)) {\n\t\t\tp_err(\"Registered %s but can't find link id: %s\",\n\t\t\t      bpf_map__name(map), strerror(errno));\n\t\t\tnr_errs++;\n\t\t\tgoto clean_link;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/struct_ops.c"
                },
                "region": {
                  "startLine": 556,
                  "startColumn": 34,
                  "endLine": 556,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\t\t\t/* Not p_err.  The struct_ops was attached\n\t\t\t * successfully.\n\t\t\t */\n\t\t\tp_info(\"Registered %s but can't find id: %s\",\n\t\t\t       bpf_map__name(map), strerror(errno));\n\t\t\tgoto clean_link;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t/* Not p_err.  The struct_ops was attached\n\t\t\t * successfully.\n\t\t\t */\n\t\t\tp_info(\"Registered %s but can't find id: %s\",\n\t\t\t       bpf_map__name(map), strerror(errno));\n\t\t\tgoto clean_link;\n\t\t}\n",
                      "markdown": "`\t\t\t/* Not p_err.  The struct_ops was attached\n\t\t\t * successfully.\n\t\t\t */\n\t\t\tp_info(\"Registered %s but can't find id: %s\",\n\t\t\t       bpf_map__name(map), strerror(errno));\n\t\t\tgoto clean_link;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/struct_ops.c"
                },
                "region": {
                  "startLine": 519,
                  "startColumn": 14,
                  "endLine": 519,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\tlinkdir = GET_ARG();\n\n\tif (linkdir && create_and_mount_bpffs_dir(linkdir)) {\n\t\tp_err(\"can't mount bpffs for pinning\");\n\t\treturn -1;\n\t}\n\n",
                    "rendered": {
                      "text": "\t\tlinkdir = GET_ARG();\n\n\tif (linkdir && create_and_mount_bpffs_dir(linkdir)) {\n\t\tp_err(\"can't mount bpffs for pinning\");\n\t\treturn -1;\n\t}\n\n",
                      "markdown": "`\t\tlinkdir = GET_ARG();\n\n\tif (linkdir && create_and_mount_bpffs_dir(linkdir)) {\n\t\tp_err(\"can't mount bpffs for pinning\");\n\t\treturn -1;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/src/struct_ops.c"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 14,
                  "endLine": 72,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\tmap_info_type_id = btf__find_by_name_kind(kern_btf, \"bpf_map_info\",\n\t\t\t\t\t\t  BTF_KIND_STRUCT);\n\tif (map_info_type_id < 0) {\n\t\tp_err(\"can't find bpf_map_info from btf_vmlinux\");\n\t\treturn map_info_type_id;\n\t}\n\tmap_info_type = btf__type_by_id(kern_btf, map_info_type_id);\n",
                    "rendered": {
                      "text": "\tmap_info_type_id = btf__find_by_name_kind(kern_btf, \"bpf_map_info\",\n\t\t\t\t\t\t  BTF_KIND_STRUCT);\n\tif (map_info_type_id < 0) {\n\t\tp_err(\"can't find bpf_map_info from btf_vmlinux\");\n\t\treturn map_info_type_id;\n\t}\n\tmap_info_type = btf__type_by_id(kern_btf, map_info_type_id);\n",
                      "markdown": "`\tmap_info_type_id = btf__find_by_name_kind(kern_btf, \"bpf_map_info\",\n\t\t\t\t\t\t  BTF_KIND_STRUCT);\n\tif (map_info_type_id < 0) {\n\t\tp_err(\"can't find bpf_map_info from btf_vmlinux\");\n\t\treturn map_info_type_id;\n\t}\n\tmap_info_type = btf__type_by_id(kern_btf, map_info_type_id);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/assets/bpftool_stacked_color.svg"
                },
                "region": {
                  "startLine": 334,
                  "startColumn": 32,
                  "endLine": 334,
                  "endColumn": 75,
                  "snippet": {
                    "text": "84,-0.32211 -2.12423,-0.55027 -3.46067,-0.66282 -0.50117,-0.0423 -1.03529,-0.0679 -1.60067,-0.0688 z m 6.3082,11.83006 c -0.0842,-0.002 -0.10571,0.0452 -0.0787,0.13257 0.0727,-0.0346 0.14329,-0.0691 0.21769,-0.10367 -0.0575,-0.0182 -0.10401,-0.028 -0.13906,-0.0289 z\"\n             sodipodi:nodetypes=\"sssssszszszsssssssssssssccssscssssssccscc\" />\n          <path\n             id=\"path10100-5\"\n             style=\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.307244px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"\n             d=\"m 281.35538,-82.62657 c -0.84239,-0.0121 -1.06349,1.68873 -0.20829,5.645 0.85848,3.97149 2",
                    "rendered": {
                      "text": "84,-0.32211 -2.12423,-0.55027 -3.46067,-0.66282 -0.50117,-0.0423 -1.03529,-0.0679 -1.60067,-0.0688 z m 6.3082,11.83006 c -0.0842,-0.002 -0.10571,0.0452 -0.0787,0.13257 0.0727,-0.0346 0.14329,-0.0691 0.21769,-0.10367 -0.0575,-0.0182 -0.10401,-0.028 -0.13906,-0.0289 z\"\n             sodipodi:nodetypes=\"sssssszszszsssssssssssssccssscssssssccscc\" />\n          <path\n             id=\"path10100-5\"\n             style=\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.307244px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"\n             d=\"m 281.35538,-82.62657 c -0.84239,-0.0121 -1.06349,1.68873 -0.20829,5.645 0.85848,3.97149 2",
                      "markdown": "`84,-0.32211 -2.12423,-0.55027 -3.46067,-0.66282 -0.50117,-0.0423 -1.03529,-0.0679 -1.60067,-0.0688 z m 6.3082,11.83006 c -0.0842,-0.002 -0.10571,0.0452 -0.0787,0.13257 0.0727,-0.0346 0.14329,-0.0691 0.21769,-0.10367 -0.0575,-0.0182 -0.10401,-0.028 -0.13906,-0.0289 z\"\n             sodipodi:nodetypes=\"sssssszszszsssssssssssssccssscssssssccscc\" />\n          <path\n             id=\"path10100-5\"\n             style=\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.307244px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"\n             d=\"m 281.35538,-82.62657 c -0.84239,-0.0121 -1.06349,1.68873 -0.20829,5.645 0.85848,3.97149 2`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/assets/bpftool_stacked_color.svg"
                },
                "region": {
                  "startLine": 313,
                  "startColumn": 32,
                  "endLine": 313,
                  "endColumn": 96,
                  "snippet": {
                    "text": "0552 0.1616,13.003343 1.11168,4.222791 3.33482,7.681514 4.40497,9.393453 1.07016,1.711938 0.98691,1.677166 0.90398,1.642526 -0.44871,-0.399367 -0.93427,-0.831527 -1.1402,-1.014813 -0.20593,-0.183287 -0.20588,-0.183307 -0.0709,0.167107 z\"\n             id=\"path11324-9\"\n             sodipodi:nodetypes=\"cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\"\n             inkscape:original-d=\"m 328.58531,-50.71174 c 0.27008,0.70077 0.53442,1.38707 0.79479,2.06356 -0.35539,-0.18409 -0.71126,-0.36859 -1.06708,-0.55323 -0.52327,-0.0213 -1.04709,-0.0428 -1.57147,-0.0646 0.75528,1.42685 1.50929,2.85156 2.26385,4.27755 -0.42545,0.49102 -0.85091,0.9814 -1.2768",
                    "rendered": {
                      "text": "0552 0.1616,13.003343 1.11168,4.222791 3.33482,7.681514 4.40497,9.393453 1.07016,1.711938 0.98691,1.677166 0.90398,1.642526 -0.44871,-0.399367 -0.93427,-0.831527 -1.1402,-1.014813 -0.20593,-0.183287 -0.20588,-0.183307 -0.0709,0.167107 z\"\n             id=\"path11324-9\"\n             sodipodi:nodetypes=\"cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\"\n             inkscape:original-d=\"m 328.58531,-50.71174 c 0.27008,0.70077 0.53442,1.38707 0.79479,2.06356 -0.35539,-0.18409 -0.71126,-0.36859 -1.06708,-0.55323 -0.52327,-0.0213 -1.04709,-0.0428 -1.57147,-0.0646 0.75528,1.42685 1.50929,2.85156 2.26385,4.27755 -0.42545,0.49102 -0.85091,0.9814 -1.2768",
                      "markdown": "`0552 0.1616,13.003343 1.11168,4.222791 3.33482,7.681514 4.40497,9.393453 1.07016,1.711938 0.98691,1.677166 0.90398,1.642526 -0.44871,-0.399367 -0.93427,-0.831527 -1.1402,-1.014813 -0.20593,-0.183287 -0.20588,-0.183307 -0.0709,0.167107 z\"\n             id=\"path11324-9\"\n             sodipodi:nodetypes=\"cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\"\n             inkscape:original-d=\"m 328.58531,-50.71174 c 0.27008,0.70077 0.53442,1.38707 0.79479,2.06356 -0.35539,-0.18409 -0.71126,-0.36859 -1.06708,-0.55323 -0.52327,-0.0213 -1.04709,-0.0428 -1.57147,-0.0646 0.75528,1.42685 1.50929,2.85156 2.26385,4.27755 -0.42545,0.49102 -0.85091,0.9814 -1.2768`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/assets/bpftool_stacked_color.svg"
                },
                "region": {
                  "startLine": 298,
                  "startColumn": 34,
                  "endLine": 298,
                  "endColumn": 99,
                  "snippet": {
                    "text": "1.824219,-4.56836 -0.380823,-1.74758 -0.453634,-3.71452 -0.542969,-4.85546 -0.02233,-0.28525 -0.03621,-0.49764 0.02148,-0.63477 0.0577,-0.13713 0.183057,-0.24438 0.541015,-0.33594 0.715917,-0.1831 2.278145,-0.22662 5.441407,-0.16797 z\"\n               id=\"path17819\"\n               sodipodi:nodetypes=\"csssssssssssszssssssssscssssccssssscsssssscssssccssssssssssssss\" />\n          </g>\n          <path\n             id=\"path12684\"\n             style=\"fill:#000000;stroke:none;stroke-width:0.307244px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"\n             d=\"m 323.77069,-73.99766 c -1.27623,-0.008 -2.85363,0.62843 -2.98306,3.54669 -0.19722,4.44685 -",
                    "rendered": {
                      "text": "1.824219,-4.56836 -0.380823,-1.74758 -0.453634,-3.71452 -0.542969,-4.85546 -0.02233,-0.28525 -0.03621,-0.49764 0.02148,-0.63477 0.0577,-0.13713 0.183057,-0.24438 0.541015,-0.33594 0.715917,-0.1831 2.278145,-0.22662 5.441407,-0.16797 z\"\n               id=\"path17819\"\n               sodipodi:nodetypes=\"csssssssssssszssssssssscssssccssssscsssssscssssccssssssssssssss\" />\n          </g>\n          <path\n             id=\"path12684\"\n             style=\"fill:#000000;stroke:none;stroke-width:0.307244px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"\n             d=\"m 323.77069,-73.99766 c -1.27623,-0.008 -2.85363,0.62843 -2.98306,3.54669 -0.19722,4.44685 -",
                      "markdown": "`1.824219,-4.56836 -0.380823,-1.74758 -0.453634,-3.71452 -0.542969,-4.85546 -0.02233,-0.28525 -0.03621,-0.49764 0.02148,-0.63477 0.0577,-0.13713 0.183057,-0.24438 0.541015,-0.33594 0.715917,-0.1831 2.278145,-0.22662 5.441407,-0.16797 z\"\n               id=\"path17819\"\n               sodipodi:nodetypes=\"csssssssssssszssssssssscssssccssssscsssssscssssccssssssssssssss\" />\n          </g>\n          <path\n             id=\"path12684\"\n             style=\"fill:#000000;stroke:none;stroke-width:0.307244px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"\n             d=\"m 323.77069,-73.99766 c -1.27623,-0.008 -2.85363,0.62843 -2.98306,3.54669 -0.19722,4.44685 -`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/assets/bpftool_stacked_color.svg"
                },
                "region": {
                  "startLine": 231,
                  "startColumn": 30,
                  "endLine": 231,
                  "endColumn": 278,
                  "snippet": {
                    "text": "82614 -2.49634,-1.521065 -3.90766,-1.879869 -1.37202,-0.363623 -2.79953,-0.497374 -4.21631,-0.479625 z m 12.33,7.897705 c -0.13151,0.0973 -0.28996,0.27877 -0.30291,0.005 -0.0518,-0.15568 -0.15927,-0.38657 0.0591,-0.17678 0.0813,0.0572 0.16255,0.11431 0.24383,0.17147 z\"\n           sodipodi:nodetypes=\"cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccscccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\" />\n        <g\n           id=\"g27394\"\n           transform=\"matrix(0.85555002,0,0,0.85555002,-165.81937,186.55075)\">\n          <path\n             id=\"path10096-6\"\n             style=\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.307244px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opac",
                    "rendered": {
                      "text": "82614 -2.49634,-1.521065 -3.90766,-1.879869 -1.37202,-0.363623 -2.79953,-0.497374 -4.21631,-0.479625 z m 12.33,7.897705 c -0.13151,0.0973 -0.28996,0.27877 -0.30291,0.005 -0.0518,-0.15568 -0.15927,-0.38657 0.0591,-0.17678 0.0813,0.0572 0.16255,0.11431 0.24383,0.17147 z\"\n           sodipodi:nodetypes=\"cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccscccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\" />\n        <g\n           id=\"g27394\"\n           transform=\"matrix(0.85555002,0,0,0.85555002,-165.81937,186.55075)\">\n          <path\n             id=\"path10096-6\"\n             style=\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.307244px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opac",
                      "markdown": "`82614 -2.49634,-1.521065 -3.90766,-1.879869 -1.37202,-0.363623 -2.79953,-0.497374 -4.21631,-0.479625 z m 12.33,7.897705 c -0.13151,0.0973 -0.28996,0.27877 -0.30291,0.005 -0.0518,-0.15568 -0.15927,-0.38657 0.0591,-0.17678 0.0813,0.0572 0.16255,0.11431 0.24383,0.17147 z\"\n           sodipodi:nodetypes=\"cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccscccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\" />\n        <g\n           id=\"g27394\"\n           transform=\"matrix(0.85555002,0,0,0.85555002,-165.81937,186.55075)\">\n          <path\n             id=\"path10096-6\"\n             style=\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.307244px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opac`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 1,
                  "endLine": 162,
                  "endColumn": 5,
                  "snippet": {
                    "text": "  the synchronization in progress, the user should do it at this time, before\n  the temporary files from the script are deleted.\n\n- At last, the script cleans up the temporary files and branches in the Linux\n  repository. Note that these temporary files and branches are not cleaned up\n  if the script fails during execution.\n",
                    "rendered": {
                      "text": "  the synchronization in progress, the user should do it at this time, before\n  the temporary files from the script are deleted.\n\n- At last, the script cleans up the temporary files and branches in the Linux\n  repository. Note that these temporary files and branches are not cleaned up\n  if the script fails during execution.\n",
                      "markdown": "`  the synchronization in progress, the user should do it at this time, before\n  the temporary files from the script are deleted.\n\n- At last, the script cleans up the temporary files and branches in the Linux\n  repository. Note that these temporary files and branches are not cleaned up\n  if the script fails during execution.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 56,
                  "endLine": 159,
                  "endColumn": 60,
                  "snippet": {
                    "text": "  between the two repositories, and warn the user if it finds any. Patches\n  picked up from the `bpf` tree are usually a source of differences at this\n  step. If the patch containing the known differences is to be updated after\n  the synchronization in progress, the user should do it at this time, before\n  the temporary files from the script are deleted.\n\n- At last, the script cleans up the temporary files and branches in the Linux\n",
                    "rendered": {
                      "text": "  between the two repositories, and warn the user if it finds any. Patches\n  picked up from the `bpf` tree are usually a source of differences at this\n  step. If the patch containing the known differences is to be updated after\n  the synchronization in progress, the user should do it at this time, before\n  the temporary files from the script are deleted.\n\n- At last, the script cleans up the temporary files and branches in the Linux\n",
                      "markdown": "`  between the two repositories, and warn the user if it finds any. Patches\n  picked up from the `bpf` tree are usually a source of differences at this\n  step. If the patch containing the known differences is to be updated after\n  the synchronization in progress, the user should do it at this time, before\n  the temporary files from the script are deleted.\n\n- At last, the script cleans up the temporary files and branches in the Linux\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 67,
                  "endLine": 157,
                  "endColumn": 71,
                  "snippet": {
                    "text": "  (`bpf-next` branch) a patch containing known differences between the Linux\n  repository and the bpftool mirror. Then it looks for remaining differences\n  between the two repositories, and warn the user if it finds any. Patches\n  picked up from the `bpf` tree are usually a source of differences at this\n  step. If the patch containing the known differences is to be updated after\n  the synchronization in progress, the user should do it at this time, before\n  the temporary files from the script are deleted.\n",
                    "rendered": {
                      "text": "  (`bpf-next` branch) a patch containing known differences between the Linux\n  repository and the bpftool mirror. Then it looks for remaining differences\n  between the two repositories, and warn the user if it finds any. Patches\n  picked up from the `bpf` tree are usually a source of differences at this\n  step. If the patch containing the known differences is to be updated after\n  the synchronization in progress, the user should do it at this time, before\n  the temporary files from the script are deleted.\n",
                      "markdown": "`  (`bpf-next` branch) a patch containing known differences between the Linux\n  repository and the bpftool mirror. Then it looks for remaining differences\n  between the two repositories, and warn the user if it finds any. Patches\n  picked up from the `bpf` tree are usually a source of differences at this\n  step. If the patch containing the known differences is to be updated after\n  the synchronization in progress, the user should do it at this time, before\n  the temporary files from the script are deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 38,
                  "endLine": 122,
                  "endColumn": 47,
                  "snippet": {
                    "text": "  the hash from `<bpftool-repo>/libbpf/BPF-CHECKPOINT-COMMIT`, after the libbpf\n  repository update that takes place at the beginning of the update process.\n- Set `SKIP_LIBBPF_UPDATE` to `1` to avoid updating libbpf automatically.\n- Set `MANUAL_MODE` to `1` to manually control every cherry-picked commit.\n\n### How it works\n\n",
                    "rendered": {
                      "text": "  the hash from `<bpftool-repo>/libbpf/BPF-CHECKPOINT-COMMIT`, after the libbpf\n  repository update that takes place at the beginning of the update process.\n- Set `SKIP_LIBBPF_UPDATE` to `1` to avoid updating libbpf automatically.\n- Set `MANUAL_MODE` to `1` to manually control every cherry-picked commit.\n\n### How it works\n\n",
                      "markdown": "`  the hash from `<bpftool-repo>/libbpf/BPF-CHECKPOINT-COMMIT`, after the libbpf\n  repository update that takes place at the beginning of the update process.\n- Set `SKIP_LIBBPF_UPDATE` to `1` to avoid updating libbpf automatically.\n- Set `MANUAL_MODE` to `1` to manually control every cherry-picked commit.\n\n### How it works\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 60,
                  "endLine": 120,
                  "endColumn": 68,
                  "snippet": {
                    "text": "- Set `BPF_TIP_COMMIT` to override the `bpf` tree target commit (the commit in\n  `bpf` up to which the bpftool mirror should be synchronized). If unset, use\n  the hash from `<bpftool-repo>/libbpf/BPF-CHECKPOINT-COMMIT`, after the libbpf\n  repository update that takes place at the beginning of the update process.\n- Set `SKIP_LIBBPF_UPDATE` to `1` to avoid updating libbpf automatically.\n- Set `MANUAL_MODE` to `1` to manually control every cherry-picked commit.\n\n",
                    "rendered": {
                      "text": "- Set `BPF_TIP_COMMIT` to override the `bpf` tree target commit (the commit in\n  `bpf` up to which the bpftool mirror should be synchronized). If unset, use\n  the hash from `<bpftool-repo>/libbpf/BPF-CHECKPOINT-COMMIT`, after the libbpf\n  repository update that takes place at the beginning of the update process.\n- Set `SKIP_LIBBPF_UPDATE` to `1` to avoid updating libbpf automatically.\n- Set `MANUAL_MODE` to `1` to manually control every cherry-picked commit.\n\n",
                      "markdown": "`- Set `BPF_TIP_COMMIT` to override the `bpf` tree target commit (the commit in\n  `bpf` up to which the bpftool mirror should be synchronized). If unset, use\n  the hash from `<bpftool-repo>/libbpf/BPF-CHECKPOINT-COMMIT`, after the libbpf\n  repository update that takes place at the beginning of the update process.\n- Set `SKIP_LIBBPF_UPDATE` to `1` to avoid updating libbpf automatically.\n- Set `MANUAL_MODE` to `1` to manually control every cherry-picked commit.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 36,
                  "endLine": 120,
                  "endColumn": 40,
                  "snippet": {
                    "text": "- Set `BPF_TIP_COMMIT` to override the `bpf` tree target commit (the commit in\n  `bpf` up to which the bpftool mirror should be synchronized). If unset, use\n  the hash from `<bpftool-repo>/libbpf/BPF-CHECKPOINT-COMMIT`, after the libbpf\n  repository update that takes place at the beginning of the update process.\n- Set `SKIP_LIBBPF_UPDATE` to `1` to avoid updating libbpf automatically.\n- Set `MANUAL_MODE` to `1` to manually control every cherry-picked commit.\n\n",
                    "rendered": {
                      "text": "- Set `BPF_TIP_COMMIT` to override the `bpf` tree target commit (the commit in\n  `bpf` up to which the bpftool mirror should be synchronized). If unset, use\n  the hash from `<bpftool-repo>/libbpf/BPF-CHECKPOINT-COMMIT`, after the libbpf\n  repository update that takes place at the beginning of the update process.\n- Set `SKIP_LIBBPF_UPDATE` to `1` to avoid updating libbpf automatically.\n- Set `MANUAL_MODE` to `1` to manually control every cherry-picked commit.\n\n",
                      "markdown": "`- Set `BPF_TIP_COMMIT` to override the `bpf` tree target commit (the commit in\n  `bpf` up to which the bpftool mirror should be synchronized). If unset, use\n  the hash from `<bpftool-repo>/libbpf/BPF-CHECKPOINT-COMMIT`, after the libbpf\n  repository update that takes place at the beginning of the update process.\n- Set `SKIP_LIBBPF_UPDATE` to `1` to avoid updating libbpf automatically.\n- Set `MANUAL_MODE` to `1` to manually control every cherry-picked commit.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 12,
                  "endLine": 120,
                  "endColumn": 20,
                  "snippet": {
                    "text": "- Set `BPF_TIP_COMMIT` to override the `bpf` tree target commit (the commit in\n  `bpf` up to which the bpftool mirror should be synchronized). If unset, use\n  the hash from `<bpftool-repo>/libbpf/BPF-CHECKPOINT-COMMIT`, after the libbpf\n  repository update that takes place at the beginning of the update process.\n- Set `SKIP_LIBBPF_UPDATE` to `1` to avoid updating libbpf automatically.\n- Set `MANUAL_MODE` to `1` to manually control every cherry-picked commit.\n\n",
                    "rendered": {
                      "text": "- Set `BPF_TIP_COMMIT` to override the `bpf` tree target commit (the commit in\n  `bpf` up to which the bpftool mirror should be synchronized). If unset, use\n  the hash from `<bpftool-repo>/libbpf/BPF-CHECKPOINT-COMMIT`, after the libbpf\n  repository update that takes place at the beginning of the update process.\n- Set `SKIP_LIBBPF_UPDATE` to `1` to avoid updating libbpf automatically.\n- Set `MANUAL_MODE` to `1` to manually control every cherry-picked commit.\n\n",
                      "markdown": "`- Set `BPF_TIP_COMMIT` to override the `bpf` tree target commit (the commit in\n  `bpf` up to which the bpftool mirror should be synchronized). If unset, use\n  the hash from `<bpftool-repo>/libbpf/BPF-CHECKPOINT-COMMIT`, after the libbpf\n  repository update that takes place at the beginning of the update process.\n- Set `SKIP_LIBBPF_UPDATE` to `1` to avoid updating libbpf automatically.\n- Set `MANUAL_MODE` to `1` to manually control every cherry-picked commit.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 71,
                  "endLine": 116,
                  "snippet": {
                    "text": "- Set `BPF_NEXT_TIP_COMMIT` to override the `bpf-next` tree target commit (the\n  commit in `bpf-next` up to which the bpftool mirror should be synchronized).\n  If unset, use the hash from `<bpftool-repo>/libbpf/CHECKPOINT-COMMIT`, after\n  the libbpf repository update that takes place at the beginning of the update\n  process.\n- Set `BPF_TIP_COMMIT` to override the `bpf` tree target commit (the commit in\n  `bpf` up to which the bpftool mirror should be synchronized). If unset, use\n  the hash from `<bpftool-repo>/libbpf/BPF-CHECKPOINT-COMMIT`, after the libbpf\n",
                    "rendered": {
                      "text": "- Set `BPF_NEXT_TIP_COMMIT` to override the `bpf-next` tree target commit (the\n  commit in `bpf-next` up to which the bpftool mirror should be synchronized).\n  If unset, use the hash from `<bpftool-repo>/libbpf/CHECKPOINT-COMMIT`, after\n  the libbpf repository update that takes place at the beginning of the update\n  process.\n- Set `BPF_TIP_COMMIT` to override the `bpf` tree target commit (the commit in\n  `bpf` up to which the bpftool mirror should be synchronized). If unset, use\n  the hash from `<bpftool-repo>/libbpf/BPF-CHECKPOINT-COMMIT`, after the libbpf\n",
                      "markdown": "`- Set `BPF_NEXT_TIP_COMMIT` to override the `bpf-next` tree target commit (the\n  commit in `bpf-next` up to which the bpftool mirror should be synchronized).\n  If unset, use the hash from `<bpftool-repo>/libbpf/CHECKPOINT-COMMIT`, after\n  the libbpf repository update that takes place at the beginning of the update\n  process.\n- Set `BPF_TIP_COMMIT` to override the `bpf` tree target commit (the commit in\n  `bpf` up to which the bpftool mirror should be synchronized). If unset, use\n  the hash from `<bpftool-repo>/libbpf/BPF-CHECKPOINT-COMMIT`, after the libbpf\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 47,
                  "endLine": 115,
                  "endColumn": 51,
                  "snippet": {
                    "text": "- Set `BPF_NEXT_TIP_COMMIT` to override the `bpf-next` tree target commit (the\n  commit in `bpf-next` up to which the bpftool mirror should be synchronized).\n  If unset, use the hash from `<bpftool-repo>/libbpf/CHECKPOINT-COMMIT`, after\n  the libbpf repository update that takes place at the beginning of the update\n  process.\n- Set `BPF_TIP_COMMIT` to override the `bpf` tree target commit (the commit in\n  `bpf` up to which the bpftool mirror should be synchronized). If unset, use\n",
                    "rendered": {
                      "text": "- Set `BPF_NEXT_TIP_COMMIT` to override the `bpf-next` tree target commit (the\n  commit in `bpf-next` up to which the bpftool mirror should be synchronized).\n  If unset, use the hash from `<bpftool-repo>/libbpf/CHECKPOINT-COMMIT`, after\n  the libbpf repository update that takes place at the beginning of the update\n  process.\n- Set `BPF_TIP_COMMIT` to override the `bpf` tree target commit (the commit in\n  `bpf` up to which the bpftool mirror should be synchronized). If unset, use\n",
                      "markdown": "`- Set `BPF_NEXT_TIP_COMMIT` to override the `bpf-next` tree target commit (the\n  commit in `bpf-next` up to which the bpftool mirror should be synchronized).\n  If unset, use the hash from `<bpftool-repo>/libbpf/CHECKPOINT-COMMIT`, after\n  the libbpf repository update that takes place at the beginning of the update\n  process.\n- Set `BPF_TIP_COMMIT` to override the `bpf` tree target commit (the commit in\n  `bpf` up to which the bpftool mirror should be synchronized). If unset, use\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 23,
                  "endLine": 115,
                  "endColumn": 31,
                  "snippet": {
                    "text": "- Set `BPF_NEXT_TIP_COMMIT` to override the `bpf-next` tree target commit (the\n  commit in `bpf-next` up to which the bpftool mirror should be synchronized).\n  If unset, use the hash from `<bpftool-repo>/libbpf/CHECKPOINT-COMMIT`, after\n  the libbpf repository update that takes place at the beginning of the update\n  process.\n- Set `BPF_TIP_COMMIT` to override the `bpf` tree target commit (the commit in\n  `bpf` up to which the bpftool mirror should be synchronized). If unset, use\n",
                    "rendered": {
                      "text": "- Set `BPF_NEXT_TIP_COMMIT` to override the `bpf-next` tree target commit (the\n  commit in `bpf-next` up to which the bpftool mirror should be synchronized).\n  If unset, use the hash from `<bpftool-repo>/libbpf/CHECKPOINT-COMMIT`, after\n  the libbpf repository update that takes place at the beginning of the update\n  process.\n- Set `BPF_TIP_COMMIT` to override the `bpf` tree target commit (the commit in\n  `bpf` up to which the bpftool mirror should be synchronized). If unset, use\n",
                      "markdown": "`- Set `BPF_NEXT_TIP_COMMIT` to override the `bpf-next` tree target commit (the\n  commit in `bpf-next` up to which the bpftool mirror should be synchronized).\n  If unset, use the hash from `<bpftool-repo>/libbpf/CHECKPOINT-COMMIT`, after\n  the libbpf repository update that takes place at the beginning of the update\n  process.\n- Set `BPF_TIP_COMMIT` to override the `bpf` tree target commit (the commit in\n  `bpf` up to which the bpftool mirror should be synchronized). If unset, use\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 15,
                  "endLine": 80,
                  "endColumn": 23,
                  "snippet": {
                    "text": "libbpf submodule. If you have not, run the following:\n\n```console\n$ git submodule update --init\n```\n\n### Usage\n",
                    "rendered": {
                      "text": "libbpf submodule. If you have not, run the following:\n\n```console\n$ git submodule update --init\n```\n\n### Usage\n",
                      "markdown": "`libbpf submodule. If you have not, run the following:\n\n```console\n$ git submodule update --init\n```\n\n### Usage\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 13,
                  "endLine": 67,
                  "endColumn": 21,
                  "snippet": {
                    "text": "`bpf` remote repositories, respectively. These two branches are required to\nsynchronize the mirror correctly.\n\nYou can later update this repository with the following commands:\n\n```console\n$ git switch bpf\n",
                    "rendered": {
                      "text": "`bpf` remote repositories, respectively. These two branches are required to\nsynchronize the mirror correctly.\n\nYou can later update this repository with the following commands:\n\n```console\n$ git switch bpf\n",
                      "markdown": "``bpf` remote repositories, respectively. These two branches are required to\nsynchronize the mirror correctly.\n\nYou can later update this repository with the following commands:\n\n```console\n$ git switch bpf\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 61,
                  "endLine": 62,
                  "endColumn": 3,
                  "snippet": {
                    "text": "$ git branch --set-upstream-to bpf/master\n$ git switch bpf-next\n```\n\nAt the end of the process, the repository should contain two branches\n`bpf-next` and `bpf`, pointing to the `master` branches of the `bpf-next` and\n`bpf` remote repositories, respectively. These two branches are required to\nsynchronize the mirror correctly.\n",
                    "rendered": {
                      "text": "$ git branch --set-upstream-to bpf/master\n$ git switch bpf-next\n```\n\nAt the end of the process, the repository should contain two branches\n`bpf-next` and `bpf`, pointing to the `master` branches of the `bpf-next` and\n`bpf` remote repositories, respectively. These two branches are required to\nsynchronize the mirror correctly.\n",
                      "markdown": "`$ git branch --set-upstream-to bpf/master\n$ git switch bpf-next\n```\n\nAt the end of the process, the repository should contain two branches\n`bpf-next` and `bpf`, pointing to the `master` branches of the `bpf-next` and\n`bpf` remote repositories, respectively. These two branches are required to\nsynchronize the mirror correctly.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 45,
                  "endLine": 38,
                  "endColumn": 53,
                  "snippet": {
                    "text": "here as a submodule dependency. This libbpf mirror is also periodically updated\nto the latest `bpf-next` and `bpf` tree, and records to what kernel commits it\nwas brought up-to-date. To ensure optimal compatibility between the bpftool\nsources and the libbpf dependency, we want to update them to the same point of\nreference.\n\n### Prerequisites\n",
                    "rendered": {
                      "text": "here as a submodule dependency. This libbpf mirror is also periodically updated\nto the latest `bpf-next` and `bpf` tree, and records to what kernel commits it\nwas brought up-to-date. To ensure optimal compatibility between the bpftool\nsources and the libbpf dependency, we want to update them to the same point of\nreference.\n\n### Prerequisites\n",
                      "markdown": "`here as a submodule dependency. This libbpf mirror is also periodically updated\nto the latest `bpf-next` and `bpf` tree, and records to what kernel commits it\nwas brought up-to-date. To ensure optimal compatibility between the bpftool\nsources and the libbpf dependency, we want to update them to the same point of\nreference.\n\n### Prerequisites\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 59,
                  "endLine": 17,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\nIt requires the [GitHub command line][gh] (`gh`).\n\nNote that only users with push access to the repository can update release\nassets and set labels.\n\n[gh]: https://cli.github.com/\n",
                    "rendered": {
                      "text": "\nIt requires the [GitHub command line][gh] (`gh`).\n\nNote that only users with push access to the repository can update release\nassets and set labels.\n\n[gh]: https://cli.github.com/\n",
                      "markdown": "`\nIt requires the [GitHub command line][gh] (`gh`).\n\nNote that only users with push access to the repository can update release\nassets and set labels.\n\n[gh]: https://cli.github.com/\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 8,
                  "endLine": 164,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\n- At last, the script cleans up the temporary files and branches in the Linux\n  repository. Note that these temporary files and branches are not cleaned up\n  if the script fails during execution.\n",
                    "rendered": {
                      "text": "\n- At last, the script cleans up the temporary files and branches in the Linux\n  repository. Note that these temporary files and branches are not cleaned up\n  if the script fails during execution.\n",
                      "markdown": "`\n- At last, the script cleans up the temporary files and branches in the Linux\n  repository. Note that these temporary files and branches are not cleaned up\n  if the script fails during execution.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 14,
                  "endLine": 162,
                  "endColumn": 22,
                  "snippet": {
                    "text": "  the synchronization in progress, the user should do it at this time, before\n  the temporary files from the script are deleted.\n\n- At last, the script cleans up the temporary files and branches in the Linux\n  repository. Note that these temporary files and branches are not cleaned up\n  if the script fails during execution.\n",
                    "rendered": {
                      "text": "  the synchronization in progress, the user should do it at this time, before\n  the temporary files from the script are deleted.\n\n- At last, the script cleans up the temporary files and branches in the Linux\n  repository. Note that these temporary files and branches are not cleaned up\n  if the script fails during execution.\n",
                      "markdown": "`  the synchronization in progress, the user should do it at this time, before\n  the temporary files from the script are deleted.\n\n- At last, the script cleans up the temporary files and branches in the Linux\n  repository. Note that these temporary files and branches are not cleaned up\n  if the script fails during execution.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 30,
                  "endLine": 160,
                  "endColumn": 38,
                  "snippet": {
                    "text": "  picked up from the `bpf` tree are usually a source of differences at this\n  step. If the patch containing the known differences is to be updated after\n  the synchronization in progress, the user should do it at this time, before\n  the temporary files from the script are deleted.\n\n- At last, the script cleans up the temporary files and branches in the Linux\n  repository. Note that these temporary files and branches are not cleaned up\n",
                    "rendered": {
                      "text": "  picked up from the `bpf` tree are usually a source of differences at this\n  step. If the patch containing the known differences is to be updated after\n  the synchronization in progress, the user should do it at this time, before\n  the temporary files from the script are deleted.\n\n- At last, the script cleans up the temporary files and branches in the Linux\n  repository. Note that these temporary files and branches are not cleaned up\n",
                      "markdown": "`  picked up from the `bpf` tree are usually a source of differences at this\n  step. If the patch containing the known differences is to be updated after\n  the synchronization in progress, the user should do it at this time, before\n  the temporary files from the script are deleted.\n\n- At last, the script cleans up the temporary files and branches in the Linux\n  repository. Note that these temporary files and branches are not cleaned up\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 36,
                  "endLine": 153,
                  "endColumn": 44,
                  "snippet": {
                    "text": "  commit with the updated checkpoints, using a cover letter summarizing the\n  changes as the commit description.\n\n- The next step is verification. The script applies to the Linux repository\n  (`bpf-next` branch) a patch containing known differences between the Linux\n  repository and the bpftool mirror. Then it looks for remaining differences\n  between the two repositories, and warn the user if it finds any. Patches\n",
                    "rendered": {
                      "text": "  commit with the updated checkpoints, using a cover letter summarizing the\n  changes as the commit description.\n\n- The next step is verification. The script applies to the Linux repository\n  (`bpf-next` branch) a patch containing known differences between the Linux\n  repository and the bpftool mirror. Then it looks for remaining differences\n  between the two repositories, and warn the user if it finds any. Patches\n",
                      "markdown": "`  commit with the updated checkpoints, using a cover letter summarizing the\n  changes as the commit description.\n\n- The next step is verification. The script applies to the Linux repository\n  (`bpf-next` branch) a patch containing known differences between the Linux\n  repository and the bpftool mirror. Then it looks for remaining differences\n  between the two repositories, and warn the user if it finds any. Patches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 54,
                  "endLine": 149,
                  "endColumn": 62,
                  "snippet": {
                    "text": "- Then the script checks out the `bpf` branch in the Linux repository, and\n  repeats the same operations.\n\n- On top of the new patches applied to the mirror, the script creates a last\n  commit with the updated checkpoints, using a cover letter summarizing the\n  changes as the commit description.\n\n",
                    "rendered": {
                      "text": "- Then the script checks out the `bpf` branch in the Linux repository, and\n  repeats the same operations.\n\n- On top of the new patches applied to the mirror, the script creates a last\n  commit with the updated checkpoints, using a cover letter summarizing the\n  changes as the commit description.\n\n",
                      "markdown": "`- Then the script checks out the `bpf` branch in the Linux repository, and\n  repeats the same operations.\n\n- On top of the new patches applied to the mirror, the script creates a last\n  commit with the updated checkpoints, using a cover letter summarizing the\n  changes as the commit description.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 4,
                  "endLine": 149,
                  "endColumn": 9,
                  "snippet": {
                    "text": "- Then the script checks out the `bpf` branch in the Linux repository, and\n  repeats the same operations.\n\n- On top of the new patches applied to the mirror, the script creates a last\n  commit with the updated checkpoints, using a cover letter summarizing the\n  changes as the commit description.\n\n",
                    "rendered": {
                      "text": "- Then the script checks out the `bpf` branch in the Linux repository, and\n  repeats the same operations.\n\n- On top of the new patches applied to the mirror, the script creates a last\n  commit with the updated checkpoints, using a cover letter summarizing the\n  changes as the commit description.\n\n",
                      "markdown": "`- Then the script checks out the `bpf` branch in the Linux repository, and\n  repeats the same operations.\n\n- On top of the new patches applied to the mirror, the script creates a last\n  commit with the updated checkpoints, using a cover letter summarizing the\n  changes as the commit description.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 10,
                  "endLine": 146,
                  "endColumn": 18,
                  "snippet": {
                    "text": "- In a new branch in the bpftool mirror, the script applies (`git am`) each of\n  these patches to the mirror.\n\n- Then the script checks out the `bpf` branch in the Linux repository, and\n  repeats the same operations.\n\n- On top of the new patches applied to the mirror, the script creates a last\n",
                    "rendered": {
                      "text": "- In a new branch in the bpftool mirror, the script applies (`git am`) each of\n  these patches to the mirror.\n\n- Then the script checks out the `bpf` branch in the Linux repository, and\n  repeats the same operations.\n\n- On top of the new patches applied to the mirror, the script creates a last\n",
                      "markdown": "`- In a new branch in the bpftool mirror, the script applies (`git am`) each of\n  these patches to the mirror.\n\n- Then the script checks out the `bpf` branch in the Linux repository, and\n  repeats the same operations.\n\n- On top of the new patches applied to the mirror, the script creates a last\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 44,
                  "endLine": 143,
                  "endColumn": 52,
                  "snippet": {
                    "text": "  files, up to the target commit, and exports these patches to a temporary\n  repository.\n\n- In a new branch in the bpftool mirror, the script applies (`git am`) each of\n  these patches to the mirror.\n\n- Then the script checks out the `bpf` branch in the Linux repository, and\n",
                    "rendered": {
                      "text": "  files, up to the target commit, and exports these patches to a temporary\n  repository.\n\n- In a new branch in the bpftool mirror, the script applies (`git am`) each of\n  these patches to the mirror.\n\n- Then the script checks out the `bpf` branch in the Linux repository, and\n",
                      "markdown": "`  files, up to the target commit, and exports these patches to a temporary\n  repository.\n\n- In a new branch in the bpftool mirror, the script applies (`git am`) each of\n  these patches to the mirror.\n\n- Then the script checks out the `bpf` branch in the Linux repository, and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 12,
                  "endLine": 131,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\nIt performs the following steps:\n\n- First, the script updates the libbpf submodule, commits the change, and (by\n  default) picks up libbpf's latest checkpoints to use them as target commits\n  for the bpftool mirror.\n\n",
                    "rendered": {
                      "text": "\nIt performs the following steps:\n\n- First, the script updates the libbpf submodule, commits the change, and (by\n  default) picks up libbpf's latest checkpoints to use them as target commits\n  for the bpftool mirror.\n\n",
                      "markdown": "`\nIt performs the following steps:\n\n- First, the script updates the libbpf submodule, commits the change, and (by\n  default) picks up libbpf's latest checkpoints to use them as target commits\n  for the bpftool mirror.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 4,
                  "endLine": 126,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n### How it works\n\nThis script synchronizes the bpftool mirror with upstream bpftool sources from\nthe Linux kernel repository.\n\nIt performs the following steps:\n",
                    "rendered": {
                      "text": "\n### How it works\n\nThis script synchronizes the bpftool mirror with upstream bpftool sources from\nthe Linux kernel repository.\n\nIt performs the following steps:\n",
                      "markdown": "`\n### How it works\n\nThis script synchronizes the bpftool mirror with upstream bpftool sources from\nthe Linux kernel repository.\n\nIt performs the following steps:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 41,
                  "endLine": 99,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\nIf working from within the bpftool repository, the path to the `<bpftool-repo>`\nis typically the current working directory (`.`). The second argument,\n`<kernel-repo>`, is the path to the Linux Git repository mentioned earlier.\n\nSeveral environment variables can modify some internal parameters of the\nscript:\n",
                    "rendered": {
                      "text": "\nIf working from within the bpftool repository, the path to the `<bpftool-repo>`\nis typically the current working directory (`.`). The second argument,\n`<kernel-repo>`, is the path to the Linux Git repository mentioned earlier.\n\nSeveral environment variables can modify some internal parameters of the\nscript:\n",
                      "markdown": "`\nIf working from within the bpftool repository, the path to the `<bpftool-repo>`\nis typically the current working directory (`.`). The second argument,\n`<kernel-repo>`, is the path to the Linux Git repository mentioned earlier.\n\nSeveral environment variables can modify some internal parameters of the\nscript:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 33,
                  "endLine": 87,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\nAs preliminary steps:\n\n- Make sure that you have a Linux Git repository installed (see above), with\n  two branches `bpf-next` and `bpf` up-to-date.\n- Make sure your mirror repository is clean.\n\n",
                    "rendered": {
                      "text": "\nAs preliminary steps:\n\n- Make sure that you have a Linux Git repository installed (see above), with\n  two branches `bpf-next` and `bpf` up-to-date.\n- Make sure your mirror repository is clean.\n\n",
                      "markdown": "`\nAs preliminary steps:\n\n- Make sure that you have a Linux Git repository installed (see above), with\n  two branches `bpf-next` and `bpf` up-to-date.\n- Make sure your mirror repository is clean.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 1,
                  "endLine": 80,
                  "endColumn": 6,
                  "snippet": {
                    "text": "libbpf submodule. If you have not, run the following:\n\n```console\n$ git submodule update --init\n```\n\n### Usage\n",
                    "rendered": {
                      "text": "libbpf submodule. If you have not, run the following:\n\n```console\n$ git submodule update --init\n```\n\n### Usage\n",
                      "markdown": "`libbpf submodule. If you have not, run the following:\n\n```console\n$ git submodule update --init\n```\n\n### Usage\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 1,
                  "endLine": 73,
                  "endColumn": 6,
                  "snippet": {
                    "text": "$ git switch bpf\n$ git pull --set-upstream bpf master\n$ git switch bpf-next\n$ git pull --set-upstream bpf-next master\n```\n\nAlso make sure you have cloned the bpftool mirror recursively, to check out the\n",
                    "rendered": {
                      "text": "$ git switch bpf\n$ git pull --set-upstream bpf master\n$ git switch bpf-next\n$ git pull --set-upstream bpf-next master\n```\n\nAlso make sure you have cloned the bpftool mirror recursively, to check out the\n",
                      "markdown": "`$ git switch bpf\n$ git pull --set-upstream bpf master\n$ git switch bpf-next\n$ git pull --set-upstream bpf-next master\n```\n\nAlso make sure you have cloned the bpftool mirror recursively, to check out the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 1,
                  "endLine": 72,
                  "endColumn": 6,
                  "snippet": {
                    "text": "```console\n$ git switch bpf\n$ git pull --set-upstream bpf master\n$ git switch bpf-next\n$ git pull --set-upstream bpf-next master\n```\n\n",
                    "rendered": {
                      "text": "```console\n$ git switch bpf\n$ git pull --set-upstream bpf master\n$ git switch bpf-next\n$ git pull --set-upstream bpf-next master\n```\n\n",
                      "markdown": "````console\n$ git switch bpf\n$ git pull --set-upstream bpf master\n$ git switch bpf-next\n$ git pull --set-upstream bpf-next master\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 1,
                  "endLine": 71,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n```console\n$ git switch bpf\n$ git pull --set-upstream bpf master\n$ git switch bpf-next\n$ git pull --set-upstream bpf-next master\n```\n",
                    "rendered": {
                      "text": "\n```console\n$ git switch bpf\n$ git pull --set-upstream bpf master\n$ git switch bpf-next\n$ git pull --set-upstream bpf-next master\n```\n",
                      "markdown": "`\n```console\n$ git switch bpf\n$ git pull --set-upstream bpf master\n$ git switch bpf-next\n$ git pull --set-upstream bpf-next master\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 1,
                  "endLine": 70,
                  "endColumn": 6,
                  "snippet": {
                    "text": "You can later update this repository with the following commands:\n\n```console\n$ git switch bpf\n$ git pull --set-upstream bpf master\n$ git switch bpf-next\n$ git pull --set-upstream bpf-next master\n",
                    "rendered": {
                      "text": "You can later update this repository with the following commands:\n\n```console\n$ git switch bpf\n$ git pull --set-upstream bpf master\n$ git switch bpf-next\n$ git pull --set-upstream bpf-next master\n",
                      "markdown": "`You can later update this repository with the following commands:\n\n```console\n$ git switch bpf\n$ git pull --set-upstream bpf master\n$ git switch bpf-next\n$ git pull --set-upstream bpf-next master\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 1,
                  "endLine": 59,
                  "endColumn": 6,
                  "snippet": {
                    "text": "$ git checkout bpf/master\n$ git switch --create bpf\n$ git branch --set-upstream-to bpf/master\n$ git switch bpf-next\n```\n\nAt the end of the process, the repository should contain two branches\n",
                    "rendered": {
                      "text": "$ git checkout bpf/master\n$ git switch --create bpf\n$ git branch --set-upstream-to bpf/master\n$ git switch bpf-next\n```\n\nAt the end of the process, the repository should contain two branches\n",
                      "markdown": "`$ git checkout bpf/master\n$ git switch --create bpf\n$ git branch --set-upstream-to bpf/master\n$ git switch bpf-next\n```\n\nAt the end of the process, the repository should contain two branches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 1,
                  "endLine": 58,
                  "endColumn": 6,
                  "snippet": {
                    "text": "$ git fetch bpf\n$ git checkout bpf/master\n$ git switch --create bpf\n$ git branch --set-upstream-to bpf/master\n$ git switch bpf-next\n```\n\n",
                    "rendered": {
                      "text": "$ git fetch bpf\n$ git checkout bpf/master\n$ git switch --create bpf\n$ git branch --set-upstream-to bpf/master\n$ git switch bpf-next\n```\n\n",
                      "markdown": "`$ git fetch bpf\n$ git checkout bpf/master\n$ git switch --create bpf\n$ git branch --set-upstream-to bpf/master\n$ git switch bpf-next\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 1,
                  "endLine": 57,
                  "endColumn": 6,
                  "snippet": {
                    "text": "$ git remote add bpf 'https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf.git'\n$ git fetch bpf\n$ git checkout bpf/master\n$ git switch --create bpf\n$ git branch --set-upstream-to bpf/master\n$ git switch bpf-next\n```\n",
                    "rendered": {
                      "text": "$ git remote add bpf 'https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf.git'\n$ git fetch bpf\n$ git checkout bpf/master\n$ git switch --create bpf\n$ git branch --set-upstream-to bpf/master\n$ git switch bpf-next\n```\n",
                      "markdown": "`$ git remote add bpf 'https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf.git'\n$ git fetch bpf\n$ git checkout bpf/master\n$ git switch --create bpf\n$ git branch --set-upstream-to bpf/master\n$ git switch bpf-next\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 1,
                  "endLine": 56,
                  "endColumn": 6,
                  "snippet": {
                    "text": "$ git branch --move master bpf-next\n$ git remote add bpf 'https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf.git'\n$ git fetch bpf\n$ git checkout bpf/master\n$ git switch --create bpf\n$ git branch --set-upstream-to bpf/master\n$ git switch bpf-next\n",
                    "rendered": {
                      "text": "$ git branch --move master bpf-next\n$ git remote add bpf 'https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf.git'\n$ git fetch bpf\n$ git checkout bpf/master\n$ git switch --create bpf\n$ git branch --set-upstream-to bpf/master\n$ git switch bpf-next\n",
                      "markdown": "`$ git branch --move master bpf-next\n$ git remote add bpf 'https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf.git'\n$ git fetch bpf\n$ git checkout bpf/master\n$ git switch --create bpf\n$ git branch --set-upstream-to bpf/master\n$ git switch bpf-next\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 1,
                  "endLine": 55,
                  "endColumn": 6,
                  "snippet": {
                    "text": "$ git remote rename origin bpf-next\n$ git branch --move master bpf-next\n$ git remote add bpf 'https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf.git'\n$ git fetch bpf\n$ git checkout bpf/master\n$ git switch --create bpf\n$ git branch --set-upstream-to bpf/master\n",
                    "rendered": {
                      "text": "$ git remote rename origin bpf-next\n$ git branch --move master bpf-next\n$ git remote add bpf 'https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf.git'\n$ git fetch bpf\n$ git checkout bpf/master\n$ git switch --create bpf\n$ git branch --set-upstream-to bpf/master\n",
                      "markdown": "`$ git remote rename origin bpf-next\n$ git branch --move master bpf-next\n$ git remote add bpf 'https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf.git'\n$ git fetch bpf\n$ git checkout bpf/master\n$ git switch --create bpf\n$ git branch --set-upstream-to bpf/master\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 1,
                  "endLine": 54,
                  "endColumn": 6,
                  "snippet": {
                    "text": "$ cd linux\n$ git remote rename origin bpf-next\n$ git branch --move master bpf-next\n$ git remote add bpf 'https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf.git'\n$ git fetch bpf\n$ git checkout bpf/master\n$ git switch --create bpf\n",
                    "rendered": {
                      "text": "$ cd linux\n$ git remote rename origin bpf-next\n$ git branch --move master bpf-next\n$ git remote add bpf 'https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf.git'\n$ git fetch bpf\n$ git checkout bpf/master\n$ git switch --create bpf\n",
                      "markdown": "`$ cd linux\n$ git remote rename origin bpf-next\n$ git branch --move master bpf-next\n$ git remote add bpf 'https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf.git'\n$ git fetch bpf\n$ git checkout bpf/master\n$ git switch --create bpf\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 1,
                  "endLine": 53,
                  "endColumn": 6,
                  "snippet": {
                    "text": "$ git clone 'https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git' linux\n$ cd linux\n$ git remote rename origin bpf-next\n$ git branch --move master bpf-next\n$ git remote add bpf 'https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf.git'\n$ git fetch bpf\n$ git checkout bpf/master\n",
                    "rendered": {
                      "text": "$ git clone 'https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git' linux\n$ cd linux\n$ git remote rename origin bpf-next\n$ git branch --move master bpf-next\n$ git remote add bpf 'https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf.git'\n$ git fetch bpf\n$ git checkout bpf/master\n",
                      "markdown": "`$ git clone 'https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git' linux\n$ cd linux\n$ git remote rename origin bpf-next\n$ git branch --move master bpf-next\n$ git remote add bpf 'https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf.git'\n$ git fetch bpf\n$ git checkout bpf/master\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 1,
                  "endLine": 52,
                  "endColumn": 6,
                  "snippet": {
                    "text": "```console\n$ git clone 'https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git' linux\n$ cd linux\n$ git remote rename origin bpf-next\n$ git branch --move master bpf-next\n$ git remote add bpf 'https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf.git'\n$ git fetch bpf\n",
                    "rendered": {
                      "text": "```console\n$ git clone 'https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git' linux\n$ cd linux\n$ git remote rename origin bpf-next\n$ git branch --move master bpf-next\n$ git remote add bpf 'https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf.git'\n$ git fetch bpf\n",
                      "markdown": "````console\n$ git clone 'https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git' linux\n$ cd linux\n$ git remote rename origin bpf-next\n$ git branch --move master bpf-next\n$ git remote add bpf 'https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf.git'\n$ git fetch bpf\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 1,
                  "endLine": 50,
                  "endColumn": 6,
                  "snippet": {
                    "text": "in order to successfully run the script. You can set it up as follows:\n\n```console\n$ git clone 'https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git' linux\n$ cd linux\n$ git remote rename origin bpf-next\n$ git branch --move master bpf-next\n",
                    "rendered": {
                      "text": "in order to successfully run the script. You can set it up as follows:\n\n```console\n$ git clone 'https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git' linux\n$ cd linux\n$ git remote rename origin bpf-next\n$ git branch --move master bpf-next\n",
                      "markdown": "`in order to successfully run the script. You can set it up as follows:\n\n```console\n$ git clone 'https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git' linux\n$ cd linux\n$ git remote rename origin bpf-next\n$ git branch --move master bpf-next\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 43,
                  "endLine": 46,
                  "endColumn": 48,
                  "snippet": {
                    "text": "There is no particular tool required for running the script, except `git` of\ncourse.\n\nHowever, you need a local copy of the Linux Git repository on your system\nin order to successfully run the script. You can set it up as follows:\n\n```console\n",
                    "rendered": {
                      "text": "There is no particular tool required for running the script, except `git` of\ncourse.\n\nHowever, you need a local copy of the Linux Git repository on your system\nin order to successfully run the script. You can set it up as follows:\n\n```console\n",
                      "markdown": "`There is no particular tool required for running the script, except `git` of\ncourse.\n\nHowever, you need a local copy of the Linux Git repository on your system\nin order to successfully run the script. You can set it up as follows:\n\n```console\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 15,
                  "endLine": 32,
                  "endColumn": 23,
                  "snippet": {
                    "text": "Synchronization is usually performed against the `bpf-next` and `bpf` trees,\nbecause this is where most bpftool updates are merged.\n\nBy default, the script does not pick the very latest commits in these trees,\nbut instead it uses the commits referenced in the libbpf submodule. This is\nbecause bpftool strongly relies on libbpf, and the libbpf GitHub mirror is used\nhere as a submodule dependency. This libbpf mirror is also periodically updated\n",
                    "rendered": {
                      "text": "Synchronization is usually performed against the `bpf-next` and `bpf` trees,\nbecause this is where most bpftool updates are merged.\n\nBy default, the script does not pick the very latest commits in these trees,\nbut instead it uses the commits referenced in the libbpf submodule. This is\nbecause bpftool strongly relies on libbpf, and the libbpf GitHub mirror is used\nhere as a submodule dependency. This libbpf mirror is also periodically updated\n",
                      "markdown": "`Synchronization is usually performed against the `bpf-next` and `bpf` trees,\nbecause this is where most bpftool updates are merged.\n\nBy default, the script does not pick the very latest commits in these trees,\nbut instead it uses the commits referenced in the libbpf submodule. This is\nbecause bpftool strongly relies on libbpf, and the libbpf GitHub mirror is used\nhere as a submodule dependency. This libbpf mirror is also periodically updated\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 4,
                  "endLine": 26,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n### Synchronize Linux and bpftool mirror\n\nThis script synchronizes the bpftool mirror with the bpftool sources (and\nrelated files) from the Linux kernel repository.\n\nSynchronization is usually performed against the `bpf-next` and `bpf` trees,\n",
                    "rendered": {
                      "text": "\n### Synchronize Linux and bpftool mirror\n\nThis script synchronizes the bpftool mirror with the bpftool sources (and\nrelated files) from the Linux kernel repository.\n\nSynchronization is usually performed against the `bpf-next` and `bpf` trees,\n",
                      "markdown": "`\n### Synchronize Linux and bpftool mirror\n\nThis script synchronizes the bpftool mirror with the bpftool sources (and\nrelated files) from the Linux kernel repository.\n\nSynchronization is usually performed against the `bpf-next` and `bpf` trees,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 14,
                  "endLine": 13,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\nThe script takes the tag reference for the release as single parameter. The\nrepository to use, and the names and labels to set for assets are currently\ndefined in the script itself.\n\nIt requires the [GitHub command line][gh] (`gh`).\n\n",
                    "rendered": {
                      "text": "\nThe script takes the tag reference for the release as single parameter. The\nrepository to use, and the names and labels to set for assets are currently\ndefined in the script itself.\n\nIt requires the [GitHub command line][gh] (`gh`).\n\n",
                      "markdown": "`\nThe script takes the tag reference for the release as single parameter. The\nrepository to use, and the names and labels to set for assets are currently\ndefined in the script itself.\n\nIt requires the [GitHub command line][gh] (`gh`).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 3,
                  "endLine": 11,
                  "endColumn": 11,
                  "snippet": {
                    "text": "GitHub interface instead of the file name in the list of assets, but they do\nnot alter the download URL.\n\nThe script takes the tag reference for the release as single parameter. The\nrepository to use, and the names and labels to set for assets are currently\ndefined in the script itself.\n\n",
                    "rendered": {
                      "text": "GitHub interface instead of the file name in the list of assets, but they do\nnot alter the download URL.\n\nThe script takes the tag reference for the release as single parameter. The\nrepository to use, and the names and labels to set for assets are currently\ndefined in the script itself.\n\n",
                      "markdown": "`GitHub interface instead of the file name in the list of assets, but they do\nnot alter the download URL.\n\nThe script takes the tag reference for the release as single parameter. The\nrepository to use, and the names and labels to set for assets are currently\ndefined in the script itself.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/README.md"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 4,
                  "endLine": 7,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n## gh-label-release-assets.sh\n\nThis script can **add labels to GitHub release assets**. Labels are used in the\nGitHub interface instead of the file name in the list of assets, but they do\nnot alter the download URL.\n\n",
                    "rendered": {
                      "text": "\n## gh-label-release-assets.sh\n\nThis script can **add labels to GitHub release assets**. Labels are used in the\nGitHub interface instead of the file name in the list of assets, but they do\nnot alter the download URL.\n\n",
                      "markdown": "`\n## gh-label-release-assets.sh\n\nThis script can **add labels to GitHub release assets**. Labels are used in the\nGitHub interface instead of the file name in the list of assets, but they do\nnot alter the download URL.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/LICENSE.GPL-2.0"
                },
                "region": {
                  "startLine": 330,
                  "startColumn": 35,
                  "endLine": 330,
                  "endColumn": 39,
                  "snippet": {
                    "text": "necessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n",
                    "rendered": {
                      "text": "necessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n",
                      "markdown": "`necessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/LICENSE.GPL-2.0"
                },
                "region": {
                  "startLine": 290,
                  "startColumn": 59,
                  "endLine": 290,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n",
                    "rendered": {
                      "text": "\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n",
                      "markdown": "`\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/LICENSE.GPL-2.0"
                },
                "region": {
                  "startLine": 204,
                  "startColumn": 30,
                  "endLine": 204,
                  "endColumn": 34,
                  "snippet": {
                    "text": "excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n",
                    "rendered": {
                      "text": "excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n",
                      "markdown": "`excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/LICENSE.GPL-2.0"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 63,
                  "endLine": 159,
                  "endColumn": 8,
                  "snippet": {
                    "text": "The source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\n",
                    "rendered": {
                      "text": "The source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\n",
                      "markdown": "`The source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/LICENSE.GPL-2.0"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 51,
                  "endLine": 142,
                  "endColumn": 55,
                  "snippet": {
                    "text": "    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n",
                    "rendered": {
                      "text": "    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n",
                      "markdown": "`    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/LICENSE.GPL-2.0"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 21,
                  "endLine": 126,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\n",
                    "rendered": {
                      "text": "\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\n",
                      "markdown": "`\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/LICENSE.GPL-2.0"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 43,
                  "endLine": 100,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n",
                    "rendered": {
                      "text": "\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n",
                      "markdown": "`\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/LICENSE.GPL-2.0"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 7,
                  "endLine": 88,
                  "endColumn": 11,
                  "snippet": {
                    "text": "along with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\n",
                    "rendered": {
                      "text": "along with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\n",
                      "markdown": "`along with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/LICENSE.GPL-2.0"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 63,
                  "endLine": 54,
                  "endColumn": 67,
                  "snippet": {
                    "text": "patents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n",
                    "rendered": {
                      "text": "patents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n",
                      "markdown": "`patents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/LICENSE.GPL-2.0"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 12,
                  "endLine": 250,
                  "endColumn": 18,
                  "snippet": {
                    "text": "this License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\n",
                    "rendered": {
                      "text": "this License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\n",
                      "markdown": "`this License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/LICENSE.GPL-2.0"
                },
                "region": {
                  "startLine": 238,
                  "startColumn": 34,
                  "endLine": 238,
                  "endColumn": 40,
                  "snippet": {
                    "text": "the limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n",
                    "rendered": {
                      "text": "the limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n",
                      "markdown": "`the limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/LICENSE.GPL-2.0"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 9,
                  "endLine": 189,
                  "endColumn": 15,
                  "snippet": {
                    "text": "all its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\n",
                    "rendered": {
                      "text": "all its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\n",
                      "markdown": "`all its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/LICENSE.GPL-2.0"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 12,
                  "endLine": 51,
                  "endColumn": 18,
                  "snippet": {
                    "text": "authors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n",
                    "rendered": {
                      "text": "authors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n",
                      "markdown": "`authors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/LICENSE.GPL-2.0"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 4,
                  "endLine": 24,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n",
                    "rendered": {
                      "text": "  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n",
                      "markdown": "`  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/assets/bpftool_icon_color.svg"
                },
                "region": {
                  "startLine": 301,
                  "startColumn": 32,
                  "endLine": 301,
                  "endColumn": 75,
                  "snippet": {
                    "text": "84,-0.32211 -2.12423,-0.55027 -3.46067,-0.66282 -0.50117,-0.0423 -1.03529,-0.0679 -1.60067,-0.0688 z m 6.3082,11.83006 c -0.0842,-0.002 -0.10571,0.0452 -0.0787,0.13257 0.0727,-0.0346 0.14329,-0.0691 0.21769,-0.10367 -0.0575,-0.0182 -0.10401,-0.028 -0.13906,-0.0289 z\"\n             sodipodi:nodetypes=\"sssssszszszsssssssssssssccssscssssssccscc\" />\n          <path\n             id=\"path10100-5\"\n             style=\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.307244px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"\n             d=\"m 281.35538,-82.62657 c -0.84239,-0.0121 -1.06349,1.68873 -0.20829,5.645 0.85848,3.97149 2",
                    "rendered": {
                      "text": "84,-0.32211 -2.12423,-0.55027 -3.46067,-0.66282 -0.50117,-0.0423 -1.03529,-0.0679 -1.60067,-0.0688 z m 6.3082,11.83006 c -0.0842,-0.002 -0.10571,0.0452 -0.0787,0.13257 0.0727,-0.0346 0.14329,-0.0691 0.21769,-0.10367 -0.0575,-0.0182 -0.10401,-0.028 -0.13906,-0.0289 z\"\n             sodipodi:nodetypes=\"sssssszszszsssssssssssssccssscssssssccscc\" />\n          <path\n             id=\"path10100-5\"\n             style=\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.307244px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"\n             d=\"m 281.35538,-82.62657 c -0.84239,-0.0121 -1.06349,1.68873 -0.20829,5.645 0.85848,3.97149 2",
                      "markdown": "`84,-0.32211 -2.12423,-0.55027 -3.46067,-0.66282 -0.50117,-0.0423 -1.03529,-0.0679 -1.60067,-0.0688 z m 6.3082,11.83006 c -0.0842,-0.002 -0.10571,0.0452 -0.0787,0.13257 0.0727,-0.0346 0.14329,-0.0691 0.21769,-0.10367 -0.0575,-0.0182 -0.10401,-0.028 -0.13906,-0.0289 z\"\n             sodipodi:nodetypes=\"sssssszszszsssssssssssssccssscssssssccscc\" />\n          <path\n             id=\"path10100-5\"\n             style=\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.307244px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"\n             d=\"m 281.35538,-82.62657 c -0.84239,-0.0121 -1.06349,1.68873 -0.20829,5.645 0.85848,3.97149 2`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/assets/bpftool_icon_color.svg"
                },
                "region": {
                  "startLine": 280,
                  "startColumn": 32,
                  "endLine": 280,
                  "endColumn": 96,
                  "snippet": {
                    "text": "0552 0.1616,13.003343 1.11168,4.222791 3.33482,7.681514 4.40497,9.393453 1.07016,1.711938 0.98691,1.677166 0.90398,1.642526 -0.44871,-0.399367 -0.93427,-0.831527 -1.1402,-1.014813 -0.20593,-0.183287 -0.20588,-0.183307 -0.0709,0.167107 z\"\n             id=\"path11324-9\"\n             sodipodi:nodetypes=\"cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\"\n             inkscape:original-d=\"m 328.58531,-50.71174 c 0.27008,0.70077 0.53442,1.38707 0.79479,2.06356 -0.35539,-0.18409 -0.71126,-0.36859 -1.06708,-0.55323 -0.52327,-0.0213 -1.04709,-0.0428 -1.57147,-0.0646 0.75528,1.42685 1.50929,2.85156 2.26385,4.27755 -0.42545,0.49102 -0.85091,0.9814 -1.2768",
                    "rendered": {
                      "text": "0552 0.1616,13.003343 1.11168,4.222791 3.33482,7.681514 4.40497,9.393453 1.07016,1.711938 0.98691,1.677166 0.90398,1.642526 -0.44871,-0.399367 -0.93427,-0.831527 -1.1402,-1.014813 -0.20593,-0.183287 -0.20588,-0.183307 -0.0709,0.167107 z\"\n             id=\"path11324-9\"\n             sodipodi:nodetypes=\"cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\"\n             inkscape:original-d=\"m 328.58531,-50.71174 c 0.27008,0.70077 0.53442,1.38707 0.79479,2.06356 -0.35539,-0.18409 -0.71126,-0.36859 -1.06708,-0.55323 -0.52327,-0.0213 -1.04709,-0.0428 -1.57147,-0.0646 0.75528,1.42685 1.50929,2.85156 2.26385,4.27755 -0.42545,0.49102 -0.85091,0.9814 -1.2768",
                      "markdown": "`0552 0.1616,13.003343 1.11168,4.222791 3.33482,7.681514 4.40497,9.393453 1.07016,1.711938 0.98691,1.677166 0.90398,1.642526 -0.44871,-0.399367 -0.93427,-0.831527 -1.1402,-1.014813 -0.20593,-0.183287 -0.20588,-0.183307 -0.0709,0.167107 z\"\n             id=\"path11324-9\"\n             sodipodi:nodetypes=\"cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\"\n             inkscape:original-d=\"m 328.58531,-50.71174 c 0.27008,0.70077 0.53442,1.38707 0.79479,2.06356 -0.35539,-0.18409 -0.71126,-0.36859 -1.06708,-0.55323 -0.52327,-0.0213 -1.04709,-0.0428 -1.57147,-0.0646 0.75528,1.42685 1.50929,2.85156 2.26385,4.27755 -0.42545,0.49102 -0.85091,0.9814 -1.2768`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/assets/bpftool_icon_color.svg"
                },
                "region": {
                  "startLine": 265,
                  "startColumn": 34,
                  "endLine": 265,
                  "endColumn": 99,
                  "snippet": {
                    "text": "1.824219,-4.56836 -0.380823,-1.74758 -0.453634,-3.71452 -0.542969,-4.85546 -0.02233,-0.28525 -0.03621,-0.49764 0.02148,-0.63477 0.0577,-0.13713 0.183057,-0.24438 0.541015,-0.33594 0.715917,-0.1831 2.278145,-0.22662 5.441407,-0.16797 z\"\n               id=\"path17819\"\n               sodipodi:nodetypes=\"csssssssssssszssssssssscssssccssssscsssssscssssccssssssssssssss\" />\n          </g>\n          <path\n             id=\"path12684\"\n             style=\"fill:#000000;stroke:none;stroke-width:0.307244px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"\n             d=\"m 323.77069,-73.99766 c -1.27623,-0.008 -2.85363,0.62843 -2.98306,3.54669 -0.19722,4.44685 -",
                    "rendered": {
                      "text": "1.824219,-4.56836 -0.380823,-1.74758 -0.453634,-3.71452 -0.542969,-4.85546 -0.02233,-0.28525 -0.03621,-0.49764 0.02148,-0.63477 0.0577,-0.13713 0.183057,-0.24438 0.541015,-0.33594 0.715917,-0.1831 2.278145,-0.22662 5.441407,-0.16797 z\"\n               id=\"path17819\"\n               sodipodi:nodetypes=\"csssssssssssszssssssssscssssccssssscsssssscssssccssssssssssssss\" />\n          </g>\n          <path\n             id=\"path12684\"\n             style=\"fill:#000000;stroke:none;stroke-width:0.307244px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"\n             d=\"m 323.77069,-73.99766 c -1.27623,-0.008 -2.85363,0.62843 -2.98306,3.54669 -0.19722,4.44685 -",
                      "markdown": "`1.824219,-4.56836 -0.380823,-1.74758 -0.453634,-3.71452 -0.542969,-4.85546 -0.02233,-0.28525 -0.03621,-0.49764 0.02148,-0.63477 0.0577,-0.13713 0.183057,-0.24438 0.541015,-0.33594 0.715917,-0.1831 2.278145,-0.22662 5.441407,-0.16797 z\"\n               id=\"path17819\"\n               sodipodi:nodetypes=\"csssssssssssszssssssssscssssccssssscsssssscssssccssssssssssssss\" />\n          </g>\n          <path\n             id=\"path12684\"\n             style=\"fill:#000000;stroke:none;stroke-width:0.307244px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"\n             d=\"m 323.77069,-73.99766 c -1.27623,-0.008 -2.85363,0.62843 -2.98306,3.54669 -0.19722,4.44685 -`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/assets/bpftool_icon_color.svg"
                },
                "region": {
                  "startLine": 198,
                  "startColumn": 30,
                  "endLine": 198,
                  "endColumn": 278,
                  "snippet": {
                    "text": "82614 -2.49634,-1.521065 -3.90766,-1.879869 -1.37202,-0.363623 -2.79953,-0.497374 -4.21631,-0.479625 z m 12.33,7.897705 c -0.13151,0.0973 -0.28996,0.27877 -0.30291,0.005 -0.0518,-0.15568 -0.15927,-0.38657 0.0591,-0.17678 0.0813,0.0572 0.16255,0.11431 0.24383,0.17147 z\"\n           sodipodi:nodetypes=\"cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccscccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\" />\n        <g\n           id=\"g27394\"\n           transform=\"matrix(0.85555002,0,0,0.85555002,-165.81937,186.55075)\">\n          <path\n             id=\"path10096-6\"\n             style=\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.307244px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opac",
                    "rendered": {
                      "text": "82614 -2.49634,-1.521065 -3.90766,-1.879869 -1.37202,-0.363623 -2.79953,-0.497374 -4.21631,-0.479625 z m 12.33,7.897705 c -0.13151,0.0973 -0.28996,0.27877 -0.30291,0.005 -0.0518,-0.15568 -0.15927,-0.38657 0.0591,-0.17678 0.0813,0.0572 0.16255,0.11431 0.24383,0.17147 z\"\n           sodipodi:nodetypes=\"cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccscccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\" />\n        <g\n           id=\"g27394\"\n           transform=\"matrix(0.85555002,0,0,0.85555002,-165.81937,186.55075)\">\n          <path\n             id=\"path10096-6\"\n             style=\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.307244px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opac",
                      "markdown": "`82614 -2.49634,-1.521065 -3.90766,-1.879869 -1.37202,-0.363623 -2.79953,-0.497374 -4.21631,-0.479625 z m 12.33,7.897705 c -0.13151,0.0973 -0.28996,0.27877 -0.30291,0.005 -0.0518,-0.15568 -0.15927,-0.38657 0.0591,-0.17678 0.0813,0.0572 0.16255,0.11431 0.24383,0.17147 z\"\n           sodipodi:nodetypes=\"cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccscccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\" />\n        <g\n           id=\"g27394\"\n           transform=\"matrix(0.85555002,0,0,0.85555002,-165.81937,186.55075)\">\n          <path\n             id=\"path10096-6\"\n             style=\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.307244px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opac`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/lint-commits.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 29,
                  "endLine": 40,
                  "endColumn": 37,
                  "snippet": {
                    "text": "              # Fail workflow\n              false\n          fi\n          START_MARKER='sync: Update libbpf submodule'\n          END_MARKER='sync: Pull latest bpftool changes from kernel'\n          declare -a PREFIXES=(\n              \"ci\"\n",
                    "rendered": {
                      "text": "              # Fail workflow\n              false\n          fi\n          START_MARKER='sync: Update libbpf submodule'\n          END_MARKER='sync: Pull latest bpftool changes from kernel'\n          declare -a PREFIXES=(\n              \"ci\"\n",
                      "markdown": "`              # Fail workflow\n              false\n          fi\n          START_MARKER='sync: Update libbpf submodule'\n          END_MARKER='sync: Pull latest bpftool changes from kernel'\n          declare -a PREFIXES=(\n              \"ci\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/lint-commits.yaml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 85,
                  "endLine": 36,
                  "endColumn": 91,
                  "snippet": {
                    "text": "      - name: Check commit prefixes\n        run: |\n          if [[ -z \"${PR_TIP}\" || -z \"${PR_BASE}\" ]]; then\n              echo \"::error title=invalid base and head:: Failed to retrieve base and head for Pull Request\"\n              # Fail workflow\n              false\n          fi\n",
                    "rendered": {
                      "text": "      - name: Check commit prefixes\n        run: |\n          if [[ -z \"${PR_TIP}\" || -z \"${PR_BASE}\" ]]; then\n              echo \"::error title=invalid base and head:: Failed to retrieve base and head for Pull Request\"\n              # Fail workflow\n              false\n          fi\n",
                      "markdown": "`      - name: Check commit prefixes\n        run: |\n          if [[ -z \"${PR_TIP}\" || -z \"${PR_BASE}\" ]]; then\n              echo \"::error title=invalid base and head:: Failed to retrieve base and head for Pull Request\"\n              # Fail workflow\n              false\n          fi\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/lint-commits.yaml"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 11,
                  "endLine": 29,
                  "endColumn": 16,
                  "snippet": {
                    "text": "            ${{ github.event.pull_request.url }} | \\\n            tee /dev/stderr | \\\n            jq -r '\"\\(.base.sha) \\(.head.sha)\"' | \\\n            tee /dev/stderr)\n            echo \"PR_TIP=${PR_TIP}\" >> \"${GITHUB_ENV}\"\n            echo \"PR_BASE=${PR_BASE}\" >> \"${GITHUB_ENV}\"\n\n",
                    "rendered": {
                      "text": "            ${{ github.event.pull_request.url }} | \\\n            tee /dev/stderr | \\\n            jq -r '\"\\(.base.sha) \\(.head.sha)\"' | \\\n            tee /dev/stderr)\n            echo \"PR_TIP=${PR_TIP}\" >> \"${GITHUB_ENV}\"\n            echo \"PR_BASE=${PR_BASE}\" >> \"${GITHUB_ENV}\"\n\n",
                      "markdown": "`            ${{ github.event.pull_request.url }} | \\\n            tee /dev/stderr | \\\n            jq -r '\"\\(.base.sha) \\(.head.sha)\"' | \\\n            tee /dev/stderr)\n            echo \"PR_TIP=${PR_TIP}\" >> \"${GITHUB_ENV}\"\n            echo \"PR_BASE=${PR_BASE}\" >> \"${GITHUB_ENV}\"\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/lint-commits.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 11,
                  "endLine": 27,
                  "endColumn": 16,
                  "snippet": {
                    "text": "            -H \"Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}\" \\\n            -H \"X-GitHub-Api-Version: 2022-11-28\" \\\n            ${{ github.event.pull_request.url }} | \\\n            tee /dev/stderr | \\\n            jq -r '\"\\(.base.sha) \\(.head.sha)\"' | \\\n            tee /dev/stderr)\n            echo \"PR_TIP=${PR_TIP}\" >> \"${GITHUB_ENV}\"\n",
                    "rendered": {
                      "text": "            -H \"Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}\" \\\n            -H \"X-GitHub-Api-Version: 2022-11-28\" \\\n            ${{ github.event.pull_request.url }} | \\\n            tee /dev/stderr | \\\n            jq -r '\"\\(.base.sha) \\(.head.sha)\"' | \\\n            tee /dev/stderr)\n            echo \"PR_TIP=${PR_TIP}\" >> \"${GITHUB_ENV}\"\n",
                      "markdown": "`            -H \"Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}\" \\\n            -H \"X-GitHub-Api-Version: 2022-11-28\" \\\n            ${{ github.event.pull_request.url }} | \\\n            tee /dev/stderr | \\\n            jq -r '\"\\(.base.sha) \\(.head.sha)\"' | \\\n            tee /dev/stderr)\n            echo \"PR_TIP=${PR_TIP}\" >> \"${GITHUB_ENV}\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 26,
                  "endLine": 79,
                  "endColumn": 34,
                  "snippet": {
                    "text": "          LLVM_PATH: ${{ env[format('LLVM_{0}', matrix.arch)] }}\n        run:  |\n          docker run --platform linux/arm64 --rm -v $(pwd):/build ubuntu:22.04 \\\n          bash -c \"apt-get update && \\\n                   apt-get install -y make pkg-config gcc \\\n                       libelf-dev libcap-dev libstdc++-11-dev zlib1g-dev && \\\n                   cd /build/bpftool && \\\n",
                    "rendered": {
                      "text": "          LLVM_PATH: ${{ env[format('LLVM_{0}', matrix.arch)] }}\n        run:  |\n          docker run --platform linux/arm64 --rm -v $(pwd):/build ubuntu:22.04 \\\n          bash -c \"apt-get update && \\\n                   apt-get install -y make pkg-config gcc \\\n                       libelf-dev libcap-dev libstdc++-11-dev zlib1g-dev && \\\n                   cd /build/bpftool && \\\n",
                      "markdown": "`          LLVM_PATH: ${{ env[format('LLVM_{0}', matrix.arch)] }}\n        run:  |\n          docker run --platform linux/arm64 --rm -v $(pwd):/build ubuntu:22.04 \\\n          bash -c \"apt-get update && \\\n                   apt-get install -y make pkg-config gcc \\\n                       libelf-dev libcap-dev libstdc++-11-dev zlib1g-dev && \\\n                   cd /build/bpftool && \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 9,
                  "endLine": 79,
                  "endColumn": 15,
                  "snippet": {
                    "text": "          LLVM_PATH: ${{ env[format('LLVM_{0}', matrix.arch)] }}\n        run:  |\n          docker run --platform linux/arm64 --rm -v $(pwd):/build ubuntu:22.04 \\\n          bash -c \"apt-get update && \\\n                   apt-get install -y make pkg-config gcc \\\n                       libelf-dev libcap-dev libstdc++-11-dev zlib1g-dev && \\\n                   cd /build/bpftool && \\\n",
                    "rendered": {
                      "text": "          LLVM_PATH: ${{ env[format('LLVM_{0}', matrix.arch)] }}\n        run:  |\n          docker run --platform linux/arm64 --rm -v $(pwd):/build ubuntu:22.04 \\\n          bash -c \"apt-get update && \\\n                   apt-get install -y make pkg-config gcc \\\n                       libelf-dev libcap-dev libstdc++-11-dev zlib1g-dev && \\\n                   cd /build/bpftool && \\\n",
                      "markdown": "`          LLVM_PATH: ${{ env[format('LLVM_{0}', matrix.arch)] }}\n        run:  |\n          docker run --platform linux/arm64 --rm -v $(pwd):/build ubuntu:22.04 \\\n          bash -c \"apt-get update && \\\n                   apt-get install -y make pkg-config gcc \\\n                       libelf-dev libcap-dev libstdc++-11-dev zlib1g-dev && \\\n                   cd /build/bpftool && \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 22,
                  "endLine": 36,
                  "snippet": {
                    "text": "      - name: Install dependencies (amd64)\n        if: matrix.arch == 'amd64'\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y libelf-dev libcap-dev\n\n      - name: Download and extract compiled LLVM release\n        env:\n",
                    "rendered": {
                      "text": "      - name: Install dependencies (amd64)\n        if: matrix.arch == 'amd64'\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y libelf-dev libcap-dev\n\n      - name: Download and extract compiled LLVM release\n        env:\n",
                      "markdown": "`      - name: Install dependencies (amd64)\n        if: matrix.arch == 'amd64'\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y libelf-dev libcap-dev\n\n      - name: Download and extract compiled LLVM release\n        env:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 9,
                  "endLine": 127,
                  "endColumn": 14,
                  "snippet": {
                    "text": "          archive_amd64=\"bpftool-${{ github.ref_name }}-amd64.tar.gz\"\n          archive_arm64=\"bpftool-${{ github.ref_name }}-arm64.tar.gz\"\n          tar -C bpftool_amd64 -I 'gzip -9' -cvf \"${archive_amd64}\" bpftool\n          tar -C bpftool_arm64 -I 'gzip -9' -cvf \"${archive_arm64}\" bpftool\n          sha256sum \"${archive_amd64}\" > \"${archive_amd64}.sha256sum\"\n          sha256sum \"${archive_arm64}\" > \"${archive_arm64}.sha256sum\"\n\n",
                    "rendered": {
                      "text": "          archive_amd64=\"bpftool-${{ github.ref_name }}-amd64.tar.gz\"\n          archive_arm64=\"bpftool-${{ github.ref_name }}-arm64.tar.gz\"\n          tar -C bpftool_amd64 -I 'gzip -9' -cvf \"${archive_amd64}\" bpftool\n          tar -C bpftool_arm64 -I 'gzip -9' -cvf \"${archive_arm64}\" bpftool\n          sha256sum \"${archive_amd64}\" > \"${archive_amd64}.sha256sum\"\n          sha256sum \"${archive_arm64}\" > \"${archive_arm64}.sha256sum\"\n\n",
                      "markdown": "`          archive_amd64=\"bpftool-${{ github.ref_name }}-amd64.tar.gz\"\n          archive_arm64=\"bpftool-${{ github.ref_name }}-arm64.tar.gz\"\n          tar -C bpftool_amd64 -I 'gzip -9' -cvf \"${archive_amd64}\" bpftool\n          tar -C bpftool_arm64 -I 'gzip -9' -cvf \"${archive_arm64}\" bpftool\n          sha256sum \"${archive_amd64}\" > \"${archive_amd64}.sha256sum\"\n          sha256sum \"${archive_arm64}\" > \"${archive_arm64}.sha256sum\"\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 9,
                  "endLine": 126,
                  "endColumn": 14,
                  "snippet": {
                    "text": "        run: |\n          archive_amd64=\"bpftool-${{ github.ref_name }}-amd64.tar.gz\"\n          archive_arm64=\"bpftool-${{ github.ref_name }}-arm64.tar.gz\"\n          tar -C bpftool_amd64 -I 'gzip -9' -cvf \"${archive_amd64}\" bpftool\n          tar -C bpftool_arm64 -I 'gzip -9' -cvf \"${archive_arm64}\" bpftool\n          sha256sum \"${archive_amd64}\" > \"${archive_amd64}.sha256sum\"\n          sha256sum \"${archive_arm64}\" > \"${archive_arm64}.sha256sum\"\n",
                    "rendered": {
                      "text": "        run: |\n          archive_amd64=\"bpftool-${{ github.ref_name }}-amd64.tar.gz\"\n          archive_arm64=\"bpftool-${{ github.ref_name }}-arm64.tar.gz\"\n          tar -C bpftool_amd64 -I 'gzip -9' -cvf \"${archive_amd64}\" bpftool\n          tar -C bpftool_arm64 -I 'gzip -9' -cvf \"${archive_arm64}\" bpftool\n          sha256sum \"${archive_amd64}\" > \"${archive_amd64}.sha256sum\"\n          sha256sum \"${archive_arm64}\" > \"${archive_arm64}.sha256sum\"\n",
                      "markdown": "`        run: |\n          archive_amd64=\"bpftool-${{ github.ref_name }}-amd64.tar.gz\"\n          archive_arm64=\"bpftool-${{ github.ref_name }}-arm64.tar.gz\"\n          tar -C bpftool_amd64 -I 'gzip -9' -cvf \"${archive_amd64}\" bpftool\n          tar -C bpftool_arm64 -I 'gzip -9' -cvf \"${archive_arm64}\" bpftool\n          sha256sum \"${archive_amd64}\" > \"${archive_amd64}.sha256sum\"\n          sha256sum \"${archive_arm64}\" > \"${archive_arm64}.sha256sum\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 13,
                  "endLine": 104,
                  "endColumn": 19,
                  "snippet": {
                    "text": "              jq --exit-status \".features | .llvm and .skeletons\"\n          ldd ./bpftool 2>&1 | \\\n              tee /dev/stderr | \\\n              grep -q 'not a dynamic executable'\n\n      - name: Upload Artifact\n        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2\n",
                    "rendered": {
                      "text": "              jq --exit-status \".features | .llvm and .skeletons\"\n          ldd ./bpftool 2>&1 | \\\n              tee /dev/stderr | \\\n              grep -q 'not a dynamic executable'\n\n      - name: Upload Artifact\n        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2\n",
                      "markdown": "`              jq --exit-status \".features | .llvm and .skeletons\"\n          ldd ./bpftool 2>&1 | \\\n              tee /dev/stderr | \\\n              grep -q 'not a dynamic executable'\n\n      - name: Upload Artifact\n        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 13,
                  "endLine": 103,
                  "endColumn": 18,
                  "snippet": {
                    "text": "              tee /dev/stderr | \\\n              jq --exit-status \".features | .llvm and .skeletons\"\n          ldd ./bpftool 2>&1 | \\\n              tee /dev/stderr | \\\n              grep -q 'not a dynamic executable'\n\n      - name: Upload Artifact\n",
                    "rendered": {
                      "text": "              tee /dev/stderr | \\\n              jq --exit-status \".features | .llvm and .skeletons\"\n          ldd ./bpftool 2>&1 | \\\n              tee /dev/stderr | \\\n              grep -q 'not a dynamic executable'\n\n      - name: Upload Artifact\n",
                      "markdown": "`              tee /dev/stderr | \\\n              jq --exit-status \".features | .llvm and .skeletons\"\n          ldd ./bpftool 2>&1 | \\\n              tee /dev/stderr | \\\n              grep -q 'not a dynamic executable'\n\n      - name: Upload Artifact\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 13,
                  "endLine": 100,
                  "endColumn": 18,
                  "snippet": {
                    "text": "              grep -q \"${{ env.ARCH }}\"\n          ./bpftool 2>&1 | grep -q Usage\n          ./bpftool -p version | \\\n              tee /dev/stderr | \\\n              jq --exit-status \".features | .llvm and .skeletons\"\n          ldd ./bpftool 2>&1 | \\\n              tee /dev/stderr | \\\n",
                    "rendered": {
                      "text": "              grep -q \"${{ env.ARCH }}\"\n          ./bpftool 2>&1 | grep -q Usage\n          ./bpftool -p version | \\\n              tee /dev/stderr | \\\n              jq --exit-status \".features | .llvm and .skeletons\"\n          ldd ./bpftool 2>&1 | \\\n              tee /dev/stderr | \\\n",
                      "markdown": "`              grep -q \"${{ env.ARCH }}\"\n          ./bpftool 2>&1 | grep -q Usage\n          ./bpftool -p version | \\\n              tee /dev/stderr | \\\n              jq --exit-status \".features | .llvm and .skeletons\"\n          ldd ./bpftool 2>&1 | \\\n              tee /dev/stderr | \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 26,
                  "endLine": 98,
                  "endColumn": 32,
                  "snippet": {
                    "text": "          file ./bpftool | \\\n              tee /dev/stderr | \\\n              grep -q \"${{ env.ARCH }}\"\n          ./bpftool 2>&1 | grep -q Usage\n          ./bpftool -p version | \\\n              tee /dev/stderr | \\\n              jq --exit-status \".features | .llvm and .skeletons\"\n",
                    "rendered": {
                      "text": "          file ./bpftool | \\\n              tee /dev/stderr | \\\n              grep -q \"${{ env.ARCH }}\"\n          ./bpftool 2>&1 | grep -q Usage\n          ./bpftool -p version | \\\n              tee /dev/stderr | \\\n              jq --exit-status \".features | .llvm and .skeletons\"\n",
                      "markdown": "`          file ./bpftool | \\\n              tee /dev/stderr | \\\n              grep -q \"${{ env.ARCH }}\"\n          ./bpftool 2>&1 | grep -q Usage\n          ./bpftool -p version | \\\n              tee /dev/stderr | \\\n              jq --exit-status \".features | .llvm and .skeletons\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 13,
                  "endLine": 97,
                  "endColumn": 19,
                  "snippet": {
                    "text": "        run: |\n          file ./bpftool | \\\n              tee /dev/stderr | \\\n              grep -q \"${{ env.ARCH }}\"\n          ./bpftool 2>&1 | grep -q Usage\n          ./bpftool -p version | \\\n              tee /dev/stderr | \\\n",
                    "rendered": {
                      "text": "        run: |\n          file ./bpftool | \\\n              tee /dev/stderr | \\\n              grep -q \"${{ env.ARCH }}\"\n          ./bpftool 2>&1 | grep -q Usage\n          ./bpftool -p version | \\\n              tee /dev/stderr | \\\n",
                      "markdown": "`        run: |\n          file ./bpftool | \\\n              tee /dev/stderr | \\\n              grep -q \"${{ env.ARCH }}\"\n          ./bpftool 2>&1 | grep -q Usage\n          ./bpftool -p version | \\\n              tee /dev/stderr | \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 13,
                  "endLine": 96,
                  "endColumn": 18,
                  "snippet": {
                    "text": "          ARCH: ${{ env[format('FILE_STRING_ARCH_{0}', matrix.arch)] }}\n        run: |\n          file ./bpftool | \\\n              tee /dev/stderr | \\\n              grep -q \"${{ env.ARCH }}\"\n          ./bpftool 2>&1 | grep -q Usage\n          ./bpftool -p version | \\\n",
                    "rendered": {
                      "text": "          ARCH: ${{ env[format('FILE_STRING_ARCH_{0}', matrix.arch)] }}\n        run: |\n          file ./bpftool | \\\n              tee /dev/stderr | \\\n              grep -q \"${{ env.ARCH }}\"\n          ./bpftool 2>&1 | grep -q Usage\n          ./bpftool -p version | \\\n",
                      "markdown": "`          ARCH: ${{ env[format('FILE_STRING_ARCH_{0}', matrix.arch)] }}\n        run: |\n          file ./bpftool | \\\n              tee /dev/stderr | \\\n              grep -q \"${{ env.ARCH }}\"\n          ./bpftool 2>&1 | grep -q Usage\n          ./bpftool -p version | \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 18,
                  "endLine": 80,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        run:  |\n          docker run --platform linux/arm64 --rm -v $(pwd):/build ubuntu:22.04 \\\n          bash -c \"apt-get update && \\\n                   apt-get install -y make pkg-config gcc \\\n                       libelf-dev libcap-dev libstdc++-11-dev zlib1g-dev && \\\n                   cd /build/bpftool && \\\n                   EXTRA_CFLAGS=--static \\\n",
                    "rendered": {
                      "text": "        run:  |\n          docker run --platform linux/arm64 --rm -v $(pwd):/build ubuntu:22.04 \\\n          bash -c \"apt-get update && \\\n                   apt-get install -y make pkg-config gcc \\\n                       libelf-dev libcap-dev libstdc++-11-dev zlib1g-dev && \\\n                   cd /build/bpftool && \\\n                   EXTRA_CFLAGS=--static \\\n",
                      "markdown": "`        run:  |\n          docker run --platform linux/arm64 --rm -v $(pwd):/build ubuntu:22.04 \\\n          bash -c \"apt-get update && \\\n                   apt-get install -y make pkg-config gcc \\\n                       libelf-dev libcap-dev libstdc++-11-dev zlib1g-dev && \\\n                   cd /build/bpftool && \\\n                   EXTRA_CFLAGS=--static \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 9,
                  "endLine": 79,
                  "endColumn": 15,
                  "snippet": {
                    "text": "          LLVM_PATH: ${{ env[format('LLVM_{0}', matrix.arch)] }}\n        run:  |\n          docker run --platform linux/arm64 --rm -v $(pwd):/build ubuntu:22.04 \\\n          bash -c \"apt-get update && \\\n                   apt-get install -y make pkg-config gcc \\\n                       libelf-dev libcap-dev libstdc++-11-dev zlib1g-dev && \\\n                   cd /build/bpftool && \\\n",
                    "rendered": {
                      "text": "          LLVM_PATH: ${{ env[format('LLVM_{0}', matrix.arch)] }}\n        run:  |\n          docker run --platform linux/arm64 --rm -v $(pwd):/build ubuntu:22.04 \\\n          bash -c \"apt-get update && \\\n                   apt-get install -y make pkg-config gcc \\\n                       libelf-dev libcap-dev libstdc++-11-dev zlib1g-dev && \\\n                   cd /build/bpftool && \\\n",
                      "markdown": "`          LLVM_PATH: ${{ env[format('LLVM_{0}', matrix.arch)] }}\n        run:  |\n          docker run --platform linux/arm64 --rm -v $(pwd):/build ubuntu:22.04 \\\n          bash -c \"apt-get update && \\\n                   apt-get install -y make pkg-config gcc \\\n                       libelf-dev libcap-dev libstdc++-11-dev zlib1g-dev && \\\n                   cd /build/bpftool && \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 9,
                  "endLine": 78,
                  "endColumn": 17,
                  "snippet": {
                    "text": "        env:\n          LLVM_PATH: ${{ env[format('LLVM_{0}', matrix.arch)] }}\n        run:  |\n          docker run --platform linux/arm64 --rm -v $(pwd):/build ubuntu:22.04 \\\n          bash -c \"apt-get update && \\\n                   apt-get install -y make pkg-config gcc \\\n                       libelf-dev libcap-dev libstdc++-11-dev zlib1g-dev && \\\n",
                    "rendered": {
                      "text": "        env:\n          LLVM_PATH: ${{ env[format('LLVM_{0}', matrix.arch)] }}\n        run:  |\n          docker run --platform linux/arm64 --rm -v $(pwd):/build ubuntu:22.04 \\\n          bash -c \"apt-get update && \\\n                   apt-get install -y make pkg-config gcc \\\n                       libelf-dev libcap-dev libstdc++-11-dev zlib1g-dev && \\\n",
                      "markdown": "`        env:\n          LLVM_PATH: ${{ env[format('LLVM_{0}', matrix.arch)] }}\n        run:  |\n          docker run --platform linux/arm64 --rm -v $(pwd):/build ubuntu:22.04 \\\n          bash -c \"apt-get update && \\\n                   apt-get install -y make pkg-config gcc \\\n                       libelf-dev libcap-dev libstdc++-11-dev zlib1g-dev && \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 36,
                  "endLine": 71,
                  "endColumn": 44,
                  "snippet": {
                    "text": "        with:\n          platforms: arm64\n\n      # The emulated build leverages Docker and Ubuntu 22.04 container image\n      # distribution to have all the needed arm64 packages.\n      - name: Build static bpftool for arm64 with emulation\n        if: matrix.arch == 'arm64'\n",
                    "rendered": {
                      "text": "        with:\n          platforms: arm64\n\n      # The emulated build leverages Docker and Ubuntu 22.04 container image\n      # distribution to have all the needed arm64 packages.\n      - name: Build static bpftool for arm64 with emulation\n        if: matrix.arch == 'arm64'\n",
                      "markdown": "`        with:\n          platforms: arm64\n\n      # The emulated build leverages Docker and Ubuntu 22.04 container image\n      # distribution to have all the needed arm64 packages.\n      - name: Build static bpftool for arm64 with emulation\n        if: matrix.arch == 'arm64'\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 9,
                  "endLine": 43,
                  "endColumn": 14,
                  "snippet": {
                    "text": "          LLVM: ${{ env[format('LLVM_{0}', matrix.arch)] }}\n        run: |\n          curl -L -O \"${{ env.LLVM_URL_PREFIX}}/${{ env.LLVM }}.tar.xz\"\n          tar -xvf \"${{ env.LLVM }}.tar.xz\"\n\n      - name: Checkout bpftool code\n        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0\n",
                    "rendered": {
                      "text": "          LLVM: ${{ env[format('LLVM_{0}', matrix.arch)] }}\n        run: |\n          curl -L -O \"${{ env.LLVM_URL_PREFIX}}/${{ env.LLVM }}.tar.xz\"\n          tar -xvf \"${{ env.LLVM }}.tar.xz\"\n\n      - name: Checkout bpftool code\n        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0\n",
                      "markdown": "`          LLVM: ${{ env[format('LLVM_{0}', matrix.arch)] }}\n        run: |\n          curl -L -O \"${{ env.LLVM_URL_PREFIX}}/${{ env.LLVM }}.tar.xz\"\n          tar -xvf \"${{ env.LLVM }}.tar.xz\"\n\n      - name: Checkout bpftool code\n        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 9,
                  "endLine": 42,
                  "endColumn": 15,
                  "snippet": {
                    "text": "        env:\n          LLVM: ${{ env[format('LLVM_{0}', matrix.arch)] }}\n        run: |\n          curl -L -O \"${{ env.LLVM_URL_PREFIX}}/${{ env.LLVM }}.tar.xz\"\n          tar -xvf \"${{ env.LLVM }}.tar.xz\"\n\n      - name: Checkout bpftool code\n",
                    "rendered": {
                      "text": "        env:\n          LLVM: ${{ env[format('LLVM_{0}', matrix.arch)] }}\n        run: |\n          curl -L -O \"${{ env.LLVM_URL_PREFIX}}/${{ env.LLVM }}.tar.xz\"\n          tar -xvf \"${{ env.LLVM }}.tar.xz\"\n\n      - name: Checkout bpftool code\n",
                      "markdown": "`        env:\n          LLVM: ${{ env[format('LLVM_{0}', matrix.arch)] }}\n        run: |\n          curl -L -O \"${{ env.LLVM_URL_PREFIX}}/${{ env.LLVM }}.tar.xz\"\n          tar -xvf \"${{ env.LLVM }}.tar.xz\"\n\n      - name: Checkout bpftool code\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 14,
                  "endLine": 36,
                  "endColumn": 23,
                  "snippet": {
                    "text": "        if: matrix.arch == 'amd64'\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y libelf-dev libcap-dev\n\n      - name: Download and extract compiled LLVM release\n        env:\n",
                    "rendered": {
                      "text": "        if: matrix.arch == 'amd64'\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y libelf-dev libcap-dev\n\n      - name: Download and extract compiled LLVM release\n        env:\n",
                      "markdown": "`        if: matrix.arch == 'amd64'\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y libelf-dev libcap-dev\n\n      - name: Download and extract compiled LLVM release\n        env:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/release.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 14,
                  "endLine": 35,
                  "endColumn": 23,
                  "snippet": {
                    "text": "      - name: Install dependencies (amd64)\n        if: matrix.arch == 'amd64'\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y libelf-dev libcap-dev\n\n      - name: Download and extract compiled LLVM release\n",
                    "rendered": {
                      "text": "      - name: Install dependencies (amd64)\n        if: matrix.arch == 'amd64'\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y libelf-dev libcap-dev\n\n      - name: Download and extract compiled LLVM release\n",
                      "markdown": "`      - name: Install dependencies (amd64)\n        if: matrix.arch == 'amd64'\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y libelf-dev libcap-dev\n\n      - name: Download and extract compiled LLVM release\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/static-build.yaml"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 22,
                  "endLine": 29,
                  "snippet": {
                    "text": "    steps:\n      - name: Install dependencies\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y libelf-dev\n\n      - name: Download and extract compiled LLVM release\n        run: |\n",
                    "rendered": {
                      "text": "    steps:\n      - name: Install dependencies\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y libelf-dev\n\n      - name: Download and extract compiled LLVM release\n        run: |\n",
                      "markdown": "`    steps:\n      - name: Install dependencies\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y libelf-dev\n\n      - name: Download and extract compiled LLVM release\n        run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/static-build.yaml"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 13,
                  "endLine": 60,
                  "endColumn": 19,
                  "snippet": {
                    "text": "              jq --exit-status \".features | .llvm\"\n          ldd ./src/bpftool 2>&1 | \\\n              tee /dev/stderr | \\\n              grep -q 'not a dynamic executable'\n",
                    "rendered": {
                      "text": "              jq --exit-status \".features | .llvm\"\n          ldd ./src/bpftool 2>&1 | \\\n              tee /dev/stderr | \\\n              grep -q 'not a dynamic executable'\n",
                      "markdown": "`              jq --exit-status \".features | .llvm\"\n          ldd ./src/bpftool 2>&1 | \\\n              tee /dev/stderr | \\\n              grep -q 'not a dynamic executable'\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/static-build.yaml"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 13,
                  "endLine": 59,
                  "endColumn": 18,
                  "snippet": {
                    "text": "              tee /dev/stderr | \\\n              jq --exit-status \".features | .llvm\"\n          ldd ./src/bpftool 2>&1 | \\\n              tee /dev/stderr | \\\n              grep -q 'not a dynamic executable'\n",
                    "rendered": {
                      "text": "              tee /dev/stderr | \\\n              jq --exit-status \".features | .llvm\"\n          ldd ./src/bpftool 2>&1 | \\\n              tee /dev/stderr | \\\n              grep -q 'not a dynamic executable'\n",
                      "markdown": "`              tee /dev/stderr | \\\n              jq --exit-status \".features | .llvm\"\n          ldd ./src/bpftool 2>&1 | \\\n              tee /dev/stderr | \\\n              grep -q 'not a dynamic executable'\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/static-build.yaml"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 13,
                  "endLine": 56,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        run: |\n          ./src/bpftool 2>&1 | grep -q Usage\n          ./src/bpftool -p version | \\\n              tee /dev/stderr | \\\n              jq --exit-status \".features | .llvm\"\n          ldd ./src/bpftool 2>&1 | \\\n              tee /dev/stderr | \\\n",
                    "rendered": {
                      "text": "        run: |\n          ./src/bpftool 2>&1 | grep -q Usage\n          ./src/bpftool -p version | \\\n              tee /dev/stderr | \\\n              jq --exit-status \".features | .llvm\"\n          ldd ./src/bpftool 2>&1 | \\\n              tee /dev/stderr | \\\n",
                      "markdown": "`        run: |\n          ./src/bpftool 2>&1 | grep -q Usage\n          ./src/bpftool -p version | \\\n              tee /dev/stderr | \\\n              jq --exit-status \".features | .llvm\"\n          ldd ./src/bpftool 2>&1 | \\\n              tee /dev/stderr | \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/static-build.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 30,
                  "endLine": 54,
                  "endColumn": 36,
                  "snippet": {
                    "text": "      - name: Test bpftool binary\n        working-directory: 'bpftool'\n        run: |\n          ./src/bpftool 2>&1 | grep -q Usage\n          ./src/bpftool -p version | \\\n              tee /dev/stderr | \\\n              jq --exit-status \".features | .llvm\"\n",
                    "rendered": {
                      "text": "      - name: Test bpftool binary\n        working-directory: 'bpftool'\n        run: |\n          ./src/bpftool 2>&1 | grep -q Usage\n          ./src/bpftool -p version | \\\n              tee /dev/stderr | \\\n              jq --exit-status \".features | .llvm\"\n",
                      "markdown": "`      - name: Test bpftool binary\n        working-directory: 'bpftool'\n        run: |\n          ./src/bpftool 2>&1 | grep -q Usage\n          ./src/bpftool -p version | \\\n              tee /dev/stderr | \\\n              jq --exit-status \".features | .llvm\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/static-build.yaml"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 9,
                  "endLine": 34,
                  "endColumn": 14,
                  "snippet": {
                    "text": "      - name: Download and extract compiled LLVM release\n        run: |\n          curl -L -O \"${{ env.LLVM_URL_PREFIX }}/${{ env.LLVM_PATH }}.tar.xz\"\n          tar -xvf \"${{ env.LLVM_PATH }}.tar.xz\"\n\n      - name: Checkout bpftool\n        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0\n",
                    "rendered": {
                      "text": "      - name: Download and extract compiled LLVM release\n        run: |\n          curl -L -O \"${{ env.LLVM_URL_PREFIX }}/${{ env.LLVM_PATH }}.tar.xz\"\n          tar -xvf \"${{ env.LLVM_PATH }}.tar.xz\"\n\n      - name: Checkout bpftool\n        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0\n",
                      "markdown": "`      - name: Download and extract compiled LLVM release\n        run: |\n          curl -L -O \"${{ env.LLVM_URL_PREFIX }}/${{ env.LLVM_PATH }}.tar.xz\"\n          tar -xvf \"${{ env.LLVM_PATH }}.tar.xz\"\n\n      - name: Checkout bpftool\n        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/static-build.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 9,
                  "endLine": 33,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n      - name: Download and extract compiled LLVM release\n        run: |\n          curl -L -O \"${{ env.LLVM_URL_PREFIX }}/${{ env.LLVM_PATH }}.tar.xz\"\n          tar -xvf \"${{ env.LLVM_PATH }}.tar.xz\"\n\n      - name: Checkout bpftool\n",
                    "rendered": {
                      "text": "\n      - name: Download and extract compiled LLVM release\n        run: |\n          curl -L -O \"${{ env.LLVM_URL_PREFIX }}/${{ env.LLVM_PATH }}.tar.xz\"\n          tar -xvf \"${{ env.LLVM_PATH }}.tar.xz\"\n\n      - name: Checkout bpftool\n",
                      "markdown": "`\n      - name: Download and extract compiled LLVM release\n        run: |\n          curl -L -O \"${{ env.LLVM_URL_PREFIX }}/${{ env.LLVM_PATH }}.tar.xz\"\n          tar -xvf \"${{ env.LLVM_PATH }}.tar.xz\"\n\n      - name: Checkout bpftool\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/static-build.yaml"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 14,
                  "endLine": 29,
                  "endColumn": 23,
                  "snippet": {
                    "text": "      - name: Install dependencies\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y libelf-dev\n\n      - name: Download and extract compiled LLVM release\n        run: |\n",
                    "rendered": {
                      "text": "      - name: Install dependencies\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y libelf-dev\n\n      - name: Download and extract compiled LLVM release\n        run: |\n",
                      "markdown": "`      - name: Install dependencies\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y libelf-dev\n\n      - name: Download and extract compiled LLVM release\n        run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/static-build.yaml"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 14,
                  "endLine": 28,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    steps:\n      - name: Install dependencies\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y libelf-dev\n\n      - name: Download and extract compiled LLVM release\n",
                    "rendered": {
                      "text": "    steps:\n      - name: Install dependencies\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y libelf-dev\n\n      - name: Download and extract compiled LLVM release\n",
                      "markdown": "`    steps:\n      - name: Install dependencies\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y libelf-dev\n\n      - name: Download and extract compiled LLVM release\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 22,
                  "endLine": 44,
                  "snippet": {
                    "text": "\n      - name: Install dependencies\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y \\\n              libbfd-dev libcap-dev libelf-dev libiberty-dev python3-docutils\n          # clang/LLVM are already installed, but we're missing some aliases.\n          CLANG_VERSION=\"$(echo '__clang_major__' | clang -E - | tail -n 1)\"\n",
                    "rendered": {
                      "text": "\n      - name: Install dependencies\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y \\\n              libbfd-dev libcap-dev libelf-dev libiberty-dev python3-docutils\n          # clang/LLVM are already installed, but we're missing some aliases.\n          CLANG_VERSION=\"$(echo '__clang_major__' | clang -E - | tail -n 1)\"\n",
                      "markdown": "`\n      - name: Install dependencies\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y \\\n              libbfd-dev libcap-dev libelf-dev libiberty-dev python3-docutils\n          # clang/LLVM are already installed, but we're missing some aliases.\n          CLANG_VERSION=\"$(echo '__clang_major__' | clang -E - | tail -n 1)\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 9,
                  "endLine": 96,
                  "endColumn": 15,
                  "snippet": {
                    "text": "      - name: Build bpftool's documentation\n        run: |\n          make -j -C docs\n          grep -q '.TH \"\\?BPFTOOL\"\\? 8' ./docs/bpftool.8\n",
                    "rendered": {
                      "text": "      - name: Build bpftool's documentation\n        run: |\n          make -j -C docs\n          grep -q '.TH \"\\?BPFTOOL\"\\? 8' ./docs/bpftool.8\n",
                      "markdown": "`      - name: Build bpftool's documentation\n        run: |\n          make -j -C docs\n          grep -q '.TH \"\\?BPFTOOL\"\\? 8' ./docs/bpftool.8\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 13,
                  "endLine": 91,
                  "endColumn": 19,
                  "snippet": {
                    "text": "              jq --exit-status \".features | .libbfd and (.llvm | not)\"\n          ldd ./src/bpftool 2>&1 | \\\n              tee /dev/stderr | \\\n              grep -q 'not a dynamic executable'\n\n      - name: Build bpftool's documentation\n        run: |\n",
                    "rendered": {
                      "text": "              jq --exit-status \".features | .libbfd and (.llvm | not)\"\n          ldd ./src/bpftool 2>&1 | \\\n              tee /dev/stderr | \\\n              grep -q 'not a dynamic executable'\n\n      - name: Build bpftool's documentation\n        run: |\n",
                      "markdown": "`              jq --exit-status \".features | .libbfd and (.llvm | not)\"\n          ldd ./src/bpftool 2>&1 | \\\n              tee /dev/stderr | \\\n              grep -q 'not a dynamic executable'\n\n      - name: Build bpftool's documentation\n        run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 13,
                  "endLine": 90,
                  "endColumn": 18,
                  "snippet": {
                    "text": "              tee /dev/stderr | \\\n              jq --exit-status \".features | .libbfd and (.llvm | not)\"\n          ldd ./src/bpftool 2>&1 | \\\n              tee /dev/stderr | \\\n              grep -q 'not a dynamic executable'\n\n      - name: Build bpftool's documentation\n",
                    "rendered": {
                      "text": "              tee /dev/stderr | \\\n              jq --exit-status \".features | .libbfd and (.llvm | not)\"\n          ldd ./src/bpftool 2>&1 | \\\n              tee /dev/stderr | \\\n              grep -q 'not a dynamic executable'\n\n      - name: Build bpftool's documentation\n",
                      "markdown": "`              tee /dev/stderr | \\\n              jq --exit-status \".features | .libbfd and (.llvm | not)\"\n          ldd ./src/bpftool 2>&1 | \\\n              tee /dev/stderr | \\\n              grep -q 'not a dynamic executable'\n\n      - name: Build bpftool's documentation\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 13,
                  "endLine": 87,
                  "endColumn": 18,
                  "snippet": {
                    "text": "          EXTRA_CFLAGS=--static make -j -C src V=1\n          ./src/bpftool 2>&1 | grep -q Usage\n          ./src/bpftool -p version | \\\n              tee /dev/stderr | \\\n              jq --exit-status \".features | .libbfd and (.llvm | not)\"\n          ldd ./src/bpftool 2>&1 | \\\n              tee /dev/stderr | \\\n",
                    "rendered": {
                      "text": "          EXTRA_CFLAGS=--static make -j -C src V=1\n          ./src/bpftool 2>&1 | grep -q Usage\n          ./src/bpftool -p version | \\\n              tee /dev/stderr | \\\n              jq --exit-status \".features | .libbfd and (.llvm | not)\"\n          ldd ./src/bpftool 2>&1 | \\\n              tee /dev/stderr | \\\n",
                      "markdown": "`          EXTRA_CFLAGS=--static make -j -C src V=1\n          ./src/bpftool 2>&1 | grep -q Usage\n          ./src/bpftool -p version | \\\n              tee /dev/stderr | \\\n              jq --exit-status \".features | .libbfd and (.llvm | not)\"\n          ldd ./src/bpftool 2>&1 | \\\n              tee /dev/stderr | \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 30,
                  "endLine": 85,
                  "endColumn": 36,
                  "snippet": {
                    "text": "        run: |\n          make -C src clean\n          EXTRA_CFLAGS=--static make -j -C src V=1\n          ./src/bpftool 2>&1 | grep -q Usage\n          ./src/bpftool -p version | \\\n              tee /dev/stderr | \\\n              jq --exit-status \".features | .libbfd and (.llvm | not)\"\n",
                    "rendered": {
                      "text": "        run: |\n          make -C src clean\n          EXTRA_CFLAGS=--static make -j -C src V=1\n          ./src/bpftool 2>&1 | grep -q Usage\n          ./src/bpftool -p version | \\\n              tee /dev/stderr | \\\n              jq --exit-status \".features | .libbfd and (.llvm | not)\"\n",
                      "markdown": "`        run: |\n          make -C src clean\n          EXTRA_CFLAGS=--static make -j -C src V=1\n          ./src/bpftool 2>&1 | grep -q Usage\n          ./src/bpftool -p version | \\\n              tee /dev/stderr | \\\n              jq --exit-status \".features | .libbfd and (.llvm | not)\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 13,
                  "endLine": 78,
                  "endColumn": 18,
                  "snippet": {
                    "text": "          make -j -C src V=1\n          ./src/bpftool 2>&1 | grep -q Usage\n          ./src/bpftool -p version | \\\n              tee /dev/stderr | \\\n              jq --exit-status \".features | .libbfd and (.llvm | not)\"\n\n      - name: Build bpftool, with libbfd, static build\n",
                    "rendered": {
                      "text": "          make -j -C src V=1\n          ./src/bpftool 2>&1 | grep -q Usage\n          ./src/bpftool -p version | \\\n              tee /dev/stderr | \\\n              jq --exit-status \".features | .libbfd and (.llvm | not)\"\n\n      - name: Build bpftool, with libbfd, static build\n",
                      "markdown": "`          make -j -C src V=1\n          ./src/bpftool 2>&1 | grep -q Usage\n          ./src/bpftool -p version | \\\n              tee /dev/stderr | \\\n              jq --exit-status \".features | .libbfd and (.llvm | not)\"\n\n      - name: Build bpftool, with libbfd, static build\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 30,
                  "endLine": 76,
                  "endColumn": 36,
                  "snippet": {
                    "text": "          sudo apt-get remove -y llvm-\"${CLANG_VERSION}\"-dev\n          make -C src clean\n          make -j -C src V=1\n          ./src/bpftool 2>&1 | grep -q Usage\n          ./src/bpftool -p version | \\\n              tee /dev/stderr | \\\n              jq --exit-status \".features | .libbfd and (.llvm | not)\"\n",
                    "rendered": {
                      "text": "          sudo apt-get remove -y llvm-\"${CLANG_VERSION}\"-dev\n          make -C src clean\n          make -j -C src V=1\n          ./src/bpftool 2>&1 | grep -q Usage\n          ./src/bpftool -p version | \\\n              tee /dev/stderr | \\\n              jq --exit-status \".features | .libbfd and (.llvm | not)\"\n",
                      "markdown": "`          sudo apt-get remove -y llvm-\"${CLANG_VERSION}\"-dev\n          make -C src clean\n          make -j -C src V=1\n          ./src/bpftool 2>&1 | grep -q Usage\n          ./src/bpftool -p version | \\\n              tee /dev/stderr | \\\n              jq --exit-status \".features | .libbfd and (.llvm | not)\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 14,
                  "endLine": 73,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n      - name: Build bpftool, with fallback to libbfd disassembler\n        run: |\n          sudo apt-get remove -y llvm-\"${CLANG_VERSION}\"-dev\n          make -C src clean\n          make -j -C src V=1\n          ./src/bpftool 2>&1 | grep -q Usage\n",
                    "rendered": {
                      "text": "\n      - name: Build bpftool, with fallback to libbfd disassembler\n        run: |\n          sudo apt-get remove -y llvm-\"${CLANG_VERSION}\"-dev\n          make -C src clean\n          make -j -C src V=1\n          ./src/bpftool 2>&1 | grep -q Usage\n",
                      "markdown": "`\n      - name: Build bpftool, with fallback to libbfd disassembler\n        run: |\n          sudo apt-get remove -y llvm-\"${CLANG_VERSION}\"-dev\n          make -C src clean\n          make -j -C src V=1\n          ./src/bpftool 2>&1 | grep -q Usage\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 13,
                  "endLine": 68,
                  "endColumn": 18,
                  "snippet": {
                    "text": "          LLVM=1 make -j -C src V=1\n          ./src/bpftool 2>&1 | grep -q Usage\n          ./src/bpftool -p version | \\\n              tee /dev/stderr | \\\n              jq --exit-status \".features | ${FEATURES}\"\n\n      - name: Build bpftool, with fallback to libbfd disassembler\n",
                    "rendered": {
                      "text": "          LLVM=1 make -j -C src V=1\n          ./src/bpftool 2>&1 | grep -q Usage\n          ./src/bpftool -p version | \\\n              tee /dev/stderr | \\\n              jq --exit-status \".features | ${FEATURES}\"\n\n      - name: Build bpftool, with fallback to libbfd disassembler\n",
                      "markdown": "`          LLVM=1 make -j -C src V=1\n          ./src/bpftool 2>&1 | grep -q Usage\n          ./src/bpftool -p version | \\\n              tee /dev/stderr | \\\n              jq --exit-status \".features | ${FEATURES}\"\n\n      - name: Build bpftool, with fallback to libbfd disassembler\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 30,
                  "endLine": 66,
                  "endColumn": 36,
                  "snippet": {
                    "text": "        run: |\n          make -C src clean\n          LLVM=1 make -j -C src V=1\n          ./src/bpftool 2>&1 | grep -q Usage\n          ./src/bpftool -p version | \\\n              tee /dev/stderr | \\\n              jq --exit-status \".features | ${FEATURES}\"\n",
                    "rendered": {
                      "text": "        run: |\n          make -C src clean\n          LLVM=1 make -j -C src V=1\n          ./src/bpftool 2>&1 | grep -q Usage\n          ./src/bpftool -p version | \\\n              tee /dev/stderr | \\\n              jq --exit-status \".features | ${FEATURES}\"\n",
                      "markdown": "`        run: |\n          make -C src clean\n          LLVM=1 make -j -C src V=1\n          ./src/bpftool 2>&1 | grep -q Usage\n          ./src/bpftool -p version | \\\n              tee /dev/stderr | \\\n              jq --exit-status \".features | ${FEATURES}\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 13,
                  "endLine": 59,
                  "endColumn": 18,
                  "snippet": {
                    "text": "          make -j -C src V=1\n          ./src/bpftool 2>&1 | grep -q Usage\n          ./src/bpftool -p version | \\\n              tee /dev/stderr | \\\n              jq --exit-status \".features | ${FEATURES}\"\n\n      - name: Build bpftool, with clang\n",
                    "rendered": {
                      "text": "          make -j -C src V=1\n          ./src/bpftool 2>&1 | grep -q Usage\n          ./src/bpftool -p version | \\\n              tee /dev/stderr | \\\n              jq --exit-status \".features | ${FEATURES}\"\n\n      - name: Build bpftool, with clang\n",
                      "markdown": "`          make -j -C src V=1\n          ./src/bpftool 2>&1 | grep -q Usage\n          ./src/bpftool -p version | \\\n              tee /dev/stderr | \\\n              jq --exit-status \".features | ${FEATURES}\"\n\n      - name: Build bpftool, with clang\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 30,
                  "endLine": 57,
                  "endColumn": 36,
                  "snippet": {
                    "text": "      - name: Build bpftool (default LLVM disassembler)\n        run: |\n          make -j -C src V=1\n          ./src/bpftool 2>&1 | grep -q Usage\n          ./src/bpftool -p version | \\\n              tee /dev/stderr | \\\n              jq --exit-status \".features | ${FEATURES}\"\n",
                    "rendered": {
                      "text": "      - name: Build bpftool (default LLVM disassembler)\n        run: |\n          make -j -C src V=1\n          ./src/bpftool 2>&1 | grep -q Usage\n          ./src/bpftool -p version | \\\n              tee /dev/stderr | \\\n              jq --exit-status \".features | ${FEATURES}\"\n",
                      "markdown": "`      - name: Build bpftool (default LLVM disassembler)\n        run: |\n          make -j -C src V=1\n          ./src/bpftool 2>&1 | grep -q Usage\n          ./src/bpftool -p version | \\\n              tee /dev/stderr | \\\n              jq --exit-status \".features | ${FEATURES}\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 64,
                  "endLine": 47,
                  "endColumn": 70,
                  "snippet": {
                    "text": "          sudo apt-get install -y \\\n              libbfd-dev libcap-dev libelf-dev libiberty-dev python3-docutils\n          # clang/LLVM are already installed, but we're missing some aliases.\n          CLANG_VERSION=\"$(echo '__clang_major__' | clang -E - | tail -n 1)\"\n          sudo update-alternatives \\\n              --install /usr/bin/llvm-config llvm-config /usr/bin/llvm-config-\"${CLANG_VERSION}\" 50 \\\n              --slave /usr/bin/llvm-ar llvm-ar /usr/bin/llvm-ar-\"${CLANG_VERSION}\" \\\n",
                    "rendered": {
                      "text": "          sudo apt-get install -y \\\n              libbfd-dev libcap-dev libelf-dev libiberty-dev python3-docutils\n          # clang/LLVM are already installed, but we're missing some aliases.\n          CLANG_VERSION=\"$(echo '__clang_major__' | clang -E - | tail -n 1)\"\n          sudo update-alternatives \\\n              --install /usr/bin/llvm-config llvm-config /usr/bin/llvm-config-\"${CLANG_VERSION}\" 50 \\\n              --slave /usr/bin/llvm-ar llvm-ar /usr/bin/llvm-ar-\"${CLANG_VERSION}\" \\\n",
                      "markdown": "`          sudo apt-get install -y \\\n              libbfd-dev libcap-dev libelf-dev libiberty-dev python3-docutils\n          # clang/LLVM are already installed, but we're missing some aliases.\n          CLANG_VERSION=\"$(echo '__clang_major__' | clang -E - | tail -n 1)\"\n          sudo update-alternatives \\\n              --install /usr/bin/llvm-config llvm-config /usr/bin/llvm-config-\"${CLANG_VERSION}\" 50 \\\n              --slave /usr/bin/llvm-ar llvm-ar /usr/bin/llvm-ar-\"${CLANG_VERSION}\" \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 14,
                  "endLine": 44,
                  "endColumn": 23,
                  "snippet": {
                    "text": "      - name: Install dependencies\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y \\\n              libbfd-dev libcap-dev libelf-dev libiberty-dev python3-docutils\n          # clang/LLVM are already installed, but we're missing some aliases.\n          CLANG_VERSION=\"$(echo '__clang_major__' | clang -E - | tail -n 1)\"\n",
                    "rendered": {
                      "text": "      - name: Install dependencies\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y \\\n              libbfd-dev libcap-dev libelf-dev libiberty-dev python3-docutils\n          # clang/LLVM are already installed, but we're missing some aliases.\n          CLANG_VERSION=\"$(echo '__clang_major__' | clang -E - | tail -n 1)\"\n",
                      "markdown": "`      - name: Install dependencies\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y \\\n              libbfd-dev libcap-dev libelf-dev libiberty-dev python3-docutils\n          # clang/LLVM are already installed, but we're missing some aliases.\n          CLANG_VERSION=\"$(echo '__clang_major__' | clang -E - | tail -n 1)\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 14,
                  "endLine": 43,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n      - name: Install dependencies\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y \\\n              libbfd-dev libcap-dev libelf-dev libiberty-dev python3-docutils\n          # clang/LLVM are already installed, but we're missing some aliases.\n",
                    "rendered": {
                      "text": "\n      - name: Install dependencies\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y \\\n              libbfd-dev libcap-dev libelf-dev libiberty-dev python3-docutils\n          # clang/LLVM are already installed, but we're missing some aliases.\n",
                      "markdown": "`\n      - name: Install dependencies\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y \\\n              libbfd-dev libcap-dev libelf-dev libiberty-dev python3-docutils\n          # clang/LLVM are already installed, but we're missing some aliases.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 14,
                  "endLine": 38,
                  "endColumn": 23,
                  "snippet": {
                    "text": "      - name: Use clang-12 and not clang-11 for older Ubuntu\n        if: matrix.os == 'ubuntu-20.04'\n        run: |\n          sudo apt-get remove -y clang-11 llvm-11\n          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-12 50\n\n      - name: Install dependencies\n",
                    "rendered": {
                      "text": "      - name: Use clang-12 and not clang-11 for older Ubuntu\n        if: matrix.os == 'ubuntu-20.04'\n        run: |\n          sudo apt-get remove -y clang-11 llvm-11\n          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-12 50\n\n      - name: Install dependencies\n",
                      "markdown": "`      - name: Use clang-12 and not clang-11 for older Ubuntu\n        if: matrix.os == 'ubuntu-20.04'\n        run: |\n          sudo apt-get remove -y clang-11 llvm-11\n          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-12 50\n\n      - name: Install dependencies\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/mailmap-update.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\nset -eu\n\nusage () {\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\nset -eu\n\nusage () {\n",
                      "markdown": "`#!/usr/bin/env bash\n\nset -eu\n\nusage () {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/mailmap-update.sh"
                },
                "region": {
                  "startLine": 36,
                  "endLine": 37,
                  "endColumn": 5,
                  "snippet": {
                    "text": "while read -r email; do\n    grep_lines \"${email}$\" \"${LINUX_MAILMAP}\" >> \"${tmpfile}\"\ndone < <(git log --format='<%ae>' | sort -u)\n\nsort -u \"${tmpfile}\" > \"${BPFTOOL_MAILMAP}\"\n",
                    "rendered": {
                      "text": "while read -r email; do\n    grep_lines \"${email}$\" \"${LINUX_MAILMAP}\" >> \"${tmpfile}\"\ndone < <(git log --format='<%ae>' | sort -u)\n\nsort -u \"${tmpfile}\" > \"${BPFTOOL_MAILMAP}\"\n",
                      "markdown": "`while read -r email; do\n    grep_lines \"${email}$\" \"${LINUX_MAILMAP}\" >> \"${tmpfile}\"\ndone < <(git log --format='<%ae>' | sort -u)\n\nsort -u \"${tmpfile}\" > \"${BPFTOOL_MAILMAP}\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/mailmap-update.sh"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 35,
                  "endLine": 35,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\nwhile read -r email; do\n    grep_lines \"${email}$\" \"${LINUX_MAILMAP}\" >> \"${tmpfile}\"\ndone < <(git log --format='<%ae>' | sort -u)\n\nsort -u \"${tmpfile}\" > \"${BPFTOOL_MAILMAP}\"\n",
                    "rendered": {
                      "text": "\nwhile read -r email; do\n    grep_lines \"${email}$\" \"${LINUX_MAILMAP}\" >> \"${tmpfile}\"\ndone < <(git log --format='<%ae>' | sort -u)\n\nsort -u \"${tmpfile}\" > \"${BPFTOOL_MAILMAP}\"\n",
                      "markdown": "`\nwhile read -r email; do\n    grep_lines \"${email}$\" \"${LINUX_MAILMAP}\" >> \"${tmpfile}\"\ndone < <(git log --format='<%ae>' | sort -u)\n\nsort -u \"${tmpfile}\" > \"${BPFTOOL_MAILMAP}\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/mailmap-update.sh"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 3,
                  "endLine": 30,
                  "endColumn": 9,
                  "snippet": {
                    "text": "grep_lines() {\n    local pattern=\"$1\"\n    local file=\"$2\"\n    grep \"${pattern}\" \"${file}\" || true\n}\n\nwhile read -r email; do\n",
                    "rendered": {
                      "text": "grep_lines() {\n    local pattern=\"$1\"\n    local file=\"$2\"\n    grep \"${pattern}\" \"${file}\" || true\n}\n\nwhile read -r email; do\n",
                      "markdown": "`grep_lines() {\n    local pattern=\"$1\"\n    local file=\"$2\"\n    grep \"${pattern}\" \"${file}\" || true\n}\n\nwhile read -r email; do\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/scripts/mailmap-update.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\nset -eu\n\nusage () {\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\nset -eu\n\nusage () {\n",
                      "markdown": "`#!/usr/bin/env bash\n\nset -eu\n\nusage () {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/Dockerfile"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 8,
                  "endLine": 31,
                  "endColumn": 16,
                  "snippet": {
                    "text": "FROM ubuntu:22.04\nRUN \\\n\texport DEBIAN_FRONTEND=noninteractive && \\\n\tapt-get update && \\\n\tapt-get -y install --no-install-recommends \\\n\t\tlibelf1 \\\n\t\tllvm && \\\n",
                    "rendered": {
                      "text": "FROM ubuntu:22.04\nRUN \\\n\texport DEBIAN_FRONTEND=noninteractive && \\\n\tapt-get update && \\\n\tapt-get -y install --no-install-recommends \\\n\t\tlibelf1 \\\n\t\tllvm && \\\n",
                      "markdown": "`FROM ubuntu:22.04\nRUN \\\n\texport DEBIAN_FRONTEND=noninteractive && \\\n\tapt-get update && \\\n\tapt-get -y install --no-install-recommends \\\n\t\tlibelf1 \\\n\t\tllvm && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/Dockerfile"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 8,
                  "endLine": 12,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\nRUN \\\n\texport DEBIAN_FRONTEND=noninteractive && \\\n\tapt-get update && \\\n\tapt-get -y install --no-install-recommends \\\n\t\tbuild-essential \\\n\t\tlibelf-dev \\\n",
                    "rendered": {
                      "text": "\nRUN \\\n\texport DEBIAN_FRONTEND=noninteractive && \\\n\tapt-get update && \\\n\tapt-get -y install --no-install-recommends \\\n\t\tbuild-essential \\\n\t\tlibelf-dev \\\n",
                      "markdown": "`\nRUN \\\n\texport DEBIAN_FRONTEND=noninteractive && \\\n\tapt-get update && \\\n\tapt-get -y install --no-install-recommends \\\n\t\tbuild-essential \\\n\t\tlibelf-dev \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/Dockerfile"
                },
                "region": {
                  "startLine": 32,
                  "endLine": 32,
                  "endColumn": 9,
                  "snippet": {
                    "text": "RUN \\\n\texport DEBIAN_FRONTEND=noninteractive && \\\n\tapt-get update && \\\n\tapt-get -y install --no-install-recommends \\\n\t\tlibelf1 \\\n\t\tllvm && \\\n\trm -rf /var/lib/apt/lists/*\n",
                    "rendered": {
                      "text": "RUN \\\n\texport DEBIAN_FRONTEND=noninteractive && \\\n\tapt-get update && \\\n\tapt-get -y install --no-install-recommends \\\n\t\tlibelf1 \\\n\t\tllvm && \\\n\trm -rf /var/lib/apt/lists/*\n",
                      "markdown": "`RUN \\\n\texport DEBIAN_FRONTEND=noninteractive && \\\n\tapt-get update && \\\n\tapt-get -y install --no-install-recommends \\\n\t\tlibelf1 \\\n\t\tllvm && \\\n\trm -rf /var/lib/apt/lists/*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/Dockerfile"
                },
                "region": {
                  "startLine": 31,
                  "endLine": 31,
                  "endColumn": 9,
                  "snippet": {
                    "text": "FROM ubuntu:22.04\nRUN \\\n\texport DEBIAN_FRONTEND=noninteractive && \\\n\tapt-get update && \\\n\tapt-get -y install --no-install-recommends \\\n\t\tlibelf1 \\\n\t\tllvm && \\\n",
                    "rendered": {
                      "text": "FROM ubuntu:22.04\nRUN \\\n\texport DEBIAN_FRONTEND=noninteractive && \\\n\tapt-get update && \\\n\tapt-get -y install --no-install-recommends \\\n\t\tlibelf1 \\\n\t\tllvm && \\\n",
                      "markdown": "`FROM ubuntu:22.04\nRUN \\\n\texport DEBIAN_FRONTEND=noninteractive && \\\n\tapt-get update && \\\n\tapt-get -y install --no-install-recommends \\\n\t\tlibelf1 \\\n\t\tllvm && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/Dockerfile"
                },
                "region": {
                  "startLine": 13,
                  "endLine": 13,
                  "endColumn": 9,
                  "snippet": {
                    "text": "RUN \\\n\texport DEBIAN_FRONTEND=noninteractive && \\\n\tapt-get update && \\\n\tapt-get -y install --no-install-recommends \\\n\t\tbuild-essential \\\n\t\tlibelf-dev \\\n\t\tlibz-dev \\\n",
                    "rendered": {
                      "text": "RUN \\\n\texport DEBIAN_FRONTEND=noninteractive && \\\n\tapt-get update && \\\n\tapt-get -y install --no-install-recommends \\\n\t\tbuild-essential \\\n\t\tlibelf-dev \\\n\t\tlibz-dev \\\n",
                      "markdown": "`RUN \\\n\texport DEBIAN_FRONTEND=noninteractive && \\\n\tapt-get update && \\\n\tapt-get -y install --no-install-recommends \\\n\t\tbuild-essential \\\n\t\tlibelf-dev \\\n\t\tlibz-dev \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/Dockerfile"
                },
                "region": {
                  "startLine": 12,
                  "endLine": 12,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\nRUN \\\n\texport DEBIAN_FRONTEND=noninteractive && \\\n\tapt-get update && \\\n\tapt-get -y install --no-install-recommends \\\n\t\tbuild-essential \\\n\t\tlibelf-dev \\\n",
                    "rendered": {
                      "text": "\nRUN \\\n\texport DEBIAN_FRONTEND=noninteractive && \\\n\tapt-get update && \\\n\tapt-get -y install --no-install-recommends \\\n\t\tbuild-essential \\\n\t\tlibelf-dev \\\n",
                      "markdown": "`\nRUN \\\n\texport DEBIAN_FRONTEND=noninteractive && \\\n\tapt-get update && \\\n\tapt-get -y install --no-install-recommends \\\n\t\tbuild-essential \\\n\t\tlibelf-dev \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/Dockerfile"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 7,
                  "endLine": 4,
                  "endColumn": 15,
                  "snippet": {
                    "text": "# With this Dockerfile, you can create a container image:\n#     $ docker build -f Dockerfile -t bpftool .\n# And then use it:\n#     $ docker run --rm -ti --privileged --pid=host bpftool prog\n\n# hadolint global ignore=DL3008\n\n",
                    "rendered": {
                      "text": "# With this Dockerfile, you can create a container image:\n#     $ docker build -f Dockerfile -t bpftool .\n# And then use it:\n#     $ docker run --rm -ti --privileged --pid=host bpftool prog\n\n# hadolint global ignore=DL3008\n\n",
                      "markdown": "`# With this Dockerfile, you can create a container image:\n#     $ docker build -f Dockerfile -t bpftool .\n# And then use it:\n#     $ docker run --rm -ti --privileged --pid=host bpftool prog\n\n# hadolint global ignore=DL3008\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/Dockerfile"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 7,
                  "endLine": 2,
                  "endColumn": 15,
                  "snippet": {
                    "text": "# With this Dockerfile, you can create a container image:\n#     $ docker build -f Dockerfile -t bpftool .\n# And then use it:\n#     $ docker run --rm -ti --privileged --pid=host bpftool prog\n\n",
                    "rendered": {
                      "text": "# With this Dockerfile, you can create a container image:\n#     $ docker build -f Dockerfile -t bpftool .\n# And then use it:\n#     $ docker run --rm -ti --privileged --pid=host bpftool prog\n\n",
                      "markdown": "`# With this Dockerfile, you can create a container image:\n#     $ docker build -f Dockerfile -t bpftool .\n# And then use it:\n#     $ docker run --rm -ti --privileged --pid=host bpftool prog\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/README.md"
                },
                "region": {
                  "startLine": 198,
                  "startColumn": 11,
                  "endLine": 198,
                  "endColumn": 15,
                  "snippet": {
                    "text": "run this script manually and then create a pull request to merge the resulting\ncommits.\n\nTake a look at [the script](scripts/sync-kernel.sh) for the technical details of the process. See also the documentation in [the accompanying README.md](scripts#sync-kernelsh)\n\nLicense\n-------\n",
                    "rendered": {
                      "text": "run this script manually and then create a pull request to merge the resulting\ncommits.\n\nTake a look at [the script](scripts/sync-kernel.sh) for the technical details of the process. See also the documentation in [the accompanying README.md](scripts#sync-kernelsh)\n\nLicense\n-------\n",
                      "markdown": "`run this script manually and then create a pull request to merge the resulting\ncommits.\n\nTake a look at [the script](scripts/sync-kernel.sh) for the technical details of the process. See also the documentation in [the accompanying README.md](scripts#sync-kernelsh)\n\nLicense\n-------\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/README.md"
                },
                "region": {
                  "startLine": 184,
                  "startColumn": 23,
                  "endLine": 184,
                  "endColumn": 27,
                  "snippet": {
                    "text": "`tools/bpf/bpftool`][tools-bpf-bpftool] directory, plus its few dependencies\nfrom under `kernel/bpf/`, and its supporting header files. Some of these header\nfiles, `include/linux/*.h` on the current repository, are reduced versions of\ntheir counterpart files at [bpf-next][bpf-next]'s `tools/include/linux/*.h` to\nmake compilation successful.\n\nSynchronization between the two repositories happens every few weeks or so.\n",
                    "rendered": {
                      "text": "`tools/bpf/bpftool`][tools-bpf-bpftool] directory, plus its few dependencies\nfrom under `kernel/bpf/`, and its supporting header files. Some of these header\nfiles, `include/linux/*.h` on the current repository, are reduced versions of\ntheir counterpart files at [bpf-next][bpf-next]'s `tools/include/linux/*.h` to\nmake compilation successful.\n\nSynchronization between the two repositories happens every few weeks or so.\n",
                      "markdown": "``tools/bpf/bpftool`][tools-bpf-bpftool] directory, plus its few dependencies\nfrom under `kernel/bpf/`, and its supporting header files. Some of these header\nfiles, `include/linux/*.h` on the current repository, are reduced versions of\ntheir counterpart files at [bpf-next][bpf-next]'s `tools/include/linux/*.h` to\nmake compilation successful.\n\nSynchronization between the two repositories happens every few weeks or so.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/README.md"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 15,
                  "endLine": 86,
                  "endColumn": 23,
                  "snippet": {
                    "text": "the submodule by running the following command from within the repository:\n\n```console\n$ git submodule update --init\n```\n\n### Build bpftool\n",
                    "rendered": {
                      "text": "the submodule by running the following command from within the repository:\n\n```console\n$ git submodule update --init\n```\n\n### Build bpftool\n",
                      "markdown": "`the submodule by running the following command from within the repository:\n\n```console\n$ git submodule update --init\n```\n\n### Build bpftool\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/README.md"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 26,
                  "endLine": 49,
                  "endColumn": 35,
                  "snippet": {
                    "text": "PRs and issues should be opened only for dealing with issues related to\ncomponents specific to the bpftool mirror repository (such as the\nsynchronization script or the CI workflows). The project maintainers also use\nGitHub issues as a generic tracker for bpftool, but issues should first be\nreported on the mailing list nonetheless.\n\n[lore]: https://lore.kernel.org/bpf/\n",
                    "rendered": {
                      "text": "PRs and issues should be opened only for dealing with issues related to\ncomponents specific to the bpftool mirror repository (such as the\nsynchronization script or the CI workflows). The project maintainers also use\nGitHub issues as a generic tracker for bpftool, but issues should first be\nreported on the mailing list nonetheless.\n\n[lore]: https://lore.kernel.org/bpf/\n",
                      "markdown": "`PRs and issues should be opened only for dealing with issues related to\ncomponents specific to the bpftool mirror repository (such as the\nsynchronization script or the CI workflows). The project maintainers also use\nGitHub issues as a generic tracker for bpftool, but issues should first be\nreported on the mailing list nonetheless.\n\n[lore]: https://lore.kernel.org/bpf/\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/README.md"
                },
                "region": {
                  "startLine": 195,
                  "startColumn": 8,
                  "endLine": 195,
                  "endColumn": 16,
                  "snippet": {
                    "text": "The synchronization process is semi-automated: the script in\n`scripts/sync-kernel.sh` cherry-picks, adjusts and commits all changes from\n`bpf-next` to a local version of the bpftool repository. However, maintainers\nrun this script manually and then create a pull request to merge the resulting\ncommits.\n\nTake a look at [the script](scripts/sync-kernel.sh) for the technical details of the process. See also the documentation in [the accompanying README.md](scripts#sync-kernelsh)\n",
                    "rendered": {
                      "text": "The synchronization process is semi-automated: the script in\n`scripts/sync-kernel.sh` cherry-picks, adjusts and commits all changes from\n`bpf-next` to a local version of the bpftool repository. However, maintainers\nrun this script manually and then create a pull request to merge the resulting\ncommits.\n\nTake a look at [the script](scripts/sync-kernel.sh) for the technical details of the process. See also the documentation in [the accompanying README.md](scripts#sync-kernelsh)\n",
                      "markdown": "`The synchronization process is semi-automated: the script in\n`scripts/sync-kernel.sh` cherry-picks, adjusts and commits all changes from\n`bpf-next` to a local version of the bpftool repository. However, maintainers\nrun this script manually and then create a pull request to merge the resulting\ncommits.\n\nTake a look at [the script](scripts/sync-kernel.sh) for the technical details of the process. See also the documentation in [the accompanying README.md](scripts#sync-kernelsh)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/README.md"
                },
                "region": {
                  "startLine": 192,
                  "startColumn": 50,
                  "endLine": 192,
                  "endColumn": 58,
                  "snippet": {
                    "text": "follow libbpf's. When the libbpf repo syncs up with bpf-next, bpftool's repo\nusually follows within the next few days.\n\nThe synchronization process is semi-automated: the script in\n`scripts/sync-kernel.sh` cherry-picks, adjusts and commits all changes from\n`bpf-next` to a local version of the bpftool repository. However, maintainers\nrun this script manually and then create a pull request to merge the resulting\n",
                    "rendered": {
                      "text": "follow libbpf's. When the libbpf repo syncs up with bpf-next, bpftool's repo\nusually follows within the next few days.\n\nThe synchronization process is semi-automated: the script in\n`scripts/sync-kernel.sh` cherry-picks, adjusts and commits all changes from\n`bpf-next` to a local version of the bpftool repository. However, maintainers\nrun this script manually and then create a pull request to merge the resulting\n",
                      "markdown": "`follow libbpf's. When the libbpf repo syncs up with bpf-next, bpftool's repo\nusually follows within the next few days.\n\nThe synchronization process is semi-automated: the script in\n`scripts/sync-kernel.sh` cherry-picks, adjusts and commits all changes from\n`bpf-next` to a local version of the bpftool repository. However, maintainers\nrun this script manually and then create a pull request to merge the resulting\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/README.md"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 7,
                  "endLine": 147,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    - Alternatively, clone and build the LLVM libraries locally.\n\n      ```console\n      $ git clone https://github.com/llvm/llvm-project.git\n      $ mkdir llvm_build\n      $ cmake -S llvm-project/llvm -B llvm_build -DCMAKE_BUILD_TYPE=Release\n      $ make -j -C llvm_build llvm-config llvm-libraries\n",
                    "rendered": {
                      "text": "    - Alternatively, clone and build the LLVM libraries locally.\n\n      ```console\n      $ git clone https://github.com/llvm/llvm-project.git\n      $ mkdir llvm_build\n      $ cmake -S llvm-project/llvm -B llvm_build -DCMAKE_BUILD_TYPE=Release\n      $ make -j -C llvm_build llvm-config llvm-libraries\n",
                      "markdown": "`    - Alternatively, clone and build the LLVM libraries locally.\n\n      ```console\n      $ git clone https://github.com/llvm/llvm-project.git\n      $ mkdir llvm_build\n      $ cmake -S llvm-project/llvm -B llvm_build -DCMAKE_BUILD_TYPE=Release\n      $ make -j -C llvm_build llvm-config llvm-libraries\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/README.md"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 7,
                  "endLine": 141,
                  "endColumn": 11,
                  "snippet": {
                    "text": "      ```console\n      $ curl -LO https://github.com/llvm/llvm-project/releases/download/llvmorg-15.0.0/clang+llvm-15.0.0-x86_64-linux-gnu-rhel-8.4.tar.xz\n      $ tar xvf clang+llvm-15.0.0-x86_64-linux-gnu-rhel-8.4.tar.xz\n      $ mv clang+llvm-15.0.0-x86_64-linux-gnu-rhel-8.4 llvm_build\n      ```\n\n    - Alternatively, clone and build the LLVM libraries locally.\n",
                    "rendered": {
                      "text": "      ```console\n      $ curl -LO https://github.com/llvm/llvm-project/releases/download/llvmorg-15.0.0/clang+llvm-15.0.0-x86_64-linux-gnu-rhel-8.4.tar.xz\n      $ tar xvf clang+llvm-15.0.0-x86_64-linux-gnu-rhel-8.4.tar.xz\n      $ mv clang+llvm-15.0.0-x86_64-linux-gnu-rhel-8.4 llvm_build\n      ```\n\n    - Alternatively, clone and build the LLVM libraries locally.\n",
                      "markdown": "`      ```console\n      $ curl -LO https://github.com/llvm/llvm-project/releases/download/llvmorg-15.0.0/clang+llvm-15.0.0-x86_64-linux-gnu-rhel-8.4.tar.xz\n      $ tar xvf clang+llvm-15.0.0-x86_64-linux-gnu-rhel-8.4.tar.xz\n      $ mv clang+llvm-15.0.0-x86_64-linux-gnu-rhel-8.4 llvm_build\n      ```\n\n    - Alternatively, clone and build the LLVM libraries locally.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/README.md"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 7,
                  "endLine": 140,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n      ```console\n      $ curl -LO https://github.com/llvm/llvm-project/releases/download/llvmorg-15.0.0/clang+llvm-15.0.0-x86_64-linux-gnu-rhel-8.4.tar.xz\n      $ tar xvf clang+llvm-15.0.0-x86_64-linux-gnu-rhel-8.4.tar.xz\n      $ mv clang+llvm-15.0.0-x86_64-linux-gnu-rhel-8.4 llvm_build\n      ```\n\n",
                    "rendered": {
                      "text": "\n      ```console\n      $ curl -LO https://github.com/llvm/llvm-project/releases/download/llvmorg-15.0.0/clang+llvm-15.0.0-x86_64-linux-gnu-rhel-8.4.tar.xz\n      $ tar xvf clang+llvm-15.0.0-x86_64-linux-gnu-rhel-8.4.tar.xz\n      $ mv clang+llvm-15.0.0-x86_64-linux-gnu-rhel-8.4 llvm_build\n      ```\n\n",
                      "markdown": "`\n      ```console\n      $ curl -LO https://github.com/llvm/llvm-project/releases/download/llvmorg-15.0.0/clang+llvm-15.0.0-x86_64-linux-gnu-rhel-8.4.tar.xz\n      $ tar xvf clang+llvm-15.0.0-x86_64-linux-gnu-rhel-8.4.tar.xz\n      $ mv clang+llvm-15.0.0-x86_64-linux-gnu-rhel-8.4 llvm_build\n      ```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/README.md"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 7,
                  "endLine": 139,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      platform, for example on x86_64 with LLVM 15.0.0:\n\n      ```console\n      $ curl -LO https://github.com/llvm/llvm-project/releases/download/llvmorg-15.0.0/clang+llvm-15.0.0-x86_64-linux-gnu-rhel-8.4.tar.xz\n      $ tar xvf clang+llvm-15.0.0-x86_64-linux-gnu-rhel-8.4.tar.xz\n      $ mv clang+llvm-15.0.0-x86_64-linux-gnu-rhel-8.4 llvm_build\n      ```\n",
                    "rendered": {
                      "text": "      platform, for example on x86_64 with LLVM 15.0.0:\n\n      ```console\n      $ curl -LO https://github.com/llvm/llvm-project/releases/download/llvmorg-15.0.0/clang+llvm-15.0.0-x86_64-linux-gnu-rhel-8.4.tar.xz\n      $ tar xvf clang+llvm-15.0.0-x86_64-linux-gnu-rhel-8.4.tar.xz\n      $ mv clang+llvm-15.0.0-x86_64-linux-gnu-rhel-8.4 llvm_build\n      ```\n",
                      "markdown": "`      platform, for example on x86_64 with LLVM 15.0.0:\n\n      ```console\n      $ curl -LO https://github.com/llvm/llvm-project/releases/download/llvmorg-15.0.0/clang+llvm-15.0.0-x86_64-linux-gnu-rhel-8.4.tar.xz\n      $ tar xvf clang+llvm-15.0.0-x86_64-linux-gnu-rhel-8.4.tar.xz\n      $ mv clang+llvm-15.0.0-x86_64-linux-gnu-rhel-8.4 llvm_build\n      ```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/README.md"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 1,
                  "endLine": 86,
                  "endColumn": 6,
                  "snippet": {
                    "text": "the submodule by running the following command from within the repository:\n\n```console\n$ git submodule update --init\n```\n\n### Build bpftool\n",
                    "rendered": {
                      "text": "the submodule by running the following command from within the repository:\n\n```console\n$ git submodule update --init\n```\n\n### Build bpftool\n",
                      "markdown": "`the submodule by running the following command from within the repository:\n\n```console\n$ git submodule update --init\n```\n\n### Build bpftool\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/README.md"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 1,
                  "endLine": 79,
                  "endColumn": 6,
                  "snippet": {
                    "text": "bpftool:\n\n```console\n$ git clone --recurse-submodules https://github.com/libbpf/bpftool.git\n```\n\nAlternatively, if you have already cloned the repository, you can initialize\n",
                    "rendered": {
                      "text": "bpftool:\n\n```console\n$ git clone --recurse-submodules https://github.com/libbpf/bpftool.git\n```\n\nAlternatively, if you have already cloned the repository, you can initialize\n",
                      "markdown": "`bpftool:\n\n```console\n$ git clone --recurse-submodules https://github.com/libbpf/bpftool.git\n```\n\nAlternatively, if you have already cloned the repository, you can initialize\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/README.md"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 15,
                  "endLine": 48,
                  "endColumn": 23,
                  "snippet": {
                    "text": "happily try to help you with whatever issue you encounter. This repository's\nPRs and issues should be opened only for dealing with issues related to\ncomponents specific to the bpftool mirror repository (such as the\nsynchronization script or the CI workflows). The project maintainers also use\nGitHub issues as a generic tracker for bpftool, but issues should first be\nreported on the mailing list nonetheless.\n\n",
                    "rendered": {
                      "text": "happily try to help you with whatever issue you encounter. This repository's\nPRs and issues should be opened only for dealing with issues related to\ncomponents specific to the bpftool mirror repository (such as the\nsynchronization script or the CI workflows). The project maintainers also use\nGitHub issues as a generic tracker for bpftool, but issues should first be\nreported on the mailing list nonetheless.\n\n",
                      "markdown": "`happily try to help you with whatever issue you encounter. This repository's\nPRs and issues should be opened only for dealing with issues related to\ncomponents specific to the bpftool mirror repository (such as the\nsynchronization script or the CI workflows). The project maintainers also use\nGitHub issues as a generic tracker for bpftool, but issues should first be\nreported on the mailing list nonetheless.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bpftool.zip/README.md"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 73,
                  "endLine": 20,
                  "snippet": {
                    "text": "[build]: https://github.com/libbpf/bpftool/actions/workflows/build.yaml\n\nThis is the official home for bpftool. _Please use this Github repository for\nbuilding and packaging bpftool and when using it in your projects through Git\nsubmodule._\n\nThe _authoritative source code_ of bpftool is developed as part of the\n[bpf-next Linux source tree][bpf-next] under [the `tools/bpf/bpftool`\n",
                    "rendered": {
                      "text": "[build]: https://github.com/libbpf/bpftool/actions/workflows/build.yaml\n\nThis is the official home for bpftool. _Please use this Github repository for\nbuilding and packaging bpftool and when using it in your projects through Git\nsubmodule._\n\nThe _authoritative source code_ of bpftool is developed as part of the\n[bpf-next Linux source tree][bpf-next] under [the `tools/bpf/bpftool`\n",
                      "markdown": "`[build]: https://github.com/libbpf/bpftool/actions/workflows/build.yaml\n\nThis is the official home for bpftool. _Please use this Github repository for\nbuilding and packaging bpftool and when using it in your projects through Git\nsubmodule._\n\nThe _authoritative source code_ of bpftool is developed as part of the\n[bpf-next Linux source tree][bpf-next] under [the `tools/bpf/bpftool`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}